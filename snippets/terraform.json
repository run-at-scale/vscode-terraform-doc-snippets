{
  "aci-data-cloudapp": {
    "description": "Defines cloudapp",
    "prefix": "tf-aci-data-cloudapp",
    "body": [
      "data \"aci_cloud_applicationcontainer\" \"sample_app\" {",
      "  tenant_dn  = \"${aci_tenant.dev_tenant.id}\"",
      "  name       = \"demo_cloud_app\"",
      "}"
    ]
  },
  "aci-data-cloudawsprovider": {
    "description": "Defines cloudawsprovider",
    "prefix": "tf-aci-data-cloudawsprovider",
    "body": [
      "data \"aci_cloud_aws_provider\" \"aws_prov\" {",
      "  tenant_dn  = \"${aci_tenant.dev_tenant.id}\"",
      "}"
    ]
  },
  "aci-data-cloudbgpasp": {
    "description": "Defines cloudbgpasp",
    "prefix": "tf-aci-data-cloudbgpasp",
    "body": [
      "data \"aci_autonomous_system_profile\" \"auto_prof\" {",
      "}"
    ]
  },
  "aci-data-cloudcidr": {
    "description": "Defines cloudcidr",
    "prefix": "tf-aci-data-cloudcidr",
    "body": [
      "data \"aci_cloud_cidr_pool\" \"dev_cloud_cidr\" {",
      "",
      "  cloud_context_profile_dn  = \"${aci_cloud_context_profile.dev_ctx_prof.id}\"",
      "  addr  = \"10.0.1.10/28\"",
      "}"
    ]
  },
  "aci-data-clouddomp": {
    "description": "Defines clouddomp",
    "prefix": "tf-aci-data-clouddomp",
    "body": [
      "data \"aci_cloud_domain_profile\" \"default_domp\" {",
      "",
      "}"
    ]
  },
  "aci-data-cloudepg": {
    "description": "Defines cloudepg",
    "prefix": "tf-aci-data-cloudepg",
    "body": [
      "data \"aci_cloud_e_pg\" \"dev_epg\" {",
      "  cloud_applicationcontainer_dn  = \"${aci_cloud_applicationcontainer.sample_app.id}\"",
      "  name                           = \"cloud_dev_epg\"",
      "}"
    ]
  },
  "aci-data-cloudepselector": {
    "description": "Defines cloudepselector",
    "prefix": "tf-aci-data-cloudepselector",
    "body": [
      "data \"aci_cloud_endpoint_selector\" \"dev_ep_select\" {",
      "",
      "  cloud_e_pg_dn  = \"${aci_cloud_e_pg.dev_epg.id}\"",
      "  name           = \"dev_ep_select\"",
      "}"
    ]
  },
  "aci-data-cloudextepg": {
    "description": "Defines cloudextepg",
    "prefix": "tf-aci-data-cloudextepg",
    "body": [
      "data \"aci_cloud_external_e_pg\" \"foo_ext_epg\" {",
      "",
      "  cloud_applicationcontainer_dn  = \"${aci_cloud_applicationcontainer.sample_app.id}\" ",
      "  name                           = \"dev_ext_epg\"",
      "}"
    ]
  },
  "aci-data-cloudextepselector": {
    "description": "Defines cloudextepselector",
    "prefix": "tf-aci-data-cloudextepselector",
    "body": [
      "data \"aci_cloud_endpoint_selectorfor_external_e_pgs\" \"foo_ep_selector\" {",
      "",
      "  cloud_external_e_pg_dn  = \"${aci_cloud_external_e_pg.ext_epg.id}\"",
      "  name                    = \"dev_ext_ep_select\"",
      "}"
    ]
  },
  "aci-data-cloudprovp": {
    "description": "Defines cloudprovp",
    "prefix": "tf-aci-data-cloudprovp",
    "body": [
      "data \"aci_cloud_provider_profile\" \"aws_prof\" {",
      "  vendor  = \"aws\"",
      "}"
    ]
  },
  "aci-data-cloudregion": {
    "description": "Defines cloudregion",
    "prefix": "tf-aci-data-cloudregion",
    "body": [
      "data \"aci_cloud_providers_region\" \"region_aws\" {",
      "",
      "  cloud_provider_profile_dn  = \"${aci_cloud_provider_profile.aws_prov.id}\"",
      "  name                       = \"us-east-1\"",
      "}"
    ]
  },
  "aci-data-cloudsubnet": {
    "description": "Defines cloudsubnet",
    "prefix": "tf-aci-data-cloudsubnet",
    "body": [
      "data \"aci_cloud_subnet\" \"dev_subnet\" {",
      "",
      "  cloud_cidr_pool_dn  = \"${aci_cloud_cidr_pool.dev_cidr_pool.id}\"",
      "  ip                  = \"14.12.0.0/28\"",
      "}"
    ]
  },
  "aci-data-cloudzone": {
    "description": "Defines cloudzone",
    "prefix": "tf-aci-data-cloudzone",
    "body": [
      "data \"aci_cloud_availability_zone\" \"az_us_east_1_aws\" {",
      "",
      "  cloud_providers_region_dn  = \"${aci_cloud_providers_region.region_aws.id}\"",
      "  name                       = \"us-east-1a\"",
      "}"
    ]
  },
  "aci-data-fcifpol": {
    "description": "Defines fcifpol",
    "prefix": "tf-aci-data-fcifpol",
    "body": [
      "data \"aci_interface_fc_policy\" \"test_pol\" {",
      "  name  = \"demo_int_policy\"",
      "}"
    ]
  },
  "aci-data-fvaepg": {
    "description": "Defines fvaepg",
    "prefix": "tf-aci-data-fvaepg",
    "body": [
      "data \"aci_application_epg\" \"foo_epg\" {",
      "",
      "  application_profile_dn  = \"${aci_application_profile.foo_app.id}\"",
      "  name                    = \"dev_app_epg\"",
      "}"
    ]
  },
  "aci-data-fvap": {
    "description": "Defines fvap",
    "prefix": "tf-aci-data-fvap",
    "body": [
      "data \"aci_application_profile\" \"dev_apps\" {",
      "  tenant_dn  = \"${aci_tenant.dev_tenant.id}\"",
      "  name       = \"foo_app\"",
      "}"
    ]
  },
  "aci-data-fvbd": {
    "description": "Defines fvbd",
    "prefix": "tf-aci-data-fvbd",
    "body": [
      "data \"aci_bridge_domain\" \"dev_bd\" {",
      "  tenant_dn  = \"${aci_tenant.dev_tenant.id}\"",
      "  name       = \"foo_bd\"",
      "}"
    ]
  },
  "aci-data-fvctx": {
    "description": "Defines fvctx",
    "prefix": "tf-aci-data-fvctx",
    "body": [
      "data \"aci_vrf\" \"dev_ctx\" {",
      "  tenant_dn  = \"${aci_tenant.dev_tenant.id}\"",
      "  name       = \"foo_ctx\"",
      "}"
    ]
  },
  "aci-data-fvepretpol": {
    "description": "Defines fvepretpol",
    "prefix": "tf-aci-data-fvepretpol",
    "body": [
      "data \"aci_end_point_retention_policy\" \"dev_ret_pol\" {",
      "  tenant_dn  = \"${aci_tenant.dev_tenant.id}\"",
      "  name       = \"foo_ret_pol\"",
      "}"
    ]
  },
  "aci-data-fvsubnet": {
    "description": "Defines fvsubnet",
    "prefix": "tf-aci-data-fvsubnet",
    "body": [
      "data \"aci_subnet\" \"dev_subnet\" {",
      "  bridge_domain_dn  = \"${aci_bridge_domain.example.id}\"",
      "  ip                = \"10.0.3.28/27\"",
      "}"
    ]
  },
  "aci-data-fvtenant": {
    "description": "Defines fvtenant",
    "prefix": "tf-aci-data-fvtenant",
    "body": [
      "data \"aci_tenant\" \"example\" {",
      "  name  = \"dev_ten\"",
      "}"
    ]
  },
  "aci-data-infraaccbndlgrp": {
    "description": "Defines infraaccbndlgrp",
    "prefix": "tf-aci-data-infraaccbndlgrp",
    "body": [
      "data \"aci_pcvpc_interface_policy_group\" \"dev_pol_grp\" {",
      "  name  = \"foo_pol_grp\"",
      "}"
    ]
  },
  "aci-data-infraaccportgrp": {
    "description": "Defines infraaccportgrp",
    "prefix": "tf-aci-data-infraaccportgrp",
    "body": [
      "data \"aci_leaf_access_port_policy_group\" \"dev_leaf_port\" {",
      "  name  = \"foo_leaf_port\"",
      "}"
    ]
  },
  "aci-data-infraaccportp": {
    "description": "Defines infraaccportp",
    "prefix": "tf-aci-data-infraaccportp",
    "body": [
      "data \"aci_leaf_interface_profile\" \"dev_leaf_int_prof\" {",
      "  name  = \"foo_leaf_int_prof\"",
      "}"
    ]
  },
  "aci-data-infraattentityp": {
    "description": "Defines infraattentityp",
    "prefix": "tf-aci-data-infraattentityp",
    "body": [
      "data \"aci_attachable_access_entity_profile\" \"dev_ent_prof\" {",
      "  name  = \"foo_ent_prof\"",
      "}"
    ]
  },
  "aci-data-infrahports": {
    "description": "Defines infrahports",
    "prefix": "tf-aci-data-infrahports",
    "body": [
      "data \"aci_access_port_selector\" \"dev_acc_port_select\" {",
      "  leaf_interface_profile_dn  = \"${aci_leaf_interface_profile.example.id}\"",
      "  name                       = \"foo_acc_port_select\"",
      "  access_port_selector_type  = \"ALL\"",
      "}"
    ]
  },
  "aci-data-infranodep": {
    "description": "Defines infranodep",
    "prefix": "tf-aci-data-infranodep",
    "body": [
      "data \"aci_leaf_profile\" \"dev_leaf_prof\" {",
      "  name  = \"foo_leaf_prof\"",
      "}"
    ]
  },
  "aci-data-infraportblk": {
    "description": "Defines infraportblk",
    "prefix": "tf-aci-data-infraportblk",
    "body": [
      "data \"aci_access_port_block\" \"dev_port_blk\" {",
      "  access_port_selector_dn  = \"${aci_access_port_selector.example.id}\"",
      "  name                     = \"foo_port_blk\"",
      "}"
    ]
  },
  "aci-data-infraprovacc": {
    "description": "Defines infraprovacc",
    "prefix": "tf-aci-data-infraprovacc",
    "body": [
      "data \"aci_vlan_encapsulationfor_vxlan_traffic\" \"dev_vlan_traffic\" {",
      "  attachable_access_entity_profile_dn  = \"${aci_attachable_access_entity_profile.example.id}\"",
      "}"
    ]
  },
  "aci-data-l2ifpol": {
    "description": "Defines l2ifpol",
    "prefix": "tf-aci-data-l2ifpol",
    "body": [
      "data \"aci_l2_interface_policy\" \"dev_l2_int_pol\" {",
      "  name  = \"foo_l2_int_pol\"",
      "}"
    ]
  },
  "aci-data-l2portsecuritypol": {
    "description": "Defines l2portsecuritypol",
    "prefix": "tf-aci-data-l2portsecuritypol",
    "body": [
      "data \"aci_port_security_policy\" \"dev_port_sec_pol\" {",
      "  name  = \"foo_port_sec_pol\"",
      "}"
    ]
  },
  "aci-data-l3extinstp": {
    "description": "Defines l3extinstp",
    "prefix": "tf-aci-data-l3extinstp",
    "body": [
      "data \"aci_external_network_instance_profile\" \"dev_ext_net_prof\" {",
      "  l3_outside_dn  = \"${aci_l3_outside.example.id}\"",
      "  name           = \"foo_ext_net_prof\"",
      "}"
    ]
  },
  "aci-data-l3extlifp": {
    "description": "Defines l3extlifp",
    "prefix": "tf-aci-data-l3extlifp",
    "body": [
      "data \"aci_logical_interface_profile\" \"example\" {",
      "",
      "  logical_node_profile_dn  = \"${aci_logical_node_profile.example.id}\"",
      "",
      "  name  = \"example\"",
      "}"
    ]
  },
  "aci-data-l3extlnodep": {
    "description": "Defines l3extlnodep",
    "prefix": "tf-aci-data-l3extlnodep",
    "body": [
      "data \"aci_logical_node_profile\" \"example\" {",
      "",
      "  l3_outside_dn  = \"${aci_l3_outside.example.id}\"",
      "",
      "  name  = \"example\"",
      "}"
    ]
  },
  "aci-data-l3extout": {
    "description": "Defines l3extout",
    "prefix": "tf-aci-data-l3extout",
    "body": [
      "data \"aci_l3_outside\" \"dev_l3_out\" {",
      "  tenant_dn  = \"${aci_tenant.dev_tenant.id}\"",
      "  name       = \"foo_l3_out\"",
      "}"
    ]
  },
  "aci-data-l3extsubnet": {
    "description": "Defines l3extsubnet",
    "prefix": "tf-aci-data-l3extsubnet",
    "body": [
      "data \"aci_l3_ext_subnet\" \"example\" {",
      "",
      "  external_network_instance_profile_dn  = \"${aci_external_network_instance_profile.example.id}\"",
      "  ip                                    = \"10.0.3.28/27\"",
      "}"
    ]
  },
  "aci-data-lacplagpol": {
    "description": "Defines lacplagpol",
    "prefix": "tf-aci-data-lacplagpol",
    "body": [
      "data \"aci_lacp_policy\" \"dev_lacp_pol\" {",
      "  name  = \"foo_lacp_pol\"",
      "}"
    ]
  },
  "aci-data-lldpifpol": {
    "description": "Defines lldpifpol",
    "prefix": "tf-aci-data-lldpifpol",
    "body": [
      "data \"aci_lldp_interface_policy\" \"dev_lldp_pol\" {",
      "  name  = \"foo_lldp_pol\"",
      "}"
    ]
  },
  "aci-data-mcpifpol": {
    "description": "Defines mcpifpol",
    "prefix": "tf-aci-data-mcpifpol",
    "body": [
      "data \"aci_miscabling_protocol_interface_policy\" \"dev_miscable_pol\" {",
      "  name  = \"foo_miscable_pol\"",
      "}"
    ]
  },
  "aci-data-ospfifpol": {
    "description": "Defines ospfifpol",
    "prefix": "tf-aci-data-ospfifpol",
    "body": [
      "data \"aci_ospf_interface_policy\" \"dev_ospf_pol\" {",
      "  tenant_dn  = \"${aci_tenant.dev_tenant.id}\"",
      "  name       = \"foo_ospf_pol\"",
      "}"
    ]
  },
  "aci-data-vmmdomp": {
    "description": "Defines vmmdomp",
    "prefix": "tf-aci-data-vmmdomp",
    "body": [
      "data \"aci_vmm_domain\" \"dev_vmmdom\" {",
      "  provider_profile_dn  = \"${aci_provider_profile.example.id}\"",
      "  name                 = \"demo_vmmdomp\"",
      "}"
    ]
  },
  "aci-data-vzany": {
    "description": "Defines vzany",
    "prefix": "tf-aci-data-vzany",
    "body": [
      "data \"aci_any\" \"dev_any\" {",
      "  vrf_dn  = \"${aci_vrf.dev_vrf.id}\"",
      "}"
    ]
  },
  "aci-data-vzbrcp": {
    "description": "Defines vzbrcp",
    "prefix": "tf-aci-data-vzbrcp",
    "body": [
      "data \"aci_contract\" \"example\" {",
      "  tenant_dn  = \"${aci_tenant.dev_tenant.id}\"",
      "  name       = \"contract_name\"",
      "}"
    ]
  },
  "aci-data-vzentry": {
    "description": "Defines vzentry",
    "prefix": "tf-aci-data-vzentry",
    "body": [
      "data \"aci_filter_entry\" \"http\" {",
      "  filter_dn  = \"${aci_filter.http_flt.id}\"",
      "  name       = \"http\"",
      "}"
    ]
  },
  "aci-data-vzfilter": {
    "description": "Defines vzfilter",
    "prefix": "tf-aci-data-vzfilter",
    "body": [
      "data \"aci_filter\" \"allow_http\" {",
      "  tenant_dn  = \"${aci_tenant.dev_tenant.id}\"",
      "  name       = \"http_flt\"",
      "}"
    ]
  },
  "aci-data-vzsubj": {
    "description": "Defines vzsubj",
    "prefix": "tf-aci-data-vzsubj",
    "body": [
      "data \"aci_contract_subject\" \"dev_subject\" {",
      "  contract_dn  = \"${aci_contract.example.id}\"",
      "  name         = \"foo_subject\"",
      "}"
    ]
  },
  "aci-resource-cloudapp": {
    "description": "Defines cloudapp",
    "prefix": "tf-aci-resource-cloudapp",
    "body": [
      "resource \"aci_cloud_applicationcontainer\" \"foo_clou_app\" {",
      "  tenant_dn  = \"${aci_tenant.dev_tenant.id}\"",
      "  name       = \"demo_cloud_app\"",
      "  annotation = \"tag_cloud_app\"",
      "  name_alias = \"alias_app\"",
      "}",
      ""
    ]
  },
  "aci-resource-cloudawsprovider": {
    "description": "Defines cloudawsprovider",
    "prefix": "tf-aci-resource-cloudawsprovider",
    "body": [
      "\tresource \"aci_cloud_aws_provider\" \"foocloud_aws_provider\" {",
      "\t\ttenant_dn         = \"${aci_tenant.footenant.id}\"",
      "\t\tdescription       = \"aws account config\"",
      "\t\taccess_key_id     = \"access_key\"",
      "\t\taccount_id        = \"acc_id\"",
      "\t\tannotation        = \"tag_aws\"",
      "\t\tregion            = \"us-west-2\"",
      "\t\tsecret_access_key = \"secret_key\"",
      "\t}"
    ]
  },
  "aci-resource-cloudbgpasp": {
    "description": "Defines cloudbgpasp",
    "prefix": "tf-aci-resource-cloudbgpasp",
    "body": [
      "\tresource \"aci_autonomous_system_profile\" \"fooautonomous_system_profile\" {",
      "\t\tdescription = \"sample autonomous profile\"",
      "\t\tannotation  = \"tag_system\"",
      "\t\tasn         = \"121\"",
      "\t\tname_alias  = \"alias_sys_prof\"",
      "\t} "
    ]
  },
  "aci-resource-cloudcidr": {
    "description": "Defines cloudcidr",
    "prefix": "tf-aci-resource-cloudcidr",
    "body": [
      "\tresource \"aci_cloud_cidr_pool\" \"foocloud_cidr_pool\" {",
      "\t\tcloud_context_profile_dn = \"${aci_cloud_context_profile.foocloud_context_profile.id}\"",
      "\t\tdescription              = \"cloud CIDR\"",
      "\t\taddr                     = \"10.0.1.10/28\"",
      "\t\tannotation               = \"tag_cidr\"",
      "\t\tname_alias               = \"%s\"",
      "\t\tprimary                  = \"yes\"",
      "\t}"
    ]
  },
  "aci-resource-cloudctxprofile": {
    "description": "Defines cloudctxprofile",
    "prefix": "tf-aci-resource-cloudctxprofile",
    "body": [
      "\tresource \"aci_cloud_context_profile\" \"foocloud_context_profile\" {",
      "\t\tname \t\t                 = \"%s\"",
      "\t\tdescription              = \"cloud_context_profile created while acceptance testing\"",
      "\t\ttenant_dn                = \"${aci_tenant.footenant.id}\"",
      "\t\tprimary_cidr             = \"10.230.231.1/16\"",
      "\t\tregion                   = \"us-west-1\"",
      "\t\trelation_cloud_rs_to_ctx = \"${aci_vrf.vrf1.name}\"",
      "\t}"
    ]
  },
  "aci-resource-clouddomp": {
    "description": "Defines clouddomp",
    "prefix": "tf-aci-resource-clouddomp",
    "body": [
      "resource \"aci_cloud_domain_profile\" \"foocloud_domain_profile\" {",
      "  annotation  = \"tag_domp\"",
      "  name_alias  = \"alias_domp\"",
      "  site_id     = \"0\"",
      "}",
      ""
    ]
  },
  "aci-resource-cloudepg": {
    "description": "Defines cloudepg",
    "prefix": "tf-aci-resource-cloudepg",
    "body": [
      "\tresource \"aci_cloud_e_pg\" \"foocloud_e_pg\" {",
      "\t\tcloud_applicationcontainer_dn = \"${aci_cloud_applicationcontainer.foocloud_applicationcontainer.id}\"",
      "\t\tdescription                   = \"sample cloud epg\"",
      "\t\tname                          = \"cloud_epg\"",
      "\t\tannotation                    = \"tag_epg\"",
      "\t\texception_tag                 = \"0\"",
      "\t\tflood_on_encap                = \"disabled\"",
      "\t\tmatch_t                       = \"All\"",
      "\t\tname_alias                    = \"alias_epg\"",
      "\t\tpref_gr_memb                  = \"exclude\"",
      "\t\tprio                          = \"unspecified\"",
      "\t}"
    ]
  },
  "aci-resource-cloudepselector": {
    "description": "Defines cloudepselector",
    "prefix": "tf-aci-resource-cloudepselector",
    "body": [
      "\tresource \"aci_cloud_endpoint_selector\" \"foocloud_endpoint_selector\" {",
      "\t\tcloud_e_pg_dn    = \"${aci_cloud_e_pg.foocloud_e_pg.id}\"",
      "\t\tdescription      = \"sample ep selector\"",
      "\t\tname             = \"ep_select\"",
      "\t\tannotation       = \"tag_ep\"",
      "\t\tmatch_expression = \"custom:Name=='admin-ep2'\"",
      "\t\tname_alias       = \"alias_ep\"",
      "\t}"
    ]
  },
  "aci-resource-cloudextepg": {
    "description": "Defines cloudextepg",
    "prefix": "tf-aci-resource-cloudextepg",
    "body": [
      "\tresource \"aci_cloud_external_e_pg\" \"foocloud_external_e_pg\" {",
      "\t\tcloud_applicationcontainer_dn = \"${aci_cloud_applicationcontainer.foocloud_applicationcontainer.id}\"",
      "\t\tdescription                   = \"sample cloud external epg\"",
      "\t\tname                          = \"cloud_ext_epg\"",
      "\t\tannotation                    = \"tag_ext_epg\"",
      "\t\texception_tag                 = \"0\"",
      "\t\tflood_on_encap                = \"disabled\"",
      "\t\tmatch_t                       = \"All\"",
      "\t\tname_alias                    = \"alias_ext\"",
      "\t\tpref_gr_memb                  = \"exclude\"",
      "\t\tprio                          = \"unspecified\"",
      "\t\troute_reachability            = \"inter-site\"",
      "\t}"
    ]
  },
  "aci-resource-cloudextepselector": {
    "description": "Defines cloudextepselector",
    "prefix": "tf-aci-resource-cloudextepselector",
    "body": [
      "\tresource \"aci_cloud_endpoint_selectorfor_external_e_pgs\" \"foocloud_endpoint_selectorfor_external_e_pgs\" {",
      "\t\tcloud_external_e_pg_dn = \"${aci_cloud_external_e_pg.foocloud_external_e_pg.id}\"",
      "\t\tdescription            = \"sample external ep selector\"",
      "\t\tname                   = \"ext_ep_selector\"",
      "\t\tannotation             = \"tag_ext_selector\"",
      "\t\tis_shared              = \"yes\"",
      "\t\tname_alias             = \"alias_select\"",
      "\t\tsubnet                 = \"0.0.0.0/0\"",
      "\t}"
    ]
  },
  "aci-resource-cloudprovp": {
    "description": "Defines cloudprovp",
    "prefix": "tf-aci-resource-cloudprovp",
    "body": [
      "\tresource \"aci_cloud_provider_profile\" \"foocloud_provider_profile\" {",
      "\t\tdescription = \"cloud provider profile\"",
      "\t\tvendor      = \"aws\"",
      "\t\tannotation  = \"tag_aws_prof\"",
      "\t}"
    ]
  },
  "aci-resource-cloudregion": {
    "description": "Defines cloudregion",
    "prefix": "tf-aci-resource-cloudregion",
    "body": [
      "\tresource \"aci_cloud_providers_region\" \"foocloud_providers_region\" {",
      "\t\tcloud_provider_profile_dn = \"${aci_cloud_provider_profile.example.id}\"",
      "\t\tdescription               = \"aws region\"",
      "\t\tname                      = \"us-east-1\"",
      "\t\tannotation                = \"tag_region\"",
      "\t\tname_alias                = \"default_reg\"",
      "\t}"
    ]
  },
  "aci-resource-cloudsubnet": {
    "description": "Defines cloudsubnet",
    "prefix": "tf-aci-resource-cloudsubnet",
    "body": [
      "\tresource \"aci_cloud_subnet\" \"foocloud_subnet\" {",
      "\t\tcloud_cidr_pool_dn = \"${aci_cloud_cidr_pool.example.id}\"",
      "\t\tdescription        = \"sample cloud subnet\"",
      "\t\tip                 = \"14.12.0.0/28\"",
      "\t\tannotation         = \"tag_subnet\"",
      "\t\tname_alias         = \"alias_subnet\"",
      "\t\tscope              = \"public\"",
      "\t\tusage              = \"user\"",
      "\t}"
    ]
  },
  "aci-resource-cloudzone": {
    "description": "Defines cloudzone",
    "prefix": "tf-aci-resource-cloudzone",
    "body": [
      "\tresource \"aci_cloud_availability_zone\" \"foocloud_availability_zone\" {",
      "\t\tcloud_providers_region_dn = \"${aci_cloud_providers_region.example.id}\"",
      "\t\tdescription               = \"sample aws availability zone\"",
      "\t\tname                      = \"us-east-1a\"",
      "\t\tannotation                = \"tag_zone_a\"",
      "\t\tname_alias                = \"alias_zone\"",
      "\t}"
    ]
  },
  "aci-resource-fcifpol": {
    "description": "Defines fcifpol",
    "prefix": "tf-aci-resource-fcifpol",
    "body": [
      "resource \"aci_interface_fc_policy\" \"example\" {",
      "  name         = \"demo_policy\"",
      "  annotation   = \"tag_if_policy\"",
      "  automaxspeed = \"auto\"",
      "  fill_pattern = \"default\"",
      "  name_alias   = \"demo_alias\"",
      "  port_mode    = \"f\"",
      "  rx_bb_credit = \"64\"",
      "  speed        = \"auto\"",
      "  trunk_mode   = \"auto\"",
      "}",
      ""
    ]
  },
  "aci-resource-fvaepg": {
    "description": "Defines fvaepg",
    "prefix": "tf-aci-resource-fvaepg",
    "body": [
      "  resource \"aci_application_epg\" \"fooapplication_epg\" {",
      "    application_profile_dn  = \"${aci_application_profile.app_profile_for_epg.id}\"",
      "    name  \t\t\t\t\t        = \"demo_epg\"",
      "    description \t\t\t      = \"%s\"",
      "    annotation  \t\t\t      = \"tag_epg\"",
      "    exception_tag \t\t    \t= \"0\"",
      "    flood_on_encap  \t      = \"disabled\"",
      "    fwd_ctrl  \t\t\t      \t= \"none\"",
      "    has_mcast_source     \t\t= \"no\"",
      "    is_attr_based_e_pg     \t= \"no\"",
      "    match_t  \t\t\t\t        = \"AtleastOne\"",
      "    name_alias  \t\t      \t= \"alias_epg\"",
      "    pc_enf_pref  \t\t      \t= \"unenforced\"",
      "    pref_gr_memb  \t    \t\t= \"exclude\"",
      "    prio  \t\t\t\t        \t= \"unspecified\"",
      "    shutdown  \t\t      \t\t= \"no\"",
      "  }"
    ]
  },
  "aci-resource-fvap": {
    "description": "Defines fvap",
    "prefix": "tf-aci-resource-fvap",
    "body": [
      "resource \"aci_application_profile\" \"test_ap\" {",
      "  tenant_dn  = \"${aci_tenant.dev_tenant.id}\"",
      "  name       = \"demo_ap\"",
      "  annotation = \"tag1,tag2\"",
      "  name_alias = \"test_ap\"",
      "  prio       = \"level1\"",
      "}",
      ""
    ]
  },
  "aci-resource-fvbd": {
    "description": "Defines fvbd",
    "prefix": "tf-aci-resource-fvbd",
    "body": [
      "\tresource \"aci_bridge_domain\" \"foobridge_domain\" {",
      "\t\ttenant_dn                   = \"${aci_tenant.tenant_for_bd.id}\"",
      "\t\tdescription                 = \"sample bridge domain\"",
      "\t\tname                        = \"demo_bd\"",
      "\t\toptimize_wan_bandwidth      = \"no\"",
      "\t\tannotation                  = \"tag_bd\"",
      "\t\tarp_flood                   = \"no\"",
      "\t\tep_clear                    = \"no\"",
      "\t\tep_move_detect_mode         = \"garp\"",
      "\t\thost_based_routing          = \"no\"",
      "\t\tintersite_bum_traffic_allow = \"yes\"",
      "\t\tintersite_l2_stretch        = \"yes\"",
      "\t\tip_learning                 = \"yes\"",
      "\t\tipv6_mcast_allow            = \"no\"",
      "\t\tlimit_ip_learn_to_subnets   = \"yes\"",
      "\t\tmac                         = \"00:22:BD:F8:19:FF\"",
      "\t\tmcast_allow                 = \"yes\"",
      "\t\tmulti_dst_pkt_act           = \"bd-flood\"",
      "\t\tname_alias                  = \"alias_bd\"",
      "\t\tbridge_domain_type          = \"regular\"",
      "\t\tunicast_route               = \"no\"",
      "\t\tunk_mac_ucast_act           = \"flood\"",
      "\t\tunk_mcast_act               = \"flood\"",
      "\t\tvmac                        = \"not-applicable\"",
      "\t}"
    ]
  },
  "aci-resource-fvctx": {
    "description": "Defines fvctx",
    "prefix": "tf-aci-resource-fvctx",
    "body": [
      "resource \"aci_vrf\" \"foovrf\" {",
      "  tenant_dn   \t\t       = \"${aci_tenant.tenant_for_vrf.id}\"",
      "  name                   = \"demo_vrf\"",
      "  annotation             = \"tag_vrf\"",
      "  bd_enforced_enable     = \"no\"",
      "  ip_data_plane_learning = \"enabled\"",
      "  knw_mcast_act          = \"permit\"",
      "  name_alias             = \"alias_vrf\"",
      "  pc_enf_dir             = \"egress\"",
      "  pc_enf_pref            = \"unenforced\"",
      "}"
    ]
  },
  "aci-resource-fvepretpol": {
    "description": "Defines fvepretpol",
    "prefix": "tf-aci-resource-fvepretpol",
    "body": [
      "\tresource \"aci_end_point_retention_policy\" \"fooend_point_retention_policy\" {",
      "\t\ttenant_dn   \t\t= \"${aci_tenant.tenant_for_ret_pol.id}\"",
      "\t\tdescription \t\t= \"%s\"",
      "\t\tname                = \"demo_ret_pol\"",
      "\t\tannotation          = \"tag_ret_pol\"",
      "\t\tbounce_age_intvl    = \"630\"",
      "\t\tbounce_trig         = \"%s\"",
      "\t\thold_intvl          = \"6\"",
      "\t\tlocal_ep_age_intvl  = \"900\"",
      "\t\tmove_freq           = \"256\"",
      "\t\tname_alias          = \"alias_demo\"",
      "\t\tremote_ep_age_intvl = \"300\"",
      "\t} "
    ]
  },
  "aci-resource-fvsubnet": {
    "description": "Defines fvsubnet",
    "prefix": "tf-aci-resource-fvsubnet",
    "body": [
      "\tresource \"aci_subnet\" \"foosubnet\" {",
      "\t\tbridge_domain_dn = \"${aci_bridge_domain.bd_for_subnet.id}\"",
      "\t\tdescription      = \"%s\"",
      "\t\tip               = \"10.0.3.28/27\"",
      "\t\tannotation       = \"tag_subnet\"",
      "\t\tctrl             = \"%s\"",
      "\t\tname_alias       = \"alias_subnet\"",
      "\t\tpreferred        = \"no\"",
      "\t\tscope            = \"private\"",
      "\t\tvirtual          = \"yes\"",
      "\t} "
    ]
  },
  "aci-resource-fvtenant": {
    "description": "Defines fvtenant",
    "prefix": "tf-aci-resource-fvtenant",
    "body": [
      "resource \"aci_tenant\" \"footenant\" {",
      "  description = \"%s\"",
      "  name        = \"demo_tenant\"",
      "  annotation  = \"tag_tenant\"",
      "  name_alias  = \"alias_tenant\"",
      "}"
    ]
  },
  "aci-resource-infraaccbndlgrp": {
    "description": "Defines infraaccbndlgrp",
    "prefix": "tf-aci-resource-infraaccbndlgrp",
    "body": [
      "resource \"aci_pcvpc_interface_policy_group\" \"example\" {",
      "",
      "",
      "  name  = \"example\"",
      "  annotation  = \"example\"",
      "  lag_t  = \"example\"",
      "  name_alias  = \"example\"",
      "}"
    ]
  },
  "aci-resource-infraaccportgrp": {
    "description": "Defines infraaccportgrp",
    "prefix": "tf-aci-resource-infraaccportgrp",
    "body": [
      "\tresource \"aci_leaf_access_port_policy_group\" \"fooleaf_access_port_policy_group\" {",
      "\t\tdescription = \"%s\"",
      "\t\tname        = \"demo_access_port\"",
      "\t\tannotation  = \"tag_ports\"",
      "\t\tname_alias  = \"%s\"",
      "\t} "
    ]
  },
  "aci-resource-infraaccportp": {
    "description": "Defines infraaccportp",
    "prefix": "tf-aci-resource-infraaccportp",
    "body": [
      "\tresource \"aci_leaf_interface_profile\" \"fooleaf_interface_profile\" {",
      "\t\tdescription = \"%s\"",
      "\t\tname        = \"demo_leaf_profile\"",
      "\t\tannotation  = \"tag_leaf\"",
      "\t\tname_alias  = \"%s\"",
      "\t}"
    ]
  },
  "aci-resource-infraattentityp": {
    "description": "Defines infraattentityp",
    "prefix": "tf-aci-resource-infraattentityp",
    "body": [
      "\tresource \"aci_attachable_access_entity_profile\" \"fooattachable_access_entity_profile\" {",
      "\t\tdescription = \"%s\"",
      "\t\tname        = \"demo_entity_prof\"",
      "\t\tannotation  = \"tag_entity\"",
      "\t\tname_alias  = \"%s\"",
      "\t}"
    ]
  },
  "aci-resource-infrahports": {
    "description": "Defines infrahports",
    "prefix": "tf-aci-resource-infrahports",
    "body": [
      "\tresource \"aci_access_port_selector\" \"fooaccess_port_selector\" {",
      "\t\tleaf_interface_profile_dn = \"${aci_leaf_interface_profile.example.id}\"",
      "\t\tdescription               = \"%s\"",
      "\t\tname                      = \"demo_port_selector\"",
      "\t\taccess_port_selector_type = \"%s\"",
      "\t\tannotation                = \"tag_port_selector\"",
      "\t\tname_alias                = \"alias_port_selector\"",
      "\t} "
    ]
  },
  "aci-resource-infranodep": {
    "description": "Defines infranodep",
    "prefix": "tf-aci-resource-infranodep",
    "body": [
      "resource \"aci_leaf_profile\" \"example\" {",
      "  name        = \"example\"",
      "  annotation  = \"example\"",
      "  name_alias  = \"example\"",
      "}"
    ]
  },
  "aci-resource-infraportblk": {
    "description": "Defines infraportblk",
    "prefix": "tf-aci-resource-infraportblk",
    "body": [
      "\tresource \"aci_access_port_block\" \"fooaccess_port_block\" {",
      "\t\taccess_port_selector_dn = \"${aci_access_port_selector.example.id}\"",
      "\t\tdescription             = \"%s\"",
      "\t\tname                    = \"demo_port_block\"",
      "\t\tannotation              = \"tag_port_block\"",
      "\t\tfrom_card               = \"1\"",
      "\t\tfrom_port               = \"1\"",
      "\t\tname_alias              = \"alias_port_block\"",
      "\t\tto_card                 = \"3\"",
      "\t\tto_port                 = \"3\"",
      "\t}"
    ]
  },
  "aci-resource-infraprovacc": {
    "description": "Defines infraprovacc",
    "prefix": "tf-aci-resource-infraprovacc",
    "body": [
      "resource \"aci_vlan_encapsulationfor_vxlan_traffic\" \"example\" {",
      "  attachable_access_entity_profile_dn  = \"${aci_attachable_access_entity_profile.example.id}\"",
      "  annotation                           = \"tag_traffic\"",
      "  name_alias                           = \"alias_traffic\"",
      "}"
    ]
  },
  "aci-resource-l2ifpol": {
    "description": "Defines l2ifpol",
    "prefix": "tf-aci-resource-l2ifpol",
    "body": [
      "\tresource \"aci_l2_interface_policy\" \"fool2_interface_policy\" {",
      "\t\tdescription = \"%s\"",
      "\t\tname        = \"demo_l2_pol\"",
      "\t\tannotation  = \"tag_l2_pol\"",
      "\t\tname_alias  = \"alias_l2_pol\"",
      "\t\tqinq        = \"disabled\"",
      "\t\tvepa        = \"disabled\"",
      "\t\tvlan_scope  = \"global\"",
      "\t}"
    ]
  },
  "aci-resource-l2portsecuritypol": {
    "description": "Defines l2portsecuritypol",
    "prefix": "tf-aci-resource-l2portsecuritypol",
    "body": [
      "\tresource \"aci_port_security_policy\" \"fooport_security_policy\" {",
      "\t\tdescription = \"%s\"",
      "\t\tname        = \"demo_port_pol\"",
      "\t\tannotation  = \"tag_port_pol\"",
      "\t\tmaximum     = \"12\"",
      "\t\tname_alias  = \"alias_port_pol\"",
      "\t\ttimeout     = \"60\"",
      "\t\tviolation   = \"protect\"",
      "\t}"
    ]
  },
  "aci-resource-l3extinstp": {
    "description": "Defines l3extinstp",
    "prefix": "tf-aci-resource-l3extinstp",
    "body": [
      "\tresource \"aci_external_network_instance_profile\" \"fooexternal_network_instance_profile\" {",
      "\t\tl3_outside_dn  = \"${aci_l3_outside.example.id}\"",
      "\t\tdescription    = \"%s\"",
      "\t\tname           = \"demo_inst_prof\"",
      "\t\tannotation     = \"tag_network_profile\"",
      "\t\texception_tag  = \"2\"",
      "\t\tflood_on_encap = \"disabled\"",
      "\t\tmatch_t        = \"%s\"",
      "\t\tname_alias     = \"alias_profile\"",
      "\t\tpref_gr_memb   = \"exclude\"",
      "\t\tprio           = \"level1\"",
      "\t\ttarget_dscp    = \"exclude\"",
      "\t}"
    ]
  },
  "aci-resource-l3extlifp": {
    "description": "Defines l3extlifp",
    "prefix": "tf-aci-resource-l3extlifp",
    "body": [
      "\tresource \"aci_logical_interface_profile\" \"foological_interface_profile\" {",
      "\t\tlogical_node_profile_dn = \"${aci_logical_node_profile.example.id}\"",
      "\t\tdescription             = \"Sample logical interface profile\"",
      "\t\tname                    = \"demo_int_prof\"",
      "\t\tannotation              = \"tag_prof\"",
      "\t\tname_alias              = \"alias_prof\"",
      "\t\tprio                    = \"unspecified\"",
      "\t\ttag                     = \"black\"",
      "  }\t  "
    ]
  },
  "aci-resource-l3extlnodep": {
    "description": "Defines l3extlnodep",
    "prefix": "tf-aci-resource-l3extlnodep",
    "body": [
      "\tresource \"aci_logical_node_profile\" \"foological_node_profile\" {",
      "\t\tl3_outside_dn = \"${aci_l3_outside.example.id}\"",
      "\t\tdescription   = \"sample logical node profile\"",
      "\t\tname          = \"demo_node\"",
      "\t\tannotation    = \"tag_node\"",
      "\t\tconfig_issues = \"none\"",
      "\t\tname_alias    = \"alias_node\"",
      "\t\ttag           = \"black\"",
      "\t\ttarget_dscp   = \"unspecified\"",
      "\t  }"
    ]
  },
  "aci-resource-l3extout": {
    "description": "Defines l3extout",
    "prefix": "tf-aci-resource-l3extout",
    "body": [
      "\tresource \"aci_l3_outside\" \"fool3_outside\" {",
      "\t\ttenant_dn      = \"${aci_tenant.dev_tenant.id}\"",
      "\t\tdescription    = \"%s\"",
      "\t\tname           = \"demo_l3out\"",
      "\t\tannotation     = \"tag_l3out\"",
      "\t\tenforce_rtctrl = \"%s\"",
      "\t\tname_alias     = \"alias_out\"",
      "\t\ttarget_dscp    = \"unspecified\"",
      "\t}"
    ]
  },
  "aci-resource-l3extsubnet": {
    "description": "Defines l3extsubnet",
    "prefix": "tf-aci-resource-l3extsubnet",
    "body": [
      "\tresource \"aci_l3_ext_subnet\" \"foosubnet\" {",
      "\t  external_network_instance_profile_dn  = \"${aci_external_network_instance_profile.example.id}\"",
      "\t  description                           = \"Sample L3 External subnet\"",
      "\t  ip                                    = \"10.0.3.28/27\"",
      "\t  aggregate                             = \"shared-rtctrl\"",
      "\t  annotation                            = \"tag_ext_subnet\"",
      "\t  name_alias                            = \"alias_ext_subnet\"",
      "\t  scope                                 = \"import-security\"",
      "\t}"
    ]
  },
  "aci-resource-lacplagpol": {
    "description": "Defines lacplagpol",
    "prefix": "tf-aci-resource-lacplagpol",
    "body": [
      "\tresource \"aci_lacp_policy\" \"foolacp_policy\" {",
      "\t\tdescription = \"%s\"",
      "\t\tname        = \"demo_lacp_pol\"",
      "\t\tannotation  = \"tag_lacp\"",
      "\t\tctrl        = \"susp-individual\"",
      "\t\tmax_links   = \"16\"",
      "\t\tmin_links   = \"1\"",
      "\t\tmode        = \"%s\"",
      "\t\tname_alias  = \"alias_lacp\"",
      "\t}"
    ]
  },
  "aci-resource-lldpifpol": {
    "description": "Defines lldpifpol",
    "prefix": "tf-aci-resource-lldpifpol",
    "body": [
      "\tresource \"aci_lldp_interface_policy\" \"foolldp_interface_policy\" {",
      "\t\tdescription = \"%s\"",
      "\t\tname        = \"demo_lldp_pol\"",
      "\t\tadmin_rx_st = \"%s\"",
      "\t\tadmin_tx_st = \"enabled\"",
      "\t\tannotation  = \"tag_lldp\"",
      "\t\tname_alias  = \"alias_lldp\"",
      "\t} "
    ]
  },
  "aci-resource-mcpifpol": {
    "description": "Defines mcpifpol",
    "prefix": "tf-aci-resource-mcpifpol",
    "body": [
      "\tresource \"aci_miscabling_protocol_interface_policy\" \"foomiscabling_protocol_interface_policy\" {",
      "\t\tdescription = \"%s\"",
      "\t\tname        = \"demo_mcpol\"",
      "\t\tadmin_st    = \"%s\"",
      "\t\tannotation  = \"tag_mcpol\"",
      "\t\tname_alias  = \"alias_mcpol\"",
      "\t}"
    ]
  },
  "aci-resource-ospfifpol": {
    "description": "Defines ospfifpol",
    "prefix": "tf-aci-resource-ospfifpol",
    "body": [
      "\tresource \"aci_ospf_interface_policy\" \"fooospf_interface_policy\" {",
      "\t\ttenant_dn    = \"${aci_tenant.dev_tenant.id}\"",
      "\t\tdescription  = \"%s\"",
      "\t\tname         = \"demo_ospfpol\"",
      "\t\tannotation   = \"tag_ospf\"",
      "\t\tcost         = \"unspecified\"",
      "\t\tctrl         = \"%s\"",
      "\t\tdead_intvl   = \"40\"",
      "\t\thello_intvl  = \"10\"",
      "\t\tname_alias   = \"alias_ospf\"",
      "\t\tnw_t         = \"unspecified\"",
      "\t\tpfx_suppress = \"inherit\"",
      "\t\tprio         = \"1\"",
      "\t\trexmit_intvl = \"5\"",
      "\t\txmit_delay   = \"1\"",
      "\t}"
    ]
  },
  "aci-resource-vmmdomp": {
    "description": "Defines vmmdomp",
    "prefix": "tf-aci-resource-vmmdomp",
    "body": [
      "\tresource \"aci_vmm_domain\" \"foovmm_domain\" {",
      "\t\tprovider_profile_dn = \"${aci_provider_profile.example.id}\"",
      "\t\tdescription         = \"%s\"",
      "\t\tname                = \"demo_domp\"",
      "\t\taccess_mode         = \"read-write\"",
      "\t\tannotation          = \"tag_dom\"",
      "\t\tarp_learning        = \"disabled\"",
      "\t\tave_time_out        = \"30\"",
      "\t\tconfig_infra_pg     = \"no\"",
      "\t\tctrl_knob           = \"epDpVerify\"",
      "\t\tdelimiter           = \";\"",
      "\t\tenable_ave          = \"no\"",
      "\t\tenable_tag          = \"no\"",
      "\t\tencap_mode          = \"unknown\"",
      "\t\tenf_pref            = \"hw\"",
      "\t\tep_inventory_type   = \"on-link\"",
      "\t\tep_ret_time         = \"0\"",
      "\t\thv_avail_monitor    = \"no\"",
      "\t\tmcast_addr          = \"224.0.1.0\"",
      "\t\tmode                = \"default\"",
      "\t\tname_alias          = \"alias_dom\"",
      "\t\tpref_encap_mode     = \"unspecified\"",
      "\t} "
    ]
  },
  "aci-resource-vzany": {
    "description": "Defines vzany",
    "prefix": "tf-aci-resource-vzany",
    "body": [
      "\tresource \"aci_any\" \"fooany\" {",
      "\t\tvrf_dn       = \"${aci_vrf.example.id}\"",
      "\t\tdescription  = \"%s\"",
      "\t\tannotation   = \"tag_any\"",
      "\t\tmatch_t      = \"%s\"",
      "\t\tname_alias   = \"alias_any\"",
      "\t\tpref_gr_memb = \"disabled\"",
      "\t}"
    ]
  },
  "aci-resource-vzbrcp": {
    "description": "Defines vzbrcp",
    "prefix": "tf-aci-resource-vzbrcp",
    "body": [
      "\tresource \"aci_contract\" \"foocontract\" {",
      "\t\ttenant_dn   = \"${aci_tenant.dev_tenant.id}\"",
      "\t\tdescription = \"%s\"",
      "\t\tname        = \"demo_contract\"",
      "\t\tannotation  = \"tag_contract\"",
      "\t\tname_alias  = \"alias_contract\"",
      "\t\tprio        = \"level1\"",
      "\t\tscope       = \"tenant\"",
      "\t\ttarget_dscp = \"unspecified\"",
      "\t}"
    ]
  },
  "aci-resource-vzentry": {
    "description": "Defines vzentry",
    "prefix": "tf-aci-resource-vzentry",
    "body": [
      "\tresource \"aci_filter_entry\" \"foofilter_entry\" {",
      "\t\tfilter_dn     = \"${aci_filter.example.id}\"",
      "\t\tdescription   = \"%s\"",
      "\t\tname          = \"demo_entry\"",
      "\t\tannotation    = \"tag_entry\"",
      "\t\tapply_to_frag = \"no\"",
      "\t\tarp_opc       = \"unspecified\"",
      "\t\td_from_port   = \"%s\"",
      "\t\td_to_port     = \"unspecified\"",
      "\t\tether_t       = \"ipv4\"",
      "\t\ticmpv4_t      = \"unspecified\"",
      "\t\ticmpv6_t      = \"unspecified\"",
      "\t\tmatch_dscp    = \"CS0\"",
      "\t\tname_alias    = \"alias_entry\"",
      "\t\tprot          = \"icmp\"",
      "\t\ts_from_port   = \"0\"",
      "\t\ts_to_port     = \"0\"",
      "\t\tstateful      = \"no\"",
      "\t\ttcp_rules     = \"ack\"",
      "\t}"
    ]
  },
  "aci-resource-vzfilter": {
    "description": "Defines vzfilter",
    "prefix": "tf-aci-resource-vzfilter",
    "body": [
      "\tresource \"aci_filter\" \"foofilter\" {",
      "\t\ttenant_dn   = \"${aci_tenant.dev_tenant.id}\"",
      "\t\tdescription = \"%s\"",
      "\t\tname        = \"demo_filter\"",
      "\t\tannotation  = \"tag_filter\"",
      "\t\tname_alias  = \"alias_filter\"",
      "\t}"
    ]
  },
  "aci-resource-vzsubj": {
    "description": "Defines vzsubj",
    "prefix": "tf-aci-resource-vzsubj",
    "body": [
      "\tresource \"aci_contract_subject\" \"foocontract_subject\" {",
      "\t\tcontract_dn   = \"${aci_contract.example.id}\"",
      "\t\tdescription   = \"%s\"",
      "\t\tname          = \"demo_subject\"",
      "\t\tannotation    = \"tag_subject\"",
      "\t\tcons_match_t  = \"AtleastOne\"",
      "\t\tname_alias    = \"alias_subject\"",
      "\t\tprio          = \"level1\"",
      "\t\tprov_match_t  = \"AtleastOne\"",
      "\t\trev_flt_ports = \"yes\"",
      "\t\ttarget_dscp   = \"CS0\"",
      "\t}"
    ]
  },
  "acme-resource-certificate": {
    "description": "Defines certificate",
    "prefix": "tf-acme-resource-certificate",
    "body": [
      "provider \"acme\" {",
      "  server_url = \"https://acme-staging-v02.api.letsencrypt.org/directory\"",
      "}",
      "",
      "resource \"tls_private_key\" \"private_key\" {",
      "  algorithm = \"RSA\"",
      "}",
      "",
      "resource \"acme_registration\" \"reg\" {",
      "  account_key_pem = \"${tls_private_key.private_key.private_key_pem}\"",
      "  email_address   = \"nobody@example.com\"",
      "}",
      "",
      "resource \"acme_certificate\" \"certificate\" {",
      "  account_key_pem           = \"${acme_registration.reg.account_key_pem}\"",
      "  common_name               = \"www.example.com\"",
      "  subject_alternative_names = [\"www2.example.com\"]",
      "",
      "  dns_challenge {",
      "    provider = \"route53\"",
      "  }",
      "}"
    ]
  },
  "acme-resource-registration": {
    "description": "Defines registration",
    "prefix": "tf-acme-resource-registration",
    "body": [
      "provider \"acme\" {",
      "  server_url = \"https://acme-staging-v02.api.letsencrypt.org/directory\"",
      "}",
      "",
      "resource \"tls_private_key\" \"private_key\" {",
      "  algorithm = \"RSA\"",
      "}",
      "",
      "resource \"acme_registration\" \"reg\" {",
      "  account_key_pem = \"${tls_private_key.private_key.private_key_pem}\"",
      "  email_address   = \"nobody@example.com\"",
      "}"
    ]
  },
  "akamai-data-authorities_set": {
    "description": "Defines authorities_set",
    "prefix": "tf-akamai-data-authorities_set",
    "body": [
      "data \"akamai_authorities_set\" \"example\" {",
      "     contract = \"ctr_####\"",
      "}"
    ]
  },
  "akamai-data-contract": {
    "description": "Defines contract",
    "prefix": "tf-akamai-data-contract",
    "body": [
      "data \"akamai_contract\" \"example\" {",
      "     name = \"contract name\"",
      "}",
      "",
      "resource \"akamai_property\" \"example\" {",
      "    contract = \"${data.akamai_contract.example.id}\"",
      "    ...",
      "}"
    ]
  },
  "akamai-data-cpcode": {
    "description": "Defines cpcode",
    "prefix": "tf-akamai-data-cpcode",
    "body": [
      "data \"akamai_cpcode\" \"example\" {",
      "     name = \"cpcode name\"",
      "}",
      "",
      "resource \"akamai_property\" \"example\" {",
      "    contract = \"${data.akamai_cpcode.example.id}\"",
      "    ...",
      "}"
    ]
  },
  "akamai-data-group": {
    "description": "Defines group",
    "prefix": "tf-akamai-data-group",
    "body": [
      "data \"akamai_group\" \"example\" {",
      "    name = \"group name\"",
      "}",
      "",
      "",
      "resource \"akamai_property\" \"example\" {",
      "    group    = \"${data.akamai_group.example.id}\"",
      "    ...",
      "}"
    ]
  },
  "akamai-resource-cps_enrollment": {
    "description": "Defines cps_enrollment",
    "prefix": "tf-akamai-resource-cps_enrollment",
    "body": [
      "resource \"akamai_cps_enrollment\" \"cps_terraformdemo\" {",
      "    contract_id = \"ctr_XXX\"",
      "    admin_contact = [\"devrel@akamai.com\"]",
      "    validation_type = \"third-party\"",
      "    techcontact = [\"devrel@akamai.com\"]",
      "    ra = \"third-party\"",
      "    enable_multi_stacked_certificates = \"true\"",
      "    change_management = \"true\"",
      "    csr {",
      "        cn = \"www.example.com\"",
      "        c = \"US\"",
      "        st = \"MA\"",
      "        l = \"Cambridge\"",
      "        o = \"Akamai\"",
      "        ou = \"WebEx\"",
      "        sans = [",
      "          \"san1.example.com\",",
      "          \"san2.example.com\",",
      "          \"san3.example.com\",",
      "          \"san4.example.com\"",
      "          ] ",
      "    },",
      "    org {",
      "        name = \"Akamai Technologies\"",
      "        addressLineOne = \"150 Broadway\"",
      "        addressLineTwo = null",
      "        city = \"Cambridge\"",
      "        region = \"MA\"",
      "        postalCode = \"02142\"",
      "        country = \"US\"",
      "        phone = \"617-555-0111\"",
      "    }",
      "}",
      ""
    ]
  },
  "akamai-resource-dns_record": {
    "description": "Defines dns_record",
    "prefix": "tf-akamai-resource-dns_record",
    "body": [
      "# A record",
      "resource \"akamai_dns_record\" \"origin\" {",
      "    zone = \"origin.org\"",
      "    name = \"origin.example.org\"",
      "    recordtype =  \"A\"",
      "    active = true",
      "    ttl =  30",
      "    target = [\"192.0.2.42\"]",
      "}",
      "",
      "# CNAME record",
      "resource \"akamai_dns_record\" \"www\" {",
      "    zone = \"example.com\"",
      "    name = \"www.example.com\"",
      "    recordtype =  \"CNAME\"",
      "    active = true",
      "    ttl =  600 ",
      "    target = \"origin.example.org.edgesuite.net\"",
      "}"
    ]
  },
  "akamai-resource-dns_zone": {
    "description": "Defines dns_zone",
    "prefix": "tf-akamai-resource-dns_zone",
    "body": [
      "resource \"akamai_dns_zone\" \"demozone\" {",
      "    contract = \"ctr_XXX\"",
      "    group = 100",
      "    ",
      "    zone = \"example.com\"",
      "    type =  \"primary\"",
      "    masters = [",
      "      \"1.2.3.4\",",
      "      \"1.2.3.5\"",
      "    ] ",
      "    ",
      "    comment =  \"some comment\"",
      "    signandserve = true",
      "}"
    ]
  },
  "akamai-resource-edge_hostname": {
    "description": "Defines edge_hostname",
    "prefix": "tf-akamai-resource-edge_hostname",
    "body": [
      "resource \"akamai_edge_hostname\" \"terraform-demo\" {",
      "    product  = \"prd_####\"",
      "    contract = \"ctr_####\"",
      "    group    = \"grp_####\"",
      "    edge_hostname = \"www.example.org.edgesuite.net\"",
      "}"
    ]
  },
  "akamai-resource-property": {
    "description": "Defines property",
    "prefix": "tf-akamai-resource-property",
    "body": [
      "resource \"akamai_property\" \"example\" {",
      "    name    = \"terraform-demo\"",
      "    contact = [\"user@example.org\"]",
      "",
      "    product  = \"prd_SPM\"",
      "    contract = \"ctr_####\"",
      "    group    = \"grp_####\"",
      "    cp_code  = \"cpc_#####\"",
      "",
      "    edge_hostnames = \"${merge(akamai_edge_hostname.example.edgehostmap)}\"",
      "",
      "    rule_format = \"v2018-02-27\"",
      "    rules       = \"${data.local_file.terraform-demo.content}\"",
      "    variables   = \"${akamai_property_variables.origin.json}\"",
      "}"
    ]
  },
  "akamai-resource-property_activation": {
    "description": "Defines property_activation",
    "prefix": "tf-akamai-resource-property_activation",
    "body": [
      "resource \"akamai_property_activation\" \"example\" {",
      "     name     = \"${akamai_property.example.name}\"",
      "     contact  = [\"user@example.org\"] ",
      "     hostname =  [\"example.org\"]",
      "     contract = \"ctr_####\"",
      "     group    = \"grp_###\"",
      "     network  = \"STAGING\"",
      "     activate = \"${var.akamai_property_activate}\"",
      "}"
    ]
  },
  "akamai-resource-property_rules": {
    "description": "Defines property_rules",
    "prefix": "tf-akamai-resource-property_rules",
    "body": [
      "resource \"akamai_property_rules\" \"example\" {",
      "  rules { # Default rule",
      "  ",
      "    behavior { # Downstream Cache behavior",
      "      name = \"downstreamCache\"",
      "      option { # behavior option",
      "        key = \"behavior\"",
      "        value = \"TUNNEL_ORIGIN\"",
      "      }",
      "    }",
      "  ",
      "    rule { # \"Performance\" child rule",
      "      name = \"Performance\"",
      "      ",
      "      rule { # \"JPEG Images\" child rule ",
      "        name = \"JPEG Images\"",
      "        ",
      "        behavior { # Adaptive Image Compression behavior",
      "          name = \"adaptiveImageCompression\"",
      "          ",
      "          # Options",
      "          option {",
      "            key = \"tier1MobileCompressionMethod\"",
      "            value = \"COMPRESS\"",
      "          }",
      "          option {",
      "            key = \"tier1MobileCompressionValue\"",
      "            value = \"80\"",
      "          }",
      "          option {",
      "            key = \"tier2MobileCompressionMethod\"",
      "            value = \"COMPRESS\"",
      "          }",
      "        }",
      "      }",
      "    }",
      "  }",
      "}",
      "",
      "resource \"akamai_property\" \"example\" {",
      "  rules = \"${akamai_property_rules.example.json}\"",
      "  ...",
      "}"
    ]
  },
  "akamai-resource-property_variables": {
    "description": "Defines property_variables",
    "prefix": "tf-akamai-resource-property_variables",
    "body": [
      "resource \"akamai_property_variables\" \"origin\" {",
      "  variables {",
      "     variable {",
      "        name        = \"PMUSER_ORIGIN\"",
      "        value       = \"origin.example.org\"",
      "        description = \"Origin Hostname\"",
      "        hidden      = true",
      "        sensitive   = true",
      "     }",
      "  }",
      "}"
    ]
  },
  "alicloud-data-account": {
    "description": "Defines account",
    "prefix": "tf-alicloud-data-account",
    "body": [
      "data \"alicloud_account\" \"current\" {",
      "}",
      "",
      "output \"current_account_id\" {",
      "  value = \"${data.alicloud_account.current.id}\"",
      "}"
    ]
  },
  "alicloud-data-actiontrails": {
    "description": "Defines actiontrails",
    "prefix": "tf-alicloud-data-actiontrails",
    "body": [
      "data \"alicloud_actiontrails\" \"trails\" {",
      "  name_regex = \"tf-testacc-actiontrail\"",
      "}",
      "",
      "output \"first_trail_name\" {",
      "  value = \"${data.alicloud_actiontrails.trails.actiontrails.0.name}\"",
      "}"
    ]
  },
  "alicloud-data-api_gateway_apis": {
    "description": "Defines api_gateway_apis",
    "prefix": "tf-alicloud-data-api_gateway_apis",
    "body": [
      "data \"alicloud_api_gateway_apis\" \"data_apigatway_apis\" {",
      "  output_file = \"output_ApiGatawayApis\"",
      "}",
      "",
      "output \"first_api_id\" {",
      "  value = \"${data.alicloud_api_gateway_apis.data_apigatway.apis.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-api_gateway_apps": {
    "description": "Defines api_gateway_apps",
    "prefix": "tf-alicloud-data-api_gateway_apps",
    "body": [
      "data \"alicloud_api_gateway_apps\" \"data_apigatway\" {",
      "  output_file = \"outapps\"",
      "}",
      "",
      "output \"first_app_id\" {",
      "  value = \"${data.alicloud_api_gateway_apps.data_apigatway.apps.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-api_gateway_groups": {
    "description": "Defines api_gateway_groups",
    "prefix": "tf-alicloud-data-api_gateway_groups",
    "body": [
      "data \"alicloud_api_gateway_groups\" \"data_apigatway\" {",
      "  output_file = \"outgroups\"",
      "}",
      "",
      "output \"first_group_id\" {",
      "  value = \"${data.alicloud_api_gateway_groups.data_apigatway.groups.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-cas_certificates": {
    "description": "Defines cas_certificates",
    "prefix": "tf-alicloud-data-cas_certificates",
    "body": [
      "data \"alicloud_cas_certificates\" \"certs\" {",
      "  name_regex  = \"^cas\"",
      "  output_file = \"${path.module}/cas_certificates.json\"",
      "}",
      "",
      "output \"cert\" {",
      "  value = \"${data.alicloud_cas_certificates.certs.certificates.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-cen_bandwidth_limits": {
    "description": "Defines cen_bandwidth_limits",
    "prefix": "tf-alicloud-data-cen_bandwidth_limits",
    "body": [
      "data \"alicloud_cen_bandwidth_limits\" \"bwl\" {",
      "  instance_ids = [\"cen-id1\"]",
      "}",
      "",
      "output \"first_cen_bandwidth_limits_local_region_id\" {",
      "  value = \"${data.alicloud_cen_bandwidth_limits.bwl.limits.0.local_region_id}\"",
      "}"
    ]
  },
  "alicloud-data-cen_bandwidth_packages": {
    "description": "Defines cen_bandwidth_packages",
    "prefix": "tf-alicloud-data-cen_bandwidth_packages",
    "body": [
      "data \"alicloud_cen_bandwidth_packages\" \"bwp\" {",
      "  instance_id = \"cen-id1\"",
      "  name_regex  = \"^foo\"",
      "}",
      "",
      "output \"first_cen_bandwidth_package_id\" {",
      "  value = \"${data.alicloud_cen_bandwidth_packages.bwp.packages.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-cen_instances": {
    "description": "Defines cen_instances",
    "prefix": "tf-alicloud-data-cen_instances",
    "body": [
      "data \"alicloud_cen_instances\" \"cen_instances_ds\" {",
      "  ids        = [\"cen-id1\"]",
      "  name_regex = \"^foo\"",
      "}",
      "",
      "output \"first_cen_instance_id\" {",
      "  value = \"${data.alicloud_cen_instances.cen_instances_ds.instances.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-cen_region_route_entries": {
    "description": "Defines cen_region_route_entries",
    "prefix": "tf-alicloud-data-cen_region_route_entries",
    "body": [
      "data \"alicloud_cen_region_route_entries\" \"entry\" {",
      "  instance_id = \"cen-id1\"",
      "  region_id   = \"cn-beijing\"",
      "}",
      "",
      "output \"first_region_route_entries_route_entry_cidr_block\" {",
      "  value = \"${data.alicloud_cen_region_route_entries.entry.entries.0.cidr_block}\"",
      "}"
    ]
  },
  "alicloud-data-cen_route_entries": {
    "description": "Defines cen_route_entries",
    "prefix": "tf-alicloud-data-cen_route_entries",
    "body": [
      "data \"alicloud_cen_route_entries\" \"entry\" {",
      "  instance_id    = \"cen-id1\"",
      "  route_table_id = \"vtb-id1\"",
      "}",
      "",
      "output \"first_route_entries_route_entry_cidr_block\" {",
      "  value = \"${data.alicloud_cen_route_entries.entry.entries.0.cidr_block}\"",
      "}"
    ]
  },
  "alicloud-data-common_bandwidth_packages": {
    "description": "Defines common_bandwidth_packages",
    "prefix": "tf-alicloud-data-common_bandwidth_packages",
    "body": [
      "data \"alicloud_common_bandwidth_packages\" \"foo\" {",
      "  name_regex = \"^tf-testAcc.*\"",
      "  ids        = [\"${alicloud_common_bandwidth_package.foo.id}\"]",
      "}",
      "",
      "resource \"alicloud_common_bandwidth_package\" \"foo\" {",
      "  bandwidth   = \"2\"",
      "  name        = \"tf-testAccCommonBandwidthPackage\"",
      "  description = \"tf-testAcc-CommonBandwidthPackage\"",
      "}"
    ]
  },
  "alicloud-data-cr_namespaces": {
    "description": "Defines cr_namespaces",
    "prefix": "tf-alicloud-data-cr_namespaces",
    "body": [
      "# Declare the data source",
      "data \"alicloud_cr_namespaces\" \"my_namespaces\" {",
      "  name_regex  = \"my-namespace\"",
      "  output_file = \"my-namespace-json\"",
      "}",
      "",
      "output \"output\" {",
      "  value = \"${data.alicloud_cr_namespaces.my_namespaces.namespaces}\"",
      "}"
    ]
  },
  "alicloud-data-cr_repos": {
    "description": "Defines cr_repos",
    "prefix": "tf-alicloud-data-cr_repos",
    "body": [
      "# Declare the data source",
      "data \"alicloud_cr_repos\" \"my_repos\" {",
      "  name_regex  = \"my-repos\"",
      "  output_file = \"my-repo-json\"",
      "}",
      "",
      "output \"output\" {",
      "  value = \"${data.alicloud_cr_repos.my_repos.repos}\"",
      "}"
    ]
  },
  "alicloud-data-cs_kubernetes_clusters": {
    "description": "Defines cs_kubernetes_clusters",
    "prefix": "tf-alicloud-data-cs_kubernetes_clusters",
    "body": [
      "# Declare the data source",
      "data \"alicloud_cs_kubernetes_clusters\" \"k8s_clusters\" {",
      "  name_regex  = \"my-first-k8s\"",
      "  output_file = \"my-first-k8s-json\"",
      "}",
      "",
      "output \"output\" {",
      "  value = \"${data.alicloud_cs_kubernetes_clusters.k8s_clusters.clusters}\"",
      "}"
    ]
  },
  "alicloud-data-cs_managed_kubernetes_clusters": {
    "description": "Defines cs_managed_kubernetes_clusters",
    "prefix": "tf-alicloud-data-cs_managed_kubernetes_clusters",
    "body": [
      "# Declare the data source",
      "data \"alicloud_cs_managed_kubernetes_clusters\" \"k8s_clusters\" {",
      "  name_regex  = \"my-first-k8s\"",
      "  output_file = \"my-first-k8s-json\"",
      "}",
      "",
      "output \"output\" {",
      "  value = \"${data.alicloud_cs_managed_kubernetes_clusters.k8s_clusters.clusters}\"",
      "}"
    ]
  },
  "alicloud-data-db_instance_classes": {
    "description": "Defines db_instance_classes",
    "prefix": "tf-alicloud-data-db_instance_classes",
    "body": [
      "data \"alicloud_db_instance_classes\" \"resources\" {",
      "  instance_charge_type = \"PostPaid\"",
      "  engine               = \"MySQL\"",
      "  engine_version       = \"5.6\"",
      "  output_file          = \"./classes.txt\"",
      "}",
      "",
      "output \"first_db_instance_class\" {",
      "  value = \"${data.alicloud_db_instance_classes.resources.instance_classes.0.instance_class}\"",
      "}"
    ]
  },
  "alicloud-data-db_instance_engines": {
    "description": "Defines db_instance_engines",
    "prefix": "tf-alicloud-data-db_instance_engines",
    "body": [
      "data \"alicloud_db_instance_engines\" \"resources\" {",
      "  instance_charge_type = \"PostPaid\"",
      "  engine               = \"MySQL\"",
      "  engine_version       = \"5.6\"",
      "  output_file          = \"./engines.txt\"",
      "}",
      "",
      "output \"first_db_category\" {",
      "  value = \"${data.alicloud_db_instance_engines.resources.instance_engines.0.category}\"",
      "}"
    ]
  },
  "alicloud-data-db_instances": {
    "description": "Defines db_instances",
    "prefix": "tf-alicloud-data-db_instances",
    "body": [
      "data \"alicloud_db_instances\" \"db_instances_ds\" {",
      "  name_regex = \"data-\\\\d+\"",
      "  status     = \"Running\"",
      "  tags       = <<EOF",
      "{",
      "  \"type\": \"database\",",
      "  \"size\": \"tiny\"",
      "}",
      "EOF",
      "}",
      "",
      "output \"first_db_instance_id\" {",
      "  value = \"${data.alicloud_db_instances.db_instances_ds.instances.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-ddoscoo_instances": {
    "description": "Defines ddoscoo_instances",
    "prefix": "tf-alicloud-data-ddoscoo_instances",
    "body": [
      "data \"alicloud_ddoscoo_instances\" \"instance\" {",
      "  name_regex = \"^ddoscoo\"",
      "}",
      "",
      "output \"instance\" {",
      "  value = \"${alicloud_ddoscoo_instances.instance.*.id}\"",
      "}"
    ]
  },
  "alicloud-data-disks": {
    "description": "Defines disks",
    "prefix": "tf-alicloud-data-disks",
    "body": [
      "data \"alicloud_disks\" \"disks_ds\" {",
      "  name_regex = \"sample_disk\"",
      "}",
      "",
      "output \"first_disk_id\" {",
      "  value = \"${data.alicloud_disks.disks_ds.disks.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-dns_domain_groups": {
    "description": "Defines alicloud_dns_groups data source",
    "prefix": "tf-alicloud-data-alicloud_dns_groups",
    "body": [
      "data \"alicloud_dns_groups\" \"group\" {",
      "  name_regex = \"^y[A-Za-z]+\"",
      "  output_file = \"groups.txt\"",
      "}",
      ""
    ]
  },
  "alicloud-data-dns_domain_records": {
    "description": "Defines dns_domain_records",
    "prefix": "tf-alicloud-data-dns_domain_records",
    "body": [
      "data \"alicloud_dns_records\" \"record\" {",
      "  domain_name = \"xiaozhu.top\"",
      "  is_locked = false",
      "  type = \"A\"",
      "  host_record_regex = \"^@\"",
      "  output_file = \"records.txt\"",
      "}",
      ""
    ]
  },
  "alicloud-data-dns_domains": {
    "description": "Defines dns_domains",
    "prefix": "tf-alicloud-data-dns_domains",
    "body": [
      "data \"alicloud_dns_domains\" \"domains_ds\" {",
      "  domain_name_regex = \"^hegu\"",
      "  output_file       = \"domains.txt\"",
      "}",
      "",
      "output \"first_domain_id\" {",
      "  value = \"${data.alicloud_dns_domains.domains_ds.domains.0.domain_id}\"",
      "}"
    ]
  },
  "alicloud-data-dns_groups": {
    "description": "Defines dns_groups",
    "prefix": "tf-alicloud-data-dns_groups",
    "body": [
      "data \"alicloud_dns_groups\" \"groups_ds\" {",
      "  name_regex  = \"^y[A-Za-z]+\"",
      "  output_file = \"groups.txt\"",
      "}",
      "",
      "output \"first_group_name\" {",
      "  value = \"${data.alicloud_dns_groups.groups_ds.groups.0.group_name}\"",
      "}"
    ]
  },
  "alicloud-data-dns_records": {
    "description": "Defines dns_records",
    "prefix": "tf-alicloud-data-dns_records",
    "body": [
      "data \"alicloud_dns_records\" \"records_ds\" {",
      "  domain_name       = \"xiaozhu.top\"",
      "  is_locked         = false",
      "  type              = \"A\"",
      "  host_record_regex = \"^@\"",
      "  output_file       = \"records.txt\"",
      "}",
      "",
      "output \"first_record_id\" {",
      "  value = \"${data.alicloud_dns_records.records_ds.records.0.record_id}\"",
      "}"
    ]
  },
  "alicloud-data-drds_instances": {
    "description": "Defines drds_instances",
    "prefix": "tf-alicloud-data-drds_instances",
    "body": [
      "#XXX empty snippet",
      ""
    ]
  },
  "alicloud-data-eips": {
    "description": "Defines eips",
    "prefix": "tf-alicloud-data-eips",
    "body": [
      "data \"alicloud_eips\" \"eips_ds\" {",
      "}",
      "",
      "output \"first_eip_id\" {",
      "  value = \"${data.alicloud_eips.eips_ds.eips.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-elasticsearch": {
    "description": "Defines elasticsearch",
    "prefix": "tf-alicloud-data-elasticsearch",
    "body": [
      "data \"alicloud_elasticsearch_instances\" \"instances\" {",
      "  description_regex = \"myes\"",
      "  version           = \"5.5.3_with_X-Pack\"",
      "}"
    ]
  },
  "alicloud-data-ess_scaling_configurations": {
    "description": "Defines ess_scaling_configurations",
    "prefix": "tf-alicloud-data-ess_scaling_configurations",
    "body": [
      "data \"alicloud_ess_scaling_configurations\" \"scalingconfigurations_ds\" {",
      "  scaling_group_id = \"scaling_group_id\"",
      "  ids              = [\"scaling_configuration_id1\", \"scaling_configuration_id2\"]",
      "  name_regex       = \"scaling_configuration_name\"",
      "}",
      "",
      "output \"first_scaling_rule\" {",
      "  value = \"${data.alicloud_ess_scaling_configurations.scalingconfigurations_ds.configurations.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-ess_scaling_groups": {
    "description": "Defines ess_scaling_groups",
    "prefix": "tf-alicloud-data-ess_scaling_groups",
    "body": [
      "data \"alicloud_ess_scaling_groups\" \"scalinggroups_ds\" {",
      "  ids        = [\"scaling_group_id1\", \"scaling_group_id2\"]",
      "  name_regex = \"scaling_group_name\"",
      "}",
      "",
      "output \"first_scaling_group\" {",
      "  value = \"${data.alicloud_ess_scaling_groups.scalinggroups_ds.groups.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-ess_scaling_rules": {
    "description": "Defines ess_scaling_rules",
    "prefix": "tf-alicloud-data-ess_scaling_rules",
    "body": [
      "data \"alicloud_ess_scaling_rules\" \"scalingrules_ds\" {",
      "  scaling_group_id = \"scaling_group_id\"",
      "  ids              = [\"scaling_rule_id1\", \"scaling_rule_id2\"]",
      "  name_regex       = \"scaling_rule_name\"",
      "}",
      "",
      "output \"first_scaling_rule\" {",
      "  value = \"${data.alicloud_ess_scaling_rules.scalingrules_ds.rules.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-fc_functions": {
    "description": "Defines fc_functions",
    "prefix": "tf-alicloud-data-fc_functions",
    "body": [
      "data \"alicloud_fc_functions\" \"functions_ds\" {",
      "  service_name = \"sample_service\"",
      "  name_regex   = \"sample_fc_function\"",
      "}",
      "",
      "output \"first_fc_function_name\" {",
      "  value = \"${data.alicloud_fc_functions.functions_ds.functions.0.name}\"",
      "}"
    ]
  },
  "alicloud-data-fc_services": {
    "description": "Defines fc_services",
    "prefix": "tf-alicloud-data-fc_services",
    "body": [
      "data \"alicloud_fc_services\" \"fc_services_ds\" {",
      "  name_regex = \"sample_fc_service\"",
      "}",
      "",
      "output \"first_fc_service_name\" {",
      "  value = \"${data.alicloud_fc_services.fc_services_ds.services.0.name}\"",
      "}"
    ]
  },
  "alicloud-data-fc_triggers": {
    "description": "Defines fc_triggers",
    "prefix": "tf-alicloud-data-fc_triggers",
    "body": [
      "data \"alicloud_fc_triggers\" \"fc_triggers_ds\" {",
      "  service_name  = \"sample_service\"",
      "  function_name = \"sample_function\"",
      "  name_regex    = \"sample_fc_trigger\"",
      "}",
      "",
      "output \"first_fc_trigger_name\" {",
      "  value = \"${data.alicloud_fc_triggers.fc_triggers_ds.triggers.0.name}\"",
      "}"
    ]
  },
  "alicloud-data-forward_entries": {
    "description": "Defines forward_entries",
    "prefix": "tf-alicloud-data-forward_entries",
    "body": [
      "variable \"name\" {",
      "  default = \"forward-entry-config-example-name\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/12\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/21\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_nat_gateway\" \"default\" {",
      "  vpc_id        = \"${alicloud_vpc.default.id}\"",
      "  specification = \"Small\"",
      "  name          = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_eip\" \"default\" {",
      "  name = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_eip_association\" \"default\" {",
      "  allocation_id = \"${alicloud_eip.default.id}\"",
      "  instance_id   = \"${alicloud_nat_gateway.default.id}\"",
      "}",
      "",
      "resource \"alicloud_forward_entry\" \"default\" {",
      "  forward_table_id = \"${alicloud_nat_gateway.default.forward_table_ids}\"",
      "  external_ip      = \"${alicloud_eip.default.ip_address}\"",
      "  external_port    = \"80\"",
      "  ip_protocol      = \"tcp\"",
      "  internal_ip      = \"172.16.0.3\"",
      "  internal_port    = \"8080\"",
      "}",
      "",
      "data \"alicloud_forward_entries\" \"default\" {",
      "  forward_table_id = \"${alicloud_forward_entry.default.forward_table_id}\"",
      "}"
    ]
  },
  "alicloud-data-gpdb_instances": {
    "description": "Defines gpdb_instances",
    "prefix": "tf-alicloud-data-gpdb_instances",
    "body": [
      "data \"alicloud_gpdb_instances\" \"gpdb\" {",
      "  availability_zone = \"cn-beijing-c\"",
      "  name_regex        = \"gp-.+\\\\d+\"",
      "  output_file       = \"instances.txt\"",
      "}",
      "",
      "output \"instance_id\" {",
      "  value = \"${data.alicloud_gpdb_instances.gpdb.instances.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-images": {
    "description": "Defines images",
    "prefix": "tf-alicloud-data-images",
    "body": [
      "data \"alicloud_images\" \"images_ds\" {",
      "  owners     = \"system\"",
      "  name_regex = \"^centos_6\"",
      "}",
      "",
      "output \"first_image_id\" {",
      "  value = \"${data.alicloud_images.images_ds.images.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-instance_types": {
    "description": "Defines instance_types",
    "prefix": "tf-alicloud-data-instance_types",
    "body": [
      "# Declare the data source",
      "data \"alicloud_instance_types\" \"types_ds\" {",
      "  cpu_core_count = 1",
      "  memory_size    = 2",
      "}",
      "",
      "# Create ECS instance with the first matched instance_type",
      "",
      "resource \"alicloud_instance\" \"instance\" {",
      "  instance_type = \"${data.alicloud_instance_types.types_ds.instance_types.0.id}\"",
      "",
      "  # Other properties...",
      "}",
      ""
    ]
  },
  "alicloud-data-instances": {
    "description": "Defines instances",
    "prefix": "tf-alicloud-data-instances",
    "body": [
      "data \"alicloud_instances\" \"instances_ds\" {",
      "  name_regex = \"web_server\"",
      "  status     = \"Running\"",
      "}",
      "",
      "output \"first_instance_id\" {",
      "  value = \"${data.alicloud_instances.instances_ds.instances.0.id}\"",
      "}",
      "",
      "output \"instance_ids\" {",
      "  value = \"${data.alicloud_instances.instances_ds.ids}\"",
      "}"
    ]
  },
  "alicloud-data-key_pairs": {
    "description": "Defines key_pairs",
    "prefix": "tf-alicloud-data-key_pairs",
    "body": [
      "# Declare the data source",
      "resource \"alicloud_key_pair\" \"default\" {",
      "  key_name = \"keyPairDatasource\"",
      "}",
      "data \"alicloud_key_pairs\" \"default\" {",
      "  name_regex = \"${alicloud_key_pair.default.key_name}\"",
      "}",
      ""
    ]
  },
  "alicloud-data-kms_keys": {
    "description": "Defines kms_keys",
    "prefix": "tf-alicloud-data-kms_keys",
    "body": [
      "# Declare the data source",
      "data \"alicloud_kms_keys\" \"kms_keys_ds\" {",
      "  description_regex = \"Hello KMS\"",
      "  output_file       = \"kms_keys.json\"",
      "}",
      "",
      "output \"first_key_id\" {",
      "  value = \"${data.alicloud_kms_keys.kms_keys_ds.keys.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-kvstore_instance_classes": {
    "description": "Defines kvstore_instance_classes",
    "prefix": "tf-alicloud-data-kvstore_instance_classes",
    "body": [
      "data \"alicloud_zones\" \"resources\" {",
      "  available_resource_creation = \"KVStore\"",
      "}",
      "",
      "data \"alicloud_kvstore_instance_classes\" \"resources\" {",
      "  zone_id              = \"${data.alicloud_zones.resources.zones.0.id}\"",
      "  instance_charge_type = \"PrePaid\"",
      "  engine               = \"Redis\"",
      "  engine_version       = \"5.0\"",
      "  output_file          = \"./classes.txt\"",
      "}",
      "",
      "output \"first_kvstore_instance_class\" {",
      "  value = \"${data.alicloud_kvstore_instance_classes.resources.instance_classes}\"",
      "}"
    ]
  },
  "alicloud-data-kvstore_instance_engines": {
    "description": "Defines kvstore_instance_engines",
    "prefix": "tf-alicloud-data-kvstore_instance_engines",
    "body": [
      "data \"alicloud_zones\" \"resources\" {",
      "  available_resource_creation = \"KVStore\"",
      "}",
      "",
      "data \"alicloud_kvstore_instance_engines\" \"resources\" {",
      "  zone_id              = \"${data.alicloud_zones.resources.zones.0.id}\"",
      "  instance_charge_type = \"PrePaid\"",
      "  engine               = \"Redis\"",
      "  engine_version       = \"5.0\"",
      "  output_file          = \"./engines.txt\"",
      "}",
      "",
      "output \"first_kvstore_instance_class\" {",
      "  value = \"${data.alicloud_kvstore_instance_engines.resources.instance_engines.0.engine}\"",
      "}"
    ]
  },
  "alicloud-data-kvstore_instances": {
    "description": "Defines kvstore_instances",
    "prefix": "tf-alicloud-data-kvstore_instances",
    "body": [
      "    data \"alicloud_kvstore_instances\" \"default\" {",
      "        name_regex: \"checkalicloudkvinstancesdatasoource`",
      "    }",
      "    output \"first_instance_name\" {",
      "        value = \"${data.alicloud_kvstore_instances.default.instances.name}\"",
      "    }"
    ]
  },
  "alicloud-data-mns_queues": {
    "description": "Defines mns_queues",
    "prefix": "tf-alicloud-data-mns_queues",
    "body": [
      "data \"alicloud_mns_queues\" \"queues\" {",
      "  name_prefix = \"tf-\"",
      "}",
      "",
      "output \"first_queue_id\" {",
      "  value = \"${data.alicloud_mns_queues.queues.queues.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-mns_topic_subscriptions": {
    "description": "Defines mns_topic_subscriptions",
    "prefix": "tf-alicloud-data-mns_topic_subscriptions",
    "body": [
      "data \"alicloud_mns_topic_subscriptions\" \"subscriptions\" {",
      "  topic_name  = \"topic_name\"",
      "  name_prefix = \"tf-\"",
      "}",
      "",
      "output \"first_topic_subscription_id\" {",
      "  value = \"${data.alicloud_mns_topic_subscriptions.subscriptions.subscriptions.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-mns_topics": {
    "description": "Defines mns_topics",
    "prefix": "tf-alicloud-data-mns_topics",
    "body": [
      "data \"alicloud_mns_topics\" \"topics\" {",
      "  name_prefix = \"tf-\"",
      "}",
      "",
      "output \"first_topic_id\" {",
      "  value = \"${data.alicloud_mns_topics.topics.topics.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-mongodb_instances": {
    "description": "Defines mongodb_instances",
    "prefix": "tf-alicloud-data-mongodb_instances",
    "body": [
      "data \"alicloud_mongodb_instances\" \"mongo\" {",
      "  name_regex        = \"dds-.+\\\\d+\"",
      "  instance_type     = \"replicate\"",
      "  instance_class    = \"dds.mongo.mid\"",
      "  availability_zone = \"eu-central-1a\"",
      "}"
    ]
  },
  "alicloud-data-nas_access_groups": {
    "description": "Defines nas_access_groups",
    "prefix": "tf-alicloud-data-nas_access_groups",
    "body": [
      "data \"alicloud_nas_access_groups\" \"ag\" {",
      "  name_regex  = \"^foo\"",
      "  type        = \"Classic\"",
      "  description = \"tf-testAccAccessGroupsdatasource\"",
      "}",
      "",
      "output \"alicloud_nas_access_groups_id\" {",
      "  value = \"${data.alicloud_nas_access_groups.ag.groups.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-nas_access_rules": {
    "description": "Defines nas_access_rules",
    "prefix": "tf-alicloud-data-nas_access_rules",
    "body": [
      "data \"alicloud_nas_access_rules\" \"foo\" {",
      "  access_group_name = \"tf-testAccAccessGroupsdatasource\"",
      "  source_cidr_ip    = \"168.1.1.0/16\"",
      "  rw_access         = \"RDWR\"",
      "  user_access       = \"no_squash\"",
      "}",
      "",
      "output \"alicloud_nas_access_rules_id\" {",
      "  value = \"${data.alicloud_nas_access_rules.foo.rules.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-nas_file_systems": {
    "description": "Defines nas_file_systems",
    "prefix": "tf-alicloud-data-nas_file_systems",
    "body": [
      "data \"alicloud_nas_file_systems\" \"fs\" {",
      "  protocol_type = \"NFS\"",
      "  description   = \"${alicloud_nas_file_system.foo.description}\"",
      "}",
      "",
      "output \"alicloud_nas_file_systems_id\" {",
      "  value = \"${data.alicloud_nas_file_systems.fs.systems.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-nas_mount_targets": {
    "description": "Defines nas_mount_targets",
    "prefix": "tf-alicloud-data-nas_mount_targets",
    "body": [
      "data \"alicloud_nas_mount_targets\" \"mt\" {",
      "  file_system_id    = \"1a2sc4d\"",
      "  access_group_name = \"tf-testAccNasConfig\"",
      "}",
      "",
      "output \"alicloud_nas_mount_targets_id\" {",
      "  value = \"${data.alicloud_nas_mount_targets.mt.targets.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-nas_protocols": {
    "description": "Defines nas_protocols",
    "prefix": "tf-alicloud-data-nas_protocols",
    "body": [
      "data \"alicloud_nas_protocols\" \"default\" {",
      "  type        = \"Performance\"",
      "  zone_id     = \"cn-beijing-e\"",
      "  output_file = \"protocols.txt\"",
      "}",
      "",
      "output \"nas_protocols_protocol\" {",
      "  value = \"${data.alicloud_nas_protocols.default.protocols.0}\"",
      "}"
    ]
  },
  "alicloud-data-nat_gateways": {
    "description": "Defines nat_gateways",
    "prefix": "tf-alicloud-data-nat_gateways",
    "body": [
      "variable \"name\" {",
      "  default = \"natGatewaysDatasource\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"foo\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/12\"",
      "}",
      "",
      "resource \"alicloud_nat_gateway\" \"foo\" {",
      "  vpc_id        = \"${alicloud_vpc.foo.id}\"",
      "  specification = \"Small\"",
      "  name          = \"${var.name}\"",
      "}",
      "",
      "data \"alicloud_nat_gateways\" \"foo\" {",
      "  vpc_id     = \"${alicloud_vpc.foo.id}\"",
      "  name_regex = \"${alicloud_nat_gateway.foo.name}\"",
      "  ids        = [\"${alicloud_nat_gateway.foo.id}\"]",
      "}"
    ]
  },
  "alicloud-data-network_interfaces": {
    "description": "Defines network_interfaces",
    "prefix": "tf-alicloud-data-network_interfaces",
    "body": [
      "variable \"name\" {",
      "  default = \"networkInterfacesName\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"vpc\" {",
      "  name = \"${var.name}\"",
      "  cidr_block = \"192.168.0.0/24\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"vswitch\" {",
      "  name = \"${var.name}\"",
      "  cidr_block = \"192.168.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  vpc_id = \"${alicloud_vpc.vpc.id}\"",
      "}",
      "",
      "resource \"alicloud_security_group\" \"group\" {",
      "  name = \"${var.name}\"",
      "  vpc_id = \"${alicloud_vpc.vpc.id}\"",
      "}",
      "",
      "resource \"alicloud_network_interface\" \"interface\" {",
      "  name = \"${var.name}%d\"",
      "  vswitch_id = \"${alicloud_vswitch.vswitch.id}\"",
      "  security_groups = [",
      "    \"${alicloud_security_group.group.id}\"]",
      "  description = \"Basic test\"",
      "  private_ip = \"192.168.0.2\"",
      "  tags = {",
      "    TF-VER = \"0.11.3\"",
      "  }",
      "}",
      "",
      "resource \"alicloud_instance\" \"instance\" {",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  security_groups = [",
      "    \"${alicloud_security_group.group.id}\"]",
      "  instance_type = \"ecs.e3.xlarge\"",
      "  system_disk_category = \"cloud_efficiency\"",
      "  image_id = \"centos_7_04_64_20G_alibase_201701015.vhd\"",
      "  instance_name = \"${var.name}\"",
      "  vswitch_id = \"${alicloud_vswitch.vswitch.id}\"",
      "  internet_max_bandwidth_out = 10",
      "}",
      "",
      "resource \"alicloud_network_interface_attachment\" \"attachment\" {",
      "  instance_id = \"${alicloud_instance.instance.id}\"",
      "  network_interface_id = \"${alicloud_network_interface.interface.id}\"",
      "}",
      "",
      "data \"alicloud_network_interfaces\" \"default\" {",
      "  ids = [",
      "    \"${alicloud_network_interface_attachment.attachment.network_interface_id}\"],",
      "  name_regex = \"tf-testAccNetworkInterfacesBasic%d\",",
      "  tags = {",
      "    TF-VER = \"0.11.3\"",
      "  },",
      "  vpc_id = \"${alicloud_vpc.vpc.id}\",",
      "  vswitch_id = \"${alicloud_vswitch.vswitch.id}\",",
      "  private_ip = \"192.168.0.2\",",
      "  security_group_id = \"${alicloud_security_group.group.id}\",",
      "  type = \"Secondary\",",
      "  instance_id = \"${alicloud_instance.instance.id}\",",
      "}",
      "",
      "output \"eni0_name\" {",
      "    value = \"${data.alicloud_network_interfaces.default.interfaces.0.name}\"",
      "}"
    ]
  },
  "alicloud-data-ons_instances": {
    "description": "Defines ons_instances",
    "prefix": "tf-alicloud-data-ons_instances",
    "body": [
      "variable \"name\" {",
      "  default = \"onsInstanceDatasourceName\"",
      "}",
      "",
      "resource \"alicloud_ons_instance\" \"default\" {",
      "  name   = \"${var.name}\"",
      "  remark = \"default_ons_instance_remark\"",
      "}",
      "",
      "data \"alicloud_ons_instances\" \"instances_ds\" {",
      "  ids         = [\"${alicloud_ons_instance.default.id}\"]",
      "  name_regex  = \"${alicloud_ons_instance.default.name}\"",
      "  output_file = \"instances.txt\"",
      "}",
      "",
      "output \"first_instance_id\" {",
      "  value = \"${data.alicloud_ons_instances.instances_ds.instances.0.instance_id}\"",
      "}"
    ]
  },
  "alicloud-data-ons_topics": {
    "description": "Defines ons_topics",
    "prefix": "tf-alicloud-data-ons_topics",
    "body": [
      "variable \"name\" {",
      "  default = \"onsInstanceName\"",
      "}",
      "",
      "variable \"topic\" {",
      "  default = \"onsTopicDatasourceName\"",
      "}",
      "",
      "resource \"alicloud_ons_instance\" \"default\" {",
      "  name = \"${var.name}\"",
      "  remark = \"default_ons_instance_remark\"",
      "}",
      "",
      "resource \"alicloud_ons_topic\" \"default\" {",
      "  topic = \"${var.topic}\"",
      "  instance_id = \"${alicloud_ons_instance.default.id}\"",
      "  message_type = 0",
      "  remark = \"dafault_ons_topic_remark\"",
      "}",
      "",
      "data \"alicloud_ons_topics\" \"topics_ds\" {",
      "  instance_id = \"${alicloud_ons_topic.default.instance_id}\"",
      "  name_regex = \"${var.topic}\"",
      "  output_file = \"topics.txt\"",
      "}",
      "",
      "output \"first_topic_name\" {",
      "  value = \"${data.alicloud_ons_topics.topics_ds.topics.0.topic}\"",
      "}"
    ]
  },
  "alicloud-data-oss_bucket_objects": {
    "description": "Defines oss_bucket_objects",
    "prefix": "tf-alicloud-data-oss_bucket_objects",
    "body": [
      "data \"alicloud_oss_bucket_objects\" \"bucket_objects_ds\" {",
      "  bucket_name = \"sample_bucket\"",
      "  key_regex   = \"sample/sample_object.txt\"",
      "}",
      "",
      "output \"first_object_key\" {",
      "  value = \"${data.alicloud_oss_bucket_objects.bucket_objects_ds.objects.0.key}\"",
      "}"
    ]
  },
  "alicloud-data-oss_buckets": {
    "description": "Defines oss_buckets",
    "prefix": "tf-alicloud-data-oss_buckets",
    "body": [
      "data \"alicloud_oss_buckets\" \"oss_buckets_ds\" {",
      "  name_regex = \"sample_oss_bucket\"",
      "}",
      "",
      "output \"first_oss_bucket_name\" {",
      "  value = \"${data.alicloud_oss_buckets.oss_buckets_ds.buckets.0.name}\"",
      "}"
    ]
  },
  "alicloud-data-ots_instance_attachments": {
    "description": "Defines ots_instance_attachments",
    "prefix": "tf-alicloud-data-ots_instance_attachments",
    "body": [
      "data \"alicloud_ots_instance_attachments\" \"attachments_ds\" {",
      "  instance_name = \"sample-instance\"",
      "  name_regex    = \"testvpc\"",
      "  output_file   = \"attachments.txt\"",
      "}",
      "",
      "output \"first_ots_attachment_id\" {",
      "  value = \"${data.alicloud_ots_instance_attachments.attachments_ds.attachments.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-ots_instances": {
    "description": "Defines ots_instances",
    "prefix": "tf-alicloud-data-ots_instances",
    "body": [
      "data \"alicloud_ots_instances\" \"instances_ds\" {",
      "  name_regex  = \"sample-instance\"",
      "  output_file = \"instances.txt\"",
      "}",
      "",
      "output \"first_instance_id\" {",
      "  value = \"${data.alicloud_ots_instances.instances_ds.instances.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-ots_tables": {
    "description": "Defines ots_tables",
    "prefix": "tf-alicloud-data-ots_tables",
    "body": [
      "data \"alicloud_ots_tables\" \"tables_ds\" {",
      "  instance_name = \"sample-instance\"",
      "  name_regex    = \"sample-table\"",
      "  output_file   = \"tables.txt\"",
      "}",
      "",
      "output \"first_table_id\" {",
      "  value = \"${data.alicloud_ots_tables.tables_ds.tables.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-pvtz_zone_records": {
    "description": "Defines pvtz_zone_records",
    "prefix": "tf-alicloud-data-pvtz_zone_records",
    "body": [
      "data \"alicloud_pvtz_zone_records\" \"records_ds\" {",
      "  zone_id = \"${alicloud_pvtz_zone.basic.id}\"",
      "  keyword = \"${alicloud_pvtz_zone_record.foo.value}\"",
      "}",
      "",
      "output \"first_record_id\" {",
      "  value = \"${data.alicloud_pvtz_zone_records.records_ds.records.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-pvtz_zones": {
    "description": "Defines pvtz_zones",
    "prefix": "tf-alicloud-data-pvtz_zones",
    "body": [
      "data \"alicloud_pvtz_zones\" \"pvtz_zones_ds\" {",
      "  keyword = \"${alicloud_pvtz_zone.basic.zone_name}\"",
      "}",
      "",
      "output \"first_zone_id\" {",
      "  value = \"${data.alicloud_pvtz_zones.pvtz_zones_ds.zones.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-ram_account_aliases": {
    "description": "Defines ram_account_aliases",
    "prefix": "tf-alicloud-data-ram_account_aliases",
    "body": [
      "data \"alicloud_ram_account_aliases\" \"alias_ds\" {",
      "  output_file = \"alias.txt\"",
      "}",
      "",
      "output \"account_alias\" {",
      "  value = \"${data.alicloud_ram_account_aliases.alias_ds.account_alias}\"",
      "}"
    ]
  },
  "alicloud-data-ram_alias": {
    "description": "Defines ram_alias data source",
    "prefix": "tf-alicloud-data-ram_alias",
    "body": [
      "resource \"alicloud_ram_account_alias\" \"alias\" {",
      "  account_alias = \"hallo\"",
      "}",
      ""
    ]
  },
  "alicloud-data-ram_groups": {
    "description": "Defines ram_groups",
    "prefix": "tf-alicloud-data-ram_groups",
    "body": [
      "data \"alicloud_ram_groups\" \"groups_ds\" {",
      "  output_file = \"groups.txt\"",
      "  user_name   = \"user1\"",
      "  name_regex  = \"^group[0-9]*\"",
      "}",
      "",
      "output \"first_group_name\" {",
      "  value = \"${data.alicloud_ram_groups.groups_ds.groups.0.name}\"",
      "}"
    ]
  },
  "alicloud-data-ram_policies": {
    "description": "Defines ram_policies",
    "prefix": "tf-alicloud-data-ram_policies",
    "body": [
      "data \"alicloud_ram_policies\" \"policies_ds\" {",
      "  output_file = \"policies.txt\"",
      "  user_name   = \"user1\"",
      "  group_name  = \"group1\"",
      "  type        = \"System\"",
      "}",
      "",
      "output \"first_policy_name\" {",
      "  value = \"${data.alicloud_ram_policies.policies_ds.policies.0.name}\"",
      "}"
    ]
  },
  "alicloud-data-ram_roles": {
    "description": "Defines ram_roles",
    "prefix": "tf-alicloud-data-ram_roles",
    "body": [
      "data \"alicloud_ram_roles\" \"roles_ds\" {",
      "  output_file = \"roles.txt\"",
      "  name_regex  = \".*test.*\"",
      "  policy_name = \"AliyunACSDefaultAccess\"",
      "  policy_type = \"Custom\"",
      "}",
      "",
      "output \"first_role_id\" {",
      "  value = \"${data.alicloud_ram_roles.roles_ds.roles.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-ram_users": {
    "description": "Defines ram_users",
    "prefix": "tf-alicloud-data-ram_users",
    "body": [
      "data \"alicloud_ram_users\" \"users_ds\" {",
      "  output_file = \"users.txt\"",
      "  group_name  = \"group1\"",
      "  policy_name = \"AliyunACSDefaultAccess\"",
      "  policy_type = \"Custom\"",
      "  name_regex  = \"^user\"",
      "}",
      "",
      "output \"first_user_id\" {",
      "  value = \"${data.alicloud_ram_users.users_ds.users.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-regions": {
    "description": "Defines regions",
    "prefix": "tf-alicloud-data-regions",
    "body": [
      "data \"alicloud_regions\" \"current_region_ds\" {",
      "  current = true",
      "}",
      "",
      "output \"current_region_id\" {",
      "  value = \"${data.alicloud_regions.current_region_ds.regions.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-route_entries": {
    "description": "Defines route_entries",
    "prefix": "tf-alicloud-data-route_entries",
    "body": [
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "data \"alicloud_instance_types\" \"default\" {",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  cpu_core_count    = 1",
      "  memory_size       = 2",
      "}",
      "data \"alicloud_images\" \"default\" {",
      "  name_regex  = \"^ubuntu_14.*_64\"",
      "  most_recent = true",
      "  owners      = \"system\"",
      "}",
      "",
      "variable \"name\" {",
      "  default = \"tf-testAccRouteEntryConfig\"",
      "}",
      "resource \"alicloud_vpc\" \"foo\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"10.1.0.0/21\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"foo\" {",
      "  vpc_id            = \"${alicloud_vpc.foo.id}\"",
      "  cidr_block        = \"10.1.1.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_route_entry\" \"foo\" {",
      "  route_table_id        = \"${alicloud_vpc.foo.route_table_id}\"",
      "  destination_cidrblock = \"172.11.1.1/32\"",
      "  nexthop_type          = \"Instance\"",
      "  nexthop_id            = \"${alicloud_instance.foo.id}\"",
      "}",
      "",
      "resource \"alicloud_security_group\" \"tf_test_foo\" {",
      "  name        = \"${var.name}\"",
      "  description = \"foo\"",
      "  vpc_id      = \"${alicloud_vpc.foo.id}\"",
      "}",
      "",
      "resource \"alicloud_security_group_rule\" \"ingress\" {",
      "  type              = \"ingress\"",
      "  ip_protocol       = \"tcp\"",
      "  nic_type          = \"intranet\"",
      "  policy            = \"accept\"",
      "  port_range        = \"22/22\"",
      "  priority          = 1",
      "  security_group_id = \"${alicloud_security_group.tf_test_foo.id}\"",
      "  cidr_ip           = \"0.0.0.0/0\"",
      "}",
      "",
      "resource \"alicloud_instance\" \"foo\" {",
      "  # cn-beijing",
      "  security_groups = [\"${alicloud_security_group.tf_test_foo.id}\"]",
      "",
      "  vswitch_id         = \"${alicloud_vswitch.foo.id}\"",
      "  allocate_public_ip = true",
      "",
      "  # series III",
      "  instance_charge_type       = \"PostPaid\"",
      "  instance_type              = \"${data.alicloud_instance_types.default.instance_types.0.id}\"",
      "  internet_charge_type       = \"PayByTraffic\"",
      "  internet_max_bandwidth_out = 5",
      "",
      "  system_disk_category = \"cloud_efficiency\"",
      "  image_id             = \"${data.alicloud_images.default.images.0.id}\"",
      "  instance_name        = \"${var.name}\"",
      "}",
      "",
      "data \"alicloud_route_entries\" \"foo\" {",
      "  route_table_id = \"${alicloud_route_entry.foo.route_table_id}\"",
      "}",
      ""
    ]
  },
  "alicloud-data-route_tables": {
    "description": "Defines route_tables",
    "prefix": "tf-alicloud-data-route_tables",
    "body": [
      "variable \"name\" {",
      "  default = \"route-tables-datasource-example-name\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"foo\" {",
      "  cidr_block = \"172.16.0.0/12\"",
      "  name       = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_route_table\" \"foo\" {",
      "  vpc_id      = \"${alicloud_vpc.foo.id}\"",
      "  name        = \"${var.name}\"",
      "  description = \"${var.name}\"",
      "}",
      "",
      "data \"alicloud_route_tables\" \"foo\" {",
      "  ids = [\"${alicloud_route_table.foo.id}\"]",
      "}",
      "",
      "output \"route_table_ids\" {",
      "  value = \"${data.alicloud_route_tables.foo.ids}\"",
      "}"
    ]
  },
  "alicloud-data-router_interfaces": {
    "description": "Defines router_interfaces",
    "prefix": "tf-alicloud-data-router_interfaces",
    "body": [
      "data \"alicloud_router_interfaces\" \"router_interfaces_ds\" {",
      "  name_regex = \"^testenv\"",
      "  status     = \"Active\"",
      "}",
      "",
      "output \"first_router_interface_id\" {",
      "  value = \"${data.alicloud_router_interfaces.router_interfaces_ds.interfaces.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-security_group_rules": {
    "description": "Defines security_group_rules",
    "prefix": "tf-alicloud-data-security_group_rules",
    "body": [
      "# Get the security group id from a variable",
      "variable \"security_group_id\" {}",
      "",
      "# Or get it from the alicloud_security_groups data source.",
      "# Please note that the data source arguments must be enough to filter results to one security group.",
      "data \"alicloud_security_groups\" \"groups_ds\" {",
      "  name_regex = \"api\"",
      "}",
      "",
      "# Filter the security group rule by group",
      "data \"alicloud_security_group_rules\" \"ingress_rules_ds\" {",
      "  group_id    = \"${data.alicloud_security_groups.groups_ds.groups.0.id}\" # or ${var.security_group_id}",
      "  nic_type    = \"internet\"",
      "  direction   = \"ingress\"",
      "  ip_protocol = \"TCP\"",
      "}",
      "",
      "# Pass port_range to the backend service",
      "resource \"alicloud_instance\" \"backend\" {",
      "  # ...",
      "  user_data = \"config_service.sh --portrange=${data.alicloud_security_group_rules.ingress_rules_ds.rules.0.port_range}\"",
      "}"
    ]
  },
  "alicloud-data-security_groups": {
    "description": "Defines security_groups",
    "prefix": "tf-alicloud-data-security_groups",
    "body": [
      "# Filter security groups and print the results into a file",
      "data \"alicloud_security_groups\" \"sec_groups_ds\" {",
      "  name_regex  = \"^web-\"",
      "  output_file = \"web_access.json\"",
      "}",
      "",
      "# In conjunction with a VPC",
      "resource \"alicloud_vpc\" \"primary_vpc_ds\" {",
      "  # ...",
      "}",
      "",
      "data \"alicloud_security_groups\" \"primary_sec_groups_ds\" {",
      "  vpc_id = \"${alicloud_vpc.primary_vpc_ds.id}\"",
      "}",
      "",
      "output \"first_group_id\" {",
      "  value = \"${data.alicloud_security_groups.primary_sec_groups_ds.groups.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-slb_acls": {
    "description": "Defines slb_acls",
    "prefix": "tf-alicloud-data-slb_acls",
    "body": [
      "data \"alicloud_slb_acls\" \"sample_ds\" {",
      "}",
      "",
      "output \"first_slb_acl_id\" {",
      "  value = \"${data.alicloud_slb_acls.sample_ds.acls.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-slb_attachments": {
    "description": "Defines slb_attachments",
    "prefix": "tf-alicloud-data-slb_attachments",
    "body": [
      "data \"alicloud_slb_attachments\" \"sample_ds\" {",
      "  load_balancer_id = \"${alicloud_slb.sample_slb.id}\"",
      "}",
      "",
      "output \"first_slb_attachment_instance_id\" {",
      "  value = \"${data.alicloud_slb_attachments.sample_ds.slb_attachments.0.instance_id}\"",
      "}"
    ]
  },
  "alicloud-data-slb_ca_certificates": {
    "description": "Defines slb_ca_certificates",
    "prefix": "tf-alicloud-data-slb_ca_certificates",
    "body": [
      "data \"alicloud_slb_ca_certificates\" \"sample_ds\" {",
      "}",
      "",
      "output \"first_slb_ca_certificate_id\" {",
      "  value = \"${data.alicloud_slb_ca_certificates.sample_ds.certificates.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-slb_listeners": {
    "description": "Defines slb_listeners",
    "prefix": "tf-alicloud-data-slb_listeners",
    "body": [
      "data \"alicloud_slb_listeners\" \"sample_ds\" {",
      "  load_balancer_id = \"${alicloud_slb.sample_slb.id}\"",
      "}",
      "",
      "output \"first_slb_listener_protocol\" {",
      "  value = \"${data.alicloud_slb_listeners.sample_ds.slb_listeners.0.protocol}\"",
      "}"
    ]
  },
  "alicloud-data-slb_rules": {
    "description": "Defines slb_rules",
    "prefix": "tf-alicloud-data-slb_rules",
    "body": [
      "data \"alicloud_slb_rules\" \"sample_ds\" {",
      "  load_balancer_id = \"${alicloud_slb.sample_slb.id}\"",
      "  frontend_port    = 80",
      "}",
      "",
      "output \"first_slb_rule_id\" {",
      "  value = \"${data.alicloud_slb_rules.sample_ds.slb_rules.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-slb_server_certificates": {
    "description": "Defines slb_server_certificates",
    "prefix": "tf-alicloud-data-slb_server_certificates",
    "body": [
      "data \"alicloud_slb_server_certificates\" \"sample_ds\" {",
      "}",
      "",
      "output \"first_slb_server_certificate_id\" {",
      "  value = \"${data.alicloud_slb_server_certificates.sample_ds.certificates.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-slb_server_groups": {
    "description": "Defines slb_server_groups",
    "prefix": "tf-alicloud-data-slb_server_groups",
    "body": [
      "data \"alicloud_slb_server_groups\" \"sample_ds\" {",
      "  load_balancer_id = \"${alicloud_slb.sample_slb.id}\"",
      "}",
      "",
      "output \"first_slb_server_group_id\" {",
      "  value = \"${data.alicloud_slb_server_groups.sample_ds.slb_server_groups.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-slbs": {
    "description": "Defines slbs",
    "prefix": "tf-alicloud-data-slbs",
    "body": [
      "data \"alicloud_slbs\" \"slbs_ds\" {",
      "  name_regex = \"sample_slb\"",
      "}",
      "",
      "output \"first_slb_id\" {",
      "  value = \"${data.alicloud_slbs.slbs_ds.slbs.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-snapshots": {
    "description": "Defines snapshots",
    "prefix": "tf-alicloud-data-snapshots",
    "body": [
      "data \"alicloud_snapshots\" \"snapshots\" {",
      "  ids        = [\"s-123456890abcdef\"]",
      "  name_regex = \"tf-testAcc-snapshot\"",
      "}"
    ]
  },
  "alicloud-data-snat_entries": {
    "description": "Defines snat_entries",
    "prefix": "tf-alicloud-data-snat_entries",
    "body": [
      "variable \"name\" {",
      "  default = \"snat-entry-example-name\"",
      "}",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"foo\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/12\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"foo\" {",
      "  vpc_id            = \"${alicloud_vpc.foo.id}\"",
      "  cidr_block        = \"172.16.0.0/21\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_nat_gateway\" \"foo\" {",
      "  vpc_id        = \"${alicloud_vpc.foo.id}\"",
      "  specification = \"Small\"",
      "  name          = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_eip\" \"foo\" {",
      "  name = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_eip_association\" \"foo\" {",
      "  allocation_id = \"${alicloud_eip.foo.id}\"",
      "  instance_id   = \"${alicloud_nat_gateway.foo.id}\"",
      "}",
      "",
      "resource \"alicloud_snat_entry\" \"foo\" {",
      "  snat_table_id     = \"${alicloud_nat_gateway.foo.snat_table_ids}\"",
      "  source_vswitch_id = \"${alicloud_vswitch.foo.id}\"",
      "  snat_ip           = \"${alicloud_eip.foo.ip_address}\"",
      "}",
      "",
      "data \"alicloud_snat_entries\" \"foo\" {",
      "  snat_table_id = \"${alicloud_snat_entry.foo.snat_table_id}\"",
      "}"
    ]
  },
  "alicloud-data-ssl_vpn_client_certs": {
    "description": "Defines ssl_vpn_client_certs",
    "prefix": "tf-alicloud-data-ssl_vpn_client_certs",
    "body": [
      "data \"alicloud_ssl_vpn_client_certs\" \"foo\" {",
      "  ids               = [\"fake-cert-id\"]",
      "  ssl_vpn_server_id = \"fake-server-id\"",
      "  output_file       = \"/tmp/clientcert\"",
      "  name_regex        = \"^foo\"",
      "}"
    ]
  },
  "alicloud-data-ssl_vpn_servers": {
    "description": "Defines ssl_vpn_servers",
    "prefix": "tf-alicloud-data-ssl_vpn_servers",
    "body": [
      "data \"alicloud_ssl_vpn_servers\" \"foo\" {",
      "  ids            = [\"fake-server-id\"]",
      "  vpn_gateway_id = \"fake-vpn-id\"",
      "  output_file    = \"/tmp/sslserver\"",
      "  name_regex     = \"^foo\"",
      "}"
    ]
  },
  "alicloud-data-vpcs": {
    "description": "Defines vpcs",
    "prefix": "tf-alicloud-data-vpcs",
    "body": [
      "data \"alicloud_vpcs\" \"vpcs_ds\" {",
      "  cidr_block = \"172.16.0.0/12\"",
      "  status     = \"Available\"",
      "  name_regex = \"^foo\"",
      "}",
      "",
      "output \"first_vpc_id\" {",
      "  value = \"${data.alicloud_vpcs.vpcs_ds.vpcs.0.id}\"",
      "}"
    ]
  },
  "alicloud-data-vpn_connections": {
    "description": "Defines vpn_connections",
    "prefix": "tf-alicloud-data-vpn_connections",
    "body": [
      "data \"alicloud_vpn_connections\" \"foo\" {",
      "  ids                 = [\"fake-conn-id\"]",
      "  vpn_gateway_id      = \"fake-vpn-id\"",
      "  customer_gateway_id = \"fake-cgw-id\"",
      "  output_file         = \"/tmp/vpnconn\"",
      "}",
      ""
    ]
  },
  "alicloud-data-vpn_customer_gateways": {
    "description": "Defines vpn_customer_gateways",
    "prefix": "tf-alicloud-data-vpn_customer_gateways",
    "body": [
      "data \"alicloud_vpn_customer_gateways\" \"foo\" {",
      "  name_regex          = \"testAcc*\"",
      "  customer_gateway_id = \"fake-id*\"",
      "  output_file         = \"/tmp/cgws\"",
      "}",
      ""
    ]
  },
  "alicloud-data-vpn_gateways": {
    "description": "Defines vpn_gateways",
    "prefix": "tf-alicloud-data-vpn_gateways",
    "body": [
      "data \"alicloud_vpn_gateways\" \"vpn_gateways\" {",
      "  vpc_id          = \"fake-vpc-id\"",
      "  vpn_gateway_id  = \"fake-vpn-id\"",
      "  status          = \"active\"",
      "  business_status = \"Normal\"",
      "  name_regex      = \"testAcc*\"",
      "  output_file     = \"/tmp/vpns\"",
      "}",
      ""
    ]
  },
  "alicloud-data-vswitches": {
    "description": "Defines vswitches",
    "prefix": "tf-alicloud-data-vswitches",
    "body": [
      "variable \"name\" {",
      "  default = \"vswitchDatasourceName\"",
      "}",
      "data \"alicloud_zones\" \"default\" {}",
      "",
      "resource \"alicloud_vpc\" \"vpc\" {",
      "  cidr_block = \"172.16.0.0/16\"",
      "  name       = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"vswitch\" {",
      "  name              = \"${var.name}\"",
      "  cidr_block        = \"172.16.0.0/24\"",
      "  vpc_id            = \"${alicloud_vpc.vpc.id}\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "}",
      "",
      "data \"alicloud_vswitches\" \"default\" {",
      "  name_regex = \"${alicloud_vswitch.vswitch.name}\"",
      "}"
    ]
  },
  "alicloud-data-zones": {
    "description": "Defines zones",
    "prefix": "tf-alicloud-data-zones",
    "body": [
      "# Declare the data source",
      "data \"alicloud_zones\" \"zones_ds\" {",
      "  available_instance_type = \"ecs.n4.large\"",
      "  available_disk_category = \"cloud_ssd\"",
      "}",
      "",
      "# Create an ECS instance with the first matched zone",
      "resource \"alicloud_instance\" \"instance\" {",
      "  availability_zone = \"${data.alicloud_zones.zones_ds.zones.0.id}\"",
      "",
      "  # Other properties...",
      "}"
    ]
  },
  "alicloud-resource-actiontrail": {
    "description": "Defines actiontrail",
    "prefix": "tf-alicloud-resource-actiontrail",
    "body": [
      "# Create a new action trail.",
      "resource \"alicloud_actiontrail\" \"foo\" {",
      "  name            = \"action-trail\"",
      "  event_rw        = \"Write-test\"",
      "  oss_bucket_name = \"${alicloud_oss_bucket.bucket.id}\"",
      "  role_name       = \"${alicloud_ram_role_policy_attachment.attach.role_name}\"",
      "  oss_key_prefix  = \"at-product-account-audit-B\"",
      "}"
    ]
  },
  "alicloud-resource-api_gateway_api": {
    "description": "Defines api_gateway_api",
    "prefix": "tf-alicloud-resource-api_gateway_api",
    "body": [
      "resource \"alicloud_api_gateway_api\" \"apiGatewayApi\" {",
      "  name        = \"terraformapi\"",
      "  group_id    = \"${alicloud_api_gateway_group.apiGatewayGroup.id}\"",
      "  description = \"description\"",
      "  auth_type   = \"APP\"",
      "",
      "  request_config = {",
      "    protocol = \"HTTP\"",
      "    method   = \"GET\"",
      "    path     = \"/test/path1\"",
      "    mode     = \"MAPPING\"",
      "  }",
      "",
      "  service_type = \"HTTP\"",
      "",
      "  http_service_config = {",
      "    address   = \"http://apigateway-backend.alicloudapi.com:8080\"",
      "    method    = \"GET\"",
      "    path      = \"/web/cloudapi\"",
      "    timeout   = 12",
      "    aone_name = \"cloudapi-openapi\"",
      "  }",
      "",
      "  request_parameters = [",
      "    {",
      "      name         = \"aaa\"",
      "      type         = \"STRING\"",
      "      required     = \"OPTIONAL\"",
      "      in           = \"QUERY\"",
      "      in_service   = \"QUERY\"",
      "      name_service = \"testparams\"",
      "    },",
      "  ]",
      "",
      "  stage_names = [",
      "    \"RELEASE\",",
      "    \"TEST\",",
      "  ]",
      "}"
    ]
  },
  "alicloud-resource-api_gateway_app": {
    "description": "Defines api_gateway_app",
    "prefix": "tf-alicloud-resource-api_gateway_app",
    "body": [
      "resource \"alicloud_api_gateway_app\" \"apiTest\" {",
      "  name        = \"ApiGatewayAPp\"",
      "  description = \"description of the app\"",
      "}"
    ]
  },
  "alicloud-resource-api_gateway_app_attachment": {
    "description": "Defines api_gateway_app_attachment",
    "prefix": "tf-alicloud-resource-api_gateway_app_attachment",
    "body": [
      "resource \"alicloud_api_gateway_app_attachment\" \"foo\" {",
      "  api_id     = \"d29d25b9cfdf4742b1a3f6537299a749\"",
      "  group_id   = \"aaef8cdbb404420f9398a74ed1db7fff\"",
      "  app_id     = \"20898181\"",
      "  stage_name = \"PRE\"",
      "}"
    ]
  },
  "alicloud-resource-api_gateway_group": {
    "description": "Defines api_gateway_group",
    "prefix": "tf-alicloud-resource-api_gateway_group",
    "body": [
      "resource \"alicloud_api_gateway_group\" \"apiGroup\" {",
      "  name        = \"ApiGatewayGroup\"",
      "  description = \"description of the api group\"",
      "}"
    ]
  },
  "alicloud-resource-api_gateway_vpc_access": {
    "description": "Defines api_gateway_vpc_access",
    "prefix": "tf-alicloud-resource-api_gateway_vpc_access",
    "body": [
      "resource \"alicloud_api_gateway_vpc_access\" \"foo\" {",
      "  name        = \"ApiGatewayVpc\"",
      "  vpc_id      = \"vpc-awkcj192ka9zalz\"",
      "  instance_id = \"i-kai2ks92kzkw92ka\"",
      "  port        = 8080",
      "}"
    ]
  },
  "alicloud-resource-cas_certificate": {
    "description": "Defines cas_certificate",
    "prefix": "tf-alicloud-resource-cas_certificate",
    "body": [
      "# Add a new Certificate.",
      "resource \"alicloud_cas_certificate\" \"cert\" {",
      "  name = \"test\"",
      "  cert = \"${file(\"${path.module}/test.crt\")}\"",
      "  key  = \"${file(\"${path.module}/test.key\")}\"",
      "}"
    ]
  },
  "alicloud-resource-cdn_domain": {
    "description": "Defines cdn_domain",
    "prefix": "tf-alicloud-resource-cdn_domain",
    "body": [
      "# Add a CDN Accelerated Domain with configs.",
      "resource \"alicloud_cdn_domain\" \"domain\" {",
      "  domain_name = \"${your_cdn_domain_name}\"",
      "  cdn_type    = \"web\"",
      "  source_type = \"domain\"",
      "  sources     = [\"${your_cdn_domain_source1}\", \"${your_cdn_domain_source2}\"]",
      "",
      "  // configs",
      "  optimize_enable      = \"off\"",
      "  page_compress_enable = \"off\"",
      "  range_enable         = \"off\"",
      "  video_seek_enable    = \"off\"",
      "  block_ips            = [\"1.2.3.4\", \"111.222.111.111\"]",
      "  parameter_filter_config = [",
      "    {",
      "      enable        = \"on\"",
      "      hash_key_args = [\"hello\", \"youyouyou\"]",
      "  }]",
      "  page_404_config = [",
      "    {",
      "      page_type       = \"other\"",
      "      custom_page_url = \"http://${your_cdn_domain_name}/notfound/\"",
      "  }]",
      "  refer_config = [",
      "    {",
      "      refer_type  = \"block\"",
      "      refer_list  = [\"www.xxxx.com\", \"www.xxxx.cn\"]",
      "      allow_empty = \"off\"",
      "  }]",
      "  auth_config = [",
      "    {",
      "      auth_type  = \"type_a\"",
      "      master_key = \"helloworld1\"",
      "      slave_key  = \"helloworld2\"",
      "  }]",
      "  http_header_config = [",
      "    {",
      "      header_key   = \"Content-Type\",",
      "      header_value = \"text/plain\"",
      "    },",
      "    {",
      "      header_key   = \"Access-Control-Allow-Origin\",",
      "      header_value = \"*\"",
      "  }]",
      "  cache_config = [",
      "    {",
      "      cache_content = \"/hello/world\",",
      "      ttl           = 1000",
      "      cache_type    = \"path\"",
      "    },",
      "    {",
      "      cache_content = \"/hello/world/youyou\",",
      "      ttl           = 1000",
      "      cache_type    = \"path\"",
      "    },",
      "    {",
      "      cache_content = \"txt,jpg,png\",",
      "      ttl           = 2000",
      "      cache_type    = \"suffix\"",
      "  }]",
      "}"
    ]
  },
  "alicloud-resource-cdn_domain_config": {
    "description": "Defines cdn_domain_config",
    "prefix": "tf-alicloud-resource-cdn_domain_config",
    "body": [
      "# Create a new Domain config.",
      "resource \"alicloud_cdn_domain_new\" \"domain\" {",
      "  domain_name = \"tf-testacc%d.xiaozhu.com\"",
      "  cdn_type    = \"web\"",
      "  scope       = \"overseas\"",
      "  sources {",
      "    content  = \"1.1.1.1\"",
      "    type     = \"ipaddr\"",
      "    priority = \"20\"",
      "    port     = 80",
      "    weight   = \"15\"",
      "  }",
      "}",
      "resource \"alicloud_cdn_domain_config\" \"config\" {",
      "  domain_name   = \"${alicloud_cdn_domain_new.domain.domain_name}\"",
      "  function_name = \"ip_allow_list_set\"",
      "  function_args {",
      "    arg_name  = \"ip_list\"",
      "    arg_value = \"110.110.110.110\"",
      "  }",
      "}",
      ""
    ]
  },
  "alicloud-resource-cdn_domain_new": {
    "description": "Defines cdn_domain_new",
    "prefix": "tf-alicloud-resource-cdn_domain_new",
    "body": [
      "# Create a new Domain.",
      "resource \"alicloud_cdn_domain_new\" \"domain\" {",
      "  domain_name = \"terraform.test.com\"",
      "  cdn_type    = \"web\"",
      "  scope       = \"overseas\"",
      "  sources {",
      "    content  = \"1.1.1.1\"",
      "    type     = \"ipaddr\"",
      "    priority = 20",
      "    port     = 80",
      "    weight   = 10",
      "  }",
      "}",
      ""
    ]
  },
  "alicloud-resource-cen_bandwidth_limit": {
    "description": "Defines cen_bandwidth_limit",
    "prefix": "tf-alicloud-resource-cen_bandwidth_limit",
    "body": [
      "variable \"name\" {",
      "  default = \"tf-testAccCenBandwidthLimitConfig\"",
      "}",
      "",
      "provider \"alicloud\" {",
      "  alias  = \"fra\"",
      "  region = \"eu-central-1\"",
      "}",
      "",
      "provider \"alicloud\" {",
      "  alias  = \"sh\"",
      "  region = \"cn-shanghai\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"vpc1\" {",
      "  provider   = \"alicloud.fra\"",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"192.168.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"vpc2\" {",
      "  provider   = \"alicloud.sh\"",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/12\"",
      "}",
      "",
      "resource \"alicloud_cen_instance\" \"cen\" {",
      "  name        = \"${var.name}\"",
      "  description = \"tf-testAccCenBandwidthLimitConfigDescription\"",
      "}",
      "",
      "resource \"alicloud_cen_bandwidth_package\" \"bwp\" {",
      "  bandwidth = 5",
      "  geographic_region_ids = [",
      "    \"Europe\",",
      "  \"China\"]",
      "}",
      "",
      "resource \"alicloud_cen_bandwidth_package_attachment\" \"bwp_attach\" {",
      "  instance_id          = \"${alicloud_cen_instance.cen.id}\"",
      "  bandwidth_package_id = \"${alicloud_cen_bandwidth_package.bwp.id}\"",
      "}",
      "",
      "resource \"alicloud_cen_instance_attachment\" \"vpc_attach_1\" {",
      "  instance_id              = \"${alicloud_cen_instance.cen.id}\"",
      "  child_instance_id        = \"${alicloud_vpc.vpc1.id}\"",
      "  child_instance_region_id = \"eu-central-1\"",
      "}",
      "",
      "resource \"alicloud_cen_instance_attachment\" \"vpc_attach_2\" {",
      "  instance_id              = \"${alicloud_cen_instance.cen.id}\"",
      "  child_instance_id        = \"${alicloud_vpc.vpc2.id}\"",
      "  child_instance_region_id = \"cn-shanghai\"",
      "}",
      "",
      "resource \"alicloud_cen_bandwidth_limit\" \"foo\" {",
      "  instance_id = \"${alicloud_cen_instance.cen.id}\"",
      "  region_ids = [",
      "    \"eu-central-1\",",
      "  \"cn-shanghai\"]",
      "  bandwidth_limit = 4",
      "  depends_on = [",
      "    \"alicloud_cen_bandwidth_package_attachment.bwp_attach\",",
      "    \"alicloud_cen_instance_attachment.vpc_attach_1\",",
      "  \"alicloud_cen_instance_attachment.vpc_attach_2\"]",
      "}"
    ]
  },
  "alicloud-resource-cen_bandwidth_package": {
    "description": "Defines cen_bandwidth_package",
    "prefix": "tf-alicloud-resource-cen_bandwidth_package",
    "body": [
      "resource \"alicloud_cen_bandwidth_package\" \"foo\" {",
      "  name      = \"tf-testAccCenBandwidthPackageConfig\"",
      "  bandwidth = 5",
      "  geographic_region_ids = [",
      "    \"China\",",
      "  \"Asia-Pacific\"]",
      "}"
    ]
  },
  "alicloud-resource-cen_bandwidth_package_attachment": {
    "description": "Defines cen_bandwidth_package_attachment",
    "prefix": "tf-alicloud-resource-cen_bandwidth_package_attachment",
    "body": [
      "# Create a new bandwidth package attachment and use it to attach a bandwidth package to a new CEN",
      "resource \"alicloud_cen_instance\" \"cen\" {",
      "  name        = \"tf-testAccCenBandwidthPackageAttachmentConfig\"",
      "  description = \"tf-testAccCenBandwidthPackageAttachmentDescription\"",
      "}",
      "",
      "resource \"alicloud_cen_bandwidth_package\" \"bwp\" {",
      "  bandwidth = 20",
      "  geographic_region_ids = [",
      "    \"China\",",
      "  \"Asia-Pacific\"]",
      "}",
      "",
      "resource \"alicloud_cen_bandwidth_package_attachment\" \"foo\" {",
      "  instance_id          = \"${alicloud_cen_instance.cen.id}\"",
      "  bandwidth_package_id = \"${alicloud_cen_bandwidth_package.bwp.id}\"",
      "}"
    ]
  },
  "alicloud-resource-cen_instance": {
    "description": "Defines cen_instance",
    "prefix": "tf-alicloud-resource-cen_instance",
    "body": [
      "resource \"alicloud_cen_instance\" \"cen\" {",
      "  name        = \"tf_test_foo\"",
      "  description = \"an example for cen\"",
      "}"
    ]
  },
  "alicloud-resource-cen_instance_attachment": {
    "description": "Defines cen_instance_attachment",
    "prefix": "tf-alicloud-resource-cen_instance_attachment",
    "body": [
      "# Create a new instance-attachment and use it to attach one child instance to a new CEN",
      "variable \"name\" {",
      "  default = \"tf-testAccCenInstanceAttachmentBasic\"",
      "}",
      "",
      "resource \"alicloud_cen_instance\" \"cen\" {",
      "  name        = \"${var.name}\"",
      "  description = \"terraform01\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"vpc\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"192.168.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_cen_instance_attachment\" \"foo\" {",
      "  instance_id              = \"${alicloud_cen_instance.cen.id}\"",
      "  child_instance_id        = \"${alicloud_vpc.vpc.id}\"",
      "  child_instance_region_id = \"cn-beijing\"",
      "}"
    ]
  },
  "alicloud-resource-cen_instance_grant": {
    "description": "Defines cen_instance_grant",
    "prefix": "tf-alicloud-resource-cen_instance_grant",
    "body": [
      "# Create a new instance-grant and use it to grant one child instance of account1 to a new CEN of account 2.",
      "provider \"alicloud\" {",
      "  access_key = \"access123\"",
      "  secret_key = \"secret123\"",
      "  alias      = \"account1\"",
      "}",
      "",
      "provider \"alicloud\" {",
      "  access_key = \"access456\"",
      "  secret_key = \"secret456\"",
      "  alias      = \"account2\"",
      "}",
      "",
      "variable \"name\" {",
      "  default = \"tf-testAccCenInstanceGrantBasic\"",
      "}",
      "",
      "resource \"alicloud_cen_instance\" \"cen\" {",
      "  provider = \"alicloud.account2\"",
      "  name     = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"vpc\" {",
      "  provider   = \"alicloud.account1\"",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"192.168.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_cen_instance_grant\" \"example\" {",
      "  provider          = \"alicloud.account1\"",
      "  cen_id            = \"${alicloud_cen_instance.cen.id}\"",
      "  child_instance_id = \"${alicloud_vpc.vpc.id}\"",
      "  cen_owner_id      = \"uid2\"",
      "}",
      "",
      "resource \"alicloud_cen_instance_attachment\" \"foo\" {",
      "  provider                 = \"alicloud.account2\"",
      "  instance_id              = \"${alicloud_cen_instance.cen.id}\"",
      "  child_instance_id        = \"${alicloud_vpc.vpc.id}\"",
      "  child_instance_region_id = \"cn-qingdao\"",
      "  child_instance_owner_id  = \"uid1\"",
      "  depends_on = [",
      "  \"alicloud_cen_instance_grant.foo\"]",
      "}"
    ]
  },
  "alicloud-resource-cen_route_entry": {
    "description": "Defines cen_route_entry",
    "prefix": "tf-alicloud-resource-cen_route_entry",
    "body": [
      "# Create a cen_route_entry resource and use it to publish a route entry pointing to an ECS.",
      "",
      "provider \"alicloud\" {",
      "  alias  = \"hz\"",
      "  region = \"cn-hangzhou\"",
      "}",
      "",
      "variable \"name\" {",
      "  default = \"tf-testAccCenRouteEntryConfig\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  provider                    = \"alicloud.hz\"",
      "  available_disk_category     = \"cloud_efficiency\"",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "data \"alicloud_instance_types\" \"default\" {",
      "  provider          = \"alicloud.hz\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  cpu_core_count    = 1",
      "  memory_size       = 2",
      "}",
      "",
      "data \"alicloud_images\" \"default\" {",
      "  provider    = \"alicloud.hz\"",
      "  name_regex  = \"^ubuntu_14.*_64\"",
      "  most_recent = true",
      "  owners      = \"system\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"vpc\" {",
      "  provider   = \"alicloud.hz\"",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/12\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  provider          = \"alicloud.hz\"",
      "  vpc_id            = \"${alicloud_vpc.vpc.id}\"",
      "  cidr_block        = \"172.16.0.0/21\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_security_group\" \"default\" {",
      "  provider    = \"alicloud.hz\"",
      "  name        = \"${var.name}\"",
      "  description = \"foo\"",
      "  vpc_id      = \"${alicloud_vpc.vpc.id}\"",
      "}",
      "",
      "resource \"alicloud_instance\" \"default\" {",
      "  provider                   = \"alicloud.hz\"",
      "  vswitch_id                 = \"${alicloud_vswitch.default.id}\"",
      "  image_id                   = \"${data.alicloud_images.default.images.0.id}\"",
      "  instance_type              = \"${data.alicloud_instance_types.default.instance_types.0.id}\"",
      "  system_disk_category       = \"cloud_efficiency\"",
      "  internet_charge_type       = \"PayByTraffic\"",
      "  internet_max_bandwidth_out = 5",
      "  security_groups            = [\"${alicloud_security_group.default.id}\"]",
      "  instance_name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_cen_instance\" \"cen\" {",
      "  name = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_cen_instance_attachment\" \"attach\" {",
      "  instance_id              = \"${alicloud_cen_instance.cen.id}\"",
      "  child_instance_id        = \"${alicloud_vpc.vpc.id}\"",
      "  child_instance_region_id = \"cn-hangzhou\"",
      "  depends_on = [",
      "  \"alicloud_vswitch.default\"]",
      "}",
      "",
      "resource \"alicloud_route_entry\" \"route\" {",
      "  provider              = \"alicloud.hz\"",
      "  route_table_id        = \"${alicloud_vpc.vpc.route_table_id}\"",
      "  destination_cidrblock = \"11.0.0.0/16\"",
      "  nexthop_type          = \"Instance\"",
      "  nexthop_id            = \"${alicloud_instance.default.id}\"",
      "}",
      "",
      "resource \"alicloud_cen_route_entry\" \"foo\" {",
      "  provider       = \"alicloud.hz\"",
      "  instance_id    = \"${alicloud_cen_instance.cen.id}\"",
      "  route_table_id = \"${alicloud_vpc.vpc.route_table_id}\"",
      "  cidr_block     = \"${alicloud_route_entry.route.destination_cidrblock}\"",
      "  depends_on = [",
      "  \"alicloud_cen_instance_attachment.attach\"]",
      "}"
    ]
  },
  "alicloud-resource-cms_alarm": {
    "description": "Defines cms_alarm",
    "prefix": "tf-alicloud-resource-cms_alarm",
    "body": [
      "resource \"alicloud_cms_alarm\" \"basic\" {",
      "  name    = \"tf-testAccCmsAlarm_basic\"",
      "  project = \"acs_ecs_dashboard\"",
      "  metric  = \"disk_writebytes\"",
      "  dimensions = {",
      "    instanceId = \"i-bp1247,i-bp11gd\"",
      "    device     = \"/dev/vda1,/dev/vdb1\"",
      "  }",
      "  statistics      = \"Average\"",
      "  period          = 900",
      "  operator        = \"<=\"",
      "  threshold       = 35",
      "  triggered_count = 2",
      "  contact_groups  = [\"test-group\"]",
      "  end_time        = 20",
      "  start_time      = 6",
      "  notify_type     = 1",
      "  webhook         = \"https://${data.alicloud_account.current.id}.eu-central-1.fc.aliyuncs.com/2016-08-15/proxy/Terraform/AlarmEndpointMock/\"",
      "}"
    ]
  },
  "alicloud-resource-common_bandwidth_package": {
    "description": "Defines common_bandwidth_package",
    "prefix": "tf-alicloud-resource-common_bandwidth_package",
    "body": [
      "resource \"alicloud_common_bandwidth_package\" \"foo\" {",
      "  bandwidth            = \"200\"",
      "  internet_charge_type = \"PayByBandwidth\"",
      "  name                 = \"test-common-bandwidth-package\"",
      "  description          = \"test-common-bandwidth-package\"",
      "}"
    ]
  },
  "alicloud-resource-common_bandwidth_package_attachment": {
    "description": "Defines common_bandwidth_package_attachment",
    "prefix": "tf-alicloud-resource-common_bandwidth_package_attachment",
    "body": [
      "resource \"alicloud_common_bandwidth_package\" \"foo\" {",
      "  bandwidth   = \"2\"",
      "  name        = \"test_common_bandwidth_package\"",
      "  description = \"test_common_bandwidth_package\"",
      "}",
      "",
      "resource \"alicloud_eip\" \"foo\" {",
      "  bandwidth            = \"2\"",
      "  internet_charge_type = \"PayByBandwidth\"",
      "}",
      "",
      "resource \"alicloud_common_bandwidth_package_attachment\" \"foo\" {",
      "  bandwidth_package_id = \"${alicloud_common_bandwidth_package.foo.id}\"",
      "  instance_id          = \"${alicloud_eip.foo.id}\"",
      "}",
      ""
    ]
  },
  "alicloud-resource-container_cluster": {
    "description": "Defines container_cluster",
    "prefix": "tf-alicloud-resource-container_cluster",
    "body": [
      "resource \"alicloud_cs_swarm\" \"my_cluster\" {",
      "  password = \"Test12345\"",
      "  instance_type = \"ecs.n4.small\"",
      "  name = \"ClusterFromAlicloud\"",
      "  node_number = 2",
      "  disk_category = \"cloud_efficiency\"",
      "  disk_size = 20",
      "  cidr_block = \"172.18.0.0/24\"",
      "  image_id = \"${var.image_id}\"",
      "  vswitch_id = \"${var.vswitch_id}\"",
      "}",
      ""
    ]
  },
  "alicloud-resource-cr_namespace": {
    "description": "Defines cr_namespace",
    "prefix": "tf-alicloud-resource-cr_namespace",
    "body": [
      "resource \"alicloud_cr_namespace\" \"my-namespace\" {",
      "  name               = \"my-namespace\"",
      "  auto_create        = false",
      "  default_visibility = \"PUBLIC\"",
      "}"
    ]
  },
  "alicloud-resource-cr_repo": {
    "description": "Defines cr_repo",
    "prefix": "tf-alicloud-resource-cr_repo",
    "body": [
      "resource \"alicloud_cr_namespace\" \"my-namespace\" {",
      "  name               = \"my-namespace\"",
      "  auto_create        = false",
      "  default_visibility = \"PUBLIC\"",
      "}",
      "",
      "resource \"alicloud_cr_repo\" \"my-repo\" {",
      "  namespace = \"${alicloud_cr_namespace.my-namespace.name}\"",
      "  name      = \"my-repo\"",
      "  summary   = \"this is summary of my new repo\"",
      "  repo_type = \"PUBLIC\"",
      "  detail    = \"this is a public repo\"",
      "}"
    ]
  },
  "alicloud-resource-cs_application": {
    "description": "Defines cs_application",
    "prefix": "tf-alicloud-resource-cs_application",
    "body": [
      "resource \"alicloud_cs_application\" \"app\" {",
      "  cluster_name = \"my-first-swarm\"",
      "  name         = \"wordpress\"",
      "  version      = \"1.2\"",
      "  template     = \"${file(\"wordpress.yml\")}\"",
      "  latest_image = true",
      "  environment = {",
      "    EXTERNAL_URL = \"123.123.123.123:8080\"",
      "  }",
      "}"
    ]
  },
  "alicloud-resource-cs_kubernetes": {
    "description": "Defines cs_kubernetes",
    "prefix": "tf-alicloud-resource-cs_kubernetes",
    "body": [
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "resource \"alicloud_cs_kubernetes\" \"main\" {",
      "  name_prefix           = \"my-first-k8s\"",
      "  availability_zone     = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  new_nat_gateway       = true",
      "  master_instance_types = [\"ecs.n4.small\"]",
      "  worker_instance_types = [\"ecs.n4.small\"]",
      "  worker_numbers        = [3]",
      "  password              = \"Yourpassword1234\"",
      "  pod_cidr              = \"192.168.1.0/16\"",
      "  service_cidr          = \"192.168.2.0/24\"",
      "  enable_ssh            = true",
      "  install_cloud_monitor = true",
      "}"
    ]
  },
  "alicloud-resource-cs_managed_kubernetes": {
    "description": "Defines cs_managed_kubernetes",
    "prefix": "tf-alicloud-resource-cs_managed_kubernetes",
    "body": [
      "variable \"name\" {",
      "  default = \"my-first-k8s\"",
      "}",
      "data \"alicloud_zones\" main {",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "data \"alicloud_instance_types\" \"default\" {",
      "  availability_zone = \"${data.alicloud_zones.main.zones.0.id}\"",
      "  cpu_core_count    = 1",
      "  memory_size       = 2",
      "}",
      "",
      "resource \"alicloud_cs_managed_kubernetes\" \"k8s\" {",
      "  name                  = \"${var.name}\"",
      "  availability_zone     = \"${data.alicloud_zones.main.zones.0.id}\"",
      "  new_nat_gateway       = true",
      "  worker_instance_types = [\"${data.alicloud_instance_types.default.instance_types.0.id}\"]",
      "  worker_numbers        = [2]",
      "  password              = \"Yourpassword1234\"",
      "  pod_cidr              = \"172.20.0.0/16\"",
      "  service_cidr          = \"172.21.0.0/20\"",
      "  install_cloud_monitor = true",
      "  slb_internet_enabled  = true",
      "  worker_disk_category  = \"cloud_efficiency\"",
      "}"
    ]
  },
  "alicloud-resource-cs_swarm": {
    "description": "Defines cs_swarm",
    "prefix": "tf-alicloud-resource-cs_swarm",
    "body": [
      "resource \"alicloud_cs_swarm\" \"my_cluster\" {",
      "  password      = \"Yourpassword1234\"",
      "  instance_type = \"ecs.n4.small\"",
      "  name          = \"ClusterFromAlicloud\"",
      "  node_number   = 2",
      "  disk_category = \"cloud_efficiency\"",
      "  disk_size     = 20",
      "  cidr_block    = \"172.18.0.0/24\"",
      "  image_id      = \"${var.image_id}\"",
      "  vswitch_id    = \"${var.vswitch_id}\"",
      "}"
    ]
  },
  "alicloud-resource-datahub_project": {
    "description": "Defines datahub_project",
    "prefix": "tf-alicloud-resource-datahub_project",
    "body": [
      "resource \"alicloud_datahub_project\" \"example\" {",
      "  name    = \"tf_datahub_project\"",
      "  comment = \"created by terraform\"",
      "}"
    ]
  },
  "alicloud-resource-datahub_subscription": {
    "description": "Defines datahub_subscription",
    "prefix": "tf-alicloud-resource-datahub_subscription",
    "body": [
      "resource \"alicloud_datahub_subscription\" \"example\" {",
      "  project_name = \"tf_datahub_project\"",
      "  topic_name   = \"tf_datahub_topic\"",
      "  comment      = \"created by terraform\"",
      "}"
    ]
  },
  "alicloud-resource-datahub_topic": {
    "description": "Defines datahub_topic",
    "prefix": "tf-alicloud-resource-datahub_topic",
    "body": [
      "resource \"alicloud_datahub_topic\" \"example\" {",
      "  name         = \"tf_datahub_topic\"",
      "  project_name = \"tf_datahub_project\"",
      "  record_type  = \"BLOB\"",
      "  shard_count  = 3",
      "  life_cycle   = 7",
      "  comment      = \"created by terraform\"",
      "}"
    ]
  },
  "alicloud-resource-db_account": {
    "description": "Defines db_account",
    "prefix": "tf-alicloud-resource-db_account",
    "body": [
      "variable \"creation\" {",
      "  default = \"Rds\"",
      "}",
      "",
      "variable \"name\" {",
      "  default = \"dbaccountmysql\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"${var.creation}\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_db_instance\" \"instance\" {",
      "  engine           = \"MySQL\"",
      "  engine_version   = \"5.6\"",
      "  instance_type    = \"rds.mysql.s1.small\"",
      "  instance_storage = \"10\"",
      "  vswitch_id       = \"${alicloud_vswitch.default.id}\"",
      "  instance_name    = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_db_account\" \"account\" {",
      "  instance_id = \"${alicloud_db_instance.instance.id}\"",
      "  name        = \"tftestnormal\"",
      "  password    = \"Test12345\"",
      "}"
    ]
  },
  "alicloud-resource-db_account_privilege": {
    "description": "Defines db_account_privilege",
    "prefix": "tf-alicloud-resource-db_account_privilege",
    "body": [
      "variable \"creation\" {",
      "  default = \"Rds\"",
      "}",
      "",
      "variable \"name\" {",
      "  default = \"dbaccountprivilegebasic\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"${var.creation}\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_db_instance\" \"instance\" {",
      "  engine           = \"MySQL\"",
      "  engine_version   = \"5.6\"",
      "  instance_type    = \"rds.mysql.s1.small\"",
      "  instance_storage = \"10\"",
      "  vswitch_id       = \"${alicloud_vswitch.default.id}\"",
      "  instance_name    = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_db_database\" \"db\" {",
      "  count       = 2",
      "  instance_id = \"${alicloud_db_instance.instance.id}\"",
      "  name        = \"tfaccountpri_${count.index}\"",
      "  description = \"from terraform\"",
      "}",
      "",
      "resource \"alicloud_db_account\" \"account\" {",
      "  instance_id = \"${alicloud_db_instance.instance.id}\"",
      "  name        = \"tftestprivilege\"",
      "  password    = \"Test12345\"",
      "  description = \"from terraform\"",
      "}",
      "",
      "resource \"alicloud_db_account_privilege\" \"privilege\" {",
      "  instance_id  = \"${alicloud_db_instance.instance.id}\"",
      "  account_name = \"${alicloud_db_account.account.name}\"",
      "  privilege    = \"ReadOnly\"",
      "  db_names     = \"${alicloud_db_database.db.*.name}\"",
      "}"
    ]
  },
  "alicloud-resource-db_backup_policy": {
    "description": "Defines db_backup_policy",
    "prefix": "tf-alicloud-resource-db_backup_policy",
    "body": [
      "variable \"creation\" {",
      "  default = \"Rds\"",
      "}",
      "",
      "variable \"name\" {",
      "  default = \"dbbackuppolicybasic\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"${var.creation}\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_db_instance\" \"instance\" {",
      "  engine           = \"MySQL\"",
      "  engine_version   = \"5.6\"",
      "  instance_type    = \"rds.mysql.s1.small\"",
      "  instance_storage = \"10\"",
      "  vswitch_id       = \"${alicloud_vswitch.default.id}\"",
      "  instance_name    = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_db_backup_policy\" \"policy\" {",
      "  instance_id = \"${alicloud_db_instance.instance.id}\"",
      "}"
    ]
  },
  "alicloud-resource-db_connection": {
    "description": "Defines db_connection",
    "prefix": "tf-alicloud-resource-db_connection",
    "body": [
      "variable \"creation\" {",
      "  default = \"Rds\"",
      "}",
      "",
      "variable \"name\" {",
      "  default = \"dbconnectionbasic\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"${var.creation}\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_db_instance\" \"instance\" {",
      "  engine           = \"MySQL\"",
      "  engine_version   = \"5.6\"",
      "  instance_type    = \"rds.mysql.t1.small\"",
      "  instance_storage = \"10\"",
      "  vswitch_id       = \"${alicloud_vswitch.default.id}\"",
      "  instance_name    = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_db_connection\" \"foo\" {",
      "  instance_id       = \"${alicloud_db_instance.instance.id}\"",
      "  connection_prefix = \"testabc\"",
      "}"
    ]
  },
  "alicloud-resource-db_database": {
    "description": "Defines db_database",
    "prefix": "tf-alicloud-resource-db_database",
    "body": [
      "variable \"creation\" {",
      "  default = \"Rds\"",
      "}",
      "",
      "variable \"name\" {",
      "  default = \"dbdatabasebasic\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"${var.creation}\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_db_instance\" \"instance\" {",
      "  engine           = \"MySQL\"",
      "  engine_version   = \"5.6\"",
      "  instance_type    = \"rds.mysql.s1.small\"",
      "  instance_storage = \"10\"",
      "  vswitch_id       = \"${alicloud_vswitch.default.id}\"",
      "  instance_name    = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_db_database\" \"default\" {",
      "  instance_id = \"${alicloud_db_instance.instance.id}\"",
      "  name        = \"tftestdatabase\"",
      "}"
    ]
  },
  "alicloud-resource-db_instance": {
    "description": "Defines db_instance",
    "prefix": "tf-alicloud-resource-db_instance",
    "body": [
      "variable \"name\" {",
      "  default = \"dbInstanceconfig\"",
      "}",
      "variable \"creation\" {",
      "  default = \"Rds\"",
      "}",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"${var.creation}\"",
      "}",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "resource \"alicloud_db_instance\" \"default\" {",
      "  engine               = \"MySQL\"",
      "  engine_version       = \"5.6\"",
      "  instance_type        = \"rds.mysql.s2.large\"",
      "  instance_storage     = \"30\"",
      "  instance_charge_type = \"Postpaid\"",
      "  instance_name        = \"${var.name}\"",
      "  vswitch_id           = \"${alicloud_vswitch.default.id}\"",
      "  monitoring_period    = \"60\"",
      "}"
    ]
  },
  "alicloud-resource-db_read_write_splitting_connection": {
    "description": "Defines db_read_write_splitting_connection",
    "prefix": "tf-alicloud-resource-db_read_write_splitting_connection",
    "body": [
      "variable \"creation\" {",
      "  default = \"Rds\"",
      "}",
      "",
      "variable \"name\" {",
      "  default = \"dbInstancevpc\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"${var.creation}\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_db_instance\" \"default\" {",
      "  engine               = \"MySQL\"",
      "  engine_version       = \"5.6\"",
      "  instance_type        = \"rds.mysql.t1.small\"",
      "  instance_storage     = \"20\"",
      "  instance_charge_type = \"Postpaid\"",
      "  instance_name        = \"${var.name}\"",
      "  vswitch_id           = \"${alicloud_vswitch.default.id}\"",
      "  security_ips         = [\"10.168.1.12\", \"100.69.7.112\"]",
      "}",
      "",
      "resource \"alicloud_db_readonly_instance\" \"default\" {",
      "  master_db_instance_id = \"${alicloud_db_instance.default.id}\"",
      "  zone_id               = \"${alicloud_db_instance.default.zone_id}\"",
      "  engine_version        = \"${alicloud_db_instance.default.engine_version}\"",
      "  instance_type         = \"${alicloud_db_instance.default.instance_type}\"",
      "  instance_storage      = \"30\"",
      "  instance_name         = \"${var.name}ro\"",
      "  vswitch_id            = \"${alicloud_vswitch.default.id}\"",
      "}",
      "",
      "resource \"alicloud_db_read_write_splitting_connection\" \"default\" {",
      "  instance_id       = \"${alicloud_db_instance.default.id}\"",
      "  connection_prefix = \"t-con-123\"",
      "  distribution_type = \"Standard\"",
      "",
      "  depends_on = [\"alicloud_db_readonly_instance.default\"]",
      "}"
    ]
  },
  "alicloud-resource-db_readonly_instance": {
    "description": "Defines db_readonly_instance",
    "prefix": "tf-alicloud-resource-db_readonly_instance",
    "body": [
      "variable \"creation\" {",
      "  default = \"Rds\"",
      "}",
      "",
      "variable \"name\" {",
      "  default = \"dbInstancevpc\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"${var.creation}\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_db_instance\" \"default\" {",
      "  engine               = \"MySQL\"",
      "  engine_version       = \"5.6\"",
      "  instance_type        = \"rds.mysql.t1.small\"",
      "  instance_storage     = \"20\"",
      "  instance_charge_type = \"Postpaid\"",
      "  instance_name        = \"${var.name}\"",
      "  vswitch_id           = \"${alicloud_vswitch.default.id}\"",
      "  security_ips         = [\"10.168.1.12\", \"100.69.7.112\"]",
      "}",
      "",
      "resource \"alicloud_db_readonly_instance\" \"default\" {",
      "  master_db_instance_id = \"${alicloud_db_instance.default.id}\"",
      "  zone_id               = \"${alicloud_db_instance.default.zone_id}\"",
      "  engine_version        = \"${alicloud_db_instance.default.engine_version}\"",
      "  instance_type         = \"${alicloud_db_instance.default.instance_type}\"",
      "  instance_storage      = \"30\"",
      "  instance_name         = \"${var.name}ro\"",
      "  vswitch_id            = \"${alicloud_vswitch.default.id}\"",
      "}",
      ""
    ]
  },
  "alicloud-resource-ddoscoo_instance": {
    "description": "Defines ddoscoo_instance",
    "prefix": "tf-alicloud-resource-ddoscoo_instance",
    "body": [
      "provider \"alicloud\" {",
      "  endpoints {",
      "    bssopenapi = \"business.aliyuncs.com\"",
      "  }",
      "}",
      "",
      "resource \"alicloud_ddoscoo_instance\" \"newInstance\" {",
      "  name              = \"yourDdoscooInstanceName\"",
      "  bandwidth         = \"30\"",
      "  base_bandwidth    = \"30\"",
      "  service_bandwidth = \"100\"",
      "  port_count        = \"50\"",
      "  domain_count      = \"50\"",
      "  period            = \"1\"",
      "}"
    ]
  },
  "alicloud-resource-disk": {
    "description": "Defines disk",
    "prefix": "tf-alicloud-resource-disk",
    "body": [
      "# Create a new ECS disk.",
      "resource \"alicloud_disk\" \"ecs_disk\" {",
      "  # cn-beijing",
      "  availability_zone = \"cn-beijing-b\"",
      "  name              = \"New-disk\"",
      "  description       = \"Hello ecs disk.\"",
      "  category          = \"cloud_efficiency\"",
      "  size              = \"30\"",
      "",
      "  tags = {",
      "    Name = \"TerraformTest\"",
      "  }",
      "}"
    ]
  },
  "alicloud-resource-disk_attachment": {
    "description": "Defines disk_attachment",
    "prefix": "tf-alicloud-resource-disk_attachment",
    "body": [
      "# Create a new ECS disk-attachment and use it attach one disk to a new instance.",
      "",
      "resource \"alicloud_security_group\" \"ecs_sg\" {",
      "  name        = \"terraform-test-group\"",
      "  description = \"New security group\"",
      "}",
      "",
      "resource \"alicloud_disk\" \"ecs_disk\" {",
      "  availability_zone = \"cn-beijing-a\"",
      "  size              = \"50\"",
      "",
      "  tags = {",
      "    Name = \"TerraformTest-disk\"",
      "  }",
      "}",
      "",
      "resource \"alicloud_instance\" \"ecs_instance\" {",
      "  image_id              = \"ubuntu_140405_64_40G_cloudinit_20161115.vhd\"",
      "  instance_type         = \"ecs.n4.small\"",
      "  availability_zone     = \"cn-beijing-a\"",
      "  security_groups       = [\"${alicloud_security_group.ecs_sg.id}\"]",
      "  instance_name         = \"Hello\"",
      "  instance_network_type = \"classic\"",
      "  internet_charge_type  = \"PayByBandwidth\"",
      "",
      "  tags = {",
      "    Name = \"TerraformTest-instance\"",
      "  }",
      "}",
      "",
      "resource \"alicloud_disk_attachment\" \"ecs_disk_att\" {",
      "  disk_id     = \"${alicloud_disk.ecs_disk.id}\"",
      "  instance_id = \"${alicloud_instance.ecs_instance.id}\"",
      "}"
    ]
  },
  "alicloud-resource-dns": {
    "description": "Defines dns",
    "prefix": "tf-alicloud-resource-dns",
    "body": [
      "# Add a new Domain.",
      "resource \"alicloud_dns\" \"dns\" {",
      "  name     = \"starmove.com\"",
      "  group_id = \"85ab8713-4a30-4de4-9d20-155ff830f651\"",
      "}"
    ]
  },
  "alicloud-resource-dns_group": {
    "description": "Defines dns_group",
    "prefix": "tf-alicloud-resource-dns_group",
    "body": [
      "# Add a new Domain group.",
      "resource \"alicloud_dns_group\" \"group\" {",
      "  name = \"testgroup\"",
      "}"
    ]
  },
  "alicloud-resource-dns_record": {
    "description": "Defines dns_record",
    "prefix": "tf-alicloud-resource-dns_record",
    "body": [
      "# Create a new Domain record",
      "resource \"alicloud_dns_record\" \"record\" {",
      "  name        = \"domainname\"",
      "  host_record = \"@\"",
      "  type        = \"A\"",
      "  value       = \"192.168.99.99\"",
      "}"
    ]
  },
  "alicloud-resource-drds_instance": {
    "description": "Defines drds_instance",
    "prefix": "tf-alicloud-resource-drds_instance",
    "body": [
      "resource \"alicloud_drds_instance\" \"default\" {",
      "  description          = \"drds instance\"",
      "  instance_charge_type = \"PostPaid\"",
      "  zone_id              = \"cn-hangzhou-e\"",
      "  vswitch_id           = \"vsw-bp1jlu3swk8rq2yoi40ey\"",
      "  instance_series      = \"drds.sn1.4c8g\"",
      "  specification        = \"drds.sn1.4c8g.8C16G\"",
      "}"
    ]
  },
  "alicloud-resource-eip": {
    "description": "Defines eip",
    "prefix": "tf-alicloud-resource-eip",
    "body": [
      "# Create a new EIP.",
      "resource \"alicloud_eip\" \"example\" {",
      "  bandwidth            = \"10\"",
      "  internet_charge_type = \"PayByBandwidth\"",
      "}"
    ]
  },
  "alicloud-resource-eip_association": {
    "description": "Defines eip_association",
    "prefix": "tf-alicloud-resource-eip_association",
    "body": [
      "# Create a new EIP association and use it to associate a EIP form a instance.",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "}",
      "",
      "resource \"alicloud_vpc\" \"vpc\" {",
      "  cidr_block = \"10.1.0.0/21\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"vsw\" {",
      "  vpc_id            = \"${alicloud_vpc.vpc.id}\"",
      "  cidr_block        = \"10.1.1.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "",
      "  depends_on = [",
      "    \"alicloud_vpc.vpc\",",
      "  ]",
      "}",
      "",
      "data \"alicloud_instance_types\" \"default\" {",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "}",
      "",
      "data \"alicloud_images\" \"default\" {",
      "  name_regex  = \"^ubuntu_14.*_64\"",
      "  most_recent = true",
      "  owners      = \"system\"",
      "}",
      "",
      "resource \"alicloud_instance\" \"ecs_instance\" {",
      "  image_id          = \"${data.alicloud_images.default.images.0.id}\"",
      "  instance_type     = \"${data.alicloud_instance_types.default.instance_types.0.id}\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  security_groups   = [\"${alicloud_security_group.group.id}\"]",
      "  vswitch_id        = \"${alicloud_vswitch.vsw.id}\"",
      "  instance_name     = \"hello\"",
      "  tags = {",
      "    Name = \"TerraformTest-instance\"",
      "  }",
      "}",
      "",
      "resource \"alicloud_eip\" \"eip\" {}",
      "",
      "resource \"alicloud_eip_association\" \"eip_asso\" {",
      "  allocation_id = \"${alicloud_eip.eip.id}\"",
      "  instance_id   = \"${alicloud_instance.ecs_instance.id}\"",
      "}",
      "",
      "resource \"alicloud_security_group\" \"group\" {",
      "  name        = \"terraform-test-group\"",
      "  description = \"New security group\"",
      "  vpc_id      = \"${alicloud_vpc.vpc.id}\"",
      "}"
    ]
  },
  "alicloud-resource-elasticsearch": {
    "description": "Defines elasticsearch",
    "prefix": "tf-alicloud-resource-elasticsearch",
    "body": [
      "resource \"alicloud_elasticsearch_instance\" \"instance\" {",
      "  instance_charge_type = \"PostPaid\"",
      "  data_node_amount     = \"2\"",
      "  data_node_spec       = \"elasticsearch.sn2ne.large\"",
      "  data_node_disk_size  = \"20\"",
      "  data_node_disk_type  = \"cloud_ssd\"",
      "  vswitch_id           = \"some vswitch id\"",
      "  password             = \"Your password\"",
      "  version              = \"5.5.3_with_X-Pack\"",
      "  description          = \"description\"",
      "  zone_count           = \"2\"",
      "}"
    ]
  },
  "alicloud-resource-ess_alarm": {
    "description": "Defines ess_alarm",
    "prefix": "tf-alicloud-resource-ess_alarm",
    "body": [
      "data \"alicloud_zones\" \"default\" {",
      "  available_disk_category     = \"cloud_efficiency\"",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "data \"alicloud_images\" \"ecs_image\" {",
      "  most_recent = true",
      "  name_regex  = \"^centos_6\\\\w{1,5}[64].*\"",
      "}",
      "",
      "data \"alicloud_instance_types\" \"default\" {",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  cpu_core_count    = 1",
      "  memory_size       = 2",
      "}",
      "",
      "resource \"alicloud_vpc\" \"foo\" {",
      "  name       = \"tf-testAccEssAlarm_basic\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"foo\" {",
      "  name              = \"tf-testAccEssAlarm_basic_foo\"",
      "  vpc_id            = \"${alicloud_vpc.foo.id}\"",
      "  cidr_block        = \"172.16.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"bar\" {",
      "  name              = \"tf-testAccEssAlarm_basic_bar\"",
      "  vpc_id            = \"${alicloud_vpc.foo.id}\"",
      "  cidr_block        = \"172.16.1.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "}",
      "",
      "resource \"alicloud_ess_scaling_group\" \"foo\" {",
      "  min_size           = 1",
      "  max_size           = 1",
      "  scaling_group_name = \"tf-testAccEssAlarm_basic\"",
      "  removal_policies   = [\"OldestInstance\", \"NewestInstance\"]",
      "  vswitch_ids        = [\"${alicloud_vswitch.foo.id}\", \"${alicloud_vswitch.bar.id}\"]",
      "}",
      "",
      "resource \"alicloud_ess_scaling_rule\" \"foo\" {",
      "  scaling_rule_name = \"tf-testAccEssAlarm_basic\"",
      "  scaling_group_id  = \"${alicloud_ess_scaling_group.foo.id}\"",
      "  adjustment_type   = \"TotalCapacity\"",
      "  adjustment_value  = 2",
      "  cooldown          = 60",
      "}",
      "",
      "resource \"alicloud_ess_alarm\" \"foo\" {",
      "  name                = \"tf-testAccEssAlarm_basic\"",
      "  description         = \"Acc alarm test\"",
      "  alarm_actions       = [\"${alicloud_ess_scaling_rule.foo.ari}\"]",
      "  scaling_group_id    = \"${alicloud_ess_scaling_group.foo.id}\"",
      "  metric_type         = \"system\"",
      "  metric_name         = \"CpuUtilization\"",
      "  period              = 300",
      "  statistics          = \"Average\"",
      "  threshold           = 200.3",
      "  comparison_operator = \">=\"",
      "  evaluation_count    = 2",
      "}"
    ]
  },
  "alicloud-resource-ess_attachment": {
    "description": "Defines ess_attachment",
    "prefix": "tf-alicloud-resource-ess_attachment",
    "body": [
      "variable \"name\" {",
      "  default = \"essattachmentconfig\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_disk_category     = \"cloud_efficiency\"",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "data \"alicloud_instance_types\" \"default\" {",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  cpu_core_count    = 2",
      "  memory_size       = 4",
      "}",
      "",
      "data \"alicloud_images\" \"default\" {",
      "  name_regex  = \"^ubuntu_14.*_64\"",
      "  most_recent = true",
      "  owners      = \"system\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_security_group\" \"default\" {",
      "  name   = \"${var.name}\"",
      "  vpc_id = \"${alicloud_vpc.default.id}\"",
      "}",
      "",
      "resource \"alicloud_security_group_rule\" \"default\" {",
      "  type              = \"ingress\"",
      "  ip_protocol       = \"tcp\"",
      "  nic_type          = \"intranet\"",
      "  policy            = \"accept\"",
      "  port_range        = \"22/22\"",
      "  priority          = 1",
      "  security_group_id = \"${alicloud_security_group.default.id}\"",
      "  cidr_ip           = \"172.16.0.0/24\"",
      "}",
      "",
      "resource \"alicloud_ess_scaling_group\" \"default\" {",
      "  min_size           = 0",
      "  max_size           = 2",
      "  scaling_group_name = \"${var.name}\"",
      "  removal_policies   = [\"OldestInstance\", \"NewestInstance\"]",
      "  vswitch_ids        = [\"${alicloud_vswitch.default.id}\"]",
      "}",
      "",
      "resource \"alicloud_ess_scaling_configuration\" \"default\" {",
      "  scaling_group_id  = \"${alicloud_ess_scaling_group.default.id}\"",
      "  image_id          = \"${data.alicloud_images.default.images.0.id}\"",
      "  instance_type     = \"${data.alicloud_instance_types.default.instance_types.0.id}\"",
      "  security_group_id = \"${alicloud_security_group.default.id}\"",
      "  force_delete      = true",
      "  active            = true",
      "  enable            = true",
      "}",
      "",
      "resource \"alicloud_instance\" \"default\" {",
      "  image_id                   = \"${data.alicloud_images.default.images.0.id}\"",
      "  instance_type              = \"${data.alicloud_instance_types.default.instance_types.0.id}\"",
      "  count                      = 2",
      "  security_groups            = [\"${alicloud_security_group.default.id}\"]",
      "  internet_charge_type       = \"PayByTraffic\"",
      "  internet_max_bandwidth_out = \"10\"",
      "  instance_charge_type       = \"PostPaid\"",
      "  system_disk_category       = \"cloud_efficiency\"",
      "  vswitch_id                 = \"${alicloud_vswitch.default.id}\"",
      "  instance_name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_ess_attachment\" \"default\" {",
      "  scaling_group_id = \"${alicloud_ess_scaling_group.default.id}\"",
      "  instance_ids     = [\"${alicloud_instance.default.0.id}\", \"${alicloud_instance.default.1.id}\"]",
      "  force            = true",
      "}",
      ""
    ]
  },
  "alicloud-resource-ess_scaling_configuration": {
    "description": "Defines ess_scaling_configuration",
    "prefix": "tf-alicloud-resource-ess_scaling_configuration",
    "body": [
      "variable \"name\" {",
      "  default = \"essscalingconfiguration\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_disk_category     = \"cloud_efficiency\"",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "data \"alicloud_instance_types\" \"default\" {",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  cpu_core_count    = 2",
      "  memory_size       = 4",
      "}",
      "",
      "data \"alicloud_images\" \"default\" {",
      "  name_regex  = \"^ubuntu_14.*_64\"",
      "  most_recent = true",
      "  owners      = \"system\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_security_group\" \"default\" {",
      "  name   = \"${var.name}\"",
      "  vpc_id = \"${alicloud_vpc.default.id}\"",
      "}",
      "",
      "resource \"alicloud_security_group_rule\" \"default\" {",
      "  type              = \"ingress\"",
      "  ip_protocol       = \"tcp\"",
      "  nic_type          = \"intranet\"",
      "  policy            = \"accept\"",
      "  port_range        = \"22/22\"",
      "  priority          = 1",
      "  security_group_id = \"${alicloud_security_group.default.id}\"",
      "  cidr_ip           = \"172.16.0.0/24\"",
      "}",
      "",
      "resource \"alicloud_ess_scaling_group\" \"default\" {",
      "  min_size           = 1",
      "  max_size           = 1",
      "  scaling_group_name = \"${var.name}\"",
      "  removal_policies   = [\"OldestInstance\", \"NewestInstance\"]",
      "  vswitch_ids        = [\"${alicloud_vswitch.default.id}\"]",
      "}",
      "",
      "resource \"alicloud_ess_scaling_configuration\" \"default\" {",
      "  scaling_group_id  = \"${alicloud_ess_scaling_group.default.id}\"",
      "  image_id          = \"${data.alicloud_images.default.images.0.id}\"",
      "  instance_type     = \"${data.alicloud_instance_types.default.instance_types.0.id}\"",
      "  security_group_id = \"${alicloud_security_group.default.id}\"",
      "  force_delete      = true",
      "}",
      ""
    ]
  },
  "alicloud-resource-ess_scaling_group": {
    "description": "Defines ess_scaling_group",
    "prefix": "tf-alicloud-resource-ess_scaling_group",
    "body": [
      "variable \"name\" {",
      "  default = \"essscalinggroupconfig\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_disk_category     = \"cloud_efficiency\"",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "data \"alicloud_instance_types\" \"default\" {",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  cpu_core_count    = 2",
      "  memory_size       = 4",
      "}",
      "",
      "data \"alicloud_images\" \"default\" {",
      "  name_regex  = \"^ubuntu_14.*_64\"",
      "  most_recent = true",
      "  owners      = \"system\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_security_group\" \"default\" {",
      "  name   = \"${var.name}\"",
      "  vpc_id = \"${alicloud_vpc.default.id}\"",
      "}",
      "",
      "resource \"alicloud_security_group_rule\" \"default\" {",
      "  type              = \"ingress\"",
      "  ip_protocol       = \"tcp\"",
      "  nic_type          = \"intranet\"",
      "  policy            = \"accept\"",
      "  port_range        = \"22/22\"",
      "  priority          = 1",
      "  security_group_id = \"${alicloud_security_group.default.id}\"",
      "  cidr_ip           = \"172.16.0.0/24\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default2\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.1.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}-bar\"",
      "}",
      "",
      "resource \"alicloud_ess_scaling_group\" \"default\" {",
      "  min_size           = 1",
      "  max_size           = 1",
      "  scaling_group_name = \"${var.name}\"",
      "  default_cooldown   = 20",
      "  vswitch_ids        = [\"${alicloud_vswitch.default.id}\", \"${alicloud_vswitch.default2.id}\"]",
      "  removal_policies   = [\"OldestInstance\", \"NewestInstance\"]",
      "}"
    ]
  },
  "alicloud-resource-ess_scaling_lifecycle_hook": {
    "description": "Defines ess_scaling_lifecycle_hook",
    "prefix": "tf-alicloud-resource-ess_scaling_lifecycle_hook",
    "body": [
      "data \"alicloud_zones\" \"default\" {",
      "  available_disk_category     = \"cloud_efficiency\"",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"foo\" {",
      "  name       = \"testAccEssScalingGroup_vpc\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"foo\" {",
      "  vpc_id            = \"${alicloud_vpc.foo.id}\"",
      "  cidr_block        = \"172.16.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"bar\" {",
      "  vpc_id            = \"${alicloud_vpc.foo.id}\"",
      "  cidr_block        = \"172.16.1.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "}",
      "",
      "resource \"alicloud_ess_scaling_group\" \"foo\" {",
      "  min_size           = 1",
      "  max_size           = 1",
      "  scaling_group_name = \"testAccEssScaling_group\"",
      "  removal_policies   = [\"OldestInstance\", \"NewestInstance\"]",
      "  vswitch_ids        = [\"${alicloud_vswitch.foo.id}\", \"${alicloud_vswitch.bar.id}\"]",
      "}",
      "",
      "resource \"alicloud_ess_lifecycle_hook\" \"foo\" {",
      "  scaling_group_id      = \"${alicloud_ess_scaling_group.foo.id}\"",
      "  name                  = \"testAccEssLifecycle_hook\"",
      "  lifecycle_transition  = \"SCALE_OUT\"",
      "  heartbeat_timeout     = 400",
      "  notification_metadata = \"helloworld\"",
      "}"
    ]
  },
  "alicloud-resource-ess_scaling_rule": {
    "description": "Defines ess_scaling_rule",
    "prefix": "tf-alicloud-resource-ess_scaling_rule",
    "body": [
      "variable \"name\" {",
      "  default = \"essscalingruleconfig\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_disk_category     = \"cloud_efficiency\"",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "data \"alicloud_instance_types\" \"default\" {",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  cpu_core_count    = 2",
      "  memory_size       = 4",
      "}",
      "",
      "data \"alicloud_images\" \"default\" {",
      "  name_regex  = \"^ubuntu_14.*_64\"",
      "  most_recent = true",
      "  owners      = \"system\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_security_group\" \"default\" {",
      "  name   = \"${var.name}\"",
      "  vpc_id = \"${alicloud_vpc.default.id}\"",
      "}",
      "",
      "resource \"alicloud_security_group_rule\" \"default\" {",
      "  type              = \"ingress\"",
      "  ip_protocol       = \"tcp\"",
      "  nic_type          = \"intranet\"",
      "  policy            = \"accept\"",
      "  port_range        = \"22/22\"",
      "  priority          = 1",
      "  security_group_id = \"${alicloud_security_group.default.id}\"",
      "  cidr_ip           = \"172.16.0.0/24\"",
      "}",
      "",
      "resource \"alicloud_ess_scaling_group\" \"default\" {",
      "  min_size           = 1",
      "  max_size           = 1",
      "  scaling_group_name = \"${var.name}\"",
      "  vswitch_ids        = [\"${alicloud_vswitch.default.id}\"]",
      "  removal_policies   = [\"OldestInstance\", \"NewestInstance\"]",
      "}",
      "",
      "resource \"alicloud_ess_scaling_configuration\" \"default\" {",
      "  scaling_group_id  = \"${alicloud_ess_scaling_group.default.id}\"",
      "  image_id          = \"${data.alicloud_images.default.images.0.id}\"",
      "  instance_type     = \"${data.alicloud_instance_types.default.instance_types.0.id}\"",
      "  security_group_id = \"${alicloud_security_group.default.id}\"",
      "  force_delete      = \"true\"",
      "}",
      "",
      "resource \"alicloud_ess_scaling_rule\" \"default\" {",
      "  scaling_group_id = \"${alicloud_ess_scaling_group.default.id}\"",
      "  adjustment_type  = \"TotalCapacity\"",
      "  adjustment_value = 1",
      "}"
    ]
  },
  "alicloud-resource-ess_schedule": {
    "description": "Defines ess_schedule",
    "prefix": "tf-alicloud-resource-ess_schedule",
    "body": [
      "#XXX empty snippet",
      ""
    ]
  },
  "alicloud-resource-ess_scheduled_task": {
    "description": "Defines ess_scheduled_task",
    "prefix": "tf-alicloud-resource-ess_scheduled_task",
    "body": [
      "variable \"name\" {",
      "  default = \"essscheduleconfig\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_disk_category     = \"cloud_efficiency\"",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "data \"alicloud_instance_types\" \"default\" {",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  cpu_core_count    = 2",
      "  memory_size       = 4",
      "}",
      "",
      "data \"alicloud_images\" \"default\" {",
      "  name_regex  = \"^ubuntu_14.*_64\"",
      "  most_recent = true",
      "  owners      = \"system\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_security_group\" \"default\" {",
      "  name   = \"${var.name}\"",
      "  vpc_id = \"${alicloud_vpc.default.id}\"",
      "}",
      "",
      "resource \"alicloud_security_group_rule\" \"default\" {",
      "  type              = \"ingress\"",
      "  ip_protocol       = \"tcp\"",
      "  nic_type          = \"intranet\"",
      "  policy            = \"accept\"",
      "  port_range        = \"22/22\"",
      "  priority          = 1",
      "  security_group_id = \"${alicloud_security_group.default.id}\"",
      "  cidr_ip           = \"172.16.0.0/24\"",
      "}",
      "",
      "resource \"alicloud_ess_scaling_group\" \"default\" {",
      "  min_size           = 1",
      "  max_size           = 1",
      "  scaling_group_name = \"${var.name}\"",
      "  vswitch_ids        = [\"${alicloud_vswitch.default.id}\"]",
      "  removal_policies   = [\"OldestInstance\", \"NewestInstance\"]",
      "}",
      "",
      "resource \"alicloud_ess_scaling_configuration\" \"default\" {",
      "  scaling_group_id  = \"${alicloud_ess_scaling_group.default.id}\"",
      "  image_id          = \"${data.alicloud_images.default.images.0.id}\"",
      "  instance_type     = \"${data.alicloud_instance_types.default.instance_types.0.id}\"",
      "  security_group_id = \"${alicloud_security_group.default.id}\"",
      "  force_delete      = \"true\"",
      "}",
      "",
      "resource \"alicloud_ess_scaling_rule\" \"default\" {",
      "  scaling_group_id = \"${alicloud_ess_scaling_group.default.id}\"",
      "  adjustment_type  = \"TotalCapacity\"",
      "  adjustment_value = 2",
      "  cooldown         = 60",
      "}",
      "",
      "resource \"alicloud_ess_scheduled_task\" \"default\" {",
      "  scheduled_action    = \"${alicloud_ess_scaling_rule.default.ari}\"",
      "  launch_time         = \"2019-05-21T11:37Z\"",
      "  scheduled_task_name = \"${var.name}\"",
      "}"
    ]
  },
  "alicloud-resource-fc_function": {
    "description": "Defines fc_function",
    "prefix": "tf-alicloud-resource-fc_function",
    "body": [
      "variable \"name\" {",
      "  default = \"alicloudfcfunctionconfig\"",
      "}",
      "resource \"alicloud_log_project\" \"default\" {",
      "  name        = \"${var.name}\"",
      "  description = \"tf unit test\"",
      "}",
      "",
      "resource \"alicloud_log_store\" \"default\" {",
      "  project          = \"${alicloud_log_project.default.name}\"",
      "  name             = \"${var.name}\"",
      "  retention_period = \"3000\"",
      "  shard_count      = 1",
      "}",
      "resource \"alicloud_fc_service\" \"default\" {",
      "  name        = \"${var.name}\"",
      "  description = \"tf unit test\"",
      "  log_config {",
      "    project  = \"${alicloud_log_project.default.name}\"",
      "    logstore = \"${alicloud_log_store.default.name}\"",
      "  }",
      "  role       = \"${alicloud_ram_role.default.arn}\"",
      "  depends_on = [\"alicloud_ram_role_policy_attachment.default\"]",
      "}",
      "resource \"alicloud_oss_bucket\" \"default\" {",
      "  bucket = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_oss_bucket_object\" \"default\" {",
      "  bucket  = \"${alicloud_oss_bucket.default.id}\"",
      "  key     = \"fc/hello.zip\"",
      "  content = <<EOF",
      "        # -*- coding: utf-8 -*-",
      "        def handler(event, context):",
      "            print \"hello world\"",
      "            return 'hello world'",
      "    EOF",
      "}",
      "",
      "resource \"alicloud_ram_role\" \"default\" {",
      "  name = \"${var.name}\"",
      "  document = <<EOF",
      "        {",
      "          \"Statement\": [",
      "            {",
      "              \"Action\": \"sts:AssumeRole\",",
      "              \"Effect\": \"Allow\",",
      "              \"Principal\": {",
      "                \"Service\": [",
      "                  \"fc.aliyuncs.com\"",
      "                ]",
      "              }",
      "            }",
      "          ],",
      "          \"Version\": \"1\"",
      "        }",
      "    EOF",
      "    description = \"this is a test\"",
      "    force       = true",
      "}",
      "",
      "resource \"alicloud_ram_role_policy_attachment\" \"default\" {",
      "    role_name   = \"${alicloud_ram_role.default.name}\"",
      "    policy_name = \"AliyunLogFullAccess\"",
      "    policy_type = \"System\"",
      "}",
      "",
      "resource \"alicloud_fc_function\" \"foo\" {",
      "    service     = \"${alicloud_fc_service.default.name}\"",
      "    name        = \"${var.name}\"",
      "    description = \"tf\"",
      "    oss_bucket  = \"${alicloud_oss_bucket.default.id}\"",
      "    oss_key     = \"${alicloud_oss_bucket_object.default.key}\"",
      "    memory_size = \"512\"",
      "    runtime     = \"python2.7\"",
      "    handler     = \"hello.handler\"",
      "    environment_variables = {",
      "        prefix = \"terraform\"",
      "    }",
      "}"
    ]
  },
  "alicloud-resource-fc_service": {
    "description": "Defines fc_service",
    "prefix": "tf-alicloud-resource-fc_service",
    "body": [
      "variable \"name\" {",
      "  default = \"tf-testaccalicloudfcservice\"",
      "}",
      "",
      "resource \"alicloud_log_project\" \"foo\" {",
      "  name = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_log_store\" \"foo\" {",
      "  project = \"${alicloud_log_project.foo.name}\"",
      "  name    = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_ram_role\" \"role\" {",
      "  name     = \"${var.name}\"",
      "  document = <<DEFINITION",
      "  {",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": \"sts:AssumeRole\",",
      "      \"Effect\": \"Allow\",",
      "      \"Principal\": {",
      "        \"Service\": [",
      "          \"fc.aliyuncs.com\"",
      "        ]",
      "      }",
      "    }",
      "  ],",
      "  \"Version\": \"1\"",
      "}",
      "  DEFINITION",
      "  description = \"this is a test\"",
      "  force = true",
      "}",
      "",
      "resource \"alicloud_ram_role_policy_attachment\" \"attac\" {",
      "  role_name = \"${alicloud_ram_role.role.name}\"",
      "  policy_name = \"AliyunLogFullAccess\"",
      "  policy_type = \"System\"",
      "}",
      "",
      "resource \"alicloud_fc_service\" \"foo\" {",
      "  name = \"${var.name}\"",
      "  description = \"tf unit test\"",
      "  role = \"${alicloud_ram_role.role.arn}\"",
      "  depends_on = [\"alicloud_ram_role_policy_attachment.attac\"]",
      "}"
    ]
  },
  "alicloud-resource-fc_trigger": {
    "description": "Defines fc_trigger",
    "prefix": "tf-alicloud-resource-fc_trigger",
    "body": [
      "variable \"region\" {",
      "  default = \"cn-hangzhou\"",
      "}",
      "variable \"account\" {",
      "  default = \"12345\"",
      "}",
      "",
      "provider \"alicloud\" {",
      "  account_id = \"${var.account}\"",
      "  region     = \"${var.region}\"",
      "}",
      "",
      "resource \"alicloud_fc_trigger\" \"foo\" {",
      "  service    = \"my-fc-service\"",
      "  function   = \"hello-world\"",
      "  name       = \"hello-trigger\"",
      "  role       = \"${alicloud_ram_role.foo.arn}\"",
      "  source_arn = \"acs:log:${var.region}:${var.account}:project/${alicloud_log_project.foo.name}\"",
      "  type       = \"log\"",
      "  config     = <<EOF",
      "    {",
      "        \"sourceConfig\": {",
      "            \"project\": \"project-for-fc\",",
      "            \"logstore\": \"project-for-fc\"",
      "        },",
      "        \"jobConfig\": {",
      "            \"maxRetryTime\": 3,",
      "            \"triggerInterval\": 60",
      "        },",
      "        \"functionParameter\": {",
      "            \"a\": \"b\",",
      "            \"c\": \"d\"",
      "        },",
      "        \"logConfig\": {",
      "            \"project\": \"project-for-fc\",",
      "            \"logstore\": \"project-for-fc\"",
      "        },",
      "        \"enable\": true",
      "    }",
      "  EOF",
      "  depends_on = [\"alicloud_ram_role_policy_attachment.foo\"]",
      "}",
      "",
      "resource \"alicloud_ram_role\" \"foo\" {",
      "  name = \"${var.name}-trigger\"",
      "  document = <<EOF",
      "  {",
      "    \"Statement\": [",
      "      {",
      "        \"Action\": \"sts:AssumeRole\",",
      "        \"Effect\": \"Allow\",",
      "        \"Principal\": {",
      "          \"Service\": [",
      "            \"log.aliyuncs.com\"",
      "          ]",
      "        }",
      "      }",
      "    ],",
      "    \"Version\": \"1\"",
      "  }",
      "  EOF",
      "  description = \"this is a test\"",
      "  force       = true",
      "}",
      "",
      "resource \"alicloud_ram_role_policy_attachment\" \"foo\" {",
      "  role_name   = \"${alicloud_ram_role.foo.name}\"",
      "  policy_name = \"AliyunLogFullAccess\"",
      "  policy_type = \"System\"",
      "}",
      ""
    ]
  },
  "alicloud-resource-forward_entry": {
    "description": "Defines forward_entry",
    "prefix": "tf-alicloud-resource-forward_entry",
    "body": [
      "variable \"name\" {",
      "  default = \"forward-entry-example-name\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/12\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/21\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_nat_gateway\" \"default\" {",
      "  vpc_id        = \"${alicloud_vpc.default.id}\"",
      "  specification = \"Small\"",
      "  name          = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_eip\" \"default\" {",
      "  name = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_eip_association\" \"default\" {",
      "  allocation_id = \"${alicloud_eip.default.id}\"",
      "  instance_id   = \"${alicloud_nat_gateway.default.id}\"",
      "}",
      "",
      "resource \"alicloud_forward_entry\" \"default\" {",
      "  forward_table_id = \"${alicloud_nat_gateway.default.forward_table_ids}\"",
      "  external_ip      = \"${alicloud_eip.default.ip_address}\"",
      "  external_port    = \"80\"",
      "  ip_protocol      = \"tcp\"",
      "  internal_ip      = \"172.16.0.3\"",
      "  internal_port    = \"8080\"",
      "}",
      ""
    ]
  },
  "alicloud-resource-gpdb_connection": {
    "description": "Defines gpdb_connection",
    "prefix": "tf-alicloud-resource-gpdb_connection",
    "body": [
      "variable \"creation\" {",
      "  default = \"Gpdb\"",
      "}",
      "",
      "variable \"name\" {",
      "  default = \"gpdbConnectionBasic\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"${var.creation}\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_gpdb_instance\" \"default\" {",
      "  vswitch_id           = \"${alicloud_vswitch.default.id}\"",
      "  engine               = \"gpdb\"",
      "  engine_version       = \"4.3\"",
      "  instance_class       = \"gpdb.group.segsdx2\"",
      "  instance_group_count = \"2\"",
      "  description          = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_gpdb_connection\" \"default\" {",
      "  instance_id       = \"${alicloud_gpdb_instance.default.id}\"",
      "  connection_prefix = \"testAbc\"",
      "}"
    ]
  },
  "alicloud-resource-gpdb_instance": {
    "description": "Defines gpdb_instance",
    "prefix": "tf-alicloud-resource-gpdb_instance",
    "body": [
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"Gpdb\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"vpc-123456\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/24\"",
      "  name              = \"vpc-123456\"",
      "}",
      "",
      "resource \"alicloud_gpdb_instance\" \"example\" {",
      "  description          = \"tf-gpdb-test\"\"",
      "  engine               = \"gpdb\"",
      "  engine_version       = \"4.3\"",
      "  instance_class       = \"gpdb.group.segsdx2\"",
      "  instance_group_count = \"2\"",
      "  vswitch_id           = \"${alicloud_vswitch.default.id}\"",
      "  security_ip_list     = [\"10.168.1.12\", \"100.69.7.112\"]",
      "}",
      ""
    ]
  },
  "alicloud-resource-havip": {
    "description": "Defines havip",
    "prefix": "tf-alicloud-resource-havip",
    "body": [
      "resource \"alicloud_havip\" \"foo\" {",
      "  vswitch_id  = \"vsw-fakeid\"",
      "  description = \"test_havip\"",
      "}"
    ]
  },
  "alicloud-resource-havip_attachment": {
    "description": "Defines havip_attachment",
    "prefix": "tf-alicloud-resource-havip_attachment",
    "body": [
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "data \"alicloud_instance_types\" \"default\" {",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  cpu_core_count    = 1",
      "  memory_size       = 2",
      "}",
      "",
      "data \"alicloud_images\" \"default\" {",
      "  name_regex  = \"^ubuntu_14.*_64\"",
      "  most_recent = true",
      "  owners      = \"system\"",
      "}",
      "",
      "variable \"name\" {",
      "  default = \"test_havip_attachment\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"foo\" {",
      "  cidr_block = \"172.16.0.0/12\"",
      "  name       = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"foo\" {",
      "  vpc_id            = \"${alicloud_vpc.foo.id}\"",
      "  cidr_block        = \"172.16.0.0/21\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_havip\" \"foo\" {",
      "  vswitch_id  = \"${alicloud_vswitch.foo.id}\"",
      "  description = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_havip_attachment\" \"foo\" {",
      "  havip_id    = \"${alicloud_havip.foo.id}\"",
      "  instance_id = \"${alicloud_instance.foo.id}\"",
      "}",
      "",
      "resource \"alicloud_security_group\" \"tf_test_foo\" {",
      "  name        = \"${var.name}\"",
      "  description = \"foo\"",
      "  vpc_id      = \"${alicloud_vpc.foo.id}\"",
      "}",
      "",
      "resource \"alicloud_instance\" \"foo\" {",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  vswitch_id        = \"${alicloud_vswitch.foo.id}\"",
      "  image_id          = \"${data.alicloud_images.default.images.0.id}\"",
      "  # series III",
      "  instance_type              = \"${data.alicloud_instance_types.default.instance_types.0.id}\"",
      "  system_disk_category       = \"cloud_efficiency\"",
      "  internet_charge_type       = \"PayByTraffic\"",
      "  internet_max_bandwidth_out = 5",
      "  security_groups            = [\"${alicloud_security_group.tf_test_foo.id}\"]",
      "  instance_name              = \"${var.name}\"",
      "  user_data                  = \"echo 'net.ipv4.ip_forward=1'>> /etc/sysctl.conf\"",
      "}"
    ]
  },
  "alicloud-resource-instance": {
    "description": "Defines instance",
    "prefix": "tf-alicloud-resource-instance",
    "body": [
      "# Create a new ECS instance for a VPC",
      "resource \"alicloud_security_group\" \"group\" {",
      "  name        = \"tf_test_foo\"",
      "  description = \"foo\"",
      "  vpc_id      = \"${alicloud_vpc.vpc.id}\"",
      "}",
      "",
      "resource \"alicloud_instance\" \"instance\" {",
      "  # cn-beijing",
      "  availability_zone = \"cn-beijing-b\"",
      "  security_groups   = \"${alicloud_security_group.group.*.id}\"",
      "",
      "  # series III",
      "  instance_type              = \"ecs.n4.large\"",
      "  system_disk_category       = \"cloud_efficiency\"",
      "  image_id                   = \"ubuntu_140405_64_40G_cloudinit_20161115.vhd\"",
      "  instance_name              = \"test_foo\"",
      "  vswitch_id                 = \"${alicloud_vswitch.vswitch.id}\"",
      "  internet_max_bandwidth_out = 10",
      "}",
      "",
      "# Create a new ECS instance for VPC",
      "resource \"alicloud_vpc\" \"vpc\" {",
      "  # Other parameters...",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"vswitch\" {",
      "  vpc_id = \"${alicloud_vpc.vpc.id}\"",
      "  # Other parameters...",
      "}",
      "",
      "resource \"alicloud_slb\" \"slb\" {",
      "  name       = \"test-slb-tf\"",
      "  vpc_id     = \"${alicloud_vpc.vpc.id}\"",
      "  vswitch_id = \"${alicloud_vswitch.vswitch.id}\"",
      "}"
    ]
  },
  "alicloud-resource-key_pair": {
    "description": "Defines key_pair",
    "prefix": "tf-alicloud-resource-key_pair",
    "body": [
      "resource \"alicloud_key_pair\" \"basic\" {",
      "  key_name = \"terraform-test-key-pair\"",
      "}",
      "",
      "// Using name prefix to build key pair",
      "resource \"alicloud_key_pair\" \"prefix\" {",
      "  key_name_prefix = \"terraform-test-key-pair-prefix\"",
      "}",
      "",
      "// Import an existing public key to build a alicloud key pair",
      "resource \"alicloud_key_pair\" \"publickey\" {",
      "  key_name   = \"my_public_key\"",
      "  public_key = \"ssh-rsa AAAAB3Nza12345678qwertyuudsfsg\"",
      "}"
    ]
  },
  "alicloud-resource-key_pair_attachment": {
    "description": "Defines key_pair_attachment",
    "prefix": "tf-alicloud-resource-key_pair_attachment",
    "body": [
      "data \"alicloud_zones\" \"default\" {",
      "  available_disk_category     = \"cloud_ssd\"",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "data \"alicloud_instance_types\" \"type\" {",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  cpu_core_count    = 1",
      "  memory_size       = 2",
      "}",
      "data \"alicloud_images\" \"images\" {",
      "  name_regex  = \"^ubuntu_14.*_64\"",
      "  most_recent = true",
      "  owners      = \"system\"",
      "}",
      "variable \"name\" {",
      "  default = \"keyPairAttachmentName\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"vpc\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"10.1.0.0/21\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"vswitch\" {",
      "  vpc_id            = \"${alicloud_vpc.vpc.id}\"",
      "  cidr_block        = \"10.1.1.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "resource \"alicloud_security_group\" \"group\" {",
      "  name        = \"${var.name}\"",
      "  description = \"New security group\"",
      "  vpc_id      = \"${alicloud_vpc.vpc.id}\"",
      "}",
      "",
      "resource \"alicloud_instance\" \"instancd\" {",
      "  instance_name   = \"${var.name}-${count.index + 1}\"",
      "  image_id        = \"${data.alicloud_images.images.images.0.id}\"",
      "  instance_type   = \"${data.alicloud_instance_types.type.instance_types.0.id}\"",
      "  count           = 2",
      "  security_groups = [\"${alicloud_security_group.group.id}\"]",
      "  vswitch_id      = \"${alicloud_vswitch.vswitch.id}\"",
      "",
      "  internet_charge_type       = \"PayByTraffic\"",
      "  internet_max_bandwidth_out = 5",
      "  password                   = \"Test12345\"",
      "",
      "  instance_charge_type = \"PostPaid\"",
      "  system_disk_category = \"cloud_ssd\"",
      "}",
      "",
      "resource \"alicloud_key_pair\" \"pair\" {",
      "  key_name = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_key_pair_attachment\" \"attachment\" {",
      "  key_name     = \"${alicloud_key_pair.pair.id}\"",
      "  instance_ids = [\"${alicloud_instance.instancd.*.id}\"]",
      "}"
    ]
  },
  "alicloud-resource-kms_key": {
    "description": "Defines kms_key",
    "prefix": "tf-alicloud-resource-kms_key",
    "body": [
      "resource \"alicloud_kms_key\" \"key\" {",
      "  description             = \"Hello KMS\"",
      "  deletion_window_in_days = \"7\"",
      "  is_enabled              = true",
      "}"
    ]
  },
  "alicloud-resource-kvstore_backup_policy": {
    "description": "Defines kvstore_backup_policy",
    "prefix": "tf-alicloud-resource-kvstore_backup_policy",
    "body": [
      "variable \"creation\" {",
      "  default = \"KVStore\"",
      "}",
      "variable \"multi_az\" {",
      "  default = \"false\"",
      "}",
      "variable \"name\" {",
      "  default = \"kvstorebackuppolicyvpc\"",
      "}",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"${var.creation}\"",
      "}",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "resource \"alicloud_kvstore_instance\" \"default\" {",
      "  instance_class = \"Memcache\"",
      "  instance_name  = \"${var.name}\"",
      "  vswitch_id     = \"${alicloud_vswitch.default.id}\"",
      "  private_ip     = \"172.16.0.10\"",
      "  security_ips   = [\"10.0.0.1\"]",
      "  instance_type  = \"memcache.master.small.default\"",
      "  engine_version = \"2.8\"",
      "}",
      "resource \"alicloud_kvstore_backup_policy\" \"default\" {",
      "  instance_id   = \"${alicloud_kvstore_instance.default.id}\"",
      "  backup_period = [\"Tuesday\", \"Wednesday\"]",
      "  backup_time   = \"10:00Z-11:00Z\"",
      "}"
    ]
  },
  "alicloud-resource-kvstore_instance": {
    "description": "Defines kvstore_instance",
    "prefix": "tf-alicloud-resource-kvstore_instance",
    "body": [
      "variable \"creation\" {",
      "  default = \"KVStore\"",
      "}",
      "variable \"name\" {",
      "  default = \"kvstoreinstancevpc\"",
      "}",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"${var.creation}\"",
      "}",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "resource \"alicloud_kvstore_instance\" \"default\" {",
      "  instance_class = \"redis.master.small.default\"",
      "  instance_name  = \"${var.name}\"",
      "  vswitch_id     = \"${alicloud_vswitch.default.id}\"",
      "  private_ip     = \"172.16.0.10\"",
      "  security_ips   = [\"10.0.0.1\"]",
      "  instance_type  = \"Redis\"",
      "  engine_version = \"4.0\"",
      "}"
    ]
  },
  "alicloud-resource-launch_template": {
    "description": "Defines launch_template",
    "prefix": "tf-alicloud-resource-launch_template",
    "body": [
      "data \"alicloud_images\" \"images\" {",
      "  owners = \"system\"",
      "}",
      "",
      "data \"alicloud_instances\" \"instances\" {",
      "}",
      "",
      "resource \"alicloud_launch_template\" \"template\" {",
      "  name                          = \"tf-test-template\"",
      "  description                   = \"test1\"",
      "  image_id                      = \"${data.alicloud_images.images.images.0.id}\"",
      "  host_name                     = \"tf-test-host\"",
      "  instance_charge_type          = \"PrePaid\"",
      "  instance_name                 = \"tf-instance-name\"",
      "  instance_type                 = \"${data.alicloud_instances.instances.instances.0.instance_type}\"",
      "  internet_charge_type          = \"PayByBandwidth\"",
      "  internet_max_bandwidth_in     = 5",
      "  internet_max_bandwidth_out    = 0",
      "  io_optimized                  = \"none\"",
      "  key_pair_name                 = \"test-key-pair\"",
      "  ram_role_name                 = \"xxxxx\"",
      "  network_type                  = \"vpc\"",
      "  security_enhancement_strategy = \"Active\"",
      "  spot_price_limit              = 5",
      "  spot_strategy                 = \"SpotWithPriceLimit\"",
      "  security_group_id             = \"sg-zxcvj0lasdf102350asdf9a\"",
      "  system_disk_category          = \"cloud_ssd\"",
      "  system_disk_description       = \"test disk\"",
      "  system_disk_name              = \"hello\"",
      "  system_disk_size              = 40",
      "  resource_group_id             = \"rg-zkdfjahg9zxncv0\"",
      "  userdata                      = \"xxxxxxxxxxxxxx\"",
      "  vswitch_id                    = \"sw-ljkngaksdjfj0nnasdf\"",
      "  vpc_id                        = \"vpc-asdfnbg0as8dfk1nb2\"",
      "  zone_id                       = \"beijing-a\"",
      "",
      "  tags = {",
      "    tag1 = \"hello\"",
      "    tag2 = \"world\"",
      "  }",
      "  network_interfaces {",
      "    name              = \"eth0\"",
      "    description       = \"hello1\"",
      "    primary_ip        = \"10.0.0.2\"",
      "    security_group_id = \"xxxx\"",
      "    vswitch_id        = \"xxxxxxx\"",
      "  }",
      "  data_disks {",
      "    name        = \"disk1\"",
      "    description = \"test1\"",
      "  }",
      "  data_disks {",
      "    name        = \"disk2\"",
      "    description = \"test2\"",
      "  }",
      "}"
    ]
  },
  "alicloud-resource-log_machine_group": {
    "description": "Defines log_machine_group",
    "prefix": "tf-alicloud-resource-log_machine_group",
    "body": [
      "resource \"alicloud_log_project\" \"example\" {",
      "  name        = \"tf-log\"",
      "  description = \"created by terraform\"",
      "}",
      "resource \"alicloud_log_machine_group\" \"example\" {",
      "  project       = \"${alicloud_log_project.example.name}\"",
      "  name          = \"tf-machine-group\"",
      "  identify_type = \"ip\"",
      "  topic         = \"terraform\"",
      "  identify_list = [\"10.0.0.1\", \"10.0.0.2\"]",
      "}"
    ]
  },
  "alicloud-resource-log_project": {
    "description": "Defines log_project",
    "prefix": "tf-alicloud-resource-log_project",
    "body": [
      "resource \"alicloud_log_project\" \"example\" {",
      "  name        = \"tf-log\"",
      "  description = \"created by terraform\"",
      "}"
    ]
  },
  "alicloud-resource-log_store": {
    "description": "Defines log_store",
    "prefix": "tf-alicloud-resource-log_store",
    "body": [
      "resource \"alicloud_log_project\" \"example\" {",
      "  name        = \"tf-log\"",
      "  description = \"created by terraform\"",
      "}",
      "",
      "resource \"alicloud_log_store\" \"example\" {",
      "  project               = \"${alicloud_log_project.example.name}\"",
      "  name                  = \"tf-log-store\"",
      "  shard_count           = 3",
      "  auto_split            = true",
      "  max_split_shard_count = 60",
      "  append_meta           = true",
      "}"
    ]
  },
  "alicloud-resource-log_store_index": {
    "description": "Defines log_store_index",
    "prefix": "tf-alicloud-resource-log_store_index",
    "body": [
      "resource \"alicloud_log_project\" \"example\" {",
      "  name        = \"tf-log\"",
      "  description = \"created by terraform\"",
      "}",
      "resource \"alicloud_log_store\" \"example\" {",
      "  project     = \"${alicloud_log_project.example.name}\"",
      "  name        = \"tf-log-store\"",
      "  description = \"created by terraform\"",
      "}",
      "resource \"alicloud_log_store_index\" \"example\" {",
      "  project  = \"${alicloud_log_project.example.name}\"",
      "  logstore = \"${alicloud_log_store.example.name}\"",
      "  full_text {",
      "    case_sensitive = true",
      "    token          = \" #$%^*\\r\\n\\t\"",
      "  }",
      "  field_search {",
      "    name             = \"terraform\"",
      "    enable_analytics = true",
      "  }",
      "}"
    ]
  },
  "alicloud-resource-logtail_attachment": {
    "description": "Defines logtail_attachment",
    "prefix": "tf-alicloud-resource-logtail_attachment",
    "body": [
      "resource \"alicloud_log_project\" \"test\" {",
      "  name        = \"test-tf2\"",
      "  description = \"create by terraform\"",
      "}",
      "resource \"alicloud_log_store\" \"test\" {",
      "  project               = \"${alicloud_log_project.test.name}\"",
      "  name                  = \"tf-test-logstore\"",
      "  retention_period      = 3650",
      "  shard_count           = 3",
      "  auto_split            = true",
      "  max_split_shard_count = 60",
      "  append_meta           = true",
      "}",
      "resource \"alicloud_log_machine_group\" \"test\" {",
      "  project       = \"${alicloud_log_project.test.name}\"",
      "  name          = \"tf-log-machine-group\"",
      "  topic         = \"terraform\"",
      "  identify_list = [\"10.0.0.1\", \"10.0.0.3\", \"10.0.0.2\"]",
      "}",
      "resource \"alicloud_logtail_config\" \"test\" {",
      "  project      = \"${alicloud_log_project.test.name}\"",
      "  logstore     = \"${alicloud_log_store.test.name}\"",
      "  input_type   = \"file\"",
      "  log_sample   = \"test\"",
      "  name         = \"tf-log-config\"",
      "  output_type  = \"LogService\"",
      "  input_detail = <<DEFINITION",
      "  \t{",
      "\t\t\"logPath\": \"/logPath\",",
      "\t\t\"filePattern\": \"access.log\",",
      "\t\t\"logType\": \"json_log\",",
      "\t\t\"topicFormat\": \"default\",",
      "\t\t\"discardUnmatch\": false,",
      "\t\t\"enableRawLog\": true,",
      "\t\t\"fileEncoding\": \"gbk\",",
      "\t\t\"maxDepth\": 10",
      "\t}",
      "\tDEFINITION",
      "}",
      "resource \"alicloud_logtail_attachment\" \"test\" {",
      "  project = \"${alicloud_log_project.test.name}\"",
      "  logtail_config_name = \"${alicloud_logtail_config.test.name}\"",
      "  machine_group_name = \"${alicloud_log_machine_group.test.name}\"",
      "}"
    ]
  },
  "alicloud-resource-logtail_config": {
    "description": "Defines logtail_config",
    "prefix": "tf-alicloud-resource-logtail_config",
    "body": [
      "resource \"alicloud_log_project\" \"example\" {",
      "  name        = \"test-tf\"",
      "  description = \"create by terraform\"",
      "}",
      "resource \"alicloud_log_store\" \"example\" {",
      "  project               = \"${alicloud_log_project.example.name}\"",
      "  name                  = \"tf-test-logstore\"",
      "  retention_period      = 3650",
      "  shard_count           = 3",
      "  auto_split            = true",
      "  max_split_shard_count = 60",
      "  append_meta           = true",
      "}",
      "resource \"alicloud_logtail_config\" \"example\" {",
      "  project      = \"${alicloud_log_project.example.name}\"",
      "  logstore     = \"${alicloud_log_store.example.name}\"",
      "  input_type   = \"file\"",
      "  log_sample   = \"test\"",
      "  name         = \"tf-log-config\"",
      "  output_type  = \"LogService\"",
      "  input_detail = \"${file(\"config.json\")}\"",
      "}"
    ]
  },
  "alicloud-resource-mns_queue": {
    "description": "Defines mns_queue",
    "prefix": "tf-alicloud-resource-mns_queue",
    "body": [
      "resource \"alicloud_mns_queue\" \"queue\" {",
      "  name                     = \"tf-example-mnsqueue\"",
      "  delay_seconds            = 0",
      "  maximum_message_size     = 65536",
      "  message_retention_period = 345600",
      "  visibility_timeout       = 30",
      "  polling_wait_seconds     = 0",
      "}"
    ]
  },
  "alicloud-resource-mns_topic": {
    "description": "Defines mns_topic",
    "prefix": "tf-alicloud-resource-mns_topic",
    "body": [
      "resource \"alicloud_mns_topic\" \"topic\" {",
      "  name                 = \"tf-example-mnstopic\"",
      "  maximum_message_size = 65536",
      "  logging_enabled      = false",
      "}",
      ""
    ]
  },
  "alicloud-resource-mns_topic_subscription": {
    "description": "Defines mns_topic_subscription",
    "prefix": "tf-alicloud-resource-mns_topic_subscription",
    "body": [
      "resource \"alicloud_mns_topic\" \"topic\" {",
      "  name                 = \"tf-example-mnstopic\"",
      "  maximum_message_size = 65536",
      "  logging_enabled      = false",
      "}",
      "",
      "resource \"alicloud_mns_topic_subscription\" \"subscription\" {",
      "  topic_name            = \"tf-example-mnstopic\"",
      "  name                  = \"tf-example-mnstopic-sub\"",
      "  filter_tag            = \"test\"",
      "  endpoint              = \"http://www.xxx.com/xxx\"",
      "  notify_strategy       = \"BACKOFF_RETRY\"",
      "  notify_content_format = \"XML\"",
      "}"
    ]
  },
  "alicloud-resource-mongodb_instance": {
    "description": "Defines mongodb_instance",
    "prefix": "tf-alicloud-resource-mongodb_instance",
    "body": [
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"MongoDB\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"vpc-123456\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"vpc-123456\"",
      "}",
      "",
      "resource \"alicloud_mongodb_instance\" \"example\" {",
      "  engine_version      = \"3.4\"",
      "  db_instance_class   = \"dds.mongo.mid\"",
      "  db_instance_storage = 10",
      "  vswitch_id          = \"${alicloud_vswitch.default.id}\"",
      "  security_ip_list    = [\"10.168.1.12\", \"100.69.7.112\"]",
      "}",
      ""
    ]
  },
  "alicloud-resource-mongodb_sharding_instance": {
    "description": "Defines mongodb_sharding_instance",
    "prefix": "tf-alicloud-resource-mongodb_sharding_instance",
    "body": [
      "variable \"name\" {",
      "  default = \"tf-example\"",
      "}",
      "",
      "variable \"shard\" {",
      "  default = {",
      "    node_class   = \"dds.shard.mid\"",
      "    node_storage = 10",
      "  }",
      "}",
      "",
      "variable \"mongo\" {",
      "  default = {",
      "    node_class = \"dds.mongos.mid\"",
      "  }",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"MongoDB\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_mongodb_sharding_instance\" \"foo\" {",
      "  zone_id        = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  vswitch_id     = \"${alicloud_vswitch.default.id}\"",
      "  engine_version = \"3.4\"",
      "  name           = \"${var.name}\"",
      "  shard_list     = [\"${var.shard}\", \"${var.shard}\"]",
      "  mongo_list     = [\"${var.mongo}\", \"${var.mongo}\"]",
      "}"
    ]
  },
  "alicloud-resource-nas_access_group": {
    "description": "Defines nas_access_group",
    "prefix": "tf-alicloud-resource-nas_access_group",
    "body": [
      "resource \"alicloud_nas_access_group\" \"foo\" {",
      "  name        = \"CreateAccessGroup\"",
      "  type        = \"Classic\"",
      "  description = \"test_AccessG\"",
      "",
      "}"
    ]
  },
  "alicloud-resource-nas_access_rule": {
    "description": "Defines nas_access_rule",
    "prefix": "tf-alicloud-resource-nas_access_rule",
    "body": [
      "resource \"alicloud_nas_access_group\" \"foo\" {",
      "  name        = \"tf-NasConfigName-%d\"",
      "  type        = \"Vpc\"",
      "  description = \"tf-testAccNasConfig\"",
      "}",
      "resource \"alicloud_nas_access_rule\" \"foo\" {",
      "  access_group_name = \"${alicloud_nas_access_group.foo.id}\"",
      "  source_cidr_ip    = \"168.1.1.0/16\"",
      "  rw_access_type    = \"RDWR\"",
      "  user_access_type  = \"no_squash\"",
      "  priority          = 2",
      "}"
    ]
  },
  "alicloud-resource-nas_file_system": {
    "description": "Defines nas_file_system",
    "prefix": "tf-alicloud-resource-nas_file_system",
    "body": [
      "resource \"alicloud_nas_file_system\" \"foo\" {",
      "  protocol_type = \"NFS\"",
      "  storage_type  = \"Performance\"",
      "  description   = \"tf-testAccNasConfig\"",
      "",
      "}"
    ]
  },
  "alicloud-resource-nas_mount_target": {
    "description": "Defines nas_mount_target",
    "prefix": "tf-alicloud-resource-nas_mount_target",
    "body": [
      "resource \"alicloud_nas_file_system\" \"foo\" {",
      "  protocol_type = \"NFS\"",
      "  storage_type  = \"Performance\"",
      "  description   = \"tf-testAccNasConfigFs\"",
      "}",
      "resource \"alicloud_nas_access_group\" \"foo\" {",
      "  name        = \"tf-NasConfig-%d\"",
      "  type        = \"Classic\"",
      "  description = \"tf-testAccNasConfig\"",
      "}",
      "resource \"alicloud_nas_access_group\" \"bar\" {",
      "  name        = \"tf-cNasConfig-2-%d\"",
      "  type        = \"Classic\"",
      "  description = \"tf-testAccNasConfig-2\"",
      "}",
      "resource \"alicloud_nas_mount_target\" \"foo\" {",
      "  file_system_id    = \"${alicloud_nas_file_system.foo.id}\"",
      "  access_group_name = \"${alicloud_nas_access_group.foo.id}\"",
      "}"
    ]
  },
  "alicloud-resource-nat_gateway": {
    "description": "Defines nat_gateway",
    "prefix": "tf-alicloud-resource-nat_gateway",
    "body": [
      "variable \"name\" {",
      "  default = \"natGatewayExampleName\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/12\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/21\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_nat_gateway\" \"default\" {",
      "  vpc_id = \"${alicloud_vswitch.default.vpc_id}\"",
      "  name   = \"${var.name}\"",
      "}"
    ]
  },
  "alicloud-resource-network_acl": {
    "description": "Defines network_acl",
    "prefix": "tf-alicloud-resource-network_acl",
    "body": [
      "resource \"alicloud_vpc\" \"default\" {",
      "  cidr_block = \"172.16.0.0/12\"",
      "  name       = \"VpcConfig\"",
      "}",
      "",
      "resource \"alicloud_network_acl\" \"default\" {",
      "  vpc_id      = \"${alicloud_vpc.default.id}\"",
      "  name        = \"network_acl\"",
      "  description = \"network_acl\"",
      "}"
    ]
  },
  "alicloud-resource-network_acl_attachment": {
    "description": "Defines network_acl_attachment",
    "prefix": "tf-alicloud-resource-network_acl_attachment",
    "body": [
      "variable \"name\" {",
      "  default = \"NatGatewayConfigSpec\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/12\"",
      "}",
      "",
      "resource \"alicloud_network_acl\" \"default\" {",
      "  vpc_id = \"${alicloud_vpc.default.id}\"",
      "  name   = \"${var.name}\"",
      "}",
      "",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/21\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_network_acl_attachment\" \"default\" {",
      "  network_acl_id = \"${alicloud_network_acl.default.id}\"",
      "  resources = [",
      "    {",
      "      resource_id   = \"${alicloud_vswitch.default.id}\"",
      "      resource_type = \"VSwitch\"",
      "    }",
      "  ]",
      "}"
    ]
  },
  "alicloud-resource-network_acl_entries": {
    "description": "Defines network_acl_entries",
    "prefix": "tf-alicloud-resource-network_acl_entries",
    "body": [
      "variable \"name\" {",
      "  default = \"NetworkAclEntries\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/12\"",
      "}",
      "",
      "resource \"alicloud_network_acl\" \"default\" {",
      "  vpc_id = \"${alicloud_vpc.default.id}\"",
      "  name   = \"${var.name}\"",
      "}",
      "",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/21\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_network_acl_attachment\" \"default\" {",
      "  network_acl_id = \"${alicloud_network_acl.default.id}\"",
      "  resources = [",
      "    {",
      "      resource_id   = \"${alicloud_vswitch.default.id}\"",
      "      resource_type = \"VSwitch\"",
      "    }",
      "  ]",
      "}",
      "",
      "resource \"alicloud_network_acl_entries\" \"default\" {",
      "  network_acl_id = \"${alicloud_network_acl.default.id}\"",
      "  ingress = [",
      "    {",
      "      protocol       = \"all\"",
      "      port           = \"-1/-1\"",
      "      source_cidr_ip = \"0.0.0.0/32\"",
      "      name           = \"${var.name}\"",
      "      entry_type     = \"custom\"",
      "      policy         = \"accept\"",
      "      description    = \"${var.name}\"",
      "    }",
      "  ]",
      "  egress = [",
      "    {",
      "      protocol            = \"all\"",
      "      port                = \"-1/-1\"",
      "      destination_cidr_ip = \"0.0.0.0/32\"",
      "      name                = \"${var.name}\"",
      "      entry_type          = \"custom\"",
      "      policy              = \"accept\"",
      "      description         = \"${var.name}\"",
      "    }",
      "  ]",
      "}"
    ]
  },
  "alicloud-resource-network_interface": {
    "description": "Defines network_interface",
    "prefix": "tf-alicloud-resource-network_interface",
    "body": [
      "variable \"name\" {",
      "  default = \"networkInterfaceName\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"vpc\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"192.168.0.0/24\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"vswitch\" {",
      "  name              = \"${var.name}\"",
      "  cidr_block        = \"192.168.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  vpc_id            = \"${alicloud_vpc.vpc.id}\"",
      "}",
      "",
      "resource \"alicloud_security_group\" \"group\" {",
      "  name   = \"${var.name}\"",
      "  vpc_id = \"${alicloud_vpc.vpc.id}\"",
      "}",
      "",
      "resource \"alicloud_network_interface\" \"default\" {",
      "  name              = \"${var.name}%d\"",
      "  vswitch_id        = \"${alicloud_vswitch.vswitch.id}\"",
      "  security_groups   = [\"${alicloud_security_group.group.id}\"]",
      "  private_ip        = \"192.168.0.2\"",
      "  private_ips_count = 3",
      "}"
    ]
  },
  "alicloud-resource-network_interface_attachment": {
    "description": "Defines network_interface_attachment",
    "prefix": "tf-alicloud-resource-network_interface_attachment",
    "body": [
      "variable \"name\" {",
      "  default = \"networkInterfaceAttachment\"",
      "}",
      "",
      "variable \"number\" {",
      "  default = \"2\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"vpc\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"192.168.0.0/24\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"vswitch\" {",
      "  name              = \"${var.name}\"",
      "  cidr_block        = \"192.168.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  vpc_id            = \"${alicloud_vpc.vpc.id}\"",
      "}",
      "",
      "resource \"alicloud_security_group\" \"group\" {",
      "  name   = \"${var.name}\"",
      "  vpc_id = \"${alicloud_vpc.vpc.id}\"",
      "}",
      "",
      "data \"alicloud_instance_types\" \"instance_type\" {",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  eni_amount        = 2",
      "}",
      "",
      "data \"alicloud_images\" \"default\" {",
      "  name_regex  = \"^ubuntu_14.*_64\"",
      "  most_recent = true",
      "  owners      = \"system\"",
      "}",
      "",
      "resource \"alicloud_instance\" \"instance\" {",
      "  count             = \"${var.number}\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  security_groups   = [\"${alicloud_security_group.group.id}\"]",
      "",
      "  instance_type              = \"${data.alicloud_instance_types.instance_type.instance_types.0.id}\"",
      "  system_disk_category       = \"cloud_efficiency\"",
      "  image_id                   = \"${data.alicloud_images.default.images.0.id}\"",
      "  instance_name              = \"${var.name}\"",
      "  vswitch_id                 = \"${alicloud_vswitch.vswitch.id}\"",
      "  internet_max_bandwidth_out = 10",
      "}",
      "",
      "resource \"alicloud_network_interface\" \"interface\" {",
      "  count           = \"${var.number}\"",
      "  name            = \"${var.name}\"",
      "  vswitch_id      = \"${alicloud_vswitch.vswitch.id}\"",
      "  security_groups = [\"${alicloud_security_group.group.id}\"]",
      "}",
      "",
      "resource \"alicloud_network_interface_attachment\" \"attachment\" {",
      "  count                = \"${var.number}\"",
      "  instance_id          = \"${element(alicloud_instance.instance.*.id, count.index)}\"",
      "  network_interface_id = \"${element(alicloud_network_interface.interface.*.id, count.index)}\"",
      "}"
    ]
  },
  "alicloud-resource-ons_instance": {
    "description": "Defines ons_instance",
    "prefix": "tf-alicloud-resource-ons_instance",
    "body": [
      "resource \"alicloud_ons_instance\" \"example\" {",
      "  name   = \"tf-example-ons-instance\"",
      "  remark = \"tf-example-ons-instance-remark\"",
      "}"
    ]
  },
  "alicloud-resource-ons_topic": {
    "description": "Defines ons_topic",
    "prefix": "tf-alicloud-resource-ons_topic",
    "body": [
      "variable \"name\" {",
      "  default = \"onsInstanceName\"",
      "}",
      "",
      "variable \"topic\" {",
      "  default = \"onsTopicName\"",
      "}",
      "",
      "resource \"alicloud_ons_instance\" \"default\" {",
      "  name = \"${var.name}\"",
      "  remark = \"default_ons_instance_remark\"",
      "}",
      "",
      "resource \"alicloud_ons_topic\" \"default\" {",
      "  topic = \"${var.topic}\"",
      "  instance_id = \"${alicloud_ons_instance.default.id}\"",
      "  message_type = 0",
      "  remark = \"dafault_ons_topic_remark\"",
      "}"
    ]
  },
  "alicloud-resource-oss_bucket": {
    "description": "Defines oss_bucket",
    "prefix": "tf-alicloud-resource-oss_bucket",
    "body": [
      "resource \"alicloud_oss_bucket\" \"bucket-acl\" {",
      "  bucket = \"bucket-170309-acl\"",
      "  acl    = \"private\"",
      "}"
    ]
  },
  "alicloud-resource-oss_bucket_object": {
    "description": "Defines oss_bucket_object",
    "prefix": "tf-alicloud-resource-oss_bucket_object",
    "body": [
      "resource \"alicloud_oss_bucket_object\" \"object-source\" {",
      "  bucket = \"your_bucket_name\"",
      "  key    = \"new_object_key\"",
      "  source = \"path/to/file\"",
      "}"
    ]
  },
  "alicloud-resource-ots_instance": {
    "description": "Defines ots_instance",
    "prefix": "tf-alicloud-resource-ots_instance",
    "body": [
      "# Create an OTS instance",
      "resource \"alicloud_ots_instance\" \"foo\" {",
      "  name        = \"my-ots-instance\"",
      "  description = \"for table\"",
      "  accessed_by = \"Vpc\"",
      "  tags = {",
      "    Created = \"TF\"",
      "    For     = \"Building table\"",
      "  }",
      "}"
    ]
  },
  "alicloud-resource-ots_instance_attachment": {
    "description": "Defines ots_instance_attachment",
    "prefix": "tf-alicloud-resource-ots_instance_attachment",
    "body": [
      "# Create an OTS instance",
      "resource \"alicloud_ots_instance\" \"foo\" {",
      "  name        = \"my-ots-instance\"",
      "  description = \"for table\"",
      "  accessed_by = \"Vpc\"",
      "  tags = {",
      "    Created = \"TF\"",
      "    For     = \"Building table\"",
      "  }",
      "}",
      "",
      "data \"alicloud_zones\" \"foo\" {",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "resource \"alicloud_vpc\" \"foo\" {",
      "  cidr_block = \"172.16.0.0/16\"",
      "  name       = \"for-ots-instance\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"foo\" {",
      "  vpc_id            = \"${alicloud_vpc.foo.id}\"",
      "  name              = \"for-ots-instance\"",
      "  cidr_block        = \"172.16.1.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.foo.zones.0.id}\"",
      "}",
      "resource \"alicloud_ots_instance_attachment\" \"foo\" {",
      "  instance_name = \"${alicloud_ots_instance.foo.name}\"",
      "  vpc_name      = \"attachment1\"",
      "  vswitch_id    = \"${alicloud_vswitch.foo.id}\"",
      "}"
    ]
  },
  "alicloud-resource-ots_table": {
    "description": "Defines ots_table",
    "prefix": "tf-alicloud-resource-ots_table",
    "body": [
      "variable \"name\" {",
      "  default = \"terraformtest\"",
      "}",
      "resource \"alicloud_ots_instance\" \"foo\" {",
      "  name        = \"${var.name}\"",
      "  description = \"${var.name}\"",
      "  accessed_by = \"Any\"",
      "  tags = {",
      "    Created = \"TF\"",
      "    For     = \"acceptance test\"",
      "  }",
      "}",
      "",
      "resource \"alicloud_ots_table\" \"basic\" {",
      "  instance_name = \"${alicloud_ots_instance.foo.name}\"",
      "  table_name    = \"${var.name}\"",
      "  primary_key = [",
      "    {",
      "      name = \"pk1\"",
      "      type = \"Integer\"",
      "    },",
      "    {",
      "      name = \"pk2\"",
      "      type = \"String\"",
      "    },",
      "    {",
      "      name = \"pk3\"",
      "      type = \"Binary\"",
      "    },",
      "  ]",
      "",
      "  time_to_live                  = -1",
      "  max_version                   = 1",
      "  deviation_cell_version_in_sec = 1",
      "}"
    ]
  },
  "alicloud-resource-pvtz_zone": {
    "description": "Defines pvtz_zone",
    "prefix": "tf-alicloud-resource-pvtz_zone",
    "body": [
      "resource \"alicloud_pvtz_zone\" \"foo\" {",
      "  name = \"foo.test.com\"",
      "}"
    ]
  },
  "alicloud-resource-pvtz_zone_attachment": {
    "description": "Defines pvtz_zone_attachment",
    "prefix": "tf-alicloud-resource-pvtz_zone_attachment",
    "body": [
      "resource \"alicloud_pvtz_zone\" \"zone\" {",
      "  name = \"foo.test.com\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"vpc\" {",
      "  name       = \"tf_test_foo\"",
      "  cidr_block = \"172.16.0.0/12\"",
      "}",
      "",
      "resource \"alicloud_pvtz_zone_attachment\" \"zone-attachment\" {",
      "  zone_id = \"${alicloud_pvtz_zone.zone.id}\"",
      "  vpc_ids = [\"${alicloud_vpc.vpc.id}\"]",
      "}"
    ]
  },
  "alicloud-resource-pvtz_zone_record": {
    "description": "Defines pvtz_zone_record",
    "prefix": "tf-alicloud-resource-pvtz_zone_record",
    "body": [
      "resource \"alicloud_pvtz_zone\" \"zone\" {",
      "  name = \"foo.test.com\"",
      "}",
      "",
      "resource \"alicloud_pvtz_zone_record\" \"foo\" {",
      "  zone_id         = \"${alicloud_pvtz_zone.zone.id}\"",
      "  resource_record = \"www\"",
      "  type            = \"CNAME\"",
      "  value           = \"bbb.test.com\"",
      "  ttl             = 60",
      "}"
    ]
  },
  "alicloud-resource-ram_access_key": {
    "description": "Defines ram_access_key",
    "prefix": "tf-alicloud-resource-ram_access_key",
    "body": [
      "# Create a new RAM access key for user.",
      "resource \"alicloud_ram_user\" \"user\" {",
      "  name         = \"user_test\"",
      "  display_name = \"user_display_name\"",
      "  mobile       = \"86-18688888888\"",
      "  email        = \"hello.uuu@aaa.com\"",
      "  comments     = \"yoyoyo\"",
      "  force        = true",
      "}",
      "",
      "resource \"alicloud_ram_access_key\" \"ak\" {",
      "  user_name   = \"${alicloud_ram_user.user.name}\"",
      "  secret_file = \"/xxx/xxx/xxx.txt\"",
      "}"
    ]
  },
  "alicloud-resource-ram_account_alias": {
    "description": "Defines ram_account_alias",
    "prefix": "tf-alicloud-resource-ram_account_alias",
    "body": [
      "# Create a alias for cloud account.",
      "resource \"alicloud_ram_account_alias\" \"alias\" {",
      "  account_alias = \"hallo\"",
      "}"
    ]
  },
  "alicloud-resource-ram_account_password_policy": {
    "description": "Defines ram_account_password_policy",
    "prefix": "tf-alicloud-resource-ram_account_password_policy",
    "body": [
      "resource \"alicloud_ram_account_password_policy\" \"default\" {",
      "",
      "}"
    ]
  },
  "alicloud-resource-ram_alias": {
    "description": "Defines ram_alias",
    "prefix": "tf-alicloud-resource-ram_alias",
    "body": [
      "# Create a alias for cloud account.",
      "resource \"alicloud_ram_account_alias\" \"alias\" {",
      "  account_alias = \"hallo\"",
      "}",
      ""
    ]
  },
  "alicloud-resource-ram_group": {
    "description": "Defines ram_group",
    "prefix": "tf-alicloud-resource-ram_group",
    "body": [
      "# Create a new RAM Group.",
      "resource \"alicloud_ram_group\" \"group\" {",
      "  name     = \"groupName\"",
      "  comments = \"this is a group comments.\"",
      "  force    = true",
      "}"
    ]
  },
  "alicloud-resource-ram_group_membership": {
    "description": "Defines ram_group_membership",
    "prefix": "tf-alicloud-resource-ram_group_membership",
    "body": [
      "# Create a RAM Group membership.",
      "resource \"alicloud_ram_group\" \"group\" {",
      "  name     = \"groupName\"",
      "  comments = \"this is a group comments.\"",
      "  force    = true",
      "}",
      "",
      "resource \"alicloud_ram_user\" \"user\" {",
      "  name         = \"user_test\"",
      "  display_name = \"user_display_name\"",
      "  mobile       = \"86-18688888888\"",
      "  email        = \"hello.uuu@aaa.com\"",
      "  comments     = \"yoyoyo\"",
      "  force        = true",
      "}",
      "",
      "resource \"alicloud_ram_user\" \"user1\" {",
      "  name         = \"user_test1\"",
      "  display_name = \"user_display_name1\"",
      "  mobile       = \"86-18688888889\"",
      "  email        = \"hello.uuu@aaa.com\"",
      "  comments     = \"yoyoyo\"",
      "  force        = true",
      "}",
      "",
      "resource \"alicloud_ram_group_membership\" \"membership\" {",
      "  group_name = \"${alicloud_ram_group.group.name}\"",
      "  user_names = [\"${alicloud_ram_user.user.name}\", \"${alicloud_ram_user.user1.name}\"]",
      "}"
    ]
  },
  "alicloud-resource-ram_group_policy_attachment": {
    "description": "Defines ram_group_policy_attachment",
    "prefix": "tf-alicloud-resource-ram_group_policy_attachment",
    "body": [
      "# Create a RAM Group Policy attachment.",
      "resource \"alicloud_ram_group\" \"group\" {",
      "  name     = \"groupName\"",
      "  comments = \"this is a group comments.\"",
      "  force    = true",
      "}",
      "",
      "resource \"alicloud_ram_policy\" \"policy\" {",
      "  name     = \"policyName\"",
      "  document = <<EOF",
      "    {",
      "      \"Statement\": [",
      "        {",
      "          \"Action\": [",
      "            \"oss:ListObjects\",",
      "            \"oss:GetObject\"",
      "          ],",
      "          \"Effect\": \"Allow\",",
      "          \"Resource\": [",
      "            \"acs:oss:*:*:mybucket\",",
      "            \"acs:oss:*:*:mybucket/*\"",
      "          ]",
      "        }",
      "      ],",
      "        \"Version\": \"1\"",
      "    }",
      "  EOF",
      "  description = \"this is a policy test\"",
      "  force = true",
      "}",
      "",
      "resource \"alicloud_ram_group_policy_attachment\" \"attach\" {",
      "  policy_name = \"${alicloud_ram_policy.policy.name}\"",
      "  policy_type = \"${alicloud_ram_policy.policy.type}\"",
      "  group_name = \"${alicloud_ram_group.group.name}\"",
      "}"
    ]
  },
  "alicloud-resource-ram_login_profile": {
    "description": "Defines ram_login_profile",
    "prefix": "tf-alicloud-resource-ram_login_profile",
    "body": [
      "# Create a RAM login profile.",
      "resource \"alicloud_ram_user\" \"user\" {",
      "  name         = \"user_test\"",
      "  display_name = \"user_display_name\"",
      "  mobile       = \"86-18688888888\"",
      "  email        = \"hello.uuu@aaa.com\"",
      "  comments     = \"yoyoyo\"",
      "  force        = true",
      "}",
      "",
      "resource \"alicloud_ram_login_profile\" \"profile\" {",
      "  user_name = \"${alicloud_ram_user.user.name}\"",
      "  password  = \"Yourpassword1234\"",
      "}"
    ]
  },
  "alicloud-resource-ram_policy": {
    "description": "Defines ram_policy",
    "prefix": "tf-alicloud-resource-ram_policy",
    "body": [
      "# Create a new RAM Policy.",
      "resource \"alicloud_ram_policy\" \"policy\" {",
      "  name     = \"policyName\"",
      "  document = <<EOF",
      "  {",
      "    \"Statement\": [",
      "      {",
      "        \"Action\": [",
      "          \"oss:ListObjects\",",
      "          \"oss:GetObject\"",
      "        ],",
      "        \"Effect\": \"Allow\",",
      "        \"Resource\": [",
      "          \"acs:oss:*:*:mybucket\",",
      "          \"acs:oss:*:*:mybucket/*\"",
      "        ]",
      "      }",
      "    ],",
      "      \"Version\": \"1\"",
      "  }",
      "  EOF",
      "  description = \"this is a policy test\"",
      "  force = true",
      "}"
    ]
  },
  "alicloud-resource-ram_role": {
    "description": "Defines ram_role",
    "prefix": "tf-alicloud-resource-ram_role",
    "body": [
      "# Create a new RAM Role.",
      "resource \"alicloud_ram_role\" \"role\" {",
      "  name     = \"testrole\"",
      "  document = <<EOF",
      "  {",
      "    \"Statement\": [",
      "      {",
      "        \"Action\": \"sts:AssumeRole\",",
      "        \"Effect\": \"Allow\",",
      "        \"Principal\": {",
      "          \"Service\": [",
      "            \"apigateway.aliyuncs.com\", ",
      "            \"ecs.aliyuncs.com\"",
      "          ]",
      "        }",
      "      }",
      "    ],",
      "    \"Version\": \"1\"",
      "  }",
      "  EOF",
      "  description = \"this is a role test.\"",
      "  force = true",
      "}"
    ]
  },
  "alicloud-resource-ram_role_attachment": {
    "description": "Defines ram_role_attachment",
    "prefix": "tf-alicloud-resource-ram_role_attachment",
    "body": [
      "data \"alicloud_zones\" \"default\" {",
      "  available_disk_category     = \"cloud_efficiency\"",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "data \"alicloud_instance_types\" \"default\" {",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  cpu_core_count    = 2",
      "  memory_size       = 4",
      "}",
      "",
      "data \"alicloud_images\" \"default\" {",
      "  name_regex  = \"^ubuntu_14.*_64\"",
      "  most_recent = true",
      "  owners      = \"system\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_security_group\" \"default\" {",
      "  name   = \"${var.name}\"",
      "  vpc_id = \"${alicloud_vpc.default.id}\"",
      "}",
      "",
      "resource \"alicloud_security_group_rule\" \"default\" {",
      "  type              = \"ingress\"",
      "  ip_protocol       = \"tcp\"",
      "  nic_type          = \"intranet\"",
      "  policy            = \"accept\"",
      "  port_range        = \"22/22\"",
      "  priority          = 1",
      "  security_group_id = \"${alicloud_security_group.default.id}\"",
      "  cidr_ip           = \"172.16.0.0/24\"",
      "}",
      "variable \"name\" {",
      "  default = \"ecsInstanceVPCExample\"",
      "}",
      "resource \"alicloud_instance\" \"foo\" {",
      "  vswitch_id = \"${alicloud_vswitch.default.id}\"",
      "  image_id   = \"${data.alicloud_images.default.images.0.id}\"",
      "",
      "  instance_type        = \"${data.alicloud_instance_types.default.instance_types.0.id}\"",
      "  system_disk_category = \"cloud_efficiency\"",
      "",
      "  internet_charge_type       = \"PayByTraffic\"",
      "  internet_max_bandwidth_out = 5",
      "  security_groups            = [\"${alicloud_security_group.default.id}\"]",
      "  instance_name              = \"${var.name}\"",
      "}",
      "resource \"alicloud_ram_role\" \"role\" {",
      "  name     = \"testrole\"",
      "  document = <<EOF",
      "  {",
      "    \"Statement\": [",
      "      {",
      "        \"Action\": \"sts:AssumeRole\",",
      "        \"Effect\": \"Allow\",",
      "        \"Principal\": {",
      "          \"Service\": [",
      "            \"ecs.aliyuncs.com\"",
      "          ]",
      "        }",
      "      }",
      "    ],",
      "    \"Version\": \"1\"",
      "  }",
      "  EOF",
      "  description = \"this is a test\"",
      "  force = true",
      "}",
      "",
      "resource \"alicloud_ram_role_attachment\" \"attach\" {",
      "  role_name = \"${alicloud_ram_role.role.name}\"",
      "  instance_ids = [\"${alicloud_instance.foo.*.id}\"]",
      "}"
    ]
  },
  "alicloud-resource-ram_role_policy_attachment": {
    "description": "Defines ram_role_policy_attachment",
    "prefix": "tf-alicloud-resource-ram_role_policy_attachment",
    "body": [
      "# Create a RAM Role Policy attachment.",
      "resource \"alicloud_ram_role\" \"role\" {",
      "  name     = \"roleName\"",
      "  document = <<EOF",
      "    {",
      "      \"Statement\": [",
      "        {",
      "          \"Action\": \"sts:AssumeRole\",",
      "          \"Effect\": \"Allow\",",
      "          \"Principal\": {",
      "            \"Service\": [",
      "              \"apigateway.aliyuncs.com\", ",
      "              \"ecs.aliyuncs.com\"",
      "            ]",
      "          }",
      "        }",
      "      ],",
      "      \"Version\": \"1\"",
      "    }",
      "    EOF",
      "  description = \"this is a role test.\"",
      "  force = true",
      "}",
      "",
      "resource \"alicloud_ram_policy\" \"policy\" {",
      "  name = \"policyName\"",
      "  document = <<EOF",
      "  {",
      "    \"Statement\": [",
      "      {",
      "        \"Action\": [",
      "          \"oss:ListObjects\",",
      "          \"oss:GetObject\"",
      "        ],",
      "        \"Effect\": \"Allow\",",
      "        \"Resource\": [",
      "          \"acs:oss:*:*:mybucket\",",
      "          \"acs:oss:*:*:mybucket/*\"",
      "        ]",
      "      }",
      "    ],",
      "      \"Version\": \"1\"",
      "  }",
      "  EOF",
      "  description = \"this is a policy test\"",
      "  force       = true",
      "}",
      "",
      "resource \"alicloud_ram_role_policy_attachment\" \"attach\" {",
      "  policy_name = \"${alicloud_ram_policy.policy.name}\"",
      "  policy_type = \"${alicloud_ram_policy.policy.type}\"",
      "  role_name   = \"${alicloud_ram_role.role.name}\"",
      "}"
    ]
  },
  "alicloud-resource-ram_user": {
    "description": "Defines ram_user",
    "prefix": "tf-alicloud-resource-ram_user",
    "body": [
      "# Create a new RAM user.",
      "resource \"alicloud_ram_user\" \"user\" {",
      "  name         = \"user_test\"",
      "  display_name = \"user_display_name\"",
      "  mobile       = \"86-18688888888\"",
      "  email        = \"hello.uuu@aaa.com\"",
      "  comments     = \"yoyoyo\"",
      "  force        = true",
      "}"
    ]
  },
  "alicloud-resource-ram_user_policy_attachment": {
    "description": "Defines ram_user_policy_attachment",
    "prefix": "tf-alicloud-resource-ram_user_policy_attachment",
    "body": [
      "# Create a RAM User Policy attachment.",
      "resource \"alicloud_ram_user\" \"user\" {",
      "  name         = \"userName\"",
      "  display_name = \"user_display_name\"",
      "  mobile       = \"86-18688888888\"",
      "  email        = \"hello.uuu@aaa.com\"",
      "  comments     = \"yoyoyo\"",
      "  force        = true",
      "}",
      "",
      "resource \"alicloud_ram_policy\" \"policy\" {",
      "  name     = \"policyName\"",
      "  document = <<EOF",
      "  {",
      "    \"Statement\": [",
      "      {",
      "        \"Action\": [",
      "          \"oss:ListObjects\",",
      "          \"oss:GetObject\"",
      "        ],",
      "        \"Effect\": \"Allow\",",
      "        \"Resource\": [",
      "          \"acs:oss:*:*:mybucket\",",
      "          \"acs:oss:*:*:mybucket/*\"",
      "        ]",
      "      }",
      "    ],",
      "      \"Version\": \"1\"",
      "  }",
      "  EOF",
      "  description = \"this is a policy test\"",
      "  force = true",
      "}",
      "",
      "resource \"alicloud_ram_user_policy_attachment\" \"attach\" {",
      "  policy_name = \"${alicloud_ram_policy.policy.name}\"",
      "  policy_type = \"${alicloud_ram_policy.policy.type}\"",
      "  user_name = \"${alicloud_ram_user.user.name}\"",
      "}"
    ]
  },
  "alicloud-resource-route_entry": {
    "description": "Defines route_entry",
    "prefix": "tf-alicloud-resource-route_entry",
    "body": [
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "data \"alicloud_instance_types\" \"default\" {",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  cpu_core_count    = 1",
      "  memory_size       = 2",
      "}",
      "data \"alicloud_images\" \"default\" {",
      "  name_regex  = \"^ubuntu_14.*_64\"",
      "  most_recent = true",
      "  owners      = \"system\"",
      "}",
      "",
      "variable \"name\" {",
      "  default = \"RouteEntryConfig\"",
      "}",
      "resource \"alicloud_vpc\" \"foo\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"10.1.0.0/21\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"foo\" {",
      "  vpc_id            = \"${alicloud_vpc.foo.id}\"",
      "  cidr_block        = \"10.1.1.0/24\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_security_group\" \"tf_test_foo\" {",
      "  name        = \"${var.name}\"",
      "  description = \"foo\"",
      "  vpc_id      = \"${alicloud_vpc.foo.id}\"",
      "}",
      "",
      "resource \"alicloud_security_group_rule\" \"ingress\" {",
      "  type              = \"ingress\"",
      "  ip_protocol       = \"tcp\"",
      "  nic_type          = \"intranet\"",
      "  policy            = \"accept\"",
      "  port_range        = \"22/22\"",
      "  priority          = 1",
      "  security_group_id = \"${alicloud_security_group.tf_test_foo.id}\"",
      "  cidr_ip           = \"0.0.0.0/0\"",
      "}",
      "",
      "resource \"alicloud_instance\" \"foo\" {",
      "  security_groups = [\"${alicloud_security_group.tf_test_foo.id}\"]",
      "",
      "  vswitch_id = \"${alicloud_vswitch.foo.id}\"",
      "",
      "  instance_charge_type       = \"PostPaid\"",
      "  instance_type              = \"${data.alicloud_instance_types.default.instance_types.0.id}\"",
      "  internet_charge_type       = \"PayByTraffic\"",
      "  internet_max_bandwidth_out = 5",
      "",
      "  system_disk_category = \"cloud_efficiency\"",
      "  image_id             = \"${data.alicloud_images.default.images.0.id}\"",
      "  instance_name        = \"${var.name}\"",
      "}",
      "resource \"alicloud_route_entry\" \"foo\" {",
      "  route_table_id        = \"${alicloud_vpc.foo.route_table_id}\"",
      "  destination_cidrblock = \"172.11.1.1/32\"",
      "  nexthop_type          = \"Instance\"",
      "  nexthop_id            = \"${alicloud_instance.foo.id}\"",
      "}"
    ]
  },
  "alicloud-resource-route_table": {
    "description": "Defines route_table",
    "prefix": "tf-alicloud-resource-route_table",
    "body": [
      "resource \"alicloud_vpc\" \"foo\" {",
      "  cidr_block = \"172.16.0.0/12\"",
      "  name       = \"vpc-example-name\"",
      "}",
      "",
      "resource \"alicloud_route_table\" \"foo\" {",
      "  vpc_id      = \"${alicloud_vpc.foo.id}\"",
      "  name        = \"route-table-example-name\"",
      "  description = \"route-table-example-description\"",
      "}"
    ]
  },
  "alicloud-resource-route_table_attachment": {
    "description": "Defines route_table_attachment",
    "prefix": "tf-alicloud-resource-route_table_attachment",
    "body": [
      "variable \"name\" {",
      "  default = \"route-table-attachment-example-name\"",
      "}",
      "resource \"alicloud_vpc\" \"foo\" {",
      "  cidr_block = \"172.16.0.0/12\"",
      "  name       = \"${var.name}\"",
      "}",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "resource \"alicloud_vswitch\" \"foo\" {",
      "  vpc_id            = \"${alicloud_vpc.foo.id}\"",
      "  cidr_block        = \"172.16.0.0/21\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_route_table\" \"foo\" {",
      "  vpc_id      = \"${alicloud_vpc.foo.id}\"",
      "  name        = \"${var.name}\"",
      "  description = \"route_table_attachment\"",
      "}",
      "",
      "resource \"alicloud_route_table_attachment\" \"foo\" {",
      "  vswitch_id     = \"${alicloud_vswitch.foo.id}\"",
      "  route_table_id = \"${alicloud_route_table.foo.id}\"",
      "}"
    ]
  },
  "alicloud-resource-router_interface": {
    "description": "Defines router_interface",
    "prefix": "tf-alicloud-resource-router_interface",
    "body": [
      "resource \"alicloud_vpc\" \"foo\" {",
      "  name       = \"tf_test_foo12345\"",
      "  cidr_block = \"172.16.0.0/12\"",
      "}",
      "",
      "resource \"alicloud_router_interface\" \"interface\" {",
      "  opposite_region = \"cn-beijing\"",
      "  router_type     = \"VRouter\"",
      "  router_id       = \"${alicloud_vpc.foo.router_id}\"",
      "  role            = \"InitiatingSide\"",
      "  specification   = \"Large.2\"",
      "  name            = \"test1\"",
      "  description     = \"test1\"",
      "}"
    ]
  },
  "alicloud-resource-router_interface_connection": {
    "description": "Defines router_interface_connection",
    "prefix": "tf-alicloud-resource-router_interface_connection",
    "body": [
      "",
      "provider \"alicloud\" {",
      "  region = \"${var.region}\"",
      "}",
      "variable \"region\" {",
      "  default = \"cn-hangzhou\"",
      "}",
      "variable \"name\" {",
      "  default = \"alicloudRouterInterfaceConnectionBasic\"",
      "}",
      "resource \"alicloud_vpc\" \"foo\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/12\"",
      "}",
      "resource \"alicloud_vpc\" \"bar\" {",
      "  provider   = \"alicloud\"",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"192.168.0.0/16\"",
      "}",
      "resource \"alicloud_router_interface\" \"initiate\" {",
      "  opposite_region      = \"${var.region}\"",
      "  router_type          = \"VRouter\"",
      "  router_id            = \"${alicloud_vpc.foo.router_id}\"",
      "  role                 = \"InitiatingSide\"",
      "  specification        = \"Large.2\"",
      "  name                 = \"${var.name}\"",
      "  description          = \"${var.name}\"",
      "  instance_charge_type = \"PostPaid\"",
      "}",
      "resource \"alicloud_router_interface\" \"opposite\" {",
      "  provider        = \"alicloud\"",
      "  opposite_region = \"${var.region}\"",
      "  router_type     = \"VRouter\"",
      "  router_id       = \"${alicloud_vpc.bar.router_id}\"",
      "  role            = \"AcceptingSide\"",
      "  specification   = \"Large.1\"",
      "  name            = \"${var.name}-opposite\"",
      "  description     = \"${var.name}-opposite\"",
      "}",
      "",
      "// A integrated router interface connection tunnel requires both InitiatingSide and AcceptingSide configuring opposite router interface.",
      "resource \"alicloud_router_interface_connection\" \"foo\" {",
      "  interface_id          = \"${alicloud_router_interface.initiate.id}\"",
      "  opposite_interface_id = \"${alicloud_router_interface.opposite.id}\"",
      "  depends_on            = [\"alicloud_router_interface_connection.bar\"] // The connection must start from the accepting side.",
      "}",
      "resource \"alicloud_router_interface_connection\" \"bar\" {",
      "  provider              = \"alicloud\"",
      "  interface_id          = \"${alicloud_router_interface.opposite.id}\"",
      "  opposite_interface_id = \"${alicloud_router_interface.initiate.id}\"",
      "}",
      ""
    ]
  },
  "alicloud-resource-security_group": {
    "description": "Defines security_group",
    "prefix": "tf-alicloud-resource-security_group",
    "body": [
      "resource \"alicloud_security_group\" \"group\" {",
      "  name        = \"terraform-test-group\"",
      "  description = \"New security group\"",
      "}"
    ]
  },
  "alicloud-resource-security_group_rule": {
    "description": "Defines security_group_rule",
    "prefix": "tf-alicloud-resource-security_group_rule",
    "body": [
      "resource \"alicloud_security_group\" \"default\" {",
      "  name = \"default\"",
      "}",
      "",
      "resource \"alicloud_security_group_rule\" \"allow_all_tcp\" {",
      "  type              = \"ingress\"",
      "  ip_protocol       = \"tcp\"",
      "  nic_type          = \"internet\"",
      "  policy            = \"accept\"",
      "  port_range        = \"1/65535\"",
      "  priority          = 1",
      "  security_group_id = \"${alicloud_security_group.default.id}\"",
      "  cidr_ip           = \"0.0.0.0/0\"",
      "}"
    ]
  },
  "alicloud-resource-slb": {
    "description": "Defines slb",
    "prefix": "tf-alicloud-resource-slb",
    "body": [
      "variable \"name\" {",
      "  default = \"terraformtestslbconfig\"",
      "}",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/12\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/21\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_slb\" \"default\" {",
      "  name          = \"${var.name}\"",
      "  specification = \"slb.s2.small\"",
      "  vswitch_id    = \"${alicloud_vswitch.default.id}\"",
      "  tags = {",
      "    tag_a = 1",
      "    tag_b = 2",
      "    tag_c = 3",
      "    tag_d = 4",
      "    tag_e = 5",
      "    tag_f = 6",
      "    tag_g = 7",
      "    tag_h = 8",
      "    tag_i = 9",
      "    tag_j = 10",
      "  }",
      "}"
    ]
  },
  "alicloud-resource-slb_acl": {
    "description": "Defines slb_acl",
    "prefix": "tf-alicloud-resource-slb_acl",
    "body": [
      "variable \"name\" {",
      "  default = \"terraformslbaclconfig\"",
      "}",
      "variable \"ip_version\" {",
      "  default = \"ipv4\"",
      "}",
      "",
      "resource \"alicloud_slb_acl\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  ip_version = \"${var.ip_version}\"",
      "  entry_list {",
      "    entry   = \"10.10.10.0/24\"",
      "    comment = \"first\"",
      "  }",
      "  entry_list {",
      "    entry   = \"168.10.10.0/24\"",
      "    comment = \"second\"",
      "  }",
      "}",
      ""
    ]
  },
  "alicloud-resource-slb_attachment": {
    "description": "Defines slb_attachment",
    "prefix": "tf-alicloud-resource-slb_attachment",
    "body": [
      "variable \"name\" {",
      "  default = \"slbattachmenttest\"",
      "}",
      "data \"alicloud_zones\" \"default\" {",
      "  available_disk_category     = \"cloud_efficiency\"",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "data \"alicloud_instance_types\" \"default\" {",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  cpu_core_count    = 1",
      "  memory_size       = 2",
      "}",
      "data \"alicloud_images\" \"default\" {",
      "  name_regex  = \"^ubuntu_14.*_64\"",
      "  most_recent = true",
      "  owners      = \"system\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/16\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_security_group\" \"default\" {",
      "  name   = \"${var.name}\"",
      "  vpc_id = \"${alicloud_vpc.default.id}\"",
      "}",
      "",
      "resource \"alicloud_instance\" \"default\" {",
      "  image_id                   = \"${data.alicloud_images.default.images.0.id}\"",
      "  instance_type              = \"${data.alicloud_instance_types.default.instance_types.0.id}\"",
      "  internet_charge_type       = \"PayByTraffic\"",
      "  internet_max_bandwidth_out = \"5\"",
      "  system_disk_category       = \"cloud_efficiency\"",
      "  security_groups            = [\"${alicloud_security_group.default.id}\"]",
      "  instance_name              = \"${var.name}\"",
      "  vswitch_id                 = \"${alicloud_vswitch.default.id}\"",
      "}",
      "",
      "resource \"alicloud_slb\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  vswitch_id = \"${alicloud_vswitch.default.id}\"",
      "}",
      "",
      "resource \"alicloud_slb_attachment\" \"default\" {",
      "  load_balancer_id = \"${alicloud_slb.default.id}\"",
      "  instance_ids     = [\"${alicloud_instance.default.id}\"]",
      "  weight           = 90",
      "}"
    ]
  },
  "alicloud-resource-slb_ca_certificate": {
    "description": "Defines slb_ca_certificate",
    "prefix": "tf-alicloud-resource-slb_ca_certificate",
    "body": [
      "# create a CA certificate",
      "resource \"alicloud_slb_ca_certificate\" \"foo\" {",
      "  name           = \"tf-testAccSlbCACertificate\"",
      "  ca_certificate = \"-----BEGIN CERTIFICATE-----\\nMIIDRjCCAq+gAwIBAgIJAJnI******90EAxEG/bJJyOm5LqoiA=\\n-----END CERTIFICATE-----\"",
      "}"
    ]
  },
  "alicloud-resource-slb_listener": {
    "description": "Defines slb_listener",
    "prefix": "tf-alicloud-resource-slb_listener",
    "body": [
      "variable \"name\" {",
      "  default = \"testcreatehttplistener\"",
      "}",
      "variable \"ip_version\" {",
      "  default = \"ipv4\"",
      "}",
      "resource \"alicloud_slb\" \"default\" {",
      "  name                 = \"tf-testAccSlbListenerHttp\"",
      "  internet_charge_type = \"PayByTraffic\"",
      "  internet             = true",
      "}",
      "resource \"alicloud_slb_listener\" \"default\" {",
      "  load_balancer_id          = \"${alicloud_slb.default.id}\"",
      "  backend_port              = 80",
      "  frontend_port             = 80",
      "  protocol                  = \"http\"",
      "  bandwidth                 = 10",
      "  sticky_session            = \"on\"",
      "  sticky_session_type       = \"insert\"",
      "  cookie_timeout            = 86400",
      "  cookie                    = \"testslblistenercookie\"",
      "  health_check              = \"on\"",
      "  health_check_domain       = \"ali.com\"",
      "  health_check_uri          = \"/cons\"",
      "  health_check_connect_port = 20",
      "  healthy_threshold         = 8",
      "  unhealthy_threshold       = 8",
      "  health_check_timeout      = 8",
      "  health_check_interval     = 5",
      "  health_check_http_code    = \"http_2xx,http_3xx\"",
      "  x_forwarded_for {",
      "    retrive_slb_ip = true",
      "    retrive_slb_id = true",
      "  }",
      "  acl_status      = \"on\"",
      "  acl_type        = \"white\"",
      "  acl_id          = \"${alicloud_slb_acl.default.id}\"",
      "  request_timeout = 80",
      "  idle_timeout    = 30",
      "}",
      "resource \"alicloud_slb_acl\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  ip_version = \"${var.ip_version}\"",
      "  entry_list {",
      "    entry   = \"10.10.10.0/24\"",
      "    comment = \"first\"",
      "  }",
      "  entry_list {",
      "    entry   = \"168.10.10.0/24\"",
      "    comment = \"second\"",
      "  }",
      "}"
    ]
  },
  "alicloud-resource-slb_rule": {
    "description": "Defines slb_rule",
    "prefix": "tf-alicloud-resource-slb_rule",
    "body": [
      "variable \"name\" {",
      "  default = \"slbrulebasicconfig\"",
      "}",
      "",
      "data \"alicloud_zones\" \"default\" {",
      "  available_disk_category     = \"cloud_efficiency\"",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "data \"alicloud_instance_types\" \"default\" {",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  cpu_core_count    = 1",
      "  memory_size       = 2",
      "}",
      "data \"alicloud_images\" \"default\" {",
      "  name_regex  = \"^ubuntu_14.*_64\"",
      "  most_recent = true",
      "  owners      = \"system\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/16\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "resource \"alicloud_security_group\" \"default\" {",
      "  name   = \"${var.name}\"",
      "  vpc_id = \"${alicloud_vpc.default.id}\"",
      "}",
      "",
      "resource \"alicloud_instance\" \"default\" {",
      "  image_id                   = \"${data.alicloud_images.default.images.0.id}\"",
      "  instance_type              = \"${data.alicloud_instance_types.default.instance_types.0.id}\"",
      "  security_groups            = \"${alicloud_security_group.default.*.id}\"",
      "  internet_charge_type       = \"PayByTraffic\"",
      "  internet_max_bandwidth_out = \"10\"",
      "  availability_zone          = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  instance_charge_type       = \"PostPaid\"",
      "  system_disk_category       = \"cloud_efficiency\"",
      "  vswitch_id                 = \"${alicloud_vswitch.default.id}\"",
      "  instance_name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_slb\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  vswitch_id = \"${alicloud_vswitch.default.id}\"",
      "}",
      "",
      "resource \"alicloud_slb_listener\" \"default\" {",
      "  load_balancer_id          = \"${alicloud_slb.default.id}\"",
      "  backend_port              = 22",
      "  frontend_port             = 22",
      "  protocol                  = \"http\"",
      "  bandwidth                 = 5",
      "  health_check_connect_port = \"20\"",
      "}",
      "",
      "resource \"alicloud_slb_server_group\" \"default\" {",
      "  load_balancer_id = \"${alicloud_slb.default.id}\"",
      "  servers {",
      "    server_ids = \"${alicloud_instance.default.*.id}\"",
      "    port       = 80",
      "    weight     = 100",
      "  }",
      "}",
      "",
      "resource \"alicloud_slb_rule\" \"default\" {",
      "  load_balancer_id          = \"${alicloud_slb.default.id}\"",
      "  frontend_port             = \"${alicloud_slb_listener.default.frontend_port}\"",
      "  name                      = \"${var.name}\"",
      "  domain                    = \"*.aliyun.com\"",
      "  url                       = \"/image\"",
      "  server_group_id           = \"${alicloud_slb_server_group.default.id}\"",
      "  cookie                    = \"23ffsa\"",
      "  cookie_timeout            = 100",
      "  health_check_http_code    = \"http_2xx\"",
      "  health_check_interval     = 10",
      "  health_check_uri          = \"/test\"",
      "  health_check_connect_port = 80",
      "  health_check_timeout      = 30",
      "  healthy_threshold         = 3",
      "  unhealthy_threshold       = 5",
      "  sticky_session            = \"on\"",
      "  sticky_session_type       = \"server\"",
      "  listener_sync             = \"off\"",
      "  scheduler                 = \"rr\"",
      "  health_check_domain       = \"test\"",
      "  health_check              = \"on\"",
      "}"
    ]
  },
  "alicloud-resource-slb_server_certificate": {
    "description": "Defines slb_server_certificate",
    "prefix": "tf-alicloud-resource-slb_server_certificate",
    "body": [
      "# create a server certificate",
      "resource \"alicloud_slb_server_certificate\" \"foo\" {",
      "  name               = \"slbservercertificate\"",
      "  server_certificate = \"-----BEGIN CERTIFICATE-----\\nMIIDRjCCAq+gAwIBAgI+OuMs******XTtI90EAxEG/bJJyOm5LqoiA=\\n-----END CERTIFICATE-----\"",
      "  private_key        = \"-----BEGIN RSA PRIVATE KEY-----\\nMIICXAIBAAKBgQDO0knDrlNdiys******ErVpjsckAaOW/JDG5PCSwkaMxk=\\n-----END RSA PRIVATE KEY-----\"",
      "}"
    ]
  },
  "alicloud-resource-slb_server_group": {
    "description": "Defines slb_server_group",
    "prefix": "tf-alicloud-resource-slb_server_group",
    "body": [
      "variable \"name\" {",
      "  default = \"slbservergroupvpc\"",
      "}",
      "data \"alicloud_zones\" \"default\" {",
      "  available_disk_category     = \"cloud_efficiency\"",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "data \"alicloud_instance_types\" \"default\" {",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  cpu_core_count    = 1",
      "  memory_size       = 2",
      "}",
      "data \"alicloud_images\" \"default\" {",
      "  name_regex  = \"^ubuntu_14.*_64\"",
      "  most_recent = true",
      "  owners      = \"system\"",
      "}",
      "resource \"alicloud_vpc\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/16\"",
      "}",
      "resource \"alicloud_vswitch\" \"default\" {",
      "  vpc_id            = \"${alicloud_vpc.default.id}\"",
      "  cidr_block        = \"172.16.0.0/16\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "resource \"alicloud_security_group\" \"default\" {",
      "  name   = \"${var.name}\"",
      "  vpc_id = \"${alicloud_vpc.default.id}\"",
      "}",
      "resource \"alicloud_instance\" \"instance\" {",
      "  image_id                   = \"${data.alicloud_images.default.images.0.id}\"",
      "  instance_type              = \"${data.alicloud_instance_types.default.instance_types.0.id}\"",
      "  instance_name              = \"${var.name}\"",
      "  count                      = \"2\"",
      "  security_groups            = \"${alicloud_security_group.default.*.id}\"",
      "  internet_charge_type       = \"PayByTraffic\"",
      "  internet_max_bandwidth_out = \"10\"",
      "  availability_zone          = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  instance_charge_type       = \"PostPaid\"",
      "  system_disk_category       = \"cloud_efficiency\"",
      "  vswitch_id                 = \"${alicloud_vswitch.default.id}\"",
      "}",
      "resource \"alicloud_slb\" \"default\" {",
      "  name       = \"${var.name}\"",
      "  vswitch_id = \"${alicloud_vswitch.default.id}\"",
      "}",
      "resource \"alicloud_slb_server_group\" \"default\" {",
      "  load_balancer_id = \"${alicloud_slb.default.id}\"",
      "  name             = \"${var.name}\"",
      "  servers {",
      "    server_ids = [\"${alicloud_instance.instance.0.id}\", \"${alicloud_instance.instance.1.id}\"]",
      "    port       = 100",
      "    weight     = 10",
      "  }",
      "  servers {",
      "    server_ids = [\"${alicloud_instance.instance.*.id}\"]",
      "    port       = 80",
      "    weight     = 100",
      "  }",
      "}"
    ]
  },
  "alicloud-resource-snapshot": {
    "description": "Defines snapshot",
    "prefix": "tf-alicloud-resource-snapshot",
    "body": [
      "resource \"alicloud_snapshot\" \"snapshot\" {",
      "  disk_id     = \"${alicloud_disk_attachment.instance-attachment.disk_id}\"",
      "  name        = \"test-snapshot\"",
      "  description = \"this snapshot is created for testing\"",
      "  tags = {",
      "    version = \"1.2\"",
      "  }",
      "}"
    ]
  },
  "alicloud-resource-snapshot_policy": {
    "description": "Defines snapshot_policy",
    "prefix": "tf-alicloud-resource-snapshot_policy",
    "body": [
      "resource \"alicloud_snapshot_policy\" \"sp\" {",
      "  name            = \"tf-testAcc-sp\"",
      "  repeat_weekdays = [\"1\", \"2\", \"3\"]",
      "  retention_days  = -1",
      "  time_points     = [\"1\", \"22\", \"23\"]",
      "}"
    ]
  },
  "alicloud-resource-snat": {
    "description": "Defines snat",
    "prefix": "tf-alicloud-resource-snat",
    "body": [
      "variable \"name\" {",
      "  default = \"snat-entry-example-name\"",
      "}",
      "data \"alicloud_zones\" \"default\" {",
      "  available_resource_creation = \"VSwitch\"",
      "}",
      "",
      "resource \"alicloud_vpc\" \"vpc\" {",
      "  name       = \"${var.name}\"",
      "  cidr_block = \"172.16.0.0/12\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"vswitch\" {",
      "  vpc_id            = \"${alicloud_vpc.vpc.id}\"",
      "  cidr_block        = \"172.16.0.0/21\"",
      "  availability_zone = \"${data.alicloud_zones.default.zones.0.id}\"",
      "  name              = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_nat_gateway\" \"default\" {",
      "  vpc_id        = \"${alicloud_vswitch.vswitch.vpc_id}\"",
      "  specification = \"Small\"",
      "  name          = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_eip\" \"eip\" {",
      "  name = \"${var.name}\"",
      "}",
      "",
      "resource \"alicloud_eip_association\" \"default\" {",
      "  allocation_id = \"${alicloud_eip.eip.id}\"",
      "  instance_id   = \"${alicloud_nat_gateway.default.id}\"",
      "}",
      "",
      "resource \"alicloud_snat_entry\" \"default\" {",
      "  snat_table_id     = \"${alicloud_nat_gateway.default.snat_table_ids}\"",
      "  source_vswitch_id = \"${alicloud_vswitch.vswitch.id}\"",
      "  snat_ip           = \"${alicloud_eip.eip.ip_address}\"",
      "}"
    ]
  },
  "alicloud-resource-ssl_vpn_client_cert": {
    "description": "Defines ssl_vpn_client_cert",
    "prefix": "tf-alicloud-resource-ssl_vpn_client_cert",
    "body": [
      "resource \"alicloud_ssl_vpn_client_cert\" \"foo\" {",
      "  ssl_vpn_server_id = \"ssl_vpn_server_fake_id\"",
      "  name              = \"sslVpnClientCertExample\"",
      "}"
    ]
  },
  "alicloud-resource-ssl_vpn_server": {
    "description": "Defines ssl_vpn_server",
    "prefix": "tf-alicloud-resource-ssl_vpn_server",
    "body": [
      "resource \"alicloud_vpn_gateway\" \"foo\" {",
      "  name                 = \"testAccVpnConfig_create\"",
      "  vpc_id               = \"vpc-fake-id\"",
      "  bandwidth            = \"10\"",
      "  enable_ssl           = true",
      "  instance_charge_type = \"PostPaid\"",
      "  description          = \"test_create_description\"",
      "}",
      "",
      "resource \"alicloud_ssl_vpn_server\" \"foo\" {",
      "  name           = \"sslVpnServerNameExample\"",
      "  vpn_gateway_id = \"${alicloud_vpn_gateway.foo.id}\"",
      "  client_ip_pool = \"192.168.0.0/16\"",
      "  local_subnet   = \"172.16.0.0/21\"",
      "  protocol       = \"UDP\"",
      "  cipher         = \"AES-128-CBC\"",
      "  port           = 1194",
      "  compress       = \"false\"",
      "}"
    ]
  },
  "alicloud-resource-vpc": {
    "description": "Defines vpc",
    "prefix": "tf-alicloud-resource-vpc",
    "body": [
      "resource \"alicloud_vpc\" \"vpc\" {",
      "  name       = \"tf_test_foo\"",
      "  cidr_block = \"172.16.0.0/12\"",
      "}"
    ]
  },
  "alicloud-resource-vpn_connection": {
    "description": "Defines vpn_connection",
    "prefix": "tf-alicloud-resource-vpn_connection",
    "body": [
      "resource \"alicloud_vpn_gateway\" \"foo\" {",
      "  name                 = \"testAccVpnConfig_create\"",
      "  vpc_id               = \"vpc-fake-id\"",
      "  bandwidth            = \"10\"",
      "  enable_ssl           = true",
      "  instance_charge_type = \"PostPaid\"",
      "  description          = \"test_create_description\"",
      "}",
      "",
      "resource \"alicloud_vpn_customer_gateway\" \"foo\" {",
      "  name        = \"testAccVpnCgwName\"",
      "  ip_address  = \"42.104.22.228\"",
      "  description = \"testAccVpnCgwDesc\"",
      "}",
      "",
      "resource \"alicloud_vpn_connection\" \"foo\" {",
      "  name                = \"tf-vco_test1\"",
      "  vpn_gateway_id      = \"${alicloud_vpn_gateway.foo.id}\"",
      "  customer_gateway_id = \"${alicloud_vpn_customer_gateway.foo.id}\"",
      "  local_subnet        = [\"172.16.0.0/24\", \"172.16.1.0/24\"]",
      "  remote_subnet       = [\"10.0.0.0/24\", \"10.0.1.0/24\"]",
      "  effect_immediately  = true",
      "  ike_config = [{",
      "    ike_auth_alg  = \"md5\"",
      "    ike_enc_alg   = \"des\"",
      "    ike_version   = \"ikev1\"",
      "    ike_mode      = \"main\"",
      "    ike_lifetime  = 86400",
      "    psk           = \"tf-testvpn2\"",
      "    ike_pfs       = \"group1\"",
      "    ike_remote_id = \"testbob2\"",
      "    ike_local_id  = \"testalice2\"",
      "    }",
      "  ]",
      "  ipsec_config = [{",
      "    ipsec_pfs      = \"group5\"",
      "    ipsec_enc_alg  = \"des\"",
      "    ipsec_auth_alg = \"md5\"",
      "    ipsec_lifetime = 8640",
      "  }]",
      "}"
    ]
  },
  "alicloud-resource-vpn_customer_gateway": {
    "description": "Defines vpn_customer_gateway",
    "prefix": "tf-alicloud-resource-vpn_customer_gateway",
    "body": [
      "resource \"alicloud_vpn_customer_gateway\" \"foo\" {",
      "  name        = \"vpnCgwNameExample\"",
      "  ip_address  = \"43.104.22.228\"",
      "  description = \"vpnCgwDescriptionExample\"",
      "}"
    ]
  },
  "alicloud-resource-vpn_gateway": {
    "description": "Defines vpn_gateway",
    "prefix": "tf-alicloud-resource-vpn_gateway",
    "body": [
      "resource \"alicloud_vpn_gateway\" \"foo\" {",
      "  name                 = \"vpnGatewayConfig\"",
      "  vpc_id               = \"vpc-fakeid\"",
      "  bandwidth            = \"10\"",
      "  enable_ssl           = true",
      "  instance_charge_type = \"PostPaid\"",
      "  description          = \"test_create_description\"",
      "}"
    ]
  },
  "alicloud-resource-vswitch": {
    "description": "Defines vswitch",
    "prefix": "tf-alicloud-resource-vswitch",
    "body": [
      "resource \"alicloud_vpc\" \"vpc\" {",
      "  name       = \"tf_test_foo\"",
      "  cidr_block = \"172.16.0.0/12\"",
      "}",
      "",
      "resource \"alicloud_vswitch\" \"vsw\" {",
      "  vpc_id            = \"${alicloud_vpc.vpc.id}\"",
      "  cidr_block        = \"172.16.0.0/21\"",
      "  availability_zone = \"cn-beijing-b\"",
      "}"
    ]
  },
  "archive-data-archive_file": {
    "description": "Defines archive_file",
    "prefix": "tf-archive-data-archive_file",
    "body": [
      "# Archive a single file.",
      "",
      "data \"archive_file\" \"init\" {",
      "  type        = \"zip\"",
      "  source_file = \"${path.module}/init.tpl\"",
      "  output_path = \"${path.module}/files/init.zip\"",
      "}",
      "",
      "# Archive multiple files.",
      "",
      "data \"archive_file\" \"dotfiles\" {",
      "  type        = \"zip\"",
      "  output_path = \"${path.module}/files/dotfiles.zip\"",
      "",
      "  source {",
      "    content  = \"${data.template_file.vimrc.rendered}\"",
      "    filename = \".vimrc\"",
      "  }",
      "",
      "  source {",
      "    content  = \"${data.template_file.ssh_config.rendered}\"",
      "    filename = \".ssh/config\"",
      "  }",
      "}"
    ]
  },
  "arukas-resource-container": {
    "description": "Defines container",
    "prefix": "tf-arukas-resource-container",
    "body": [
      "resource \"arukas_container\" \"foobar\" {",
      "  name      = \"terraform_for_arukas_test_foobar\"",
      "  image     = \"nginx:latest\"",
      "  instances = 1",
      "  plan      = \"free\"",
      "",
      "  ports {",
      "    protocol = \"tcp\"",
      "    number   = \"80\"",
      "  }",
      "",
      "  environments {",
      "    key   = \"key1\"",
      "    value = \"value1\"",
      "  }",
      "}"
    ]
  },
  "atlas-data-artifact": {
    "description": "Defines artifact",
    "prefix": "tf-atlas-data-artifact",
    "body": [
      "# Read the AMI",
      "data \"atlas_artifact\" \"web\" {",
      "  name  = \"hashicorp/web\"",
      "  type  = \"amazon.image\"",
      "  build = \"latest\"",
      "",
      "  metadata {",
      "    arch = \"386\"",
      "  }",
      "}",
      "",
      "# Start our instance with the dynamic ami value",
      "# Remember to include the AWS region as it is part of the full ID",
      "resource \"aws_instance\" \"app\" {",
      "  ami = \"${data.atlas_artifact.web.metadata_full.region-us-east-1}\"",
      "",
      "  # ...",
      "}"
    ]
  },
  "atlas-resource-artifact": {
    "description": "Defines artifact",
    "prefix": "tf-atlas-resource-artifact",
    "body": [
      "# Read the AMI",
      "resource \"atlas_artifact\" \"web\" {",
      "  name  = \"hashicorp/web\"",
      "  type  = \"amazon.image\"",
      "  build = \"latest\"",
      "",
      "  metadata {",
      "    arch = \"386\"",
      "  }",
      "}",
      "",
      "# Start our instance with the dynamic ami value",
      "# Remember to include the AWS region as it is part of the full ID",
      "resource \"aws_instance\" \"app\" {",
      "  ami = \"${atlas_artifact.web.metadata_full.region-us-east-1}\"",
      "",
      "  # ...",
      "}"
    ]
  },
  "avi-data-avi_actiongroupconfig": {
    "description": "Defines avi_actiongroupconfig",
    "prefix": "tf-avi-data-avi_actiongroupconfig",
    "body": [
      "data \"avi_actiongroupconfig\" \"foo_actiongroupconfig\" {",
      "    uuid = \"actiongroupconfig-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_alertconfig": {
    "description": "Defines avi_alertconfig",
    "prefix": "tf-avi-data-avi_alertconfig",
    "body": [
      "data \"avi_alertconfig\" \"foo_alertconfig\" {",
      "    uuid = \"alertconfig-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_alertemailconfig": {
    "description": "Defines avi_alertemailconfig",
    "prefix": "tf-avi-data-avi_alertemailconfig",
    "body": [
      "data \"avi_alertemailconfig\" \"foo_alertemailconfig\" {",
      "    uuid = \"alertemailconfig-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_alertscriptconfig": {
    "description": "Defines avi_alertscriptconfig",
    "prefix": "tf-avi-data-avi_alertscriptconfig",
    "body": [
      "data \"avi_alertscriptconfig\" \"foo_alertscriptconfig\" {",
      "    uuid = \"alertscriptconfig-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_alertsyslogconfig": {
    "description": "Defines avi_alertsyslogconfig",
    "prefix": "tf-avi-data-avi_alertsyslogconfig",
    "body": [
      "data \"avi_alertsyslogconfig\" \"foo_alertsyslogconfig\" {",
      "    uuid = \"alertsyslogconfig-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_analyticsprofile": {
    "description": "Defines avi_analyticsprofile",
    "prefix": "tf-avi-data-avi_analyticsprofile",
    "body": [
      "data \"avi_analyticsprofile\" \"foo_analyticsprofile\" {",
      "    uuid = \"analyticsprofile-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_applicationpersistenceprofile": {
    "description": "Defines avi_applicationpersistenceprofile",
    "prefix": "tf-avi-data-avi_applicationpersistenceprofile",
    "body": [
      "data \"avi_applicationpersistenceprofile\" \"foo_applicationpersistenceprofile\" {",
      "    uuid = \"applicationpersistenceprofile-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_applicationprofile": {
    "description": "Defines avi_applicationprofile",
    "prefix": "tf-avi-data-avi_applicationprofile",
    "body": [
      "data \"avi_applicationprofile\" \"foo_applicationprofile\" {",
      "    uuid = \"applicationprofile-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_authprofile": {
    "description": "Defines avi_authprofile",
    "prefix": "tf-avi-data-avi_authprofile",
    "body": [
      "data \"avi_authprofile\" \"foo_authprofile\" {",
      "    uuid = \"authprofile-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_autoscalelaunchconfig": {
    "description": "Defines avi_autoscalelaunchconfig",
    "prefix": "tf-avi-data-avi_autoscalelaunchconfig",
    "body": [
      "data \"avi_autoscalelaunchconfig\" \"foo_autoscalelaunchconfig\" {",
      "    uuid = \"autoscalelaunchconfig-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_backup": {
    "description": "Defines avi_backup",
    "prefix": "tf-avi-data-avi_backup",
    "body": [
      "data \"avi_backup\" \"foo_backup\" {",
      "    uuid = \"backup-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_backupconfiguration": {
    "description": "Defines avi_backupconfiguration",
    "prefix": "tf-avi-data-avi_backupconfiguration",
    "body": [
      "data \"avi_backupconfiguration\" \"foo_backupconfiguration\" {",
      "    uuid = \"backupconfiguration-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_certificatemanagementprofile": {
    "description": "Defines avi_certificatemanagementprofile",
    "prefix": "tf-avi-data-avi_certificatemanagementprofile",
    "body": [
      "data \"avi_certificatemanagementprofile\" \"foo_certificatemanagementprofile\" {",
      "    uuid = \"certificatemanagementprofile-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_cloud": {
    "description": "Defines avi_cloud",
    "prefix": "tf-avi-data-avi_cloud",
    "body": [
      "data \"avi_cloud\" \"foo_cloud\" {",
      "    uuid = \"cloud-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_cloudconnectoruser": {
    "description": "Defines avi_cloudconnectoruser",
    "prefix": "tf-avi-data-avi_cloudconnectoruser",
    "body": [
      "data \"avi_cloudconnectoruser\" \"foo_cloudconnectoruser\" {",
      "    uuid = \"cloudconnectoruser-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_cloudproperties": {
    "description": "Defines avi_cloudproperties",
    "prefix": "tf-avi-data-avi_cloudproperties",
    "body": [
      "data \"avi_cloudproperties\" \"foo_cloudproperties\" {",
      "    uuid = \"cloudproperties-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_cluster": {
    "description": "Defines avi_cluster",
    "prefix": "tf-avi-data-avi_cluster",
    "body": [
      "data \"avi_cluster\" \"foo_cluster\" {",
      "    uuid = \"cluster-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_clusterclouddetails": {
    "description": "Defines avi_clusterclouddetails",
    "prefix": "tf-avi-data-avi_clusterclouddetails",
    "body": [
      "data \"avi_clusterclouddetails\" \"foo_clusterclouddetails\" {",
      "    uuid = \"clusterclouddetails-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_controllerproperties": {
    "description": "Defines avi_controllerproperties",
    "prefix": "tf-avi-data-avi_controllerproperties",
    "body": [
      "data \"avi_controllerproperties\" \"foo_controllerproperties\" {",
      "    uuid = \"controllerproperties-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_controllersite": {
    "description": "Defines avi_controllersite",
    "prefix": "tf-avi-data-avi_controllersite",
    "body": [
      "data \"avi_controllersite\" \"foo_controllersite\" {",
      "    uuid = \"controllersite-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_customipamdnsprofile": {
    "description": "Defines avi_customipamdnsprofile",
    "prefix": "tf-avi-data-avi_customipamdnsprofile",
    "body": [
      "data \"avi_customipamdnsprofile\" \"foo_customipamdnsprofile\" {",
      "    uuid = \"customipamdnsprofile-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_dnspolicy": {
    "description": "Defines avi_dnspolicy",
    "prefix": "tf-avi-data-avi_dnspolicy",
    "body": [
      "data \"avi_dnspolicy\" \"foo_dnspolicy\" {",
      "    uuid = \"dnspolicy-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_errorpagebody": {
    "description": "Defines avi_errorpagebody",
    "prefix": "tf-avi-data-avi_errorpagebody",
    "body": [
      "data \"avi_errorpagebody\" \"foo_errorpagebody\" {",
      "    uuid = \"errorpagebody-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_errorpageprofile": {
    "description": "Defines avi_errorpageprofile",
    "prefix": "tf-avi-data-avi_errorpageprofile",
    "body": [
      "data \"avi_errorpageprofile\" \"foo_errorpageprofile\" {",
      "    uuid = \"errorpageprofile-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_fileservice": {
    "description": "Defines avi_fileservice",
    "prefix": "tf-avi-data-avi_fileservice",
    "body": [
      "data \"avi_fileservice\" \"foo_Fileservice\" {",
      "    uuid = \"filename\"",
      "  }"
    ]
  },
  "avi-data-avi_gslb": {
    "description": "Defines avi_gslb",
    "prefix": "tf-avi-data-avi_gslb",
    "body": [
      "data \"avi_gslb\" \"foo_gslb\" {",
      "    uuid = \"gslb-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_gslbgeodbprofile": {
    "description": "Defines avi_gslbgeodbprofile",
    "prefix": "tf-avi-data-avi_gslbgeodbprofile",
    "body": [
      "data \"avi_gslbgeodbprofile\" \"foo_gslbgeodbprofile\" {",
      "    uuid = \"gslbgeodbprofile-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_gslbservice": {
    "description": "Defines avi_gslbservice",
    "prefix": "tf-avi-data-avi_gslbservice",
    "body": [
      "data \"avi_gslbservice\" \"foo_gslbservice\" {",
      "    uuid = \"gslbservice-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_hardwaresecuritymodulegroup": {
    "description": "Defines avi_hardwaresecuritymodulegroup",
    "prefix": "tf-avi-data-avi_hardwaresecuritymodulegroup",
    "body": [
      "data \"avi_hardwaresecuritymodulegroup\" \"foo_hardwaresecuritymodulegroup\" {",
      "    uuid = \"hardwaresecuritymodulegroup-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_healthmonitor": {
    "description": "Defines avi_healthmonitor",
    "prefix": "tf-avi-data-avi_healthmonitor",
    "body": [
      "data \"avi_healthmonitor\" \"foo_healthmonitor\" {",
      "    uuid = \"healthmonitor-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_httppolicyset": {
    "description": "Defines avi_httppolicyset",
    "prefix": "tf-avi-data-avi_httppolicyset",
    "body": [
      "data \"avi_httppolicyset\" \"foo_httppolicyset\" {",
      "    uuid = \"httppolicyset-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_ipaddrgroup": {
    "description": "Defines avi_ipaddrgroup",
    "prefix": "tf-avi-data-avi_ipaddrgroup",
    "body": [
      "data \"avi_ipaddrgroup\" \"foo_ipaddrgroup\" {",
      "    uuid = \"ipaddrgroup-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_ipamdnsproviderprofile": {
    "description": "Defines avi_ipamdnsproviderprofile",
    "prefix": "tf-avi-data-avi_ipamdnsproviderprofile",
    "body": [
      "data \"avi_ipamdnsproviderprofile\" \"foo_ipamdnsproviderprofile\" {",
      "    uuid = \"ipamdnsproviderprofile-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_l4policyset": {
    "description": "Defines avi_l4policyset",
    "prefix": "tf-avi-data-avi_l4policyset",
    "body": [
      "data \"avi_l4policyset\" \"foo_l4policyset\" {",
      "    uuid = \"l4policyset-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_microservicegroup": {
    "description": "Defines avi_microservicegroup",
    "prefix": "tf-avi-data-avi_microservicegroup",
    "body": [
      "data \"avi_microservicegroup\" \"foo_microservicegroup\" {",
      "    uuid = \"microservicegroup-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_natpolicy": {
    "description": "Defines avi_natpolicy",
    "prefix": "tf-avi-data-avi_natpolicy",
    "body": [
      "data \"avi_natpolicy\" \"foo_natpolicy\" {",
      "    uuid = \"natpolicy-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_network": {
    "description": "Defines avi_network",
    "prefix": "tf-avi-data-avi_network",
    "body": [
      "data \"avi_network\" \"foo_network\" {",
      "    uuid = \"network-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "    cloud_ref = \"/api/cloud/?tenant=admin&name=Default-Cloud\"",
      "  }"
    ]
  },
  "avi-data-avi_networkprofile": {
    "description": "Defines avi_networkprofile",
    "prefix": "tf-avi-data-avi_networkprofile",
    "body": [
      "data \"avi_networkprofile\" \"foo_networkprofile\" {",
      "    uuid = \"networkprofile-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_networksecuritypolicy": {
    "description": "Defines avi_networksecuritypolicy",
    "prefix": "tf-avi-data-avi_networksecuritypolicy",
    "body": [
      "data \"avi_networksecuritypolicy\" \"foo_networksecuritypolicy\" {",
      "    uuid = \"networksecuritypolicy-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_networkservice": {
    "description": "Defines avi_networkservice",
    "prefix": "tf-avi-data-avi_networkservice",
    "body": [
      "data \"avi_networkservice\" \"foo_networkservice\" {",
      "    uuid = \"networkservice-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "    cloud_ref = \"/api/cloud/?tenant=admin&name=Default-Cloud\"",
      "  }"
    ]
  },
  "avi-data-avi_pingaccessagent": {
    "description": "Defines avi_pingaccessagent",
    "prefix": "tf-avi-data-avi_pingaccessagent",
    "body": [
      "data \"avi_pingaccessagent\" \"foo_pingaccessagent\" {",
      "    uuid = \"pingaccessagent-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_pkiprofile": {
    "description": "Defines avi_pkiprofile",
    "prefix": "tf-avi-data-avi_pkiprofile",
    "body": [
      "data \"avi_pkiprofile\" \"foo_pkiprofile\" {",
      "    uuid = \"pkiprofile-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_pool": {
    "description": "Defines avi_pool",
    "prefix": "tf-avi-data-avi_pool",
    "body": [
      "data \"Pool\" \"foo_Pool\" {",
      "    uuid = \"Pool-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "    cloud_ref = \"/api/cloud/?tenant=admin&name=Default-Cloud\"",
      "  }"
    ]
  },
  "avi-data-avi_poolgroup": {
    "description": "Defines avi_poolgroup",
    "prefix": "tf-avi-data-avi_poolgroup",
    "body": [
      "data \"avi_poolgroup\" \"foo_poolgroup\" {",
      "    uuid = \"poolgroup-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "    cloud_ref = \"/api/cloud/?tenant=admin&name=Default-Cloud\"",
      "  }"
    ]
  },
  "avi-data-avi_poolgroupdeploymentpolicy": {
    "description": "Defines avi_poolgroupdeploymentpolicy",
    "prefix": "tf-avi-data-avi_poolgroupdeploymentpolicy",
    "body": [
      "data \"avi_poolgroupdeploymentpolicy\" \"foo_poolgroupdeploymentpolicy\" {",
      "    uuid = \"poolgroupdeploymentpolicy-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_prioritylabels": {
    "description": "Defines avi_prioritylabels",
    "prefix": "tf-avi-data-avi_prioritylabels",
    "body": [
      "data \"avi_prioritylabels\" \"foo_prioritylabels\" {",
      "    uuid = \"prioritylabels-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "    cloud_ref = \"/api/cloud/?tenant=admin&name=Default-Cloud\"",
      "  }"
    ]
  },
  "avi-data-avi_protocolparser": {
    "description": "Defines avi_protocolparser",
    "prefix": "tf-avi-data-avi_protocolparser",
    "body": [
      "data \"avi_protocolparser\" \"foo_protocolparser\" {",
      "    uuid = \"protocolparser-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_role": {
    "description": "Defines avi_role",
    "prefix": "tf-avi-data-avi_role",
    "body": [
      "data \"avi_role\" \"foo_role\" {",
      "    uuid = \"role-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_scheduler": {
    "description": "Defines avi_scheduler",
    "prefix": "tf-avi-data-avi_scheduler",
    "body": [
      "data \"avi_scheduler\" \"foo_scheduler\" {",
      "    uuid = \"scheduler-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_securitypolicy": {
    "description": "Defines avi_securitypolicy",
    "prefix": "tf-avi-data-avi_securitypolicy",
    "body": [
      "data \"avi_securitypolicy\" \"foo_securitypolicy\" {",
      "    uuid = \"securitypolicy-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_seproperties": {
    "description": "Defines avi_seproperties",
    "prefix": "tf-avi-data-avi_seproperties",
    "body": [
      "data \"avi_seproperties\" \"foo_seproperties\" {",
      "    uuid = \"seproperties-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_server": {
    "description": "Defines avi_server",
    "prefix": "tf-avi-data-avi_server",
    "body": [
      "data \"avi_server\" \"foo_Server\" {",
      "    uuid = \"server-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    pool_ref = \"/api/pool/pool-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    ip='10.0.0.3'",
      "  }"
    ]
  },
  "avi-data-avi_serverautoscalepolicy": {
    "description": "Defines avi_serverautoscalepolicy",
    "prefix": "tf-avi-data-avi_serverautoscalepolicy",
    "body": [
      "data \"avi_serverautoscalepolicy\" \"foo_serverautoscalepolicy\" {",
      "    uuid = \"serverautoscalepolicy-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_serviceengine": {
    "description": "Defines avi_serviceengine",
    "prefix": "tf-avi-data-avi_serviceengine",
    "body": [
      "data \"avi_serviceengine\" \"foo_serviceengine\" {",
      "    uuid = \"serviceengine-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "    cloud_ref = \"/api/cloud/?tenant=admin&name=Default-Cloud\"",
      "  }"
    ]
  },
  "avi-data-avi_serviceenginegroup": {
    "description": "Defines avi_serviceenginegroup",
    "prefix": "tf-avi-data-avi_serviceenginegroup",
    "body": [
      "data \"avi_serviceenginegroup\" \"foo_serviceenginegroup\" {",
      "    uuid = \"serviceenginegroup-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "    cloud_ref = \"/api/cloud/?tenant=admin&name=Default-Cloud\"",
      "  }"
    ]
  },
  "avi-data-avi_serviceenginepolicy": {
    "description": "Defines avi_serviceenginepolicy",
    "prefix": "tf-avi-data-avi_serviceenginepolicy",
    "body": [
      "data \"avi_serviceenginepolicy\" \"foo_serviceenginepolicy\" {",
      "    uuid = \"serviceenginepolicy-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_snmptrapprofile": {
    "description": "Defines avi_snmptrapprofile",
    "prefix": "tf-avi-data-avi_snmptrapprofile",
    "body": [
      "data \"avi_snmptrapprofile\" \"foo_snmptrapprofile\" {",
      "    uuid = \"snmptrapprofile-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_sslkeyandcertificate": {
    "description": "Defines avi_sslkeyandcertificate",
    "prefix": "tf-avi-data-avi_sslkeyandcertificate",
    "body": [
      "data \"avi_sslkeyandcertificate\" \"foo_sslkeyandcertificate\" {",
      "    uuid = \"sslkeyandcertificate-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_sslprofile": {
    "description": "Defines avi_sslprofile",
    "prefix": "tf-avi-data-avi_sslprofile",
    "body": [
      "data \"avi_sslprofile\" \"foo_sslprofile\" {",
      "    uuid = \"sslprofile-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_ssopolicy": {
    "description": "Defines avi_ssopolicy",
    "prefix": "tf-avi-data-avi_ssopolicy",
    "body": [
      "data \"avi_ssopolicy\" \"foo_ssopolicy\" {",
      "    uuid = \"ssopolicy-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_stringgroup": {
    "description": "Defines avi_stringgroup",
    "prefix": "tf-avi-data-avi_stringgroup",
    "body": [
      "data \"avi_stringgroup\" \"foo_stringgroup\" {",
      "    uuid = \"stringgroup-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_systemconfiguration": {
    "description": "Defines avi_systemconfiguration",
    "prefix": "tf-avi-data-avi_systemconfiguration",
    "body": [
      "data \"avi_systemconfiguration\" \"foo_systemconfiguration\" {",
      "    uuid = \"systemconfiguration-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_tenant": {
    "description": "Defines avi_tenant",
    "prefix": "tf-avi-data-avi_tenant",
    "body": [
      "data \"avi_tenant\" \"foo_tenant\" {",
      "    uuid = \"tenant-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_trafficcloneprofile": {
    "description": "Defines avi_trafficcloneprofile",
    "prefix": "tf-avi-data-avi_trafficcloneprofile",
    "body": [
      "data \"avi_trafficcloneprofile\" \"foo_trafficcloneprofile\" {",
      "    uuid = \"trafficcloneprofile-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "    cloud_ref = \"/api/cloud/?tenant=admin&name=Default-Cloud\"",
      "  }"
    ]
  },
  "avi-data-avi_useraccountprofile": {
    "description": "Defines avi_useraccountprofile",
    "prefix": "tf-avi-data-avi_useraccountprofile",
    "body": [
      "data \"avi_useraccountprofile\" \"foo_useraccountprofile\" {",
      "    uuid = \"useraccountprofile-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_virtualservice": {
    "description": "Defines avi_virtualservice",
    "prefix": "tf-avi-data-avi_virtualservice",
    "body": [
      "data \"avi_virtualservice\" \"foo_virtualservice\" {",
      "    uuid = \"virtualservice-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "    cloud_ref = \"/api/cloud/?tenant=admin&name=Default-Cloud\"",
      "  }"
    ]
  },
  "avi-data-avi_vrfcontext": {
    "description": "Defines avi_vrfcontext",
    "prefix": "tf-avi-data-avi_vrfcontext",
    "body": [
      "data \"avi_vrfcontext\" \"foo_vrfcontext\" {",
      "    uuid = \"vrfcontext-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "    cloud_ref = \"/api/cloud/?tenant=admin&name=Default-Cloud\"",
      "  }"
    ]
  },
  "avi-data-avi_vsdatascriptset": {
    "description": "Defines avi_vsdatascriptset",
    "prefix": "tf-avi-data-avi_vsdatascriptset",
    "body": [
      "data \"avi_vsdatascriptset\" \"foo_vsdatascriptset\" {",
      "    uuid = \"vsdatascriptset-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_vsvip": {
    "description": "Defines avi_vsvip",
    "prefix": "tf-avi-data-avi_vsvip",
    "body": [
      "data \"avi_vsvip\" \"foo_vsvip\" {",
      "    uuid = \"vsvip-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "    cloud_ref = \"/api/cloud/?tenant=admin&name=Default-Cloud\"",
      "  }"
    ]
  },
  "avi-data-avi_wafcrs": {
    "description": "Defines avi_wafcrs",
    "prefix": "tf-avi-data-avi_wafcrs",
    "body": [
      "data \"avi_wafcrs\" \"foo_wafcrs\" {",
      "    uuid = \"wafcrs-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_wafpolicy": {
    "description": "Defines avi_wafpolicy",
    "prefix": "tf-avi-data-avi_wafpolicy",
    "body": [
      "data \"avi_wafpolicy\" \"foo_wafpolicy\" {",
      "    uuid = \"wafpolicy-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_wafpolicypsmgroup": {
    "description": "Defines avi_wafpolicypsmgroup",
    "prefix": "tf-avi-data-avi_wafpolicypsmgroup",
    "body": [
      "data \"avi_wafpolicypsmgroup\" \"foo_wafpolicypsmgroup\" {",
      "    uuid = \"wafpolicypsmgroup-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_wafprofile": {
    "description": "Defines avi_wafprofile",
    "prefix": "tf-avi-data-avi_wafprofile",
    "body": [
      "data \"avi_wafprofile\" \"foo_wafprofile\" {",
      "    uuid = \"wafprofile-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-avi_webhook": {
    "description": "Defines avi_webhook",
    "prefix": "tf-avi-data-avi_webhook",
    "body": [
      "data \"avi_webhook\" \"foo_webhook\" {",
      "    uuid = \"webhook-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    name = \"foo\"",
      "}"
    ]
  },
  "avi-data-cloudinit_config": {
    "description": "Defines cloudinit_config",
    "prefix": "tf-avi-data-cloudinit_config",
    "body": [
      "# Render a part using a `template_file`",
      "data \"template_file\" \"script\" {",
      "  template = \"${file(\"${path.module}/init.tpl\")}\"",
      "",
      "  vars {",
      "    consul_address = \"${aws_instance.consul.private_ip}\"",
      "  }",
      "}",
      "",
      "# Render a multi-part cloudinit config making use of the part",
      "# above, and other source files",
      "data \"template_cloudinit_config\" \"config\" {",
      "  gzip          = true",
      "  base64_encode = true",
      "",
      "  # Setup hello world script to be called by the cloud-config",
      "  part {",
      "    filename     = \"init.cfg\"",
      "    content_type = \"text/part-handler\"",
      "    content      = \"${data.template_file.script.rendered}\"",
      "  }",
      "",
      "  part {",
      "    content_type = \"text/x-shellscript\"",
      "    content      = \"baz\"",
      "  }",
      "",
      "  part {",
      "    content_type = \"text/x-shellscript\"",
      "    content      = \"ffbaz\"",
      "  }",
      "}",
      "",
      "# Start an AWS instance with the cloudinit config as user data",
      "resource \"aws_instance\" \"web\" {",
      "  ami           = \"ami-d05e75b8\"",
      "  instance_type = \"t2.micro\"",
      "  user_data     = \"${data.template_cloudinit_config.config.rendered}\"",
      "}"
    ]
  },
  "avi-data-file": {
    "description": "Defines file",
    "prefix": "tf-avi-data-file",
    "body": [
      "data \"template_file\" \"init\" {",
      "  template = \"${file(\"${path.module}/init.tpl\")}\"",
      "",
      "  vars {",
      "    consul_address = \"${aws_instance.consul.private_ip}\"",
      "  }",
      "}"
    ]
  },
  "avi-resource-avi_actiongroupconfig": {
    "description": "Defines avi_actiongroupconfig",
    "prefix": "tf-avi-resource-avi_actiongroupconfig",
    "body": [
      "resource \"avi_actiongroupconfig\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_alertconfig": {
    "description": "Defines avi_alertconfig",
    "prefix": "tf-avi-resource-avi_alertconfig",
    "body": [
      "resource \"avi_alertconfig\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_alertemailconfig": {
    "description": "Defines avi_alertemailconfig",
    "prefix": "tf-avi-resource-avi_alertemailconfig",
    "body": [
      "resource \"avi_alertemailconfig\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_alertscriptconfig": {
    "description": "Defines avi_alertscriptconfig",
    "prefix": "tf-avi-resource-avi_alertscriptconfig",
    "body": [
      "resource \"avi_alertscriptconfig\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_alertsyslogconfig": {
    "description": "Defines avi_alertsyslogconfig",
    "prefix": "tf-avi-resource-avi_alertsyslogconfig",
    "body": [
      "resource \"avi_alertsyslogconfig\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_analyticsprofile": {
    "description": "Defines avi_analyticsprofile",
    "prefix": "tf-avi-resource-avi_analyticsprofile",
    "body": [
      "resource \"avi_analyticsprofile\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_applicationpersistenceprofile": {
    "description": "Defines avi_applicationpersistenceprofile",
    "prefix": "tf-avi-resource-avi_applicationpersistenceprofile",
    "body": [
      "resource \"avi_applicationpersistenceprofile\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_applicationprofile": {
    "description": "Defines avi_applicationprofile",
    "prefix": "tf-avi-resource-avi_applicationprofile",
    "body": [
      "resource \"avi_applicationprofile\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_authprofile": {
    "description": "Defines avi_authprofile",
    "prefix": "tf-avi-resource-avi_authprofile",
    "body": [
      "resource \"avi_authprofile\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_autoscalelaunchconfig": {
    "description": "Defines avi_autoscalelaunchconfig",
    "prefix": "tf-avi-resource-avi_autoscalelaunchconfig",
    "body": [
      "resource \"avi_autoscalelaunchconfig\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_backup": {
    "description": "Defines avi_backup",
    "prefix": "tf-avi-resource-avi_backup",
    "body": [
      "resource \"avi_backup\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_backupconfiguration": {
    "description": "Defines avi_backupconfiguration",
    "prefix": "tf-avi-resource-avi_backupconfiguration",
    "body": [
      "resource \"avi_backupconfiguration\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_certificatemanagementprofile": {
    "description": "Defines avi_certificatemanagementprofile",
    "prefix": "tf-avi-resource-avi_certificatemanagementprofile",
    "body": [
      "resource \"avi_certificatemanagementprofile\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_cloud": {
    "description": "Defines avi_cloud",
    "prefix": "tf-avi-resource-avi_cloud",
    "body": [
      "resource \"avi_cloud\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_cloudconnectoruser": {
    "description": "Defines avi_cloudconnectoruser",
    "prefix": "tf-avi-resource-avi_cloudconnectoruser",
    "body": [
      "resource \"avi_cloudconnectoruser\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_cloudproperties": {
    "description": "Defines avi_cloudproperties",
    "prefix": "tf-avi-resource-avi_cloudproperties",
    "body": [
      "resource \"avi_cloudproperties\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_cluster": {
    "description": "Defines avi_cluster",
    "prefix": "tf-avi-resource-avi_cluster",
    "body": [
      "resource \"avi_cluster\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_clusterclouddetails": {
    "description": "Defines avi_clusterclouddetails",
    "prefix": "tf-avi-resource-avi_clusterclouddetails",
    "body": [
      "resource \"avi_clusterclouddetails\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_controllerproperties": {
    "description": "Defines avi_controllerproperties",
    "prefix": "tf-avi-resource-avi_controllerproperties",
    "body": [
      "resource \"avi_controllerproperties\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_controllersite": {
    "description": "Defines avi_controllersite",
    "prefix": "tf-avi-resource-avi_controllersite",
    "body": [
      "resource \"avi_controllersite\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_customipamdnsprofile": {
    "description": "Defines avi_customipamdnsprofile",
    "prefix": "tf-avi-resource-avi_customipamdnsprofile",
    "body": [
      "resource \"avi_customipamdnsprofile\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_dnspolicy": {
    "description": "Defines avi_dnspolicy",
    "prefix": "tf-avi-resource-avi_dnspolicy",
    "body": [
      "resource \"avi_dnspolicy\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_errorpagebody": {
    "description": "Defines avi_errorpagebody",
    "prefix": "tf-avi-resource-avi_errorpagebody",
    "body": [
      "resource \"avi_errorpagebody\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_errorpageprofile": {
    "description": "Defines avi_errorpageprofile",
    "prefix": "tf-avi-resource-avi_errorpageprofile",
    "body": [
      "resource \"avi_errorpageprofile\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_fileservice": {
    "description": "Defines avi_fileservice",
    "prefix": "tf-avi-resource-avi_fileservice",
    "body": [
      "resource \"avi_fileservice\" \"foo\" {",
      "    uri = \"/uploads\"",
      "    local_file = \"/file/path\"",
      "    upload = True",
      "}"
    ]
  },
  "avi-resource-avi_gslb": {
    "description": "Defines avi_gslb",
    "prefix": "tf-avi-resource-avi_gslb",
    "body": [
      "resource \"avi_gslb\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_gslbgeodbprofile": {
    "description": "Defines avi_gslbgeodbprofile",
    "prefix": "tf-avi-resource-avi_gslbgeodbprofile",
    "body": [
      "resource \"avi_gslbgeodbprofile\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_gslbservice": {
    "description": "Defines avi_gslbservice",
    "prefix": "tf-avi-resource-avi_gslbservice",
    "body": [
      "resource \"avi_gslbservice\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_hardwaresecuritymodulegroup": {
    "description": "Defines avi_hardwaresecuritymodulegroup",
    "prefix": "tf-avi-resource-avi_hardwaresecuritymodulegroup",
    "body": [
      "resource \"avi_hardwaresecuritymodulegroup\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_healthmonitor": {
    "description": "Defines avi_healthmonitor",
    "prefix": "tf-avi-resource-avi_healthmonitor",
    "body": [
      "resource \"avi_healthmonitor\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_httppolicyset": {
    "description": "Defines avi_httppolicyset",
    "prefix": "tf-avi-resource-avi_httppolicyset",
    "body": [
      "resource \"avi_httppolicyset\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_ipaddrgroup": {
    "description": "Defines avi_ipaddrgroup",
    "prefix": "tf-avi-resource-avi_ipaddrgroup",
    "body": [
      "resource \"avi_ipaddrgroup\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_ipamdnsproviderprofile": {
    "description": "Defines avi_ipamdnsproviderprofile",
    "prefix": "tf-avi-resource-avi_ipamdnsproviderprofile",
    "body": [
      "resource \"avi_ipamdnsproviderprofile\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_l4policyset": {
    "description": "Defines avi_l4policyset",
    "prefix": "tf-avi-resource-avi_l4policyset",
    "body": [
      "resource \"avi_l4policyset\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_microservicegroup": {
    "description": "Defines avi_microservicegroup",
    "prefix": "tf-avi-resource-avi_microservicegroup",
    "body": [
      "resource \"avi_microservicegroup\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_natpolicy": {
    "description": "Defines avi_natpolicy",
    "prefix": "tf-avi-resource-avi_natpolicy",
    "body": [
      "resource \"avi_natpolicy\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_network": {
    "description": "Defines avi_network",
    "prefix": "tf-avi-resource-avi_network",
    "body": [
      "resource \"avi_network\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_networkprofile": {
    "description": "Defines avi_networkprofile",
    "prefix": "tf-avi-resource-avi_networkprofile",
    "body": [
      "resource \"avi_networkprofile\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_networksecuritypolicy": {
    "description": "Defines avi_networksecuritypolicy",
    "prefix": "tf-avi-resource-avi_networksecuritypolicy",
    "body": [
      "resource \"avi_networksecuritypolicy\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_networkservice": {
    "description": "Defines avi_networkservice",
    "prefix": "tf-avi-resource-avi_networkservice",
    "body": [
      "resource \"avi_networkservice\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_pingaccessagent": {
    "description": "Defines avi_pingaccessagent",
    "prefix": "tf-avi-resource-avi_pingaccessagent",
    "body": [
      "resource \"avi_pingaccessagent\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_pkiprofile": {
    "description": "Defines avi_pkiprofile",
    "prefix": "tf-avi-resource-avi_pkiprofile",
    "body": [
      "resource \"avi_pkiprofile\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_pool": {
    "description": "Defines avi_pool",
    "prefix": "tf-avi-resource-avi_pool",
    "body": [
      "resource \"Pool\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant = \"admin\"",
      "}"
    ]
  },
  "avi-resource-avi_poolgroup": {
    "description": "Defines avi_poolgroup",
    "prefix": "tf-avi-resource-avi_poolgroup",
    "body": [
      "resource \"avi_poolgroup\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_poolgroupdeploymentpolicy": {
    "description": "Defines avi_poolgroupdeploymentpolicy",
    "prefix": "tf-avi-resource-avi_poolgroupdeploymentpolicy",
    "body": [
      "resource \"avi_poolgroupdeploymentpolicy\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_prioritylabels": {
    "description": "Defines avi_prioritylabels",
    "prefix": "tf-avi-resource-avi_prioritylabels",
    "body": [
      "resource \"avi_prioritylabels\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_protocolparser": {
    "description": "Defines avi_protocolparser",
    "prefix": "tf-avi-resource-avi_protocolparser",
    "body": [
      "resource \"avi_protocolparser\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_role": {
    "description": "Defines avi_role",
    "prefix": "tf-avi-resource-avi_role",
    "body": [
      "resource \"avi_role\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_scheduler": {
    "description": "Defines avi_scheduler",
    "prefix": "tf-avi-resource-avi_scheduler",
    "body": [
      "resource \"avi_scheduler\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_securitypolicy": {
    "description": "Defines avi_securitypolicy",
    "prefix": "tf-avi-resource-avi_securitypolicy",
    "body": [
      "resource \"avi_securitypolicy\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_seproperties": {
    "description": "Defines avi_seproperties",
    "prefix": "tf-avi-resource-avi_seproperties",
    "body": [
      "resource \"avi_seproperties\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_server": {
    "description": "Defines avi_server",
    "prefix": "tf-avi-resource-avi_server",
    "body": [
      "resource \"avi_server\" \"foo\" {",
      "    pool_ref = \"/api/pool/Pool-f9cf6b3e-a411-436f-95e2-2982ba2b217b\"",
      "    ip = \"10.0.0.3\"",
      "}"
    ]
  },
  "avi-resource-avi_serverautoscalepolicy": {
    "description": "Defines avi_serverautoscalepolicy",
    "prefix": "tf-avi-resource-avi_serverautoscalepolicy",
    "body": [
      "resource \"avi_serverautoscalepolicy\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_serviceengine": {
    "description": "Defines avi_serviceengine",
    "prefix": "tf-avi-resource-avi_serviceengine",
    "body": [
      "resource \"avi_serviceengine\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_serviceenginegroup": {
    "description": "Defines avi_serviceenginegroup",
    "prefix": "tf-avi-resource-avi_serviceenginegroup",
    "body": [
      "resource \"avi_serviceenginegroup\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_serviceenginepolicy": {
    "description": "Defines avi_serviceenginepolicy",
    "prefix": "tf-avi-resource-avi_serviceenginepolicy",
    "body": [
      "resource \"avi_serviceenginepolicy\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_snmptrapprofile": {
    "description": "Defines avi_snmptrapprofile",
    "prefix": "tf-avi-resource-avi_snmptrapprofile",
    "body": [
      "resource \"avi_snmptrapprofile\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_sslkeyandcertificate": {
    "description": "Defines avi_sslkeyandcertificate",
    "prefix": "tf-avi-resource-avi_sslkeyandcertificate",
    "body": [
      "resource \"avi_sslkeyandcertificate\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_sslprofile": {
    "description": "Defines avi_sslprofile",
    "prefix": "tf-avi-resource-avi_sslprofile",
    "body": [
      "resource \"avi_sslprofile\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_ssopolicy": {
    "description": "Defines avi_ssopolicy",
    "prefix": "tf-avi-resource-avi_ssopolicy",
    "body": [
      "resource \"avi_ssopolicy\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_stringgroup": {
    "description": "Defines avi_stringgroup",
    "prefix": "tf-avi-resource-avi_stringgroup",
    "body": [
      "resource \"avi_stringgroup\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_systemconfiguration": {
    "description": "Defines avi_systemconfiguration",
    "prefix": "tf-avi-resource-avi_systemconfiguration",
    "body": [
      "resource \"avi_systemconfiguration\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_tenant": {
    "description": "Defines avi_tenant",
    "prefix": "tf-avi-resource-avi_tenant",
    "body": [
      "resource \"avi_tenant\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_trafficcloneprofile": {
    "description": "Defines avi_trafficcloneprofile",
    "prefix": "tf-avi-resource-avi_trafficcloneprofile",
    "body": [
      "resource \"avi_trafficcloneprofile\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_useraccountprofile": {
    "description": "Defines avi_useraccountprofile",
    "prefix": "tf-avi-resource-avi_useraccountprofile",
    "body": [
      "resource \"avi_useraccountprofile\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_virtualservice": {
    "description": "Defines avi_virtualservice",
    "prefix": "tf-avi-resource-avi_virtualservice",
    "body": [
      "resource \"avi_virtualservice\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_vrfcontext": {
    "description": "Defines avi_vrfcontext",
    "prefix": "tf-avi-resource-avi_vrfcontext",
    "body": [
      "resource \"avi_vrfcontext\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_vsdatascriptset": {
    "description": "Defines avi_vsdatascriptset",
    "prefix": "tf-avi-resource-avi_vsdatascriptset",
    "body": [
      "resource \"avi_vsdatascriptset\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_vsvip": {
    "description": "Defines avi_vsvip",
    "prefix": "tf-avi-resource-avi_vsvip",
    "body": [
      "resource \"avi_vsvip\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_wafcrs": {
    "description": "Defines avi_wafcrs",
    "prefix": "tf-avi-resource-avi_wafcrs",
    "body": [
      "resource \"avi_wafcrs\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_wafpolicy": {
    "description": "Defines avi_wafpolicy",
    "prefix": "tf-avi-resource-avi_wafpolicy",
    "body": [
      "resource \"avi_wafpolicy\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_wafpolicypsmgroup": {
    "description": "Defines avi_wafpolicypsmgroup",
    "prefix": "tf-avi-resource-avi_wafpolicypsmgroup",
    "body": [
      "resource \"avi_wafpolicypsmgroup\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_wafprofile": {
    "description": "Defines avi_wafprofile",
    "prefix": "tf-avi-resource-avi_wafprofile",
    "body": [
      "resource \"avi_wafprofile\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-avi_webhook": {
    "description": "Defines avi_webhook",
    "prefix": "tf-avi-resource-avi_webhook",
    "body": [
      "resource \"avi_webhook\" \"foo\" {",
      "    name = \"terraform-example-foo\"",
      "    tenant_ref = \"/api/tenant/?name=admin\"",
      "}"
    ]
  },
  "avi-resource-dir": {
    "description": "Defines dir",
    "prefix": "tf-avi-resource-dir",
    "body": [
      "resource \"template_dir\" \"config\" {",
      "  source_dir      = \"${path.module}/instance_config_templates\"",
      "  destination_dir = \"${path.cwd}/instance_config\"",
      "  ",
      "  vars {",
      "    consul_addr = \"${var.consul_addr}\"",
      "  }",
      "}",
      "",
      "resource \"aws_instance\" \"server\" {",
      "  ami           = \"${var.server_ami}\"",
      "  instance_type = \"t2.micro\"",
      "",
      "  connection {",
      "    # ...connection configuration...",
      "  }",
      "",
      "  provisioner \"file\" {",
      "    # Referencing the template_dir resource ensures that it will be",
      "    # created or updated before this aws_instance resource is provisioned.",
      "    source      = \"${template_dir.config.destination_dir}\"",
      "    destination = \"/etc/myapp\"",
      "  }",
      "}",
      "",
      "variable \"consul_addr\" {}",
      "",
      "variable \"server_ami\" {}"
    ]
  },
  "aws-data-acm_certificate": {
    "description": "Defines acm_certificate",
    "prefix": "tf-aws-data-acm_certificate",
    "body": [
      "# Find a certificate that is issued",
      "data \"aws_acm_certificate\" \"example\" {",
      "  domain   = \"tf.example.com\"",
      "  statuses = [\"ISSUED\"]",
      "}",
      "",
      "# Find a certificate issued by (not imported into) ACM",
      "data \"aws_acm_certificate\" \"example\" {",
      "  domain      = \"tf.example.com\"",
      "  types       = [\"AMAZON_ISSUED\"]",
      "  most_recent = true",
      "}",
      "",
      "# Find a RSA 4096 bit certificate",
      "data \"aws_acm_certificate\" \"example\" {",
      "  domain    = \"tf.example.com\"",
      "  key_types = [\"RSA_4096\"]",
      "}"
    ]
  },
  "aws-data-acmpca_certificate_authority": {
    "description": "Defines acmpca_certificate_authority",
    "prefix": "tf-aws-data-acmpca_certificate_authority",
    "body": [
      "data \"aws_acmpca_certificate_authority\" \"example\" {",
      "  arn = \"arn:aws:acm-pca:us-east-1:123456789012:certificate-authority/12345678-1234-1234-1234-123456789012\"",
      "}"
    ]
  },
  "aws-data-ami": {
    "description": "Defines ami",
    "prefix": "tf-aws-data-ami",
    "body": [
      "data \"aws_ami\" \"example\" {",
      "  executable_users = [\"self\"]",
      "  most_recent      = true",
      "  name_regex       = \"^myami-\\\\d{3}\"",
      "  owners           = [\"self\"]",
      "",
      "  filter {",
      "    name   = \"name\"",
      "    values = [\"myami-*\"]",
      "  }",
      "",
      "  filter {",
      "    name   = \"root-device-type\"",
      "    values = [\"ebs\"]",
      "  }",
      "",
      "  filter {",
      "    name   = \"virtualization-type\"",
      "    values = [\"hvm\"]",
      "  }",
      "}"
    ]
  },
  "aws-data-ami_ids": {
    "description": "Defines ami_ids",
    "prefix": "tf-aws-data-ami_ids",
    "body": [
      "data \"aws_ami_ids\" \"ubuntu\" {",
      "  owners = [\"099720109477\"]",
      "",
      "  filter {",
      "    name   = \"name\"",
      "    values = [\"ubuntu/images/ubuntu-*-*-amd64-server-*\"]",
      "  }",
      "}"
    ]
  },
  "aws-data-api_gateway_api_key": {
    "description": "Defines api_gateway_api_key",
    "prefix": "tf-aws-data-api_gateway_api_key",
    "body": [
      "data \"aws_api_gateway_api_key\" \"my_api_key\" {",
      "  id = \"ru3mpjgse6\"",
      "}"
    ]
  },
  "aws-data-api_gateway_resource": {
    "description": "Defines api_gateway_resource",
    "prefix": "tf-aws-data-api_gateway_resource",
    "body": [
      "data \"aws_api_gateway_rest_api\" \"my_rest_api\" {",
      "  name = \"my-rest-api\"",
      "}",
      "",
      "data \"aws_api_gateway_resource\" \"my_resource\" {",
      "  rest_api_id = \"${data.aws_api_gateway_rest_api.my_rest_api.id}\"",
      "  path        = \"/endpoint/path\"",
      "}"
    ]
  },
  "aws-data-api_gateway_rest_api": {
    "description": "Defines api_gateway_rest_api",
    "prefix": "tf-aws-data-api_gateway_rest_api",
    "body": [
      "data \"aws_api_gateway_rest_api\" \"my_rest_api\" {",
      "  name = \"my-rest-api\"",
      "}"
    ]
  },
  "aws-data-api_gateway_vpc_link": {
    "description": "Defines api_gateway_vpc_link",
    "prefix": "tf-aws-data-api_gateway_vpc_link",
    "body": [
      "data \"aws_api_gateway_vpc_link\" \"my_api_gateway_vpc_link\" {",
      "  name = \"my-vpc-link\"",
      "}"
    ]
  },
  "aws-data-arn": {
    "description": "Defines arn",
    "prefix": "tf-aws-data-arn",
    "body": [
      "data \"aws_arn\" \"db_instance\" {",
      "  arn = \"arn:aws:rds:eu-west-1:123456789012:db:mysql-db\"",
      "}"
    ]
  },
  "aws-data-autoscaling_group": {
    "description": "Defines autoscaling_group",
    "prefix": "tf-aws-data-autoscaling_group",
    "body": [
      "data \"aws_autoscaling_group\" \"foo\" {",
      "  name = \"foo\"",
      "}"
    ]
  },
  "aws-data-autoscaling_groups": {
    "description": "Defines autoscaling_groups",
    "prefix": "tf-aws-data-autoscaling_groups",
    "body": [
      "data \"aws_autoscaling_groups\" \"groups\" {",
      "  filter {",
      "    name   = \"key\"",
      "    values = [\"Team\"]",
      "  }",
      "",
      "  filter {",
      "    name   = \"value\"",
      "    values = [\"Pets\"]",
      "  }",
      "}",
      "",
      "resource \"aws_autoscaling_notification\" \"slack_notifications\" {",
      "  group_names = [\"${data.aws_autoscaling_groups.groups.names}\"]",
      "",
      "  notifications = [",
      "    \"autoscaling:EC2_INSTANCE_LAUNCH\",",
      "    \"autoscaling:EC2_INSTANCE_TERMINATE\",",
      "    \"autoscaling:EC2_INSTANCE_LAUNCH_ERROR\",",
      "    \"autoscaling:EC2_INSTANCE_TERMINATE_ERROR\",",
      "  ]",
      "",
      "  topic_arn = \"TOPIC ARN\"",
      "}"
    ]
  },
  "aws-data-availability_zone": {
    "description": "Defines availability_zone",
    "prefix": "tf-aws-data-availability_zone",
    "body": [
      "variable \"region_number\" {",
      "  # Arbitrary mapping of region name to number to use in",
      "  # a VPC's CIDR prefix.",
      "  default = {",
      "    us-east-1      = 1",
      "    us-west-1      = 2",
      "    us-west-2      = 3",
      "    eu-central-1   = 4",
      "    ap-northeast-1 = 5",
      "  }",
      "}",
      "",
      "variable \"az_number\" {",
      "  # Assign a number to each AZ letter used in our configuration",
      "  default = {",
      "    a = 1",
      "    b = 2",
      "    c = 3",
      "    d = 4",
      "    e = 5",
      "    f = 6",
      "  }",
      "}",
      "",
      "# Retrieve the AZ where we want to create network resources",
      "# This must be in the region selected on the AWS provider.",
      "data \"aws_availability_zone\" \"example\" {",
      "  name = \"eu-central-1a\"",
      "}",
      "",
      "# Create a VPC for the region associated with the AZ",
      "resource \"aws_vpc\" \"example\" {",
      "  cidr_block = \"${cidrsubnet(\"10.0.0.0/8\", 4, var.region_number[data.aws_availability_zone.example.region])}\"",
      "}",
      "",
      "# Create a subnet for the AZ within the regional VPC",
      "resource \"aws_subnet\" \"example\" {",
      "  vpc_id     = \"${aws_vpc.example.id}\"",
      "  cidr_block = \"${cidrsubnet(aws_vpc.example.cidr_block, 4, var.az_number[data.aws_availability_zone.example.name_suffix])}\"",
      "}"
    ]
  },
  "aws-data-availability_zones": {
    "description": "Defines availability_zones",
    "prefix": "tf-aws-data-availability_zones",
    "body": [
      "# Declare the data source",
      "data \"aws_availability_zones\" \"available\" {",
      "  state = \"available\"",
      "}",
      "",
      "# e.g. Create subnets in the first two available availability zones",
      "",
      "resource \"aws_subnet\" \"primary\" {",
      "  availability_zone = \"${data.aws_availability_zones.available.names[0]}\"",
      "",
      "  # ...",
      "}",
      "",
      "resource \"aws_subnet\" \"secondary\" {",
      "  availability_zone = \"${data.aws_availability_zones.available.names[1]}\"",
      "",
      "  # ...",
      "}"
    ]
  },
  "aws-data-batch_compute_environment": {
    "description": "Defines batch_compute_environment",
    "prefix": "tf-aws-data-batch_compute_environment",
    "body": [
      "data \"aws_batch_compute_environment\" \"batch-mongo\" {",
      "  compute_environment_name = \"batch-mongo-production\"",
      "}"
    ]
  },
  "aws-data-batch_job_queue": {
    "description": "Defines batch_job_queue",
    "prefix": "tf-aws-data-batch_job_queue",
    "body": [
      "data \"aws_batch_job_queue\" \"test-queue\" {",
      "  name = \"tf-test-batch-job-queue\"",
      "}"
    ]
  },
  "aws-data-billing_service_account": {
    "description": "Defines billing_service_account",
    "prefix": "tf-aws-data-billing_service_account",
    "body": [
      "data \"aws_billing_service_account\" \"main\" {}",
      "",
      "resource \"aws_s3_bucket\" \"billing_logs\" {",
      "  bucket = \"my-billing-tf-test-bucket\"",
      "  acl    = \"private\"",
      "",
      "  policy = <<POLICY",
      "{",
      "  \"Id\": \"Policy\",",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": [",
      "        \"s3:GetBucketAcl\", \"s3:GetBucketPolicy\"",
      "      ],",
      "      \"Effect\": \"Allow\",",
      "      \"Resource\": \"arn:aws:s3:::my-billing-tf-test-bucket\",",
      "      \"Principal\": {",
      "        \"AWS\": [",
      "          \"${data.aws_billing_service_account.main.arn}\"",
      "        ]",
      "      }",
      "    },",
      "    {",
      "      \"Action\": [",
      "        \"s3:PutObject\"",
      "      ],",
      "      \"Effect\": \"Allow\",",
      "      \"Resource\": \"arn:aws:s3:::my-billing-tf-test-bucket/*\",",
      "      \"Principal\": {",
      "        \"AWS\": [",
      "          \"${data.aws_billing_service_account.main.arn}\"",
      "        ]",
      "      }",
      "    }",
      "  ]",
      "}",
      "POLICY",
      "}"
    ]
  },
  "aws-data-caller_identity": {
    "description": "Defines caller_identity",
    "prefix": "tf-aws-data-caller_identity",
    "body": [
      "data \"aws_caller_identity\" \"current\" {}",
      "",
      "output \"account_id\" {",
      "  value = \"${data.aws_caller_identity.current.account_id}\"",
      "}",
      "",
      "output \"caller_arn\" {",
      "  value = \"${data.aws_caller_identity.current.arn}\"",
      "}",
      "",
      "output \"caller_user\" {",
      "  value = \"${data.aws_caller_identity.current.user_id}\"",
      "}"
    ]
  },
  "aws-data-canonical_user_id": {
    "description": "Defines canonical_user_id",
    "prefix": "tf-aws-data-canonical_user_id",
    "body": [
      "data \"aws_canonical_user_id\" \"current\" {}",
      "",
      "output \"canonical_user_id\" {",
      "  value = \"${data.aws_canonical_user_id.current.id}\"",
      "}"
    ]
  },
  "aws-data-cloudformation_export": {
    "description": "Defines cloudformation_export",
    "prefix": "tf-aws-data-cloudformation_export",
    "body": [
      "data \"aws_cloudformation_export\" \"subnet_id\" {",
      "  name = \"mySubnetIdExportName\"",
      "}",
      "",
      "resource \"aws_instance\" \"web\" {",
      "  ami           = \"ami-abb07bcb\"",
      "  instance_type = \"t1.micro\"",
      "  subnet_id     = \"${data.aws_cloudformation_export.subnet_id.value}\"",
      "}"
    ]
  },
  "aws-data-cloudformation_stack": {
    "description": "Defines cloudformation_stack",
    "prefix": "tf-aws-data-cloudformation_stack",
    "body": [
      "data \"aws_cloudformation_stack\" \"network\" {",
      "  name = \"my-network-stack\"",
      "}",
      "",
      "resource \"aws_instance\" \"web\" {",
      "  ami           = \"ami-abb07bcb\"",
      "  instance_type = \"t1.micro\"",
      "  subnet_id     = \"${data.aws_cloudformation_stack.network.outputs[\"SubnetId\"]}\"",
      "",
      "  tags = {",
      "    Name = \"HelloWorld\"",
      "  }",
      "}"
    ]
  },
  "aws-data-cloudhsm_v2_cluster": {
    "description": "Defines cloudhsm_v2_cluster",
    "prefix": "tf-aws-data-cloudhsm_v2_cluster",
    "body": [
      "data \"aws_cloudhsm_v2_cluster\" \"cluster\" {",
      "  cluster_id = \"cluster-testclusterid\"",
      "}"
    ]
  },
  "aws-data-cloudtrail_service_account": {
    "description": "Defines cloudtrail_service_account",
    "prefix": "tf-aws-data-cloudtrail_service_account",
    "body": [
      "data \"aws_cloudtrail_service_account\" \"main\" {}",
      "",
      "resource \"aws_s3_bucket\" \"bucket\" {",
      "  bucket        = \"tf-cloudtrail-logging-test-bucket\"",
      "  force_destroy = true",
      "",
      "  policy = <<EOF",
      "{",
      "  \"Version\": \"2008-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Sid\": \"Put bucket policy needed for trails\",",
      "      \"Effect\": \"Allow\",",
      "      \"Principal\": {",
      "        \"AWS\": \"${data.aws_cloudtrail_service_account.main.arn}\"",
      "      },",
      "      \"Action\": \"s3:PutObject\",",
      "      \"Resource\": \"arn:aws:s3:::tf-cloudtrail-logging-test-bucket/*\"",
      "    },",
      "    {",
      "      \"Sid\": \"Get bucket policy needed for trails\",",
      "      \"Effect\": \"Allow\",",
      "      \"Principal\": {",
      "        \"AWS\": \"${data.aws_cloudtrail_service_account.main.arn}\"",
      "      },",
      "      \"Action\": \"s3:GetBucketAcl\",",
      "      \"Resource\": \"arn:aws:s3:::tf-cloudtrail-logging-test-bucket\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}"
    ]
  },
  "aws-data-cloudwatch_log_group": {
    "description": "Defines cloudwatch_log_group",
    "prefix": "tf-aws-data-cloudwatch_log_group",
    "body": [
      "data \"aws_cloudwatch_log_group\" \"example\" {",
      "  name = \"MyImportantLogs\"",
      "}"
    ]
  },
  "aws-data-codecommit_repository": {
    "description": "Defines codecommit_repository",
    "prefix": "tf-aws-data-codecommit_repository",
    "body": [
      "data \"aws_codecommit_repository\" \"test\" {",
      "  repository_name = \"MyTestRepository\"",
      "}"
    ]
  },
  "aws-data-cognito_user_pools": {
    "description": "Defines cognito_user_pools",
    "prefix": "tf-aws-data-cognito_user_pools",
    "body": [
      "data \"aws_api_gateway_rest_api\" \"selected\" {",
      "  name = \"${var.api_gateway_name}\"",
      "}",
      "",
      "data \"aws_cognito_user_pools\" \"selected\" {",
      "  name = \"${var.cognito_user_pool_name}\"",
      "}",
      "",
      "resource \"aws_api_gateway_authorizer\" \"cognito\" {",
      "  name          = \"cognito\"",
      "  type          = \"COGNITO_USER_POOLS\"",
      "  rest_api_id   = \"${data.aws_api_gateway_rest_api.selected.id}\"",
      "  provider_arns = [\"${data.aws_cognito_user_pools.selected.arns}\"]",
      "}"
    ]
  },
  "aws-data-cur_report_definition": {
    "description": "Defines cur_report_definition",
    "prefix": "tf-aws-data-cur_report_definition",
    "body": [
      "data \"aws_cur_report_definition\" \"report_definition\" {",
      "  report_name = \"example\"",
      "}"
    ]
  },
  "aws-data-customer_gateway": {
    "description": "Defines customer_gateway",
    "prefix": "tf-aws-data-customer_gateway",
    "body": [
      "data \"aws_customer_gateway\" \"foo\" {",
      "    filter {",
      "        name = \"tag:Name\"",
      "\tvalues = [\"foo-prod\"]",
      "    }",
      "}",
      "",
      "resource \"aws_vpn_gateway\" \"main\" {",
      "    vpc_id          = \"${aws_vpc.main.id}\"",
      "    amazon_side_asn = 7224",
      "}",
      "",
      "resource \"aws_vpn_connection\" \"transit\" {",
      "    vpn_gateway_id      = \"${aws_vpn_gateway.main.id}\"",
      "    customer_gateway_id = \"${data.aws_customer_gateway.foo.id}\"",
      "    type                = \"${data.aws_customer_gateway.foo.type}\"",
      "    static_routes_only  = false",
      "}"
    ]
  },
  "aws-data-db_cluster_snapshot": {
    "description": "Defines db_cluster_snapshot",
    "prefix": "tf-aws-data-db_cluster_snapshot",
    "body": [
      "data \"aws_db_cluster_snapshot\" \"development_final_snapshot\" {",
      "  db_cluster_identifier = \"development_cluster\"",
      "  most_recent           = true",
      "}",
      "",
      "# Use the last snapshot of the dev database before it was destroyed to create",
      "# a new dev database.",
      "resource \"aws_rds_cluster\" \"aurora\" {",
      "  cluster_identifier   = \"development_cluster\"",
      "  snapshot_identifier  = \"${data.aws_db_cluster_snapshot.development_final_snapshot.id}\"",
      "  db_subnet_group_name = \"my_db_subnet_group\"",
      "",
      "  lifecycle {",
      "    ignore_changes = [\"snapshot_identifier\"]",
      "  }",
      "}",
      "",
      "resource \"aws_rds_cluster_instance\" \"aurora\" {",
      "  cluster_identifier   = \"${aws_rds_cluster.aurora.id}\"",
      "  instance_class       = \"db.t2.small\"",
      "  db_subnet_group_name = \"my_db_subnet_group\"",
      "}"
    ]
  },
  "aws-data-db_event_categories": {
    "description": "Defines db_event_categories",
    "prefix": "tf-aws-data-db_event_categories",
    "body": [
      "data \"aws_db_event_categories\" \"example\" {}",
      "",
      "output \"example\" {",
      "  value = \"${data.aws_db_event_categories.example.event_categories}\"",
      "}"
    ]
  },
  "aws-data-db_instance": {
    "description": "Defines db_instance",
    "prefix": "tf-aws-data-db_instance",
    "body": [
      "data \"aws_db_instance\" \"database\" {",
      "  db_instance_identifier = \"my-test-database\"",
      "}"
    ]
  },
  "aws-data-db_snapshot": {
    "description": "Defines db_snapshot",
    "prefix": "tf-aws-data-db_snapshot",
    "body": [
      "resource \"aws_db_instance\" \"prod\" {",
      "  allocated_storage    = 10",
      "  engine               = \"mysql\"",
      "  engine_version       = \"5.6.17\"",
      "  instance_class       = \"db.t2.micro\"",
      "  name                 = \"mydb\"",
      "  username             = \"foo\"",
      "  password             = \"bar\"",
      "  db_subnet_group_name = \"my_database_subnet_group\"",
      "  parameter_group_name = \"default.mysql5.6\"",
      "}",
      "",
      "data \"aws_db_snapshot\" \"latest_prod_snapshot\" {",
      "  db_instance_identifier = \"${aws_db_instance.prod.id}\"",
      "  most_recent            = true",
      "}",
      "",
      "# Use the latest production snapshot to create a dev instance.",
      "resource \"aws_db_instance\" \"dev\" {",
      "  instance_class      = \"db.t2.micro\"",
      "  name                = \"mydbdev\"",
      "  snapshot_identifier = \"${data.aws_db_snapshot.latest_prod_snapshot.id}\"",
      "",
      "  lifecycle {",
      "    ignore_changes = [\"snapshot_identifier\"]",
      "  }",
      "}"
    ]
  },
  "aws-data-dx_gateway": {
    "description": "Defines dx_gateway",
    "prefix": "tf-aws-data-dx_gateway",
    "body": [
      "data \"aws_dx_gateway\" \"example\" {",
      "  name = \"example\"",
      "}"
    ]
  },
  "aws-data-dynamodb_table": {
    "description": "Defines dynamodb_table",
    "prefix": "tf-aws-data-dynamodb_table",
    "body": [
      "data \"aws_dynamodb_table\" \"tableName\" {",
      "  name = \"tableName\"",
      "}"
    ]
  },
  "aws-data-ebs_default_kms_key": {
    "description": "Defines ebs_default_kms_key",
    "prefix": "tf-aws-data-ebs_default_kms_key",
    "body": [
      "data \"aws_ebs_default_kms_key\" \"current\" { }",
      "",
      "resource \"aws_ebs_volume\" \"example\" {",
      "  availability_zone = \"us-west-2a\"",
      "  ",
      "  encrypted         = true",
      "  kms_key_id        = \"${data.aws_ebs_default_kms_key.current.key_id}\"",
      "",
      "}"
    ]
  },
  "aws-data-ebs_encryption_by_default": {
    "description": "Defines ebs_encryption_by_default",
    "prefix": "tf-aws-data-ebs_encryption_by_default",
    "body": [
      "data \"aws_ebs_encryption_by_default\" \"current\" { }"
    ]
  },
  "aws-data-ebs_snapshot": {
    "description": "Defines ebs_snapshot",
    "prefix": "tf-aws-data-ebs_snapshot",
    "body": [
      "data \"aws_ebs_snapshot\" \"ebs_volume\" {",
      "  most_recent = true",
      "  owners      = [\"self\"]",
      "",
      "  filter {",
      "    name   = \"volume-size\"",
      "    values = [\"40\"]",
      "  }",
      "",
      "  filter {",
      "    name   = \"tag:Name\"",
      "    values = [\"Example\"]",
      "  }",
      "}"
    ]
  },
  "aws-data-ebs_snapshot_ids": {
    "description": "Defines ebs_snapshot_ids",
    "prefix": "tf-aws-data-ebs_snapshot_ids",
    "body": [
      "data \"aws_ebs_snapshot_ids\" \"ebs_volumes\" {",
      "  owners = [\"self\"]",
      "",
      "  filter {",
      "    name   = \"volume-size\"",
      "    values = [\"40\"]",
      "  }",
      "",
      "  filter {",
      "    name   = \"tag:Name\"",
      "    values = [\"Example\"]",
      "  }",
      "}"
    ]
  },
  "aws-data-ebs_volume": {
    "description": "Defines ebs_volume",
    "prefix": "tf-aws-data-ebs_volume",
    "body": [
      "data \"aws_ebs_volume\" \"ebs_volume\" {",
      "  most_recent = true",
      "",
      "  filter {",
      "    name   = \"volume-type\"",
      "    values = [\"gp2\"]",
      "  }",
      "",
      "  filter {",
      "    name   = \"tag:Name\"",
      "    values = [\"Example\"]",
      "  }",
      "}"
    ]
  },
  "aws-data-ec2_transit_gateway": {
    "description": "Defines ec2_transit_gateway",
    "prefix": "tf-aws-data-ec2_transit_gateway",
    "body": [
      "data \"aws_ec2_transit_gateway\" \"example\" {",
      "  filter {",
      "    name   = \"options.amazon-side-asn\"",
      "    values = [\"64512\"]",
      "  }",
      "}"
    ]
  },
  "aws-data-ec2_transit_gateway_dx_gateway_attachment": {
    "description": "Defines ec2_transit_gateway_dx_gateway_attachment",
    "prefix": "tf-aws-data-ec2_transit_gateway_dx_gateway_attachment",
    "body": [
      "data \"aws_ec2_transit_gateway_dx_gateway_attachment\" \"example\" {",
      "  transit_gateway_id = \"${aws_ec2_transit_gateway.example.id}\"",
      "  dx_gateway_id      = \"${aws_dx_gateway.example.id}\"",
      "}"
    ]
  },
  "aws-data-ec2_transit_gateway_route_table": {
    "description": "Defines ec2_transit_gateway_route_table",
    "prefix": "tf-aws-data-ec2_transit_gateway_route_table",
    "body": [
      "data \"aws_ec2_transit_gateway_route_table\" \"example\" {",
      "  filter {",
      "    name   = \"default-association-route-table\"",
      "    values = [\"true\"]",
      "  }",
      "",
      "  filter {",
      "    name   = \"transit-gateway-id\"",
      "    values = [\"tgw-12345678\"]",
      "  }",
      "}"
    ]
  },
  "aws-data-ec2_transit_gateway_vpc_attachment": {
    "description": "Defines ec2_transit_gateway_vpc_attachment",
    "prefix": "tf-aws-data-ec2_transit_gateway_vpc_attachment",
    "body": [
      "data \"aws_ec2_transit_gateway_vpc_attachment\" \"example\" {",
      "  filter {",
      "    name   = \"vpc-id\"",
      "    values = [\"vpc-12345678\"]",
      "  }",
      "}"
    ]
  },
  "aws-data-ec2_transit_gateway_vpn_attachment": {
    "description": "Defines ec2_transit_gateway_vpn_attachment",
    "prefix": "tf-aws-data-ec2_transit_gateway_vpn_attachment",
    "body": [
      "data \"aws_ec2_transit_gateway_vpn_attachment\" \"example\" {",
      "  transit_gateway_id = \"${aws_ec2_transit_gateway.example.id}\"",
      "  vpn_connection_id  = \"${aws_vpn_connection.example.id}\"",
      "}"
    ]
  },
  "aws-data-ecr_image": {
    "description": "Defines ecr_image",
    "prefix": "tf-aws-data-ecr_image",
    "body": [
      "data \"aws_ecr_image\" \"service_image\" {",
      "  repository_name = \"my/service\"",
      "  image_tag       = \"latest\"",
      "}"
    ]
  },
  "aws-data-ecr_repository": {
    "description": "Defines ecr_repository",
    "prefix": "tf-aws-data-ecr_repository",
    "body": [
      "data \"aws_ecr_repository\" \"service\" {",
      "  name = \"ecr-repository\"",
      "}"
    ]
  },
  "aws-data-ecs_cluster": {
    "description": "Defines ecs_cluster",
    "prefix": "tf-aws-data-ecs_cluster",
    "body": [
      "data \"aws_ecs_cluster\" \"ecs-mongo\" {",
      "  cluster_name = \"ecs-mongo-production\"",
      "}"
    ]
  },
  "aws-data-ecs_container_definition": {
    "description": "Defines ecs_container_definition",
    "prefix": "tf-aws-data-ecs_container_definition",
    "body": [
      "data \"aws_ecs_container_definition\" \"ecs-mongo\" {",
      "  task_definition = \"${aws_ecs_task_definition.mongo.id}\"",
      "  container_name  = \"mongodb\"",
      "}"
    ]
  },
  "aws-data-ecs_service": {
    "description": "Defines ecs_service",
    "prefix": "tf-aws-data-ecs_service",
    "body": [
      "data \"aws_ecs_service\" \"example\" {",
      "  service_name = \"example\"",
      "  cluster_arn  = \"${data.aws_ecs_cluster.example.arn}\"",
      "}"
    ]
  },
  "aws-data-ecs_task_definition": {
    "description": "Defines ecs_task_definition",
    "prefix": "tf-aws-data-ecs_task_definition",
    "body": [
      "# Simply specify the family to find the latest ACTIVE revision in that family.",
      "data \"aws_ecs_task_definition\" \"mongo\" {",
      "  task_definition = \"${aws_ecs_task_definition.mongo.family}\"",
      "}",
      "",
      "resource \"aws_ecs_cluster\" \"foo\" {",
      "  name = \"foo\"",
      "}",
      "",
      "resource \"aws_ecs_task_definition\" \"mongo\" {",
      "  family = \"mongodb\"",
      "",
      "  container_definitions = <<DEFINITION",
      "[",
      "  {",
      "    \"cpu\": 128,",
      "    \"environment\": [{",
      "      \"name\": \"SECRET\",",
      "      \"value\": \"KEY\"",
      "    }],",
      "    \"essential\": true,",
      "    \"image\": \"mongo:latest\",",
      "    \"memory\": 128,",
      "    \"memoryReservation\": 64,",
      "    \"name\": \"mongodb\"",
      "  }",
      "]",
      "DEFINITION",
      "}",
      "",
      "resource \"aws_ecs_service\" \"mongo\" {",
      "  name          = \"mongo\"",
      "  cluster       = \"${aws_ecs_cluster.foo.id}\"",
      "  desired_count = 2",
      "",
      "  # Track the latest ACTIVE revision",
      "  task_definition = \"${aws_ecs_task_definition.mongo.family}:${max(\"${aws_ecs_task_definition.mongo.revision}\", \"${data.aws_ecs_task_definition.mongo.revision}\")}\"",
      "}"
    ]
  },
  "aws-data-efs_file_system": {
    "description": "Defines efs_file_system",
    "prefix": "tf-aws-data-efs_file_system",
    "body": [
      "variable \"file_system_id\" {",
      "  type    = \"string\"",
      "  default = \"\"",
      "}",
      "",
      "data \"aws_efs_file_system\" \"by_id\" {",
      "  file_system_id = \"${var.file_system_id}\"",
      "}"
    ]
  },
  "aws-data-efs_mount_target": {
    "description": "Defines efs_mount_target",
    "prefix": "tf-aws-data-efs_mount_target",
    "body": [
      "variable \"mount_target_id\" {",
      "  type    = \"string\"",
      "  default = \"\"",
      "}",
      "",
      "data \"aws_efs_mount_target\" \"by_id\" {",
      "  mount_target_id = \"${var.mount_target_id}\"",
      "}"
    ]
  },
  "aws-data-eip": {
    "description": "Defines eip",
    "prefix": "tf-aws-data-eip",
    "body": [
      "data \"aws_eip\" \"by_allocation_id\" {",
      "  id = \"eipalloc-12345678\"",
      "}"
    ]
  },
  "aws-data-eks_cluster": {
    "description": "Defines eks_cluster",
    "prefix": "tf-aws-data-eks_cluster",
    "body": [
      "data \"aws_eks_cluster\" \"example\" {",
      "  name = \"example\"",
      "}",
      "",
      "output \"endpoint\" {",
      "  value = \"${data.aws_eks_cluster.example.endpoint}\"",
      "}",
      "",
      "output \"kubeconfig-certificate-authority-data\" {",
      "  value = \"${data.aws_eks_cluster.example.certificate_authority.0.data}\"",
      "}"
    ]
  },
  "aws-data-eks_cluster_auth": {
    "description": "Defines eks_cluster_auth",
    "prefix": "tf-aws-data-eks_cluster_auth",
    "body": [
      "data \"aws_eks_cluster\" \"example\" {",
      "  name = \"example\"",
      "}",
      "",
      "data \"aws_eks_cluster_auth\" \"example\" {",
      "  name = \"example\"",
      "}",
      "",
      "provider \"kubernetes\" {",
      "  host                   = \"${data.aws_eks_cluster.example.endpoint}\"",
      "  cluster_ca_certificate = \"${base64decode(data.aws_eks_cluster.example.certificate_authority.0.data)}\"",
      "  token                  = \"${data.aws_eks_cluster_auth.example.token}\"",
      "  load_config_file       = false",
      "}"
    ]
  },
  "aws-data-elastic_beanstalk_application": {
    "description": "Defines elastic_beanstalk_application",
    "prefix": "tf-aws-data-elastic_beanstalk_application",
    "body": [
      "data \"aws_elastic_beanstalk_application\" \"example\" {",
      "  name = \"example\"",
      "}",
      "",
      "output \"arn\" {",
      "  value = \"${data.aws_elastic_beanstalk_application.example.arn}\"",
      "}",
      "",
      "output \"description\" {",
      "  value = \"${data.aws_elastic_beanstalk_application.example.description}\"",
      "}"
    ]
  },
  "aws-data-elastic_beanstalk_hosted_zone": {
    "description": "Defines elastic_beanstalk_hosted_zone",
    "prefix": "tf-aws-data-elastic_beanstalk_hosted_zone",
    "body": [
      "data \"aws_elastic_beanstalk_hosted_zone\" \"current\" {}"
    ]
  },
  "aws-data-elastic_beanstalk_solution_stack": {
    "description": "Defines elastic_beanstalk_solution_stack",
    "prefix": "tf-aws-data-elastic_beanstalk_solution_stack",
    "body": [
      "data \"aws_elastic_beanstalk_solution_stack\" \"multi_docker\" {",
      "  most_recent = true",
      "",
      "  name_regex = \"^64bit Amazon Linux (.*) Multi-container Docker (.*)$\"",
      "}"
    ]
  },
  "aws-data-elasticache_cluster": {
    "description": "Defines elasticache_cluster",
    "prefix": "tf-aws-data-elasticache_cluster",
    "body": [
      "data \"aws_elasticache_cluster\" \"my_cluster\" {",
      "  cluster_id = \"my-cluster-id\"",
      "}"
    ]
  },
  "aws-data-elasticache_replication_group": {
    "description": "Defines elasticache_replication_group",
    "prefix": "tf-aws-data-elasticache_replication_group",
    "body": [
      "data \"aws_elasticache_replication_group\" \"bar\" {",
      "  replication_group_id = \"example\"",
      "}"
    ]
  },
  "aws-data-elb": {
    "description": "Defines elb",
    "prefix": "tf-aws-data-elb",
    "body": [
      "variable \"lb_name\" {",
      "  type    = \"string\"",
      "  default = \"\"",
      "}",
      "",
      "data \"aws_elb\" \"test\" {",
      "  name = \"${var.lb_name}\"",
      "}"
    ]
  },
  "aws-data-elb_hosted_zone_id": {
    "description": "Defines elb_hosted_zone_id",
    "prefix": "tf-aws-data-elb_hosted_zone_id",
    "body": [
      "data \"aws_elb_hosted_zone_id\" \"main\" {}",
      "",
      "resource \"aws_route53_record\" \"www\" {",
      "  zone_id = \"${aws_route53_zone.primary.zone_id}\"",
      "  name    = \"example.com\"",
      "  type    = \"A\"",
      "",
      "  alias {",
      "    name                   = \"${aws_elb.main.dns_name}\"",
      "    zone_id                = \"${data.aws_elb_hosted_zone_id.main.id}\"",
      "    evaluate_target_health = true",
      "  }",
      "}"
    ]
  },
  "aws-data-elb_service_account": {
    "description": "Defines elb_service_account",
    "prefix": "tf-aws-data-elb_service_account",
    "body": [
      "data \"aws_elb_service_account\" \"main\" {}",
      "",
      "resource \"aws_s3_bucket\" \"elb_logs\" {",
      "  bucket = \"my-elb-tf-test-bucket\"",
      "  acl    = \"private\"",
      "",
      "  policy = <<POLICY",
      "{",
      "  \"Id\": \"Policy\",",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": [",
      "        \"s3:PutObject\"",
      "      ],",
      "      \"Effect\": \"Allow\",",
      "      \"Resource\": \"arn:aws:s3:::my-elb-tf-test-bucket/AWSLogs/*\",",
      "      \"Principal\": {",
      "        \"AWS\": [",
      "          \"${data.aws_elb_service_account.main.arn}\"",
      "        ]",
      "      }",
      "    }",
      "  ]",
      "}",
      "POLICY",
      "}",
      "",
      "resource \"aws_elb\" \"bar\" {",
      "  name               = \"my-foobar-terraform-elb\"",
      "  availability_zones = [\"us-west-2a\"]",
      "",
      "  access_logs {",
      "    bucket   = \"${aws_s3_bucket.elb_logs.bucket}\"",
      "    interval = 5",
      "  }",
      "",
      "  listener {",
      "    instance_port     = 8000",
      "    instance_protocol = \"http\"",
      "    lb_port           = 80",
      "    lb_protocol       = \"http\"",
      "  }",
      "}"
    ]
  },
  "aws-data-glue_script": {
    "description": "Defines glue_script",
    "prefix": "tf-aws-data-glue_script",
    "body": [
      "data \"aws_glue_script\" \"example\" {",
      "  language = \"PYTHON\"",
      "",
      "  dag_edge {",
      "    source = \"datasource0\"",
      "    target = \"applymapping1\"",
      "  }",
      "",
      "  dag_edge {",
      "    source = \"applymapping1\"",
      "    target = \"selectfields2\"",
      "  }",
      "",
      "  dag_edge {",
      "    source = \"selectfields2\"",
      "    target = \"resolvechoice3\"",
      "  }",
      "",
      "  dag_edge {",
      "    source = \"resolvechoice3\"",
      "    target = \"datasink4\"",
      "  }",
      "",
      "  dag_node {",
      "    id        = \"datasource0\"",
      "    node_type = \"DataSource\"",
      "",
      "    args {",
      "      name  = \"database\"",
      "      value = \"\\\"${aws_glue_catalog_database.source.name}\\\"\"",
      "    }",
      "",
      "    args {",
      "      name  = \"table_name\"",
      "      value = \"\\\"${aws_glue_catalog_table.source.name}\\\"\"",
      "    }",
      "  }",
      "",
      "  dag_node {",
      "    id        = \"applymapping1\"",
      "    node_type = \"ApplyMapping\"",
      "",
      "    args {",
      "      name  = \"mapping\"",
      "      value = \"[(\\\"column1\\\", \\\"string\\\", \\\"column1\\\", \\\"string\\\")]\"",
      "    }",
      "  }",
      "",
      "  dag_node {",
      "    id        = \"selectfields2\"",
      "    node_type = \"SelectFields\"",
      "",
      "    args {",
      "      name  = \"paths\"",
      "      value = \"[\\\"column1\\\"]\"",
      "    }",
      "  }",
      "",
      "  dag_node {",
      "    id        = \"resolvechoice3\"",
      "    node_type = \"ResolveChoice\"",
      "",
      "    args {",
      "      name  = \"choice\"",
      "      value = \"\\\"MATCH_CATALOG\\\"\"",
      "    }",
      "",
      "    args {",
      "      name  = \"database\"",
      "      value = \"\\\"${aws_glue_catalog_database.destination.name}\\\"\"",
      "    }",
      "",
      "    args {",
      "      name  = \"table_name\"",
      "      value = \"\\\"${aws_glue_catalog_table.destination.name}\\\"\"",
      "    }",
      "  }",
      "",
      "  dag_node {",
      "    id        = \"datasink4\"",
      "    node_type = \"DataSink\"",
      "",
      "    args {",
      "      name  = \"database\"",
      "      value = \"\\\"${aws_glue_catalog_database.destination.name}\\\"\"",
      "    }",
      "",
      "    args {",
      "      name  = \"table_name\"",
      "      value = \"\\\"${aws_glue_catalog_table.destination.name}\\\"\"",
      "    }",
      "  }",
      "}",
      "",
      "output \"python_script\" {",
      "  value = \"${data.aws_glue_script.example.python_script}\"",
      "}"
    ]
  },
  "aws-data-iam_account_alias": {
    "description": "Defines iam_account_alias",
    "prefix": "tf-aws-data-iam_account_alias",
    "body": [
      "data \"aws_iam_account_alias\" \"current\" {}",
      "",
      "output \"account_id\" {",
      "  value = \"${data.aws_iam_account_alias.current.account_alias}\"",
      "}"
    ]
  },
  "aws-data-iam_group": {
    "description": "Defines iam_group",
    "prefix": "tf-aws-data-iam_group",
    "body": [
      "data \"aws_iam_group\" \"example\" {",
      "  group_name = \"an_example_group_name\"",
      "}"
    ]
  },
  "aws-data-iam_instance_profile": {
    "description": "Defines iam_instance_profile",
    "prefix": "tf-aws-data-iam_instance_profile",
    "body": [
      "data \"aws_iam_instance_profile\" \"example\" {",
      "  name = \"an_example_instance_profile_name\"",
      "}"
    ]
  },
  "aws-data-iam_policy": {
    "description": "Defines iam_policy",
    "prefix": "tf-aws-data-iam_policy",
    "body": [
      "data \"aws_iam_policy\" \"example\" {",
      "  arn = \"arn:aws:iam::123456789012:policy/UsersManageOwnCredentials\"",
      "}"
    ]
  },
  "aws-data-iam_policy_document": {
    "description": "Defines iam_policy_document",
    "prefix": "tf-aws-data-iam_policy_document",
    "body": [
      "data \"aws_iam_policy_document\" \"example\" {",
      "  statement {",
      "    sid = \"1\"",
      "",
      "    actions = [",
      "      \"s3:ListAllMyBuckets\",",
      "      \"s3:GetBucketLocation\",",
      "    ]",
      "",
      "    resources = [",
      "      \"arn:aws:s3:::*\",",
      "    ]",
      "  }",
      "",
      "  statement {",
      "    actions = [",
      "      \"s3:ListBucket\",",
      "    ]",
      "",
      "    resources = [",
      "      \"arn:aws:s3:::${var.s3_bucket_name}\",",
      "    ]",
      "",
      "    condition {",
      "      test     = \"StringLike\"",
      "      variable = \"s3:prefix\"",
      "",
      "      values = [",
      "        \"\",",
      "        \"home/\",",
      "        \"home/&{aws:username}/\",",
      "      ]",
      "    }",
      "  }",
      "",
      "  statement {",
      "    actions = [",
      "      \"s3:*\",",
      "    ]",
      "",
      "    resources = [",
      "      \"arn:aws:s3:::${var.s3_bucket_name}/home/&{aws:username}\",",
      "      \"arn:aws:s3:::${var.s3_bucket_name}/home/&{aws:username}/*\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"aws_iam_policy\" \"example\" {",
      "  name   = \"example_policy\"",
      "  path   = \"/\"",
      "  policy = \"${data.aws_iam_policy_document.example.json}\"",
      "}"
    ]
  },
  "aws-data-iam_role": {
    "description": "Defines iam_role",
    "prefix": "tf-aws-data-iam_role",
    "body": [
      "data \"aws_iam_role\" \"example\" {",
      "  name = \"an_example_role_name\"",
      "}"
    ]
  },
  "aws-data-iam_server_certificate": {
    "description": "Defines iam_server_certificate",
    "prefix": "tf-aws-data-iam_server_certificate",
    "body": [
      "data \"aws_iam_server_certificate\" \"my-domain\" {",
      "  name_prefix = \"my-domain.org\"",
      "  latest      = true",
      "}",
      "",
      "resource \"aws_elb\" \"elb\" {",
      "  name = \"my-domain-elb\"",
      "",
      "  listener {",
      "    instance_port      = 8000",
      "    instance_protocol  = \"https\"",
      "    lb_port            = 443",
      "    lb_protocol        = \"https\"",
      "    ssl_certificate_id = \"${data.aws_iam_server_certificate.my-domain.arn}\"",
      "  }",
      "}"
    ]
  },
  "aws-data-iam_user": {
    "description": "Defines iam_user",
    "prefix": "tf-aws-data-iam_user",
    "body": [
      "data \"aws_iam_user\" \"example\" {",
      "  user_name = \"an_example_user_name\"",
      "}"
    ]
  },
  "aws-data-inspector_rules_packages": {
    "description": "Defines inspector_rules_packages",
    "prefix": "tf-aws-data-inspector_rules_packages",
    "body": [
      "# Declare the data source",
      "data \"aws_inspector_rules_packages\" \"rules\" {}",
      "",
      "# e.g. Use in aws_inspector_assessment_template",
      "resource \"aws_inspector_resource_group\" \"group\" {",
      "  tags = {",
      "    test = \"test\"",
      "  }",
      "}",
      "",
      "resource \"aws_inspector_assessment_target\" \"assessment\" {",
      "  name               = \"test\"",
      "  resource_group_arn = \"${aws_inspector_resource_group.group.arn}\"",
      "}",
      "",
      "resource \"aws_inspector_assessment_template\" \"assessment\" {",
      "  name       = \"Test\"",
      "  target_arn = \"${aws_inspector_assessment_target.assessment.arn}\"",
      "  duration   = \"60\"",
      "",
      "  rules_package_arns = [\"${data.aws_inspector_rules_packages.rules.arns}\"]",
      "}"
    ]
  },
  "aws-data-instance": {
    "description": "Defines instance",
    "prefix": "tf-aws-data-instance",
    "body": [
      "data \"aws_instance\" \"foo\" {",
      "  instance_id = \"i-instanceid\"",
      "",
      "  filter {",
      "    name   = \"image-id\"",
      "    values = [\"ami-xxxxxxxx\"]",
      "  }",
      "",
      "  filter {",
      "    name   = \"tag:Name\"",
      "    values = [\"instance-name-tag\"]",
      "  }",
      "}"
    ]
  },
  "aws-data-instances": {
    "description": "Defines instances",
    "prefix": "tf-aws-data-instances",
    "body": [
      "data \"aws_instances\" \"test\" {",
      "  instance_tags = {",
      "    Role = \"HardWorker\"",
      "  }",
      "",
      "  filter {",
      "    name   = \"instance.group-id\"",
      "    values = [\"sg-12345678\"]",
      "  }",
      "",
      "  instance_state_names = [\"running\", \"stopped\"]",
      "}",
      "",
      "resource \"aws_eip\" \"test\" {",
      "  count    = \"${length(data.aws_instances.test.ids)}\"",
      "  instance = \"${data.aws_instances.test.ids[count.index]}\"",
      "}"
    ]
  },
  "aws-data-internet_gateway": {
    "description": "Defines internet_gateway",
    "prefix": "tf-aws-data-internet_gateway",
    "body": [
      "variable \"vpc_id\" {}",
      "",
      "data \"aws_internet_gateway\" \"default\" {",
      "  filter {",
      "    name   = \"attachment.vpc-id\"",
      "    values = [\"${var.vpc_id}\"]",
      "  }",
      "}"
    ]
  },
  "aws-data-iot_endpoint": {
    "description": "Defines iot_endpoint",
    "prefix": "tf-aws-data-iot_endpoint",
    "body": [
      "data \"aws_iot_endpoint\" \"example\" {}",
      "",
      "resource \"kubernetes_pod\" \"agent\" {",
      "  metadata {",
      "    name = \"my-device\"",
      "  }",
      "",
      "  spec {",
      "    container {",
      "      image = \"gcr.io/my-project/image-name\"",
      "      name  = \"image-name\"",
      "",
      "      env = [",
      "        {",
      "          name  = \"IOT_ENDPOINT\"",
      "          value = \"${data.aws_iot_endpoint.example.endpoint_address}\"",
      "        },",
      "      ]",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-data-ip_ranges": {
    "description": "Defines ip_ranges",
    "prefix": "tf-aws-data-ip_ranges",
    "body": [
      "data \"aws_ip_ranges\" \"european_ec2\" {",
      "  regions  = [\"eu-west-1\", \"eu-central-1\"]",
      "  services = [\"ec2\"]",
      "}",
      "",
      "resource \"aws_security_group\" \"from_europe\" {",
      "  name = \"from_europe\"",
      "",
      "  ingress {",
      "    from_port        = \"443\"",
      "    to_port          = \"443\"",
      "    protocol         = \"tcp\"",
      "    cidr_blocks      = [\"${data.aws_ip_ranges.european_ec2.cidr_blocks}\"]",
      "    ipv6_cidr_blocks = [\"${data.aws_ip_ranges.european_ec2.ipv6_cidr_blocks}\"]",
      "  }",
      "",
      "  tags = {",
      "    CreateDate = \"${data.aws_ip_ranges.european_ec2.create_date}\"",
      "    SyncToken  = \"${data.aws_ip_ranges.european_ec2.sync_token}\"",
      "  }",
      "}"
    ]
  },
  "aws-data-kinesis_stream": {
    "description": "Defines kinesis_stream",
    "prefix": "tf-aws-data-kinesis_stream",
    "body": [
      "data \"aws_kinesis_stream\" \"stream\" {",
      "  name = \"stream-name\"",
      "}"
    ]
  },
  "aws-data-kms_alias": {
    "description": "Defines kms_alias",
    "prefix": "tf-aws-data-kms_alias",
    "body": [
      "data \"aws_kms_alias\" \"s3\" {",
      "  name = \"alias/aws/s3\"",
      "}"
    ]
  },
  "aws-data-kms_ciphertext": {
    "description": "Defines kms_ciphertext",
    "prefix": "tf-aws-data-kms_ciphertext",
    "body": [
      "resource \"aws_kms_key\" \"oauth_config\" {",
      "  description = \"oauth config\"",
      "  is_enabled  = true",
      "}",
      "",
      "data \"aws_kms_ciphertext\" \"oauth\" {",
      "  key_id = \"${aws_kms_key.oauth_config.key_id}\"",
      "",
      "  plaintext = <<EOF",
      "{",
      "  \"client_id\": \"e587dbae22222f55da22\",",
      "  \"client_secret\": \"8289575d00000ace55e1815ec13673955721b8a5\"",
      "}",
      "EOF",
      "}"
    ]
  },
  "aws-data-kms_key": {
    "description": "Defines kms_key",
    "prefix": "tf-aws-data-kms_key",
    "body": [
      "data \"aws_kms_key\" \"foo\" {",
      "  key_id = \"alias/my-key\"",
      "}",
      "",
      "data \"aws_kms_key\" \"foo\" {",
      "  key_id = \"1234abcd-12ab-34cd-56ef-1234567890ab\"",
      "}",
      "",
      "data \"aws_kms_key\" \"foo\" {",
      "  key_id = \"arn:aws:kms:us-east-1:111122223333:alias/my-key\"",
      "}",
      "",
      "data \"aws_kms_key\" \"foo\" {",
      "  key_id = \"arn:aws:kms:us-east-1:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab\"",
      "}"
    ]
  },
  "aws-data-kms_secret": {
    "description": "Defines kms_secret",
    "prefix": "tf-aws-data-kms_secret",
    "body": [
      "#XXX empty snippet",
      ""
    ]
  },
  "aws-data-kms_secrets": {
    "description": "Defines kms_secrets",
    "prefix": "tf-aws-data-kms_secrets",
    "body": [
      "$ echo -n 'master-password' > plaintext-password",
      "$ aws kms encrypt --key-id ab123456-c012-4567-890a-deadbeef123 --plaintext fileb://plaintext-password --encryption-context foo=bar --output text --query CiphertextBlob",
      "AQECAHgaPa0J8WadplGCqqVAr4HNvDaFSQ+NaiwIBhmm6qDSFwAAAGIwYAYJKoZIhvcNAQcGoFMwUQIBADBMBgkqhkiG9w0BBwEwHgYJYIZIAWUDBAEuMBEEDI+LoLdvYv8l41OhAAIBEIAfx49FFJCLeYrkfMfAw6XlnxP23MmDBdqP8dPp28OoAQ=="
    ]
  },
  "aws-data-lambda_function": {
    "description": "Defines lambda_function",
    "prefix": "tf-aws-data-lambda_function",
    "body": [
      "variable \"function_name\" {",
      "  type = \"string\"",
      "}",
      "",
      "data \"aws_lambda_function\" \"existing\" {",
      "  function_name = \"${var.function_name}\"",
      "}"
    ]
  },
  "aws-data-lambda_invocation": {
    "description": "Defines lambda_invocation",
    "prefix": "tf-aws-data-lambda_invocation",
    "body": [
      "data \"aws_lambda_invocation\" \"example\" {",
      "  function_name = \"${aws_lambda_function.lambda_function_test.function_name}\"",
      "",
      "  input = <<JSON",
      "{",
      "  \"key1\": \"value1\",",
      "  \"key2\": \"value2\"",
      "}",
      "JSON",
      "}",
      "",
      "output \"result\" {",
      "  description = \"String result of Lambda execution\"",
      "  value       = \"${data.aws_lambda_invocation.example.result}\"",
      "}",
      "",
      "# In Terraform 0.11 and earlier, the result_map attribute can be used",
      "# to convert a result JSON string to a map of string keys to string values.",
      "output \"result_entry_tf011\" {",
      "  value = \"${data.aws_lambda_invocation.example.result_map[\"key1\"]}\"",
      "}",
      "",
      "# In Terraform 0.12 and later, the jsondecode() function can be used",
      "# to convert a result JSON string to native Terraform types.",
      "output \"result_entry_tf012\" {",
      "  value = jsondecode(data.aws_lambda_invocation.example.result)[\"key1\"]",
      "}"
    ]
  },
  "aws-data-lambda_layer_version": {
    "description": "Defines lambda_layer_version",
    "prefix": "tf-aws-data-lambda_layer_version",
    "body": [
      "variable \"layer_name\" {",
      "  type = \"string\"",
      "}",
      "",
      "data \"aws_lambda_layer_version\" \"existing\" {",
      "  layer_name = \"${var.layer_name}\"",
      "}"
    ]
  },
  "aws-data-launch_configuration": {
    "description": "Defines launch_configuration",
    "prefix": "tf-aws-data-launch_configuration",
    "body": [
      "data \"aws_launch_configuration\" \"ubuntu\" {",
      "  name = \"test-launch-config\"",
      "}"
    ]
  },
  "aws-data-launch_template": {
    "description": "Defines launch_template",
    "prefix": "tf-aws-data-launch_template",
    "body": [
      "data \"aws_launch_template\" \"default\" {",
      "  name = \"my-launch-template\"",
      "}"
    ]
  },
  "aws-data-lb": {
    "description": "Defines lb",
    "prefix": "tf-aws-data-lb",
    "body": [
      "variable \"lb_arn\" {",
      "  type    = \"string\"",
      "  default = \"\"",
      "}",
      "",
      "variable \"lb_name\" {",
      "  type    = \"string\"",
      "  default = \"\"",
      "}",
      "",
      "data \"aws_lb\" \"test\" {",
      "  arn  = \"${var.lb_arn}\"",
      "  name = \"${var.lb_name}\"",
      "}"
    ]
  },
  "aws-data-lb_listener": {
    "description": "Defines lb_listener",
    "prefix": "tf-aws-data-lb_listener",
    "body": [
      "# get listener from listener arn",
      "",
      "variable \"listener_arn\" {",
      "  type = \"string\"",
      "}",
      "",
      "data \"aws_lb_listener\" \"listener\" {",
      "  arn = \"${var.listener_arn}\"",
      "}",
      "",
      "# get listener from load_balancer_arn and port",
      "",
      "data \"aws_lb\" \"selected\" {",
      "  name = \"default-public\"",
      "}",
      "",
      "data \"aws_lb_listener\" \"selected443\" {",
      "  load_balancer_arn = \"${data.aws_lb.selected.arn}\"",
      "  port              = 443",
      "}"
    ]
  },
  "aws-data-lb_target_group": {
    "description": "Defines lb_target_group",
    "prefix": "tf-aws-data-lb_target_group",
    "body": [
      "variable \"lb_tg_arn\" {",
      "  type    = \"string\"",
      "  default = \"\"",
      "}",
      "",
      "variable \"lb_tg_name\" {",
      "  type    = \"string\"",
      "  default = \"\"",
      "}",
      "",
      "data \"aws_lb_target_group\" \"test\" {",
      "  arn  = \"${var.lb_tg_arn}\"",
      "  name = \"${var.lb_tg_name}\"",
      "}"
    ]
  },
  "aws-data-mq_broker": {
    "description": "Defines mq_broker",
    "prefix": "tf-aws-data-mq_broker",
    "body": [
      "variable \"broker_id\" {",
      "  type    = \"string\"",
      "  default = \"\"",
      "}",
      "",
      "variable \"broker_name\" {",
      "  type    = \"string\"",
      "  default = \"\"",
      "}",
      "",
      "data \"aws_mq_broker\" \"by_id\" {",
      "  broker_id = \"${var.broker_id}\"",
      "}",
      "",
      "data \"aws_mq_broker\" \"by_name\" {",
      "  broker_name = \"${var.broker_name}\"",
      "}"
    ]
  },
  "aws-data-msk_cluster": {
    "description": "Defines msk_cluster",
    "prefix": "tf-aws-data-msk_cluster",
    "body": [
      "data \"aws_msk_cluster\" \"example\" {",
      "  cluster_name = \"example\"",
      "}"
    ]
  },
  "aws-data-msk_configuration": {
    "description": "Defines msk_configuration",
    "prefix": "tf-aws-data-msk_configuration",
    "body": [
      "data \"aws_msk_configuration\" \"example\" {",
      "  name = \"example\"",
      "}"
    ]
  },
  "aws-data-nat_gateway": {
    "description": "Defines nat_gateway",
    "prefix": "tf-aws-data-nat_gateway",
    "body": [
      "variable \"subnet_id\" {}",
      "",
      "data \"aws_nat_gateway\" \"default\" {",
      "  subnet_id = \"${aws_subnet.public.id}\"",
      "}"
    ]
  },
  "aws-data-network_acls": {
    "description": "Defines network_acls",
    "prefix": "tf-aws-data-network_acls",
    "body": [
      "data \"aws_network_acls\" \"example\" {",
      "  vpc_id = \"${var.vpc_id}\"",
      "}",
      "",
      "output \"example\" {",
      "  value = \"${data.aws_network_acls.example.ids}\"",
      "}"
    ]
  },
  "aws-data-network_interface": {
    "description": "Defines network_interface",
    "prefix": "tf-aws-data-network_interface",
    "body": [
      "data \"aws_network_interface\" \"bar\" {",
      "  id = \"eni-01234567\"",
      "}"
    ]
  },
  "aws-data-network_interfaces": {
    "description": "Defines network_interfaces",
    "prefix": "tf-aws-data-network_interfaces",
    "body": [
      "data \"aws_network_interfaces\" \"example\" {}",
      "",
      "output \"example\" {",
      "  value = \"${data.aws_network_interfaces.example.ids}\"",
      "}"
    ]
  },
  "aws-data-organizations_organization": {
    "description": "Defines organizations_organization",
    "prefix": "tf-aws-data-organizations_organization",
    "body": [
      "# Terraform 0.12 syntax",
      "data \"aws_organizations_organization\" \"example\" {}",
      "",
      "output \"account_ids\" {",
      "  value = data.aws_organizations_organization.example.accounts[*].id",
      "}"
    ]
  },
  "aws-data-partition": {
    "description": "Defines partition",
    "prefix": "tf-aws-data-partition",
    "body": [
      "data \"aws_partition\" \"current\" {}",
      "",
      "data \"aws_iam_policy_document\" \"s3_policy\" {",
      "  statement {",
      "    sid = \"1\"",
      "",
      "    actions = [",
      "      \"s3:ListBucket\",",
      "    ]",
      "",
      "    resources = [",
      "      \"arn:${data.aws_partition.current.partition}:s3:::my-bucket\",",
      "    ]",
      "  }",
      "}"
    ]
  },
  "aws-data-prefix_list": {
    "description": "Defines prefix_list",
    "prefix": "tf-aws-data-prefix_list",
    "body": [
      "resource \"aws_vpc_endpoint\" \"private_s3\" {",
      "  vpc_id       = \"${aws_vpc.foo.id}\"",
      "  service_name = \"com.amazonaws.us-west-2.s3\"",
      "}",
      "",
      "data \"aws_prefix_list\" \"private_s3\" {",
      "  prefix_list_id = \"${aws_vpc_endpoint.private_s3.prefix_list_id}\"",
      "}",
      "",
      "resource \"aws_network_acl\" \"bar\" {",
      "  vpc_id = \"${aws_vpc.foo.id}\"",
      "}",
      "",
      "resource \"aws_network_acl_rule\" \"private_s3\" {",
      "  network_acl_id = \"${aws_network_acl.bar.id}\"",
      "  rule_number    = 200",
      "  egress         = false",
      "  protocol       = \"tcp\"",
      "  rule_action    = \"allow\"",
      "  cidr_block     = \"${data.aws_prefix_list.private_s3.cidr_blocks[0]}\"",
      "  from_port      = 443",
      "  to_port        = 443",
      "}"
    ]
  },
  "aws-data-pricing_product": {
    "description": "Defines pricing_product",
    "prefix": "tf-aws-data-pricing_product",
    "body": [
      "data \"aws_pricing_product\" \"example\" {",
      "  service_code = \"AmazonEC2\"",
      "",
      "  filters {",
      "    field = \"instanceType\"",
      "    value = \"c5.xlarge\"",
      "  }",
      "",
      "  filters {",
      "    field = \"operatingSystem\"",
      "    value = \"Linux\"",
      "  }",
      "",
      "  filters {",
      "    field = \"location\"",
      "    value = \"US East (N. Virginia)\"",
      "  }",
      "",
      "  filters {",
      "    field = \"preInstalledSw\"",
      "    value = \"NA\"",
      "  }",
      "",
      "  filters {",
      "    field = \"licenseModel\"",
      "    value = \"No License required\"",
      "  }",
      "",
      "  filters {",
      "    field = \"tenancy\"",
      "    value = \"Shared\"",
      "  }",
      "}"
    ]
  },
  "aws-data-ram_resource_share": {
    "description": "Defines ram_resource_share",
    "prefix": "tf-aws-data-ram_resource_share",
    "body": [
      "data \"aws_ram_resource_share\" \"example\" {",
      "  name = \"example\"",
      "  resource_owner = \"SELF\"",
      "}"
    ]
  },
  "aws-data-rds_cluster": {
    "description": "Defines rds_cluster",
    "prefix": "tf-aws-data-rds_cluster",
    "body": [
      "data \"aws_rds_cluster\" \"clusterName\" {",
      "  cluster_identifier = \"clusterName\"",
      "}"
    ]
  },
  "aws-data-redshift_cluster": {
    "description": "Defines redshift_cluster",
    "prefix": "tf-aws-data-redshift_cluster",
    "body": [
      "data \"aws_redshift_cluster\" \"test_cluster\" {",
      "  cluster_identifier = \"test-cluster\"",
      "}",
      "",
      "resource \"aws_kinesis_firehose_delivery_stream\" \"test_stream\" {",
      "  name        = \"terraform-kinesis-firehose-test-stream\"",
      "  destination = \"redshift\"",
      "",
      "  s3_configuration {",
      "    role_arn           = \"${aws_iam_role.firehose_role.arn}\"",
      "    bucket_arn         = \"${aws_s3_bucket.bucket.arn}\"",
      "    buffer_size        = 10",
      "    buffer_interval    = 400",
      "    compression_format = \"GZIP\"",
      "  }",
      "",
      "  redshift_configuration {",
      "    role_arn           = \"${aws_iam_role.firehose_role.arn}\"",
      "    cluster_jdbcurl    = \"jdbc:redshift://${data.aws_redshift_cluster.test_cluster.endpoint}/${data.aws_redshift_cluster.test_cluster.database_name}\"",
      "    username           = \"testuser\"",
      "    password           = \"T3stPass\"",
      "    data_table_name    = \"test-table\"",
      "    copy_options       = \"delimiter '|'\" # the default delimiter",
      "    data_table_columns = \"test-col\"",
      "  }",
      "}"
    ]
  },
  "aws-data-redshift_service_account": {
    "description": "Defines redshift_service_account",
    "prefix": "tf-aws-data-redshift_service_account",
    "body": [
      "data \"aws_redshift_service_account\" \"main\" {}",
      "",
      "resource \"aws_s3_bucket\" \"bucket\" {",
      "  bucket        = \"tf-redshift-logging-test-bucket\"",
      "  force_destroy = true",
      "",
      "  policy = <<EOF",
      "{",
      "\t\"Version\": \"2008-10-17\",",
      "\t\"Statement\": [",
      "\t\t{",
      "        \t\t\t\"Sid\": \"Put bucket policy needed for audit logging\",",
      "        \t\t\t\"Effect\": \"Allow\",",
      "        \t\t\t\"Principal\": {",
      "\t\t\t\t\t\t\"AWS\": \"${data.aws_redshift_service_account.main.arn}\"",
      "        \t\t\t},",
      "        \t\t\t\"Action\": \"s3:PutObject\",",
      "        \t\t\t\"Resource\": \"arn:aws:s3:::tf-redshift-logging-test-bucket/*\"",
      "        \t\t},",
      "        \t\t{",
      "        \t\t\t\"Sid\": \"Get bucket policy needed for audit logging \",",
      "        \t\t\t\"Effect\": \"Allow\",",
      "        \t\t\t\"Principal\": {",
      "\t\t\t\t\t\t\"AWS\": \"${data.aws_redshift_service_account.main.arn}\"",
      "        \t\t\t},",
      "        \t\t\t\"Action\": \"s3:GetBucketAcl\",",
      "        \t\t\t\"Resource\": \"arn:aws:s3:::tf-redshift-logging-test-bucket\"",
      "        \t\t}",
      "\t]",
      "}",
      "EOF",
      "}"
    ]
  },
  "aws-data-region": {
    "description": "Defines region",
    "prefix": "tf-aws-data-region",
    "body": [
      "data \"aws_region\" \"current\" {}"
    ]
  },
  "aws-data-route": {
    "description": "Defines route",
    "prefix": "tf-aws-data-route",
    "body": [
      "variable \"subnet_id\" {}",
      "",
      "data \"aws_route_table\" \"selected\" {",
      "  subnet_id = \"${var.subnet_id}\"",
      "}",
      "",
      "data \"aws_route\" \"route\" {",
      "  route_table_id         = \"${aws_route_table.selected.id}\"",
      "  destination_cidr_block = \"10.0.1.0/24\"",
      "}",
      "",
      "data \"aws_network_interface\" \"interface\" {",
      "  network_interface_id = \"${data.aws_route.route.network_interface_id}\"",
      "}"
    ]
  },
  "aws-data-route53_delegation_set": {
    "description": "Defines route53_delegation_set",
    "prefix": "tf-aws-data-route53_delegation_set",
    "body": [
      "data \"aws_route53_delegation_set\" \"dset\" {",
      "  id = \"MQWGHCBFAKEID\"",
      "}"
    ]
  },
  "aws-data-route53_zone": {
    "description": "Defines route53_zone",
    "prefix": "tf-aws-data-route53_zone",
    "body": [
      "data \"aws_route53_zone\" \"selected\" {",
      "  name         = \"test.com.\"",
      "  private_zone = true",
      "}",
      "",
      "resource \"aws_route53_record\" \"www\" {",
      "  zone_id = \"${data.aws_route53_zone.selected.zone_id}\"",
      "  name    = \"www.${data.aws_route53_zone.selected.name}\"",
      "  type    = \"A\"",
      "  ttl     = \"300\"",
      "  records = [\"10.0.0.1\"]",
      "}"
    ]
  },
  "aws-data-route_table": {
    "description": "Defines route_table",
    "prefix": "tf-aws-data-route_table",
    "body": [
      "variable \"subnet_id\" {}",
      "",
      "data \"aws_route_table\" \"selected\" {",
      "  subnet_id = \"${var.subnet_id}\"",
      "}",
      "",
      "resource \"aws_route\" \"route\" {",
      "  route_table_id            = \"${data.aws_route_table.selected.id}\"",
      "  destination_cidr_block    = \"10.0.1.0/22\"",
      "  vpc_peering_connection_id = \"pcx-45ff3dc1\"",
      "}"
    ]
  },
  "aws-data-route_tables": {
    "description": "Defines route_tables",
    "prefix": "tf-aws-data-route_tables",
    "body": [
      "data \"aws_route_tables\" \"rts\" {",
      "  vpc_id = \"${var.vpc_id}\"",
      "",
      "  filter {",
      "    name   = \"tag:kubernetes.io/kops/role\"",
      "    values = [\"private*\"]",
      "  }",
      "}",
      "",
      "resource \"aws_route\" \"r\" {",
      "  count                     = \"${length(data.aws_route_tables.rts.ids)}\"",
      "  route_table_id            = \"${data.aws_route_tables.rts.ids[count.index]}\"",
      "  destination_cidr_block    = \"10.0.1.0/22\"",
      "  vpc_peering_connection_id = \"pcx-0e9a7a9ecd137dc54\"",
      "}"
    ]
  },
  "aws-data-s3_bucket": {
    "description": "Defines s3_bucket",
    "prefix": "tf-aws-data-s3_bucket",
    "body": [
      "data \"aws_s3_bucket\" \"selected\" {",
      "  bucket = \"bucket.test.com\"",
      "}",
      "",
      "data \"aws_route53_zone\" \"test_zone\" {",
      "  name = \"test.com.\"",
      "}",
      "",
      "resource \"aws_route53_record\" \"example\" {",
      "  zone_id = \"${data.aws_route53_zone.test_zone.id}\"",
      "  name    = \"bucket\"",
      "  type    = \"A\"",
      "",
      "  alias {",
      "    name    = \"${data.aws_s3_bucket.selected.website_domain}\"",
      "    zone_id = \"${data.aws_s3_bucket.selected.hosted_zone_id}\"",
      "  }",
      "}"
    ]
  },
  "aws-data-s3_bucket_object": {
    "description": "Defines s3_bucket_object",
    "prefix": "tf-aws-data-s3_bucket_object",
    "body": [
      "data \"aws_s3_bucket_object\" \"bootstrap_script\" {",
      "  bucket = \"ourcorp-deploy-config\"",
      "  key    = \"ec2-bootstrap-script.sh\"",
      "}",
      "",
      "resource \"aws_instance\" \"example\" {",
      "  instance_type = \"t2.micro\"",
      "  ami           = \"ami-2757f631\"",
      "  user_data     = \"${data.aws_s3_bucket_object.bootstrap_script.body}\"",
      "}"
    ]
  },
  "aws-data-secretsmanager_secret": {
    "description": "Defines secretsmanager_secret",
    "prefix": "tf-aws-data-secretsmanager_secret",
    "body": [
      "data \"aws_secretsmanager_secret\" \"by-arn\" {",
      "  arn = \"arn:aws:secretsmanager:us-east-1:123456789012:secret:example-123456\"",
      "}"
    ]
  },
  "aws-data-secretsmanager_secret_version": {
    "description": "Defines secretsmanager_secret_version",
    "prefix": "tf-aws-data-secretsmanager_secret_version",
    "body": [
      "data \"aws_secretsmanager_secret_version\" \"example\" {",
      "  secret_id = \"${data.aws_secretsmanager_secret.example.id}\"",
      "}"
    ]
  },
  "aws-data-security_group": {
    "description": "Defines security_group",
    "prefix": "tf-aws-data-security_group",
    "body": [
      "variable \"security_group_id\" {}",
      "",
      "data \"aws_security_group\" \"selected\" {",
      "  id = \"${var.security_group_id}\"",
      "}",
      "",
      "resource \"aws_subnet\" \"subnet\" {",
      "  vpc_id     = \"${data.aws_security_group.selected.vpc_id}\"",
      "  cidr_block = \"10.0.1.0/24\"",
      "}"
    ]
  },
  "aws-data-security_groups": {
    "description": "Defines security_groups",
    "prefix": "tf-aws-data-security_groups",
    "body": [
      "data \"aws_security_groups\" \"test\" {",
      "  tags = {",
      "    Application = \"k8s\"",
      "    Environment = \"dev\"",
      "  }",
      "}"
    ]
  },
  "aws-data-servicequotas_service": {
    "description": "Defines servicequotas_service",
    "prefix": "tf-aws-data-servicequotas_service",
    "body": [
      "data \"aws_servicequotas_service\" \"example\" {",
      "  service_name = \"Amazon Virtual Private Cloud (Amazon VPC)\"",
      "}"
    ]
  },
  "aws-data-servicequotas_service_quota": {
    "description": "Defines servicequotas_service_quota",
    "prefix": "tf-aws-data-servicequotas_service_quota",
    "body": [
      "data \"aws_servicequotas_service_quota\" \"by_quota_code\" {",
      "  quota_code   = \"L-F678F1CE\"",
      "  service_code = \"vpc\"",
      "}",
      "",
      "data \"aws_servicequotas_service_quota\" \"by_quota_name\" {",
      "  quota_name   = \"VPCs per Region\"",
      "  service_code = \"vpc\"",
      "}"
    ]
  },
  "aws-data-sns_topic": {
    "description": "Defines sns_topic",
    "prefix": "tf-aws-data-sns_topic",
    "body": [
      "data \"aws_sns_topic\" \"example\" {",
      "  name = \"an_example_topic\"",
      "}"
    ]
  },
  "aws-data-sqs_queue": {
    "description": "Defines sqs_queue",
    "prefix": "tf-aws-data-sqs_queue",
    "body": [
      "data \"aws_sqs_queue\" \"example\" {",
      "  name = \"queue\"",
      "}"
    ]
  },
  "aws-data-ssm_document": {
    "description": "Defines ssm_document",
    "prefix": "tf-aws-data-ssm_document",
    "body": [
      "data \"aws_ssm_document\" \"foo\" {",
      "  name            = \"AWS-GatherSoftwareInventory\"",
      "  document_format = \"YAML\"",
      "}",
      "",
      "output \"content\" {",
      "  value = \"${data.aws_ssm_document.foo.content}\"",
      "}"
    ]
  },
  "aws-data-ssm_parameter": {
    "description": "Defines ssm_parameter",
    "prefix": "tf-aws-data-ssm_parameter",
    "body": [
      "data \"aws_ssm_parameter\" \"foo\" {",
      "  name = \"foo\"",
      "}"
    ]
  },
  "aws-data-storagegateway_local_disk": {
    "description": "Defines storagegateway_local_disk",
    "prefix": "tf-aws-data-storagegateway_local_disk",
    "body": [
      "data \"aws_storagegateway_local_disk\" \"test\" {",
      "  disk_path   = \"${aws_volume_attachment.test.device_name}\"",
      "  gateway_arn = \"${aws_storagegateway_gateway.test.arn}\"",
      "}"
    ]
  },
  "aws-data-subnet": {
    "description": "Defines subnet",
    "prefix": "tf-aws-data-subnet",
    "body": [
      "variable \"subnet_id\" {}",
      "",
      "data \"aws_subnet\" \"selected\" {",
      "  id = \"${var.subnet_id}\"",
      "}",
      "",
      "resource \"aws_security_group\" \"subnet\" {",
      "  vpc_id = \"${data.aws_subnet.selected.vpc_id}\"",
      "",
      "  ingress {",
      "    cidr_blocks = [\"${data.aws_subnet.selected.cidr_block}\"]",
      "    from_port   = 80",
      "    to_port     = 80",
      "    protocol    = \"tcp\"",
      "  }",
      "}"
    ]
  },
  "aws-data-subnet_ids": {
    "description": "Defines subnet_ids",
    "prefix": "tf-aws-data-subnet_ids",
    "body": [
      "data \"aws_subnet_ids\" \"example\" {",
      "  vpc_id = \"${var.vpc_id}\"",
      "}",
      "",
      "data \"aws_subnet\" \"example\" {",
      "  count = \"${length(data.aws_subnet_ids.example.ids)}\"",
      "  id    = \"${data.aws_subnet_ids.example.ids[count.index]}\"",
      "}",
      "",
      "output \"subnet_cidr_blocks\" {",
      "  value = [\"${data.aws_subnet.example.*.cidr_block}\"]",
      "}"
    ]
  },
  "aws-data-transfer_server": {
    "description": "Defines transfer_server",
    "prefix": "tf-aws-data-transfer_server",
    "body": [
      "data \"aws_transfer_server\" \"example\" {",
      "  server_id = \"s-1234567\"",
      "}"
    ]
  },
  "aws-data-vpc": {
    "description": "Defines vpc",
    "prefix": "tf-aws-data-vpc",
    "body": [
      "variable \"vpc_id\" {}",
      "",
      "data \"aws_vpc\" \"selected\" {",
      "  id = \"${var.vpc_id}\"",
      "}",
      "",
      "resource \"aws_subnet\" \"example\" {",
      "  vpc_id            = \"${data.aws_vpc.selected.id}\"",
      "  availability_zone = \"us-west-2a\"",
      "  cidr_block        = \"${cidrsubnet(data.aws_vpc.selected.cidr_block, 4, 1)}\"",
      "}"
    ]
  },
  "aws-data-vpc_dhcp_options": {
    "description": "Defines vpc_dhcp_options",
    "prefix": "tf-aws-data-vpc_dhcp_options",
    "body": [
      "data \"aws_vpc_dhcp_options\" \"example\" {",
      "  dhcp_options_id = \"dopts-12345678\"",
      "}"
    ]
  },
  "aws-data-vpc_endpoint": {
    "description": "Defines vpc_endpoint",
    "prefix": "tf-aws-data-vpc_endpoint",
    "body": [
      "# Declare the data source",
      "data \"aws_vpc_endpoint\" \"s3\" {",
      "  vpc_id       = \"${aws_vpc.foo.id}\"",
      "  service_name = \"com.amazonaws.us-west-2.s3\"",
      "}",
      "",
      "resource \"aws_vpc_endpoint_route_table_association\" \"private_s3\" {",
      "  vpc_endpoint_id = \"${data.aws_vpc_endpoint.s3.id}\"",
      "  route_table_id  = \"${aws_route_table.private.id}\"",
      "}"
    ]
  },
  "aws-data-vpc_endpoint_service": {
    "description": "Defines vpc_endpoint_service",
    "prefix": "tf-aws-data-vpc_endpoint_service",
    "body": [
      "# Declare the data source",
      "data \"aws_vpc_endpoint_service\" \"s3\" {",
      "  service = \"s3\"",
      "}",
      "",
      "# Create a VPC",
      "resource \"aws_vpc\" \"foo\" {",
      "  cidr_block = \"10.0.0.0/16\"",
      "}",
      "",
      "# Create a VPC endpoint",
      "resource \"aws_vpc_endpoint\" \"ep\" {",
      "  vpc_id       = \"${aws_vpc.foo.id}\"",
      "  service_name = \"${data.aws_vpc_endpoint_service.s3.service_name}\"",
      "}"
    ]
  },
  "aws-data-vpc_peering_connection": {
    "description": "Defines vpc_peering_connection",
    "prefix": "tf-aws-data-vpc_peering_connection",
    "body": [
      "# Declare the data source",
      "data \"aws_vpc_peering_connection\" \"pc\" {",
      "  vpc_id          = \"${aws_vpc.foo.id}\"",
      "  peer_cidr_block = \"10.0.1.0/22\"",
      "}",
      "",
      "# Create a route table",
      "resource \"aws_route_table\" \"rt\" {",
      "  vpc_id = \"${aws_vpc.foo.id}\"",
      "}",
      "",
      "# Create a route",
      "resource \"aws_route\" \"r\" {",
      "  route_table_id            = \"${aws_route_table.rt.id}\"",
      "  destination_cidr_block    = \"${data.aws_vpc_peering_connection.pc.peer_cidr_block}\"",
      "  vpc_peering_connection_id = \"${data.aws_vpc_peering_connection.pc.id}\"",
      "}"
    ]
  },
  "aws-data-vpcs": {
    "description": "Defines vpcs",
    "prefix": "tf-aws-data-vpcs",
    "body": [
      "data \"aws_vpcs\" \"foo\" {",
      "  tags = {",
      "    service = \"production\"",
      "  }",
      "}",
      "",
      "output \"foo\" {",
      "  value = \"${data.aws_vpcs.foo.ids}\"",
      "}"
    ]
  },
  "aws-data-vpn_gateway": {
    "description": "Defines vpn_gateway",
    "prefix": "tf-aws-data-vpn_gateway",
    "body": [
      "data \"aws_vpn_gateway\" \"selected\" {",
      "  filter {",
      "    name   = \"tag:Name\"",
      "    values = [\"vpn-gw\"]",
      "  }",
      "}",
      "",
      "output \"vpn_gateway_id\" {",
      "  value = \"${data.aws_vpn_gateway.selected.id}\"",
      "}"
    ]
  },
  "aws-data-waf_ipset": {
    "description": "Defines waf_ipset",
    "prefix": "tf-aws-data-waf_ipset",
    "body": [
      "data \"aws_waf_ipset\" \"example\" {",
      "  name = \"tfWAFIPSet\"",
      "}"
    ]
  },
  "aws-data-waf_rule": {
    "description": "Defines waf_rule",
    "prefix": "tf-aws-data-waf_rule",
    "body": [
      "data \"aws_waf_rule\" \"example\" {",
      "  name = \"tfWAFRule\"",
      "}",
      ""
    ]
  },
  "aws-data-waf_web_acl": {
    "description": "Defines waf_web_acl",
    "prefix": "tf-aws-data-waf_web_acl",
    "body": [
      "data \"aws_waf_web_acl\" \"example\" {",
      "  name = \"tfWAFRule\"",
      "}"
    ]
  },
  "aws-data-wafregional_ipset": {
    "description": "Defines wafregional_ipset",
    "prefix": "tf-aws-data-wafregional_ipset",
    "body": [
      "data \"aws_wafregional_ipset\" \"example\" {",
      "  name = \"tfWAFRegionalIPSet\"",
      "}"
    ]
  },
  "aws-data-wafregional_rule": {
    "description": "Defines wafregional_rule",
    "prefix": "tf-aws-data-wafregional_rule",
    "body": [
      "data \"aws_wafregional_rule\" \"example\" {",
      "  name = \"tfWAFRule\"",
      "}"
    ]
  },
  "aws-data-wafregional_web_acl": {
    "description": "Defines wafregional_web_acl",
    "prefix": "tf-aws-data-wafregional_web_acl",
    "body": [
      "data \"aws_wafregional_web_acl\" \"example\" {",
      "    name = \"tfWAFRule\"",
      "}"
    ]
  },
  "aws-data-workspaces_bundle": {
    "description": "Defines workspaces_bundle",
    "prefix": "tf-aws-data-workspaces_bundle",
    "body": [
      "data \"aws_workspaces_bundle\" \"example\" {",
      "  bundle_id = \"wsb-b0s22j3d7\"",
      "}"
    ]
  },
  "aws-resource-acm_certificate": {
    "description": "Defines acm_certificate",
    "prefix": "tf-aws-resource-acm_certificate",
    "body": [
      "resource \"aws_acm_certificate\" \"cert\" {",
      "  domain_name       = \"example.com\"",
      "  validation_method = \"DNS\"",
      "",
      "  tags = {",
      "    Environment = \"test\"",
      "  }",
      "",
      "  lifecycle {",
      "    create_before_destroy = true",
      "  }",
      "}"
    ]
  },
  "aws-resource-acm_certificate_validation": {
    "description": "Defines acm_certificate_validation",
    "prefix": "tf-aws-resource-acm_certificate_validation",
    "body": [
      "resource \"aws_acm_certificate\" \"cert\" {",
      "  domain_name       = \"example.com\"",
      "  validation_method = \"DNS\"",
      "}",
      "",
      "data \"aws_route53_zone\" \"zone\" {",
      "  name         = \"example.com.\"",
      "  private_zone = false",
      "}",
      "",
      "resource \"aws_route53_record\" \"cert_validation\" {",
      "  name    = \"${aws_acm_certificate.cert.domain_validation_options.0.resource_record_name}\"",
      "  type    = \"${aws_acm_certificate.cert.domain_validation_options.0.resource_record_type}\"",
      "  zone_id = \"${data.aws_route53_zone.zone.id}\"",
      "  records = [\"${aws_acm_certificate.cert.domain_validation_options.0.resource_record_value}\"]",
      "  ttl     = 60",
      "}",
      "",
      "resource \"aws_acm_certificate_validation\" \"cert\" {",
      "  certificate_arn         = \"${aws_acm_certificate.cert.arn}\"",
      "  validation_record_fqdns = [\"${aws_route53_record.cert_validation.fqdn}\"]",
      "}",
      "",
      "resource \"aws_lb_listener\" \"front_end\" {",
      "  # [...]",
      "  certificate_arn = \"${aws_acm_certificate_validation.cert.certificate_arn}\"",
      "}"
    ]
  },
  "aws-resource-acmpca_certificate_authority": {
    "description": "Defines acmpca_certificate_authority",
    "prefix": "tf-aws-resource-acmpca_certificate_authority",
    "body": [
      "resource \"aws_acmpca_certificate_authority\" \"example\" {",
      "  certificate_authority_configuration {",
      "    key_algorithm     = \"RSA_4096\"",
      "    signing_algorithm = \"SHA512WITHRSA\"",
      "",
      "    subject {",
      "      common_name = \"example.com\"",
      "    }",
      "  }",
      "",
      "  permanent_deletion_time_in_days = 7",
      "}"
    ]
  },
  "aws-resource-ami": {
    "description": "Defines ami",
    "prefix": "tf-aws-resource-ami",
    "body": [
      "# Create an AMI that will start a machine whose root device is backed by",
      "# an EBS volume populated from a snapshot. It is assumed that such a snapshot",
      "# already exists with the id \"snap-xxxxxxxx\".",
      "resource \"aws_ami\" \"example\" {",
      "  name                = \"terraform-example\"",
      "  virtualization_type = \"hvm\"",
      "  root_device_name    = \"/dev/xvda\"",
      "",
      "  ebs_block_device {",
      "    device_name = \"/dev/xvda\"",
      "    snapshot_id = \"snap-xxxxxxxx\"",
      "    volume_size = 8",
      "  }",
      "}"
    ]
  },
  "aws-resource-ami_copy": {
    "description": "Defines ami_copy",
    "prefix": "tf-aws-resource-ami_copy",
    "body": [
      "resource \"aws_ami_copy\" \"example\" {",
      "  name              = \"terraform-example\"",
      "  description       = \"A copy of ami-xxxxxxxx\"",
      "  source_ami_id     = \"ami-xxxxxxxx\"",
      "  source_ami_region = \"us-west-1\"",
      "",
      "  tags = {",
      "    Name = \"HelloWorld\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-ami_from_instance": {
    "description": "Defines ami_from_instance",
    "prefix": "tf-aws-resource-ami_from_instance",
    "body": [
      "resource \"aws_ami_from_instance\" \"example\" {",
      "  name               = \"terraform-example\"",
      "  source_instance_id = \"i-xxxxxxxx\"",
      "}"
    ]
  },
  "aws-resource-ami_launch_permission": {
    "description": "Defines ami_launch_permission",
    "prefix": "tf-aws-resource-ami_launch_permission",
    "body": [
      "resource \"aws_ami_launch_permission\" \"example\" {",
      "  image_id   = \"ami-12345678\"",
      "  account_id = \"123456789012\"",
      "}"
    ]
  },
  "aws-resource-api_gateway_account": {
    "description": "Defines api_gateway_account",
    "prefix": "tf-aws-resource-api_gateway_account",
    "body": [
      "resource \"aws_api_gateway_account\" \"demo\" {",
      "  cloudwatch_role_arn = \"${aws_iam_role.cloudwatch.arn}\"",
      "}",
      "",
      "resource \"aws_iam_role\" \"cloudwatch\" {",
      "  name = \"api_gateway_cloudwatch_global\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Sid\": \"\",",
      "      \"Effect\": \"Allow\",",
      "      \"Principal\": {",
      "        \"Service\": \"apigateway.amazonaws.com\"",
      "      },",
      "      \"Action\": \"sts:AssumeRole\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_role_policy\" \"cloudwatch\" {",
      "  name = \"default\"",
      "  role = \"${aws_iam_role.cloudwatch.id}\"",
      "",
      "  policy = <<EOF",
      "{",
      "    \"Version\": \"2012-10-17\",",
      "    \"Statement\": [",
      "        {",
      "            \"Effect\": \"Allow\",",
      "            \"Action\": [",
      "                \"logs:CreateLogGroup\",",
      "                \"logs:CreateLogStream\",",
      "                \"logs:DescribeLogGroups\",",
      "                \"logs:DescribeLogStreams\",",
      "                \"logs:PutLogEvents\",",
      "                \"logs:GetLogEvents\",",
      "                \"logs:FilterLogEvents\"",
      "            ],",
      "            \"Resource\": \"*\"",
      "        }",
      "    ]",
      "}",
      "EOF",
      "}"
    ]
  },
  "aws-resource-api_gateway_api_key": {
    "description": "Defines api_gateway_api_key",
    "prefix": "tf-aws-resource-api_gateway_api_key",
    "body": [
      "resource \"aws_api_gateway_api_key\" \"MyDemoApiKey\" {",
      "  name = \"demo\"",
      "}"
    ]
  },
  "aws-resource-api_gateway_authorizer": {
    "description": "Defines api_gateway_authorizer",
    "prefix": "tf-aws-resource-api_gateway_authorizer",
    "body": [
      "resource \"aws_api_gateway_authorizer\" \"demo\" {",
      "  name                   = \"demo\"",
      "  rest_api_id            = \"${aws_api_gateway_rest_api.demo.id}\"",
      "  authorizer_uri         = \"${aws_lambda_function.authorizer.invoke_arn}\"",
      "  authorizer_credentials = \"${aws_iam_role.invocation_role.arn}\"",
      "}",
      "",
      "resource \"aws_api_gateway_rest_api\" \"demo\" {",
      "  name = \"auth-demo\"",
      "}",
      "",
      "resource \"aws_iam_role\" \"invocation_role\" {",
      "  name = \"api_gateway_auth_invocation\"",
      "  path = \"/\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": \"sts:AssumeRole\",",
      "      \"Principal\": {",
      "        \"Service\": \"apigateway.amazonaws.com\"",
      "      },",
      "      \"Effect\": \"Allow\",",
      "      \"Sid\": \"\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_role_policy\" \"invocation_policy\" {",
      "  name = \"default\"",
      "  role = \"${aws_iam_role.invocation_role.id}\"",
      "",
      "  policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": \"lambda:InvokeFunction\",",
      "      \"Effect\": \"Allow\",",
      "      \"Resource\": \"${aws_lambda_function.authorizer.arn}\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_role\" \"lambda\" {",
      "  name = \"demo-lambda\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": \"sts:AssumeRole\",",
      "      \"Principal\": {",
      "        \"Service\": \"lambda.amazonaws.com\"",
      "      },",
      "      \"Effect\": \"Allow\",",
      "      \"Sid\": \"\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_lambda_function\" \"authorizer\" {",
      "  filename      = \"lambda-function.zip\"",
      "  function_name = \"api_gateway_authorizer\"",
      "  role          = \"${aws_iam_role.lambda.arn}\"",
      "  handler       = \"exports.example\"",
      "",
      "  # The filebase64sha256() function is available in Terraform 0.11.12 and later",
      "  # For Terraform 0.11.11 and earlier, use the base64sha256() function and the file() function:",
      "  # source_code_hash = \"${base64sha256(file(\"lambda-function.zip\"))}\"",
      "  source_code_hash = \"${filebase64sha256(\"lambda-function.zip\")}\"",
      "}"
    ]
  },
  "aws-resource-api_gateway_base_path_mapping": {
    "description": "Defines api_gateway_base_path_mapping",
    "prefix": "tf-aws-resource-api_gateway_base_path_mapping",
    "body": [
      "resource \"aws_api_gateway_deployment\" \"example\" {",
      "  # See aws_api_gateway_rest_api docs for how to create this",
      "  rest_api_id = \"${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
      "  stage_name  = \"live\"",
      "}",
      "",
      "resource \"aws_api_gateway_domain_name\" \"example\" {",
      "  domain_name = \"example.com\"",
      "",
      "  certificate_name        = \"example-api\"",
      "  certificate_body        = \"${file(\"${path.module}/example.com/example.crt\")}\"",
      "  certificate_chain       = \"${file(\"${path.module}/example.com/ca.crt\")}\"",
      "  certificate_private_key = \"${file(\"${path.module}/example.com/example.key\")}\"",
      "}",
      "",
      "resource \"aws_api_gateway_base_path_mapping\" \"test\" {",
      "  api_id      = \"${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
      "  stage_name  = \"${aws_api_gateway_deployment.example.stage_name}\"",
      "  domain_name = \"${aws_api_gateway_domain_name.example.domain_name}\"",
      "}"
    ]
  },
  "aws-resource-api_gateway_client_certificate": {
    "description": "Defines api_gateway_client_certificate",
    "prefix": "tf-aws-resource-api_gateway_client_certificate",
    "body": [
      "resource \"aws_api_gateway_client_certificate\" \"demo\" {",
      "  description = \"My client certificate\"",
      "}"
    ]
  },
  "aws-resource-api_gateway_deployment": {
    "description": "Defines api_gateway_deployment",
    "prefix": "tf-aws-resource-api_gateway_deployment",
    "body": [
      "resource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {",
      "  name        = \"MyDemoAPI\"",
      "  description = \"This is my API for demonstration purposes\"",
      "}",
      "",
      "resource \"aws_api_gateway_resource\" \"MyDemoResource\" {",
      "  rest_api_id = \"${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
      "  parent_id   = \"${aws_api_gateway_rest_api.MyDemoAPI.root_resource_id}\"",
      "  path_part   = \"test\"",
      "}",
      "",
      "resource \"aws_api_gateway_method\" \"MyDemoMethod\" {",
      "  rest_api_id   = \"${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
      "  resource_id   = \"${aws_api_gateway_resource.MyDemoResource.id}\"",
      "  http_method   = \"GET\"",
      "  authorization = \"NONE\"",
      "}",
      "",
      "resource \"aws_api_gateway_integration\" \"MyDemoIntegration\" {",
      "  rest_api_id = \"${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
      "  resource_id = \"${aws_api_gateway_resource.MyDemoResource.id}\"",
      "  http_method = \"${aws_api_gateway_method.MyDemoMethod.http_method}\"",
      "  type        = \"MOCK\"",
      "}",
      "",
      "resource \"aws_api_gateway_deployment\" \"MyDemoDeployment\" {",
      "  depends_on = [\"aws_api_gateway_integration.MyDemoIntegration\"]",
      "",
      "  rest_api_id = \"${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
      "  stage_name  = \"test\"",
      "",
      "  variables = {",
      "    \"answer\" = \"42\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-api_gateway_documentation_part": {
    "description": "Defines api_gateway_documentation_part",
    "prefix": "tf-aws-resource-api_gateway_documentation_part",
    "body": [
      "resource \"aws_api_gateway_documentation_part\" \"example\" {",
      "  location {",
      "    type   = \"METHOD\"",
      "    method = \"GET\"",
      "    path   = \"/example\"",
      "  }",
      "",
      "  properties  = \"{\\\"description\\\":\\\"Example description\\\"}\"",
      "  rest_api_id = \"${aws_api_gateway_rest_api.example.id}\"",
      "}",
      "",
      "resource \"aws_api_gateway_rest_api\" \"example\" {",
      "  name = \"example_api\"",
      "}"
    ]
  },
  "aws-resource-api_gateway_documentation_version": {
    "description": "Defines api_gateway_documentation_version",
    "prefix": "tf-aws-resource-api_gateway_documentation_version",
    "body": [
      "resource \"aws_api_gateway_documentation_version\" \"example\" {",
      "  version     = \"example_version\"",
      "  rest_api_id = \"${aws_api_gateway_rest_api.example.id}\"",
      "  description = \"Example description\"",
      "  depends_on  = [\"aws_api_gateway_documentation_part.example\"]",
      "}",
      "",
      "resource \"aws_api_gateway_rest_api\" \"example\" {",
      "  name = \"example_api\"",
      "}",
      "",
      "resource \"aws_api_gateway_documentation_part\" \"example\" {",
      "  location {",
      "    type = \"API\"",
      "  }",
      "",
      "  properties  = \"{\\\"description\\\":\\\"Example\\\"}\"",
      "  rest_api_id = \"${aws_api_gateway_rest_api.example.id}\"",
      "}"
    ]
  },
  "aws-resource-api_gateway_domain_name": {
    "description": "Defines api_gateway_domain_name",
    "prefix": "tf-aws-resource-api_gateway_domain_name",
    "body": [
      "resource \"aws_api_gateway_domain_name\" \"example\" {",
      "  certificate_arn = \"${aws_acm_certificate_validation.example.certificate_arn}\"",
      "  domain_name     = \"api.example.com\"",
      "}",
      "",
      "# Example DNS record using Route53.",
      "# Route53 is not specifically required; any DNS host can be used.",
      "resource \"aws_route53_record\" \"example\" {",
      "  name    = \"${aws_api_gateway_domain_name.example.domain_name}\"",
      "  type    = \"A\"",
      "  zone_id = \"${aws_route53_zone.example.id}\"",
      "",
      "  alias {",
      "    evaluate_target_health = true",
      "    name                   = \"${aws_api_gateway_domain_name.example.cloudfront_domain_name}\"",
      "    zone_id                = \"${aws_api_gateway_domain_name.example.cloudfront_zone_id}\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-api_gateway_gateway_response": {
    "description": "Defines api_gateway_gateway_response",
    "prefix": "tf-aws-resource-api_gateway_gateway_response",
    "body": [
      "resource \"aws_api_gateway_rest_api\" \"main\" {",
      "  name = \"MyDemoAPI\"",
      "}",
      "",
      "resource \"aws_api_gateway_gateway_response\" \"test\" {",
      "  rest_api_id   = \"${aws_api_gateway_rest_api.main.id}\"",
      "  status_code   = \"401\"",
      "  response_type = \"UNAUTHORIZED\"",
      "",
      "  response_templates = {",
      "    \"application/json\" = \"{'message':$context.error.messageString}\"",
      "  }",
      "",
      "  response_parameters = {",
      "    \"gatewayresponse.header.Authorization\" = \"'Basic'\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-api_gateway_integration": {
    "description": "Defines api_gateway_integration",
    "prefix": "tf-aws-resource-api_gateway_integration",
    "body": [
      "resource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {",
      "  name        = \"MyDemoAPI\"",
      "  description = \"This is my API for demonstration purposes\"",
      "}",
      "",
      "resource \"aws_api_gateway_resource\" \"MyDemoResource\" {",
      "  rest_api_id = \"${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
      "  parent_id   = \"${aws_api_gateway_rest_api.MyDemoAPI.root_resource_id}\"",
      "  path_part   = \"mydemoresource\"",
      "}",
      "",
      "resource \"aws_api_gateway_method\" \"MyDemoMethod\" {",
      "  rest_api_id   = \"${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
      "  resource_id   = \"${aws_api_gateway_resource.MyDemoResource.id}\"",
      "  http_method   = \"GET\"",
      "  authorization = \"NONE\"",
      "}",
      "",
      "resource \"aws_api_gateway_integration\" \"MyDemoIntegration\" {",
      "  rest_api_id          = \"${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
      "  resource_id          = \"${aws_api_gateway_resource.MyDemoResource.id}\"",
      "  http_method          = \"${aws_api_gateway_method.MyDemoMethod.http_method}\"",
      "  type                 = \"MOCK\"",
      "  cache_key_parameters = [\"method.request.path.param\"]",
      "  cache_namespace      = \"foobar\"",
      "  timeout_milliseconds = 29000",
      "",
      "  request_parameters = {",
      "    \"integration.request.header.X-Authorization\" = \"'static'\"",
      "  }",
      "",
      "  # Transforms the incoming XML request to JSON",
      "  request_templates = {",
      "    \"application/xml\" = <<EOF",
      "{",
      "   \"body\" : $input.json('$')",
      "}",
      "EOF",
      "  }",
      "}"
    ]
  },
  "aws-resource-api_gateway_integration_response": {
    "description": "Defines api_gateway_integration_response",
    "prefix": "tf-aws-resource-api_gateway_integration_response",
    "body": [
      "resource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {",
      "  name        = \"MyDemoAPI\"",
      "  description = \"This is my API for demonstration purposes\"",
      "}",
      "",
      "resource \"aws_api_gateway_resource\" \"MyDemoResource\" {",
      "  rest_api_id = \"${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
      "  parent_id   = \"${aws_api_gateway_rest_api.MyDemoAPI.root_resource_id}\"",
      "  path_part   = \"mydemoresource\"",
      "}",
      "",
      "resource \"aws_api_gateway_method\" \"MyDemoMethod\" {",
      "  rest_api_id   = \"${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
      "  resource_id   = \"${aws_api_gateway_resource.MyDemoResource.id}\"",
      "  http_method   = \"GET\"",
      "  authorization = \"NONE\"",
      "}",
      "",
      "resource \"aws_api_gateway_integration\" \"MyDemoIntegration\" {",
      "  rest_api_id = \"${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
      "  resource_id = \"${aws_api_gateway_resource.MyDemoResource.id}\"",
      "  http_method = \"${aws_api_gateway_method.MyDemoMethod.http_method}\"",
      "  type        = \"MOCK\"",
      "}",
      "",
      "resource \"aws_api_gateway_method_response\" \"response_200\" {",
      "  rest_api_id = \"${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
      "  resource_id = \"${aws_api_gateway_resource.MyDemoResource.id}\"",
      "  http_method = \"${aws_api_gateway_method.MyDemoMethod.http_method}\"",
      "  status_code = \"200\"",
      "}",
      "",
      "resource \"aws_api_gateway_integration_response\" \"MyDemoIntegrationResponse\" {",
      "  rest_api_id = \"${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
      "  resource_id = \"${aws_api_gateway_resource.MyDemoResource.id}\"",
      "  http_method = \"${aws_api_gateway_method.MyDemoMethod.http_method}\"",
      "  status_code = \"${aws_api_gateway_method_response.response_200.status_code}\"",
      "",
      "  # Transforms the backend JSON response to XML",
      "  response_templates {",
      "    \"application/xml\" = <<EOF",
      "#set($inputRoot = $input.path('$'))",
      "<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
      "<message>",
      "    $inputRoot.body",
      "</message>",
      "EOF",
      "  }",
      "}"
    ]
  },
  "aws-resource-api_gateway_method": {
    "description": "Defines api_gateway_method",
    "prefix": "tf-aws-resource-api_gateway_method",
    "body": [
      "resource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {",
      "  name        = \"MyDemoAPI\"",
      "  description = \"This is my API for demonstration purposes\"",
      "}",
      "",
      "resource \"aws_api_gateway_resource\" \"MyDemoResource\" {",
      "  rest_api_id = \"${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
      "  parent_id   = \"${aws_api_gateway_rest_api.MyDemoAPI.root_resource_id}\"",
      "  path_part   = \"mydemoresource\"",
      "}",
      "",
      "resource \"aws_api_gateway_method\" \"MyDemoMethod\" {",
      "  rest_api_id   = \"${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
      "  resource_id   = \"${aws_api_gateway_resource.MyDemoResource.id}\"",
      "  http_method   = \"GET\"",
      "  authorization = \"NONE\"",
      "}"
    ]
  },
  "aws-resource-api_gateway_method_response": {
    "description": "Defines api_gateway_method_response",
    "prefix": "tf-aws-resource-api_gateway_method_response",
    "body": [
      "resource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {",
      "  name        = \"MyDemoAPI\"",
      "  description = \"This is my API for demonstration purposes\"",
      "}",
      "",
      "resource \"aws_api_gateway_resource\" \"MyDemoResource\" {",
      "  rest_api_id = \"${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
      "  parent_id   = \"${aws_api_gateway_rest_api.MyDemoAPI.root_resource_id}\"",
      "  path_part   = \"mydemoresource\"",
      "}",
      "",
      "resource \"aws_api_gateway_method\" \"MyDemoMethod\" {",
      "  rest_api_id   = \"${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
      "  resource_id   = \"${aws_api_gateway_resource.MyDemoResource.id}\"",
      "  http_method   = \"GET\"",
      "  authorization = \"NONE\"",
      "}",
      "",
      "resource \"aws_api_gateway_integration\" \"MyDemoIntegration\" {",
      "  rest_api_id = \"${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
      "  resource_id = \"${aws_api_gateway_resource.MyDemoResource.id}\"",
      "  http_method = \"${aws_api_gateway_method.MyDemoMethod.http_method}\"",
      "  type        = \"MOCK\"",
      "}",
      "",
      "resource \"aws_api_gateway_method_response\" \"response_200\" {",
      "  rest_api_id = \"${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
      "  resource_id = \"${aws_api_gateway_resource.MyDemoResource.id}\"",
      "  http_method = \"${aws_api_gateway_method.MyDemoMethod.http_method}\"",
      "  status_code = \"200\"",
      "}"
    ]
  },
  "aws-resource-api_gateway_method_settings": {
    "description": "Defines api_gateway_method_settings",
    "prefix": "tf-aws-resource-api_gateway_method_settings",
    "body": [
      "resource \"aws_api_gateway_method_settings\" \"s\" {",
      "  rest_api_id = \"${aws_api_gateway_rest_api.test.id}\"",
      "  stage_name  = \"${aws_api_gateway_stage.test.stage_name}\"",
      "  method_path = \"${aws_api_gateway_resource.test.path_part}/${aws_api_gateway_method.test.http_method}\"",
      "",
      "  settings {",
      "    metrics_enabled = true",
      "    logging_level   = \"INFO\"",
      "  }",
      "}",
      "",
      "resource \"aws_api_gateway_rest_api\" \"test\" {",
      "  name        = \"MyDemoAPI\"",
      "  description = \"This is my API for demonstration purposes\"",
      "}",
      "",
      "resource \"aws_api_gateway_deployment\" \"test\" {",
      "  depends_on  = [\"aws_api_gateway_integration.test\"]",
      "  rest_api_id = \"${aws_api_gateway_rest_api.test.id}\"",
      "  stage_name  = \"dev\"",
      "}",
      "",
      "resource \"aws_api_gateway_stage\" \"test\" {",
      "  stage_name    = \"prod\"",
      "  rest_api_id   = \"${aws_api_gateway_rest_api.test.id}\"",
      "  deployment_id = \"${aws_api_gateway_deployment.test.id}\"",
      "}",
      "",
      "resource \"aws_api_gateway_resource\" \"test\" {",
      "  rest_api_id = \"${aws_api_gateway_rest_api.test.id}\"",
      "  parent_id   = \"${aws_api_gateway_rest_api.test.root_resource_id}\"",
      "  path_part   = \"mytestresource\"",
      "}",
      "",
      "resource \"aws_api_gateway_method\" \"test\" {",
      "  rest_api_id   = \"${aws_api_gateway_rest_api.test.id}\"",
      "  resource_id   = \"${aws_api_gateway_resource.test.id}\"",
      "  http_method   = \"GET\"",
      "  authorization = \"NONE\"",
      "}",
      "",
      "resource \"aws_api_gateway_integration\" \"test\" {",
      "  rest_api_id = \"${aws_api_gateway_rest_api.test.id}\"",
      "  resource_id = \"${aws_api_gateway_resource.test.id}\"",
      "  http_method = \"${aws_api_gateway_method.test.http_method}\"",
      "  type        = \"MOCK\"",
      "",
      "  request_templates = {",
      "    \"application/xml\" = <<EOF",
      "{",
      "   \"body\" : $input.json('$')",
      "}",
      "EOF",
      "  }",
      "}"
    ]
  },
  "aws-resource-api_gateway_model": {
    "description": "Defines api_gateway_model",
    "prefix": "tf-aws-resource-api_gateway_model",
    "body": [
      "resource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {",
      "  name        = \"MyDemoAPI\"",
      "  description = \"This is my API for demonstration purposes\"",
      "}",
      "",
      "resource \"aws_api_gateway_model\" \"MyDemoModel\" {",
      "  rest_api_id  = \"${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
      "  name         = \"user\"",
      "  description  = \"a JSON schema\"",
      "  content_type = \"application/json\"",
      "",
      "  schema = <<EOF",
      "{",
      "  \"type\": \"object\"",
      "}",
      "EOF",
      "}"
    ]
  },
  "aws-resource-api_gateway_request_validator": {
    "description": "Defines api_gateway_request_validator",
    "prefix": "tf-aws-resource-api_gateway_request_validator",
    "body": [
      "resource \"aws_api_gateway_request_validator\" \"example\" {",
      "  name                        = \"example\"",
      "  rest_api_id                 = \"${aws_api_gateway_rest_api.example.id}\"",
      "  validate_request_body       = true",
      "  validate_request_parameters = true",
      "}"
    ]
  },
  "aws-resource-api_gateway_resource": {
    "description": "Defines api_gateway_resource",
    "prefix": "tf-aws-resource-api_gateway_resource",
    "body": [
      "resource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {",
      "  name        = \"MyDemoAPI\"",
      "  description = \"This is my API for demonstration purposes\"",
      "}",
      "",
      "resource \"aws_api_gateway_resource\" \"MyDemoResource\" {",
      "  rest_api_id = \"${aws_api_gateway_rest_api.MyDemoAPI.id}\"",
      "  parent_id   = \"${aws_api_gateway_rest_api.MyDemoAPI.root_resource_id}\"",
      "  path_part   = \"mydemoresource\"",
      "}"
    ]
  },
  "aws-resource-api_gateway_rest_api": {
    "description": "Defines api_gateway_rest_api",
    "prefix": "tf-aws-resource-api_gateway_rest_api",
    "body": [
      "resource \"aws_api_gateway_rest_api\" \"MyDemoAPI\" {",
      "  name        = \"MyDemoAPI\"",
      "  description = \"This is my API for demonstration purposes\"",
      "}"
    ]
  },
  "aws-resource-api_gateway_stage": {
    "description": "Defines api_gateway_stage",
    "prefix": "tf-aws-resource-api_gateway_stage",
    "body": [
      "resource \"aws_api_gateway_stage\" \"test\" {",
      "  stage_name    = \"prod\"",
      "  rest_api_id   = \"${aws_api_gateway_rest_api.test.id}\"",
      "  deployment_id = \"${aws_api_gateway_deployment.test.id}\"",
      "}",
      "",
      "resource \"aws_api_gateway_rest_api\" \"test\" {",
      "  name        = \"MyDemoAPI\"",
      "  description = \"This is my API for demonstration purposes\"",
      "}",
      "",
      "resource \"aws_api_gateway_deployment\" \"test\" {",
      "  depends_on  = [\"aws_api_gateway_integration.test\"]",
      "  rest_api_id = \"${aws_api_gateway_rest_api.test.id}\"",
      "  stage_name  = \"dev\"",
      "}",
      "",
      "resource \"aws_api_gateway_resource\" \"test\" {",
      "  rest_api_id = \"${aws_api_gateway_rest_api.test.id}\"",
      "  parent_id   = \"${aws_api_gateway_rest_api.test.root_resource_id}\"",
      "  path_part   = \"mytestresource\"",
      "}",
      "",
      "resource \"aws_api_gateway_method\" \"test\" {",
      "  rest_api_id   = \"${aws_api_gateway_rest_api.test.id}\"",
      "  resource_id   = \"${aws_api_gateway_resource.test.id}\"",
      "  http_method   = \"GET\"",
      "  authorization = \"NONE\"",
      "}",
      "",
      "resource \"aws_api_gateway_method_settings\" \"s\" {",
      "  rest_api_id = \"${aws_api_gateway_rest_api.test.id}\"",
      "  stage_name  = \"${aws_api_gateway_stage.test.stage_name}\"",
      "  method_path = \"${aws_api_gateway_resource.test.path_part}/${aws_api_gateway_method.test.http_method}\"",
      "",
      "  settings {",
      "    metrics_enabled = true",
      "    logging_level   = \"INFO\"",
      "  }",
      "}",
      "",
      "resource \"aws_api_gateway_integration\" \"test\" {",
      "  rest_api_id = \"${aws_api_gateway_rest_api.test.id}\"",
      "  resource_id = \"${aws_api_gateway_resource.test.id}\"",
      "  http_method = \"${aws_api_gateway_method.test.http_method}\"",
      "  type        = \"MOCK\"",
      "}"
    ]
  },
  "aws-resource-api_gateway_usage_plan": {
    "description": "Defines api_gateway_usage_plan",
    "prefix": "tf-aws-resource-api_gateway_usage_plan",
    "body": [
      "resource \"aws_api_gateway_rest_api\" \"myapi\" {",
      "  name = \"MyDemoAPI\"",
      "}",
      "",
      "# ...",
      "",
      "resource \"aws_api_gateway_deployment\" \"dev\" {",
      "  rest_api_id = \"${aws_api_gateway_rest_api.myapi.id}\"",
      "  stage_name  = \"dev\"",
      "}",
      "",
      "resource \"aws_api_gateway_deployment\" \"prod\" {",
      "  rest_api_id = \"${aws_api_gateway_rest_api.myapi.id}\"",
      "  stage_name  = \"prod\"",
      "}",
      "",
      "resource \"aws_api_gateway_usage_plan\" \"MyUsagePlan\" {",
      "  name         = \"my-usage-plan\"",
      "  description  = \"my description\"",
      "  product_code = \"MYCODE\"",
      "",
      "  api_stages {",
      "    api_id = \"${aws_api_gateway_rest_api.myapi.id}\"",
      "    stage  = \"${aws_api_gateway_deployment.dev.stage_name}\"",
      "  }",
      "",
      "  api_stages {",
      "    api_id = \"${aws_api_gateway_rest_api.myapi.id}\"",
      "    stage  = \"${aws_api_gateway_deployment.prod.stage_name}\"",
      "  }",
      "",
      "  quota_settings {",
      "    limit  = 20",
      "    offset = 2",
      "    period = \"WEEK\"",
      "  }",
      "",
      "  throttle_settings {",
      "    burst_limit = 5",
      "    rate_limit  = 10",
      "  }",
      "}"
    ]
  },
  "aws-resource-api_gateway_usage_plan_key": {
    "description": "Defines api_gateway_usage_plan_key",
    "prefix": "tf-aws-resource-api_gateway_usage_plan_key",
    "body": [
      "resource \"aws_api_gateway_rest_api\" \"test\" {",
      "  name = \"MyDemoAPI\"",
      "}",
      "",
      "# ...",
      "",
      "resource \"aws_api_gateway_usage_plan\" \"myusageplan\" {",
      "  name = \"my_usage_plan\"",
      "",
      "  api_stages {",
      "    api_id = \"${aws_api_gateway_rest_api.test.id}\"",
      "    stage  = \"${aws_api_gateway_deployment.foo.stage_name}\"",
      "  }",
      "}",
      "",
      "resource \"aws_api_gateway_api_key\" \"mykey\" {",
      "  name = \"my_key\"",
      "}",
      "",
      "resource \"aws_api_gateway_usage_plan_key\" \"main\" {",
      "  key_id        = \"${aws_api_gateway_api_key.mykey.id}\"",
      "  key_type      = \"API_KEY\"",
      "  usage_plan_id = \"${aws_api_gateway_usage_plan.myusageplan.id}\"",
      "}"
    ]
  },
  "aws-resource-api_gateway_vpc_link": {
    "description": "Defines api_gateway_vpc_link",
    "prefix": "tf-aws-resource-api_gateway_vpc_link",
    "body": [
      "resource \"aws_lb\" \"example\" {",
      "  name               = \"example\"",
      "  internal           = true",
      "  load_balancer_type = \"network\"",
      "",
      "  subnet_mapping {",
      "    subnet_id = \"12345\"",
      "  }",
      "}",
      "",
      "resource \"aws_api_gateway_vpc_link\" \"example\" {",
      "  name        = \"example\"",
      "  description = \"example description\"",
      "  target_arns = [\"${aws_lb.example.arn}\"]",
      "}"
    ]
  },
  "aws-resource-app_cookie_stickiness_policy": {
    "description": "Defines app_cookie_stickiness_policy",
    "prefix": "tf-aws-resource-app_cookie_stickiness_policy",
    "body": [
      "resource \"aws_elb\" \"lb\" {",
      "  name               = \"test-lb\"",
      "  availability_zones = [\"us-east-1a\"]",
      "",
      "  listener {",
      "    instance_port     = 8000",
      "    instance_protocol = \"http\"",
      "    lb_port           = 80",
      "    lb_protocol       = \"http\"",
      "  }",
      "}",
      "",
      "resource \"aws_app_cookie_stickiness_policy\" \"foo\" {",
      "  name          = \"foo_policy\"",
      "  load_balancer = \"${aws_elb.lb.name}\"",
      "  lb_port       = 80",
      "  cookie_name   = \"MyAppCookie\"",
      "}"
    ]
  },
  "aws-resource-appautoscaling_policy": {
    "description": "Defines appautoscaling_policy",
    "prefix": "tf-aws-resource-appautoscaling_policy",
    "body": [
      "resource \"aws_appautoscaling_target\" \"dynamodb_table_read_target\" {",
      "  max_capacity       = 100",
      "  min_capacity       = 5",
      "  resource_id        = \"table/tableName\"",
      "  role_arn           = \"${data.aws_iam_role.DynamoDBAutoscaleRole.arn}\"",
      "  scalable_dimension = \"dynamodb:table:ReadCapacityUnits\"",
      "  service_namespace  = \"dynamodb\"",
      "}",
      "",
      "resource \"aws_appautoscaling_policy\" \"dynamodb_table_read_policy\" {",
      "  name               = \"DynamoDBReadCapacityUtilization:${aws_appautoscaling_target.dynamodb_table_read_target.resource_id}\"",
      "  policy_type        = \"TargetTrackingScaling\"",
      "  resource_id        = \"${aws_appautoscaling_target.dynamodb_table_read_target.resource_id}\"",
      "  scalable_dimension = \"${aws_appautoscaling_target.dynamodb_table_read_target.scalable_dimension}\"",
      "  service_namespace  = \"${aws_appautoscaling_target.dynamodb_table_read_target.service_namespace}\"",
      "",
      "  target_tracking_scaling_policy_configuration {",
      "    predefined_metric_specification {",
      "      predefined_metric_type = \"DynamoDBReadCapacityUtilization\"",
      "    }",
      "",
      "    target_value = 70",
      "  }",
      "}"
    ]
  },
  "aws-resource-appautoscaling_scheduled_action": {
    "description": "Defines appautoscaling_scheduled_action",
    "prefix": "tf-aws-resource-appautoscaling_scheduled_action",
    "body": [
      "resource \"aws_appautoscaling_target\" \"dynamodb\" {",
      "  max_capacity       = 100",
      "  min_capacity       = 5",
      "  resource_id        = \"table/tableName\"",
      "  role_arn           = \"${data.aws_iam_role.DynamoDBAutoscaleRole.arn}\"",
      "  scalable_dimension = \"dynamodb:table:ReadCapacityUnits\"",
      "  service_namespace  = \"dynamodb\"",
      "}",
      "",
      "resource \"aws_appautoscaling_scheduled_action\" \"dynamodb\" {",
      "  name               = \"dynamodb\"",
      "  service_namespace  = \"${aws_appautoscaling_target.dynamodb.service_namespace}\"",
      "  resource_id        = \"${aws_appautoscaling_target.dynamodb.resource_id}\"",
      "  scalable_dimension = \"${aws_appautoscaling_target.dynamodb.scalable_dimension}\"",
      "  schedule           = \"at(2006-01-02T15:04:05)\"",
      "",
      "  scalable_target_action {",
      "    min_capacity = 1",
      "    max_capacity = 200",
      "  }",
      "}"
    ]
  },
  "aws-resource-appautoscaling_target": {
    "description": "Defines appautoscaling_target",
    "prefix": "tf-aws-resource-appautoscaling_target",
    "body": [
      "resource \"aws_appautoscaling_target\" \"dynamodb_table_read_target\" {",
      "  max_capacity       = 100",
      "  min_capacity       = 5",
      "  resource_id        = \"table/${aws_dynamodb_table.example.name}\"",
      "  role_arn           = \"${data.aws_iam_role.DynamoDBAutoscaleRole.arn}\"",
      "  scalable_dimension = \"dynamodb:table:ReadCapacityUnits\"",
      "  service_namespace  = \"dynamodb\"",
      "}"
    ]
  },
  "aws-resource-appmesh_mesh": {
    "description": "Defines appmesh_mesh",
    "prefix": "tf-aws-resource-appmesh_mesh",
    "body": [
      "resource \"aws_appmesh_mesh\" \"simple\" {",
      "  name = \"simpleapp\"",
      "}"
    ]
  },
  "aws-resource-appmesh_route": {
    "description": "Defines appmesh_route",
    "prefix": "tf-aws-resource-appmesh_route",
    "body": [
      "resource \"aws_appmesh_route\" \"serviceb\" {",
      "  name                = \"serviceB-route\"",
      "  mesh_name           = \"${aws_appmesh_mesh.simple.id}\"",
      "  virtual_router_name = \"${aws_appmesh_virtual_router.serviceb.name}\"",
      "",
      "  spec {",
      "    http_route {",
      "      match {",
      "        prefix = \"/\"",
      "      }",
      "",
      "      action {",
      "        weighted_target {",
      "          virtual_node = \"${aws_appmesh_virtual_node.serviceb1.name}\"",
      "          weight       = 90",
      "        }",
      "",
      "        weighted_target {",
      "          virtual_node = \"${aws_appmesh_virtual_node.serviceb2.name}\"",
      "          weight       = 10",
      "        }",
      "      }",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-appmesh_virtual_node": {
    "description": "Defines appmesh_virtual_node",
    "prefix": "tf-aws-resource-appmesh_virtual_node",
    "body": [
      "resource \"aws_appmesh_virtual_node\" \"serviceb1\" {",
      "  name      = \"serviceBv1\"",
      "  mesh_name = \"${aws_appmesh_mesh.simple.id}\"",
      "",
      "  spec {",
      "    backend {",
      "      virtual_service {",
      "        virtual_service_name = \"servicea.simpleapp.local\"",
      "      }",
      "    }",
      "",
      "    listener {",
      "      port_mapping {",
      "        port     = 8080",
      "        protocol = \"http\"",
      "      }",
      "    }",
      "",
      "    service_discovery {",
      "      dns {",
      "        hostname = \"serviceb.simpleapp.local\"",
      "      }",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-appmesh_virtual_router": {
    "description": "Defines appmesh_virtual_router",
    "prefix": "tf-aws-resource-appmesh_virtual_router",
    "body": [
      "resource \"aws_appmesh_virtual_router\" \"serviceb\" {",
      "  name      = \"serviceB\"",
      "  mesh_name = \"${aws_appmesh_mesh.simple.id}\"",
      "",
      "  spec {",
      "    listener {",
      "      port_mapping {",
      "        port     = 8080",
      "        protocol = \"http\"",
      "      }",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-appmesh_virtual_service": {
    "description": "Defines appmesh_virtual_service",
    "prefix": "tf-aws-resource-appmesh_virtual_service",
    "body": [
      "resource \"aws_appmesh_virtual_service\" \"servicea\" {",
      "  name      = \"servicea.simpleapp.local\"",
      "  mesh_name = \"${aws_appmesh_mesh.simple.id}\"",
      "",
      "  spec {",
      "    provider {",
      "      virtual_node {",
      "        virtual_node_name = \"${aws_appmesh_virtual_node.serviceb1.name}\"",
      "      }",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-appsync_api_key": {
    "description": "Defines appsync_api_key",
    "prefix": "tf-aws-resource-appsync_api_key",
    "body": [
      "resource \"aws_appsync_graphql_api\" \"example\" {",
      "  authentication_type = \"API_KEY\"",
      "  name                = \"example\"",
      "}",
      "",
      "resource \"aws_appsync_api_key\" \"example\" {",
      "  api_id  = \"${aws_appsync_graphql_api.example.id}\"",
      "  expires = \"2018-05-03T04:00:00Z\"",
      "}"
    ]
  },
  "aws-resource-appsync_datasource": {
    "description": "Defines appsync_datasource",
    "prefix": "tf-aws-resource-appsync_datasource",
    "body": [
      "resource \"aws_dynamodb_table\" \"example\" {",
      "  name           = \"example\"",
      "  read_capacity  = 1",
      "  write_capacity = 1",
      "  hash_key       = \"UserId\"",
      "",
      "  attribute {",
      "    name = \"UserId\"",
      "    type = \"S\"",
      "  }",
      "}",
      "",
      "resource \"aws_iam_role\" \"example\" {",
      "  name = \"example\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": \"sts:AssumeRole\",",
      "      \"Principal\": {",
      "        \"Service\": \"appsync.amazonaws.com\"",
      "      },",
      "      \"Effect\": \"Allow\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_role_policy\" \"example\" {",
      "  name = \"example\"",
      "  role = \"${aws_iam_role.example.id}\"",
      "",
      "  policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": [",
      "        \"dynamodb:*\"",
      "      ],",
      "      \"Effect\": \"Allow\",",
      "      \"Resource\": [",
      "        \"${aws_dynamodb_table.example.arn}\"",
      "      ]",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_appsync_graphql_api\" \"example\" {",
      "  authentication_type = \"API_KEY\"",
      "  name                = \"tf_appsync_example\"",
      "}",
      "",
      "resource \"aws_appsync_datasource\" \"example\" {",
      "  api_id           = \"${aws_appsync_graphql_api.example.id}\"",
      "  name             = \"tf_appsync_example\"",
      "  service_role_arn = \"${aws_iam_role.example.arn}\"",
      "  type             = \"AMAZON_DYNAMODB\"",
      "",
      "  dynamodb_config {",
      "    table_name = \"${aws_dynamodb_table.example.name}\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-appsync_function": {
    "description": "Defines appsync_function",
    "prefix": "tf-aws-resource-appsync_function",
    "body": [
      "resource \"aws_appsync_graphql_api\" \"test\" {",
      "  authentication_type = \"API_KEY\"",
      "  name                = \"tf-example\"",
      "  schema              = <<EOF",
      "type Mutation {",
      "    putPost(id: ID!, title: String!): Post",
      "}",
      "",
      "type Post {",
      "    id: ID!",
      "    title: String!",
      "}",
      "",
      "type Query {",
      "    singlePost(id: ID!): Post",
      "}",
      "",
      "schema {",
      "    query: Query",
      "    mutation: Mutation",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_appsync_datasource\" \"test\" {",
      "  api_id      = \"${aws_appsync_graphql_api.test.id}\"",
      "  name        = \"tf-example\"",
      "  type        = \"HTTP\"",
      "",
      "  http_config {",
      "    endpoint = \"http://example.com\"",
      "  }",
      "}",
      "",
      "resource \"aws_appsync_function\" \"test\" {",
      "  api_id      = \"${aws_appsync_graphql_api.test.id}\"",
      "  data_source = \"${aws_appsync_datasource.test.name}\"",
      "  name        = \"tf_example\"",
      "  request_mapping_template = <<EOF",
      "{",
      "    \"version\": \"2018-05-29\",",
      "    \"method\": \"GET\",",
      "    \"resourcePath\": \"/\",",
      "    \"params\":{",
      "        \"headers\": $utils.http.copyheaders($ctx.request.headers)",
      "    }",
      "}",
      "EOF",
      "  response_mapping_template = <<EOF",
      "#if($ctx.result.statusCode == 200)",
      "    $ctx.result.body",
      "#else",
      "    $utils.appendError($ctx.result.body, $ctx.result.statusCode)",
      "#end",
      "EOF",
      "}",
      ""
    ]
  },
  "aws-resource-appsync_graphql_api": {
    "description": "Defines appsync_graphql_api",
    "prefix": "tf-aws-resource-appsync_graphql_api",
    "body": [
      "resource \"aws_appsync_graphql_api\" \"example\" {",
      "  authentication_type = \"API_KEY\"",
      "  name                = \"example\"",
      "}"
    ]
  },
  "aws-resource-appsync_resolver": {
    "description": "Defines appsync_resolver",
    "prefix": "tf-aws-resource-appsync_resolver",
    "body": [
      "resource \"aws_appsync_graphql_api\" \"test\" {",
      "  authentication_type = \"API_KEY\"",
      "  name                = \"tf-example\"",
      "",
      "  schema = <<EOF",
      "type Mutation {",
      "\tputPost(id: ID!, title: String!): Post",
      "}",
      "",
      "type Post {",
      "\tid: ID!",
      "\ttitle: String!",
      "}",
      "",
      "type Query {",
      "\tsinglePost(id: ID!): Post",
      "}",
      "",
      "schema {",
      "\tquery: Query",
      "\tmutation: Mutation",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_appsync_datasource\" \"test\" {",
      "  api_id = \"${aws_appsync_graphql_api.test.id}\"",
      "  name   = \"tf_example\"",
      "  type   = \"HTTP\"",
      "",
      "  http_config {",
      "    endpoint = \"http://example.com\"",
      "  }",
      "}",
      "",
      "# UNIT type resolver (default)",
      "resource \"aws_appsync_resolver\" \"test\" {",
      "  api_id      = \"${aws_appsync_graphql_api.test.id}\"",
      "  field       = \"singlePost\"",
      "  type        = \"Query\"",
      "  data_source = \"${aws_appsync_datasource.test.name}\"",
      "",
      "  request_template = <<EOF",
      "{",
      "    \"version\": \"2018-05-29\",",
      "    \"method\": \"GET\",",
      "    \"resourcePath\": \"/\",",
      "    \"params\":{",
      "        \"headers\": $utils.http.copyheaders($ctx.request.headers)",
      "    }",
      "}",
      "EOF",
      "",
      "  response_template = <<EOF",
      "#if($ctx.result.statusCode == 200)",
      "    $ctx.result.body",
      "#else",
      "    $utils.appendError($ctx.result.body, $ctx.result.statusCode)",
      "#end",
      "EOF",
      "}",
      "",
      "# PIPELINE type resolver",
      "resource \"aws_appsync_resolver\" \"Mutation_pipelineTest\" {",
      "  type = \"Mutation\"",
      "  api_id = \"${aws_appsync_graphql_api.test.id}\"",
      "  field = \"pipelineTest\"",
      "  request_template = \"{}\"",
      "  response_template = \"$util.toJson($ctx.result)\"",
      "  kind = \"PIPELINE\"",
      "  pipeline_config {",
      "    functions = [",
      "      \"${aws_appsync_function.test1.function_id}\",",
      "      \"${aws_appsync_function.test2.function_id}\",",
      "      \"${aws_appsync_function.test3.function_id}\"",
      "    ]",
      "  }",
      "}"
    ]
  },
  "aws-resource-athena_database": {
    "description": "Defines athena_database",
    "prefix": "tf-aws-resource-athena_database",
    "body": [
      "resource \"aws_s3_bucket\" \"hoge\" {",
      "  bucket = \"hoge\"",
      "}",
      "",
      "resource \"aws_athena_database\" \"hoge\" {",
      "  name   = \"database_name\"",
      "  bucket = \"${aws_s3_bucket.hoge.bucket}\"",
      "}"
    ]
  },
  "aws-resource-athena_named_query": {
    "description": "Defines athena_named_query",
    "prefix": "tf-aws-resource-athena_named_query",
    "body": [
      "resource \"aws_s3_bucket\" \"hoge\" {",
      "  bucket = \"tf-test\"",
      "}",
      "",
      "resource \"aws_kms_key\" \"test\" {",
      "  deletion_window_in_days = 7",
      "  description             = \"Athena KMS Key\"",
      "}",
      "",
      "resource \"aws_athena_workgroup\" \"test\" {",
      "  name = \"example\"",
      "",
      "  configuration {",
      "    result_configuration {",
      "      encryption_configuration {",
      "        encryption_option = \"SSE_KMS\"",
      "        kms_key_arn       = \"${aws_kms_key.test.arn}\"",
      "      }",
      "    }",
      "  }",
      "}",
      "",
      "resource \"aws_athena_database\" \"hoge\" {",
      "  name   = \"users\"",
      "  bucket = \"${aws_s3_bucket.hoge.bucket}\"",
      "}",
      "",
      "resource \"aws_athena_named_query\" \"foo\" {",
      "  name      = \"bar\"",
      "  workgroup = \"${aws_athena_workgroup.test.id}\"",
      "  database  = \"${aws_athena_database.hoge.name}\"",
      "  query     = \"SELECT * FROM ${aws_athena_database.hoge.name} limit 10;\"",
      "}"
    ]
  },
  "aws-resource-athena_workgroup": {
    "description": "Defines athena_workgroup",
    "prefix": "tf-aws-resource-athena_workgroup",
    "body": [
      "resource \"aws_athena_workgroup\" \"example\" {",
      "  name = \"example\"",
      "",
      "  configuration {",
      "    enforce_workgroup_configuration    = true",
      "    publish_cloudwatch_metrics_enabled = true",
      "",
      "    result_configuration {",
      "      output_location = \"s3://{aws_s3_bucket.example.bucket}/output/\"",
      "",
      "      encryption_configuration {",
      "        encryption_option = \"SSE_KMS\"",
      "        kms_key_arn       = \"${aws_kms_key.example.arn}\"",
      "      }",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-autoscaling_attachment": {
    "description": "Defines autoscaling_attachment",
    "prefix": "tf-aws-resource-autoscaling_attachment",
    "body": [
      "# Create a new load balancer attachment",
      "resource \"aws_autoscaling_attachment\" \"asg_attachment_bar\" {",
      "  autoscaling_group_name = \"${aws_autoscaling_group.asg.id}\"",
      "  elb                    = \"${aws_elb.bar.id}\"",
      "}"
    ]
  },
  "aws-resource-autoscaling_group": {
    "description": "Defines autoscaling_group",
    "prefix": "tf-aws-resource-autoscaling_group",
    "body": [
      "resource \"aws_placement_group\" \"test\" {",
      "  name     = \"test\"",
      "  strategy = \"cluster\"",
      "}",
      "",
      "resource \"aws_autoscaling_group\" \"bar\" {",
      "  name                      = \"foobar3-terraform-test\"",
      "  max_size                  = 5",
      "  min_size                  = 2",
      "  health_check_grace_period = 300",
      "  health_check_type         = \"ELB\"",
      "  desired_capacity          = 4",
      "  force_delete              = true",
      "  placement_group           = \"${aws_placement_group.test.id}\"",
      "  launch_configuration      = \"${aws_launch_configuration.foobar.name}\"",
      "  vpc_zone_identifier       = [\"${aws_subnet.example1.id}\", \"${aws_subnet.example2.id}\"]",
      "",
      "  initial_lifecycle_hook {",
      "    name                 = \"foobar\"",
      "    default_result       = \"CONTINUE\"",
      "    heartbeat_timeout    = 2000",
      "    lifecycle_transition = \"autoscaling:EC2_INSTANCE_LAUNCHING\"",
      "",
      "    notification_metadata = <<EOF",
      "{",
      "  \"foo\": \"bar\"",
      "}",
      "EOF",
      "",
      "    notification_target_arn = \"arn:aws:sqs:us-east-1:444455556666:queue1*\"",
      "    role_arn                = \"arn:aws:iam::123456789012:role/S3Access\"",
      "  }",
      "",
      "  tag {",
      "    key                 = \"foo\"",
      "    value               = \"bar\"",
      "    propagate_at_launch = true",
      "  }",
      "",
      "  timeouts {",
      "    delete = \"15m\"",
      "  }",
      "",
      "  tag {",
      "    key                 = \"lorem\"",
      "    value               = \"ipsum\"",
      "    propagate_at_launch = false",
      "  }",
      "}"
    ]
  },
  "aws-resource-autoscaling_lifecycle_hooks": {
    "description": "Defines autoscaling_lifecycle_hooks",
    "prefix": "tf-aws-resource-autoscaling_lifecycle_hooks",
    "body": [
      "resource \"aws_autoscaling_group\" \"foobar\" {",
      "  availability_zones   = [\"us-west-2a\"]",
      "  name                 = \"terraform-test-foobar5\"",
      "  health_check_type    = \"EC2\"",
      "  termination_policies = [\"OldestInstance\"]",
      "",
      "  tag {",
      "    key                 = \"Foo\"",
      "    value               = \"foo-bar\"",
      "    propagate_at_launch = true",
      "  }",
      "}",
      "",
      "resource \"aws_autoscaling_lifecycle_hook\" \"foobar\" {",
      "  name                   = \"foobar\"",
      "  autoscaling_group_name = \"${aws_autoscaling_group.foobar.name}\"",
      "  default_result         = \"CONTINUE\"",
      "  heartbeat_timeout      = 2000",
      "  lifecycle_transition   = \"autoscaling:EC2_INSTANCE_LAUNCHING\"",
      "",
      "  notification_metadata = <<EOF",
      "{",
      "  \"foo\": \"bar\"",
      "}",
      "EOF",
      "",
      "  notification_target_arn = \"arn:aws:sqs:us-east-1:444455556666:queue1*\"",
      "  role_arn                = \"arn:aws:iam::123456789012:role/S3Access\"",
      "}"
    ]
  },
  "aws-resource-autoscaling_notification": {
    "description": "Defines autoscaling_notification",
    "prefix": "tf-aws-resource-autoscaling_notification",
    "body": [
      "resource \"aws_autoscaling_notification\" \"example_notifications\" {",
      "  group_names = [",
      "    \"${aws_autoscaling_group.bar.name}\",",
      "    \"${aws_autoscaling_group.foo.name}\",",
      "  ]",
      "",
      "  notifications = [",
      "    \"autoscaling:EC2_INSTANCE_LAUNCH\",",
      "    \"autoscaling:EC2_INSTANCE_TERMINATE\",",
      "    \"autoscaling:EC2_INSTANCE_LAUNCH_ERROR\",",
      "    \"autoscaling:EC2_INSTANCE_TERMINATE_ERROR\",",
      "  ]",
      "",
      "  topic_arn = \"${aws_sns_topic.example.arn}\"",
      "}",
      "",
      "resource \"aws_sns_topic\" \"example\" {",
      "  name = \"example-topic\"",
      "",
      "  # arn is an exported attribute",
      "}",
      "",
      "resource \"aws_autoscaling_group\" \"bar\" {",
      "  name = \"foobar1-terraform-test\"",
      "",
      "  # ...",
      "}",
      "",
      "resource \"aws_autoscaling_group\" \"foo\" {",
      "  name = \"barfoo-terraform-test\"",
      "",
      "  # ...",
      "}"
    ]
  },
  "aws-resource-autoscaling_policy": {
    "description": "Defines autoscaling_policy",
    "prefix": "tf-aws-resource-autoscaling_policy",
    "body": [
      "resource \"aws_autoscaling_policy\" \"bat\" {",
      "  name                   = \"foobar3-terraform-test\"",
      "  scaling_adjustment     = 4",
      "  adjustment_type        = \"ChangeInCapacity\"",
      "  cooldown               = 300",
      "  autoscaling_group_name = \"${aws_autoscaling_group.bar.name}\"",
      "}",
      "",
      "resource \"aws_autoscaling_group\" \"bar\" {",
      "  availability_zones        = [\"us-east-1a\"]",
      "  name                      = \"foobar3-terraform-test\"",
      "  max_size                  = 5",
      "  min_size                  = 2",
      "  health_check_grace_period = 300",
      "  health_check_type         = \"ELB\"",
      "  force_delete              = true",
      "  launch_configuration      = \"${aws_launch_configuration.foo.name}\"",
      "}"
    ]
  },
  "aws-resource-autoscaling_schedule": {
    "description": "Defines autoscaling_schedule",
    "prefix": "tf-aws-resource-autoscaling_schedule",
    "body": [
      "resource \"aws_autoscaling_group\" \"foobar\" {",
      "  availability_zones        = [\"us-west-2a\"]",
      "  name                      = \"terraform-test-foobar5\"",
      "  max_size                  = 1",
      "  min_size                  = 1",
      "  health_check_grace_period = 300",
      "  health_check_type         = \"ELB\"",
      "  force_delete              = true",
      "  termination_policies      = [\"OldestInstance\"]",
      "}",
      "",
      "resource \"aws_autoscaling_schedule\" \"foobar\" {",
      "  scheduled_action_name  = \"foobar\"",
      "  min_size               = 0",
      "  max_size               = 1",
      "  desired_capacity       = 0",
      "  start_time             = \"2016-12-11T18:00:00Z\"",
      "  end_time               = \"2016-12-12T06:00:00Z\"",
      "  autoscaling_group_name = \"${aws_autoscaling_group.foobar.name}\"",
      "}"
    ]
  },
  "aws-resource-backup_plan": {
    "description": "Defines backup_plan",
    "prefix": "tf-aws-resource-backup_plan",
    "body": [
      "resource \"aws_backup_plan\" \"example\" {",
      "  name = \"tf_example_backup_plan\"",
      "",
      "  rule {",
      "    rule_name         = \"tf_example_backup_rule\"",
      "    target_vault_name = \"${aws_backup_vault.test.name}\"",
      "    schedule          = \"cron(0 12 * * ? *)\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-backup_selection": {
    "description": "Defines backup_selection",
    "prefix": "tf-aws-resource-backup_selection",
    "body": [
      "resource \"aws_iam_role\" \"example\" {",
      "  name               = \"example\"",
      "  assume_role_policy = <<POLICY",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": [\"sts:AssumeRole\"],",
      "      \"Effect\": \"allow\",",
      "      \"Principal\": {",
      "        \"Service\": [\"backup.amazonaws.com\"]",
      "      }",
      "    }",
      "  ]",
      "}",
      "POLICY",
      "}",
      "",
      "resource \"aws_iam_role_policy_attachment\" \"example\" {",
      "  policy_arn = \"arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup\"",
      "  role       = \"${aws_iam_role.example.name}\"",
      "}",
      "",
      "resource \"aws_backup_selection\" \"example\" {",
      "  # ... other configuration ...",
      "",
      "  iam_role_arn = \"${aws_iam_role.example.arn}\"",
      "}"
    ]
  },
  "aws-resource-backup_vault": {
    "description": "Defines backup_vault",
    "prefix": "tf-aws-resource-backup_vault",
    "body": [
      "resource \"aws_backup_vault\" \"example\" {",
      "  name        = \"example_backup_vault\"",
      "  kms_key_arn = \"${aws_kms_key.example.arn}\"",
      "}"
    ]
  },
  "aws-resource-batch_compute_environment": {
    "description": "Defines batch_compute_environment",
    "prefix": "tf-aws-resource-batch_compute_environment",
    "body": [
      "resource \"aws_iam_role\" \"ecs_instance_role\" {",
      "  name = \"ecs_instance_role\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "    \"Version\": \"2012-10-17\",",
      "    \"Statement\": [",
      "\t{",
      "\t    \"Action\": \"sts:AssumeRole\",",
      "\t    \"Effect\": \"Allow\",",
      "\t    \"Principal\": {",
      "\t\t\"Service\": \"ec2.amazonaws.com\"",
      "\t    }",
      "\t}",
      "    ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_role_policy_attachment\" \"ecs_instance_role\" {",
      "  role       = \"${aws_iam_role.ecs_instance_role.name}\"",
      "  policy_arn = \"arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role\"",
      "}",
      "",
      "resource \"aws_iam_instance_profile\" \"ecs_instance_role\" {",
      "  name = \"ecs_instance_role\"",
      "  role = \"${aws_iam_role.ecs_instance_role.name}\"",
      "}",
      "",
      "resource \"aws_iam_role\" \"aws_batch_service_role\" {",
      "  name = \"aws_batch_service_role\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "    \"Version\": \"2012-10-17\",",
      "    \"Statement\": [",
      "\t{",
      "\t    \"Action\": \"sts:AssumeRole\",",
      "\t    \"Effect\": \"Allow\",",
      "\t    \"Principal\": {",
      "\t\t\"Service\": \"batch.amazonaws.com\"",
      "\t    }",
      "\t}",
      "    ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_role_policy_attachment\" \"aws_batch_service_role\" {",
      "  role       = \"${aws_iam_role.aws_batch_service_role.name}\"",
      "  policy_arn = \"arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole\"",
      "}",
      "",
      "resource \"aws_security_group\" \"sample\" {",
      "  name = \"aws_batch_compute_environment_security_group\"",
      "}",
      "",
      "resource \"aws_vpc\" \"sample\" {",
      "  cidr_block = \"10.1.0.0/16\"",
      "}",
      "",
      "resource \"aws_subnet\" \"sample\" {",
      "  vpc_id     = \"${aws_vpc.sample.id}\"",
      "  cidr_block = \"10.1.1.0/24\"",
      "}",
      "",
      "resource \"aws_batch_compute_environment\" \"sample\" {",
      "  compute_environment_name = \"sample\"",
      "",
      "  compute_resources {",
      "    instance_role = \"${aws_iam_instance_profile.ecs_instance_role.arn}\"",
      "",
      "    instance_type = [",
      "      \"c4.large\",",
      "    ]",
      "",
      "    max_vcpus = 16",
      "    min_vcpus = 0",
      "",
      "    security_group_ids = [",
      "      \"${aws_security_group.sample.id}\",",
      "    ]",
      "",
      "    subnets = [",
      "      \"${aws_subnet.sample.id}\",",
      "    ]",
      "",
      "    type = \"EC2\"",
      "  }",
      "",
      "  service_role = \"${aws_iam_role.aws_batch_service_role.arn}\"",
      "  type         = \"MANAGED\"",
      "  depends_on   = [\"aws_iam_role_policy_attachment.aws_batch_service_role\"]",
      "}"
    ]
  },
  "aws-resource-batch_job_definition": {
    "description": "Defines batch_job_definition",
    "prefix": "tf-aws-resource-batch_job_definition",
    "body": [
      "resource \"aws_batch_job_definition\" \"test\" {",
      "  name = \"tf_test_batch_job_definition\"",
      "  type = \"container\"",
      "",
      "  container_properties = <<CONTAINER_PROPERTIES",
      "{",
      "\t\"command\": [\"ls\", \"-la\"],",
      "\t\"image\": \"busybox\",",
      "\t\"memory\": 1024,",
      "\t\"vcpus\": 1,",
      "\t\"volumes\": [",
      "      {",
      "        \"host\": {",
      "          \"sourcePath\": \"/tmp\"",
      "        },",
      "        \"name\": \"tmp\"",
      "      }",
      "    ],",
      "\t\"environment\": [",
      "\t\t{\"name\": \"VARNAME\", \"value\": \"VARVAL\"}",
      "\t],",
      "\t\"mountPoints\": [",
      "\t\t{",
      "          \"sourceVolume\": \"tmp\",",
      "          \"containerPath\": \"/tmp\",",
      "          \"readOnly\": false",
      "        }",
      "\t],",
      "    \"ulimits\": [",
      "      {",
      "        \"hardLimit\": 1024,",
      "        \"name\": \"nofile\",",
      "        \"softLimit\": 1024",
      "      }",
      "    ]",
      "}",
      "CONTAINER_PROPERTIES",
      "}"
    ]
  },
  "aws-resource-batch_job_queue": {
    "description": "Defines batch_job_queue",
    "prefix": "tf-aws-resource-batch_job_queue",
    "body": [
      "resource \"aws_batch_job_queue\" \"test_queue\" {",
      "  name                 = \"tf-test-batch-job-queue\"",
      "  state                = \"ENABLED\"",
      "  priority             = 1",
      "  compute_environments = [\"${aws_batch_compute_environment.test_environment_1.arn}\", \"${aws_batch_compute_environment.test_environment_2.arn}\"]",
      "}"
    ]
  },
  "aws-resource-budgets_budget": {
    "description": "Defines budgets_budget",
    "prefix": "tf-aws-resource-budgets_budget",
    "body": [
      "resource \"aws_budgets_budget\" \"ec2\" {",
      "  name              = \"budget-ec2-monthly\"",
      "  budget_type       = \"COST\"",
      "  limit_amount      = \"1200\"",
      "  limit_unit        = \"USD\"",
      "  time_period_end   = \"2087-06-15_00:00\"",
      "  time_period_start = \"2017-07-01_00:00\"",
      "  time_unit         = \"MONTHLY\"",
      "",
      "  cost_filters = {",
      "    Service = \"Amazon Elastic Compute Cloud - Compute\"",
      "  }",
      "",
      "  notification {",
      "    comparison_operator        = \"GREATER_THAN\"",
      "    threshold                  = 100",
      "    threshold_type             = \"PERCENTAGE\"",
      "    notification_type          = \"FORECASTED\"",
      "    subscriber_email_addresses = [\"test@example.com\"]",
      "  }",
      "}"
    ]
  },
  "aws-resource-cloud9_environment_ec2": {
    "description": "Defines cloud9_environment_ec2",
    "prefix": "tf-aws-resource-cloud9_environment_ec2",
    "body": [
      "resource \"aws_cloud9_environment_ec2\" \"example\" {",
      "  instance_type = \"t2.micro\"",
      "  name          = \"example-env\"",
      "}"
    ]
  },
  "aws-resource-cloudformation_stack": {
    "description": "Defines cloudformation_stack",
    "prefix": "tf-aws-resource-cloudformation_stack",
    "body": [
      "resource \"aws_cloudformation_stack\" \"network\" {",
      "  name = \"networking-stack\"",
      "",
      "  parameters = {",
      "    VPCCidr = \"10.0.0.0/16\"",
      "  }",
      "",
      "  template_body = <<STACK",
      "{",
      "  \"Parameters\" : {",
      "    \"VPCCidr\" : {",
      "      \"Type\" : \"String\",",
      "      \"Default\" : \"10.0.0.0/16\",",
      "      \"Description\" : \"Enter the CIDR block for the VPC. Default is 10.0.0.0/16.\"",
      "    }",
      "  },",
      "  \"Resources\" : {",
      "    \"myVpc\": {",
      "      \"Type\" : \"AWS::EC2::VPC\",",
      "      \"Properties\" : {",
      "        \"CidrBlock\" : { \"Ref\" : \"VPCCidr\" },",
      "        \"Tags\" : [",
      "          {\"Key\": \"Name\", \"Value\": \"Primary_CF_VPC\"}",
      "        ]",
      "      }",
      "    }",
      "  }",
      "}",
      "STACK",
      "}"
    ]
  },
  "aws-resource-cloudformation_stack_set": {
    "description": "Defines cloudformation_stack_set",
    "prefix": "tf-aws-resource-cloudformation_stack_set",
    "body": [
      "data \"aws_iam_policy_document\" \"AWSCloudFormationStackSetAdministrationRole_assume_role_policy\" {",
      "  statement {",
      "    actions = [\"sts:AssumeRole\"]",
      "    effect  = \"Allow\"",
      "",
      "    principals {",
      "      identifiers = [\"cloudformation.amazonaws.com\"]",
      "      type        = \"Service\"",
      "    }",
      "  }",
      "}",
      "",
      "resource \"aws_iam_role\" \"AWSCloudFormationStackSetAdministrationRole\" {",
      "  assume_role_policy = \"${data.aws_iam_policy_document.AWSCloudFormationStackSetAdministrationRole_assume_role_policy.json}\"",
      "  name               = \"AWSCloudFormationStackSetAdministrationRole\"",
      "}",
      "",
      "resource \"aws_cloudformation_stack_set\" \"example\" {",
      "  administration_role_arn = \"${aws_iam_role.AWSCloudFormationStackSetAdministrationRole.arn}\"",
      "  name                    = \"example\"",
      "",
      "  parameters = {",
      "    VPCCidr = \"10.0.0.0/16\"",
      "  }",
      "",
      "  template_body = <<TEMPLATE",
      "{",
      "  \"Parameters\" : {",
      "    \"VPCCidr\" : {",
      "      \"Type\" : \"String\",",
      "      \"Default\" : \"10.0.0.0/16\",",
      "      \"Description\" : \"Enter the CIDR block for the VPC. Default is 10.0.0.0/16.\"",
      "    }",
      "  },",
      "  \"Resources\" : {",
      "    \"myVpc\": {",
      "      \"Type\" : \"AWS::EC2::VPC\",",
      "      \"Properties\" : {",
      "        \"CidrBlock\" : { \"Ref\" : \"VPCCidr\" },",
      "        \"Tags\" : [",
      "          {\"Key\": \"Name\", \"Value\": \"Primary_CF_VPC\"}",
      "        ]",
      "      }",
      "    }",
      "  }",
      "}",
      "TEMPLATE",
      "}",
      "",
      "data \"aws_iam_policy_document\" \"AWSCloudFormationStackSetAdministrationRole_ExecutionPolicy\" {",
      "  statement {",
      "    actions   = [\"sts:AssumeRole\"]",
      "    effect    = \"Allow\"",
      "    resources = [\"arn:aws:iam::*:role/${aws_cloudformation_stack_set.example.execution_role_name}\"]",
      "  }",
      "}",
      "",
      "resource \"aws_iam_role_policy\" \"AWSCloudFormationStackSetAdministrationRole_ExecutionPolicy\" {",
      "  name   = \"ExecutionPolicy\"",
      "  policy = \"${data.aws_iam_policy_document.AWSCloudFormationStackSetAdministrationRole_ExecutionPolicy.json}\"",
      "  role   = \"${aws_iam_role.AWSCloudFormationStackSetAdministrationRole.name}\"",
      "}"
    ]
  },
  "aws-resource-cloudformation_stack_set_instance": {
    "description": "Defines cloudformation_stack_set_instance",
    "prefix": "tf-aws-resource-cloudformation_stack_set_instance",
    "body": [
      "resource \"aws_cloudformation_stack_set_instance\" \"example\" {",
      "  account_id     = \"123456789012\"",
      "  region         = \"us-east-1\"",
      "  stack_set_name = \"${aws_cloudformation_stack_set.example.name}\"",
      "}"
    ]
  },
  "aws-resource-cloudfront_distribution": {
    "description": "Defines cloudfront_distribution",
    "prefix": "tf-aws-resource-cloudfront_distribution",
    "body": [
      "resource \"aws_s3_bucket\" \"b\" {",
      "  bucket = \"mybucket\"",
      "  acl    = \"private\"",
      "",
      "  tags = {",
      "    Name = \"My bucket\"",
      "  }",
      "}",
      "",
      "locals {",
      "  s3_origin_id = \"myS3Origin\"",
      "}",
      "",
      "resource \"aws_cloudfront_distribution\" \"s3_distribution\" {",
      "  origin {",
      "    domain_name = \"${aws_s3_bucket.b.bucket_regional_domain_name}\"",
      "    origin_id   = \"${local.s3_origin_id}\"",
      "",
      "    s3_origin_config {",
      "      origin_access_identity = \"origin-access-identity/cloudfront/ABCDEFG1234567\"",
      "    }",
      "  }",
      "",
      "  enabled             = true",
      "  is_ipv6_enabled     = true",
      "  comment             = \"Some comment\"",
      "  default_root_object = \"index.html\"",
      "",
      "  logging_config {",
      "    include_cookies = false",
      "    bucket          = \"mylogs.s3.amazonaws.com\"",
      "    prefix          = \"myprefix\"",
      "  }",
      "",
      "  aliases = [\"mysite.example.com\", \"yoursite.example.com\"]",
      "",
      "  default_cache_behavior {",
      "    allowed_methods  = [\"DELETE\", \"GET\", \"HEAD\", \"OPTIONS\", \"PATCH\", \"POST\", \"PUT\"]",
      "    cached_methods   = [\"GET\", \"HEAD\"]",
      "    target_origin_id = \"${local.s3_origin_id}\"",
      "",
      "    forwarded_values {",
      "      query_string = false",
      "",
      "      cookies {",
      "        forward = \"none\"",
      "      }",
      "    }",
      "",
      "    viewer_protocol_policy = \"allow-all\"",
      "    min_ttl                = 0",
      "    default_ttl            = 3600",
      "    max_ttl                = 86400",
      "  }",
      "",
      "  # Cache behavior with precedence 0",
      "  ordered_cache_behavior {",
      "    path_pattern     = \"/content/immutable/*\"",
      "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]",
      "    cached_methods   = [\"GET\", \"HEAD\", \"OPTIONS\"]",
      "    target_origin_id = \"${local.s3_origin_id}\"",
      "",
      "    forwarded_values {",
      "      query_string = false",
      "      headers      = [\"Origin\"]",
      "",
      "      cookies {",
      "        forward = \"none\"",
      "      }",
      "    }",
      "",
      "    min_ttl                = 0",
      "    default_ttl            = 86400",
      "    max_ttl                = 31536000",
      "    compress               = true",
      "    viewer_protocol_policy = \"redirect-to-https\"",
      "  }",
      "",
      "  # Cache behavior with precedence 1",
      "  ordered_cache_behavior {",
      "    path_pattern     = \"/content/*\"",
      "    allowed_methods  = [\"GET\", \"HEAD\", \"OPTIONS\"]",
      "    cached_methods   = [\"GET\", \"HEAD\"]",
      "    target_origin_id = \"${local.s3_origin_id}\"",
      "",
      "    forwarded_values {",
      "      query_string = false",
      "",
      "      cookies {",
      "        forward = \"none\"",
      "      }",
      "    }",
      "",
      "    min_ttl                = 0",
      "    default_ttl            = 3600",
      "    max_ttl                = 86400",
      "    compress               = true",
      "    viewer_protocol_policy = \"redirect-to-https\"",
      "  }",
      "",
      "  price_class = \"PriceClass_200\"",
      "",
      "  restrictions {",
      "    geo_restriction {",
      "      restriction_type = \"whitelist\"",
      "      locations        = [\"US\", \"CA\", \"GB\", \"DE\"]",
      "    }",
      "  }",
      "",
      "  tags = {",
      "    Environment = \"production\"",
      "  }",
      "",
      "  viewer_certificate {",
      "    cloudfront_default_certificate = true",
      "  }",
      "}"
    ]
  },
  "aws-resource-cloudfront_origin_access_identity": {
    "description": "Defines cloudfront_origin_access_identity",
    "prefix": "tf-aws-resource-cloudfront_origin_access_identity",
    "body": [
      "resource \"aws_cloudfront_origin_access_identity\" \"origin_access_identity\" {",
      "  comment = \"Some comment\"",
      "}"
    ]
  },
  "aws-resource-cloudfront_public_key": {
    "description": "Defines cloudfront_public_key",
    "prefix": "tf-aws-resource-cloudfront_public_key",
    "body": [
      "resource \"aws_cloudfront_public_key\" \"example\" {",
      "  comment     = \"test public key\"",
      "  encoded_key = \"${file(\"public_key.pem\")}\"",
      "  name        = \"test_key\"",
      "}"
    ]
  },
  "aws-resource-cloudhsm_v2_cluster": {
    "description": "Defines cloudhsm_v2_cluster",
    "prefix": "tf-aws-resource-cloudhsm_v2_cluster",
    "body": [
      "provider \"aws\" {",
      "  region = \"${var.aws_region}\"",
      "}",
      "",
      "data \"aws_availability_zones\" \"available\" {}",
      "",
      "resource \"aws_vpc\" \"cloudhsm2_vpc\" {",
      "  cidr_block = \"10.0.0.0/16\"",
      "",
      "  tags = {",
      "    Name = \"example-aws_cloudhsm_v2_cluster\"",
      "  }",
      "}",
      "",
      "resource \"aws_subnet\" \"cloudhsm2_subnets\" {",
      "  count                   = 2",
      "  vpc_id                  = \"${aws_vpc.cloudhsm2_vpc.id}\"",
      "  cidr_block              = \"${element(var.subnets, count.index)}\"",
      "  map_public_ip_on_launch = false",
      "  availability_zone       = \"${element(data.aws_availability_zones.available.names, count.index)}\"",
      "",
      "  tags = {",
      "    Name = \"example-aws_cloudhsm_v2_cluster\"",
      "  }",
      "}",
      "",
      "resource \"aws_cloudhsm_v2_cluster\" \"cloudhsm_v2_cluster\" {",
      "  hsm_type   = \"hsm1.medium\"",
      "  subnet_ids = [\"${aws_subnet.cloudhsm2_subnets.*.id}\"]",
      "",
      "  tags = {",
      "    Name = \"example-aws_cloudhsm_v2_cluster\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-cloudhsm_v2_hsm": {
    "description": "Defines cloudhsm_v2_hsm",
    "prefix": "tf-aws-resource-cloudhsm_v2_hsm",
    "body": [
      "data \"aws_cloudhsm_v2_cluster\" \"cluster\" {",
      "  cluster_id = \"${var.cloudhsm_cluster_id}\"",
      "}",
      "",
      "resource \"aws_cloudhsm_v2_hsm\" \"cloudhsm_v2_hsm\" {",
      "  subnet_id  = \"${data.aws_cloudhsm_v2_cluster.cluster.subnet_ids[0]}\"",
      "  cluster_id = \"${data.aws_cloudhsm_v2_cluster.cluster.cluster_id}\"",
      "}"
    ]
  },
  "aws-resource-cloudtrail": {
    "description": "Defines cloudtrail",
    "prefix": "tf-aws-resource-cloudtrail",
    "body": [
      "data \"aws_caller_identity\" \"current\" {}",
      "",
      "resource \"aws_cloudtrail\" \"foobar\" {",
      "  name                          = \"tf-trail-foobar\"",
      "  s3_bucket_name                = \"${aws_s3_bucket.foo.id}\"",
      "  s3_key_prefix                 = \"prefix\"",
      "  include_global_service_events = false",
      "}",
      "",
      "resource \"aws_s3_bucket\" \"foo\" {",
      "  bucket        = \"tf-test-trail\"",
      "  force_destroy = true",
      "",
      "  policy = <<POLICY",
      "{",
      "    \"Version\": \"2012-10-17\",",
      "    \"Statement\": [",
      "        {",
      "            \"Sid\": \"AWSCloudTrailAclCheck\",",
      "            \"Effect\": \"Allow\",",
      "            \"Principal\": {",
      "              \"Service\": \"cloudtrail.amazonaws.com\"",
      "            },",
      "            \"Action\": \"s3:GetBucketAcl\",",
      "            \"Resource\": \"arn:aws:s3:::tf-test-trail\"",
      "        },",
      "        {",
      "            \"Sid\": \"AWSCloudTrailWrite\",",
      "            \"Effect\": \"Allow\",",
      "            \"Principal\": {",
      "              \"Service\": \"cloudtrail.amazonaws.com\"",
      "            },",
      "            \"Action\": \"s3:PutObject\",",
      "            \"Resource\": \"arn:aws:s3:::tf-test-trail/prefix/AWSLogs/${data.aws_caller_identity.current.account_id}/*\",",
      "            \"Condition\": {",
      "                \"StringEquals\": {",
      "                    \"s3:x-amz-acl\": \"bucket-owner-full-control\"",
      "                }",
      "            }",
      "        }",
      "    ]",
      "}",
      "POLICY",
      "}"
    ]
  },
  "aws-resource-cloudwatch_dashboard": {
    "description": "Defines cloudwatch_dashboard",
    "prefix": "tf-aws-resource-cloudwatch_dashboard",
    "body": [
      "resource \"aws_cloudwatch_dashboard\" \"main\" {",
      "  dashboard_name = \"my-dashboard\"",
      "",
      "  dashboard_body = <<EOF",
      " {",
      "   \"widgets\": [",
      "       {",
      "          \"type\":\"metric\",",
      "          \"x\":0,",
      "          \"y\":0,",
      "          \"width\":12,",
      "          \"height\":6,",
      "          \"properties\":{",
      "             \"metrics\":[",
      "                [",
      "                   \"AWS/EC2\",",
      "                   \"CPUUtilization\",",
      "                   \"InstanceId\",",
      "                   \"i-012345\"",
      "                ]",
      "             ],",
      "             \"period\":300,",
      "             \"stat\":\"Average\",",
      "             \"region\":\"us-east-1\",",
      "             \"title\":\"EC2 Instance CPU\"",
      "          }",
      "       },",
      "       {",
      "          \"type\":\"text\",",
      "          \"x\":0,",
      "          \"y\":7,",
      "          \"width\":3,",
      "          \"height\":3,",
      "          \"properties\":{",
      "             \"markdown\":\"Hello world\"",
      "          }",
      "       }",
      "   ]",
      " }",
      " EOF",
      "}"
    ]
  },
  "aws-resource-cloudwatch_event_permission": {
    "description": "Defines cloudwatch_event_permission",
    "prefix": "tf-aws-resource-cloudwatch_event_permission",
    "body": [
      "resource \"aws_cloudwatch_event_permission\" \"DevAccountAccess\" {",
      "  principal    = \"123456789012\"",
      "  statement_id = \"DevAccountAccess\"",
      "}"
    ]
  },
  "aws-resource-cloudwatch_event_rule": {
    "description": "Defines cloudwatch_event_rule",
    "prefix": "tf-aws-resource-cloudwatch_event_rule",
    "body": [
      "resource \"aws_cloudwatch_event_rule\" \"console\" {",
      "  name        = \"capture-aws-sign-in\"",
      "  description = \"Capture each AWS Console Sign In\"",
      "",
      "  event_pattern = <<PATTERN",
      "{",
      "  \"detail-type\": [",
      "    \"AWS Console Sign In via CloudTrail\"",
      "  ]",
      "}",
      "PATTERN",
      "}",
      "",
      "resource \"aws_cloudwatch_event_target\" \"sns\" {",
      "  rule      = \"${aws_cloudwatch_event_rule.console.name}\"",
      "  target_id = \"SendToSNS\"",
      "  arn       = \"${aws_sns_topic.aws_logins.arn}\"",
      "}",
      "",
      "resource \"aws_sns_topic\" \"aws_logins\" {",
      "  name = \"aws-console-logins\"",
      "}",
      "",
      "resource \"aws_sns_topic_policy\" \"default\" {",
      "  arn    = \"${aws_sns_topic.aws_logins.arn}\"",
      "  policy = \"${data.aws_iam_policy_document.sns_topic_policy.json}\"",
      "}",
      "",
      "data \"aws_iam_policy_document\" \"sns_topic_policy\" {",
      "  statement {",
      "    effect  = \"Allow\"",
      "    actions = [\"SNS:Publish\"]",
      "",
      "    principals {",
      "      type        = \"Service\"",
      "      identifiers = [\"events.amazonaws.com\"]",
      "    }",
      "",
      "    resources = [\"${aws_sns_topic.aws_logins.arn}\"]",
      "  }",
      "}"
    ]
  },
  "aws-resource-cloudwatch_event_target": {
    "description": "Defines cloudwatch_event_target",
    "prefix": "tf-aws-resource-cloudwatch_event_target",
    "body": [
      "resource \"aws_cloudwatch_event_target\" \"yada\" {",
      "  target_id = \"Yada\"",
      "  rule      = \"${aws_cloudwatch_event_rule.console.name}\"",
      "  arn       = \"${aws_kinesis_stream.test_stream.arn}\"",
      "",
      "  run_command_targets {",
      "    key    = \"tag:Name\"",
      "    values = [\"FooBar\"]",
      "  }",
      "",
      "  run_command_targets {",
      "    key    = \"InstanceIds\"",
      "    values = [\"i-162058cd308bffec2\"]",
      "  }",
      "}",
      "",
      "resource \"aws_cloudwatch_event_rule\" \"console\" {",
      "  name        = \"capture-ec2-scaling-events\"",
      "  description = \"Capture all EC2 scaling events\"",
      "",
      "  event_pattern = <<PATTERN",
      "{",
      "  \"source\": [",
      "    \"aws.autoscaling\"",
      "  ],",
      "  \"detail-type\": [",
      "    \"EC2 Instance Launch Successful\",",
      "    \"EC2 Instance Terminate Successful\",",
      "    \"EC2 Instance Launch Unsuccessful\",",
      "    \"EC2 Instance Terminate Unsuccessful\"",
      "  ]",
      "}",
      "PATTERN",
      "}",
      "",
      "resource \"aws_kinesis_stream\" \"test_stream\" {",
      "  name        = \"terraform-kinesis-test\"",
      "  shard_count = 1",
      "}"
    ]
  },
  "aws-resource-cloudwatch_log_destination": {
    "description": "Defines cloudwatch_log_destination",
    "prefix": "tf-aws-resource-cloudwatch_log_destination",
    "body": [
      "resource \"aws_cloudwatch_log_destination\" \"test_destination\" {",
      "  name       = \"test_destination\"",
      "  role_arn   = \"${aws_iam_role.iam_for_cloudwatch.arn}\"",
      "  target_arn = \"${aws_kinesis_stream.kinesis_for_cloudwatch.arn}\"",
      "}"
    ]
  },
  "aws-resource-cloudwatch_log_destination_policy": {
    "description": "Defines cloudwatch_log_destination_policy",
    "prefix": "tf-aws-resource-cloudwatch_log_destination_policy",
    "body": [
      "resource \"aws_cloudwatch_log_destination\" \"test_destination\" {",
      "  name       = \"test_destination\"",
      "  role_arn   = \"${aws_iam_role.iam_for_cloudwatch.arn}\"",
      "  target_arn = \"${aws_kinesis_stream.kinesis_for_cloudwatch.arn}\"",
      "}",
      "",
      "data \"aws_iam_policy_document\" \"test_destination_policy\" {",
      "  statement {",
      "    effect = \"Allow\"",
      "",
      "    principals {",
      "      type = \"AWS\"",
      "",
      "      identifiers = [",
      "        \"123456789012\",",
      "      ]",
      "    }",
      "",
      "    actions = [",
      "      \"logs:PutSubscriptionFilter\",",
      "    ]",
      "",
      "    resources = [",
      "      \"${aws_cloudwatch_log_destination.test_destination.arn}\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"aws_cloudwatch_log_destination_policy\" \"test_destination_policy\" {",
      "  destination_name = \"${aws_cloudwatch_log_destination.test_destination.name}\"",
      "  access_policy    = \"${data.aws_iam_policy_document.test_destination_policy.json}\"",
      "}"
    ]
  },
  "aws-resource-cloudwatch_log_group": {
    "description": "Defines cloudwatch_log_group",
    "prefix": "tf-aws-resource-cloudwatch_log_group",
    "body": [
      "resource \"aws_cloudwatch_log_group\" \"yada\" {",
      "  name = \"Yada\"",
      "",
      "  tags = {",
      "    Environment = \"production\"",
      "    Application = \"serviceA\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-cloudwatch_log_metric_filter": {
    "description": "Defines cloudwatch_log_metric_filter",
    "prefix": "tf-aws-resource-cloudwatch_log_metric_filter",
    "body": [
      "resource \"aws_cloudwatch_log_metric_filter\" \"yada\" {",
      "  name           = \"MyAppAccessCount\"",
      "  pattern        = \"\"",
      "  log_group_name = \"${aws_cloudwatch_log_group.dada.name}\"",
      "",
      "  metric_transformation {",
      "    name      = \"EventCount\"",
      "    namespace = \"YourNamespace\"",
      "    value     = \"1\"",
      "  }",
      "}",
      "",
      "resource \"aws_cloudwatch_log_group\" \"dada\" {",
      "  name = \"MyApp/access.log\"",
      "}"
    ]
  },
  "aws-resource-cloudwatch_log_resource_policy": {
    "description": "Defines cloudwatch_log_resource_policy",
    "prefix": "tf-aws-resource-cloudwatch_log_resource_policy",
    "body": [
      "data \"aws_iam_policy_document\" \"elasticsearch-log-publishing-policy\" {",
      "  statement {",
      "    actions = [",
      "      \"logs:CreateLogStream\",",
      "      \"logs:PutLogEvents\",",
      "      \"logs:PutLogEventsBatch\",",
      "    ]",
      "",
      "    resources = [\"arn:aws:logs:*\"]",
      "",
      "    principals {",
      "      identifiers = [\"es.amazonaws.com\"]",
      "      type        = \"Service\"",
      "    }",
      "  }",
      "}",
      "",
      "resource \"aws_cloudwatch_log_resource_policy\" \"elasticsearch-log-publishing-policy\" {",
      "  policy_document = \"${data.aws_iam_policy_document.elasticsearch-log-publishing-policy.json}\"",
      "  policy_name     = \"elasticsearch-log-publishing-policy\"",
      "}"
    ]
  },
  "aws-resource-cloudwatch_log_stream": {
    "description": "Defines cloudwatch_log_stream",
    "prefix": "tf-aws-resource-cloudwatch_log_stream",
    "body": [
      "resource \"aws_cloudwatch_log_group\" \"yada\" {",
      "  name = \"Yada\"",
      "}",
      "",
      "resource \"aws_cloudwatch_log_stream\" \"foo\" {",
      "  name           = \"SampleLogStream1234\"",
      "  log_group_name = \"${aws_cloudwatch_log_group.yada.name}\"",
      "}"
    ]
  },
  "aws-resource-cloudwatch_log_subscription_filter": {
    "description": "Defines cloudwatch_log_subscription_filter",
    "prefix": "tf-aws-resource-cloudwatch_log_subscription_filter",
    "body": [
      "resource \"aws_cloudwatch_log_subscription_filter\" \"test_lambdafunction_logfilter\" {",
      "  name            = \"test_lambdafunction_logfilter\"",
      "  role_arn        = \"${aws_iam_role.iam_for_lambda.arn}\"",
      "  log_group_name  = \"/aws/lambda/example_lambda_name\"",
      "  filter_pattern  = \"logtype test\"",
      "  destination_arn = \"${aws_kinesis_stream.test_logstream.arn}\"",
      "  distribution    = \"Random\"",
      "}"
    ]
  },
  "aws-resource-cloudwatch_metric_alarm": {
    "description": "Defines cloudwatch_metric_alarm",
    "prefix": "tf-aws-resource-cloudwatch_metric_alarm",
    "body": [
      "resource \"aws_cloudwatch_metric_alarm\" \"foobar\" {",
      "  alarm_name                = \"terraform-test-foobar5\"",
      "  comparison_operator       = \"GreaterThanOrEqualToThreshold\"",
      "  evaluation_periods        = \"2\"",
      "  metric_name               = \"CPUUtilization\"",
      "  namespace                 = \"AWS/EC2\"",
      "  period                    = \"120\"",
      "  statistic                 = \"Average\"",
      "  threshold                 = \"80\"",
      "  alarm_description         = \"This metric monitors ec2 cpu utilization\"",
      "  insufficient_data_actions = []",
      "}"
    ]
  },
  "aws-resource-codebuild_project": {
    "description": "Defines codebuild_project",
    "prefix": "tf-aws-resource-codebuild_project",
    "body": [
      "resource \"aws_s3_bucket\" \"example\" {",
      "  bucket = \"example\"",
      "  acl    = \"private\"",
      "}",
      "",
      "resource \"aws_iam_role\" \"example\" {",
      "  name = \"example\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Effect\": \"Allow\",",
      "      \"Principal\": {",
      "        \"Service\": \"codebuild.amazonaws.com\"",
      "      },",
      "      \"Action\": \"sts:AssumeRole\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_role_policy\" \"example\" {",
      "  role = \"${aws_iam_role.example.name}\"",
      "",
      "  policy = <<POLICY",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Effect\": \"Allow\",",
      "      \"Resource\": [",
      "        \"*\"",
      "      ],",
      "      \"Action\": [",
      "        \"logs:CreateLogGroup\",",
      "        \"logs:CreateLogStream\",",
      "        \"logs:PutLogEvents\"",
      "      ]",
      "    },",
      "    {",
      "      \"Effect\": \"Allow\",",
      "      \"Action\": [",
      "        \"ec2:CreateNetworkInterface\",",
      "        \"ec2:DescribeDhcpOptions\",",
      "        \"ec2:DescribeNetworkInterfaces\",",
      "        \"ec2:DeleteNetworkInterface\",",
      "        \"ec2:DescribeSubnets\",",
      "        \"ec2:DescribeSecurityGroups\",",
      "        \"ec2:DescribeVpcs\"",
      "      ],",
      "      \"Resource\": \"*\"",
      "    },",
      "    {",
      "      \"Effect\": \"Allow\",",
      "      \"Action\": [",
      "        \"s3:*\"",
      "      ],",
      "      \"Resource\": [",
      "        \"${aws_s3_bucket.example.arn}\",",
      "        \"${aws_s3_bucket.example.arn}/*\"",
      "      ]",
      "    }",
      "  ]",
      "}",
      "POLICY",
      "}",
      "",
      "resource \"aws_codebuild_project\" \"example\" {",
      "  name          = \"test-project\"",
      "  description   = \"test_codebuild_project\"",
      "  build_timeout = \"5\"",
      "  service_role  = \"${aws_iam_role.example.arn}\"",
      "",
      "  artifacts {",
      "    type = \"NO_ARTIFACTS\"",
      "  }",
      "",
      "  cache {",
      "    type     = \"S3\"",
      "    location = \"${aws_s3_bucket.example.bucket}\"",
      "  }",
      "",
      "  environment {",
      "    compute_type                = \"BUILD_GENERAL1_SMALL\"",
      "    image                       = \"aws/codebuild/standard:1.0\"",
      "    type                        = \"LINUX_CONTAINER\"",
      "    image_pull_credentials_type = \"CODEBUILD\"",
      "",
      "    environment_variable {",
      "      name  = \"SOME_KEY1\"",
      "      value = \"SOME_VALUE1\"",
      "    }",
      "",
      "    environment_variable {",
      "      name  = \"SOME_KEY2\"",
      "      value = \"SOME_VALUE2\"",
      "      type  = \"PARAMETER_STORE\"",
      "    }",
      "  }",
      "",
      "  logs_config {",
      "    cloudwatch_logs {",
      "      group_name = \"log-group\"",
      "      stream_name = \"log-stream\"",
      "    }",
      "",
      "    s3_logs {",
      "      status = \"ENABLED\"",
      "      location = \"${aws_s3_bucket.example.id}/build-log\"",
      "    }",
      "  }",
      "",
      "  source {",
      "    type            = \"GITHUB\"",
      "    location        = \"https://github.com/mitchellh/packer.git\"",
      "    git_clone_depth = 1",
      "  }",
      "",
      "  vpc_config {",
      "    vpc_id = \"vpc-725fca\"",
      "",
      "    subnets = [",
      "      \"subnet-ba35d2e0\",",
      "      \"subnet-ab129af1\",",
      "    ]",
      "",
      "    security_group_ids = [",
      "      \"sg-f9f27d91\",",
      "      \"sg-e4f48g23\",",
      "    ]",
      "  }",
      "",
      "  tags = {",
      "    Environment = \"Test\"",
      "  }",
      "}",
      "",
      "resource \"aws_codebuild_project\" \"project-with-cache\" {",
      "  name          = \"test-project-cache\"",
      "  description   = \"test_codebuild_project_cache\"",
      "  build_timeout = \"5\"",
      "  service_role  = \"${aws_iam_role.example.arn}\"",
      "",
      "  artifacts {",
      "    type = \"NO_ARTIFACTS\"",
      "  }",
      "",
      "  cache {",
      "    type  = \"LOCAL\"",
      "    modes = [\"LOCAL_DOCKER_LAYER_CACHE\", \"LOCAL_SOURCE_CACHE\"]",
      "  }",
      "",
      "  environment {",
      "    compute_type                = \"BUILD_GENERAL1_SMALL\"",
      "    image                       = \"aws/codebuild/standard:1.0\"",
      "    type                        = \"LINUX_CONTAINER\"",
      "    image_pull_credentials_type = \"CODEBUILD\"",
      "",
      "    environment_variable {",
      "      name  = \"SOME_KEY1\"",
      "      value = \"SOME_VALUE1\"",
      "    }",
      "  }",
      "",
      "  source {",
      "    type            = \"GITHUB\"",
      "    location        = \"https://github.com/mitchellh/packer.git\"",
      "    git_clone_depth = 1",
      "  }",
      "",
      "  tags = {",
      "    Environment = \"Test\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-codebuild_webhook": {
    "description": "Defines codebuild_webhook",
    "prefix": "tf-aws-resource-codebuild_webhook",
    "body": [
      "resource \"aws_codebuild_webhook\" \"example\" {",
      "  project_name = \"${aws_codebuild_project.example.name}\"",
      "  ",
      "  filter_group {",
      "    filter {",
      "      type = \"EVENT\"",
      "      pattern = \"PUSH\"",
      "    }",
      "",
      "    filter {",
      "      type = \"HEAD_REF\"",
      "      pattern = \"master\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-codecommit_repository": {
    "description": "Defines codecommit_repository",
    "prefix": "tf-aws-resource-codecommit_repository",
    "body": [
      "resource \"aws_codecommit_repository\" \"test\" {",
      "  repository_name = \"MyTestRepository\"",
      "  description     = \"This is the Sample App Repository\"",
      "}"
    ]
  },
  "aws-resource-codecommit_trigger": {
    "description": "Defines codecommit_trigger",
    "prefix": "tf-aws-resource-codecommit_trigger",
    "body": [
      "resource \"aws_codecommit_trigger\" \"test\" {",
      "  depends_on      = [\"aws_codecommit_repository.test\"]",
      "  repository_name = \"my_test_repository\"",
      "",
      "  trigger {",
      "    name            = \"noname\"",
      "    events          = [\"all\"]",
      "    destination_arn = \"${aws_sns_topic.test.arn}\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-codedeploy_app": {
    "description": "Defines codedeploy_app",
    "prefix": "tf-aws-resource-codedeploy_app",
    "body": [
      "resource \"aws_codedeploy_app\" \"example\" {",
      "  compute_platform = \"ECS\"",
      "  name             = \"example\"",
      "}"
    ]
  },
  "aws-resource-codedeploy_deployment_config": {
    "description": "Defines codedeploy_deployment_config",
    "prefix": "tf-aws-resource-codedeploy_deployment_config",
    "body": [
      "resource \"aws_codedeploy_deployment_config\" \"foo\" {",
      "  deployment_config_name = \"test-deployment-config\"",
      "",
      "  minimum_healthy_hosts {",
      "    type  = \"HOST_COUNT\"",
      "    value = 2",
      "  }",
      "}",
      "",
      "resource \"aws_codedeploy_deployment_group\" \"foo\" {",
      "  app_name               = \"${aws_codedeploy_app.foo_app.name}\"",
      "  deployment_group_name  = \"bar\"",
      "  service_role_arn       = \"${aws_iam_role.foo_role.arn}\"",
      "  deployment_config_name = \"${aws_codedeploy_deployment_config.foo.id}\"",
      "",
      "  ec2_tag_filter {",
      "    key   = \"filterkey\"",
      "    type  = \"KEY_AND_VALUE\"",
      "    value = \"filtervalue\"",
      "  }",
      "",
      "  trigger_configuration {",
      "    trigger_events     = [\"DeploymentFailure\"]",
      "    trigger_name       = \"foo-trigger\"",
      "    trigger_target_arn = \"foo-topic-arn\"",
      "  }",
      "",
      "  auto_rollback_configuration {",
      "    enabled = true",
      "    events  = [\"DEPLOYMENT_FAILURE\"]",
      "  }",
      "",
      "  alarm_configuration {",
      "    alarms  = [\"my-alarm-name\"]",
      "    enabled = true",
      "  }",
      "}"
    ]
  },
  "aws-resource-codedeploy_deployment_group": {
    "description": "Defines codedeploy_deployment_group",
    "prefix": "tf-aws-resource-codedeploy_deployment_group",
    "body": [
      "resource \"aws_iam_role\" \"example\" {",
      "  name = \"example-role\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Sid\": \"\",",
      "      \"Effect\": \"Allow\",",
      "      \"Principal\": {",
      "        \"Service\": \"codedeploy.amazonaws.com\"",
      "      },",
      "      \"Action\": \"sts:AssumeRole\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_role_policy_attachment\" \"AWSCodeDeployRole\" {",
      "  policy_arn = \"arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole\"",
      "  role       = \"${aws_iam_role.example.name}\"",
      "}",
      "",
      "resource \"aws_codedeploy_app\" \"example\" {",
      "  name = \"example-app\"",
      "}",
      "",
      "resource \"aws_sns_topic\" \"example\" {",
      "  name = \"example-topic\"",
      "}",
      "",
      "resource \"aws_codedeploy_deployment_group\" \"example\" {",
      "  app_name              = \"${aws_codedeploy_app.example.name}\"",
      "  deployment_group_name = \"example-group\"",
      "  service_role_arn      = \"${aws_iam_role.example.arn}\"",
      "",
      "  ec2_tag_set {",
      "    ec2_tag_filter {",
      "      key   = \"filterkey1\"",
      "      type  = \"KEY_AND_VALUE\"",
      "      value = \"filtervalue\"",
      "    }",
      "",
      "    ec2_tag_filter {",
      "      key   = \"filterkey2\"",
      "      type  = \"KEY_AND_VALUE\"",
      "      value = \"filtervalue\"",
      "    }",
      "  }",
      "",
      "  trigger_configuration {",
      "    trigger_events     = [\"DeploymentFailure\"]",
      "    trigger_name       = \"example-trigger\"",
      "    trigger_target_arn = \"${aws_sns_topic.example.arn}\"",
      "  }",
      "",
      "  auto_rollback_configuration {",
      "    enabled = true",
      "    events  = [\"DEPLOYMENT_FAILURE\"]",
      "  }",
      "",
      "  alarm_configuration {",
      "    alarms  = [\"my-alarm-name\"]",
      "    enabled = true",
      "  }",
      "}"
    ]
  },
  "aws-resource-codepipeline": {
    "description": "Defines codepipeline",
    "prefix": "tf-aws-resource-codepipeline",
    "body": [
      "resource \"aws_s3_bucket\" \"codepipeline_bucket\" {",
      "  bucket = \"test-bucket\"",
      "  acl    = \"private\"",
      "}",
      "",
      "resource \"aws_iam_role\" \"codepipeline_role\" {",
      "  name = \"test-role\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Effect\": \"Allow\",",
      "      \"Principal\": {",
      "        \"Service\": \"codepipeline.amazonaws.com\"",
      "      },",
      "      \"Action\": \"sts:AssumeRole\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_role_policy\" \"codepipeline_policy\" {",
      "  name = \"codepipeline_policy\"",
      "  role = \"${aws_iam_role.codepipeline_role.id}\"",
      "",
      "  policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Effect\":\"Allow\",",
      "      \"Action\": [",
      "        \"s3:GetObject\",",
      "        \"s3:GetObjectVersion\",",
      "        \"s3:GetBucketVersioning\"",
      "      ],",
      "      \"Resource\": [",
      "        \"${aws_s3_bucket.codepipeline_bucket.arn}\",",
      "        \"${aws_s3_bucket.codepipeline_bucket.arn}/*\"",
      "      ]",
      "    },",
      "    {",
      "      \"Effect\": \"Allow\",",
      "      \"Action\": [",
      "        \"codebuild:BatchGetBuilds\",",
      "        \"codebuild:StartBuild\"",
      "      ],",
      "      \"Resource\": \"*\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "data \"aws_kms_alias\" \"s3kmskey\" {",
      "  name = \"alias/myKmsKey\"",
      "}",
      "",
      "resource \"aws_codepipeline\" \"codepipeline\" {",
      "  name     = \"tf-test-pipeline\"",
      "  role_arn = \"${aws_iam_role.codepipeline_role.arn}\"",
      "",
      "  artifact_store {",
      "    location = \"${aws_s3_bucket.codepipeline_bucket.bucket}\"",
      "    type     = \"S3\"",
      "",
      "    encryption_key {",
      "      id   = \"${data.aws_kms_alias.s3kmskey.arn}\"",
      "      type = \"KMS\"",
      "    }",
      "  }",
      "",
      "  stage {",
      "    name = \"Source\"",
      "",
      "    action {",
      "      name             = \"Source\"",
      "      category         = \"Source\"",
      "      owner            = \"ThirdParty\"",
      "      provider         = \"GitHub\"",
      "      version          = \"1\"",
      "      output_artifacts = [\"source_output\"]",
      "",
      "      configuration = {",
      "        Owner  = \"my-organization\"",
      "        Repo   = \"test\"",
      "        Branch = \"master\"",
      "      }",
      "    }",
      "  }",
      "",
      "  stage {",
      "    name = \"Build\"",
      "",
      "    action {",
      "      name             = \"Build\"",
      "      category         = \"Build\"",
      "      owner            = \"AWS\"",
      "      provider         = \"CodeBuild\"",
      "      input_artifacts  = [\"source_output\"]",
      "      output_artifacts = [\"build_output\"]",
      "      version          = \"1\"",
      "",
      "      configuration = {",
      "        ProjectName = \"test\"",
      "      }",
      "    }",
      "  }",
      "",
      "  stage {",
      "    name = \"Deploy\"",
      "",
      "    action {",
      "      name            = \"Deploy\"",
      "      category        = \"Deploy\"",
      "      owner           = \"AWS\"",
      "      provider        = \"CloudFormation\"",
      "      input_artifacts = [\"build_output\"]",
      "      version         = \"1\"",
      "",
      "      configuration = {",
      "        ActionMode     = \"REPLACE_ON_FAILURE\"",
      "        Capabilities   = \"CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM\"",
      "        OutputFileName = \"CreateStackOutput.json\"",
      "        StackName      = \"MyStack\"",
      "        TemplatePath   = \"build_output::sam-templated.yaml\"",
      "      }",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-codepipeline_webhook": {
    "description": "Defines codepipeline_webhook",
    "prefix": "tf-aws-resource-codepipeline_webhook",
    "body": [
      "resource \"aws_codepipeline\" \"bar\" {",
      "  name     = \"tf-test-pipeline\"",
      "  role_arn = \"${aws_iam_role.bar.arn}\"",
      "",
      "  artifact_store {",
      "    location = \"${aws_s3_bucket.bar.bucket}\"",
      "    type     = \"S3\"",
      "",
      "    encryption_key {",
      "      id   = \"${data.aws_kms_alias.s3kmskey.arn}\"",
      "      type = \"KMS\"",
      "    }",
      "  }",
      "",
      "  stage {",
      "    name = \"Source\"",
      "",
      "    action {",
      "      name             = \"Source\"",
      "      category         = \"Source\"",
      "      owner            = \"ThirdParty\"",
      "      provider         = \"GitHub\"",
      "      version          = \"1\"",
      "      output_artifacts = [\"test\"]",
      "",
      "      configuration = {",
      "        Owner  = \"my-organization\"",
      "        Repo   = \"test\"",
      "        Branch = \"master\"",
      "      }",
      "    }",
      "  }",
      "",
      "  stage {",
      "    name = \"Build\"",
      "",
      "    action {",
      "      name            = \"Build\"",
      "      category        = \"Build\"",
      "      owner           = \"AWS\"",
      "      provider        = \"CodeBuild\"",
      "      input_artifacts = [\"test\"]",
      "      version         = \"1\"",
      "",
      "      configuration = {",
      "        ProjectName = \"test\"",
      "      }",
      "    }",
      "  }",
      "}",
      "",
      "# A shared secret between GitHub and AWS that allows AWS",
      "# CodePipeline to authenticate the request came from GitHub.",
      "# Would probably be better to pull this from the environment",
      "# or something like SSM Parameter Store.",
      "locals {",
      "  webhook_secret = \"super-secret\"",
      "}",
      "",
      "resource \"aws_codepipeline_webhook\" \"bar\" {",
      "  name            = \"test-webhook-github-bar\"",
      "  authentication  = \"GITHUB_HMAC\"",
      "  target_action   = \"Source\"",
      "  target_pipeline = \"${aws_codepipeline.bar.name}\"",
      "",
      "  authentication_configuration {",
      "    secret_token = \"${local.webhook_secret}\"",
      "  }",
      "",
      "  filter {",
      "    json_path    = \"$.ref\"",
      "    match_equals = \"refs/heads/{Branch}\"",
      "  }",
      "}",
      "",
      "# Wire the CodePipeline webhook into a GitHub repository.",
      "resource \"github_repository_webhook\" \"bar\" {",
      "  repository = \"${github_repository.repo.name}\"",
      "",
      "  name = \"web\"",
      "",
      "  configuration {",
      "    url          = \"${aws_codepipeline_webhook.bar.url}\"",
      "    content_type = \"json\"",
      "    insecure_ssl = true",
      "    secret       = \"${local.webhook_secret}\"",
      "  }",
      "",
      "  events = [\"push\"]",
      "}"
    ]
  },
  "aws-resource-cognito_identity_pool": {
    "description": "Defines cognito_identity_pool",
    "prefix": "tf-aws-resource-cognito_identity_pool",
    "body": [
      "resource \"aws_iam_saml_provider\" \"default\" {",
      "  name                   = \"my-saml-provider\"",
      "  saml_metadata_document = \"${file(\"saml-metadata.xml\")}\"",
      "}",
      "",
      "resource \"aws_cognito_identity_pool\" \"main\" {",
      "  identity_pool_name               = \"identity pool\"",
      "  allow_unauthenticated_identities = false",
      "",
      "  cognito_identity_providers {",
      "    client_id               = \"6lhlkkfbfb4q5kpp90urffae\"",
      "    provider_name           = \"cognito-idp.us-east-1.amazonaws.com/us-east-1_Tv0493apJ\"",
      "    server_side_token_check = false",
      "  }",
      "",
      "  cognito_identity_providers {",
      "    client_id               = \"7kodkvfqfb4qfkp39eurffae\"",
      "    provider_name           = \"cognito-idp.us-east-1.amazonaws.com/eu-west-1_Zr231apJu\"",
      "    server_side_token_check = false",
      "  }",
      "",
      "  supported_login_providers = {",
      "    \"graph.facebook.com\"  = \"7346241598935552\"",
      "    \"accounts.google.com\" = \"123456789012.apps.googleusercontent.com\"",
      "  }",
      "",
      "  saml_provider_arns           = [\"${aws_iam_saml_provider.default.arn}\"]",
      "  openid_connect_provider_arns = [\"arn:aws:iam::123456789012:oidc-provider/foo.example.com\"]",
      "}"
    ]
  },
  "aws-resource-cognito_identity_pool_roles_attachment": {
    "description": "Defines cognito_identity_pool_roles_attachment",
    "prefix": "tf-aws-resource-cognito_identity_pool_roles_attachment",
    "body": [
      "resource \"aws_cognito_identity_pool\" \"main\" {",
      "  identity_pool_name               = \"identity pool\"",
      "  allow_unauthenticated_identities = false",
      "",
      "  supported_login_providers = {",
      "    \"graph.facebook.com\" = \"7346241598935555\"",
      "  }",
      "}",
      "",
      "resource \"aws_iam_role\" \"authenticated\" {",
      "  name = \"cognito_authenticated\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Effect\": \"Allow\",",
      "      \"Principal\": {",
      "        \"Federated\": \"cognito-identity.amazonaws.com\"",
      "      },",
      "      \"Action\": \"sts:AssumeRoleWithWebIdentity\",",
      "      \"Condition\": {",
      "        \"StringEquals\": {",
      "          \"cognito-identity.amazonaws.com:aud\": \"${aws_cognito_identity_pool.main.id}\"",
      "        },",
      "        \"ForAnyValue:StringLike\": {",
      "          \"cognito-identity.amazonaws.com:amr\": \"authenticated\"",
      "        }",
      "      }",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_role_policy\" \"authenticated\" {",
      "  name = \"authenticated_policy\"",
      "  role = \"${aws_iam_role.authenticated.id}\"",
      "",
      "  policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Effect\": \"Allow\",",
      "      \"Action\": [",
      "        \"mobileanalytics:PutEvents\",",
      "        \"cognito-sync:*\",",
      "        \"cognito-identity:*\"",
      "      ],",
      "      \"Resource\": [",
      "        \"*\"",
      "      ]",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_cognito_identity_pool_roles_attachment\" \"main\" {",
      "  identity_pool_id = \"${aws_cognito_identity_pool.main.id}\"",
      "",
      "  role_mapping {",
      "    identity_provider         = \"graph.facebook.com\"",
      "    ambiguous_role_resolution = \"AuthenticatedRole\"",
      "    type                      = \"Rules\"",
      "",
      "    mapping_rule {",
      "      claim      = \"isAdmin\"",
      "      match_type = \"Equals\"",
      "      role_arn   = \"${aws_iam_role.authenticated.arn}\"",
      "      value      = \"paid\"",
      "    }",
      "  }",
      "",
      "  roles = {",
      "    \"authenticated\" = \"${aws_iam_role.authenticated.arn}\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-cognito_identity_provider": {
    "description": "Defines cognito_identity_provider",
    "prefix": "tf-aws-resource-cognito_identity_provider",
    "body": [
      "resource \"aws_cognito_user_pool\" \"example\" {",
      "  name                     = \"example-pool\"",
      "  auto_verified_attributes = [\"email\"]",
      "}",
      "",
      "resource \"aws_cognito_identity_provider\" \"example_provider\" {",
      "  user_pool_id  = \"${aws_cognito_user_pool.example.id}\"",
      "  provider_name = \"Google\"",
      "  provider_type = \"Google\"",
      "",
      "  provider_details = {",
      "    authorize_scopes = \"email\"",
      "    client_id        = \"your client_id\"",
      "    client_secret    = \"your client_secret\"",
      "  }",
      "",
      "  attribute_mapping = {",
      "    email    = \"email\"",
      "    username = \"sub\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-cognito_resource_server": {
    "description": "Defines cognito_resource_server",
    "prefix": "tf-aws-resource-cognito_resource_server",
    "body": [
      "resource \"aws_cognito_user_pool\" \"pool\" {",
      "  name = \"pool\"",
      "}",
      "",
      "resource \"aws_cognito_resource_server\" \"resource\" {",
      "  identifier = \"https://example.com\"",
      "  name       = \"example\"",
      "",
      "  user_pool_id = \"${aws_cognito_user_pool.pool.id}\"",
      "}"
    ]
  },
  "aws-resource-cognito_user_group": {
    "description": "Defines cognito_user_group",
    "prefix": "tf-aws-resource-cognito_user_group",
    "body": [
      "resource \"aws_cognito_user_pool\" \"main\" {",
      "  name = \"identity pool\"",
      "}",
      "",
      "resource \"aws_iam_role\" \"group_role\" {",
      "  name = \"user-group-role\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Sid\": \"\",",
      "      \"Effect\": \"Allow\",",
      "      \"Principal\": {",
      "        \"Federated\": \"cognito-identity.amazonaws.com\"",
      "      },",
      "      \"Action\": \"sts:AssumeRoleWithWebIdentity\",",
      "      \"Condition\": {",
      "        \"StringEquals\": {",
      "          \"cognito-identity.amazonaws.com:aud\": \"us-east-1:12345678-dead-beef-cafe-123456790ab\"",
      "        },",
      "        \"ForAnyValue:StringLike\": {",
      "          \"cognito-identity.amazonaws.com:amr\": \"authenticated\"",
      "        }",
      "      }",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_cognito_user_group\" \"main\" {",
      "  name         = \"user-group\"",
      "  user_pool_id = \"${aws_cognito_user_pool.main.id}\"",
      "  description  = \"Managed by Terraform\"",
      "  precedence   = 42",
      "  role_arn     = \"${aws_iam_role.group_role.arn}\"",
      "}"
    ]
  },
  "aws-resource-cognito_user_pool": {
    "description": "Defines cognito_user_pool",
    "prefix": "tf-aws-resource-cognito_user_pool",
    "body": [
      "resource \"aws_cognito_user_pool\" \"pool\" {",
      "  name = \"mypool\"",
      "}"
    ]
  },
  "aws-resource-cognito_user_pool_client": {
    "description": "Defines cognito_user_pool_client",
    "prefix": "tf-aws-resource-cognito_user_pool_client",
    "body": [
      "resource \"aws_cognito_user_pool\" \"pool\" {",
      "  name = \"pool\"",
      "}",
      "",
      "resource \"aws_cognito_user_pool_client\" \"client\" {",
      "  name = \"client\"",
      "",
      "  user_pool_id = \"${aws_cognito_user_pool.pool.id}\"",
      "}"
    ]
  },
  "aws-resource-cognito_user_pool_domain": {
    "description": "Defines cognito_user_pool_domain",
    "prefix": "tf-aws-resource-cognito_user_pool_domain",
    "body": [
      "resource \"aws_cognito_user_pool_domain\" \"main\" {",
      "  domain       = \"example-domain\"",
      "  user_pool_id = \"${aws_cognito_user_pool.example.id}\"",
      "}",
      "",
      "resource \"aws_cognito_user_pool\" \"example\" {",
      "  name = \"example-pool\"",
      "}"
    ]
  },
  "aws-resource-config_aggregate_authorization": {
    "description": "Defines config_aggregate_authorization",
    "prefix": "tf-aws-resource-config_aggregate_authorization",
    "body": [
      "resource \"aws_config_aggregate_authorization\" \"example\" {",
      "  account_id = \"123456789012\"",
      "  region     = \"eu-west-2\"",
      "}"
    ]
  },
  "aws-resource-config_config_rule": {
    "description": "Defines config_config_rule",
    "prefix": "tf-aws-resource-config_config_rule",
    "body": [
      "resource \"aws_config_config_rule\" \"r\" {",
      "  name = \"example\"",
      "",
      "  source {",
      "    owner             = \"AWS\"",
      "    source_identifier = \"S3_BUCKET_VERSIONING_ENABLED\"",
      "  }",
      "",
      "  depends_on = [\"aws_config_configuration_recorder.foo\"]",
      "}",
      "",
      "resource \"aws_config_configuration_recorder\" \"foo\" {",
      "  name     = \"example\"",
      "  role_arn = \"${aws_iam_role.r.arn}\"",
      "}",
      "",
      "resource \"aws_iam_role\" \"r\" {",
      "  name = \"my-awsconfig-role\"",
      "",
      "  assume_role_policy = <<POLICY",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": \"sts:AssumeRole\",",
      "      \"Principal\": {",
      "        \"Service\": \"config.amazonaws.com\"",
      "      },",
      "      \"Effect\": \"Allow\",",
      "      \"Sid\": \"\"",
      "    }",
      "  ]",
      "}",
      "POLICY",
      "}",
      "",
      "resource \"aws_iam_role_policy\" \"p\" {",
      "  name = \"my-awsconfig-policy\"",
      "  role = \"${aws_iam_role.r.id}\"",
      "",
      "  policy = <<POLICY",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "  \t{",
      "  \t\t\"Action\": \"config:Put*\",",
      "  \t\t\"Effect\": \"Allow\",",
      "  \t\t\"Resource\": \"*\"",
      "",
      "  \t}",
      "  ]",
      "}",
      "POLICY",
      "}"
    ]
  },
  "aws-resource-config_configuration_aggregator": {
    "description": "Defines config_configuration_aggregator",
    "prefix": "tf-aws-resource-config_configuration_aggregator",
    "body": [
      "resource \"aws_config_configuration_aggregator\" \"account\" {",
      "  name = \"example\"",
      "",
      "  account_aggregation_source {",
      "    account_ids = [\"123456789012\"]",
      "    regions     = [\"us-west-2\"]",
      "  }",
      "}"
    ]
  },
  "aws-resource-config_configuration_recorder": {
    "description": "Defines config_configuration_recorder",
    "prefix": "tf-aws-resource-config_configuration_recorder",
    "body": [
      "resource \"aws_config_configuration_recorder\" \"foo\" {",
      "  name     = \"example\"",
      "  role_arn = \"${aws_iam_role.r.arn}\"",
      "}",
      "",
      "resource \"aws_iam_role\" \"r\" {",
      "  name = \"awsconfig-example\"",
      "",
      "  assume_role_policy = <<POLICY",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": \"sts:AssumeRole\",",
      "      \"Principal\": {",
      "        \"Service\": \"config.amazonaws.com\"",
      "      },",
      "      \"Effect\": \"Allow\",",
      "      \"Sid\": \"\"",
      "    }",
      "  ]",
      "}",
      "POLICY",
      "}"
    ]
  },
  "aws-resource-config_configuration_recorder_status": {
    "description": "Defines config_configuration_recorder_status",
    "prefix": "tf-aws-resource-config_configuration_recorder_status",
    "body": [
      "resource \"aws_config_configuration_recorder_status\" \"foo\" {",
      "  name       = \"${aws_config_configuration_recorder.foo.name}\"",
      "  is_enabled = true",
      "  depends_on = [\"aws_config_delivery_channel.foo\"]",
      "}",
      "",
      "resource \"aws_iam_role_policy_attachment\" \"a\" {",
      "  role       = \"${aws_iam_role.r.name}\"",
      "  policy_arn = \"arn:aws:iam::aws:policy/service-role/AWSConfigRole\"",
      "}",
      "",
      "resource \"aws_s3_bucket\" \"b\" {",
      "  bucket = \"awsconfig-example\"",
      "}",
      "",
      "resource \"aws_config_delivery_channel\" \"foo\" {",
      "  name           = \"example\"",
      "  s3_bucket_name = \"${aws_s3_bucket.b.bucket}\"",
      "}",
      "",
      "resource \"aws_config_configuration_recorder\" \"foo\" {",
      "  name     = \"example\"",
      "  role_arn = \"${aws_iam_role.r.arn}\"",
      "}",
      "",
      "resource \"aws_iam_role\" \"r\" {",
      "  name = \"example-awsconfig\"",
      "",
      "  assume_role_policy = <<POLICY",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": \"sts:AssumeRole\",",
      "      \"Principal\": {",
      "        \"Service\": \"config.amazonaws.com\"",
      "      },",
      "      \"Effect\": \"Allow\",",
      "      \"Sid\": \"\"",
      "    }",
      "  ]",
      "}",
      "POLICY",
      "}",
      "",
      "resource \"aws_iam_role_policy\" \"p\" {",
      "  name = \"awsconfig-example\"",
      "  role = \"${aws_iam_role.r.id}\"",
      "",
      "  policy = <<POLICY",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": [",
      "        \"s3:*\"",
      "      ],",
      "      \"Effect\": \"Allow\",",
      "      \"Resource\": [",
      "        \"${aws_s3_bucket.b.arn}\",",
      "        \"${aws_s3_bucket.b.arn}/*\"",
      "      ]",
      "    }",
      "  ]",
      "}",
      "POLICY",
      "}"
    ]
  },
  "aws-resource-config_delivery_channel": {
    "description": "Defines config_delivery_channel",
    "prefix": "tf-aws-resource-config_delivery_channel",
    "body": [
      "resource \"aws_config_delivery_channel\" \"foo\" {",
      "  name           = \"example\"",
      "  s3_bucket_name = \"${aws_s3_bucket.b.bucket}\"",
      "  depends_on     = [\"aws_config_configuration_recorder.foo\"]",
      "}",
      "",
      "resource \"aws_s3_bucket\" \"b\" {",
      "  bucket        = \"example-awsconfig\"",
      "  force_destroy = true",
      "}",
      "",
      "resource \"aws_config_configuration_recorder\" \"foo\" {",
      "  name     = \"example\"",
      "  role_arn = \"${aws_iam_role.r.arn}\"",
      "}",
      "",
      "resource \"aws_iam_role\" \"r\" {",
      "  name = \"awsconfig-example\"",
      "",
      "  assume_role_policy = <<POLICY",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": \"sts:AssumeRole\",",
      "      \"Principal\": {",
      "        \"Service\": \"config.amazonaws.com\"",
      "      },",
      "      \"Effect\": \"Allow\",",
      "      \"Sid\": \"\"",
      "    }",
      "  ]",
      "}",
      "POLICY",
      "}",
      "",
      "resource \"aws_iam_role_policy\" \"p\" {",
      "  name = \"awsconfig-example\"",
      "  role = \"${aws_iam_role.r.id}\"",
      "",
      "  policy = <<POLICY",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": [",
      "        \"s3:*\"",
      "      ],",
      "      \"Effect\": \"Allow\",",
      "      \"Resource\": [",
      "        \"${aws_s3_bucket.b.arn}\",",
      "        \"${aws_s3_bucket.b.arn}/*\"",
      "      ]",
      "    }",
      "  ]",
      "}",
      "POLICY",
      "}"
    ]
  },
  "aws-resource-cur_report_definition": {
    "description": "Defines cur_report_definition",
    "prefix": "tf-aws-resource-cur_report_definition",
    "body": [
      "resource \"aws_cur_report_definition\" \"example_cur_report_definition\" {",
      "  report_name                = \"example-cur-report-definition\"",
      "  time_unit                  = \"HOURLY\"",
      "  format                     = \"textORcsv\"",
      "  compression                = \"GZIP\"",
      "  additional_schema_elements = [\"RESOURCES\"]",
      "  s3_bucket                  = \"example-bucket-name\"",
      "  s3_region                  = \"us-east-1\"",
      "  additional_artifacts       = [\"REDSHIFT\", \"QUICKSIGHT\"]",
      "}"
    ]
  },
  "aws-resource-customer_gateway": {
    "description": "Defines customer_gateway",
    "prefix": "tf-aws-resource-customer_gateway",
    "body": [
      "resource \"aws_customer_gateway\" \"main\" {",
      "  bgp_asn    = 65000",
      "  ip_address = \"172.83.124.10\"",
      "  type       = \"ipsec.1\"",
      "",
      "  tags = {",
      "    Name = \"main-customer-gateway\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-datapipeline_pipeline": {
    "description": "Defines datapipeline_pipeline",
    "prefix": "tf-aws-resource-datapipeline_pipeline",
    "body": [
      "resource \"aws_datapipeline_pipeline\" \"default\" {",
      "\tname      \t= \"tf-pipeline-default\"",
      "}"
    ]
  },
  "aws-resource-datasync_agent": {
    "description": "Defines datasync_agent",
    "prefix": "tf-aws-resource-datasync_agent",
    "body": [
      "resource \"aws_datasync_agent\" \"example\" {",
      "  ip_address = \"1.2.3.4\"",
      "  name       = \"example\"",
      "}"
    ]
  },
  "aws-resource-datasync_location_efs": {
    "description": "Defines datasync_location_efs",
    "prefix": "tf-aws-resource-datasync_location_efs",
    "body": [
      "resource \"aws_datasync_location_efs\" \"example\" {",
      "  # The below example uses aws_efs_mount_target as a reference to ensure a mount target already exists when resource creation occurs.",
      "  # You can accomplish the same behavior with depends_on or an aws_efs_mount_target data source reference.",
      "  efs_file_system_arn = \"${aws_efs_mount_target.example.file_system_arn}\"",
      "",
      "  ec2_config {",
      "    security_group_arns = [\"${aws_security_group.example.arn}\"]",
      "    subnet_arn          = \"${aws_subnet.example.arn}\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-datasync_location_nfs": {
    "description": "Defines datasync_location_nfs",
    "prefix": "tf-aws-resource-datasync_location_nfs",
    "body": [
      "resource \"aws_datasync_location_nfs\" \"example\" {",
      "  server_hostname = \"nfs.example.com\"",
      "  subdirectory    = \"/exported/path\"",
      "",
      "  on_prem_config {",
      "    agent_arns = [\"${aws_datasync_agent.example.arn}\"]",
      "  }",
      "}"
    ]
  },
  "aws-resource-datasync_location_s3": {
    "description": "Defines datasync_location_s3",
    "prefix": "tf-aws-resource-datasync_location_s3",
    "body": [
      "resource \"aws_datasync_location_s3\" \"example\" {",
      "  s3_bucket_arn = \"${aws_s3_bucket.example.arn}\"",
      "  subdirectory  = \"/example/prefix\"",
      "",
      "  s3_config {",
      "    bucket_access_role_arn = \"${aws_iam_role.example.arn}\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-datasync_task": {
    "description": "Defines datasync_task",
    "prefix": "tf-aws-resource-datasync_task",
    "body": [
      "resource \"aws_datasync_task\" \"example\" {",
      "  destination_location_arn = \"${aws_datasync_location_s3.destination.arn}\"",
      "  name                     = \"example\"",
      "  source_location_arn      = \"${aws_datasync_location_nfs.source.arn}\"",
      "",
      "  options {",
      "    bytes_per_second = -1",
      "  }",
      "}"
    ]
  },
  "aws-resource-dax_cluster": {
    "description": "Defines dax_cluster",
    "prefix": "tf-aws-resource-dax_cluster",
    "body": [
      "resource \"aws_dax_cluster\" \"bar\" {",
      "  cluster_name       = \"cluster-example\"",
      "  iam_role_arn       = \"${data.aws_iam_role.example.arn}\"",
      "  node_type          = \"dax.r4.large\"",
      "  replication_factor = 1",
      "}"
    ]
  },
  "aws-resource-dax_parameter_group": {
    "description": "Defines dax_parameter_group",
    "prefix": "tf-aws-resource-dax_parameter_group",
    "body": [
      "resource \"aws_dax_parameter_group\" \"example\" {",
      "  name = \"example\"",
      "",
      "  parameters {",
      "    name  = \"query-ttl-millis\"",
      "    value = \"100000\"",
      "  }",
      "",
      "  parameters {",
      "    name  = \"record-ttl-millis\"",
      "    value = \"100000\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-dax_subnet_group": {
    "description": "Defines dax_subnet_group",
    "prefix": "tf-aws-resource-dax_subnet_group",
    "body": [
      "resource \"aws_dax_subnet_group\" \"example\" {",
      "  name       = \"example\"",
      "  subnet_ids = [\"${aws_subnet.example1.id}\", \"${aws_subnet.example2.id}\"]",
      "}"
    ]
  },
  "aws-resource-db_cluster_snapshot": {
    "description": "Defines db_cluster_snapshot",
    "prefix": "tf-aws-resource-db_cluster_snapshot",
    "body": [
      "resource \"aws_db_cluster_snapshot\" \"example\" {",
      "  db_cluster_identifier          = \"${aws_rds_cluster.example.id}\"",
      "  db_cluster_snapshot_identifier = \"resourcetestsnapshot1234\"",
      "}"
    ]
  },
  "aws-resource-db_event_subscription": {
    "description": "Defines db_event_subscription",
    "prefix": "tf-aws-resource-db_event_subscription",
    "body": [
      "resource \"aws_db_instance\" \"default\" {",
      "  allocated_storage    = 10",
      "  engine               = \"mysql\"",
      "  engine_version       = \"5.6.17\"",
      "  instance_class       = \"db.t2.micro\"",
      "  name                 = \"mydb\"",
      "  username             = \"foo\"",
      "  password             = \"bar\"",
      "  db_subnet_group_name = \"my_database_subnet_group\"",
      "  parameter_group_name = \"default.mysql5.6\"",
      "}",
      "",
      "resource \"aws_sns_topic\" \"default\" {",
      "  name = \"rds-events\"",
      "}",
      "",
      "resource \"aws_db_event_subscription\" \"default\" {",
      "  name      = \"rds-event-sub\"",
      "  sns_topic = \"${aws_sns_topic.default.arn}\"",
      "",
      "  source_type = \"db-instance\"",
      "  source_ids  = [\"${aws_db_instance.default.id}\"]",
      "",
      "  event_categories = [",
      "    \"availability\",",
      "    \"deletion\",",
      "    \"failover\",",
      "    \"failure\",",
      "    \"low storage\",",
      "    \"maintenance\",",
      "    \"notification\",",
      "    \"read replica\",",
      "    \"recovery\",",
      "    \"restoration\",",
      "  ]",
      "}"
    ]
  },
  "aws-resource-db_instance": {
    "description": "Defines db_instance",
    "prefix": "tf-aws-resource-db_instance",
    "body": [
      "resource \"aws_db_instance\" \"default\" {",
      "  allocated_storage    = 20",
      "  storage_type         = \"gp2\"",
      "  engine               = \"mysql\"",
      "  engine_version       = \"5.7\"",
      "  instance_class       = \"db.t2.micro\"",
      "  name                 = \"mydb\"",
      "  username             = \"foo\"",
      "  password             = \"foobarbaz\"",
      "  parameter_group_name = \"default.mysql5.7\"",
      "}"
    ]
  },
  "aws-resource-db_instance_role_association": {
    "description": "Defines db_instance_role_association",
    "prefix": "tf-aws-resource-db_instance_role_association",
    "body": [
      "resource \"aws_db_instance_role_association\" \"example\" {",
      "  db_instance_identifier = \"${aws_db_instance.example.id}\"",
      "  feature_name           = \"S3_INTEGRATION\"",
      "  role_arn               = \"${aws_iam_role.example.id}\"",
      "}"
    ]
  },
  "aws-resource-db_option_group": {
    "description": "Defines db_option_group",
    "prefix": "tf-aws-resource-db_option_group",
    "body": [
      "resource \"aws_db_option_group\" \"example\" {",
      "  name                     = \"option-group-test-terraform\"",
      "  option_group_description = \"Terraform Option Group\"",
      "  engine_name              = \"sqlserver-ee\"",
      "  major_engine_version     = \"11.00\"",
      "",
      "  option {",
      "    option_name = \"Timezone\"",
      "",
      "    option_settings {",
      "      name  = \"TIME_ZONE\"",
      "      value = \"UTC\"",
      "    }",
      "  }",
      "",
      "  option {",
      "    option_name = \"SQLSERVER_BACKUP_RESTORE\"",
      "",
      "    option_settings {",
      "      name  = \"IAM_ROLE_ARN\"",
      "      value = \"${aws_iam_role.example.arn}\"",
      "    }",
      "  }",
      "",
      "  option {",
      "    option_name = \"TDE\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-db_parameter_group": {
    "description": "Defines db_parameter_group",
    "prefix": "tf-aws-resource-db_parameter_group",
    "body": [
      "resource \"aws_db_parameter_group\" \"default\" {",
      "  name   = \"rds-pg\"",
      "  family = \"mysql5.6\"",
      "",
      "  parameter {",
      "    name  = \"character_set_server\"",
      "    value = \"utf8\"",
      "  }",
      "",
      "  parameter {",
      "    name  = \"character_set_client\"",
      "    value = \"utf8\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-db_security_group": {
    "description": "Defines db_security_group",
    "prefix": "tf-aws-resource-db_security_group",
    "body": [
      "resource \"aws_db_security_group\" \"default\" {",
      "  name = \"rds_sg\"",
      "",
      "  ingress {",
      "    cidr = \"10.0.0.0/24\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-db_snapshot": {
    "description": "Defines db_snapshot",
    "prefix": "tf-aws-resource-db_snapshot",
    "body": [
      "resource \"aws_db_instance\" \"bar\" {",
      "  allocated_storage = 10",
      "  engine            = \"MySQL\"",
      "  engine_version    = \"5.6.21\"",
      "  instance_class    = \"db.t2.micro\"",
      "  name              = \"baz\"",
      "  password          = \"barbarbarbar\"",
      "  username          = \"foo\"",
      "",
      "  maintenance_window      = \"Fri:09:00-Fri:09:30\"",
      "  backup_retention_period = 0",
      "  parameter_group_name    = \"default.mysql5.6\"",
      "}",
      "",
      "resource \"aws_db_snapshot\" \"test\" {",
      "  db_instance_identifier = \"${aws_db_instance.bar.id}\"",
      "  db_snapshot_identifier = \"testsnapshot1234\"",
      "}"
    ]
  },
  "aws-resource-db_subnet_group": {
    "description": "Defines db_subnet_group",
    "prefix": "tf-aws-resource-db_subnet_group",
    "body": [
      "resource \"aws_db_subnet_group\" \"default\" {",
      "  name       = \"main\"",
      "  subnet_ids = [\"${aws_subnet.frontend.id}\", \"${aws_subnet.backend.id}\"]",
      "",
      "  tags = {",
      "    Name = \"My DB subnet group\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-default_network_acl": {
    "description": "Defines default_network_acl",
    "prefix": "tf-aws-resource-default_network_acl",
    "body": [
      "resource \"aws_vpc\" \"mainvpc\" {",
      "  cidr_block = \"10.1.0.0/16\"",
      "}",
      "",
      "resource \"aws_default_network_acl\" \"default\" {",
      "  default_network_acl_id = \"${aws_vpc.mainvpc.default_network_acl_id}\"",
      "",
      "  ingress {",
      "    protocol   = -1",
      "    rule_no    = 100",
      "    action     = \"allow\"",
      "    cidr_block = # set a CIDR block here",
      "    from_port  = 0",
      "    to_port    = 0",
      "  }",
      "",
      "  egress {",
      "    protocol   = -1",
      "    rule_no    = 100",
      "    action     = \"allow\"",
      "    cidr_block = \"0.0.0.0/0\"",
      "    from_port  = 0",
      "    to_port    = 0",
      "  }",
      "}"
    ]
  },
  "aws-resource-default_route_table": {
    "description": "Defines default_route_table",
    "prefix": "tf-aws-resource-default_route_table",
    "body": [
      "resource \"aws_default_route_table\" \"r\" {",
      "  default_route_table_id = \"${aws_vpc.foo.default_route_table_id}\"",
      "",
      "  route {",
      "    # ...",
      "  }",
      "",
      "  tags = {",
      "    Name = \"default table\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-default_security_group": {
    "description": "Defines default_security_group",
    "prefix": "tf-aws-resource-default_security_group",
    "body": [
      "resource \"aws_vpc\" \"mainvpc\" {",
      "  cidr_block = \"10.1.0.0/16\"",
      "}",
      "",
      "resource \"aws_default_security_group\" \"default\" {",
      "  vpc_id = \"${aws_vpc.mainvpc.id}\"",
      "",
      "  ingress {",
      "    protocol  = -1",
      "    self      = true",
      "    from_port = 0",
      "    to_port   = 0",
      "  }",
      "",
      "  egress {",
      "    from_port   = 0",
      "    to_port     = 0",
      "    protocol    = \"-1\"",
      "    cidr_blocks = [\"0.0.0.0/0\"]",
      "  }",
      "}"
    ]
  },
  "aws-resource-default_subnet": {
    "description": "Defines default_subnet",
    "prefix": "tf-aws-resource-default_subnet",
    "body": [
      "resource \"aws_default_subnet\" \"default_az1\" {",
      "  availability_zone = \"us-west-2a\"",
      "",
      "  tags = {",
      "    Name = \"Default subnet for us-west-2a\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-default_vpc": {
    "description": "Defines default_vpc",
    "prefix": "tf-aws-resource-default_vpc",
    "body": [
      "resource \"aws_default_vpc\" \"default\" {",
      "  tags = {",
      "    Name = \"Default VPC\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-default_vpc_dhcp_options": {
    "description": "Defines default_vpc_dhcp_options",
    "prefix": "tf-aws-resource-default_vpc_dhcp_options",
    "body": [
      "resource \"aws_default_vpc_dhcp_options\" \"default\" {",
      "  tags = {",
      "    Name = \"Default DHCP Option Set\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-devicefarm_project": {
    "description": "Defines devicefarm_project",
    "prefix": "tf-aws-resource-devicefarm_project",
    "body": [
      "resource \"aws_devicefarm_project\" \"awesome_devices\" {",
      "  name = \"my-device-farm\"",
      "}"
    ]
  },
  "aws-resource-directory_service_conditional_forwarder": {
    "description": "Defines directory_service_conditional_forwarder",
    "prefix": "tf-aws-resource-directory_service_conditional_forwarder",
    "body": [
      "resource \"aws_directory_service_conditional_forwarder\" \"example\" {",
      "  directory_id       = \"${aws_directory_service_directory.ad.id}\"",
      "  remote_domain_name = \"example.com\"",
      "",
      "  dns_ips = [",
      "    \"8.8.8.8\",",
      "    \"8.8.4.4\",",
      "  ]",
      "}"
    ]
  },
  "aws-resource-directory_service_directory": {
    "description": "Defines directory_service_directory",
    "prefix": "tf-aws-resource-directory_service_directory",
    "body": [
      "resource \"aws_directory_service_directory\" \"bar\" {",
      "  name     = \"corp.notexample.com\"",
      "  password = \"SuperSecretPassw0rd\"",
      "  size     = \"Small\"",
      "",
      "  vpc_settings {",
      "    vpc_id     = \"${aws_vpc.main.id}\"",
      "    subnet_ids = [\"${aws_subnet.foo.id}\", \"${aws_subnet.bar.id}\"]",
      "  }",
      "",
      "  tags = {",
      "    Project = \"foo\"",
      "  }",
      "}",
      "",
      "resource \"aws_vpc\" \"main\" {",
      "  cidr_block = \"10.0.0.0/16\"",
      "}",
      "",
      "resource \"aws_subnet\" \"foo\" {",
      "  vpc_id            = \"${aws_vpc.main.id}\"",
      "  availability_zone = \"us-west-2a\"",
      "  cidr_block        = \"10.0.1.0/24\"",
      "}",
      "",
      "resource \"aws_subnet\" \"bar\" {",
      "  vpc_id            = \"${aws_vpc.main.id}\"",
      "  availability_zone = \"us-west-2b\"",
      "  cidr_block        = \"10.0.2.0/24\"",
      "}"
    ]
  },
  "aws-resource-directory_service_log_subscription": {
    "description": "Defines directory_service_log_subscription",
    "prefix": "tf-aws-resource-directory_service_log_subscription",
    "body": [
      "resource \"aws_cloudwatch_log_group\" \"example\" {",
      "  name              = \"/aws/directoryservice/${aws_directory_service_directory.example.id}\"",
      "  retention_in_days = 14",
      "}",
      "",
      "data \"aws_iam_policy_document\" \"ad-log-policy\" {",
      "  statement {",
      "    actions = [",
      "      \"logs:CreateLogStream\",",
      "      \"logs:PutLogEvents\"",
      "    ]",
      "",
      "    principals {",
      "      identifiers = [\"ds.amazonaws.com\"]",
      "      type = \"Service\"",
      "    }",
      "",
      "    resources = [\"${aws_cloudwatch_log_group.example.arn}\"]",
      "",
      "    effect = \"Allow\"",
      "  }",
      "}",
      "",
      "resource \"aws_cloudwatch_log_resource_policy\" \"ad-log-policy\" {",
      "  policy_document = \"${data.aws_iam_policy_document.ad-log-policy.json}\"",
      "  policy_name     = \"ad-log-policy\"",
      "}",
      "",
      "resource \"aws_directory_service_log_subscription\" \"example\" {",
      "  directory_id   = \"${aws_directory_service_directory.example.id}\"",
      "  log_group_name = \"${aws_cloudwatch_log_group.example.name}\"",
      "}"
    ]
  },
  "aws-resource-dlm_lifecycle_policy": {
    "description": "Defines dlm_lifecycle_policy",
    "prefix": "tf-aws-resource-dlm_lifecycle_policy",
    "body": [
      "resource \"aws_iam_role\" \"dlm_lifecycle_role\" {",
      "  name = \"dlm-lifecycle-role\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": \"sts:AssumeRole\",",
      "      \"Principal\": {",
      "        \"Service\": \"dlm.amazonaws.com\"",
      "      },",
      "      \"Effect\": \"Allow\",",
      "      \"Sid\": \"\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_role_policy\" \"dlm_lifecycle\" {",
      "  name = \"dlm-lifecycle-policy\"",
      "  role = \"${aws_iam_role.dlm_lifecycle_role.id}\"",
      "",
      "  policy = <<EOF",
      "{",
      "   \"Version\": \"2012-10-17\",",
      "   \"Statement\": [",
      "      {",
      "         \"Effect\": \"Allow\",",
      "         \"Action\": [",
      "            \"ec2:CreateSnapshot\",",
      "            \"ec2:DeleteSnapshot\",",
      "            \"ec2:DescribeVolumes\",",
      "            \"ec2:DescribeSnapshots\"",
      "         ],",
      "         \"Resource\": \"*\"",
      "      },",
      "      {",
      "         \"Effect\": \"Allow\",",
      "         \"Action\": [",
      "            \"ec2:CreateTags\"",
      "         ],",
      "         \"Resource\": \"arn:aws:ec2:*::snapshot/*\"",
      "      }",
      "   ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_dlm_lifecycle_policy\" \"example\" {",
      "  description        = \"example DLM lifecycle policy\"",
      "  execution_role_arn = \"${aws_iam_role.dlm_lifecycle_role.arn}\"",
      "  state              = \"ENABLED\"",
      "",
      "  policy_details {",
      "    resource_types = [\"VOLUME\"]",
      "",
      "    schedule {",
      "      name = \"2 weeks of daily snapshots\"",
      "",
      "      create_rule {",
      "        interval      = 24",
      "        interval_unit = \"HOURS\"",
      "        times         = [\"23:45\"]",
      "      }",
      "",
      "      retain_rule {",
      "        count = 14",
      "      }",
      "",
      "      tags_to_add = {",
      "        SnapshotCreator = \"DLM\"",
      "      }",
      "",
      "      copy_tags = false",
      "    }",
      "",
      "    target_tags = {",
      "      Snapshot = \"true\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-dms_certificate": {
    "description": "Defines dms_certificate",
    "prefix": "tf-aws-resource-dms_certificate",
    "body": [
      "# Create a new certificate",
      "resource \"aws_dms_certificate\" \"test\" {",
      "  certificate_id  = \"test-dms-certificate-tf\"",
      "  certificate_pem = \"...\"",
      "}"
    ]
  },
  "aws-resource-dms_endpoint": {
    "description": "Defines dms_endpoint",
    "prefix": "tf-aws-resource-dms_endpoint",
    "body": [
      "# Create a new endpoint",
      "resource \"aws_dms_endpoint\" \"test\" {",
      "  certificate_arn             = \"arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012\"",
      "  database_name               = \"test\"",
      "  endpoint_id                 = \"test-dms-endpoint-tf\"",
      "  endpoint_type               = \"source\"",
      "  engine_name                 = \"aurora\"",
      "  extra_connection_attributes = \"\"",
      "  kms_key_arn                 = \"arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012\"",
      "  password                    = \"test\"",
      "  port                        = 3306",
      "  server_name                 = \"test\"",
      "  ssl_mode                    = \"none\"",
      "",
      "  tags = {",
      "    Name = \"test\"",
      "  }",
      "",
      "  username = \"test\"",
      "}"
    ]
  },
  "aws-resource-dms_replication_instance": {
    "description": "Defines dms_replication_instance",
    "prefix": "tf-aws-resource-dms_replication_instance",
    "body": [
      "# Database Migration Service requires the below IAM Roles to be created before",
      "# replication instances can be created. See the DMS Documentation for",
      "# additional information: https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Security.APIRole.html",
      "#  * dms-vpc-role",
      "#  * dms-cloudwatch-logs-role",
      "#  * dms-access-for-endpoint",
      "",
      "data \"aws_iam_policy_document\" \"dms_assume_role\" {",
      "  statement {",
      "    actions = [\"sts:AssumeRole\"]",
      "",
      "    principals {",
      "      identifiers = [\"dms.amazonaws.com\"]",
      "      type        = \"Service\"",
      "    }",
      "  }",
      "}",
      "",
      "resource \"aws_iam_role\" \"dms-access-for-endpoint\" {",
      "  assume_role_policy = \"${data.aws_iam_policy_document.dms_assume_role.json}\"",
      "  name               = \"dms-access-for-endpoint\"",
      "}",
      "",
      "resource \"aws_iam_role_policy_attachment\" \"dms-access-for-endpoint-AmazonDMSRedshiftS3Role\" {",
      "  policy_arn = \"arn:aws:iam::aws:policy/service-role/AmazonDMSRedshiftS3Role\"",
      "  role       = \"${aws_iam_role.dms-access-for-endpoint.name}\"",
      "}",
      "",
      "resource \"aws_iam_role\" \"dms-cloudwatch-logs-role\" {",
      "  assume_role_policy = \"${data.aws_iam_policy_document.dms_assume_role.json}\"",
      "  name               = \"dms-cloudwatch-logs-role\"",
      "}",
      "",
      "resource \"aws_iam_role_policy_attachment\" \"dms-cloudwatch-logs-role-AmazonDMSCloudWatchLogsRole\" {",
      "  policy_arn = \"arn:aws:iam::aws:policy/service-role/AmazonDMSCloudWatchLogsRole\"",
      "  role       = \"${aws_iam_role.dms-cloudwatch-logs-role.name}\"",
      "}",
      "",
      "resource \"aws_iam_role\" \"dms-vpc-role\" {",
      "  assume_role_policy = \"${data.aws_iam_policy_document.dms_assume_role.json}\"",
      "  name               = \"dms-vpc-role\"",
      "}",
      "",
      "resource \"aws_iam_role_policy_attachment\" \"dms-vpc-role-AmazonDMSVPCManagementRole\" {",
      "  policy_arn = \"arn:aws:iam::aws:policy/service-role/AmazonDMSVPCManagementRole\"",
      "  role       = \"${aws_iam_role.dms-vpc-role.name}\"",
      "}",
      "",
      "# Create a new replication instance",
      "resource \"aws_dms_replication_instance\" \"test\" {",
      "  allocated_storage            = 20",
      "  apply_immediately            = true",
      "  auto_minor_version_upgrade   = true",
      "  availability_zone            = \"us-west-2c\"",
      "  engine_version               = \"1.9.0\"",
      "  kms_key_arn                  = \"arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012\"",
      "  multi_az                     = false",
      "  preferred_maintenance_window = \"sun:10:30-sun:14:30\"",
      "  publicly_accessible          = true",
      "  replication_instance_class   = \"dms.t2.micro\"",
      "  replication_instance_id      = \"test-dms-replication-instance-tf\"",
      "  replication_subnet_group_id  = \"${aws_dms_replication_subnet_group.test-dms-replication-subnet-group-tf.id}\"",
      "",
      "  tags = {",
      "    Name = \"test\"",
      "  }",
      "",
      "  vpc_security_group_ids = [",
      "    \"sg-12345678\",",
      "  ]",
      "}"
    ]
  },
  "aws-resource-dms_replication_subnet_group": {
    "description": "Defines dms_replication_subnet_group",
    "prefix": "tf-aws-resource-dms_replication_subnet_group",
    "body": [
      "# Create a new replication subnet group",
      "resource \"aws_dms_replication_subnet_group\" \"test\" {",
      "  replication_subnet_group_description = \"Test replication subnet group\"",
      "  replication_subnet_group_id          = \"test-dms-replication-subnet-group-tf\"",
      "",
      "  subnet_ids = [",
      "    \"subnet-12345678\",",
      "  ]",
      "",
      "  tags = {",
      "    Name = \"test\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-dms_replication_task": {
    "description": "Defines dms_replication_task",
    "prefix": "tf-aws-resource-dms_replication_task",
    "body": [
      "# Create a new replication task",
      "resource \"aws_dms_replication_task\" \"test\" {",
      "  cdc_start_time            = 1484346880",
      "  migration_type            = \"full-load\"",
      "  replication_instance_arn  = \"${aws_dms_replication_instance.test-dms-replication-instance-tf.replication_instance_arn}\"",
      "  replication_task_id       = \"test-dms-replication-task-tf\"",
      "  replication_task_settings = \"...\"",
      "  source_endpoint_arn       = \"${aws_dms_endpoint.test-dms-source-endpoint-tf.endpoint_arn}\"",
      "  table_mappings            = \"{\\\"rules\\\":[{\\\"rule-type\\\":\\\"selection\\\",\\\"rule-id\\\":\\\"1\\\",\\\"rule-name\\\":\\\"1\\\",\\\"object-locator\\\":{\\\"schema-name\\\":\\\"%\\\",\\\"table-name\\\":\\\"%\\\"},\\\"rule-action\\\":\\\"include\\\"}]}\"",
      "",
      "  tags = {",
      "    Name = \"test\"",
      "  }",
      "",
      "  target_endpoint_arn = \"${aws_dms_endpoint.test-dms-target-endpoint-tf.endpoint_arn}\"",
      "}"
    ]
  },
  "aws-resource-docdb_cluster": {
    "description": "Defines docdb_cluster",
    "prefix": "tf-aws-resource-docdb_cluster",
    "body": [
      "resource \"aws_docdb_cluster\" \"docdb\" {",
      "  cluster_identifier      = \"my-docdb-cluster\"",
      "  engine                  = \"docdb\"",
      "  master_username         = \"foo\"",
      "  master_password         = \"mustbeeightchars\"",
      "  backup_retention_period = 5",
      "  preferred_backup_window = \"07:00-09:00\"",
      "  skip_final_snapshot     = true",
      "}"
    ]
  },
  "aws-resource-docdb_cluster_instance": {
    "description": "Defines docdb_cluster_instance",
    "prefix": "tf-aws-resource-docdb_cluster_instance",
    "body": [
      "resource \"aws_docdb_cluster_instance\" \"cluster_instances\" {",
      "  count              = 2",
      "  identifier         = \"docdb-cluster-demo-${count.index}\"",
      "  cluster_identifier = \"${aws_docdb_cluster.default.id}\"",
      "  instance_class     = \"db.r4.large\"",
      "}",
      "",
      "resource \"aws_docdb_cluster\" \"default\" {",
      "  cluster_identifier = \"docdb-cluster-demo\"",
      "  availability_zones = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]",
      "  master_username    = \"foo\"",
      "  master_password    = \"barbut8chars\"",
      "}"
    ]
  },
  "aws-resource-docdb_cluster_parameter_group": {
    "description": "Defines docdb_cluster_parameter_group",
    "prefix": "tf-aws-resource-docdb_cluster_parameter_group",
    "body": [
      "resource \"aws_docdb_cluster_parameter_group\" \"example\" {",
      "  family      = \"docdb3.6\"",
      "  name        = \"example\"",
      "  description = \"docdb cluster parameter group\"",
      "",
      "  parameter {",
      "    name  = \"tls\"",
      "    value = \"enabled\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-docdb_cluster_snapshot": {
    "description": "Defines docdb_cluster_snapshot",
    "prefix": "tf-aws-resource-docdb_cluster_snapshot",
    "body": [
      "resource \"aws_docdb_cluster_snapshot\" \"example\" {",
      "  db_cluster_identifier          = \"${aws_docdb_cluster.example.id}\"",
      "  db_cluster_snapshot_identifier = \"resourcetestsnapshot1234\"",
      "}"
    ]
  },
  "aws-resource-docdb_subnet_group": {
    "description": "Defines docdb_subnet_group",
    "prefix": "tf-aws-resource-docdb_subnet_group",
    "body": [
      "resource \"aws_docdb_subnet_group\" \"default\" {",
      "  name       = \"main\"",
      "  subnet_ids = [\"${aws_subnet.frontend.id}\", \"${aws_subnet.backend.id}\"]",
      "",
      "  tags = {",
      "    Name = \"My docdb subnet group\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-dx_bgp_peer": {
    "description": "Defines dx_bgp_peer",
    "prefix": "tf-aws-resource-dx_bgp_peer",
    "body": [
      "resource \"aws_dx_bgp_peer\" \"peer\" {",
      "  virtual_interface_id = \"${aws_dx_private_virtual_interface.foo.id}\"",
      "  address_family       = \"ipv6\"",
      "  bgp_asn              = 65351",
      "}"
    ]
  },
  "aws-resource-dx_connection": {
    "description": "Defines dx_connection",
    "prefix": "tf-aws-resource-dx_connection",
    "body": [
      "resource \"aws_dx_connection\" \"hoge\" {",
      "  name      = \"tf-dx-connection\"",
      "  bandwidth = \"1Gbps\"",
      "  location  = \"EqDC2\"",
      "}"
    ]
  },
  "aws-resource-dx_connection_association": {
    "description": "Defines dx_connection_association",
    "prefix": "tf-aws-resource-dx_connection_association",
    "body": [
      "resource \"aws_dx_connection\" \"example\" {",
      "  name      = \"example\"",
      "  bandwidth = \"1Gbps\"",
      "  location  = \"EqSe2\"",
      "}",
      "",
      "resource \"aws_dx_lag\" \"example\" {",
      "  name                  = \"example\"",
      "  connections_bandwidth = \"1Gbps\"",
      "  location              = \"EqSe2\"",
      "}",
      "",
      "resource \"aws_dx_connection_association\" \"example\" {",
      "  connection_id = \"${aws_dx_connection.example.id}\"",
      "  lag_id        = \"${aws_dx_lag.example.id}\"",
      "}"
    ]
  },
  "aws-resource-dx_gateway": {
    "description": "Defines dx_gateway",
    "prefix": "tf-aws-resource-dx_gateway",
    "body": [
      "resource \"aws_dx_gateway\" \"example\" {",
      "  name            = \"tf-dxg-example\"",
      "  amazon_side_asn = \"64512\"",
      "}"
    ]
  },
  "aws-resource-dx_gateway_association": {
    "description": "Defines dx_gateway_association",
    "prefix": "tf-aws-resource-dx_gateway_association",
    "body": [
      "resource \"aws_dx_gateway\" \"example\" {",
      "  name            = \"example\"",
      "  amazon_side_asn = \"64512\"",
      "}",
      "",
      "resource \"aws_vpc\" \"example\" {",
      "  cidr_block = \"10.255.255.0/28\"",
      "}",
      "",
      "resource \"aws_vpn_gateway\" \"example\" {",
      "  vpc_id = \"${aws_vpc.example.id}\"",
      "}",
      "",
      "resource \"aws_dx_gateway_association\" \"example\" {",
      "  dx_gateway_id         = \"${aws_dx_gateway.example.id}\"",
      "  associated_gateway_id = \"${aws_vpn_gateway.example.id}\"",
      "}"
    ]
  },
  "aws-resource-dx_gateway_association_proposal": {
    "description": "Defines dx_gateway_association_proposal",
    "prefix": "tf-aws-resource-dx_gateway_association_proposal",
    "body": [
      "resource \"aws_dx_gateway_association_proposal\" \"example\" {",
      "  dx_gateway_id               = \"${aws_dx_gateway.example.id}\"",
      "  dx_gateway_owner_account_id = \"${aws_dx_gateway.example.owner_account_id}\"",
      "  associated_gateway_id       = \"${aws_vpn_gateway.example.id}\"",
      "}"
    ]
  },
  "aws-resource-dx_hosted_private_virtual_interface": {
    "description": "Defines dx_hosted_private_virtual_interface",
    "prefix": "tf-aws-resource-dx_hosted_private_virtual_interface",
    "body": [
      "resource \"aws_dx_hosted_private_virtual_interface\" \"foo\" {",
      "  connection_id = \"dxcon-zzzzzzzz\"",
      "",
      "  name           = \"vif-foo\"",
      "  vlan           = 4094",
      "  address_family = \"ipv4\"",
      "  bgp_asn        = 65352",
      "}"
    ]
  },
  "aws-resource-dx_hosted_private_virtual_interface_accepter": {
    "description": "Defines dx_hosted_private_virtual_interface_accepter",
    "prefix": "tf-aws-resource-dx_hosted_private_virtual_interface_accepter",
    "body": [
      "provider \"aws\" {",
      "  # Creator's credentials.",
      "}",
      "",
      "provider \"aws\" {",
      "  alias = \"accepter\"",
      "",
      "  # Accepter's credentials.",
      "}",
      "",
      "data \"aws_caller_identity\" \"accepter\" {",
      "  provider = \"aws.accepter\"",
      "}",
      "",
      "# Creator's side of the VIF",
      "resource \"aws_dx_hosted_private_virtual_interface\" \"creator\" {",
      "  connection_id    = \"dxcon-zzzzzzzz\"",
      "  owner_account_id = \"${data.aws_caller_identity.accepter.account_id}\"",
      "",
      "  name           = \"vif-foo\"",
      "  vlan           = 4094",
      "  address_family = \"ipv4\"",
      "  bgp_asn        = 65352",
      "",
      "  # The aws_dx_hosted_private_virtual_interface",
      "  # must be destroyed before the aws_vpn_gateway.",
      "  depends_on = [\"aws_vpn_gateway.vpn_gw\"]",
      "}",
      "",
      "# Accepter's side of the VIF.",
      "resource \"aws_vpn_gateway\" \"vpn_gw\" {",
      "  provider = \"aws.accepter\"",
      "}",
      "",
      "resource \"aws_dx_hosted_private_virtual_interface_accepter\" \"accepter\" {",
      "  provider             = \"aws.accepter\"",
      "  virtual_interface_id = \"${aws_dx_hosted_private_virtual_interface.creator.id}\"",
      "  vpn_gateway_id       = \"${aws_vpn_gateway.vpn_gw.id}\"",
      "",
      "  tags = {",
      "    Side = \"Accepter\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-dx_hosted_public_virtual_interface": {
    "description": "Defines dx_hosted_public_virtual_interface",
    "prefix": "tf-aws-resource-dx_hosted_public_virtual_interface",
    "body": [
      "resource \"aws_dx_hosted_public_virtual_interface\" \"foo\" {",
      "  connection_id = \"dxcon-zzzzzzzz\"",
      "",
      "  name           = \"vif-foo\"",
      "  vlan           = 4094",
      "  address_family = \"ipv4\"",
      "  bgp_asn        = 65352",
      "",
      "  customer_address = \"175.45.176.1/30\"",
      "  amazon_address   = \"175.45.176.2/30\"",
      "",
      "  route_filter_prefixes = [",
      "    \"210.52.109.0/24\",",
      "    \"175.45.176.0/22\",",
      "  ]",
      "}"
    ]
  },
  "aws-resource-dx_hosted_public_virtual_interface_accepter": {
    "description": "Defines dx_hosted_public_virtual_interface_accepter",
    "prefix": "tf-aws-resource-dx_hosted_public_virtual_interface_accepter",
    "body": [
      "provider \"aws\" {",
      "  # Creator's credentials.",
      "}",
      "",
      "provider \"aws\" {",
      "  alias = \"accepter\"",
      "",
      "  # Accepter's credentials.",
      "}",
      "",
      "data \"aws_caller_identity\" \"accepter\" {",
      "  provider = \"aws.accepter\"",
      "}",
      "",
      "# Creator's side of the VIF",
      "resource \"aws_dx_hosted_public_virtual_interface\" \"creator\" {",
      "  connection_id    = \"dxcon-zzzzzzzz\"",
      "  owner_account_id = \"${data.aws_caller_identity.accepter.account_id}\"",
      "",
      "  name           = \"vif-foo\"",
      "  vlan           = 4094",
      "  address_family = \"ipv4\"",
      "  bgp_asn        = 65352",
      "",
      "  customer_address = \"175.45.176.1/30\"",
      "  amazon_address   = \"175.45.176.2/30\"",
      "",
      "  route_filter_prefixes = [",
      "    \"210.52.109.0/24\",",
      "    \"175.45.176.0/22\",",
      "  ]",
      "}",
      "",
      "# Accepter's side of the VIF.",
      "resource \"aws_dx_hosted_public_virtual_interface_accepter\" \"accepter\" {",
      "  provider             = \"aws.accepter\"",
      "  virtual_interface_id = \"${aws_dx_hosted_public_virtual_interface.creator.id}\"",
      "",
      "  tags = {",
      "    Side = \"Accepter\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-dx_lag": {
    "description": "Defines dx_lag",
    "prefix": "tf-aws-resource-dx_lag",
    "body": [
      "resource \"aws_dx_lag\" \"hoge\" {",
      "  name                  = \"tf-dx-lag\"",
      "  connections_bandwidth = \"1Gbps\"",
      "  location              = \"EqDC2\"",
      "  force_destroy         = true",
      "}"
    ]
  },
  "aws-resource-dx_private_virtual_interface": {
    "description": "Defines dx_private_virtual_interface",
    "prefix": "tf-aws-resource-dx_private_virtual_interface",
    "body": [
      "resource \"aws_dx_private_virtual_interface\" \"foo\" {",
      "  connection_id = \"dxcon-zzzzzzzz\"",
      "",
      "  name           = \"vif-foo\"",
      "  vlan           = 4094",
      "  address_family = \"ipv4\"",
      "  bgp_asn        = 65352",
      "}"
    ]
  },
  "aws-resource-dx_public_virtual_interface": {
    "description": "Defines dx_public_virtual_interface",
    "prefix": "tf-aws-resource-dx_public_virtual_interface",
    "body": [
      "resource \"aws_dx_public_virtual_interface\" \"foo\" {",
      "  connection_id = \"dxcon-zzzzzzzz\"",
      "",
      "  name           = \"vif-foo\"",
      "  vlan           = 4094",
      "  address_family = \"ipv4\"",
      "  bgp_asn        = 65352",
      "",
      "  customer_address = \"175.45.176.1/30\"",
      "  amazon_address   = \"175.45.176.2/30\"",
      "",
      "  route_filter_prefixes = [",
      "    \"210.52.109.0/24\",",
      "    \"175.45.176.0/22\",",
      "  ]",
      "}"
    ]
  },
  "aws-resource-dynamodb_global_table": {
    "description": "Defines dynamodb_global_table",
    "prefix": "tf-aws-resource-dynamodb_global_table",
    "body": [
      "provider \"aws\" {",
      "  alias  = \"us-east-1\"",
      "  region = \"us-east-1\"",
      "}",
      "",
      "provider \"aws\" {",
      "  alias  = \"us-west-2\"",
      "  region = \"us-west-2\"",
      "}",
      "",
      "resource \"aws_dynamodb_table\" \"us-east-1\" {",
      "  provider = \"aws.us-east-1\"",
      "",
      "  hash_key         = \"myAttribute\"",
      "  name             = \"myTable\"",
      "  stream_enabled   = true",
      "  stream_view_type = \"NEW_AND_OLD_IMAGES\"",
      "  read_capacity    = 1",
      "  write_capacity   = 1",
      "",
      "  attribute {",
      "    name = \"myAttribute\"",
      "    type = \"S\"",
      "  }",
      "}",
      "",
      "resource \"aws_dynamodb_table\" \"us-west-2\" {",
      "  provider = \"aws.us-west-2\"",
      "",
      "  hash_key         = \"myAttribute\"",
      "  name             = \"myTable\"",
      "  stream_enabled   = true",
      "  stream_view_type = \"NEW_AND_OLD_IMAGES\"",
      "  read_capacity    = 1",
      "  write_capacity   = 1",
      "",
      "  attribute {",
      "    name = \"myAttribute\"",
      "    type = \"S\"",
      "  }",
      "}",
      "",
      "resource \"aws_dynamodb_global_table\" \"myTable\" {",
      "  depends_on = [\"aws_dynamodb_table.us-east-1\", \"aws_dynamodb_table.us-west-2\"]",
      "  provider   = \"aws.us-east-1\"",
      "",
      "  name = \"myTable\"",
      "",
      "  replica {",
      "    region_name = \"us-east-1\"",
      "  }",
      "",
      "  replica {",
      "    region_name = \"us-west-2\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-dynamodb_table": {
    "description": "Defines dynamodb_table",
    "prefix": "tf-aws-resource-dynamodb_table",
    "body": [
      "resource \"aws_dynamodb_table\" \"basic-dynamodb-table\" {",
      "  name           = \"GameScores\"",
      "  billing_mode   = \"PROVISIONED\"",
      "  read_capacity  = 20",
      "  write_capacity = 20",
      "  hash_key       = \"UserId\"",
      "  range_key      = \"GameTitle\"",
      "",
      "  attribute {",
      "    name = \"UserId\"",
      "    type = \"S\"",
      "  }",
      "",
      "  attribute {",
      "    name = \"GameTitle\"",
      "    type = \"S\"",
      "  }",
      "",
      "  attribute {",
      "    name = \"TopScore\"",
      "    type = \"N\"",
      "  }",
      "",
      "  ttl {",
      "    attribute_name = \"TimeToExist\"",
      "    enabled        = false",
      "  }",
      "",
      "  global_secondary_index {",
      "    name               = \"GameTitleIndex\"",
      "    hash_key           = \"GameTitle\"",
      "    range_key          = \"TopScore\"",
      "    write_capacity     = 10",
      "    read_capacity      = 10",
      "    projection_type    = \"INCLUDE\"",
      "    non_key_attributes = [\"UserId\"]",
      "  }",
      "",
      "  tags = {",
      "    Name        = \"dynamodb-table-1\"",
      "    Environment = \"production\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-dynamodb_table_item": {
    "description": "Defines dynamodb_table_item",
    "prefix": "tf-aws-resource-dynamodb_table_item",
    "body": [
      "resource \"aws_dynamodb_table_item\" \"example\" {",
      "  table_name = \"${aws_dynamodb_table.example.name}\"",
      "  hash_key   = \"${aws_dynamodb_table.example.hash_key}\"",
      "",
      "  item = <<ITEM",
      "{",
      "  \"exampleHashKey\": {\"S\": \"something\"},",
      "  \"one\": {\"N\": \"11111\"},",
      "  \"two\": {\"N\": \"22222\"},",
      "  \"three\": {\"N\": \"33333\"},",
      "  \"four\": {\"N\": \"44444\"}",
      "}",
      "ITEM",
      "}",
      "",
      "resource \"aws_dynamodb_table\" \"example\" {",
      "  name           = \"example-name\"",
      "  read_capacity  = 10",
      "  write_capacity = 10",
      "  hash_key       = \"exampleHashKey\"",
      "",
      "  attribute {",
      "    name = \"exampleHashKey\"",
      "    type = \"S\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-ebs_default_kms_key": {
    "description": "Defines ebs_default_kms_key",
    "prefix": "tf-aws-resource-ebs_default_kms_key",
    "body": [
      "resource \"aws_ebs_default_kms_key\" \"example\" {",
      "  key_arn = \"${aws_kms_key.example.arn}\"",
      "}"
    ]
  },
  "aws-resource-ebs_encryption_by_default": {
    "description": "Defines ebs_encryption_by_default",
    "prefix": "tf-aws-resource-ebs_encryption_by_default",
    "body": [
      "resource \"aws_ebs_encryption_by_default\" \"example\" {",
      "  enabled = true",
      "}"
    ]
  },
  "aws-resource-ebs_snapshot": {
    "description": "Defines ebs_snapshot",
    "prefix": "tf-aws-resource-ebs_snapshot",
    "body": [
      "resource \"aws_ebs_volume\" \"example\" {",
      "  availability_zone = \"us-west-2a\"",
      "  size              = 40",
      "",
      "  tags = {",
      "    Name = \"HelloWorld\"",
      "  }",
      "}",
      "",
      "resource \"aws_ebs_snapshot\" \"example_snapshot\" {",
      "  volume_id = \"${aws_ebs_volume.example.id}\"",
      "",
      "  tags = {",
      "    Name = \"HelloWorld_snap\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-ebs_snapshot_copy": {
    "description": "Defines ebs_snapshot_copy",
    "prefix": "tf-aws-resource-ebs_snapshot_copy",
    "body": [
      "resource \"aws_ebs_volume\" \"example\" {",
      "  availability_zone = \"us-west-2a\"",
      "  size              = 40",
      "",
      "  tags = {",
      "    Name = \"HelloWorld\"",
      "  }",
      "}",
      "",
      "resource \"aws_ebs_snapshot\" \"example_snapshot\" {",
      "  volume_id = \"${aws_ebs_volume.example.id}\"",
      "",
      "  tags = {",
      "    Name = \"HelloWorld_snap\"",
      "  }",
      "}",
      "",
      "resource \"aws_ebs_snapshot_copy\" \"example_copy\" {",
      "  source_snapshot_id = \"${aws_ebs_snapshot.example_snapshot.id}\"",
      "  source_region      = \"us-west-2\"",
      "",
      "  tags = {",
      "    Name = \"HelloWorld_copy_snap\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-ebs_volume": {
    "description": "Defines ebs_volume",
    "prefix": "tf-aws-resource-ebs_volume",
    "body": [
      "resource \"aws_ebs_volume\" \"example\" {",
      "  availability_zone = \"us-west-2a\"",
      "  size              = 40",
      "",
      "  tags = {",
      "    Name = \"HelloWorld\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-ec2_capacity_reservation": {
    "description": "Defines ec2_capacity_reservation",
    "prefix": "tf-aws-resource-ec2_capacity_reservation",
    "body": [
      "resource \"aws_ec2_capacity_reservation\" \"default\" {",
      "  instance_type     = \"t2.micro\"",
      "  instance_platform = \"Linux/UNIX\"",
      "  availability_zone = \"eu-west-1a\"",
      "  instance_count    = 1",
      "}"
    ]
  },
  "aws-resource-ec2_client_vpn_endpoint": {
    "description": "Defines ec2_client_vpn_endpoint",
    "prefix": "tf-aws-resource-ec2_client_vpn_endpoint",
    "body": [
      "resource \"aws_ec2_client_vpn_endpoint\" \"example\" {",
      "  description            = \"terraform-clientvpn-example\"",
      "  server_certificate_arn = \"${aws_acm_certificate.cert.arn}\"",
      "  client_cidr_block      = \"10.0.0.0/16\"",
      "",
      "  authentication_options {",
      "    type                       = \"certificate-authentication\"",
      "    root_certificate_chain_arn = \"${aws_acm_certificate.root_cert.arn}\"",
      "  }",
      "",
      "  connection_log_options {",
      "    enabled               = true",
      "    cloudwatch_log_group  = \"${aws_cloudwatch_log_group.lg.name}\"",
      "    cloudwatch_log_stream = \"${aws_cloudwatch_log_stream.ls.name}\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-ec2_client_vpn_network_association": {
    "description": "Defines ec2_client_vpn_network_association",
    "prefix": "tf-aws-resource-ec2_client_vpn_network_association",
    "body": [
      "resource \"aws_ec2_client_vpn_network_association\" \"example\" {",
      "  client_vpn_endpoint_id = \"${aws_ec2_client_vpn_endpoint.example.id}\"",
      "  subnet_id              = \"${aws_subnet.example.id}\"",
      "}"
    ]
  },
  "aws-resource-ec2_fleet": {
    "description": "Defines ec2_fleet",
    "prefix": "tf-aws-resource-ec2_fleet",
    "body": [
      "resource \"aws_ec2_fleet\" \"example\" {",
      "  launch_template_config {",
      "    launch_template_specification {",
      "      launch_template_id = \"${aws_launch_template.example.id}\"",
      "      version            = \"${aws_launch_template.example.latest_version}\"",
      "    }",
      "  }",
      "",
      "  target_capacity_specification {",
      "    default_target_capacity_type = \"spot\"",
      "    total_target_capacity        = 5",
      "  }",
      "}"
    ]
  },
  "aws-resource-ec2_transit_gateway": {
    "description": "Defines ec2_transit_gateway",
    "prefix": "tf-aws-resource-ec2_transit_gateway",
    "body": [
      "resource \"aws_ec2_transit_gateway\" \"example\" {",
      "  description = \"example\"",
      "}"
    ]
  },
  "aws-resource-ec2_transit_gateway_route": {
    "description": "Defines ec2_transit_gateway_route",
    "prefix": "tf-aws-resource-ec2_transit_gateway_route",
    "body": [
      "resource \"aws_ec2_transit_gateway_route\" \"example\" {",
      "  destination_cidr_block         = \"0.0.0.0/0\"",
      "  transit_gateway_attachment_id  = \"${aws_ec2_transit_gateway_vpc_attachment.example.id}\"",
      "  transit_gateway_route_table_id = \"${aws_ec2_transit_gateway.example.association_default_route_table_id}\"",
      "}"
    ]
  },
  "aws-resource-ec2_transit_gateway_route_table": {
    "description": "Defines ec2_transit_gateway_route_table",
    "prefix": "tf-aws-resource-ec2_transit_gateway_route_table",
    "body": [
      "resource \"aws_ec2_transit_gateway_route_table\" \"example\" {",
      "  transit_gateway_id = \"${aws_ec2_transit_gateway.example.id}\"",
      "}"
    ]
  },
  "aws-resource-ec2_transit_gateway_route_table_association": {
    "description": "Defines ec2_transit_gateway_route_table_association",
    "prefix": "tf-aws-resource-ec2_transit_gateway_route_table_association",
    "body": [
      "resource \"aws_ec2_transit_gateway_route_table_association\" \"example\" {",
      "  transit_gateway_attachment_id  = \"${aws_ec2_transit_gateway_vpc_attachment.example.id}\"",
      "  transit_gateway_route_table_id = \"${aws_ec2_transit_gateway_route_table.example.id}\"",
      "}"
    ]
  },
  "aws-resource-ec2_transit_gateway_route_table_propagation": {
    "description": "Defines ec2_transit_gateway_route_table_propagation",
    "prefix": "tf-aws-resource-ec2_transit_gateway_route_table_propagation",
    "body": [
      "resource \"aws_ec2_transit_gateway_route_table_propagation\" \"example\" {",
      "  transit_gateway_attachment_id  = \"${aws_ec2_transit_gateway_vpc_attachment.example.id}\"",
      "  transit_gateway_route_table_id = \"${aws_ec2_transit_gateway_route_table.example.id}\"",
      "}"
    ]
  },
  "aws-resource-ec2_transit_gateway_vpc_attachment": {
    "description": "Defines ec2_transit_gateway_vpc_attachment",
    "prefix": "tf-aws-resource-ec2_transit_gateway_vpc_attachment",
    "body": [
      "resource \"aws_ec2_transit_gateway_vpc_attachment\" \"example\" {",
      "  subnet_ids         = [\"${aws_subnet.example.id}\"]",
      "  transit_gateway_id = \"${aws_ec2_transit_gateway.example.id}\"",
      "  vpc_id             = \"${aws_vpc.example.id}\"",
      "}"
    ]
  },
  "aws-resource-ec2_transit_gateway_vpc_attachment_accepter": {
    "description": "Defines ec2_transit_gateway_vpc_attachment_accepter",
    "prefix": "tf-aws-resource-ec2_transit_gateway_vpc_attachment_accepter",
    "body": [
      "resource \"aws_ec2_transit_gateway_vpc_attachment_accepter\" \"example\" {",
      "  transit_gateway_attachment_id = \"${aws_ec2_transit_gateway_vpc_attachment.example.id}\"",
      "",
      "  tags = {",
      "    Name = \"Example cross-account attachment\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-ecr_lifecycle_policy": {
    "description": "Defines ecr_lifecycle_policy",
    "prefix": "tf-aws-resource-ecr_lifecycle_policy",
    "body": [
      "resource \"aws_ecr_repository\" \"foo\" {",
      "  name = \"bar\"",
      "}",
      "",
      "resource \"aws_ecr_lifecycle_policy\" \"foopolicy\" {",
      "  repository = \"${aws_ecr_repository.foo.name}\"",
      "",
      "  policy = <<EOF",
      "{",
      "    \"rules\": [",
      "        {",
      "            \"rulePriority\": 1,",
      "            \"description\": \"Expire images older than 14 days\",",
      "            \"selection\": {",
      "                \"tagStatus\": \"untagged\",",
      "                \"countType\": \"sinceImagePushed\",",
      "                \"countUnit\": \"days\",",
      "                \"countNumber\": 14",
      "            },",
      "            \"action\": {",
      "                \"type\": \"expire\"",
      "            }",
      "        }",
      "    ]",
      "}",
      "EOF",
      "}"
    ]
  },
  "aws-resource-ecr_repository": {
    "description": "Defines ecr_repository",
    "prefix": "tf-aws-resource-ecr_repository",
    "body": [
      "resource \"aws_ecr_repository\" \"foo\" {",
      "  name = \"bar\"",
      "}"
    ]
  },
  "aws-resource-ecr_repository_policy": {
    "description": "Defines ecr_repository_policy",
    "prefix": "tf-aws-resource-ecr_repository_policy",
    "body": [
      "resource \"aws_ecr_repository\" \"foo\" {",
      "  name = \"bar\"",
      "}",
      "",
      "resource \"aws_ecr_repository_policy\" \"foopolicy\" {",
      "  repository = \"${aws_ecr_repository.foo.name}\"",
      "",
      "  policy = <<EOF",
      "{",
      "    \"Version\": \"2008-10-17\",",
      "    \"Statement\": [",
      "        {",
      "            \"Sid\": \"new policy\",",
      "            \"Effect\": \"Allow\",",
      "            \"Principal\": \"*\",",
      "            \"Action\": [",
      "                \"ecr:GetDownloadUrlForLayer\",",
      "                \"ecr:BatchGetImage\",",
      "                \"ecr:BatchCheckLayerAvailability\",",
      "                \"ecr:PutImage\",",
      "                \"ecr:InitiateLayerUpload\",",
      "                \"ecr:UploadLayerPart\",",
      "                \"ecr:CompleteLayerUpload\",",
      "                \"ecr:DescribeRepositories\",",
      "                \"ecr:GetRepositoryPolicy\",",
      "                \"ecr:ListImages\",",
      "                \"ecr:DeleteRepository\",",
      "                \"ecr:BatchDeleteImage\",",
      "                \"ecr:SetRepositoryPolicy\",",
      "                \"ecr:DeleteRepositoryPolicy\"",
      "            ]",
      "        }",
      "    ]",
      "}",
      "EOF",
      "}"
    ]
  },
  "aws-resource-ecs_cluster": {
    "description": "Defines ecs_cluster",
    "prefix": "tf-aws-resource-ecs_cluster",
    "body": [
      "resource \"aws_ecs_cluster\" \"foo\" {",
      "  name = \"white-hart\"",
      "}"
    ]
  },
  "aws-resource-ecs_service": {
    "description": "Defines ecs_service",
    "prefix": "tf-aws-resource-ecs_service",
    "body": [
      "resource \"aws_ecs_service\" \"mongo\" {",
      "  name            = \"mongodb\"",
      "  cluster         = \"${aws_ecs_cluster.foo.id}\"",
      "  task_definition = \"${aws_ecs_task_definition.mongo.arn}\"",
      "  desired_count   = 3",
      "  iam_role        = \"${aws_iam_role.foo.arn}\"",
      "  depends_on      = [\"aws_iam_role_policy.foo\"]",
      "",
      "  ordered_placement_strategy {",
      "    type  = \"binpack\"",
      "    field = \"cpu\"",
      "  }",
      "",
      "  load_balancer {",
      "    target_group_arn = \"${aws_lb_target_group.foo.arn}\"",
      "    container_name   = \"mongo\"",
      "    container_port   = 8080",
      "  }",
      "",
      "  placement_constraints {",
      "    type       = \"memberOf\"",
      "    expression = \"attribute:ecs.availability-zone in [us-west-2a, us-west-2b]\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-ecs_task_definition": {
    "description": "Defines ecs_task_definition",
    "prefix": "tf-aws-resource-ecs_task_definition",
    "body": [
      "resource \"aws_ecs_task_definition\" \"service\" {",
      "  family                = \"service\"",
      "  container_definitions = \"${file(\"task-definitions/service.json\")}\"",
      "",
      "  volume {",
      "    name      = \"service-storage\"",
      "    host_path = \"/ecs/service-storage\"",
      "  }",
      "",
      "  placement_constraints {",
      "    type       = \"memberOf\"",
      "    expression = \"attribute:ecs.availability-zone in [us-west-2a, us-west-2b]\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-efs_file_system": {
    "description": "Defines efs_file_system",
    "prefix": "tf-aws-resource-efs_file_system",
    "body": [
      "resource \"aws_efs_file_system\" \"foo\" {",
      "  creation_token = \"my-product\"",
      "",
      "  tags = {",
      "    Name = \"MyProduct\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-efs_mount_target": {
    "description": "Defines efs_mount_target",
    "prefix": "tf-aws-resource-efs_mount_target",
    "body": [
      "resource \"aws_efs_mount_target\" \"alpha\" {",
      "  file_system_id = \"${aws_efs_file_system.foo.id}\"",
      "  subnet_id      = \"${aws_subnet.alpha.id}\"",
      "}",
      "",
      "resource \"aws_vpc\" \"foo\" {",
      "  cidr_block = \"10.0.0.0/16\"",
      "}",
      "",
      "resource \"aws_subnet\" \"alpha\" {",
      "  vpc_id            = \"${aws_vpc.foo.id}\"",
      "  availability_zone = \"us-west-2a\"",
      "  cidr_block        = \"10.0.1.0/24\"",
      "}"
    ]
  },
  "aws-resource-egress_only_internet_gateway": {
    "description": "Defines egress_only_internet_gateway",
    "prefix": "tf-aws-resource-egress_only_internet_gateway",
    "body": [
      "resource \"aws_vpc\" \"foo\" {",
      "  cidr_block                       = \"10.1.0.0/16\"",
      "  assign_generated_ipv6_cidr_block = true",
      "}",
      "",
      "resource \"aws_egress_only_internet_gateway\" \"foo\" {",
      "  vpc_id = \"${aws_vpc.foo.id}\"",
      "}"
    ]
  },
  "aws-resource-eip": {
    "description": "Defines eip",
    "prefix": "tf-aws-resource-eip",
    "body": [
      "resource \"aws_eip\" \"lb\" {",
      "  instance = \"${aws_instance.web.id}\"",
      "  vpc      = true",
      "}"
    ]
  },
  "aws-resource-eip_association": {
    "description": "Defines eip_association",
    "prefix": "tf-aws-resource-eip_association",
    "body": [
      "resource \"aws_eip_association\" \"eip_assoc\" {",
      "  instance_id   = \"${aws_instance.web.id}\"",
      "  allocation_id = \"${aws_eip.example.id}\"",
      "}",
      "",
      "resource \"aws_instance\" \"web\" {",
      "  ami               = \"ami-21f78e11\"",
      "  availability_zone = \"us-west-2a\"",
      "  instance_type     = \"t1.micro\"",
      "",
      "  tags = {",
      "    Name = \"HelloWorld\"",
      "  }",
      "}",
      "",
      "resource \"aws_eip\" \"example\" {",
      "  vpc = true",
      "}"
    ]
  },
  "aws-resource-eks_cluster": {
    "description": "Defines eks_cluster",
    "prefix": "tf-aws-resource-eks_cluster",
    "body": [
      "resource \"aws_eks_cluster\" \"example\" {",
      "  name     = \"example\"",
      "  role_arn = \"${aws_iam_role.example.arn}\"",
      "",
      "  vpc_config {",
      "    subnet_ids = [\"${aws_subnet.example1.id}\", \"${aws_subnet.example2.id}\"]",
      "  }",
      "}",
      "",
      "output \"endpoint\" {",
      "  value = \"${aws_eks_cluster.example.endpoint}\"",
      "}",
      "",
      "output \"kubeconfig-certificate-authority-data\" {",
      "  value = \"${aws_eks_cluster.example.certificate_authority.0.data}\"",
      "}"
    ]
  },
  "aws-resource-elastic_beanstalk_application": {
    "description": "Defines elastic_beanstalk_application",
    "prefix": "tf-aws-resource-elastic_beanstalk_application",
    "body": [
      "resource \"aws_elastic_beanstalk_application\" \"tftest\" {",
      "  name        = \"tf-test-name\"",
      "  description = \"tf-test-desc\"",
      "",
      "  appversion_lifecycle {",
      "    service_role          = \"${aws_iam_role.beanstalk_service.arn}\"",
      "    max_count             = 128",
      "    delete_source_from_s3 = true",
      "  }",
      "}"
    ]
  },
  "aws-resource-elastic_beanstalk_application_version": {
    "description": "Defines elastic_beanstalk_application_version",
    "prefix": "tf-aws-resource-elastic_beanstalk_application_version",
    "body": [
      "resource \"aws_s3_bucket\" \"default\" {",
      "  bucket = \"tftest.applicationversion.bucket\"",
      "}",
      "",
      "resource \"aws_s3_bucket_object\" \"default\" {",
      "  bucket = \"${aws_s3_bucket.default.id}\"",
      "  key    = \"beanstalk/go-v1.zip\"",
      "  source = \"go-v1.zip\"",
      "}",
      "",
      "resource \"aws_elastic_beanstalk_application\" \"default\" {",
      "  name        = \"tf-test-name\"",
      "  description = \"tf-test-desc\"",
      "}",
      "",
      "resource \"aws_elastic_beanstalk_application_version\" \"default\" {",
      "  name        = \"tf-test-version-label\"",
      "  application = \"tf-test-name\"",
      "  description = \"application version created by terraform\"",
      "  bucket      = \"${aws_s3_bucket.default.id}\"",
      "  key         = \"${aws_s3_bucket_object.default.id}\"",
      "}"
    ]
  },
  "aws-resource-elastic_beanstalk_configuration_template": {
    "description": "Defines elastic_beanstalk_configuration_template",
    "prefix": "tf-aws-resource-elastic_beanstalk_configuration_template",
    "body": [
      "resource \"aws_elastic_beanstalk_application\" \"tftest\" {",
      "  name        = \"tf-test-name\"",
      "  description = \"tf-test-desc\"",
      "}",
      "",
      "resource \"aws_elastic_beanstalk_configuration_template\" \"tf_template\" {",
      "  name                = \"tf-test-template-config\"",
      "  application         = \"${aws_elastic_beanstalk_application.tftest.name}\"",
      "  solution_stack_name = \"64bit Amazon Linux 2015.09 v2.0.8 running Go 1.4\"",
      "}"
    ]
  },
  "aws-resource-elastic_beanstalk_environment": {
    "description": "Defines elastic_beanstalk_environment",
    "prefix": "tf-aws-resource-elastic_beanstalk_environment",
    "body": [
      "resource \"aws_elastic_beanstalk_application\" \"tftest\" {",
      "  name        = \"tf-test-name\"",
      "  description = \"tf-test-desc\"",
      "}",
      "",
      "resource \"aws_elastic_beanstalk_environment\" \"tfenvtest\" {",
      "  name                = \"tf-test-name\"",
      "  application         = \"${aws_elastic_beanstalk_application.tftest.name}\"",
      "  solution_stack_name = \"64bit Amazon Linux 2015.03 v2.0.3 running Go 1.4\"",
      "}"
    ]
  },
  "aws-resource-elastic_transcoder_pipeline": {
    "description": "Defines elastic_transcoder_pipeline",
    "prefix": "tf-aws-resource-elastic_transcoder_pipeline",
    "body": [
      "resource \"aws_elastictranscoder_pipeline\" \"bar\" {",
      "  input_bucket = \"${aws_s3_bucket.input_bucket.bucket}\"",
      "  name         = \"aws_elastictranscoder_pipeline_tf_test_\"",
      "  role         = \"${aws_iam_role.test_role.arn}\"",
      "",
      "  content_config {",
      "    bucket        = \"${aws_s3_bucket.content_bucket.bucket}\"",
      "    storage_class = \"Standard\"",
      "  }",
      "",
      "  thumbnail_config {",
      "    bucket        = \"${aws_s3_bucket.thumb_bucket.bucket}\"",
      "    storage_class = \"Standard\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-elastic_transcoder_preset": {
    "description": "Defines elastic_transcoder_preset",
    "prefix": "tf-aws-resource-elastic_transcoder_preset",
    "body": [
      "resource \"aws_elastictranscoder_preset\" \"bar\" {",
      "  container   = \"mp4\"",
      "  description = \"Sample Preset\"",
      "  name        = \"sample_preset\"",
      "",
      "  audio {",
      "    audio_packing_mode = \"SingleTrack\"",
      "    bit_rate           = 96",
      "    channels           = 2",
      "    codec              = \"AAC\"",
      "    sample_rate        = 44100",
      "  }",
      "",
      "  audio_codec_options {",
      "    profile = \"AAC-LC\"",
      "  }",
      "",
      "  video {",
      "    bit_rate             = \"1600\"",
      "    codec                = \"H.264\"",
      "    display_aspect_ratio = \"16:9\"",
      "    fixed_gop            = \"false\"",
      "    frame_rate           = \"auto\"",
      "    max_frame_rate       = \"60\"",
      "    keyframes_max_dist   = 240",
      "    max_height           = \"auto\"",
      "    max_width            = \"auto\"",
      "    padding_policy       = \"Pad\"",
      "    sizing_policy        = \"Fit\"",
      "  }",
      "",
      "  video_codec_options = {",
      "    Profile                  = \"main\"",
      "    Level                    = \"2.2\"",
      "    MaxReferenceFrames       = 3",
      "    InterlacedMode           = \"Progressive\"",
      "    ColorSpaceConversionMode = \"None\"",
      "  }",
      "",
      "  video_watermarks {",
      "    id                = \"Terraform Test\"",
      "    max_width         = \"20%\"",
      "    max_height        = \"20%\"",
      "    sizing_policy     = \"ShrinkToFit\"",
      "    horizontal_align  = \"Right\"",
      "    horizontal_offset = \"10px\"",
      "    vertical_align    = \"Bottom\"",
      "    vertical_offset   = \"10px\"",
      "    opacity           = \"55.5\"",
      "    target            = \"Content\"",
      "  }",
      "",
      "  thumbnails {",
      "    format         = \"png\"",
      "    interval       = 120",
      "    max_width      = \"auto\"",
      "    max_height     = \"auto\"",
      "    padding_policy = \"Pad\"",
      "    sizing_policy  = \"Fit\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-elasticache_cluster": {
    "description": "Defines elasticache_cluster",
    "prefix": "tf-aws-resource-elasticache_cluster",
    "body": [
      "resource \"aws_elasticache_cluster\" \"example\" {",
      "  cluster_id           = \"cluster-example\"",
      "  engine               = \"memcached\"",
      "  node_type            = \"cache.m4.large\"",
      "  num_cache_nodes      = 2",
      "  parameter_group_name = \"default.memcached1.4\"",
      "  port                 = 11211",
      "}"
    ]
  },
  "aws-resource-elasticache_parameter_group": {
    "description": "Defines elasticache_parameter_group",
    "prefix": "tf-aws-resource-elasticache_parameter_group",
    "body": [
      "resource \"aws_elasticache_parameter_group\" \"default\" {",
      "  name   = \"cache-params\"",
      "  family = \"redis2.8\"",
      "",
      "  parameter {",
      "    name  = \"activerehashing\"",
      "    value = \"yes\"",
      "  }",
      "",
      "  parameter {",
      "    name  = \"min-slaves-to-write\"",
      "    value = \"2\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-elasticache_replication_group": {
    "description": "Defines elasticache_replication_group",
    "prefix": "tf-aws-resource-elasticache_replication_group",
    "body": [
      "resource \"aws_elasticache_replication_group\" \"example\" {",
      "  automatic_failover_enabled    = true",
      "  availability_zones            = [\"us-west-2a\", \"us-west-2b\"]",
      "  replication_group_id          = \"tf-rep-group-1\"",
      "  replication_group_description = \"test description\"",
      "  node_type                     = \"cache.m4.large\"",
      "  number_cache_clusters         = 2",
      "  parameter_group_name          = \"default.redis3.2\"",
      "  port                          = 6379",
      "}"
    ]
  },
  "aws-resource-elasticache_security_group": {
    "description": "Defines elasticache_security_group",
    "prefix": "tf-aws-resource-elasticache_security_group",
    "body": [
      "resource \"aws_security_group\" \"bar\" {",
      "  name = \"security-group\"",
      "}",
      "",
      "resource \"aws_elasticache_security_group\" \"bar\" {",
      "  name                 = \"elasticache-security-group\"",
      "  security_group_names = [\"${aws_security_group.bar.name}\"]",
      "}"
    ]
  },
  "aws-resource-elasticache_subnet_group": {
    "description": "Defines elasticache_subnet_group",
    "prefix": "tf-aws-resource-elasticache_subnet_group",
    "body": [
      "resource \"aws_vpc\" \"foo\" {",
      "  cidr_block = \"10.0.0.0/16\"",
      "",
      "  tags = {",
      "    Name = \"tf-test\"",
      "  }",
      "}",
      "",
      "resource \"aws_subnet\" \"foo\" {",
      "  vpc_id            = \"${aws_vpc.foo.id}\"",
      "  cidr_block        = \"10.0.0.0/24\"",
      "  availability_zone = \"us-west-2a\"",
      "",
      "  tags = {",
      "    Name = \"tf-test\"",
      "  }",
      "}",
      "",
      "resource \"aws_elasticache_subnet_group\" \"bar\" {",
      "  name       = \"tf-test-cache-subnet\"",
      "  subnet_ids = [\"${aws_subnet.foo.id}\"]",
      "}"
    ]
  },
  "aws-resource-elasticsearch_domain": {
    "description": "Defines elasticsearch_domain",
    "prefix": "tf-aws-resource-elasticsearch_domain",
    "body": [
      "resource \"aws_elasticsearch_domain\" \"example\" {",
      "  domain_name           = \"example\"",
      "  elasticsearch_version = \"1.5\"",
      "",
      "  cluster_config {",
      "    instance_type = \"r4.large.elasticsearch\"",
      "  }",
      "",
      "  snapshot_options {",
      "    automated_snapshot_start_hour = 23",
      "  }",
      "",
      "  tags = {",
      "    Domain = \"TestDomain\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-elasticsearch_domain_policy": {
    "description": "Defines elasticsearch_domain_policy",
    "prefix": "tf-aws-resource-elasticsearch_domain_policy",
    "body": [
      "resource \"aws_elasticsearch_domain\" \"example\" {",
      "  domain_name           = \"tf-test\"",
      "  elasticsearch_version = \"2.3\"",
      "}",
      "",
      "resource \"aws_elasticsearch_domain_policy\" \"main\" {",
      "  domain_name = \"${aws_elasticsearch_domain.example.domain_name}\"",
      "",
      "  access_policies = <<POLICIES",
      "{",
      "    \"Version\": \"2012-10-17\",",
      "    \"Statement\": [",
      "        {",
      "            \"Action\": \"es:*\",",
      "            \"Principal\": \"*\",",
      "            \"Effect\": \"Allow\",",
      "            \"Condition\": {",
      "                \"IpAddress\": {\"aws:SourceIp\": \"127.0.0.1/32\"}",
      "            },",
      "            \"Resource\": \"${aws_elasticsearch_domain.example.arn}/*\"",
      "        }",
      "    ]",
      "}",
      "POLICIES",
      "}"
    ]
  },
  "aws-resource-elb": {
    "description": "Defines elb",
    "prefix": "tf-aws-resource-elb",
    "body": [
      "# Create a new load balancer",
      "resource \"aws_elb\" \"bar\" {",
      "  name               = \"foobar-terraform-elb\"",
      "  availability_zones = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]",
      "",
      "  access_logs {",
      "    bucket        = \"foo\"",
      "    bucket_prefix = \"bar\"",
      "    interval      = 60",
      "  }",
      "",
      "  listener {",
      "    instance_port     = 8000",
      "    instance_protocol = \"http\"",
      "    lb_port           = 80",
      "    lb_protocol       = \"http\"",
      "  }",
      "",
      "  listener {",
      "    instance_port      = 8000",
      "    instance_protocol  = \"http\"",
      "    lb_port            = 443",
      "    lb_protocol        = \"https\"",
      "    ssl_certificate_id = \"arn:aws:iam::123456789012:server-certificate/certName\"",
      "  }",
      "",
      "  health_check {",
      "    healthy_threshold   = 2",
      "    unhealthy_threshold = 2",
      "    timeout             = 3",
      "    target              = \"HTTP:8000/\"",
      "    interval            = 30",
      "  }",
      "",
      "  instances                   = [\"${aws_instance.foo.id}\"]",
      "  cross_zone_load_balancing   = true",
      "  idle_timeout                = 400",
      "  connection_draining         = true",
      "  connection_draining_timeout = 400",
      "",
      "  tags = {",
      "    Name = \"foobar-terraform-elb\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-elb_attachment": {
    "description": "Defines elb_attachment",
    "prefix": "tf-aws-resource-elb_attachment",
    "body": [
      "# Create a new load balancer attachment",
      "resource \"aws_elb_attachment\" \"baz\" {",
      "  elb      = \"${aws_elb.bar.id}\"",
      "  instance = \"${aws_instance.foo.id}\"",
      "}"
    ]
  },
  "aws-resource-emr_cluster": {
    "description": "Defines emr_cluster",
    "prefix": "tf-aws-resource-emr_cluster",
    "body": [
      "resource \"aws_emr_cluster\" \"cluster\" {",
      "  name          = \"emr-test-arn\"",
      "  release_label = \"emr-4.6.0\"",
      "  applications  = [\"Spark\"]",
      "",
      "  additional_info = <<EOF",
      "{",
      "  \"instanceAwsClientConfiguration\": {",
      "    \"proxyPort\": 8099,",
      "    \"proxyHost\": \"myproxy.example.com\"",
      "  }",
      "}",
      "EOF",
      "",
      "  termination_protection            = false",
      "  keep_job_flow_alive_when_no_steps = true",
      "",
      "  ec2_attributes {",
      "    subnet_id                         = \"${aws_subnet.main.id}\"",
      "    emr_managed_master_security_group = \"${aws_security_group.sg.id}\"",
      "    emr_managed_slave_security_group  = \"${aws_security_group.sg.id}\"",
      "    instance_profile                  = \"${aws_iam_instance_profile.emr_profile.arn}\"",
      "  }",
      "",
      "  master_instance_group {",
      "    instance_type = \"m4.large\"",
      "  }",
      "",
      "  core_instance_group {",
      "    instance_type  = \"c4.large\"",
      "    instance_count = 1",
      "",
      "    ebs_config {",
      "      size                 = \"40\"",
      "      type                 = \"gp2\"",
      "      volumes_per_instance = 1",
      "    }",
      "",
      "    bid_price = \"0.30\"",
      "",
      "    autoscaling_policy = <<EOF",
      "{",
      "\"Constraints\": {",
      "  \"MinCapacity\": 1,",
      "  \"MaxCapacity\": 2",
      "},",
      "\"Rules\": [",
      "  {",
      "    \"Name\": \"ScaleOutMemoryPercentage\",",
      "    \"Description\": \"Scale out if YARNMemoryAvailablePercentage is less than 15\",",
      "    \"Action\": {",
      "      \"SimpleScalingPolicyConfiguration\": {",
      "        \"AdjustmentType\": \"CHANGE_IN_CAPACITY\",",
      "        \"ScalingAdjustment\": 1,",
      "        \"CoolDown\": 300",
      "      }",
      "    },",
      "    \"Trigger\": {",
      "      \"CloudWatchAlarmDefinition\": {",
      "        \"ComparisonOperator\": \"LESS_THAN\",",
      "        \"EvaluationPeriods\": 1,",
      "        \"MetricName\": \"YARNMemoryAvailablePercentage\",",
      "        \"Namespace\": \"AWS/ElasticMapReduce\",",
      "        \"Period\": 300,",
      "        \"Statistic\": \"AVERAGE\",",
      "        \"Threshold\": 15.0,",
      "        \"Unit\": \"PERCENT\"",
      "      }",
      "    }",
      "  }",
      "]",
      "}",
      "EOF",
      "  }",
      "",
      "  ebs_root_volume_size = 100",
      "",
      "  tags = {",
      "    role = \"rolename\"",
      "    env  = \"env\"",
      "  }",
      "",
      "  bootstrap_action {",
      "    path = \"s3://elasticmapreduce/bootstrap-actions/run-if\"",
      "    name = \"runif\"",
      "    args = [\"instance.isMaster=true\", \"echo running on master node\"]",
      "  }",
      "",
      "  configurations_json = <<EOF",
      "  [",
      "    {",
      "      \"Classification\": \"hadoop-env\",",
      "      \"Configurations\": [",
      "        {",
      "          \"Classification\": \"export\",",
      "          \"Properties\": {",
      "            \"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"",
      "          }",
      "        }",
      "      ],",
      "      \"Properties\": {}",
      "    },",
      "    {",
      "      \"Classification\": \"spark-env\",",
      "      \"Configurations\": [",
      "        {",
      "          \"Classification\": \"export\",",
      "          \"Properties\": {",
      "            \"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"",
      "          }",
      "        }",
      "      ],",
      "      \"Properties\": {}",
      "    }",
      "  ]",
      "EOF",
      "",
      "  service_role = \"${aws_iam_role.iam_emr_service_role.arn}\"",
      "}"
    ]
  },
  "aws-resource-emr_instance_group": {
    "description": "Defines emr_instance_group",
    "prefix": "tf-aws-resource-emr_instance_group",
    "body": [
      "resource \"aws_emr_instance_group\" \"task\" {",
      "  cluster_id     = \"${aws_emr_cluster.tf-test-cluster.id}\"",
      "  instance_count = 1",
      "  instance_type  = \"m5.xlarge\"",
      "  name           = \"my little instance group\"",
      "}"
    ]
  },
  "aws-resource-emr_security_configuration": {
    "description": "Defines emr_security_configuration",
    "prefix": "tf-aws-resource-emr_security_configuration",
    "body": [
      "resource \"aws_emr_security_configuration\" \"foo\" {",
      "  name = \"emrsc_other\"",
      "",
      "  configuration = <<EOF",
      "{",
      "  \"EncryptionConfiguration\": {",
      "    \"AtRestEncryptionConfiguration\": {",
      "      \"S3EncryptionConfiguration\": {",
      "        \"EncryptionMode\": \"SSE-S3\"",
      "      },",
      "      \"LocalDiskEncryptionConfiguration\": {",
      "        \"EncryptionKeyProviderType\": \"AwsKms\",",
      "        \"AwsKmsKey\": \"arn:aws:kms:us-west-2:187416307283:alias/tf_emr_test_key\"",
      "      }",
      "    },",
      "    \"EnableInTransitEncryption\": false,",
      "    \"EnableAtRestEncryption\": true",
      "  }",
      "}",
      "EOF",
      "}"
    ]
  },
  "aws-resource-flow_log": {
    "description": "Defines flow_log",
    "prefix": "tf-aws-resource-flow_log",
    "body": [
      "resource \"aws_flow_log\" \"example\" {",
      "  iam_role_arn    = \"${aws_iam_role.example.arn}\"",
      "  log_destination = \"${aws_cloudwatch_log_group.example.arn}\"",
      "  traffic_type    = \"ALL\"",
      "  vpc_id          = \"${aws_vpc.example.id}\"",
      "}",
      "",
      "resource \"aws_cloudwatch_log_group\" \"example\" {",
      "  name = \"example\"",
      "}",
      "",
      "resource \"aws_iam_role\" \"example\" {",
      "  name = \"example\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Sid\": \"\",",
      "      \"Effect\": \"Allow\",",
      "      \"Principal\": {",
      "        \"Service\": \"vpc-flow-logs.amazonaws.com\"",
      "      },",
      "      \"Action\": \"sts:AssumeRole\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_role_policy\" \"example\" {",
      "  name = \"example\"",
      "  role = \"${aws_iam_role.example.id}\"",
      "",
      "  policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": [",
      "        \"logs:CreateLogGroup\",",
      "        \"logs:CreateLogStream\",",
      "        \"logs:PutLogEvents\",",
      "        \"logs:DescribeLogGroups\",",
      "        \"logs:DescribeLogStreams\"",
      "      ],",
      "      \"Effect\": \"Allow\",",
      "      \"Resource\": \"*\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}"
    ]
  },
  "aws-resource-gamelift_alias": {
    "description": "Defines gamelift_alias",
    "prefix": "tf-aws-resource-gamelift_alias",
    "body": [
      "resource \"aws_gamelift_alias\" \"example\" {",
      "  name        = \"example-alias\"",
      "  description = \"Example Description\"",
      "",
      "  routing_strategy {",
      "    message = \"Example Message\"",
      "    type    = \"TERMINAL\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-gamelift_build": {
    "description": "Defines gamelift_build",
    "prefix": "tf-aws-resource-gamelift_build",
    "body": [
      "resource \"aws_gamelift_build\" \"test\" {",
      "  name             = \"example-build\"",
      "  operating_system = \"WINDOWS_2012\"",
      "",
      "  storage_location {",
      "    bucket   = \"${aws_s3_bucket.test.bucket}\"",
      "    key      = \"${aws_s3_bucket_object.test.key}\"",
      "    role_arn = \"${aws_iam_role.test.arn}\"",
      "  }",
      "",
      "  depends_on = [\"aws_iam_role_policy.test\"]",
      "}"
    ]
  },
  "aws-resource-gamelift_fleet": {
    "description": "Defines gamelift_fleet",
    "prefix": "tf-aws-resource-gamelift_fleet",
    "body": [
      "resource \"aws_gamelift_fleet\" \"example\" {",
      "  build_id          = \"${aws_gamelift_build.example.id}\"",
      "  ec2_instance_type = \"t2.micro\"",
      "  name              = \"example-fleet-name\"",
      "",
      "  runtime_configuration {",
      "    server_process {",
      "      concurrent_executions = 1",
      "      launch_path           = \"C:\\\\game\\\\GomokuServer.exe\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-gamelift_game_session_queue": {
    "description": "Defines gamelift_game_session_queue",
    "prefix": "tf-aws-resource-gamelift_game_session_queue",
    "body": [
      "resource \"aws_gamelift_game_session_queue\" \"test\" {",
      "  name = \"example-session-queue\"",
      "",
      "  destinations = [",
      "    \"${aws_gamelift_fleet.us_west_2_fleet.arn}\",",
      "    \"${aws_gamelift_fleet.eu_central_1_fleet.arn}\",",
      "  ]",
      "",
      "  player_latency_policy {",
      "    maximum_individual_player_latency_milliseconds = 100",
      "    policy_duration_seconds                        = 5",
      "  }",
      "",
      "  player_latency_policy {",
      "    maximum_individual_player_latency_milliseconds = 200",
      "  }",
      "",
      "  timeout_in_seconds = 60",
      "}"
    ]
  },
  "aws-resource-glacier_vault": {
    "description": "Defines glacier_vault",
    "prefix": "tf-aws-resource-glacier_vault",
    "body": [
      "resource \"aws_sns_topic\" \"aws_sns_topic\" {",
      "  name = \"glacier-sns-topic\"",
      "}",
      "",
      "resource \"aws_glacier_vault\" \"my_archive\" {",
      "  name = \"MyArchive\"",
      "",
      "  notification {",
      "    sns_topic = \"${aws_sns_topic.aws_sns_topic.arn}\"",
      "    events    = [\"ArchiveRetrievalCompleted\", \"InventoryRetrievalCompleted\"]",
      "  }",
      "",
      "  access_policy = <<EOF",
      "{",
      "    \"Version\":\"2012-10-17\",",
      "    \"Statement\":[",
      "       {",
      "          \"Sid\": \"add-read-only-perm\",",
      "          \"Principal\": \"*\",",
      "          \"Effect\": \"Allow\",",
      "          \"Action\": [",
      "             \"glacier:InitiateJob\",",
      "             \"glacier:GetJobOutput\"",
      "          ],",
      "          \"Resource\": \"arn:aws:glacier:eu-west-1:432981146916:vaults/MyArchive\"",
      "       }",
      "    ]",
      "}",
      "EOF",
      "",
      "  tags = {",
      "    Test = \"MyArchive\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-glacier_vault_lock": {
    "description": "Defines glacier_vault_lock",
    "prefix": "tf-aws-resource-glacier_vault_lock",
    "body": [
      "resource \"aws_glacier_vault\" \"example\" {",
      "  name = \"example\"",
      "}",
      "",
      "data \"aws_iam_policy_document\" \"example\" {",
      "  statement {",
      "    actions   = [\"glacier:DeleteArchive\"]",
      "    effect    = \"Deny\"",
      "    resources = [\"${aws_glacier_vault.example.arn}\"]",
      "",
      "    condition {",
      "      test     = \"NumericLessThanEquals\"",
      "      variable = \"glacier:ArchiveAgeinDays\"",
      "      values   = [\"365\"]",
      "    }",
      "  }",
      "}",
      "",
      "resource \"aws_glacier_vault_lock\" \"example\" {",
      "  complete_lock = false",
      "  policy        = \"${data.aws_iam_policy_document.example.json}\"",
      "  vault_name    = \"${aws_glacier_vault.example.name}\"",
      "}"
    ]
  },
  "aws-resource-globalaccelerator_accelerator": {
    "description": "Defines globalaccelerator_accelerator",
    "prefix": "tf-aws-resource-globalaccelerator_accelerator",
    "body": [
      "resource \"aws_globalaccelerator_accelerator\" \"example\" {",
      "  name            = \"Example\"",
      "  ip_address_type = \"IPV4\"",
      "  enabled         = true",
      "",
      "  attributes {",
      "    flow_logs_enabled   = true",
      "    flow_logs_s3_bucket = \"example-bucket\"",
      "    flow_logs_s3_prefix = \"flow-logs/\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-globalaccelerator_endpoint_group": {
    "description": "Defines globalaccelerator_endpoint_group",
    "prefix": "tf-aws-resource-globalaccelerator_endpoint_group",
    "body": [
      "resource \"aws_globalaccelerator_endpoint_group\" \"example\" {",
      "  listener_arn = \"${aws_globalaccelerator_listener.example.id}\"",
      "",
      "  endpoint_configuration {",
      "    endpoint_id = \"${aws_lb.example.arn}\"",
      "    weight      = 100",
      "  }",
      "}"
    ]
  },
  "aws-resource-globalaccelerator_listener": {
    "description": "Defines globalaccelerator_listener",
    "prefix": "tf-aws-resource-globalaccelerator_listener",
    "body": [
      "resource \"aws_globalaccelerator_accelerator\" \"example\" {",
      "  name            = \"Example\"",
      "  ip_address_type = \"IPV4\"",
      "  enabled         = true",
      "",
      "  attributes {",
      "    flow_logs_enabled   = true",
      "    flow_logs_s3_bucket = \"example-bucket\"",
      "    flow_logs_s3_prefix = \"flow-logs/\"",
      "  }",
      "}",
      "",
      "resource \"aws_globalaccelerator_listener\" \"example\" {",
      "  accelerator_arn = \"${aws_globalaccelerator_accelerator.example.id}\"",
      "  client_affinity = \"SOURCE_IP\"",
      "  protocol        = \"TCP\"",
      "",
      "  port_range {",
      "    from_port = 80",
      "    to_port   = 80",
      "  }",
      "}"
    ]
  },
  "aws-resource-glue_catalog_database": {
    "description": "Defines glue_catalog_database",
    "prefix": "tf-aws-resource-glue_catalog_database",
    "body": [
      "resource \"aws_glue_catalog_database\" \"aws_glue_catalog_database\" {",
      "  name = \"MyCatalogDatabase\"",
      "}"
    ]
  },
  "aws-resource-glue_catalog_table": {
    "description": "Defines glue_catalog_table",
    "prefix": "tf-aws-resource-glue_catalog_table",
    "body": [
      "resource \"aws_glue_catalog_table\" \"aws_glue_catalog_table\" {",
      "  name          = \"MyCatalogTable\"",
      "  database_name = \"MyCatalogDatabase\"",
      "}"
    ]
  },
  "aws-resource-glue_classifier": {
    "description": "Defines glue_classifier",
    "prefix": "tf-aws-resource-glue_classifier",
    "body": [
      "resource \"aws_glue_classifier\" \"example\" {",
      "  name = \"example\"",
      "",
      "  grok_classifier {",
      "    classification = \"example\"",
      "    grok_pattern   = \"example\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-glue_connection": {
    "description": "Defines glue_connection",
    "prefix": "tf-aws-resource-glue_connection",
    "body": [
      "resource \"aws_glue_connection\" \"example\" {",
      "  connection_properties = {",
      "    JDBC_CONNECTION_URL = \"jdbc:mysql://example.com/exampledatabase\"",
      "    PASSWORD            = \"examplepassword\"",
      "    USERNAME            = \"exampleusername\"",
      "  }",
      "",
      "  name = \"example\"",
      "}"
    ]
  },
  "aws-resource-glue_crawler": {
    "description": "Defines glue_crawler",
    "prefix": "tf-aws-resource-glue_crawler",
    "body": [
      "resource \"aws_glue_crawler\" \"example\" {",
      "  database_name = \"${aws_glue_catalog_database.example.name}\"",
      "  name          = \"example\"",
      "  role          = \"${aws_iam_role.example.arn}\"",
      "",
      "  dynamodb_target {",
      "    path = \"table-name\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-glue_job": {
    "description": "Defines glue_job",
    "prefix": "tf-aws-resource-glue_job",
    "body": [
      "resource \"aws_glue_job\" \"example\" {",
      "  name     = \"example\"",
      "  role_arn = \"${aws_iam_role.example.arn}\"",
      "",
      "  command {",
      "    script_location = \"s3://${aws_s3_bucket.example.bucket}/example.py\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-glue_security_configuration": {
    "description": "Defines glue_security_configuration",
    "prefix": "tf-aws-resource-glue_security_configuration",
    "body": [
      "resource \"aws_glue_security_configuration\" \"example\" {",
      "  name = \"example\"",
      "",
      "  encryption_configuration {",
      "    cloudwatch_encryption {",
      "      cloudwatch_encryption_mode = \"DISABLED\"",
      "    }",
      "",
      "    job_bookmarks_encryption {",
      "      job_bookmarks_encryption_mode = \"DISABLED\"",
      "    }",
      "",
      "    s3_encryption {",
      "      kms_key_arn        = \"${data.aws_kms_key.example.arn}\"",
      "      s3_encryption_mode = \"SSE-KMS\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-glue_trigger": {
    "description": "Defines glue_trigger",
    "prefix": "tf-aws-resource-glue_trigger",
    "body": [
      "resource \"aws_glue_trigger\" \"example\" {",
      "  name = \"example\"",
      "  type = \"CONDITIONAL\"",
      "",
      "  actions {",
      "    job_name = \"${aws_glue_job.example1.name}\"",
      "  }",
      "",
      "  predicate {",
      "    conditions {",
      "      job_name = \"${aws_glue_job.example2.name}\"",
      "      state    = \"SUCCEEDED\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-guardduty_detector": {
    "description": "Defines guardduty_detector",
    "prefix": "tf-aws-resource-guardduty_detector",
    "body": [
      "resource \"aws_guardduty_detector\" \"MyDetector\" {",
      "  enable = true",
      "}"
    ]
  },
  "aws-resource-guardduty_invite_accepter": {
    "description": "Defines guardduty_invite_accepter",
    "prefix": "tf-aws-resource-guardduty_invite_accepter",
    "body": [
      "resource \"aws_guardduty_detector\" \"master\" {}",
      "",
      "resource \"aws_guardduty_detector\" \"member\" {",
      "  provider = \"aws.dev\"",
      "}",
      "",
      "resource \"aws_guardduty_member\" \"dev\" {",
      "  account_id  = \"${aws_guardduty_detector.member.account_id}\"",
      "  detector_id = \"${aws_guardduty_detector.master.id}\"",
      "  email       = \"required@example.com\"",
      "  invite      = true",
      "}",
      "",
      "resource \"aws_guardduty_invite_accepter\" \"member\" {",
      "  depends_on = [\"aws_guardduty_member.dev\"]",
      "  provider   = \"aws.dev\"",
      "",
      "  detector_id       = \"${aws_guardduty_detector.member.id}\"",
      "  master_account_id = \"${aws_guardduty_detector.master.account_id}\"",
      "}"
    ]
  },
  "aws-resource-guardduty_ipset": {
    "description": "Defines guardduty_ipset",
    "prefix": "tf-aws-resource-guardduty_ipset",
    "body": [
      "resource \"aws_guardduty_detector\" \"master\" {",
      "  enable = true",
      "}",
      "",
      "resource \"aws_s3_bucket\" \"bucket\" {",
      "  acl = \"private\"",
      "}",
      "",
      "resource \"aws_s3_bucket_object\" \"MyIPSet\" {",
      "  acl     = \"public-read\"",
      "  content = \"10.0.0.0/8\\n\"",
      "  bucket  = \"${aws_s3_bucket.bucket.id}\"",
      "  key     = \"MyIPSet\"",
      "}",
      "",
      "resource \"aws_guardduty_ipset\" \"MyIPSet\" {",
      "  activate    = true",
      "  detector_id = \"${aws_guardduty_detector.master.id}\"",
      "  format      = \"TXT\"",
      "  location    = \"https://s3.amazonaws.com/${aws_s3_bucket_object.MyIPSet.bucket}/${aws_s3_bucket_object.MyIPSet.key}\"",
      "  name        = \"MyIPSet\"",
      "}"
    ]
  },
  "aws-resource-guardduty_member": {
    "description": "Defines guardduty_member",
    "prefix": "tf-aws-resource-guardduty_member",
    "body": [
      "resource \"aws_guardduty_detector\" \"master\" {",
      "  enable = true",
      "}",
      "",
      "resource \"aws_guardduty_detector\" \"member\" {",
      "  provider = \"aws.dev\"",
      "",
      "  enable = true",
      "}",
      "",
      "resource \"aws_guardduty_member\" \"member\" {",
      "  account_id         = \"${aws_guardduty_detector.member.account_id}\"",
      "  detector_id        = \"${aws_guardduty_detector.master.id}\"",
      "  email              = \"required@example.com\"",
      "  invite             = true",
      "  invitation_message = \"please accept guardduty invitation\"",
      "}"
    ]
  },
  "aws-resource-guardduty_threatintelset": {
    "description": "Defines guardduty_threatintelset",
    "prefix": "tf-aws-resource-guardduty_threatintelset",
    "body": [
      "resource \"aws_guardduty_detector\" \"master\" {",
      "  enable = true",
      "}",
      "",
      "resource \"aws_s3_bucket\" \"bucket\" {",
      "  acl = \"private\"",
      "}",
      "",
      "resource \"aws_s3_bucket_object\" \"MyThreatIntelSet\" {",
      "  acl     = \"public-read\"",
      "  content = \"10.0.0.0/8\\n\"",
      "  bucket  = \"${aws_s3_bucket.bucket.id}\"",
      "  key     = \"MyThreatIntelSet\"",
      "}",
      "",
      "resource \"aws_guardduty_threatintelset\" \"MyThreatIntelSet\" {",
      "  activate    = true",
      "  detector_id = \"${aws_guardduty_detector.master.id}\"",
      "  format      = \"TXT\"",
      "  location    = \"https://s3.amazonaws.com/${aws_s3_bucket_object.MyThreatIntelSet.bucket}/${aws_s3_bucket_object.MyThreatIntelSet.key}\"",
      "  name        = \"MyThreatIntelSet\"",
      "}"
    ]
  },
  "aws-resource-iam_access_key": {
    "description": "Defines iam_access_key",
    "prefix": "tf-aws-resource-iam_access_key",
    "body": [
      "resource \"aws_iam_access_key\" \"lb\" {",
      "  user    = \"${aws_iam_user.lb.name}\"",
      "  pgp_key = \"keybase:some_person_that_exists\"",
      "}",
      "",
      "resource \"aws_iam_user\" \"lb\" {",
      "  name = \"loadbalancer\"",
      "  path = \"/system/\"",
      "}",
      "",
      "resource \"aws_iam_user_policy\" \"lb_ro\" {",
      "  name = \"test\"",
      "  user = \"${aws_iam_user.lb.name}\"",
      "",
      "  policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": [",
      "        \"ec2:Describe*\"",
      "      ],",
      "      \"Effect\": \"Allow\",",
      "      \"Resource\": \"*\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "output \"secret\" {",
      "  value = \"${aws_iam_access_key.lb.encrypted_secret}\"",
      "}"
    ]
  },
  "aws-resource-iam_account_alias": {
    "description": "Defines iam_account_alias",
    "prefix": "tf-aws-resource-iam_account_alias",
    "body": [
      "resource \"aws_iam_account_alias\" \"alias\" {",
      "  account_alias = \"my-account-alias\"",
      "}"
    ]
  },
  "aws-resource-iam_account_password_policy": {
    "description": "Defines iam_account_password_policy",
    "prefix": "tf-aws-resource-iam_account_password_policy",
    "body": [
      "resource \"aws_iam_account_password_policy\" \"strict\" {",
      "  minimum_password_length        = 8",
      "  require_lowercase_characters   = true",
      "  require_numbers                = true",
      "  require_uppercase_characters   = true",
      "  require_symbols                = true",
      "  allow_users_to_change_password = true",
      "}"
    ]
  },
  "aws-resource-iam_group": {
    "description": "Defines iam_group",
    "prefix": "tf-aws-resource-iam_group",
    "body": [
      "resource \"aws_iam_group\" \"developers\" {",
      "  name = \"developers\"",
      "  path = \"/users/\"",
      "}"
    ]
  },
  "aws-resource-iam_group_membership": {
    "description": "Defines iam_group_membership",
    "prefix": "tf-aws-resource-iam_group_membership",
    "body": [
      "resource \"aws_iam_group_membership\" \"team\" {",
      "  name = \"tf-testing-group-membership\"",
      "",
      "  users = [",
      "    \"${aws_iam_user.user_one.name}\",",
      "    \"${aws_iam_user.user_two.name}\",",
      "  ]",
      "",
      "  group = \"${aws_iam_group.group.name}\"",
      "}",
      "",
      "resource \"aws_iam_group\" \"group\" {",
      "  name = \"test-group\"",
      "}",
      "",
      "resource \"aws_iam_user\" \"user_one\" {",
      "  name = \"test-user\"",
      "}",
      "",
      "resource \"aws_iam_user\" \"user_two\" {",
      "  name = \"test-user-two\"",
      "}"
    ]
  },
  "aws-resource-iam_group_policy": {
    "description": "Defines iam_group_policy",
    "prefix": "tf-aws-resource-iam_group_policy",
    "body": [
      "resource \"aws_iam_group_policy\" \"my_developer_policy\" {",
      "  name  = \"my_developer_policy\"",
      "  group = \"${aws_iam_group.my_developers.id}\"",
      "",
      "  policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": [",
      "        \"ec2:Describe*\"",
      "      ],",
      "      \"Effect\": \"Allow\",",
      "      \"Resource\": \"*\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_group\" \"my_developers\" {",
      "  name = \"developers\"",
      "  path = \"/users/\"",
      "}"
    ]
  },
  "aws-resource-iam_group_policy_attachment": {
    "description": "Defines iam_group_policy_attachment",
    "prefix": "tf-aws-resource-iam_group_policy_attachment",
    "body": [
      "resource \"aws_iam_group\" \"group\" {",
      "  name = \"test-group\"",
      "}",
      "",
      "resource \"aws_iam_policy\" \"policy\" {",
      "  name        = \"test-policy\"",
      "  description = \"A test policy\"",
      "  policy      = \"\"              # insert policy here",
      "}",
      "",
      "resource \"aws_iam_group_policy_attachment\" \"test-attach\" {",
      "  group      = \"${aws_iam_group.group.name}\"",
      "  policy_arn = \"${aws_iam_policy.policy.arn}\"",
      "}"
    ]
  },
  "aws-resource-iam_instance_profile": {
    "description": "Defines iam_instance_profile",
    "prefix": "tf-aws-resource-iam_instance_profile",
    "body": [
      "resource \"aws_iam_instance_profile\" \"test_profile\" {",
      "  name = \"test_profile\"",
      "  role = \"${aws_iam_role.role.name}\"",
      "}",
      "",
      "resource \"aws_iam_role\" \"role\" {",
      "  name = \"test_role\"",
      "  path = \"/\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "    \"Version\": \"2012-10-17\",",
      "    \"Statement\": [",
      "        {",
      "            \"Action\": \"sts:AssumeRole\",",
      "            \"Principal\": {",
      "               \"Service\": \"ec2.amazonaws.com\"",
      "            },",
      "            \"Effect\": \"Allow\",",
      "            \"Sid\": \"\"",
      "        }",
      "    ]",
      "}",
      "EOF",
      "}"
    ]
  },
  "aws-resource-iam_openid_connect_provider": {
    "description": "Defines iam_openid_connect_provider",
    "prefix": "tf-aws-resource-iam_openid_connect_provider",
    "body": [
      "resource \"aws_iam_openid_connect_provider\" \"default\" {",
      "  url = \"https://accounts.google.com\"",
      "",
      "  client_id_list = [",
      "    \"266362248691-342342xasdasdasda-apps.googleusercontent.com\",",
      "  ]",
      "",
      "  thumbprint_list = []",
      "}"
    ]
  },
  "aws-resource-iam_policy": {
    "description": "Defines iam_policy",
    "prefix": "tf-aws-resource-iam_policy",
    "body": [
      "resource \"aws_iam_policy\" \"policy\" {",
      "  name        = \"test_policy\"",
      "  path        = \"/\"",
      "  description = \"My test policy\"",
      "",
      "  policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": [",
      "        \"ec2:Describe*\"",
      "      ],",
      "      \"Effect\": \"Allow\",",
      "      \"Resource\": \"*\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}"
    ]
  },
  "aws-resource-iam_policy_attachment": {
    "description": "Defines iam_policy_attachment",
    "prefix": "tf-aws-resource-iam_policy_attachment",
    "body": [
      "resource \"aws_iam_user\" \"user\" {",
      "  name = \"test-user\"",
      "}",
      "",
      "resource \"aws_iam_role\" \"role\" {",
      "  name = \"test-role\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": \"sts:AssumeRole\",",
      "      \"Principal\": {",
      "        \"Service\": \"ec2.amazonaws.com\"",
      "      },",
      "      \"Effect\": \"Allow\",",
      "      \"Sid\": \"\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_group\" \"group\" {",
      "  name = \"test-group\"",
      "}",
      "",
      "resource \"aws_iam_policy\" \"policy\" {",
      "  name        = \"test-policy\"",
      "  description = \"A test policy\"",
      "",
      "  policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": [",
      "        \"ec2:Describe*\"",
      "      ],",
      "      \"Effect\": \"Allow\",",
      "      \"Resource\": \"*\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_policy_attachment\" \"test-attach\" {",
      "  name       = \"test-attachment\"",
      "  users      = [\"${aws_iam_user.user.name}\"]",
      "  roles      = [\"${aws_iam_role.role.name}\"]",
      "  groups     = [\"${aws_iam_group.group.name}\"]",
      "  policy_arn = \"${aws_iam_policy.policy.arn}\"",
      "}"
    ]
  },
  "aws-resource-iam_role": {
    "description": "Defines iam_role",
    "prefix": "tf-aws-resource-iam_role",
    "body": [
      "resource \"aws_iam_role\" \"test_role\" {",
      "  name = \"test_role\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": \"sts:AssumeRole\",",
      "      \"Principal\": {",
      "        \"Service\": \"ec2.amazonaws.com\"",
      "      },",
      "      \"Effect\": \"Allow\",",
      "      \"Sid\": \"\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "",
      "  tags = {",
      "    tag-key = \"tag-value\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-iam_role_policy": {
    "description": "Defines iam_role_policy",
    "prefix": "tf-aws-resource-iam_role_policy",
    "body": [
      "resource \"aws_iam_role_policy\" \"test_policy\" {",
      "  name = \"test_policy\"",
      "  role = \"${aws_iam_role.test_role.id}\"",
      "",
      "  policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": [",
      "        \"ec2:Describe*\"",
      "      ],",
      "      \"Effect\": \"Allow\",",
      "      \"Resource\": \"*\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_role\" \"test_role\" {",
      "  name = \"test_role\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": \"sts:AssumeRole\",",
      "      \"Principal\": {",
      "        \"Service\": \"ec2.amazonaws.com\"",
      "      },",
      "      \"Effect\": \"Allow\",",
      "      \"Sid\": \"\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}"
    ]
  },
  "aws-resource-iam_role_policy_attachment": {
    "description": "Defines iam_role_policy_attachment",
    "prefix": "tf-aws-resource-iam_role_policy_attachment",
    "body": [
      "resource \"aws_iam_role\" \"role\" {",
      "  name = \"test-role\"",
      "",
      "  assume_role_policy = <<EOF",
      "    {",
      "      \"Version\": \"2012-10-17\",",
      "      \"Statement\": [",
      "        {",
      "          \"Action\": \"sts:AssumeRole\",",
      "          \"Principal\": {",
      "            \"Service\": \"ec2.amazonaws.com\"",
      "          },",
      "          \"Effect\": \"Allow\",",
      "          \"Sid\": \"\"",
      "        }",
      "      ]",
      "    }",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_policy\" \"policy\" {",
      "  name        = \"test-policy\"",
      "  description = \"A test policy\"",
      "",
      "  policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": [",
      "        \"ec2:Describe*\"",
      "      ],",
      "      \"Effect\": \"Allow\",",
      "      \"Resource\": \"*\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_role_policy_attachment\" \"test-attach\" {",
      "  role       = \"${aws_iam_role.role.name}\"",
      "  policy_arn = \"${aws_iam_policy.policy.arn}\"",
      "}"
    ]
  },
  "aws-resource-iam_saml_provider": {
    "description": "Defines iam_saml_provider",
    "prefix": "tf-aws-resource-iam_saml_provider",
    "body": [
      "resource \"aws_iam_saml_provider\" \"default\" {",
      "  name                   = \"myprovider\"",
      "  saml_metadata_document = \"${file(\"saml-metadata.xml\")}\"",
      "}"
    ]
  },
  "aws-resource-iam_server_certificate": {
    "description": "Defines iam_server_certificate",
    "prefix": "tf-aws-resource-iam_server_certificate",
    "body": [
      "resource \"aws_iam_server_certificate\" \"test_cert\" {",
      "  name             = \"some_test_cert\"",
      "  certificate_body = \"${file(\"self-ca-cert.pem\")}\"",
      "  private_key      = \"${file(\"test-key.pem\")}\"",
      "}"
    ]
  },
  "aws-resource-iam_service_linked_role": {
    "description": "Defines iam_service_linked_role",
    "prefix": "tf-aws-resource-iam_service_linked_role",
    "body": [
      "resource \"aws_iam_service_linked_role\" \"elasticbeanstalk\" {",
      "  aws_service_name = \"elasticbeanstalk.amazonaws.com\"",
      "}"
    ]
  },
  "aws-resource-iam_user": {
    "description": "Defines iam_user",
    "prefix": "tf-aws-resource-iam_user",
    "body": [
      "resource \"aws_iam_user\" \"lb\" {",
      "  name = \"loadbalancer\"",
      "  path = \"/system/\"",
      "",
      "  tags = {",
      "    tag-key = \"tag-value\"",
      "  }",
      "}",
      "",
      "resource \"aws_iam_access_key\" \"lb\" {",
      "  user = \"${aws_iam_user.lb.name}\"",
      "}",
      "",
      "resource \"aws_iam_user_policy\" \"lb_ro\" {",
      "  name = \"test\"",
      "  user = \"${aws_iam_user.lb.name}\"",
      "",
      "  policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": [",
      "        \"ec2:Describe*\"",
      "      ],",
      "      \"Effect\": \"Allow\",",
      "      \"Resource\": \"*\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}"
    ]
  },
  "aws-resource-iam_user_group_membership": {
    "description": "Defines iam_user_group_membership",
    "prefix": "tf-aws-resource-iam_user_group_membership",
    "body": [
      "resource \"aws_iam_user_group_membership\" \"example1\" {",
      "  user = \"${aws_iam_user.user1.name}\"",
      "",
      "  groups = [",
      "    \"${aws_iam_group.group1.name}\",",
      "    \"${aws_iam_group.group2.name}\",",
      "  ]",
      "}",
      "",
      "resource \"aws_iam_user_group_membership\" \"example2\" {",
      "  user = \"${aws_iam_user.user1.name}\"",
      "",
      "  groups = [",
      "    \"${aws_iam_group.group3.name}\",",
      "  ]",
      "}",
      "",
      "resource \"aws_iam_user\" \"user1\" {",
      "  name = \"user1\"",
      "}",
      "",
      "resource \"aws_iam_group\" \"group1\" {",
      "  name = \"group1\"",
      "}",
      "",
      "resource \"aws_iam_group\" \"group2\" {",
      "  name = \"group2\"",
      "}",
      "",
      "resource \"aws_iam_group\" \"group3\" {",
      "  name = \"group3\"",
      "}"
    ]
  },
  "aws-resource-iam_user_login_profile": {
    "description": "Defines iam_user_login_profile",
    "prefix": "tf-aws-resource-iam_user_login_profile",
    "body": [
      "resource \"aws_iam_user\" \"example\" {",
      "  name          = \"example\"",
      "  path          = \"/\"",
      "  force_destroy = true",
      "}",
      "",
      "resource \"aws_iam_user_login_profile\" \"example\" {",
      "  user    = \"${aws_iam_user.example.name}\"",
      "  pgp_key = \"keybase:some_person_that_exists\"",
      "}",
      "",
      "output \"password\" {",
      "  value = \"${aws_iam_user_login_profile.example.encrypted_password}\"",
      "}"
    ]
  },
  "aws-resource-iam_user_policy": {
    "description": "Defines iam_user_policy",
    "prefix": "tf-aws-resource-iam_user_policy",
    "body": [
      "resource \"aws_iam_user_policy\" \"lb_ro\" {",
      "  name = \"test\"",
      "  user = \"${aws_iam_user.lb.name}\"",
      "",
      "  policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": [",
      "        \"ec2:Describe*\"",
      "      ],",
      "      \"Effect\": \"Allow\",",
      "      \"Resource\": \"*\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_user\" \"lb\" {",
      "  name = \"loadbalancer\"",
      "  path = \"/system/\"",
      "}",
      "",
      "resource \"aws_iam_access_key\" \"lb\" {",
      "  user = \"${aws_iam_user.lb.name}\"",
      "}"
    ]
  },
  "aws-resource-iam_user_policy_attachment": {
    "description": "Defines iam_user_policy_attachment",
    "prefix": "tf-aws-resource-iam_user_policy_attachment",
    "body": [
      "resource \"aws_iam_user\" \"user\" {",
      "  name = \"test-user\"",
      "}",
      "",
      "resource \"aws_iam_policy\" \"policy\" {",
      "  name        = \"test-policy\"",
      "  description = \"A test policy\"",
      "  policy      = \"\"              # insert policy here",
      "}",
      "",
      "resource \"aws_iam_user_policy_attachment\" \"test-attach\" {",
      "  user       = \"${aws_iam_user.user.name}\"",
      "  policy_arn = \"${aws_iam_policy.policy.arn}\"",
      "}"
    ]
  },
  "aws-resource-iam_user_ssh_key": {
    "description": "Defines iam_user_ssh_key",
    "prefix": "tf-aws-resource-iam_user_ssh_key",
    "body": [
      "resource \"aws_iam_user\" \"user\" {",
      "  name = \"test-user\"",
      "  path = \"/\"",
      "}",
      "",
      "resource \"aws_iam_user_ssh_key\" \"user\" {",
      "  username   = \"${aws_iam_user.user.name}\"",
      "  encoding   = \"SSH\"",
      "  public_key = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD3F6tyPEFEzV0LX3X8BsXdMsQz1x2cEikKDEY0aIj41qgxMCP/iteneqXSIFZBp5vizPvaoIR3Um9xK7PGoW8giupGn+EPuxIA4cDM4vzOqOkiMPhz5XK0whEjkVzTo4+S0puvDZuwIsdiW9mxhJc7tgBNL0cYlWSYVkz4G/fslNfRPW5mYAM49f4fhtxPb5ok4Q2Lg9dPKVHO/Bgeu5woMc7RY0p1ej6D4CKFE6lymSDJpW0YHX/wqE9+cfEauh7xZcG0q9t2ta6F6fmX0agvpFyZo8aFbXeUBr7osSCJNgvavWbM/06niWrOvYX2xwWdhXmXSrbX8ZbabVohBK41 mytest@mydomain.com\"",
      "}"
    ]
  },
  "aws-resource-inspector_assessment_target": {
    "description": "Defines inspector_assessment_target",
    "prefix": "tf-aws-resource-inspector_assessment_target",
    "body": [
      "resource \"aws_inspector_resource_group\" \"bar\" {",
      "  tags = {",
      "    Name = \"foo\"",
      "    Env  = \"bar\"",
      "  }",
      "}",
      "",
      "resource \"aws_inspector_assessment_target\" \"foo\" {",
      "  name               = \"assessment target\"",
      "  resource_group_arn = \"${aws_inspector_resource_group.bar.arn}\"",
      "}"
    ]
  },
  "aws-resource-inspector_assessment_template": {
    "description": "Defines inspector_assessment_template",
    "prefix": "tf-aws-resource-inspector_assessment_template",
    "body": [
      "resource \"aws_inspector_assessment_template\" \"foo\" {",
      "  name       = \"bar template\"",
      "  target_arn = \"${aws_inspector_assessment_target.foo.arn}\"",
      "  duration   = 3600",
      "",
      "  rules_package_arns = [",
      "    \"arn:aws:inspector:us-west-2:758058086616:rulespackage/0-9hgA516p\",",
      "    \"arn:aws:inspector:us-west-2:758058086616:rulespackage/0-H5hpSawc\",",
      "    \"arn:aws:inspector:us-west-2:758058086616:rulespackage/0-JJOtZiqQ\",",
      "    \"arn:aws:inspector:us-west-2:758058086616:rulespackage/0-vg5GGHSD\",",
      "  ]",
      "}"
    ]
  },
  "aws-resource-inspector_resource_group": {
    "description": "Defines inspector_resource_group",
    "prefix": "tf-aws-resource-inspector_resource_group",
    "body": [
      "resource \"aws_inspector_resource_group\" \"bar\" {",
      "  tags = {",
      "    Name = \"foo\"",
      "    Env  = \"bar\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-instance": {
    "description": "Defines instance",
    "prefix": "tf-aws-resource-instance",
    "body": [
      "# Create a new instance of the latest Ubuntu 14.04 on an",
      "# t2.micro node with an AWS Tag naming it \"HelloWorld\"",
      "provider \"aws\" {",
      "  region = \"us-west-2\"",
      "}",
      "",
      "data \"aws_ami\" \"ubuntu\" {",
      "  most_recent = true",
      "",
      "  filter {",
      "    name   = \"name\"",
      "    values = [\"ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-*\"]",
      "  }",
      "",
      "  filter {",
      "    name   = \"virtualization-type\"",
      "    values = [\"hvm\"]",
      "  }",
      "",
      "  owners = [\"099720109477\"] # Canonical",
      "}",
      "",
      "resource \"aws_instance\" \"web\" {",
      "  ami           = \"${data.aws_ami.ubuntu.id}\"",
      "  instance_type = \"t2.micro\"",
      "",
      "  tags = {",
      "    Name = \"HelloWorld\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-internet_gateway": {
    "description": "Defines internet_gateway",
    "prefix": "tf-aws-resource-internet_gateway",
    "body": [
      "resource \"aws_internet_gateway\" \"gw\" {",
      "  vpc_id = \"${aws_vpc.main.id}\"",
      "",
      "  tags = {",
      "    Name = \"main\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-iot_certificate": {
    "description": "Defines iot_certificate",
    "prefix": "tf-aws-resource-iot_certificate",
    "body": [
      "resource \"aws_iot_certificate\" \"cert\" {",
      "  csr    = \"${file(\"/my/csr.pem\")}\"",
      "  active = true",
      "}"
    ]
  },
  "aws-resource-iot_policy": {
    "description": "Defines iot_policy",
    "prefix": "tf-aws-resource-iot_policy",
    "body": [
      "resource \"aws_iot_policy\" \"pubsub\" {",
      "  name = \"PubSubToAnyTopic\"",
      "",
      "  policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": [",
      "        \"iot:*\"",
      "      ],",
      "      \"Effect\": \"Allow\",",
      "      \"Resource\": \"*\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}"
    ]
  },
  "aws-resource-iot_policy_attachment": {
    "description": "Defines iot_policy_attachment",
    "prefix": "tf-aws-resource-iot_policy_attachment",
    "body": [
      "resource \"aws_iot_policy\" \"pubsub\" {",
      "  name = \"PubSubToAnyTopic\"",
      "",
      "  policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": [",
      "        \"iot:*\"",
      "      ],",
      "      \"Effect\": \"Allow\",",
      "      \"Resource\": \"*\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iot_certificate\" \"cert\" {",
      "  csr    = \"${file(\"csr.pem\")}\"",
      "  active = true",
      "}",
      "",
      "resource \"aws_iot_policy_attachment\" \"att\" {",
      "  policy = \"${aws_iot_policy.pubsub.name}\"",
      "  target = \"${aws_iot_certificate.cert.arn}\"",
      "}"
    ]
  },
  "aws-resource-iot_role_alias": {
    "description": "Defines iot_role_alias",
    "prefix": "tf-aws-resource-iot_role_alias",
    "body": [
      "resource \"aws_iam_role\" \"role\" {",
      "  name = \"dynamodb-access-role\"",
      "",
      "  policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Effect\": \"Allow\",",
      "      \"Principal\": {\"Service\": \"credentials.iot.amazonaws.com\"},",
      "      \"Action\": \"sts:AssumeRole\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iot_role_alias\" \"alias\" {",
      "  alias    = \"Thermostat-dynamodb-access-role-alias\"",
      "  role_arn = \"${aws_iam_role.role.arn}\"",
      "}"
    ]
  },
  "aws-resource-iot_thing": {
    "description": "Defines iot_thing",
    "prefix": "tf-aws-resource-iot_thing",
    "body": [
      "resource \"aws_iot_thing\" \"example\" {",
      "  name = \"example\"",
      "",
      "  attributes = {",
      "    First = \"examplevalue\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-iot_thing_principal_attachment": {
    "description": "Defines iot_thing_principal_attachment",
    "prefix": "tf-aws-resource-iot_thing_principal_attachment",
    "body": [
      "resource \"aws_iot_thing\" \"example\" {",
      "  name = \"example\"",
      "}",
      "",
      "resource \"aws_iot_certificate\" \"cert\" {",
      "  csr    = \"${file(\"csr.pem\")}\"",
      "  active = true",
      "}",
      "",
      "resource \"aws_iot_thing_principal_attachment\" \"att\" {",
      "  principal = \"${aws_iot_certificate.cert.arn}\"",
      "  thing     = \"${aws_iot_thing.example.name}\"",
      "}"
    ]
  },
  "aws-resource-iot_thing_type": {
    "description": "Defines iot_thing_type",
    "prefix": "tf-aws-resource-iot_thing_type",
    "body": [
      "resource \"aws_iot_thing_type\" \"foo\" {",
      "  name = \"my_iot_thing\"",
      "}"
    ]
  },
  "aws-resource-iot_topic_rule": {
    "description": "Defines iot_topic_rule",
    "prefix": "tf-aws-resource-iot_topic_rule",
    "body": [
      "resource \"aws_iot_topic_rule\" \"rule\" {",
      "  name        = \"MyRule\"",
      "  description = \"Example rule\"",
      "  enabled     = true",
      "  sql         = \"SELECT * FROM 'topic/test'\"",
      "  sql_version = \"2015-10-08\"",
      "",
      "  sns {",
      "    message_format = \"RAW\"",
      "    role_arn       = \"${aws_iam_role.role.arn}\"",
      "    target_arn     = \"${aws_sns_topic.mytopic.arn}\"",
      "  }",
      "}",
      "",
      "resource \"aws_sns_topic\" \"mytopic\" {",
      "  name = \"mytopic\"",
      "}",
      "",
      "resource \"aws_iam_role\" \"role\" {",
      "  name = \"myrole\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Effect\": \"Allow\",",
      "      \"Principal\": {",
      "        \"Service\": \"iot.amazonaws.com\"",
      "      },",
      "      \"Action\": \"sts:AssumeRole\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_role_policy\" \"iam_policy_for_lambda\" {",
      "  name = \"mypolicy\"",
      "  role = \"${aws_iam_role.role.id}\"",
      "",
      "  policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "        \"Effect\": \"Allow\",",
      "        \"Action\": [",
      "            \"sns:Publish\"",
      "        ],",
      "        \"Resource\": \"${aws_sns_topic.mytopic.arn}\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}"
    ]
  },
  "aws-resource-key_pair": {
    "description": "Defines key_pair",
    "prefix": "tf-aws-resource-key_pair",
    "body": [
      "resource \"aws_key_pair\" \"deployer\" {",
      "  key_name   = \"deployer-key\"",
      "  public_key = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD3F6tyPEFEzV0LX3X8BsXdMsQz1x2cEikKDEY0aIj41qgxMCP/iteneqXSIFZBp5vizPvaoIR3Um9xK7PGoW8giupGn+EPuxIA4cDM4vzOqOkiMPhz5XK0whEjkVzTo4+S0puvDZuwIsdiW9mxhJc7tgBNL0cYlWSYVkz4G/fslNfRPW5mYAM49f4fhtxPb5ok4Q2Lg9dPKVHO/Bgeu5woMc7RY0p1ej6D4CKFE6lymSDJpW0YHX/wqE9+cfEauh7xZcG0q9t2ta6F6fmX0agvpFyZo8aFbXeUBr7osSCJNgvavWbM/06niWrOvYX2xwWdhXmXSrbX8ZbabVohBK41 email@example.com\"",
      "}"
    ]
  },
  "aws-resource-kinesis_analytics_application": {
    "description": "Defines kinesis_analytics_application",
    "prefix": "tf-aws-resource-kinesis_analytics_application",
    "body": [
      "resource \"aws_kinesis_stream\" \"test_stream\" {",
      "  name        = \"terraform-kinesis-test\"",
      "  shard_count = 1",
      "}",
      "",
      "resource \"aws_kinesis_analytics_application\" \"test_application\" {",
      "  name = \"kinesis-analytics-application-test\"",
      "",
      "  inputs {",
      "    name_prefix = \"test_prefix\"",
      "",
      "    kinesis_stream {",
      "      resource_arn = \"${aws_kinesis_stream.test_stream.arn}\"",
      "      role_arn     = \"${aws_iam_role.test.arn}\"",
      "    }",
      "",
      "    parallelism {",
      "      count = 1",
      "    }",
      "",
      "    schema {",
      "      record_columns {",
      "        mapping  = \"$.test\"",
      "        name     = \"test\"",
      "        sql_type = \"VARCHAR(8)\"",
      "      }",
      "",
      "      record_encoding = \"UTF-8\"",
      "",
      "      record_format {",
      "        mapping_parameters {",
      "          json {",
      "            record_row_path = \"$\"",
      "          }",
      "        }",
      "      }",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-kinesis_firehose_delivery_stream": {
    "description": "Defines kinesis_firehose_delivery_stream",
    "prefix": "tf-aws-resource-kinesis_firehose_delivery_stream",
    "body": [
      "resource \"aws_kinesis_firehose_delivery_stream\" \"extended_s3_stream\" {",
      "  name        = \"terraform-kinesis-firehose-extended-s3-test-stream\"",
      "  destination = \"extended_s3\"",
      "",
      "  extended_s3_configuration {",
      "    role_arn   = \"${aws_iam_role.firehose_role.arn}\"",
      "    bucket_arn = \"${aws_s3_bucket.bucket.arn}\"",
      "",
      "    processing_configuration {",
      "      enabled = \"true\"",
      "",
      "      processors {",
      "        type = \"Lambda\"",
      "",
      "        parameters {",
      "          parameter_name  = \"LambdaArn\"",
      "          parameter_value = \"${aws_lambda_function.lambda_processor.arn}:$LATEST\"",
      "        }",
      "      }",
      "    }",
      "  }",
      "}",
      "",
      "resource \"aws_s3_bucket\" \"bucket\" {",
      "  bucket = \"tf-test-bucket\"",
      "  acl    = \"private\"",
      "}",
      "",
      "resource \"aws_iam_role\" \"firehose_role\" {",
      "  name = \"firehose_test_role\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": \"sts:AssumeRole\",",
      "      \"Principal\": {",
      "        \"Service\": \"firehose.amazonaws.com\"",
      "      },",
      "      \"Effect\": \"Allow\",",
      "      \"Sid\": \"\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_role\" \"lambda_iam\" {",
      "  name = \"lambda_iam\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": \"sts:AssumeRole\",",
      "      \"Principal\": {",
      "        \"Service\": \"lambda.amazonaws.com\"",
      "      },",
      "      \"Effect\": \"Allow\",",
      "      \"Sid\": \"\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_lambda_function\" \"lambda_processor\" {",
      "  filename      = \"lambda.zip\"",
      "  function_name = \"firehose_lambda_processor\"",
      "  role          = \"${aws_iam_role.lambda_iam.arn}\"",
      "  handler       = \"exports.handler\"",
      "  runtime       = \"nodejs8.10\"",
      "}"
    ]
  },
  "aws-resource-kinesis_stream": {
    "description": "Defines kinesis_stream",
    "prefix": "tf-aws-resource-kinesis_stream",
    "body": [
      "resource \"aws_kinesis_stream\" \"test_stream\" {",
      "  name             = \"terraform-kinesis-test\"",
      "  shard_count      = 1",
      "  retention_period = 48",
      "",
      "  shard_level_metrics = [",
      "    \"IncomingBytes\",",
      "    \"OutgoingBytes\",",
      "  ]",
      "",
      "  tags = {",
      "    Environment = \"test\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-kms_alias": {
    "description": "Defines kms_alias",
    "prefix": "tf-aws-resource-kms_alias",
    "body": [
      "resource \"aws_kms_key\" \"a\" {}",
      "",
      "resource \"aws_kms_alias\" \"a\" {",
      "  name          = \"alias/my-key-alias\"",
      "  target_key_id = \"${aws_kms_key.a.key_id}\"",
      "}"
    ]
  },
  "aws-resource-kms_ciphertext": {
    "description": "Defines kms_ciphertext",
    "prefix": "tf-aws-resource-kms_ciphertext",
    "body": [
      "resource \"aws_kms_key\" \"oauth_config\" {",
      "  description = \"oauth config\"",
      "  is_enabled  = true",
      "}",
      "",
      "resource \"aws_kms_ciphertext\" \"oauth\" {",
      "  key_id = \"${aws_kms_key.oauth_config.key_id}\"",
      "",
      "  plaintext = <<EOF",
      "{",
      "  \"client_id\": \"e587dbae22222f55da22\",",
      "  \"client_secret\": \"8289575d00000ace55e1815ec13673955721b8a5\"",
      "}",
      "EOF",
      "}"
    ]
  },
  "aws-resource-kms_external_key": {
    "description": "Defines kms_external_key",
    "prefix": "tf-aws-resource-kms_external_key",
    "body": [
      "resource \"aws_kms_external_key\" \"example\" {",
      "  description = \"KMS EXTERNAL for AMI encryption\"",
      "}"
    ]
  },
  "aws-resource-kms_grant": {
    "description": "Defines kms_grant",
    "prefix": "tf-aws-resource-kms_grant",
    "body": [
      "resource \"aws_kms_key\" \"a\" {}",
      "",
      "resource \"aws_iam_role\" \"a\" {",
      "  name = \"iam-role-for-grant\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": \"sts:AssumeRole\",",
      "      \"Principal\": {",
      "        \"Service\": \"lambda.amazonaws.com\"",
      "      },",
      "      \"Effect\": \"Allow\",",
      "      \"Sid\": \"\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_kms_grant\" \"a\" {",
      "  name              = \"my-grant\"",
      "  key_id            = \"${aws_kms_key.a.key_id}\"",
      "  grantee_principal = \"${aws_iam_role.a.arn}\"",
      "  operations        = [\"Encrypt\", \"Decrypt\", \"GenerateDataKey\"]",
      "",
      "  constraints {",
      "    encryption_context_equals = {",
      "      Department = \"Finance\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-kms_key": {
    "description": "Defines kms_key",
    "prefix": "tf-aws-resource-kms_key",
    "body": [
      "resource \"aws_kms_key\" \"a\" {",
      "  description             = \"KMS key 1\"",
      "  deletion_window_in_days = 10",
      "}"
    ]
  },
  "aws-resource-lambda_alias": {
    "description": "Defines lambda_alias",
    "prefix": "tf-aws-resource-lambda_alias",
    "body": [
      "resource \"aws_lambda_alias\" \"test_alias\" {",
      "  name             = \"testalias\"",
      "  description      = \"a sample description\"",
      "  function_name    = \"${aws_lambda_function.lambda_function_test.arn}\"",
      "  function_version = \"1\"",
      "",
      "  routing_config = {",
      "    additional_version_weights = {",
      "      \"2\" = 0.5",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-lambda_event_source_mapping": {
    "description": "Defines lambda_event_source_mapping",
    "prefix": "tf-aws-resource-lambda_event_source_mapping",
    "body": [
      "resource \"aws_lambda_event_source_mapping\" \"example\" {",
      "  event_source_arn  = \"${aws_dynamodb_table.example.stream_arn}\"",
      "  function_name     = \"${aws_lambda_function.example.arn}\"",
      "  starting_position = \"LATEST\"",
      "}"
    ]
  },
  "aws-resource-lambda_function": {
    "description": "Defines lambda_function",
    "prefix": "tf-aws-resource-lambda_function",
    "body": [
      "resource \"aws_iam_role\" \"iam_for_lambda\" {",
      "  name = \"iam_for_lambda\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": \"sts:AssumeRole\",",
      "      \"Principal\": {",
      "        \"Service\": \"lambda.amazonaws.com\"",
      "      },",
      "      \"Effect\": \"Allow\",",
      "      \"Sid\": \"\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_lambda_function\" \"test_lambda\" {",
      "  filename      = \"lambda_function_payload.zip\"",
      "  function_name = \"lambda_function_name\"",
      "  role          = \"${aws_iam_role.iam_for_lambda.arn}\"",
      "  handler       = \"exports.test\"",
      "",
      "  # The filebase64sha256() function is available in Terraform 0.11.12 and later",
      "  # For Terraform 0.11.11 and earlier, use the base64sha256() function and the file() function:",
      "  # source_code_hash = \"${base64sha256(file(\"lambda_function_payload.zip\"))}\"",
      "  source_code_hash = \"${filebase64sha256(\"lambda_function_payload.zip\")}\"",
      "",
      "  runtime = \"nodejs8.10\"",
      "",
      "  environment {",
      "    variables = {",
      "      foo = \"bar\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-lambda_layer_version": {
    "description": "Defines lambda_layer_version",
    "prefix": "tf-aws-resource-lambda_layer_version",
    "body": [
      "resource \"aws_lambda_layer_version\" \"lambda_layer\" {",
      "  filename   = \"lambda_layer_payload.zip\"",
      "  layer_name = \"lambda_layer_name\"",
      "",
      "  compatible_runtimes = [\"nodejs8.10\"]",
      "}"
    ]
  },
  "aws-resource-lambda_permission": {
    "description": "Defines lambda_permission",
    "prefix": "tf-aws-resource-lambda_permission",
    "body": [
      "resource \"aws_lambda_permission\" \"allow_cloudwatch\" {",
      "  statement_id  = \"AllowExecutionFromCloudWatch\"",
      "  action        = \"lambda:InvokeFunction\"",
      "  function_name = \"${aws_lambda_function.test_lambda.function_name}\"",
      "  principal     = \"events.amazonaws.com\"",
      "  source_arn    = \"arn:aws:events:eu-west-1:111122223333:rule/RunDaily\"",
      "  qualifier     = \"${aws_lambda_alias.test_alias.name}\"",
      "}",
      "",
      "resource \"aws_lambda_alias\" \"test_alias\" {",
      "  name             = \"testalias\"",
      "  description      = \"a sample description\"",
      "  function_name    = \"${aws_lambda_function.test_lambda.function_name}\"",
      "  function_version = \"$LATEST\"",
      "}",
      "",
      "resource \"aws_lambda_function\" \"test_lambda\" {",
      "  filename      = \"lambdatest.zip\"",
      "  function_name = \"lambda_function_name\"",
      "  role          = \"${aws_iam_role.iam_for_lambda.arn}\"",
      "  handler       = \"exports.handler\"",
      "  runtime       = \"nodejs8.10\"",
      "}",
      "",
      "resource \"aws_iam_role\" \"iam_for_lambda\" {",
      "  name = \"iam_for_lambda\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": \"sts:AssumeRole\",",
      "      \"Principal\": {",
      "        \"Service\": \"lambda.amazonaws.com\"",
      "      },",
      "      \"Effect\": \"Allow\",",
      "      \"Sid\": \"\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}"
    ]
  },
  "aws-resource-launch_configuration": {
    "description": "Defines launch_configuration",
    "prefix": "tf-aws-resource-launch_configuration",
    "body": [
      "data \"aws_ami\" \"ubuntu\" {",
      "  most_recent = true",
      "",
      "  filter {",
      "    name   = \"name\"",
      "    values = [\"ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-*\"]",
      "  }",
      "",
      "  filter {",
      "    name   = \"virtualization-type\"",
      "    values = [\"hvm\"]",
      "  }",
      "",
      "  owners = [\"099720109477\"] # Canonical",
      "}",
      "",
      "resource \"aws_launch_configuration\" \"as_conf\" {",
      "  name          = \"web_config\"",
      "  image_id      = \"${data.aws_ami.ubuntu.id}\"",
      "  instance_type = \"t2.micro\"",
      "}"
    ]
  },
  "aws-resource-launch_template": {
    "description": "Defines launch_template",
    "prefix": "tf-aws-resource-launch_template",
    "body": [
      "resource \"aws_launch_template\" \"foo\" {",
      "  name = \"foo\"",
      "",
      "  block_device_mappings {",
      "    device_name = \"/dev/sda1\"",
      "",
      "    ebs {",
      "      volume_size = 20",
      "    }",
      "  }",
      "",
      "  capacity_reservation_specification {",
      "    capacity_reservation_preference = \"open\"",
      "  }",
      "",
      "  credit_specification {",
      "    cpu_credits = \"standard\"",
      "  }",
      "",
      "  disable_api_termination = true",
      "",
      "  ebs_optimized = true",
      "",
      "  elastic_gpu_specifications {",
      "    type = \"test\"",
      "  }",
      "",
      "  elastic_inference_accelerator {",
      "    type = \"eia1.medium\"",
      "  }",
      "",
      "  iam_instance_profile {",
      "    name = \"test\"",
      "  }",
      "",
      "  image_id = \"ami-test\"",
      "",
      "  instance_initiated_shutdown_behavior = \"terminate\"",
      "",
      "  instance_market_options {",
      "    market_type = \"spot\"",
      "  }",
      "",
      "  instance_type = \"t2.micro\"",
      "",
      "  kernel_id = \"test\"",
      "",
      "  key_name = \"test\"",
      "",
      "  license_specification {",
      "    license_configuration_arn = \"arn:aws:license-manager:eu-west-1:123456789012:license-configuration:lic-0123456789abcdef0123456789abcdef\"",
      "  }",
      "",
      "  monitoring {",
      "    enabled = true",
      "  }",
      "",
      "  network_interfaces {",
      "    associate_public_ip_address = true",
      "  }",
      "",
      "  placement {",
      "    availability_zone = \"us-west-2a\"",
      "  }",
      "",
      "  ram_disk_id = \"test\"",
      "",
      "  vpc_security_group_ids = [\"sg-12345678\"]",
      "",
      "  tag_specifications {",
      "    resource_type = \"instance\"",
      "",
      "    tags = {",
      "      Name = \"test\"",
      "    }",
      "  }",
      "",
      "  user_data = \"${base64encode(...)}\"",
      "}"
    ]
  },
  "aws-resource-lb": {
    "description": "Defines lb",
    "prefix": "tf-aws-resource-lb",
    "body": [
      "resource \"aws_lb\" \"test\" {",
      "  name               = \"test-lb-tf\"",
      "  internal           = false",
      "  load_balancer_type = \"application\"",
      "  security_groups    = [\"${aws_security_group.lb_sg.id}\"]",
      "  subnets            = [\"${aws_subnet.public.*.id}\"]",
      "",
      "  enable_deletion_protection = true",
      "",
      "  access_logs {",
      "    bucket  = \"${aws_s3_bucket.lb_logs.bucket}\"",
      "    prefix  = \"test-lb\"",
      "    enabled = true",
      "  }",
      "",
      "  tags = {",
      "    Environment = \"production\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-lb_cookie_stickiness_policy": {
    "description": "Defines lb_cookie_stickiness_policy",
    "prefix": "tf-aws-resource-lb_cookie_stickiness_policy",
    "body": [
      "resource \"aws_elb\" \"lb\" {",
      "  name               = \"test-lb\"",
      "  availability_zones = [\"us-east-1a\"]",
      "",
      "  listener {",
      "    instance_port     = 8000",
      "    instance_protocol = \"http\"",
      "    lb_port           = 80",
      "    lb_protocol       = \"http\"",
      "  }",
      "}",
      "",
      "resource \"aws_lb_cookie_stickiness_policy\" \"foo\" {",
      "  name                     = \"foo-policy\"",
      "  load_balancer            = \"${aws_elb.lb.id}\"",
      "  lb_port                  = 80",
      "  cookie_expiration_period = 600",
      "}"
    ]
  },
  "aws-resource-lb_listener": {
    "description": "Defines lb_listener",
    "prefix": "tf-aws-resource-lb_listener",
    "body": [
      "resource \"aws_lb\" \"front_end\" {",
      "  # ...",
      "}",
      "",
      "resource \"aws_lb_target_group\" \"front_end\" {",
      "  # ...",
      "}",
      "",
      "resource \"aws_lb_listener\" \"front_end\" {",
      "  load_balancer_arn = \"${aws_lb.front_end.arn}\"",
      "  port              = \"443\"",
      "  protocol          = \"HTTPS\"",
      "  ssl_policy        = \"ELBSecurityPolicy-2016-08\"",
      "  certificate_arn   = \"arn:aws:iam::187416307283:server-certificate/test_cert_rab3wuqwgja25ct3n4jdj2tzu4\"",
      "",
      "  default_action {",
      "    type             = \"forward\"",
      "    target_group_arn = \"${aws_lb_target_group.front_end.arn}\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-lb_listener_certificate": {
    "description": "Defines lb_listener_certificate",
    "prefix": "tf-aws-resource-lb_listener_certificate",
    "body": [
      "resource \"aws_acm_certificate\" \"example\" {",
      "  # ...",
      "}",
      "",
      "resource \"aws_lb\" \"front_end\" {",
      "  # ...",
      "}",
      "",
      "resource \"aws_lb_listener\" \"front_end\" {",
      "  # ...",
      "}",
      "",
      "resource \"aws_lb_listener_certificate\" \"example\" {",
      "  listener_arn    = \"${aws_lb_listener.front_end.arn}\"",
      "  certificate_arn = \"${aws_acm_certificate.example.arn}\"",
      "}"
    ]
  },
  "aws-resource-lb_listener_rule": {
    "description": "Defines lb_listener_rule",
    "prefix": "tf-aws-resource-lb_listener_rule",
    "body": [
      "resource \"aws_lb\" \"front_end\" {",
      "  # ...",
      "}",
      "",
      "resource \"aws_lb_listener\" \"front_end\" {",
      "  # Other parameters",
      "}",
      "",
      "resource \"aws_lb_listener_rule\" \"static\" {",
      "  listener_arn = \"${aws_lb_listener.front_end.arn}\"",
      "  priority     = 100",
      "",
      "  action {",
      "    type             = \"forward\"",
      "    target_group_arn = \"${aws_lb_target_group.static.arn}\"",
      "  }",
      "",
      "  condition {",
      "    field  = \"path-pattern\"",
      "    values = [\"/static/*\"]",
      "  }",
      "}",
      "",
      "# Forward action",
      "",
      "resource \"aws_lb_listener_rule\" \"host_based_routing\" {",
      "  listener_arn = \"${aws_lb_listener.front_end.arn}\"",
      "  priority     = 99",
      "",
      "  action {",
      "    type             = \"forward\"",
      "    target_group_arn = \"${aws_lb_target_group.static.arn}\"",
      "  }",
      "",
      "  condition {",
      "    field  = \"host-header\"",
      "    values = [\"my-service.*.terraform.io\"]",
      "  }",
      "}",
      "",
      "# Redirect action",
      "",
      "resource \"aws_lb_listener_rule\" \"redirect_http_to_https\" {",
      "  listener_arn = \"${aws_lb_listener.front_end.arn}\"",
      "",
      "  action {",
      "    type = \"redirect\"",
      "",
      "    redirect {",
      "      port        = \"443\"",
      "      protocol    = \"HTTPS\"",
      "      status_code = \"HTTP_301\"",
      "    }",
      "  }",
      "",
      "  condition {",
      "    field  = \"host-header\"",
      "    values = [\"my-service.*.terraform.io\"]",
      "  }",
      "}",
      "",
      "# Fixed-response action",
      "",
      "resource \"aws_lb_listener_rule\" \"health_check\" {",
      "  listener_arn = \"${aws_lb_listener.front_end.arn}\"",
      "",
      "  action {",
      "    type = \"fixed-response\"",
      "",
      "    fixed_response {",
      "      content_type = \"text/plain\"",
      "      message_body = \"HEALTHY\"",
      "      status_code  = \"200\"",
      "    }",
      "  }",
      "",
      "  condition {",
      "    field  = \"path-pattern\"",
      "    values = [\"/health\"]",
      "  }",
      "}",
      "",
      "# Authenticate-cognito Action",
      "",
      "resource \"aws_cognito_user_pool\" \"pool\" {",
      "  # ...",
      "}",
      "",
      "resource \"aws_cognito_user_pool_client\" \"client\" {",
      "  # ...",
      "}",
      "",
      "resource \"aws_cognito_user_pool_domain\" \"domain\" {",
      "  # ...",
      "}",
      "",
      "resource \"aws_lb_listener_rule\" \"admin\" {",
      "  listener_arn = \"${aws_lb_listener.front_end.arn}\"",
      "",
      "  action {",
      "    type = \"authenticate-cognito\"",
      "",
      "    authenticate_cognito {",
      "      user_pool_arn       = \"${aws_cognito_user_pool.pool.arn}\"",
      "      user_pool_client_id = \"${aws_cognito_user_pool_client.client.id}\"",
      "      user_pool_domain    = \"${aws_cognito_user_pool_domain.domain.domain}\"",
      "    }",
      "  }",
      "",
      "  action {",
      "    type             = \"forward\"",
      "    target_group_arn = \"${aws_lb_target_group.static.arn}\"",
      "  }",
      "}",
      "",
      "# Authenticate-oidc Action",
      "",
      "resource \"aws_lb_listener_rule\" \"admin\" {",
      "  listener_arn = \"${aws_lb_listener.front_end.arn}\"",
      "",
      "  action {",
      "    type = \"authenticate-oidc\"",
      "",
      "    authenticate_oidc {",
      "      authorization_endpoint = \"https://example.com/authorization_endpoint\"",
      "      client_id              = \"client_id\"",
      "      client_secret          = \"client_secret\"",
      "      issuer                 = \"https://example.com\"",
      "      token_endpoint         = \"https://example.com/token_endpoint\"",
      "      user_info_endpoint     = \"https://example.com/user_info_endpoint\"",
      "    }",
      "  }",
      "",
      "  action {",
      "    type             = \"forward\"",
      "    target_group_arn = \"${aws_lb_target_group.static.arn}\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-lb_ssl_negotiation_policy": {
    "description": "Defines lb_ssl_negotiation_policy",
    "prefix": "tf-aws-resource-lb_ssl_negotiation_policy",
    "body": [
      "resource \"aws_elb\" \"lb\" {",
      "  name               = \"test-lb\"",
      "  availability_zones = [\"us-east-1a\"]",
      "",
      "  listener {",
      "    instance_port      = 8000",
      "    instance_protocol  = \"https\"",
      "    lb_port            = 443",
      "    lb_protocol        = \"https\"",
      "    ssl_certificate_id = \"arn:aws:iam::123456789012:server-certificate/certName\"",
      "  }",
      "}",
      "",
      "resource \"aws_lb_ssl_negotiation_policy\" \"foo\" {",
      "  name          = \"foo-policy\"",
      "  load_balancer = \"${aws_elb.lb.id}\"",
      "  lb_port       = 443",
      "",
      "  attribute {",
      "    name  = \"Protocol-TLSv1\"",
      "    value = \"false\"",
      "  }",
      "",
      "  attribute {",
      "    name  = \"Protocol-TLSv1.1\"",
      "    value = \"false\"",
      "  }",
      "",
      "  attribute {",
      "    name  = \"Protocol-TLSv1.2\"",
      "    value = \"true\"",
      "  }",
      "",
      "  attribute {",
      "    name  = \"Server-Defined-Cipher-Order\"",
      "    value = \"true\"",
      "  }",
      "",
      "  attribute {",
      "    name  = \"ECDHE-RSA-AES128-GCM-SHA256\"",
      "    value = \"true\"",
      "  }",
      "",
      "  attribute {",
      "    name  = \"AES128-GCM-SHA256\"",
      "    value = \"true\"",
      "  }",
      "",
      "  attribute {",
      "    name  = \"EDH-RSA-DES-CBC3-SHA\"",
      "    value = \"false\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-lb_target_group": {
    "description": "Defines lb_target_group",
    "prefix": "tf-aws-resource-lb_target_group",
    "body": [
      "resource \"aws_lb_target_group\" \"test\" {",
      "  name     = \"tf-example-lb-tg\"",
      "  port     = 80",
      "  protocol = \"HTTP\"",
      "  vpc_id   = \"${aws_vpc.main.id}\"",
      "}",
      "",
      "resource \"aws_vpc\" \"main\" {",
      "  cidr_block = \"10.0.0.0/16\"",
      "}"
    ]
  },
  "aws-resource-lb_target_group_attachment": {
    "description": "Defines lb_target_group_attachment",
    "prefix": "tf-aws-resource-lb_target_group_attachment",
    "body": [
      "resource \"aws_lb_target_group_attachment\" \"test\" {",
      "  target_group_arn = \"${aws_lb_target_group.test.arn}\"",
      "  target_id        = \"${aws_instance.test.id}\"",
      "  port             = 80",
      "}",
      "",
      "resource \"aws_lb_target_group\" \"test\" {",
      "  // Other arguments",
      "}",
      "",
      "resource \"aws_instance\" \"test\" {",
      "  // Other arguments",
      "}"
    ]
  },
  "aws-resource-licensemanager_association": {
    "description": "Defines licensemanager_association",
    "prefix": "tf-aws-resource-licensemanager_association",
    "body": [
      "data \"aws_ami\" \"example\" {",
      "  most_recent = true",
      "  owners      = [\"amazon\"]",
      "",
      "  filter {",
      "    name   = \"name\"",
      "    values = [\"amzn-ami-vpc-nat*\"]",
      "  }",
      "}",
      "",
      "resource \"aws_instance\" \"example\" {",
      "  ami           = \"${data.aws_ami.example.id}\"",
      "  instance_type = \"t2.micro\"",
      "}",
      "",
      "resource \"aws_licensemanager_license_configuration\" \"example\" {",
      "  name                  = \"Example\"",
      "  license_counting_type = \"Instance\"",
      "}",
      "",
      "resource \"aws_licensemanager_association\" \"example\" {",
      "  license_configuration_arn = \"${aws_licensemanager_license_configuration.example.arn}\"",
      "  resource_arn              = \"${aws_instance.example.arn}\"",
      "}"
    ]
  },
  "aws-resource-licensemanager_license_configuration": {
    "description": "Defines licensemanager_license_configuration",
    "prefix": "tf-aws-resource-licensemanager_license_configuration",
    "body": [
      "resource \"aws_licensemanager_license_configuration\" \"example\" {",
      "  name                     = \"Example\"",
      "  description              = \"Example\"",
      "  license_count            = 10",
      "  license_count_hard_limit = true",
      "  license_counting_type    = \"Socket\"",
      "",
      "  license_rules = [",
      "    \"#minimumSockets=2\",",
      "  ]",
      "",
      "  tags = {",
      "    foo = \"barr\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-lightsail_domain": {
    "description": "Defines lightsail_domain",
    "prefix": "tf-aws-resource-lightsail_domain",
    "body": [
      "resource \"aws_lightsail_domain\" \"domain_test\" {",
      "  domain_name = \"mydomain.com\"",
      "}"
    ]
  },
  "aws-resource-lightsail_instance": {
    "description": "Defines lightsail_instance",
    "prefix": "tf-aws-resource-lightsail_instance",
    "body": [
      "# Create a new GitLab Lightsail Instance",
      "resource \"aws_lightsail_instance\" \"gitlab_test\" {",
      "  name              = \"custom_gitlab\"",
      "  availability_zone = \"us-east-1b\"",
      "  blueprint_id      = \"string\"",
      "  bundle_id         = \"string\"",
      "  key_pair_name     = \"some_key_name\"",
      "  tags = {",
      "    foo = \"bar\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-lightsail_key_pair": {
    "description": "Defines lightsail_key_pair",
    "prefix": "tf-aws-resource-lightsail_key_pair",
    "body": [
      "# Create a new Lightsail Key Pair",
      "resource \"aws_lightsail_key_pair\" \"lg_key_pair\" {",
      "  name = \"lg_key_pair\"",
      "}"
    ]
  },
  "aws-resource-lightsail_static_ip": {
    "description": "Defines lightsail_static_ip",
    "prefix": "tf-aws-resource-lightsail_static_ip",
    "body": [
      "resource \"aws_lightsail_static_ip\" \"test\" {",
      "  name = \"example\"",
      "}"
    ]
  },
  "aws-resource-lightsail_static_ip_attachment": {
    "description": "Defines lightsail_static_ip_attachment",
    "prefix": "tf-aws-resource-lightsail_static_ip_attachment",
    "body": [
      "resource \"aws_lightsail_static_ip_attachment\" \"test\" {",
      "  static_ip_name = \"${aws_lightsail_static_ip.test.name}\"",
      "  instance_name  = \"${aws_lightsail_instance.test.name}\"",
      "}",
      "",
      "resource \"aws_lightsail_static_ip\" \"test\" {",
      "  name = \"example\"",
      "}",
      "",
      "resource \"aws_lightsail_instance\" \"test\" {",
      "  name              = \"example\"",
      "  availability_zone = \"us-east-1b\"",
      "  blueprint_id      = \"string\"",
      "  bundle_id         = \"string\"",
      "  key_pair_name     = \"some_key_name\"",
      "}"
    ]
  },
  "aws-resource-load_balancer_backend_server_policy": {
    "description": "Defines load_balancer_backend_server_policy",
    "prefix": "tf-aws-resource-load_balancer_backend_server_policy",
    "body": [
      "resource \"aws_elb\" \"wu-tang\" {",
      "  name               = \"wu-tang\"",
      "  availability_zones = [\"us-east-1a\"]",
      "",
      "  listener {",
      "    instance_port      = 443",
      "    instance_protocol  = \"http\"",
      "    lb_port            = 443",
      "    lb_protocol        = \"https\"",
      "    ssl_certificate_id = \"arn:aws:iam::000000000000:server-certificate/wu-tang.net\"",
      "  }",
      "",
      "  tags = {",
      "    Name = \"wu-tang\"",
      "  }",
      "}",
      "",
      "resource \"aws_load_balancer_policy\" \"wu-tang-ca-pubkey-policy\" {",
      "  load_balancer_name = \"${aws_elb.wu-tang.name}\"",
      "  policy_name        = \"wu-tang-ca-pubkey-policy\"",
      "  policy_type_name   = \"PublicKeyPolicyType\"",
      "",
      "  policy_attribute {",
      "    name  = \"PublicKey\"",
      "    value = \"${file(\"wu-tang-pubkey\")}\"",
      "  }",
      "}",
      "",
      "resource \"aws_load_balancer_policy\" \"wu-tang-root-ca-backend-auth-policy\" {",
      "  load_balancer_name = \"${aws_elb.wu-tang.name}\"",
      "  policy_name        = \"wu-tang-root-ca-backend-auth-policy\"",
      "  policy_type_name   = \"BackendServerAuthenticationPolicyType\"",
      "",
      "  policy_attribute {",
      "    name  = \"PublicKeyPolicyName\"",
      "    value = \"${aws_load_balancer_policy.wu-tang-root-ca-pubkey-policy.policy_name}\"",
      "  }",
      "}",
      "",
      "resource \"aws_load_balancer_backend_server_policy\" \"wu-tang-backend-auth-policies-443\" {",
      "  load_balancer_name = \"${aws_elb.wu-tang.name}\"",
      "  instance_port      = 443",
      "",
      "  policy_names = [",
      "    \"${aws_load_balancer_policy.wu-tang-root-ca-backend-auth-policy.policy_name}\",",
      "  ]",
      "}"
    ]
  },
  "aws-resource-load_balancer_listener_policy": {
    "description": "Defines load_balancer_listener_policy",
    "prefix": "tf-aws-resource-load_balancer_listener_policy",
    "body": [
      "resource \"aws_elb\" \"wu-tang\" {",
      "  name               = \"wu-tang\"",
      "  availability_zones = [\"us-east-1a\"]",
      "",
      "  listener {",
      "    instance_port      = 443",
      "    instance_protocol  = \"http\"",
      "    lb_port            = 443",
      "    lb_protocol        = \"https\"",
      "    ssl_certificate_id = \"arn:aws:iam::000000000000:server-certificate/wu-tang.net\"",
      "  }",
      "",
      "  tags = {",
      "    Name = \"wu-tang\"",
      "  }",
      "}",
      "",
      "resource \"aws_load_balancer_policy\" \"wu-tang-ssl\" {",
      "  load_balancer_name = \"${aws_elb.wu-tang.name}\"",
      "  policy_name        = \"wu-tang-ssl\"",
      "  policy_type_name   = \"SSLNegotiationPolicyType\"",
      "",
      "  policy_attribute {",
      "    name  = \"ECDHE-ECDSA-AES128-GCM-SHA256\"",
      "    value = \"true\"",
      "  }",
      "",
      "  policy_attribute {",
      "    name  = \"Protocol-TLSv1.2\"",
      "    value = \"true\"",
      "  }",
      "}",
      "",
      "resource \"aws_load_balancer_listener_policy\" \"wu-tang-listener-policies-443\" {",
      "  load_balancer_name = \"${aws_elb.wu-tang.name}\"",
      "  load_balancer_port = 443",
      "",
      "  policy_names = [",
      "    \"${aws_load_balancer_policy.wu-tang-ssl.policy_name}\",",
      "  ]",
      "}"
    ]
  },
  "aws-resource-load_balancer_policy": {
    "description": "Defines load_balancer_policy",
    "prefix": "tf-aws-resource-load_balancer_policy",
    "body": [
      "resource \"aws_elb\" \"wu-tang\" {",
      "  name               = \"wu-tang\"",
      "  availability_zones = [\"us-east-1a\"]",
      "",
      "  listener {",
      "    instance_port      = 443",
      "    instance_protocol  = \"http\"",
      "    lb_port            = 443",
      "    lb_protocol        = \"https\"",
      "    ssl_certificate_id = \"arn:aws:iam::000000000000:server-certificate/wu-tang.net\"",
      "  }",
      "",
      "  tags = {",
      "    Name = \"wu-tang\"",
      "  }",
      "}",
      "",
      "resource \"aws_load_balancer_policy\" \"wu-tang-ca-pubkey-policy\" {",
      "  load_balancer_name = \"${aws_elb.wu-tang.name}\"",
      "  policy_name        = \"wu-tang-ca-pubkey-policy\"",
      "  policy_type_name   = \"PublicKeyPolicyType\"",
      "",
      "  policy_attribute {",
      "    name  = \"PublicKey\"",
      "    value = \"${file(\"wu-tang-pubkey\")}\"",
      "  }",
      "}",
      "",
      "resource \"aws_load_balancer_policy\" \"wu-tang-root-ca-backend-auth-policy\" {",
      "  load_balancer_name = \"${aws_elb.wu-tang.name}\"",
      "  policy_name        = \"wu-tang-root-ca-backend-auth-policy\"",
      "  policy_type_name   = \"BackendServerAuthenticationPolicyType\"",
      "",
      "  policy_attribute {",
      "    name  = \"PublicKeyPolicyName\"",
      "    value = \"${aws_load_balancer_policy.wu-tang-root-ca-pubkey-policy.policy_name}\"",
      "  }",
      "}",
      "",
      "resource \"aws_load_balancer_policy\" \"wu-tang-ssl\" {",
      "  load_balancer_name = \"${aws_elb.wu-tang.name}\"",
      "  policy_name        = \"wu-tang-ssl\"",
      "  policy_type_name   = \"SSLNegotiationPolicyType\"",
      "",
      "  policy_attribute {",
      "    name  = \"ECDHE-ECDSA-AES128-GCM-SHA256\"",
      "    value = \"true\"",
      "  }",
      "",
      "  policy_attribute {",
      "    name  = \"Protocol-TLSv1.2\"",
      "    value = \"true\"",
      "  }",
      "}",
      "",
      "resource \"aws_load_balancer_policy\" \"wu-tang-ssl-tls-1-1\" {",
      "  load_balancer_name = \"${aws_elb.wu-tang.name}\"",
      "  policy_name        = \"wu-tang-ssl\"",
      "  policy_type_name   = \"SSLNegotiationPolicyType\"",
      "",
      "  policy_attribute {",
      "    name  = \"Reference-Security-Policy\"",
      "    value = \"ELBSecurityPolicy-TLS-1-1-2017-01\"",
      "  }",
      "}",
      "",
      "resource \"aws_load_balancer_backend_server_policy\" \"wu-tang-backend-auth-policies-443\" {",
      "  load_balancer_name = \"${aws_elb.wu-tang.name}\"",
      "  instance_port      = 443",
      "",
      "  policy_names = [",
      "    \"${aws_load_balancer_policy.wu-tang-root-ca-backend-auth-policy.policy_name}\",",
      "  ]",
      "}",
      "",
      "resource \"aws_load_balancer_listener_policy\" \"wu-tang-listener-policies-443\" {",
      "  load_balancer_name = \"${aws_elb.wu-tang.name}\"",
      "  load_balancer_port = 443",
      "",
      "  policy_names = [",
      "    \"${aws_load_balancer_policy.wu-tang-ssl.policy_name}\",",
      "  ]",
      "}"
    ]
  },
  "aws-resource-macie_member_account_association": {
    "description": "Defines macie_member_account_association",
    "prefix": "tf-aws-resource-macie_member_account_association",
    "body": [
      "resource \"aws_macie_member_account_association\" \"example\" {",
      "  member_account_id = \"123456789012\"",
      "}"
    ]
  },
  "aws-resource-macie_s3_bucket_association": {
    "description": "Defines macie_s3_bucket_association",
    "prefix": "tf-aws-resource-macie_s3_bucket_association",
    "body": [
      "resource \"aws_macie_s3_bucket_association\" \"example\" {",
      "  bucket_name = \"tf-macie-example\"",
      "  prefix      = \"data\"",
      "",
      "  classification_type {",
      "    one_time = \"FULL\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-main_route_table_assoc": {
    "description": "Defines main_route_table_assoc",
    "prefix": "tf-aws-resource-main_route_table_assoc",
    "body": [
      "resource \"aws_main_route_table_association\" \"a\" {",
      "  vpc_id         = \"${aws_vpc.foo.id}\"",
      "  route_table_id = \"${aws_route_table.bar.id}\"",
      "}"
    ]
  },
  "aws-resource-media_package_channel": {
    "description": "Defines media_package_channel",
    "prefix": "tf-aws-resource-media_package_channel",
    "body": [
      "resource \"aws_media_package_channel\" \"kittens\" {",
      "  channel_id  = \"kitten-channel\"",
      "  description = \"A channel dedicated to amusing videos of kittens.\"",
      "}"
    ]
  },
  "aws-resource-media_store_container": {
    "description": "Defines media_store_container",
    "prefix": "tf-aws-resource-media_store_container",
    "body": [
      "resource \"aws_media_store_container\" \"example\" {",
      "  name = \"example\"",
      "}"
    ]
  },
  "aws-resource-media_store_container_policy": {
    "description": "Defines media_store_container_policy",
    "prefix": "tf-aws-resource-media_store_container_policy",
    "body": [
      "data \"aws_region\" \"current\" {}",
      "",
      "data \"aws_caller_identity\" \"current\" {}",
      "",
      "resource \"aws_media_store_container\" \"example\" {",
      "  name = \"example\"",
      "}",
      "",
      "resource \"aws_media_store_container_policy\" \"example\" {",
      "  container_name = \"${aws_media_store_container.example.name}\"",
      "",
      "  policy = <<EOF",
      "{",
      "\t\"Version\": \"2012-10-17\",",
      "\t\"Statement\": [{",
      "\t\t\"Sid\": \"MediaStoreFullAccess\",",
      "\t\t\"Action\": [ \"mediastore:*\" ],",
      "\t\t\"Principal\": {\"AWS\" : \"arn:aws:iam::${data.aws_caller_identity.current.account_id}:root\"},",
      "\t\t\"Effect\": \"Allow\",",
      "\t\t\"Resource\": \"arn:aws:mediastore:${data.aws_caller_identity.current.account_id}:${data.aws_region.current.name}:container/${aws_media_store_container.example.name}/*\",",
      "\t\t\"Condition\": {",
      "\t\t\t\"Bool\": { \"aws:SecureTransport\": \"true\" }",
      "\t\t}",
      "\t}]",
      "}",
      "EOF",
      "}"
    ]
  },
  "aws-resource-mq_broker": {
    "description": "Defines mq_broker",
    "prefix": "tf-aws-resource-mq_broker",
    "body": [
      "resource \"aws_mq_broker\" \"example\" {",
      "  broker_name = \"example\"",
      "",
      "  configuration {",
      "    id       = \"${aws_mq_configuration.test.id}\"",
      "    revision = \"${aws_mq_configuration.test.latest_revision}\"",
      "  }",
      "",
      "  engine_type        = \"ActiveMQ\"",
      "  engine_version     = \"5.15.0\"",
      "  host_instance_type = \"mq.t2.micro\"",
      "  security_groups    = [\"${aws_security_group.test.id}\"]",
      "",
      "  user {",
      "    username = \"ExampleUser\"",
      "    password = \"MindTheGap\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-mq_configuration": {
    "description": "Defines mq_configuration",
    "prefix": "tf-aws-resource-mq_configuration",
    "body": [
      "resource \"aws_mq_configuration\" \"example\" {",
      "  description    = \"Example Configuration\"",
      "  name           = \"example\"",
      "  engine_type    = \"ActiveMQ\"",
      "  engine_version = \"5.15.0\"",
      "",
      "  data = <<DATA",
      "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>",
      "<broker xmlns=\"http://activemq.apache.org/schema/core\">",
      "  <plugins>",
      "    <forcePersistencyModeBrokerPlugin persistenceFlag=\"true\"/>",
      "    <statisticsBrokerPlugin/>",
      "    <timeStampingBrokerPlugin ttlCeiling=\"86400000\" zeroExpirationOverride=\"86400000\"/>",
      "  </plugins>",
      "</broker>",
      "DATA",
      "}"
    ]
  },
  "aws-resource-msk_cluster": {
    "description": "Defines msk_cluster",
    "prefix": "tf-aws-resource-msk_cluster",
    "body": [
      "",
      "resource \"aws_vpc\" \"vpc\" {",
      "  cidr_block = \"192.168.0.0/22\"",
      "}",
      "",
      "data \"aws_availability_zones\" \"azs\" {",
      "  state = \"available\"",
      "}",
      "",
      "resource \"aws_subnet\" \"subnet_az1\" {",
      "  availability_zone = \"${data.aws_availability_zones.azs.names[0]}\"",
      "  cidr_block        = \"192.168.0.0/24\"",
      "  vpc_id            = \"${aws_vpc.vpc.id}\"",
      "}",
      "",
      "resource \"aws_subnet\" \"subnet_az2\" {",
      "  availability_zone = \"${data.aws_availability_zones.azs.names[1]}\"",
      "  cidr_block        = \"192.168.1.0/24\"",
      "  vpc_id            = \"${aws_vpc.vpc.id}\"",
      "}",
      "",
      "resource \"aws_subnet\" \"subnet_az3\" {",
      "  availability_zone = \"${data.aws_availability_zones.azs.names[2]}\"",
      "  cidr_block        = \"192.168.2.0/24\"",
      "  vpc_id            = \"${aws_vpc.vpc.id}\"",
      "}",
      "",
      "resource \"aws_security_group\" \"sg\" {",
      "  vpc_id = \"${aws_vpc.vpc.id}\"",
      "}",
      "",
      "resource \"aws_kms_key\" \"kms\" {",
      "  description = \"example\"",
      "}",
      "",
      "resource \"aws_msk_cluster\" \"example\" {",
      "  cluster_name           = \"example\"",
      "  kafka_version          = \"2.1.0\"",
      "  number_of_broker_nodes = 3",
      "",
      "  broker_node_group_info {",
      "    instance_type  = \"kafka.m5.large\"",
      "    ebs_volume_size = \"1000\"",
      "    client_subnets = [",
      "      \"${aws_subnet.subnet_az1.id}\",",
      "      \"${aws_subnet.subnet_az2.id}\",",
      "      \"${aws_subnet.subnet_az3.id}\",",
      "    ]",
      "    security_groups = [ \"${aws_security_group.sg.id}\" ]",
      "  }",
      "",
      "  encryption_info {",
      "    encryption_at_rest_kms_key_arn = \"${aws_kms_key.kms.arn}\"",
      "  }",
      "",
      "  tags = {",
      "    foo = \"bar\"",
      "  }",
      "}",
      "",
      "output \"zookeeper_connect_string\" {",
      "  value = \"${aws_msk_cluster.example.zookeeper_connect_string}\"",
      "}",
      "",
      "output \"bootstrap_brokers\" {",
      "  description = \"Plaintext connection host:port pairs\"",
      "  value       = \"${aws_msk_cluster.example.bootstrap_brokers}\"",
      "}",
      "",
      "output \"bootstrap_brokers_tls\" {",
      "  description = \"TLS connection host:port pairs\"",
      "  value       = \"${aws_msk_cluster.example.bootstrap_brokers_tls}\"",
      "}"
    ]
  },
  "aws-resource-msk_configuration": {
    "description": "Defines msk_configuration",
    "prefix": "tf-aws-resource-msk_configuration",
    "body": [
      "resource \"aws_msk_configuration\" \"example\" {",
      "  kafka_versions = [\"2.1.0\"]",
      "  name           = \"example\"",
      "",
      "  server_properties = <<PROPERTIES",
      "auto.create.topics.enable = true",
      "delete.topic.enable = true",
      "PROPERTIES",
      "}"
    ]
  },
  "aws-resource-nat_gateway": {
    "description": "Defines nat_gateway",
    "prefix": "tf-aws-resource-nat_gateway",
    "body": [
      "resource \"aws_nat_gateway\" \"gw\" {",
      "  allocation_id = \"${aws_eip.nat.id}\"",
      "  subnet_id     = \"${aws_subnet.public.id}\"",
      "}"
    ]
  },
  "aws-resource-neptune_cluster": {
    "description": "Defines neptune_cluster",
    "prefix": "tf-aws-resource-neptune_cluster",
    "body": [
      "resource \"aws_neptune_cluster\" \"default\" {",
      "  cluster_identifier                  = \"neptune-cluster-demo\"",
      "  engine                              = \"neptune\"",
      "  backup_retention_period             = 5",
      "  preferred_backup_window             = \"07:00-09:00\"",
      "  skip_final_snapshot                 = true",
      "  iam_database_authentication_enabled = true",
      "  apply_immediately                   = true",
      "}"
    ]
  },
  "aws-resource-neptune_cluster_instance": {
    "description": "Defines neptune_cluster_instance",
    "prefix": "tf-aws-resource-neptune_cluster_instance",
    "body": [
      "resource \"aws_neptune_cluster\" \"default\" {",
      "  cluster_identifier                  = \"neptune-cluster-demo\"",
      "  engine                              = \"neptune\"",
      "  backup_retention_period             = 5",
      "  preferred_backup_window             = \"07:00-09:00\"",
      "  skip_final_snapshot                 = true",
      "  iam_database_authentication_enabled = true",
      "  apply_immediately                   = true",
      "}",
      "",
      "resource \"aws_neptune_cluster_instance\" \"example\" {",
      "  count              = 2",
      "  cluster_identifier = \"${aws_neptune_cluster.default.id}\"",
      "  engine             = \"neptune\"",
      "  instance_class     = \"db.r4.large\"",
      "  apply_immediately  = true",
      "}"
    ]
  },
  "aws-resource-neptune_cluster_parameter_group": {
    "description": "Defines neptune_cluster_parameter_group",
    "prefix": "tf-aws-resource-neptune_cluster_parameter_group",
    "body": [
      "resource \"aws_neptune_cluster_parameter_group\" \"example\" {",
      "  family      = \"neptune1\"",
      "  name        = \"example\"",
      "  description = \"neptune cluster parameter group\"",
      "",
      "  parameter {",
      "    name  = \"neptune_enable_audit_log\"",
      "    value = 1",
      "  }",
      "}"
    ]
  },
  "aws-resource-neptune_cluster_snapshot": {
    "description": "Defines neptune_cluster_snapshot",
    "prefix": "tf-aws-resource-neptune_cluster_snapshot",
    "body": [
      "resource \"aws_neptune_cluster_snapshot\" \"example\" {",
      "  db_cluster_identifier          = \"${aws_neptune_cluster.example.id}\"",
      "  db_cluster_snapshot_identifier = \"resourcetestsnapshot1234\"",
      "}"
    ]
  },
  "aws-resource-neptune_event_subscription": {
    "description": "Defines neptune_event_subscription",
    "prefix": "tf-aws-resource-neptune_event_subscription",
    "body": [
      "resource \"aws_neptune_cluster\" \"default\" {",
      "  cluster_identifier                  = \"neptune-cluster-demo\"",
      "  engine                              = \"neptune\"",
      "  backup_retention_period             = 5",
      "  preferred_backup_window             = \"07:00-09:00\"",
      "  skip_final_snapshot                 = true",
      "  iam_database_authentication_enabled = \"true\"",
      "  apply_immediately                   = \"true\"",
      "}",
      "",
      "resource \"aws_neptune_cluster_instance\" \"example\" {",
      "  count              = 1",
      "  cluster_identifier = \"${aws_neptune_cluster.default.id}\"",
      "  engine             = \"neptune\"",
      "  instance_class     = \"db.r4.large\"",
      "  apply_immediately  = \"true\"",
      "}",
      "",
      "resource \"aws_sns_topic\" \"default\" {",
      "  name = \"neptune-events\"",
      "}",
      "",
      "resource \"aws_neptune_event_subscription\" \"default\" {",
      "  name          = \"neptune-event-sub\"",
      "  sns_topic_arn = \"${aws_sns_topic.default.arn}\"",
      "",
      "  source_type = \"db-instance\"",
      "  source_ids  = [\"${aws_neptune_cluster_instance.example.id}\"]",
      "",
      "  event_categories = [",
      "    \"maintenance\",",
      "    \"availability\",",
      "    \"creation\",",
      "    \"backup\",",
      "    \"restoration\",",
      "    \"recovery\",",
      "    \"deletion\",",
      "    \"failover\",",
      "    \"failure\",",
      "    \"notification\",",
      "    \"configuration change\",",
      "    \"read replica\",",
      "  ]",
      "",
      "  tags = {",
      "    \"env\" = \"test\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-neptune_parameter_group": {
    "description": "Defines neptune_parameter_group",
    "prefix": "tf-aws-resource-neptune_parameter_group",
    "body": [
      "resource \"aws_neptune_parameter_group\" \"example\" {",
      "  family = \"neptune1\"",
      "  name   = \"example\"",
      "",
      "  parameter {",
      "    name  = \"neptune_query_timeout\"",
      "    value = \"25\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-neptune_subnet_group": {
    "description": "Defines neptune_subnet_group",
    "prefix": "tf-aws-resource-neptune_subnet_group",
    "body": [
      "resource \"aws_neptune_subnet_group\" \"default\" {",
      "  name       = \"main\"",
      "  subnet_ids = [\"${aws_subnet.frontend.id}\", \"${aws_subnet.backend.id}\"]",
      "",
      "  tags = {",
      "    Name = \"My neptune subnet group\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-network_acl": {
    "description": "Defines network_acl",
    "prefix": "tf-aws-resource-network_acl",
    "body": [
      "resource \"aws_network_acl\" \"main\" {",
      "  vpc_id = \"${aws_vpc.main.id}\"",
      "",
      "  egress {",
      "    protocol   = \"tcp\"",
      "    rule_no    = 200",
      "    action     = \"allow\"",
      "    cidr_block = \"10.3.0.0/18\"",
      "    from_port  = 443",
      "    to_port    = 443",
      "  }",
      "",
      "  ingress {",
      "    protocol   = \"tcp\"",
      "    rule_no    = 100",
      "    action     = \"allow\"",
      "    cidr_block = \"10.3.0.0/18\"",
      "    from_port  = 80",
      "    to_port    = 80",
      "  }",
      "",
      "  tags = {",
      "    Name = \"main\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-network_acl_rule": {
    "description": "Defines network_acl_rule",
    "prefix": "tf-aws-resource-network_acl_rule",
    "body": [
      "resource \"aws_network_acl\" \"bar\" {",
      "  vpc_id = \"${aws_vpc.foo.id}\"",
      "}",
      "",
      "resource \"aws_network_acl_rule\" \"bar\" {",
      "  network_acl_id = \"${aws_network_acl.bar.id}\"",
      "  rule_number    = 200",
      "  egress         = false",
      "  protocol       = \"tcp\"",
      "  rule_action    = \"allow\"",
      "  # Opening to 0.0.0.0/0 can lead to security vulnerabilities.",
      "  cidr_block = # add a CIDR block here",
      "  from_port      = 22",
      "  to_port        = 22",
      "}"
    ]
  },
  "aws-resource-network_interface": {
    "description": "Defines network_interface",
    "prefix": "tf-aws-resource-network_interface",
    "body": [
      "resource \"aws_network_interface\" \"test\" {",
      "  subnet_id       = \"${aws_subnet.public_a.id}\"",
      "  private_ips     = [\"10.0.0.50\"]",
      "  security_groups = [\"${aws_security_group.web.id}\"]",
      "",
      "  attachment {",
      "    instance     = \"${aws_instance.test.id}\"",
      "    device_index = 1",
      "  }",
      "}"
    ]
  },
  "aws-resource-network_interface_attachment": {
    "description": "Defines network_interface_attachment",
    "prefix": "tf-aws-resource-network_interface_attachment",
    "body": [
      "resource \"aws_network_interface_attachment\" \"test\" {",
      "  instance_id          = \"${aws_instance.test.id}\"",
      "  network_interface_id = \"${aws_network_interface.test.id}\"",
      "  device_index         = 0",
      "}"
    ]
  },
  "aws-resource-network_interface_sg_attachment": {
    "description": "Defines network_interface_sg_attachment",
    "prefix": "tf-aws-resource-network_interface_sg_attachment",
    "body": [
      "data \"aws_ami\" \"ami\" {",
      "  most_recent = true",
      "",
      "  filter {",
      "    name   = \"name\"",
      "    values = [\"amzn-ami-hvm-*\"]",
      "  }",
      "",
      "  owners = [\"amazon\"]",
      "}",
      "",
      "resource \"aws_instance\" \"instance\" {",
      "  instance_type = \"t2.micro\"",
      "  ami           = \"${data.aws_ami.ami.id}\"",
      "",
      "  tags = {",
      "    \"type\" = \"terraform-test-instance\"",
      "  }",
      "}",
      "",
      "resource \"aws_security_group\" \"sg\" {",
      "  tags = {",
      "    \"type\" = \"terraform-test-security-group\"",
      "  }",
      "}",
      "",
      "resource \"aws_network_interface_sg_attachment\" \"sg_attachment\" {",
      "  security_group_id    = \"${aws_security_group.sg.id}\"",
      "  network_interface_id = \"${aws_instance.instance.primary_network_interface_id}\"",
      "}"
    ]
  },
  "aws-resource-opsworks_application": {
    "description": "Defines opsworks_application",
    "prefix": "tf-aws-resource-opsworks_application",
    "body": [
      "resource \"aws_opsworks_application\" \"foo-app\" {",
      "  name        = \"foobar application\"",
      "  short_name  = \"foobar\"",
      "  stack_id    = \"${aws_opsworks_stack.main.id}\"",
      "  type        = \"rails\"",
      "  description = \"This is a Rails application\"",
      "",
      "  domains = [",
      "    \"example.com\",",
      "    \"sub.example.com\",",
      "  ]",
      "",
      "  environment {",
      "    key    = \"key\"",
      "    value  = \"value\"",
      "    secure = false",
      "  }",
      "",
      "  app_source {",
      "    type     = \"git\"",
      "    revision = \"master\"",
      "    url      = \"https://github.com/example.git\"",
      "  }",
      "",
      "  enable_ssl = true",
      "",
      "  ssl_configuration {",
      "    private_key = \"${file(\"./foobar.key\")}\"",
      "    certificate = \"${file(\"./foobar.crt\")}\"",
      "  }",
      "",
      "  document_root         = \"public\"",
      "  auto_bundle_on_deploy = true",
      "  rails_env             = \"staging\"",
      "}"
    ]
  },
  "aws-resource-opsworks_custom_layer": {
    "description": "Defines opsworks_custom_layer",
    "prefix": "tf-aws-resource-opsworks_custom_layer",
    "body": [
      "resource \"aws_opsworks_custom_layer\" \"custlayer\" {",
      "  name       = \"My Awesome Custom Layer\"",
      "  short_name = \"awesome\"",
      "  stack_id   = \"${aws_opsworks_stack.main.id}\"",
      "}"
    ]
  },
  "aws-resource-opsworks_ganglia_layer": {
    "description": "Defines opsworks_ganglia_layer",
    "prefix": "tf-aws-resource-opsworks_ganglia_layer",
    "body": [
      "resource \"aws_opsworks_ganglia_layer\" \"monitor\" {",
      "  stack_id = \"${aws_opsworks_stack.main.id}\"",
      "  password = \"foobarbaz\"",
      "}"
    ]
  },
  "aws-resource-opsworks_haproxy_layer": {
    "description": "Defines opsworks_haproxy_layer",
    "prefix": "tf-aws-resource-opsworks_haproxy_layer",
    "body": [
      "resource \"aws_opsworks_haproxy_layer\" \"lb\" {",
      "  stack_id       = \"${aws_opsworks_stack.main.id}\"",
      "  stats_password = \"foobarbaz\"",
      "}"
    ]
  },
  "aws-resource-opsworks_instance": {
    "description": "Defines opsworks_instance",
    "prefix": "tf-aws-resource-opsworks_instance",
    "body": [
      "resource \"aws_opsworks_instance\" \"my-instance\" {",
      "  stack_id = \"${aws_opsworks_stack.main.id}\"",
      "",
      "  layer_ids = [",
      "    \"${aws_opsworks_custom_layer.my-layer.id}\",",
      "  ]",
      "",
      "  instance_type = \"t2.micro\"",
      "  os            = \"Amazon Linux 2015.09\"",
      "  state         = \"stopped\"",
      "}"
    ]
  },
  "aws-resource-opsworks_java_app_layer": {
    "description": "Defines opsworks_java_app_layer",
    "prefix": "tf-aws-resource-opsworks_java_app_layer",
    "body": [
      "resource \"aws_opsworks_java_app_layer\" \"app\" {",
      "  stack_id = \"${aws_opsworks_stack.main.id}\"",
      "}"
    ]
  },
  "aws-resource-opsworks_memcached_layer": {
    "description": "Defines opsworks_memcached_layer",
    "prefix": "tf-aws-resource-opsworks_memcached_layer",
    "body": [
      "resource \"aws_opsworks_memcached_layer\" \"cache\" {",
      "  stack_id = \"${aws_opsworks_stack.main.id}\"",
      "}"
    ]
  },
  "aws-resource-opsworks_mysql_layer": {
    "description": "Defines opsworks_mysql_layer",
    "prefix": "tf-aws-resource-opsworks_mysql_layer",
    "body": [
      "resource \"aws_opsworks_mysql_layer\" \"db\" {",
      "  stack_id = \"${aws_opsworks_stack.main.id}\"",
      "}"
    ]
  },
  "aws-resource-opsworks_nodejs_app_layer": {
    "description": "Defines opsworks_nodejs_app_layer",
    "prefix": "tf-aws-resource-opsworks_nodejs_app_layer",
    "body": [
      "resource \"aws_opsworks_nodejs_app_layer\" \"app\" {",
      "  stack_id = \"${aws_opsworks_stack.main.id}\"",
      "}"
    ]
  },
  "aws-resource-opsworks_permission": {
    "description": "Defines opsworks_permission",
    "prefix": "tf-aws-resource-opsworks_permission",
    "body": [
      "resource \"aws_opsworks_permission\" \"my_stack_permission\" {",
      "  allow_ssh  = true",
      "  allow_sudo = true",
      "  level      = \"iam_only\"",
      "  user_arn   = \"${aws_iam_user.user.arn}\"",
      "  stack_id   = \"${aws_opsworks_stack.stack.id}\"",
      "}"
    ]
  },
  "aws-resource-opsworks_php_app_layer": {
    "description": "Defines opsworks_php_app_layer",
    "prefix": "tf-aws-resource-opsworks_php_app_layer",
    "body": [
      "resource \"aws_opsworks_php_app_layer\" \"app\" {",
      "  stack_id = \"${aws_opsworks_stack.main.id}\"",
      "}"
    ]
  },
  "aws-resource-opsworks_rails_app_layer": {
    "description": "Defines opsworks_rails_app_layer",
    "prefix": "tf-aws-resource-opsworks_rails_app_layer",
    "body": [
      "resource \"aws_opsworks_rails_app_layer\" \"app\" {",
      "  stack_id = \"${aws_opsworks_stack.main.id}\"",
      "}"
    ]
  },
  "aws-resource-opsworks_rds_db_instance": {
    "description": "Defines opsworks_rds_db_instance",
    "prefix": "tf-aws-resource-opsworks_rds_db_instance",
    "body": [
      "resource \"aws_opsworks_rds_db_instance\" \"my_instance\" {",
      "  stack_id            = \"${aws_opsworks_stack.my_stack.id}\"",
      "  rds_db_instance_arn = \"${aws_db_instance.my_instance.arn}\"",
      "  db_user             = \"someUser\"",
      "  db_password         = \"somePass\"",
      "}"
    ]
  },
  "aws-resource-opsworks_stack": {
    "description": "Defines opsworks_stack",
    "prefix": "tf-aws-resource-opsworks_stack",
    "body": [
      "resource \"aws_opsworks_stack\" \"main\" {",
      "  name                         = \"awesome-stack\"",
      "  region                       = \"us-west-1\"",
      "  service_role_arn             = \"${aws_iam_role.opsworks.arn}\"",
      "  default_instance_profile_arn = \"${aws_iam_instance_profile.opsworks.arn}\"",
      "",
      "  tags = {",
      "    Name = \"foobar-terraform-stack\"",
      "  }",
      "",
      "  custom_json = <<EOT",
      "{",
      " \"foobar\": {",
      "    \"version\": \"1.0.0\"",
      "  }",
      "}",
      "EOT",
      "}"
    ]
  },
  "aws-resource-opsworks_static_web_layer": {
    "description": "Defines opsworks_static_web_layer",
    "prefix": "tf-aws-resource-opsworks_static_web_layer",
    "body": [
      "resource \"aws_opsworks_static_web_layer\" \"web\" {",
      "  stack_id = \"${aws_opsworks_stack.main.id}\"",
      "}"
    ]
  },
  "aws-resource-opsworks_user_profile": {
    "description": "Defines opsworks_user_profile",
    "prefix": "tf-aws-resource-opsworks_user_profile",
    "body": [
      "resource \"aws_opsworks_user_profile\" \"my_profile\" {",
      "  user_arn     = \"${aws_iam_user.user.arn}\"",
      "  ssh_username = \"my_user\"",
      "}"
    ]
  },
  "aws-resource-organizations_account": {
    "description": "Defines organizations_account",
    "prefix": "tf-aws-resource-organizations_account",
    "body": [
      "resource \"aws_organizations_account\" \"account\" {",
      "  name  = \"my_new_account\"",
      "  email = \"john@doe.org\"",
      "}"
    ]
  },
  "aws-resource-organizations_organization": {
    "description": "Defines organizations_organization",
    "prefix": "tf-aws-resource-organizations_organization",
    "body": [
      "resource \"aws_organizations_organization\" \"org\" {",
      "  aws_service_access_principals = [",
      "    \"cloudtrail.amazonaws.com\",",
      "    \"config.amazonaws.com\",",
      "  ]",
      "",
      "  feature_set = \"ALL\"",
      "}"
    ]
  },
  "aws-resource-organizations_organizational_unit": {
    "description": "Defines organizations_organizational_unit",
    "prefix": "tf-aws-resource-organizations_organizational_unit",
    "body": [
      "resource \"aws_organizations_organizational_unit\" \"example\" {",
      "  name      = \"example\"",
      "  parent_id = \"${aws_organizations_organization.example.roots.0.id}\"",
      "}"
    ]
  },
  "aws-resource-organizations_policy": {
    "description": "Defines organizations_policy",
    "prefix": "tf-aws-resource-organizations_policy",
    "body": [
      "resource \"aws_organizations_policy\" \"example\" {",
      "  name = \"example\"",
      "",
      "  content = <<CONTENT",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": {",
      "    \"Effect\": \"Allow\",",
      "    \"Action\": \"*\",",
      "    \"Resource\": \"*\"",
      "  }",
      "}",
      "CONTENT",
      "}"
    ]
  },
  "aws-resource-organizations_policy_attachment": {
    "description": "Defines organizations_policy_attachment",
    "prefix": "tf-aws-resource-organizations_policy_attachment",
    "body": [
      "resource \"aws_organizations_policy_attachment\" \"account\" {",
      "  policy_id = \"${aws_organizations_policy.example.id}\"",
      "  target_id = \"123456789012\"",
      "}"
    ]
  },
  "aws-resource-pinpoint_adm_channel": {
    "description": "Defines pinpoint_adm_channel",
    "prefix": "tf-aws-resource-pinpoint_adm_channel",
    "body": [
      "resource \"aws_pinpoint_app\" \"app\" {}",
      "",
      "resource \"aws_pinpoint_adm_channel\" \"channel\" {",
      "  application_id = \"${aws_pinpoint_app.app.application_id}\"",
      "  client_id      = \"\"",
      "  client_secret  = \"\"",
      "  enabled        = true",
      "}"
    ]
  },
  "aws-resource-pinpoint_apns_channel": {
    "description": "Defines pinpoint_apns_channel",
    "prefix": "tf-aws-resource-pinpoint_apns_channel",
    "body": [
      "resource \"aws_pinpoint_apns_channel\" \"apns\" {",
      "  application_id = \"${aws_pinpoint_app.app.application_id}\"",
      "",
      "  certificate = \"${file(\"./certificate.pem\")}\"",
      "  private_key = \"${file(\"./private_key.key\")}\"",
      "}",
      "",
      "resource \"aws_pinpoint_app\" \"app\" {}"
    ]
  },
  "aws-resource-pinpoint_apns_sandbox_channel": {
    "description": "Defines pinpoint_apns_sandbox_channel",
    "prefix": "tf-aws-resource-pinpoint_apns_sandbox_channel",
    "body": [
      "resource \"aws_pinpoint_apns_sandbox_channel\" \"apns_sandbox\" {",
      "  application_id = \"${aws_pinpoint_app.app.application_id}\"",
      "",
      "  certificate = \"${file(\"./certificate.pem\")}\"",
      "  private_key = \"${file(\"./private_key.key\")}\"",
      "}",
      "",
      "resource \"aws_pinpoint_app\" \"app\" {}"
    ]
  },
  "aws-resource-pinpoint_apns_voip_channel": {
    "description": "Defines pinpoint_apns_voip_channel",
    "prefix": "tf-aws-resource-pinpoint_apns_voip_channel",
    "body": [
      "resource \"aws_pinpoint_apns_voip_channel\" \"apns_voip\" {",
      "  application_id = \"${aws_pinpoint_app.app.application_id}\"",
      "",
      "  certificate = \"${file(\"./certificate.pem\")}\"",
      "  private_key = \"${file(\"./private_key.key\")}\"",
      "}",
      "",
      "resource \"aws_pinpoint_app\" \"app\" {}"
    ]
  },
  "aws-resource-pinpoint_apns_voip_sandbox_channel": {
    "description": "Defines pinpoint_apns_voip_sandbox_channel",
    "prefix": "tf-aws-resource-pinpoint_apns_voip_sandbox_channel",
    "body": [
      "resource \"aws_pinpoint_apns_voip_sandbox_channel\" \"apns_voip_sandbox\" {",
      "  application_id = \"${aws_pinpoint_app.app.application_id}\"",
      "",
      "  certificate = \"${file(\"./certificate.pem\")}\"",
      "  private_key = \"${file(\"./private_key.key\")}\"",
      "}",
      "",
      "resource \"aws_pinpoint_app\" \"app\" {}"
    ]
  },
  "aws-resource-pinpoint_app": {
    "description": "Defines pinpoint_app",
    "prefix": "tf-aws-resource-pinpoint_app",
    "body": [
      "resource \"aws_pinpoint_app\" \"example\" {",
      "  name = \"test-app\"",
      "",
      "  limits {",
      "    maximum_duration = 600",
      "  }",
      "",
      "  quiet_time {",
      "    start = \"00:00\"",
      "    end   = \"06:00\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-pinpoint_baidu_channel": {
    "description": "Defines pinpoint_baidu_channel",
    "prefix": "tf-aws-resource-pinpoint_baidu_channel",
    "body": [
      "resource \"aws_pinpoint_app\" \"app\" {}",
      "",
      "resource \"aws_pinpoint_baidu_channel\" \"channel\" {",
      "  application_id = \"${aws_pinpoint_app.app.application_id}\"",
      "  api_key        = \"\"",
      "  secret_key     = \"\"",
      "}"
    ]
  },
  "aws-resource-pinpoint_email_channel": {
    "description": "Defines pinpoint_email_channel",
    "prefix": "tf-aws-resource-pinpoint_email_channel",
    "body": [
      "resource \"aws_pinpoint_email_channel\" \"email\" {",
      "  application_id = \"${aws_pinpoint_app.app.application_id}\"",
      "  from_address   = \"user@example.com\"",
      "  identity       = \"${aws_ses_domain_identity.identity.arn}\"",
      "  role_arn       = \"${aws_iam_role.role.arn}\"",
      "}",
      "",
      "resource \"aws_pinpoint_app\" \"app\" {}",
      "",
      "resource \"aws_ses_domain_identity\" \"identity\" {",
      "  domain = \"example.com\"",
      "}",
      "",
      "resource \"aws_iam_role\" \"role\" {",
      "  assume_role_policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": \"sts:AssumeRole\",",
      "      \"Principal\": {",
      "        \"Service\": \"pinpoint.amazonaws.com\"",
      "      },",
      "      \"Effect\": \"Allow\",",
      "      \"Sid\": \"\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_role_policy\" \"role_policy\" {",
      "  name = \"role_policy\"",
      "  role = \"${aws_iam_role.role.id}\"",
      "",
      "  policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": {",
      "    \"Action\": [",
      "      \"mobileanalytics:PutEvents\",",
      "      \"mobileanalytics:PutItems\"",
      "    ],",
      "    \"Effect\": \"Allow\",",
      "    \"Resource\": [",
      "      \"*\"",
      "    ]",
      "  }",
      "}",
      "EOF",
      "}"
    ]
  },
  "aws-resource-pinpoint_event_stream": {
    "description": "Defines pinpoint_event_stream",
    "prefix": "tf-aws-resource-pinpoint_event_stream",
    "body": [
      "resource \"aws_pinpoint_event_stream\" \"stream\" {",
      "  application_id         = \"${aws_pinpoint_app.app.application_id}\"",
      "  destination_stream_arn = \"${aws_kinesis_stream.test_stream.arn}\"",
      "  role_arn               = \"${aws_iam_role.test_role.arn}\"",
      "}",
      "",
      "resource \"aws_pinpoint_app\" \"app\" {}",
      "",
      "resource \"aws_kinesis_stream\" \"test_stream\" {",
      "  name        = \"pinpoint-kinesis-test\"",
      "  shard_count = 1",
      "}",
      "",
      "resource \"aws_iam_role\" \"test_role\" {",
      "  assume_role_policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Action\": \"sts:AssumeRole\",",
      "      \"Principal\": {",
      "        \"Service\": \"pinpoint.us-east-1.amazonaws.com\"",
      "      },",
      "      \"Effect\": \"Allow\",",
      "      \"Sid\": \"\"",
      "    }",
      "  ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_role_policy\" \"test_role_policy\" {",
      "  name = \"test_policy\"",
      "  role = \"${aws_iam_role.test_role.id}\"",
      "",
      "  policy = <<EOF",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": {",
      "    \"Action\": [",
      "      \"kinesis:PutRecords\",",
      "      \"kinesis:DescribeStream\"",
      "    ],",
      "    \"Effect\": \"Allow\",",
      "    \"Resource\": [",
      "      \"arn:aws:kinesis:us-east-1:*:*/*\"",
      "    ]",
      "  }",
      "}",
      "EOF",
      "}"
    ]
  },
  "aws-resource-pinpoint_gcm_channel": {
    "description": "Defines pinpoint_gcm_channel",
    "prefix": "tf-aws-resource-pinpoint_gcm_channel",
    "body": [
      "resource \"aws_pinpoint_gcm_channel\" \"gcm\" {",
      "  application_id = \"${aws_pinpoint_app.app.application_id}\"",
      "  api_key        = \"api_key\"",
      "}",
      "",
      "resource \"aws_pinpoint_app\" \"app\" {}"
    ]
  },
  "aws-resource-pinpoint_sms_channel": {
    "description": "Defines pinpoint_sms_channel",
    "prefix": "tf-aws-resource-pinpoint_sms_channel",
    "body": [
      "resource \"aws_pinpoint_sms_channel\" \"sms\" {",
      "  application_id = \"${aws_pinpoint_app.app.application_id}\"",
      "}",
      "",
      "resource \"aws_pinpoint_app\" \"app\" {}"
    ]
  },
  "aws-resource-placement_group": {
    "description": "Defines placement_group",
    "prefix": "tf-aws-resource-placement_group",
    "body": [
      "resource \"aws_placement_group\" \"web\" {",
      "  name     = \"hunky-dory-pg\"",
      "  strategy = \"cluster\"",
      "}"
    ]
  },
  "aws-resource-proxy_protocol_policy": {
    "description": "Defines proxy_protocol_policy",
    "prefix": "tf-aws-resource-proxy_protocol_policy",
    "body": [
      "resource \"aws_elb\" \"lb\" {",
      "  name               = \"test-lb\"",
      "  availability_zones = [\"us-east-1a\"]",
      "",
      "  listener {",
      "    instance_port     = 25",
      "    instance_protocol = \"tcp\"",
      "    lb_port           = 25",
      "    lb_protocol       = \"tcp\"",
      "  }",
      "",
      "  listener {",
      "    instance_port     = 587",
      "    instance_protocol = \"tcp\"",
      "    lb_port           = 587",
      "    lb_protocol       = \"tcp\"",
      "  }",
      "}",
      "",
      "resource \"aws_proxy_protocol_policy\" \"smtp\" {",
      "  load_balancer  = \"${aws_elb.lb.name}\"",
      "  instance_ports = [\"25\", \"587\"]",
      "}"
    ]
  },
  "aws-resource-quicksight_group": {
    "description": "Defines quicksight_group",
    "prefix": "tf-aws-resource-quicksight_group",
    "body": [
      "resource \"aws_quicksight_group\" \"example\" {",
      "\tgroup_name = \"tf-example\"",
      "}"
    ]
  },
  "aws-resource-ram_principal_association": {
    "description": "Defines ram_principal_association",
    "prefix": "tf-aws-resource-ram_principal_association",
    "body": [
      "resource \"aws_ram_resource_share\" \"example\" {",
      "  # ... other configuration ...",
      "  allow_external_principals = true",
      "}",
      "",
      "resource \"aws_ram_principal_association\" \"example\" {",
      "  principal          = \"111111111111\"",
      "  resource_share_arn = \"${aws_ram_resource_share.example.arn}\"",
      "}"
    ]
  },
  "aws-resource-ram_resource_association": {
    "description": "Defines ram_resource_association",
    "prefix": "tf-aws-resource-ram_resource_association",
    "body": [
      "resource \"aws_ram_resource_association\" \"example\" {",
      "  resource_arn       = \"${aws_subnet.example.arn}\"",
      "  resource_share_arn = \"${aws_ram_resource_share.example.arn}\"",
      "}"
    ]
  },
  "aws-resource-ram_resource_share": {
    "description": "Defines ram_resource_share",
    "prefix": "tf-aws-resource-ram_resource_share",
    "body": [
      "resource \"aws_ram_resource_share\" \"example\" {",
      "  name                      = \"example\"",
      "  allow_external_principals = true",
      "",
      "  tags = {",
      "    Environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-rds_cluster": {
    "description": "Defines rds_cluster",
    "prefix": "tf-aws-resource-rds_cluster",
    "body": [
      "resource \"aws_rds_cluster\" \"default\" {",
      "  cluster_identifier      = \"aurora-cluster-demo\"",
      "  engine                  = \"aurora-mysql\"",
      "  engine_version          = \"5.7.mysql_aurora.2.03.2\"",
      "  availability_zones      = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]",
      "  database_name           = \"mydb\"",
      "  master_username         = \"foo\"",
      "  master_password         = \"bar\"",
      "  backup_retention_period = 5",
      "  preferred_backup_window = \"07:00-09:00\"",
      "}"
    ]
  },
  "aws-resource-rds_cluster_endpoint": {
    "description": "Defines rds_cluster_endpoint",
    "prefix": "tf-aws-resource-rds_cluster_endpoint",
    "body": [
      "resource \"aws_rds_cluster\" \"default\" {",
      "  cluster_identifier      = \"aurora-cluster-demo\"",
      "  availability_zones      = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]",
      "  database_name           = \"mydb\"",
      "  master_username         = \"foo\"",
      "  master_password         = \"bar\"",
      "  backup_retention_period = 5",
      "  preferred_backup_window = \"07:00-09:00\"",
      "}",
      "",
      "resource \"aws_rds_cluster_instance\" \"test1\" {",
      "  apply_immediately  = true",
      "  cluster_identifier = \"${aws_rds_cluster.default.id}\"",
      "  identifier         = \"test1\"",
      "  instance_class     = \"db.t2.small\"",
      "}",
      "",
      "resource \"aws_rds_cluster_instance\" \"test2\" {",
      "  apply_immediately  = true",
      "  cluster_identifier = \"${aws_rds_cluster.default.id}\"",
      "  identifier         = \"test2\"",
      "  instance_class     = \"db.t2.small\"",
      "}",
      "",
      "resource \"aws_rds_cluster_instance\" \"test3\" {",
      "  apply_immediately  = true",
      "  cluster_identifier = \"${aws_rds_cluster.default.id}\"",
      "  identifier         = \"test3\"",
      "  instance_class     = \"db.t2.small\"",
      "}",
      "",
      "resource \"aws_rds_cluster_endpoint\" \"eligible\" {",
      "  cluster_identifier          = \"${aws_rds_cluster.default.id}\"",
      "  cluster_endpoint_identifier = \"reader\"",
      "  custom_endpoint_type        = \"READER\"",
      "",
      "  excluded_members = [",
      "    \"${aws_rds_cluster_instance.test1.id}\",",
      "    \"${aws_rds_cluster_instance.test2.id}\",",
      "  ]",
      "}",
      "",
      "resource \"aws_rds_cluster_endpoint\" \"static\" {",
      "  cluster_identifier          = \"${aws_rds_cluster.default.id}\"",
      "  cluster_endpoint_identifier = \"static\"",
      "  custom_endpoint_type        = \"READER\"",
      "",
      "  static_members = [",
      "    \"${aws_rds_cluster_instance.test1.id}\",",
      "    \"${aws_rds_cluster_instance.test3.id}\",",
      "  ]",
      "}"
    ]
  },
  "aws-resource-rds_cluster_instance": {
    "description": "Defines rds_cluster_instance",
    "prefix": "tf-aws-resource-rds_cluster_instance",
    "body": [
      "resource \"aws_rds_cluster_instance\" \"cluster_instances\" {",
      "  count              = 2",
      "  identifier         = \"aurora-cluster-demo-${count.index}\"",
      "  cluster_identifier = \"${aws_rds_cluster.default.id}\"",
      "  instance_class     = \"db.r4.large\"",
      "}",
      "",
      "resource \"aws_rds_cluster\" \"default\" {",
      "  cluster_identifier = \"aurora-cluster-demo\"",
      "  availability_zones = [\"us-west-2a\", \"us-west-2b\", \"us-west-2c\"]",
      "  database_name      = \"mydb\"",
      "  master_username    = \"foo\"",
      "  master_password    = \"barbut8chars\"",
      "}"
    ]
  },
  "aws-resource-rds_cluster_parameter_group": {
    "description": "Defines rds_cluster_parameter_group",
    "prefix": "tf-aws-resource-rds_cluster_parameter_group",
    "body": [
      "resource \"aws_rds_cluster_parameter_group\" \"default\" {",
      "  name        = \"rds-cluster-pg\"",
      "  family      = \"aurora5.6\"",
      "  description = \"RDS default cluster parameter group\"",
      "",
      "  parameter {",
      "    name  = \"character_set_server\"",
      "    value = \"utf8\"",
      "  }",
      "",
      "  parameter {",
      "    name  = \"character_set_client\"",
      "    value = \"utf8\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-rds_global_cluster": {
    "description": "Defines rds_global_cluster",
    "prefix": "tf-aws-resource-rds_global_cluster",
    "body": [
      "provider \"aws\" {",
      "  alias  = \"primary\"",
      "  region = \"us-east-2\"",
      "}",
      "",
      "provider \"aws\" {",
      "  alias  = \"secondary\"",
      "  region = \"us-west-2\"",
      "}",
      "",
      "resource \"aws_rds_global_cluster\" \"example\" {",
      "  provider = \"aws.primary\"",
      "",
      "  global_cluster_identifier = \"example\"",
      "}",
      "",
      "resource \"aws_rds_cluster\" \"primary\" {",
      "  provider = \"aws.primary\"",
      "",
      "  # ... other configuration ...",
      "  engine_mode               = \"global\"",
      "  global_cluster_identifier = \"${aws_rds_global_cluster.example.id}\"",
      "}",
      "",
      "resource \"aws_rds_cluster_instance\" \"primary\" {",
      "  provider = \"aws.primary\"",
      "",
      "  # ... other configuration ...",
      "  cluster_identifier = \"${aws_rds_cluster.primary.id}\"",
      "}",
      "",
      "resource \"aws_rds_cluster\" \"secondary\" {",
      "  depends_on = [\"aws_rds_cluster_instance.primary\"]",
      "  provider   = \"aws.secondary\"",
      "",
      "  # ... other configuration ...",
      "  engine_mode               = \"global\"",
      "  global_cluster_identifier = \"${aws_rds_global_cluster.example.id}\"",
      "}",
      "",
      "resource \"aws_rds_cluster_instance\" \"secondary\" {",
      "  provider = \"aws.secondary\"",
      "",
      "  # ... other configuration ...",
      "  cluster_identifier = \"${aws_rds_cluster.secondary.id}\"",
      "}"
    ]
  },
  "aws-resource-redshift_cluster": {
    "description": "Defines redshift_cluster",
    "prefix": "tf-aws-resource-redshift_cluster",
    "body": [
      "resource \"aws_redshift_cluster\" \"default\" {",
      "  cluster_identifier = \"tf-redshift-cluster\"",
      "  database_name      = \"mydb\"",
      "  master_username    = \"foo\"",
      "  master_password    = \"Mustbe8characters\"",
      "  node_type          = \"dc1.large\"",
      "  cluster_type       = \"single-node\"",
      "}"
    ]
  },
  "aws-resource-redshift_event_subscription": {
    "description": "Defines redshift_event_subscription",
    "prefix": "tf-aws-resource-redshift_event_subscription",
    "body": [
      "resource \"aws_redshift_cluster\" \"default\" {",
      "  cluster_identifier = \"default\"",
      "  database_name      = \"default\"",
      "",
      "  # ...",
      "}",
      "",
      "resource \"aws_sns_topic\" \"default\" {",
      "  name = \"redshift-events\"",
      "}",
      "",
      "resource \"aws_redshift_event_subscription\" \"default\" {",
      "  name          = \"redshift-event-sub\"",
      "  sns_topic_arn = \"${aws_sns_topic.default.arn}\"",
      "",
      "  source_type = \"cluster\"",
      "  source_ids  = [\"${aws_redshift_cluster.default.id}\"]",
      "",
      "  severity = \"INFO\"",
      "",
      "  event_categories = [",
      "    \"configuration\",",
      "    \"management\",",
      "    \"monitoring\",",
      "    \"security\",",
      "  ]",
      "",
      "  tags = {",
      "    Name = \"default\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-redshift_parameter_group": {
    "description": "Defines redshift_parameter_group",
    "prefix": "tf-aws-resource-redshift_parameter_group",
    "body": [
      "resource \"aws_redshift_parameter_group\" \"bar\" {",
      "  name   = \"parameter-group-test-terraform\"",
      "  family = \"redshift-1.0\"",
      "",
      "  parameter {",
      "    name  = \"require_ssl\"",
      "    value = \"true\"",
      "  }",
      "",
      "  parameter {",
      "    name  = \"query_group\"",
      "    value = \"example\"",
      "  }",
      "",
      "  parameter {",
      "    name  = \"enable_user_activity_logging\"",
      "    value = \"true\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-redshift_security_group": {
    "description": "Defines redshift_security_group",
    "prefix": "tf-aws-resource-redshift_security_group",
    "body": [
      "resource \"aws_redshift_security_group\" \"default\" {",
      "  name = \"redshift-sg\"",
      "",
      "  ingress {",
      "    cidr = \"10.0.0.0/24\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-redshift_snapshot_copy_grant": {
    "description": "Defines redshift_snapshot_copy_grant",
    "prefix": "tf-aws-resource-redshift_snapshot_copy_grant",
    "body": [
      "resource \"aws_redshift_snapshot_copy_grant\" \"test\" {",
      "  snapshot_copy_grant_name = \"my-grant\"",
      "}",
      "",
      "resource \"aws_redshift_cluster\" \"test\" {",
      "  # ... other configuration ...",
      "  snapshot_copy {",
      "    destination_region = \"us-east-2\"",
      "    grant_name         = \"${aws_redshift_snapshot_copy_grant.test.snapshot_copy_grant_name}\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-redshift_subnet_group": {
    "description": "Defines redshift_subnet_group",
    "prefix": "tf-aws-resource-redshift_subnet_group",
    "body": [
      "resource \"aws_vpc\" \"foo\" {",
      "  cidr_block = \"10.1.0.0/16\"",
      "}",
      "",
      "resource \"aws_subnet\" \"foo\" {",
      "  cidr_block        = \"10.1.1.0/24\"",
      "  availability_zone = \"us-west-2a\"",
      "  vpc_id            = \"${aws_vpc.foo.id}\"",
      "",
      "  tags = {",
      "    Name = \"tf-dbsubnet-test-1\"",
      "  }",
      "}",
      "",
      "resource \"aws_subnet\" \"bar\" {",
      "  cidr_block        = \"10.1.2.0/24\"",
      "  availability_zone = \"us-west-2b\"",
      "  vpc_id            = \"${aws_vpc.foo.id}\"",
      "",
      "  tags = {",
      "    Name = \"tf-dbsubnet-test-2\"",
      "  }",
      "}",
      "",
      "resource \"aws_redshift_subnet_group\" \"foo\" {",
      "  name       = \"foo\"",
      "  subnet_ids = [\"${aws_subnet.foo.id}\", \"${aws_subnet.bar.id}\"]",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-resourcegroups_group": {
    "description": "Defines resourcegroups_group",
    "prefix": "tf-aws-resource-resourcegroups_group",
    "body": [
      "resource \"aws_resourcegroups_group\" \"test\" {",
      "  name = \"test-group\"",
      "",
      "  resource_query {",
      "    query = <<JSON",
      "{",
      "  \"ResourceTypeFilters\": [",
      "    \"AWS::EC2::Instance\"",
      "  ],",
      "  \"TagFilters\": [",
      "    {",
      "      \"Key\": \"Stage\",",
      "      \"Values\": [\"Test\"]",
      "    }",
      "  ]",
      "}",
      "JSON",
      "  }",
      "}"
    ]
  },
  "aws-resource-route": {
    "description": "Defines route",
    "prefix": "tf-aws-resource-route",
    "body": [
      "resource \"aws_route\" \"r\" {",
      "  route_table_id            = \"rtb-4fbb3ac4\"",
      "  destination_cidr_block    = \"10.0.1.0/22\"",
      "  vpc_peering_connection_id = \"pcx-45ff3dc1\"",
      "  depends_on                = [\"aws_route_table.testing\"]",
      "}"
    ]
  },
  "aws-resource-route53_delegation_set": {
    "description": "Defines route53_delegation_set",
    "prefix": "tf-aws-resource-route53_delegation_set",
    "body": [
      "resource \"aws_route53_delegation_set\" \"main\" {",
      "  reference_name = \"DynDNS\"",
      "}",
      "",
      "resource \"aws_route53_zone\" \"primary\" {",
      "  name              = \"hashicorp.com\"",
      "  delegation_set_id = \"${aws_route53_delegation_set.main.id}\"",
      "}",
      "",
      "resource \"aws_route53_zone\" \"secondary\" {",
      "  name              = \"terraform.io\"",
      "  delegation_set_id = \"${aws_route53_delegation_set.main.id}\"",
      "}"
    ]
  },
  "aws-resource-route53_health_check": {
    "description": "Defines route53_health_check",
    "prefix": "tf-aws-resource-route53_health_check",
    "body": [
      "resource \"aws_route53_health_check\" \"example\" {",
      "  fqdn              = \"example.com\"",
      "  port              = 80",
      "  type              = \"HTTP\"",
      "  resource_path     = \"/\"",
      "  failure_threshold = \"5\"",
      "  request_interval  = \"30\"",
      "",
      "  tags = {",
      "    Name = \"tf-test-health-check\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-route53_query_log": {
    "description": "Defines route53_query_log",
    "prefix": "tf-aws-resource-route53_query_log",
    "body": [
      "# Example CloudWatch log group in us-east-1",
      "",
      "provider \"aws\" {",
      "  alias  = \"us-east-1\"",
      "  region = \"us-east-1\"",
      "}",
      "",
      "resource \"aws_cloudwatch_log_group\" \"aws_route53_example_com\" {",
      "  provider = \"aws.us-east-1\"",
      "",
      "  name              = \"/aws/route53/${aws_route53_zone.example_com.name}\"",
      "  retention_in_days = 30",
      "}",
      "",
      "# Example CloudWatch log resource policy to allow Route53 to write logs",
      "# to any log group under /aws/route53/*",
      "",
      "data \"aws_iam_policy_document\" \"route53-query-logging-policy\" {",
      "  statement {",
      "    actions = [",
      "      \"logs:CreateLogStream\",",
      "      \"logs:PutLogEvents\",",
      "    ]",
      "",
      "    resources = [\"arn:aws:logs:*:*:log-group:/aws/route53/*\"]",
      "",
      "    principals {",
      "      identifiers = [\"route53.amazonaws.com\"]",
      "      type        = \"Service\"",
      "    }",
      "  }",
      "}",
      "",
      "resource \"aws_cloudwatch_log_resource_policy\" \"route53-query-logging-policy\" {",
      "  provider = \"aws.us-east-1\"",
      "",
      "  policy_document = \"${data.aws_iam_policy_document.route53-query-logging-policy.json}\"",
      "  policy_name     = \"route53-query-logging-policy\"",
      "}",
      "",
      "# Example Route53 zone with query logging",
      "",
      "resource \"aws_route53_zone\" \"example_com\" {",
      "  name = \"example.com\"",
      "}",
      "",
      "resource \"aws_route53_query_log\" \"example_com\" {",
      "  depends_on = [\"aws_cloudwatch_log_resource_policy.route53-query-logging-policy\"]",
      "",
      "  cloudwatch_log_group_arn = \"${aws_cloudwatch_log_group.aws_route53_example_com.arn}\"",
      "  zone_id                  = \"${aws_route53_zone.example_com.zone_id}\"",
      "}"
    ]
  },
  "aws-resource-route53_record": {
    "description": "Defines route53_record",
    "prefix": "tf-aws-resource-route53_record",
    "body": [
      "resource \"aws_route53_record\" \"www\" {",
      "  zone_id = \"${aws_route53_zone.primary.zone_id}\"",
      "  name    = \"www.example.com\"",
      "  type    = \"A\"",
      "  ttl     = \"300\"",
      "  records = [\"${aws_eip.lb.public_ip}\"]",
      "}"
    ]
  },
  "aws-resource-route53_resolver_endpoint": {
    "description": "Defines route53_resolver_endpoint",
    "prefix": "tf-aws-resource-route53_resolver_endpoint",
    "body": [
      "resource \"aws_route53_resolver_endpoint\" \"foo\" {",
      "  name      = \"foo\"",
      "  direction = \"INBOUND\"",
      "",
      "  security_group_ids = [",
      "    \"${aws_security_group.sg1.id}\",",
      "    \"${aws_security_group.sg2.id}\",",
      "  ]",
      "",
      "  ip_address {",
      "    subnet_id = \"${aws_subnet.sn1.id}\"",
      "  }",
      "",
      "  ip_address {",
      "    subnet_id = \"${aws_subnet.sn2.id}\"",
      "    ip        = \"10.0.64.4\"",
      "  }",
      "",
      "  tags {",
      "    Environment = \"Prod\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-route53_resolver_rule": {
    "description": "Defines route53_resolver_rule",
    "prefix": "tf-aws-resource-route53_resolver_rule",
    "body": [
      "resource \"aws_route53_resolver_rule\" \"sys\" {",
      "  domain_name = \"subdomain.example.com\"",
      "  rule_type   = \"SYSTEM\"",
      "}"
    ]
  },
  "aws-resource-route53_resolver_rule_association": {
    "description": "Defines route53_resolver_rule_association",
    "prefix": "tf-aws-resource-route53_resolver_rule_association",
    "body": [
      "resource \"aws_route53_resolver_rule_association\" \"example\" {",
      "  resolver_rule_id = \"${aws_route53_resolver_rule.sys.id}\"",
      "  vpc_id           = \"${aws_vpc.foo.id}\"",
      "}"
    ]
  },
  "aws-resource-route53_zone": {
    "description": "Defines route53_zone",
    "prefix": "tf-aws-resource-route53_zone",
    "body": [
      "resource \"aws_route53_zone\" \"primary\" {",
      "  name = \"example.com\"",
      "}"
    ]
  },
  "aws-resource-route53_zone_association": {
    "description": "Defines route53_zone_association",
    "prefix": "tf-aws-resource-route53_zone_association",
    "body": [
      "resource \"aws_vpc\" \"primary\" {",
      "  cidr_block           = \"10.6.0.0/16\"",
      "  enable_dns_hostnames = true",
      "  enable_dns_support   = true",
      "}",
      "",
      "resource \"aws_vpc\" \"secondary\" {",
      "  cidr_block           = \"10.7.0.0/16\"",
      "  enable_dns_hostnames = true",
      "  enable_dns_support   = true",
      "}",
      "",
      "resource \"aws_route53_zone\" \"example\" {",
      "  name = \"example.com\"",
      "",
      "  # NOTE: The aws_route53_zone vpc argument accepts multiple configuration",
      "  #       blocks. The below usage of the single vpc configuration, the",
      "  #       lifecycle configuration, and the aws_route53_zone_association",
      "  #       resource is for illustrative purposes (e.g. for a separate",
      "  #       cross-account authorization process, which is not shown here).",
      "  vpc {",
      "    vpc_id = \"${aws_vpc.primary.id}\"",
      "  }",
      "",
      "  lifecycle {",
      "    ignore_changes = [\"vpc\"]",
      "  }",
      "}",
      "",
      "resource \"aws_route53_zone_association\" \"secondary\" {",
      "  zone_id = \"${aws_route53_zone.example.zone_id}\"",
      "  vpc_id  = \"${aws_vpc.secondary.id}\"",
      "}"
    ]
  },
  "aws-resource-route_table": {
    "description": "Defines route_table",
    "prefix": "tf-aws-resource-route_table",
    "body": [
      "resource \"aws_route_table\" \"r\" {",
      "  vpc_id = \"${aws_vpc.default.id}\"",
      "",
      "  route {",
      "    cidr_block = \"10.0.1.0/24\"",
      "    gateway_id = \"${aws_internet_gateway.main.id}\"",
      "  }",
      "",
      "  route {",
      "    ipv6_cidr_block        = \"::/0\"",
      "    egress_only_gateway_id = \"${aws_egress_only_internet_gateway.foo.id}\"",
      "  }",
      "",
      "  tags = {",
      "    Name = \"main\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-route_table_association": {
    "description": "Defines route_table_association",
    "prefix": "tf-aws-resource-route_table_association",
    "body": [
      "resource \"aws_route_table_association\" \"a\" {",
      "  subnet_id      = \"${aws_subnet.foo.id}\"",
      "  route_table_id = \"${aws_route_table.bar.id}\"",
      "}"
    ]
  },
  "aws-resource-s3_account_public_access_block": {
    "description": "Defines s3_account_public_access_block",
    "prefix": "tf-aws-resource-s3_account_public_access_block",
    "body": [
      "resource \"aws_s3_account_public_access_block\" \"example\" {",
      "  block_public_acls   = true",
      "  block_public_policy = true",
      "}"
    ]
  },
  "aws-resource-s3_bucket": {
    "description": "Defines s3_bucket",
    "prefix": "tf-aws-resource-s3_bucket",
    "body": [
      "resource \"aws_s3_bucket\" \"b\" {",
      "  bucket = \"my-tf-test-bucket\"",
      "  acl    = \"private\"",
      "",
      "  tags = {",
      "    Name        = \"My bucket\"",
      "    Environment = \"Dev\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-s3_bucket_inventory": {
    "description": "Defines s3_bucket_inventory",
    "prefix": "tf-aws-resource-s3_bucket_inventory",
    "body": [
      "resource \"aws_s3_bucket\" \"test\" {",
      "  bucket = \"my-tf-test-bucket\"",
      "}",
      "",
      "resource \"aws_s3_bucket\" \"inventory\" {",
      "  bucket = \"my-tf-inventory-bucket\"",
      "}",
      "",
      "resource \"aws_s3_bucket_inventory\" \"test\" {",
      "  bucket = \"${aws_s3_bucket.test.id}\"",
      "  name   = \"EntireBucketDaily\"",
      "",
      "  included_object_versions = \"All\"",
      "",
      "  schedule {",
      "    frequency = \"Daily\"",
      "  }",
      "",
      "  destination {",
      "    bucket {",
      "      format     = \"ORC\"",
      "      bucket_arn = \"${aws_s3_bucket.inventory.arn}\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-s3_bucket_metric": {
    "description": "Defines s3_bucket_metric",
    "prefix": "tf-aws-resource-s3_bucket_metric",
    "body": [
      "resource \"aws_s3_bucket\" \"example\" {",
      "  bucket = \"example\"",
      "}",
      "",
      "resource \"aws_s3_bucket_metric\" \"example-entire-bucket\" {",
      "  bucket = \"${aws_s3_bucket.example.bucket}\"",
      "  name   = \"EntireBucket\"",
      "}"
    ]
  },
  "aws-resource-s3_bucket_notification": {
    "description": "Defines s3_bucket_notification",
    "prefix": "tf-aws-resource-s3_bucket_notification",
    "body": [
      "resource \"aws_sns_topic\" \"topic\" {",
      "  name = \"s3-event-notification-topic\"",
      "",
      "  policy = <<POLICY",
      "{",
      "    \"Version\":\"2012-10-17\",",
      "    \"Statement\":[{",
      "        \"Effect\": \"Allow\",",
      "        \"Principal\": {\"AWS\":\"*\"},",
      "        \"Action\": \"SNS:Publish\",",
      "        \"Resource\": \"arn:aws:sns:*:*:s3-event-notification-topic\",",
      "        \"Condition\":{",
      "            \"ArnLike\":{\"aws:SourceArn\":\"${aws_s3_bucket.bucket.arn}\"}",
      "        }",
      "    }]",
      "}",
      "POLICY",
      "}",
      "",
      "resource \"aws_s3_bucket\" \"bucket\" {",
      "  bucket = \"your_bucket_name\"",
      "}",
      "",
      "resource \"aws_s3_bucket_notification\" \"bucket_notification\" {",
      "  bucket = \"${aws_s3_bucket.bucket.id}\"",
      "",
      "  topic {",
      "    topic_arn     = \"${aws_sns_topic.topic.arn}\"",
      "    events        = [\"s3:ObjectCreated:*\"]",
      "    filter_suffix = \".log\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-s3_bucket_object": {
    "description": "Defines s3_bucket_object",
    "prefix": "tf-aws-resource-s3_bucket_object",
    "body": [
      "resource \"aws_s3_bucket_object\" \"object\" {",
      "  bucket = \"your_bucket_name\"",
      "  key    = \"new_object_key\"",
      "  source = \"path/to/file\"",
      "",
      "  # The filemd5() function is available in Terraform 0.11.12 and later",
      "  # For Terraform 0.11.11 and earlier, use the md5() function and the file() function:",
      "  # etag = \"${md5(file(\"path/to/file\"))}\"",
      "  etag = \"${filemd5(\"path/to/file\")}\"",
      "}"
    ]
  },
  "aws-resource-s3_bucket_policy": {
    "description": "Defines s3_bucket_policy",
    "prefix": "tf-aws-resource-s3_bucket_policy",
    "body": [
      "resource \"aws_s3_bucket\" \"b\" {",
      "  bucket = \"my_tf_test_bucket\"",
      "}",
      "",
      "resource \"aws_s3_bucket_policy\" \"b\" {",
      "  bucket = \"${aws_s3_bucket.b.id}\"",
      "",
      "  policy = <<POLICY",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Id\": \"MYBUCKETPOLICY\",",
      "  \"Statement\": [",
      "    {",
      "      \"Sid\": \"IPAllow\",",
      "      \"Effect\": \"Deny\",",
      "      \"Principal\": \"*\",",
      "      \"Action\": \"s3:*\",",
      "      \"Resource\": \"arn:aws:s3:::my_tf_test_bucket/*\",",
      "      \"Condition\": {",
      "         \"IpAddress\": {\"aws:SourceIp\": \"8.8.8.8/32\"}",
      "      }",
      "    }",
      "  ]",
      "}",
      "POLICY",
      "}"
    ]
  },
  "aws-resource-s3_bucket_public_access_block": {
    "description": "Defines s3_bucket_public_access_block",
    "prefix": "tf-aws-resource-s3_bucket_public_access_block",
    "body": [
      "resource \"aws_s3_bucket\" \"example\" {",
      "  bucket = \"example\"",
      "}",
      "",
      "resource \"aws_s3_bucket_public_access_block\" \"example\" {",
      "  bucket = \"${aws_s3_bucket.example.id}\"",
      "",
      "  block_public_acls   = true",
      "  block_public_policy = true",
      "}"
    ]
  },
  "aws-resource-sagemaker_endpoint": {
    "description": "Defines sagemaker_endpoint",
    "prefix": "tf-aws-resource-sagemaker_endpoint",
    "body": [
      "resource \"aws_sagemaker_endpoint\" \"e\" {",
      "  name                 = \"my-endpoint\"",
      "  endpoint_config_name = \"${aws_sagemaker_endpoint_configuration.ec.name}\"",
      "",
      "  tags = {",
      "    Name = \"foo\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-sagemaker_endpoint_configuration": {
    "description": "Defines sagemaker_endpoint_configuration",
    "prefix": "tf-aws-resource-sagemaker_endpoint_configuration",
    "body": [
      "resource \"aws_sagemaker_endpoint_configuration\" \"ec\" {",
      "  name = \"my-endpoint-config\"",
      "",
      "  production_variants {",
      "    variant_name           = \"variant-1\"",
      "    model_name             = \"${aws_sagemaker_model.m.name}\"",
      "    initial_instance_count = 1",
      "    instance_type          = \"ml.t2.medium\"",
      "  }",
      "",
      "  tags {",
      "    Name = \"foo\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-sagemaker_model": {
    "description": "Defines sagemaker_model",
    "prefix": "tf-aws-resource-sagemaker_model",
    "body": [
      "resource \"aws_sagemaker_model\" \"m\" {",
      "  name               = \"my-model\"",
      "  execution_role_arn = \"${aws_iam_role.foo.arn}\"",
      "",
      "  primary_container {",
      "    image = \"174872318107.dkr.ecr.us-west-2.amazonaws.com/kmeans:1\"",
      "  }",
      "}",
      "",
      "resource \"aws_iam_role\" \"r\" {",
      "  assume_role_policy = \"${data.aws_iam_policy_document.assume_role.json}\"",
      "}",
      "",
      "data \"aws_iam_policy_document\" \"assume_role\" {",
      "  statement {",
      "    actions = [\"sts:AssumeRole\"]",
      "",
      "    principals {",
      "      type        = \"Service\"",
      "      identifiers = [\"sagemaker.amazonaws.com\"]",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-sagemaker_notebook_instance": {
    "description": "Defines sagemaker_notebook_instance",
    "prefix": "tf-aws-resource-sagemaker_notebook_instance",
    "body": [
      "resource \"aws_sagemaker_notebook_instance\" \"ni\" {",
      "  name          = \"my-notebook-instance\"",
      "  role_arn      = \"${aws_iam_role.role.arn}\"",
      "  instance_type = \"ml.t2.medium\"",
      "",
      "  tags = {",
      "    Name = \"foo\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-sagemaker_notebook_instance_lifecycle_configuration": {
    "description": "Defines sagemaker_notebook_instance_lifecycle_configuration",
    "prefix": "tf-aws-resource-sagemaker_notebook_instance_lifecycle_configuration",
    "body": [
      "resource \"aws_sagemaker_notebook_instance_lifecycle_configuration\" \"lc\" {",
      "  name      = \"foo\"",
      "  on_create = \"${base64encode('echo foo')}\"",
      "  on_start  = \"${base64encode('echo bar')}\"",
      "}"
    ]
  },
  "aws-resource-secretsmanager_secret": {
    "description": "Defines secretsmanager_secret",
    "prefix": "tf-aws-resource-secretsmanager_secret",
    "body": [
      "resource \"aws_secretsmanager_secret\" \"example\" {",
      "  name = \"example\"",
      "}"
    ]
  },
  "aws-resource-secretsmanager_secret_version": {
    "description": "Defines secretsmanager_secret_version",
    "prefix": "tf-aws-resource-secretsmanager_secret_version",
    "body": [
      "resource \"aws_secretsmanager_secret_version\" \"example\" {",
      "  secret_id     = \"${aws_secretsmanager_secret.example.id}\"",
      "  secret_string = \"example-string-to-protect\"",
      "}"
    ]
  },
  "aws-resource-security_group": {
    "description": "Defines security_group",
    "prefix": "tf-aws-resource-security_group",
    "body": [
      "resource \"aws_security_group\" \"allow_tls\" {",
      "  name        = \"allow_tls\"",
      "  description = \"Allow TLS inbound traffic\"",
      "  vpc_id      = \"${aws_vpc.main.id}\"",
      "",
      "  ingress {",
      "    # TLS (change to whatever ports you need)",
      "    from_port   = 443",
      "    to_port     = 443",
      "    protocol    = \"-1\"",
      "    # Please restrict your ingress to only necessary IPs and ports.",
      "    # Opening to 0.0.0.0/0 can lead to security vulnerabilities.",
      "    cidr_blocks = # add a CIDR block here",
      "  }",
      "",
      "  egress {",
      "    from_port       = 0",
      "    to_port         = 0",
      "    protocol        = \"-1\"",
      "    cidr_blocks     = [\"0.0.0.0/0\"]",
      "    prefix_list_ids = [\"pl-12c4e678\"]",
      "  }",
      "}"
    ]
  },
  "aws-resource-security_group_rule": {
    "description": "Defines security_group_rule",
    "prefix": "tf-aws-resource-security_group_rule",
    "body": [
      "resource \"aws_security_group_rule\" \"allow_all\" {",
      "  type            = \"ingress\"",
      "  from_port       = 0",
      "  to_port         = 65535",
      "  protocol        = \"tcp\"",
      "  # Opening to 0.0.0.0/0 can lead to security vulnerabilities.",
      "  cidr_blocks = # add a CIDR block here",
      "  prefix_list_ids = [\"pl-12c4e678\"]",
      "",
      "  security_group_id = \"sg-123456\"",
      "}"
    ]
  },
  "aws-resource-securityhub_account": {
    "description": "Defines securityhub_account",
    "prefix": "tf-aws-resource-securityhub_account",
    "body": [
      "resource \"aws_securityhub_account\" \"example\" {}"
    ]
  },
  "aws-resource-securityhub_product_subscription": {
    "description": "Defines securityhub_product_subscription",
    "prefix": "tf-aws-resource-securityhub_product_subscription",
    "body": [
      "resource \"aws_securityhub_account\" \"example\" {}",
      "",
      "data \"aws_region\" \"current\" {}",
      "",
      "resource \"aws_securityhub_product_subscription\" \"example\" {",
      "  depends_on  = [\"aws_securityhub_account.example\"]",
      "  product_arn = \"arn:aws:securityhub:${data.aws_region.current.name}:733251395267:product/alertlogic/althreatmanagement\"",
      "}"
    ]
  },
  "aws-resource-securityhub_standards_subscription": {
    "description": "Defines securityhub_standards_subscription",
    "prefix": "tf-aws-resource-securityhub_standards_subscription",
    "body": [
      "resource \"aws_securityhub_account\" \"example\" {}",
      "",
      "resource \"aws_securityhub_standards_subscription\" \"example\" {",
      "  depends_on    = [\"aws_securityhub_account.example\"]",
      "  standards_arn = \"arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0\"",
      "}"
    ]
  },
  "aws-resource-service_discovery_http_namespace": {
    "description": "Defines service_discovery_http_namespace",
    "prefix": "tf-aws-resource-service_discovery_http_namespace",
    "body": [
      "resource \"aws_service_discovery_http_namespace\" \"example\" {",
      "  name        = \"development\"",
      "  description = \"example\"",
      "}"
    ]
  },
  "aws-resource-service_discovery_private_dns_namespace": {
    "description": "Defines service_discovery_private_dns_namespace",
    "prefix": "tf-aws-resource-service_discovery_private_dns_namespace",
    "body": [
      "resource \"aws_vpc\" \"example\" {",
      "  cidr_block = \"10.0.0.0/16\"",
      "}",
      "",
      "resource \"aws_service_discovery_private_dns_namespace\" \"example\" {",
      "  name        = \"hoge.example.local\"",
      "  description = \"example\"",
      "  vpc         = \"${aws_vpc.example.id}\"",
      "}"
    ]
  },
  "aws-resource-service_discovery_public_dns_namespace": {
    "description": "Defines service_discovery_public_dns_namespace",
    "prefix": "tf-aws-resource-service_discovery_public_dns_namespace",
    "body": [
      "resource \"aws_service_discovery_public_dns_namespace\" \"example\" {",
      "  name        = \"hoge.example.com\"",
      "  description = \"example\"",
      "}"
    ]
  },
  "aws-resource-service_discovery_service": {
    "description": "Defines service_discovery_service",
    "prefix": "tf-aws-resource-service_discovery_service",
    "body": [
      "resource \"aws_vpc\" \"example\" {",
      "  cidr_block           = \"10.0.0.0/16\"",
      "  enable_dns_support   = true",
      "  enable_dns_hostnames = true",
      "}",
      "",
      "resource \"aws_service_discovery_private_dns_namespace\" \"example\" {",
      "  name        = \"example.terraform.local\"",
      "  description = \"example\"",
      "  vpc         = \"${aws_vpc.example.id}\"",
      "}",
      "",
      "resource \"aws_service_discovery_service\" \"example\" {",
      "  name = \"example\"",
      "",
      "  dns_config {",
      "    namespace_id = \"${aws_service_discovery_private_dns_namespace.example.id}\"",
      "",
      "    dns_records {",
      "      ttl  = 10",
      "      type = \"A\"",
      "    }",
      "",
      "    routing_policy = \"MULTIVALUE\"",
      "  }",
      "",
      "  health_check_custom_config {",
      "    failure_threshold = 1",
      "  }",
      "}"
    ]
  },
  "aws-resource-servicecatalog_portfolio": {
    "description": "Defines servicecatalog_portfolio",
    "prefix": "tf-aws-resource-servicecatalog_portfolio",
    "body": [
      "resource \"aws_servicecatalog_portfolio\" \"portfolio\" {",
      "  name          = \"My App Portfolio\"",
      "  description   = \"List of my organizations apps\"",
      "  provider_name = \"Brett\"",
      "}"
    ]
  },
  "aws-resource-servicequotas_service_quota": {
    "description": "Defines servicequotas_service_quota",
    "prefix": "tf-aws-resource-servicequotas_service_quota",
    "body": [
      "resource \"aws_servicequotas_service_quota\" \"example\" {",
      "  quota_code   = \"L-F678F1CE\"",
      "  service_code = \"vpc\"",
      "  value        = 75",
      "}"
    ]
  },
  "aws-resource-ses_active_receipt_rule_set": {
    "description": "Defines ses_active_receipt_rule_set",
    "prefix": "tf-aws-resource-ses_active_receipt_rule_set",
    "body": [
      "resource \"aws_ses_active_receipt_rule_set\" \"main\" {",
      "  rule_set_name = \"primary-rules\"",
      "}"
    ]
  },
  "aws-resource-ses_configuration_set": {
    "description": "Defines ses_configuration_set",
    "prefix": "tf-aws-resource-ses_configuration_set",
    "body": [
      "resource \"aws_ses_configuration_set\" \"test\" {",
      "  name = \"some-configuration-set-test\"",
      "}"
    ]
  },
  "aws-resource-ses_domain_dkim": {
    "description": "Defines ses_domain_dkim",
    "prefix": "tf-aws-resource-ses_domain_dkim",
    "body": [
      "resource \"aws_ses_domain_identity\" \"example\" {",
      "  domain = \"example.com\"",
      "}",
      "",
      "resource \"aws_ses_domain_dkim\" \"example\" {",
      "  domain = \"${aws_ses_domain_identity.example.domain}\"",
      "}",
      "",
      "resource \"aws_route53_record\" \"example_amazonses_dkim_record\" {",
      "  count   = 3",
      "  zone_id = \"ABCDEFGHIJ123\"",
      "  name    = \"${element(aws_ses_domain_dkim.example.dkim_tokens, count.index)}._domainkey.example.com\"",
      "  type    = \"CNAME\"",
      "  ttl     = \"600\"",
      "  records = [\"${element(aws_ses_domain_dkim.example.dkim_tokens, count.index)}.dkim.amazonses.com\"]",
      "}"
    ]
  },
  "aws-resource-ses_domain_identity": {
    "description": "Defines ses_domain_identity",
    "prefix": "tf-aws-resource-ses_domain_identity",
    "body": [
      "resource \"aws_ses_domain_identity\" \"example\" {",
      "  domain = \"example.com\"",
      "}",
      "",
      "resource \"aws_route53_record\" \"example_amazonses_verification_record\" {",
      "  zone_id = \"ABCDEFGHIJ123\"",
      "  name    = \"_amazonses.example.com\"",
      "  type    = \"TXT\"",
      "  ttl     = \"600\"",
      "  records = [\"${aws_ses_domain_identity.example.verification_token}\"]",
      "}"
    ]
  },
  "aws-resource-ses_domain_identity_verification": {
    "description": "Defines ses_domain_identity_verification",
    "prefix": "tf-aws-resource-ses_domain_identity_verification",
    "body": [
      "resource \"aws_ses_domain_identity\" \"example\" {",
      "  domain = \"example.com\"",
      "}",
      "",
      "resource \"aws_route53_record\" \"example_amazonses_verification_record\" {",
      "  zone_id = \"${aws_route53_zone.example.zone_id}\"",
      "  name    = \"_amazonses.${aws_ses_domain_identity.example.id}\"",
      "  type    = \"TXT\"",
      "  ttl     = \"600\"",
      "  records = [\"${aws_ses_domain_identity.example.verification_token}\"]",
      "}",
      "",
      "resource \"aws_ses_domain_identity_verification\" \"example_verification\" {",
      "  domain = \"${aws_ses_domain_identity.example.id}\"",
      "",
      "  depends_on = [\"aws_route53_record.example_amazonses_verification_record\"]",
      "}"
    ]
  },
  "aws-resource-ses_domain_mail_from": {
    "description": "Defines ses_domain_mail_from",
    "prefix": "tf-aws-resource-ses_domain_mail_from",
    "body": [
      "resource \"aws_ses_domain_mail_from\" \"example\" {",
      "  domain           = \"${aws_ses_domain_identity.example.domain}\"",
      "  mail_from_domain = \"bounce.${aws_ses_domain_identity.example.domain}\"",
      "}",
      "",
      "# Example SES Domain Identity",
      "resource \"aws_ses_domain_identity\" \"example\" {",
      "  domain = \"example.com\"",
      "}",
      "",
      "# Example Route53 MX record",
      "resource \"aws_route53_record\" \"example_ses_domain_mail_from_mx\" {",
      "  zone_id = \"${aws_route53_zone.example.id}\"",
      "  name    = \"${aws_ses_domain_mail_from.example.mail_from_domain}\"",
      "  type    = \"MX\"",
      "  ttl     = \"600\"",
      "  records = [\"10 feedback-smtp.us-east-1.amazonses.com\"]           # Change to the region in which `aws_ses_domain_identity.example` is created",
      "}",
      "",
      "# Example Route53 TXT record for SPF",
      "resource \"aws_route53_record\" \"example_ses_domain_mail_from_txt\" {",
      "  zone_id = \"${aws_route53_zone.example.id}\"",
      "  name    = \"${aws_ses_domain_mail_from.example.mail_from_domain}\"",
      "  type    = \"TXT\"",
      "  ttl     = \"600\"",
      "  records = [\"v=spf1 include:amazonses.com -all\"]",
      "}"
    ]
  },
  "aws-resource-ses_email_identity": {
    "description": "Defines ses_email_identity",
    "prefix": "tf-aws-resource-ses_email_identity",
    "body": [
      "resource \"aws_ses_email_identity\" \"example\" {",
      "  email = \"email@example.com\"",
      "}"
    ]
  },
  "aws-resource-ses_event_destination": {
    "description": "Defines ses_event_destination",
    "prefix": "tf-aws-resource-ses_event_destination",
    "body": [
      "resource \"aws_ses_event_destination\" \"cloudwatch\" {",
      "  name                   = \"event-destination-cloudwatch\"",
      "  configuration_set_name = \"${aws_ses_configuration_set.example.name}\"",
      "  enabled                = true",
      "  matching_types         = [\"bounce\", \"send\"]",
      "",
      "  cloudwatch_destination = {",
      "    default_value  = \"default\"",
      "    dimension_name = \"dimension\"",
      "    value_source   = \"emailHeader\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-ses_identity_notification_topic": {
    "description": "Defines ses_identity_notification_topic",
    "prefix": "tf-aws-resource-ses_identity_notification_topic",
    "body": [
      "resource \"aws_ses_identity_notification_topic\" \"test\" {",
      "  topic_arn                = \"${aws_sns_topic.example.arn}\"",
      "  notification_type        = \"Bounce\"",
      "  identity                 = \"${aws_ses_domain_identity.example.domain}\"",
      "  include_original_headers = true",
      "}"
    ]
  },
  "aws-resource-ses_identity_policy": {
    "description": "Defines ses_identity_policy",
    "prefix": "tf-aws-resource-ses_identity_policy",
    "body": [
      "resource \"aws_ses_domain_identity\" \"example\" {",
      "  domain = \"example.com\"",
      "}",
      "",
      "data \"aws_iam_policy_document\" \"example\" {",
      "  statement {",
      "    actions   = [\"SES:SendEmail\", \"SES:SendRawEmail\"]",
      "    resources = [\"${aws_ses_domain_identity.test.arn}\"]",
      "",
      "    principals {",
      "      identifiers = [\"*\"]",
      "      type        = \"AWS\"",
      "    }",
      "  }",
      "}",
      "",
      "resource \"aws_ses_identity_policy\" \"example\" {",
      "  identity = \"${aws_ses_domain_identity.example.arn}\"",
      "  name     = \"example\"",
      "  policy   = \"${data.aws_iam_policy_document.example.json}\"",
      "}"
    ]
  },
  "aws-resource-ses_receipt_filter": {
    "description": "Defines ses_receipt_filter",
    "prefix": "tf-aws-resource-ses_receipt_filter",
    "body": [
      "resource \"aws_ses_receipt_filter\" \"filter\" {",
      "  name   = \"block-spammer\"",
      "  cidr   = \"10.10.10.10\"",
      "  policy = \"Block\"",
      "}"
    ]
  },
  "aws-resource-ses_receipt_rule": {
    "description": "Defines ses_receipt_rule",
    "prefix": "tf-aws-resource-ses_receipt_rule",
    "body": [
      "# Add a header to the email and store it in S3",
      "resource \"aws_ses_receipt_rule\" \"store\" {",
      "  name          = \"store\"",
      "  rule_set_name = \"default-rule-set\"",
      "  recipients    = [\"karen@example.com\"]",
      "  enabled       = true",
      "  scan_enabled  = true",
      "",
      "  add_header_action {",
      "    header_name  = \"Custom-Header\"",
      "    header_value = \"Added by SES\"",
      "    position     = 1",
      "  }",
      "",
      "  s3_action {",
      "    bucket_name = \"emails\"",
      "    position    = 2",
      "  }",
      "}"
    ]
  },
  "aws-resource-ses_receipt_rule_set": {
    "description": "Defines ses_receipt_rule_set",
    "prefix": "tf-aws-resource-ses_receipt_rule_set",
    "body": [
      "resource \"aws_ses_receipt_rule_set\" \"main\" {",
      "  rule_set_name = \"primary-rules\"",
      "}"
    ]
  },
  "aws-resource-ses_template": {
    "description": "Defines ses_template",
    "prefix": "tf-aws-resource-ses_template",
    "body": [
      "resource \"aws_ses_template\" \"MyTemplate\" {",
      "  name    = \"MyTemplate\"",
      "  subject = \"Greetings, {{name}}!\"",
      "  html    = \"<h1>Hello {{name}},</h1><p>Your favorite animal is {{favoriteanimal}}.</p>\"",
      "  text    = \"Hello {{name}},\\r\\nYour favorite animal is {{favoriteanimal}}.\"",
      "}"
    ]
  },
  "aws-resource-sfn_activity": {
    "description": "Defines sfn_activity",
    "prefix": "tf-aws-resource-sfn_activity",
    "body": [
      "resource \"aws_sfn_activity\" \"sfn_activity\" {",
      "  name = \"my-activity\"",
      "}"
    ]
  },
  "aws-resource-sfn_state_machine": {
    "description": "Defines sfn_state_machine",
    "prefix": "tf-aws-resource-sfn_state_machine",
    "body": [
      "# ...",
      "",
      "resource \"aws_sfn_state_machine\" \"sfn_state_machine\" {",
      "  name     = \"my-state-machine\"",
      "  role_arn = \"${aws_iam_role.iam_for_sfn.arn}\"",
      "",
      "  definition = <<EOF",
      "{",
      "  \"Comment\": \"A Hello World example of the Amazon States Language using an AWS Lambda Function\",",
      "  \"StartAt\": \"HelloWorld\",",
      "  \"States\": {",
      "    \"HelloWorld\": {",
      "      \"Type\": \"Task\",",
      "      \"Resource\": \"${aws_lambda_function.lambda.arn}\",",
      "      \"End\": true",
      "    }",
      "  }",
      "}",
      "EOF",
      "}"
    ]
  },
  "aws-resource-shield_protection": {
    "description": "Defines shield_protection",
    "prefix": "tf-aws-resource-shield_protection",
    "body": [
      "data \"aws_availability_zones\" \"available\" {}",
      "data \"aws_region\" \"current\" {}",
      "data \"aws_caller_identity\" \"current\" {}",
      "",
      "resource \"aws_eip\" \"foo\" {",
      "  vpc = true",
      "}",
      "",
      "resource \"aws_shield_protection\" \"foo\" {",
      "  name         = \"${var.name}\"",
      "  resource_arn = \"arn:aws:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:eip-allocation/${aws_eip.foo.id}\"",
      "}"
    ]
  },
  "aws-resource-simpledb_domain": {
    "description": "Defines simpledb_domain",
    "prefix": "tf-aws-resource-simpledb_domain",
    "body": [
      "resource \"aws_simpledb_domain\" \"users\" {",
      "  name = \"users\"",
      "}"
    ]
  },
  "aws-resource-snapshot_create_volume_permission": {
    "description": "Defines snapshot_create_volume_permission",
    "prefix": "tf-aws-resource-snapshot_create_volume_permission",
    "body": [
      "resource \"aws_snapshot_create_volume_permission\" \"example_perm\" {",
      "  snapshot_id = \"${aws_ebs_snapshot.example_snapshot.id}\"",
      "  account_id  = \"12345678\"",
      "}",
      "",
      "resource \"aws_ebs_volume\" \"example\" {",
      "  availability_zone = \"us-west-2a\"",
      "  size              = 40",
      "}",
      "",
      "resource \"aws_ebs_snapshot\" \"example_snapshot\" {",
      "  volume_id = \"${aws_ebs_volume.example.id}\"",
      "}"
    ]
  },
  "aws-resource-sns_platform_application": {
    "description": "Defines sns_platform_application",
    "prefix": "tf-aws-resource-sns_platform_application",
    "body": [
      "resource \"aws_sns_platform_application\" \"apns_application\" {",
      "  name                = \"apns_application\"",
      "  platform            = \"APNS\"",
      "  platform_credential = \"<APNS PRIVATE KEY>\"",
      "  platform_principal  = \"<APNS CERTIFICATE>\"",
      "}"
    ]
  },
  "aws-resource-sns_sms_preferences": {
    "description": "Defines sns_sms_preferences",
    "prefix": "tf-aws-resource-sns_sms_preferences",
    "body": [
      "resource \"aws_sns_sms_preferences\" \"update_sms_prefs\" {}"
    ]
  },
  "aws-resource-sns_topic": {
    "description": "Defines sns_topic",
    "prefix": "tf-aws-resource-sns_topic",
    "body": [
      "resource \"aws_sns_topic\" \"user_updates\" {",
      "  name = \"user-updates-topic\"",
      "}"
    ]
  },
  "aws-resource-sns_topic_policy": {
    "description": "Defines sns_topic_policy",
    "prefix": "tf-aws-resource-sns_topic_policy",
    "body": [
      "resource \"aws_sns_topic\" \"test\" {",
      "  name = \"my-topic-with-policy\"",
      "}",
      "",
      "resource \"aws_sns_topic_policy\" \"default\" {",
      "  arn = \"${aws_sns_topic.test.arn}\"",
      "",
      "  policy = \"${data.aws_iam_policy_document.sns-topic-policy.json}\"",
      "}",
      "",
      "data \"aws_iam_policy_document\" \"sns-topic-policy\" {",
      "  policy_id = \"__default_policy_ID\"",
      "",
      "  statement {",
      "    actions = [",
      "      \"SNS:Subscribe\",",
      "      \"SNS:SetTopicAttributes\",",
      "      \"SNS:RemovePermission\",",
      "      \"SNS:Receive\",",
      "      \"SNS:Publish\",",
      "      \"SNS:ListSubscriptionsByTopic\",",
      "      \"SNS:GetTopicAttributes\",",
      "      \"SNS:DeleteTopic\",",
      "      \"SNS:AddPermission\",",
      "    ]",
      "",
      "    condition {",
      "      test     = \"StringEquals\"",
      "      variable = \"AWS:SourceOwner\"",
      "",
      "      values = [",
      "        \"${var.account-id}\",",
      "      ]",
      "    }",
      "",
      "    effect = \"Allow\"",
      "",
      "    principals {",
      "      type        = \"AWS\"",
      "      identifiers = [\"*\"]",
      "    }",
      "",
      "    resources = [",
      "      \"${aws_sns_topic.test.arn}\",",
      "    ]",
      "",
      "    sid = \"__default_statement_ID\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-sns_topic_subscription": {
    "description": "Defines sns_topic_subscription",
    "prefix": "tf-aws-resource-sns_topic_subscription",
    "body": [
      "resource \"aws_sns_topic_subscription\" \"user_updates_sqs_target\" {",
      "  topic_arn = \"arn:aws:sns:us-west-2:432981146916:user-updates-topic\"",
      "  protocol  = \"sqs\"",
      "  endpoint  = \"arn:aws:sqs:us-west-2:432981146916:terraform-queue-too\"",
      "}"
    ]
  },
  "aws-resource-spot_datafeed_subscription": {
    "description": "Defines spot_datafeed_subscription",
    "prefix": "tf-aws-resource-spot_datafeed_subscription",
    "body": [
      "resource \"aws_s3_bucket\" \"default\" {",
      "  bucket = \"tf-spot-datafeed\"",
      "}",
      "",
      "resource \"aws_spot_datafeed_subscription\" \"default\" {",
      "  bucket = \"${aws_s3_bucket.default.bucket}\"",
      "  prefix = \"my_subdirectory\"",
      "}"
    ]
  },
  "aws-resource-spot_fleet_request": {
    "description": "Defines spot_fleet_request",
    "prefix": "tf-aws-resource-spot_fleet_request",
    "body": [
      "# Request a Spot fleet",
      "resource \"aws_spot_fleet_request\" \"cheap_compute\" {",
      "  iam_fleet_role      = \"arn:aws:iam::12345678:role/spot-fleet\"",
      "  spot_price          = \"0.03\"",
      "  allocation_strategy = \"diversified\"",
      "  target_capacity     = 6",
      "  valid_until         = \"2019-11-04T20:44:20Z\"",
      "",
      "  launch_specification {",
      "    instance_type            = \"m4.10xlarge\"",
      "    ami                      = \"ami-1234\"",
      "    spot_price               = \"2.793\"",
      "    placement_tenancy        = \"dedicated\"",
      "    iam_instance_profile_arn = \"${aws_iam_instance_profile.example.arn}\"",
      "  }",
      "",
      "  launch_specification {",
      "    instance_type            = \"m4.4xlarge\"",
      "    ami                      = \"ami-5678\"",
      "    key_name                 = \"my-key\"",
      "    spot_price               = \"1.117\"",
      "    iam_instance_profile_arn = \"${aws_iam_instance_profile.example.arn}\"",
      "    availability_zone        = \"us-west-1a\"",
      "    subnet_id                = \"subnet-1234\"",
      "    weighted_capacity        = 35",
      "",
      "    root_block_device {",
      "      volume_size = \"300\"",
      "      volume_type = \"gp2\"",
      "    }",
      "",
      "    tags = {",
      "      Name = \"spot-fleet-example\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-spot_instance_request": {
    "description": "Defines spot_instance_request",
    "prefix": "tf-aws-resource-spot_instance_request",
    "body": [
      "# Request a spot instance at $0.03",
      "resource \"aws_spot_instance_request\" \"cheap_worker\" {",
      "  ami           = \"ami-1234\"",
      "  spot_price    = \"0.03\"",
      "  instance_type = \"c4.xlarge\"",
      "",
      "  tags = {",
      "    Name = \"CheapWorker\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-sqs_queue": {
    "description": "Defines sqs_queue",
    "prefix": "tf-aws-resource-sqs_queue",
    "body": [
      "resource \"aws_sqs_queue\" \"terraform_queue\" {",
      "  name                      = \"terraform-example-queue\"",
      "  delay_seconds             = 90",
      "  max_message_size          = 2048",
      "  message_retention_seconds = 86400",
      "  receive_wait_time_seconds = 10",
      "  redrive_policy            = \"{\\\"deadLetterTargetArn\\\":\\\"${aws_sqs_queue.terraform_queue_deadletter.arn}\\\",\\\"maxReceiveCount\\\":4}\"",
      "",
      "  tags = {",
      "    Environment = \"production\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-sqs_queue_policy": {
    "description": "Defines sqs_queue_policy",
    "prefix": "tf-aws-resource-sqs_queue_policy",
    "body": [
      "resource \"aws_sqs_queue\" \"q\" {",
      "  name = \"examplequeue\"",
      "}",
      "",
      "resource \"aws_sqs_queue_policy\" \"test\" {",
      "  queue_url = \"${aws_sqs_queue.q.id}\"",
      "",
      "  policy = <<POLICY",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Id\": \"sqspolicy\",",
      "  \"Statement\": [",
      "    {",
      "      \"Sid\": \"First\",",
      "      \"Effect\": \"Allow\",",
      "      \"Principal\": \"*\",",
      "      \"Action\": \"sqs:SendMessage\",",
      "      \"Resource\": \"${aws_sqs_queue.q.arn}\",",
      "      \"Condition\": {",
      "        \"ArnEquals\": {",
      "          \"aws:SourceArn\": \"${aws_sns_topic.example.arn}\"",
      "        }",
      "      }",
      "    }",
      "  ]",
      "}",
      "POLICY",
      "}"
    ]
  },
  "aws-resource-ssm_activation": {
    "description": "Defines ssm_activation",
    "prefix": "tf-aws-resource-ssm_activation",
    "body": [
      "resource \"aws_iam_role\" \"test_role\" {",
      "  name = \"test_role\"",
      "",
      "  assume_role_policy = <<EOF",
      "  {",
      "    \"Version\": \"2012-10-17\",",
      "    \"Statement\": {",
      "      \"Effect\": \"Allow\",",
      "      \"Principal\": {\"Service\": \"ssm.amazonaws.com\"},",
      "      \"Action\": \"sts:AssumeRole\"",
      "    }",
      "  }",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_role_policy_attachment\" \"test_attach\" {",
      "  role       = \"${aws_iam_role.test_role.name}\"",
      "  policy_arn = \"arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM\"",
      "}",
      "",
      "resource \"aws_ssm_activation\" \"foo\" {",
      "  name               = \"test_ssm_activation\"",
      "  description        = \"Test\"",
      "  iam_role           = \"${aws_iam_role.test_role.id}\"",
      "  registration_limit = \"5\"",
      "  depends_on         = [\"aws_iam_role_policy_attachment.test_attach\"]",
      "}"
    ]
  },
  "aws-resource-ssm_association": {
    "description": "Defines ssm_association",
    "prefix": "tf-aws-resource-ssm_association",
    "body": [
      "resource \"aws_ssm_association\" \"example\" {",
      "  name = \"${aws_ssm_document.example.name}\"",
      "",
      "  targets {",
      "    key    = \"InstanceIds\"",
      "    values = \"${aws_instance.example.id}\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-ssm_document": {
    "description": "Defines ssm_document",
    "prefix": "tf-aws-resource-ssm_document",
    "body": [
      "resource \"aws_ssm_document\" \"foo\" {",
      "  name          = \"test_document\"",
      "  document_type = \"Command\"",
      "",
      "  content = <<DOC",
      "  {",
      "    \"schemaVersion\": \"1.2\",",
      "    \"description\": \"Check ip configuration of a Linux instance.\",",
      "    \"parameters\": {",
      "",
      "    },",
      "    \"runtimeConfig\": {",
      "      \"aws:runShellScript\": {",
      "        \"properties\": [",
      "          {",
      "            \"id\": \"0.aws:runShellScript\",",
      "            \"runCommand\": [\"ifconfig\"]",
      "          }",
      "        ]",
      "      }",
      "    }",
      "  }",
      "DOC",
      "}"
    ]
  },
  "aws-resource-ssm_maintenance_window": {
    "description": "Defines ssm_maintenance_window",
    "prefix": "tf-aws-resource-ssm_maintenance_window",
    "body": [
      "resource \"aws_ssm_maintenance_window\" \"production\" {",
      "  name     = \"maintenance-window-application\"",
      "  schedule = \"cron(0 16 ? * TUE *)\"",
      "  duration = 3",
      "  cutoff   = 1",
      "}"
    ]
  },
  "aws-resource-ssm_maintenance_window_target": {
    "description": "Defines ssm_maintenance_window_target",
    "prefix": "tf-aws-resource-ssm_maintenance_window_target",
    "body": [
      "resource \"aws_ssm_maintenance_window\" \"window\" {",
      "  name     = \"maintenance-window-webapp\"",
      "  schedule = \"cron(0 16 ? * TUE *)\"",
      "  duration = 3",
      "  cutoff   = 1",
      "}",
      "",
      "resource \"aws_ssm_maintenance_window_target\" \"target1\" {",
      "  window_id     = \"${aws_ssm_maintenance_window.window.id}\"",
      "  name          = \"maintenance-window-target\"",
      "  description   = \"This is a maintenance window target\"",
      "  resource_type = \"INSTANCE\"",
      "",
      "  targets {",
      "    key    = \"tag:Name\"",
      "    values = [\"acceptance_test\"]",
      "  }",
      "}"
    ]
  },
  "aws-resource-ssm_maintenance_window_task": {
    "description": "Defines ssm_maintenance_window_task",
    "prefix": "tf-aws-resource-ssm_maintenance_window_task",
    "body": [
      "resource \"aws_ssm_maintenance_window_task\" \"example\" {",
      "  max_concurrency  = 2",
      "  max_errors       = 1",
      "  priority         = 1",
      "  service_role_arn = \"${aws_iam_role.example.arn}\"",
      "  task_arn         = \"AWS-RestartEC2Instance\"",
      "  task_type        = \"AUTOMATION\"",
      "  window_id        = \"${aws_ssm_maintenance_window.example.id}\"",
      "",
      "  targets {",
      "    key    = \"InstanceIds\"",
      "    values = [\"${aws_instance.example.id}\"]",
      "  }",
      "",
      "  task_invocation_parameters {",
      "    automation_parameters {",
      "      document_version = \"$LATEST\"",
      "",
      "      parameter {",
      "        name   = \"InstanceId\"",
      "        values = [\"${aws_instance.example.id}\"]",
      "      }",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-ssm_parameter": {
    "description": "Defines ssm_parameter",
    "prefix": "tf-aws-resource-ssm_parameter",
    "body": [
      "resource \"aws_ssm_parameter\" \"foo\" {",
      "  name  = \"foo\"",
      "  type  = \"String\"",
      "  value = \"bar\"",
      "}"
    ]
  },
  "aws-resource-ssm_patch_baseline": {
    "description": "Defines ssm_patch_baseline",
    "prefix": "tf-aws-resource-ssm_patch_baseline",
    "body": [
      "resource \"aws_ssm_patch_baseline\" \"production\" {",
      "  name             = \"patch-baseline\"",
      "  approved_patches = [\"KB123456\"]",
      "}"
    ]
  },
  "aws-resource-ssm_patch_group": {
    "description": "Defines ssm_patch_group",
    "prefix": "tf-aws-resource-ssm_patch_group",
    "body": [
      "resource \"aws_ssm_patch_baseline\" \"production\" {",
      "  name             = \"patch-baseline\"",
      "  approved_patches = [\"KB123456\"]",
      "}",
      "",
      "resource \"aws_ssm_patch_group\" \"patchgroup\" {",
      "  baseline_id = \"${aws_ssm_patch_baseline.production.id}\"",
      "  patch_group = \"patch-group-name\"",
      "}"
    ]
  },
  "aws-resource-ssm_resource_data_sync": {
    "description": "Defines ssm_resource_data_sync",
    "prefix": "tf-aws-resource-ssm_resource_data_sync",
    "body": [
      "resource \"aws_s3_bucket\" \"hoge\" {",
      "  bucket = \"tf-test-bucket-1234\"",
      "  region = \"us-east-1\"",
      "}",
      "",
      "resource \"aws_s3_bucket_policy\" \"hoge\" {",
      "  bucket = \"${aws_s3_bucket.hoge.bucket}\"",
      "",
      "  policy = <<EOF",
      "{",
      "    \"Version\": \"2012-10-17\",",
      "    \"Statement\": [",
      "        {",
      "            \"Sid\": \"SSMBucketPermissionsCheck\",",
      "            \"Effect\": \"Allow\",",
      "            \"Principal\": {",
      "                \"Service\": \"ssm.amazonaws.com\"",
      "            },",
      "            \"Action\": \"s3:GetBucketAcl\",",
      "            \"Resource\": \"arn:aws:s3:::tf-test-bucket-1234\"",
      "        },",
      "        {",
      "            \"Sid\": \" SSMBucketDelivery\",",
      "            \"Effect\": \"Allow\",",
      "            \"Principal\": {",
      "                \"Service\": \"ssm.amazonaws.com\"",
      "            },",
      "            \"Action\": \"s3:PutObject\",",
      "            \"Resource\": [\"arn:aws:s3:::tf-test-bucket-1234/*\"],",
      "            \"Condition\": {",
      "                \"StringEquals\": {",
      "                    \"s3:x-amz-acl\": \"bucket-owner-full-control\"",
      "                }",
      "            }",
      "        }",
      "    ]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_ssm_resource_data_sync\" \"foo\" {",
      "  name = \"foo\"",
      "",
      "  s3_destination = {",
      "    bucket_name = \"${aws_s3_bucket.hoge.bucket}\"",
      "    region      = \"${aws_s3_bucket.hoge.region}\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-storagegateway_cache": {
    "description": "Defines storagegateway_cache",
    "prefix": "tf-aws-resource-storagegateway_cache",
    "body": [
      "resource \"aws_storagegateway_cache\" \"example\" {",
      "  disk_id     = \"${data.aws_storagegateway_local_disk.example.id}\"",
      "  gateway_arn = \"${aws_storagegateway_gateway.example.arn}\"",
      "}"
    ]
  },
  "aws-resource-storagegateway_cached_iscsi_volume": {
    "description": "Defines storagegateway_cached_iscsi_volume",
    "prefix": "tf-aws-resource-storagegateway_cached_iscsi_volume",
    "body": [
      "resource \"aws_storagegateway_cached_iscsi_volume\" \"example\" {",
      "  gateway_arn          = \"${aws_storagegateway_cache.example.gateway_arn}\"",
      "  network_interface_id = \"${aws_instance.example.private_ip}\"",
      "  target_name          = \"example\"",
      "  volume_size_in_bytes = 5368709120                                        # 5 GB",
      "}"
    ]
  },
  "aws-resource-storagegateway_gateway": {
    "description": "Defines storagegateway_gateway",
    "prefix": "tf-aws-resource-storagegateway_gateway",
    "body": [
      "resource \"aws_storagegateway_gateway\" \"example\" {",
      "  gateway_ip_address = \"1.2.3.4\"",
      "  gateway_name       = \"example\"",
      "  gateway_timezone   = \"GMT\"",
      "  gateway_type       = \"FILE_S3\"",
      "}"
    ]
  },
  "aws-resource-storagegateway_nfs_file_share": {
    "description": "Defines storagegateway_nfs_file_share",
    "prefix": "tf-aws-resource-storagegateway_nfs_file_share",
    "body": [
      "resource \"aws_storagegateway_nfs_file_share\" \"example\" {",
      "  client_list  = [\"0.0.0.0/0\"]",
      "  gateway_arn  = \"${aws_storagegateway_gateway.example.arn}\"",
      "  location_arn = \"${aws_s3_bucket.example.arn}\"",
      "  role_arn     = \"${aws_iam_role.example.arn}\"",
      "}"
    ]
  },
  "aws-resource-storagegateway_smb_file_share": {
    "description": "Defines storagegateway_smb_file_share",
    "prefix": "tf-aws-resource-storagegateway_smb_file_share",
    "body": [
      "resource \"aws_storagegateway_smb_file_share\" \"example\" {",
      "  authentication = \"ActiveDirectory\"",
      "  gateway_arn    = \"${aws_storagegateway_gateway.example.arn}\"",
      "  location_arn   = \"${aws_s3_bucket.example.arn}\"",
      "  role_arn       = \"${aws_iam_role.example.arn}\"",
      "}"
    ]
  },
  "aws-resource-storagegateway_upload_buffer": {
    "description": "Defines storagegateway_upload_buffer",
    "prefix": "tf-aws-resource-storagegateway_upload_buffer",
    "body": [
      "resource \"aws_storagegateway_upload_buffer\" \"example\" {",
      "  disk_id     = \"${data.aws_storagegateway_local_disk.example.id}\"",
      "  gateway_arn = \"${aws_storagegateway_gateway.example.arn}\"",
      "}"
    ]
  },
  "aws-resource-storagegateway_working_storage": {
    "description": "Defines storagegateway_working_storage",
    "prefix": "tf-aws-resource-storagegateway_working_storage",
    "body": [
      "resource \"aws_storagegateway_working_storage\" \"example\" {",
      "  disk_id     = \"${data.aws_storagegateway_local_disk.example.id}\"",
      "  gateway_arn = \"${aws_storagegateway_gateway.example.arn}\"",
      "}"
    ]
  },
  "aws-resource-subnet": {
    "description": "Defines subnet",
    "prefix": "tf-aws-resource-subnet",
    "body": [
      "resource \"aws_subnet\" \"main\" {",
      "  vpc_id     = \"${aws_vpc.main.id}\"",
      "  cidr_block = \"10.0.1.0/24\"",
      "",
      "  tags = {",
      "    Name = \"Main\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-swf_domain": {
    "description": "Defines swf_domain",
    "prefix": "tf-aws-resource-swf_domain",
    "body": [
      "resource \"aws_swf_domain\" \"foo\" {",
      "  name                                        = \"foo\"",
      "  description                                 = \"Terraform SWF Domain\"",
      "  workflow_execution_retention_period_in_days = 30",
      "}"
    ]
  },
  "aws-resource-transfer_server": {
    "description": "Defines transfer_server",
    "prefix": "tf-aws-resource-transfer_server",
    "body": [
      "resource \"aws_iam_role\" \"foo\" {",
      "  name = \"tf-test-transfer-server-iam-role\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "\t\"Version\": \"2012-10-17\",",
      "\t\"Statement\": [",
      "\t\t{",
      "\t\t\"Effect\": \"Allow\",",
      "\t\t\"Principal\": {",
      "\t\t\t\"Service\": \"transfer.amazonaws.com\"",
      "\t\t},",
      "\t\t\"Action\": \"sts:AssumeRole\"",
      "\t\t}",
      "\t]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_role_policy\" \"foo\" {",
      "  name = \"tf-test-transfer-server-iam-policy-%s\"",
      "  role = \"${aws_iam_role.foo.id}\"",
      "",
      "  policy = <<POLICY",
      "{",
      "\t\"Version\": \"2012-10-17\",",
      "\t\"Statement\": [",
      "\t\t{",
      "\t\t\"Sid\": \"AllowFullAccesstoCloudWatchLogs\",",
      "\t\t\"Effect\": \"Allow\",",
      "\t\t\"Action\": [",
      "\t\t\t\"logs:*\"",
      "\t\t],",
      "\t\t\"Resource\": \"*\"",
      "\t\t}",
      "\t]",
      "}",
      "POLICY",
      "}",
      "",
      "resource \"aws_transfer_server\" \"foo\" {",
      "  identity_provider_type = \"SERVICE_MANAGED\"",
      "  logging_role           = \"${aws_iam_role.foo.arn}\"",
      "",
      "  tags = {",
      "    NAME = \"tf-acc-test-transfer-server\"",
      "    ENV  = \"test\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-transfer_ssh_key": {
    "description": "Defines transfer_ssh_key",
    "prefix": "tf-aws-resource-transfer_ssh_key",
    "body": [
      "resource \"aws_transfer_server\" \"foo\" {",
      "  identity_provider_type = \"SERVICE_MANAGED\"",
      "",
      "  tags = {",
      "    NAME = \"tf-acc-test-transfer-server\"",
      "  }",
      "}",
      "",
      "resource \"aws_iam_role\" \"foo\" {",
      "  name = \"tf-test-transfer-user-iam-role-%s\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "\t\"Version\": \"2012-10-17\",",
      "\t\"Statement\": [",
      "\t\t{",
      "\t\t\"Effect\": \"Allow\",",
      "\t\t\"Principal\": {",
      "\t\t\t\"Service\": \"transfer.amazonaws.com\"",
      "\t\t},",
      "\t\t\"Action\": \"sts:AssumeRole\"",
      "\t\t}",
      "\t]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_role_policy\" \"foo\" {",
      "  name = \"tf-test-transfer-user-iam-policy-%s\"",
      "  role = \"${aws_iam_role.foo.id}\"",
      "",
      "  policy = <<POLICY",
      "{",
      "\t\"Version\": \"2012-10-17\",",
      "\t\"Statement\": [",
      "\t\t{",
      "\t\t\t\"Sid\": \"AllowFullAccesstoS3\",",
      "\t\t\t\"Effect\": \"Allow\",",
      "\t\t\t\"Action\": [",
      "\t\t\t\t\"s3:*\"",
      "\t\t\t],",
      "\t\t\t\"Resource\": \"*\"",
      "\t\t}",
      "\t]",
      "}",
      "POLICY",
      "}",
      "",
      "resource \"aws_transfer_user\" \"foo\" {",
      "  server_id = \"${aws_transfer_server.foo.id}\"",
      "  user_name = \"tftestuser\"",
      "  role      = \"${aws_iam_role.foo.arn}\"",
      "",
      "  tags = {",
      "    NAME = \"tftestuser\"",
      "  }",
      "}",
      "",
      "resource \"aws_transfer_ssh_key\" \"foo\" {",
      "  server_id = \"${aws_transfer_server.foo.id}\"",
      "  user_name = \"${aws_transfer_user.foo.user_name}\"",
      "  body      = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD3F6tyPEFEzV0LX3X8BsXdMsQz1x2cEikKDEY0aIj41qgxMCP/iteneqXSIFZBp5vizPvaoIR3Um9xK7PGoW8giupGn+EPuxIA4cDM4vzOqOkiMPhz5XK0whEjkVzTo4+S0puvDZuwIsdiW9mxhJc7tgBNL0cYlWSYVkz4G/fslNfRPW5mYAM49f4fhtxPb5ok4Q2Lg9dPKVHO/Bgeu5woMc7RY0p1ej6D4CKFE6lymSDJpW0YHX/wqE9+cfEauh7xZcG0q9t2ta6F6fmX0agvpFyZo8aFbXeUBr7osSCJNgvavWbM/06niWrOvYX2xwWdhXmXSrbX8ZbabVohBK41 example@example.com\"",
      "}"
    ]
  },
  "aws-resource-transfer_user": {
    "description": "Defines transfer_user",
    "prefix": "tf-aws-resource-transfer_user",
    "body": [
      "resource \"aws_transfer_server\" \"foo\" {",
      "  identity_provider_type = \"SERVICE_MANAGED\"",
      "",
      "  tags = {",
      "    NAME = \"tf-acc-test-transfer-server\"",
      "  }",
      "}",
      "",
      "resource \"aws_iam_role\" \"foo\" {",
      "  name = \"tf-test-transfer-user-iam-role\"",
      "",
      "  assume_role_policy = <<EOF",
      "{",
      "\t\"Version\": \"2012-10-17\",",
      "\t\"Statement\": [",
      "\t\t{",
      "\t\t\"Effect\": \"Allow\",",
      "\t\t\"Principal\": {",
      "\t\t\t\"Service\": \"transfer.amazonaws.com\"",
      "\t\t},",
      "\t\t\"Action\": \"sts:AssumeRole\"",
      "\t\t}",
      "\t]",
      "}",
      "EOF",
      "}",
      "",
      "resource \"aws_iam_role_policy\" \"foo\" {",
      "  name = \"tf-test-transfer-user-iam-policy\"",
      "  role = \"${aws_iam_role.foo.id}\"",
      "",
      "  policy = <<POLICY",
      "{",
      "\t\"Version\": \"2012-10-17\",",
      "\t\"Statement\": [",
      "\t\t{",
      "\t\t\t\"Sid\": \"AllowFullAccesstoS3\",",
      "\t\t\t\"Effect\": \"Allow\",",
      "\t\t\t\"Action\": [",
      "\t\t\t\t\"s3:*\"",
      "\t\t\t],",
      "\t\t\t\"Resource\": \"*\"",
      "\t\t}",
      "\t]",
      "}",
      "POLICY",
      "}",
      "",
      "resource \"aws_transfer_user\" \"foo\" {",
      "  server_id = \"${aws_transfer_server.foo.id}\"",
      "  user_name = \"tftestuser\"",
      "  role      = \"${aws_iam_role.foo.arn}\"",
      "}"
    ]
  },
  "aws-resource-volume_attachment": {
    "description": "Defines volume_attachment",
    "prefix": "tf-aws-resource-volume_attachment",
    "body": [
      "resource \"aws_volume_attachment\" \"ebs_att\" {",
      "  device_name = \"/dev/sdh\"",
      "  volume_id   = \"${aws_ebs_volume.example.id}\"",
      "  instance_id = \"${aws_instance.web.id}\"",
      "}",
      "",
      "resource \"aws_instance\" \"web\" {",
      "  ami               = \"ami-21f78e11\"",
      "  availability_zone = \"us-west-2a\"",
      "  instance_type     = \"t1.micro\"",
      "",
      "  tags = {",
      "    Name = \"HelloWorld\"",
      "  }",
      "}",
      "",
      "resource \"aws_ebs_volume\" \"example\" {",
      "  availability_zone = \"us-west-2a\"",
      "  size              = 1",
      "}"
    ]
  },
  "aws-resource-vpc": {
    "description": "Defines vpc",
    "prefix": "tf-aws-resource-vpc",
    "body": [
      "resource \"aws_vpc\" \"main\" {",
      "  cidr_block = \"10.0.0.0/16\"",
      "}"
    ]
  },
  "aws-resource-vpc_dhcp_options": {
    "description": "Defines vpc_dhcp_options",
    "prefix": "tf-aws-resource-vpc_dhcp_options",
    "body": [
      "resource \"aws_vpc_dhcp_options\" \"dns_resolver\" {",
      "  domain_name_servers = [\"8.8.8.8\", \"8.8.4.4\"]",
      "}"
    ]
  },
  "aws-resource-vpc_dhcp_options_association": {
    "description": "Defines vpc_dhcp_options_association",
    "prefix": "tf-aws-resource-vpc_dhcp_options_association",
    "body": [
      "resource \"aws_vpc_dhcp_options_association\" \"dns_resolver\" {",
      "  vpc_id          = \"${aws_vpc.foo.id}\"",
      "  dhcp_options_id = \"${aws_vpc_dhcp_options.foo.id}\"",
      "}"
    ]
  },
  "aws-resource-vpc_endpoint": {
    "description": "Defines vpc_endpoint",
    "prefix": "tf-aws-resource-vpc_endpoint",
    "body": [
      "resource \"aws_vpc_endpoint\" \"s3\" {",
      "  vpc_id       = \"${aws_vpc.main.id}\"",
      "  service_name = \"com.amazonaws.us-west-2.s3\"",
      "}"
    ]
  },
  "aws-resource-vpc_endpoint_connection_notification": {
    "description": "Defines vpc_endpoint_connection_notification",
    "prefix": "tf-aws-resource-vpc_endpoint_connection_notification",
    "body": [
      "resource \"aws_sns_topic\" \"topic\" {",
      "  name = \"vpce-notification-topic\"",
      "",
      "  policy = <<POLICY",
      "{",
      "    \"Version\":\"2012-10-17\",",
      "    \"Statement\":[{",
      "        \"Effect\": \"Allow\",",
      "        \"Principal\": {",
      "            \"Service\": \"vpce.amazonaws.com\"",
      "        },",
      "        \"Action\": \"SNS:Publish\",",
      "        \"Resource\": \"arn:aws:sns:*:*:vpce-notification-topic\"",
      "    }]",
      "}",
      "POLICY",
      "}",
      "",
      "resource \"aws_vpc_endpoint_service\" \"foo\" {",
      "  acceptance_required        = false",
      "  network_load_balancer_arns = [\"${aws_lb.test.arn}\"]",
      "}",
      "",
      "resource \"aws_vpc_endpoint_connection_notification\" \"foo\" {",
      "  vpc_endpoint_service_id     = \"${aws_vpc_endpoint_service.foo.id}\"",
      "  connection_notification_arn = \"${aws_sns_topic.topic.arn}\"",
      "  connection_events           = [\"Accept\", \"Reject\"]",
      "}"
    ]
  },
  "aws-resource-vpc_endpoint_route_table_association": {
    "description": "Defines vpc_endpoint_route_table_association",
    "prefix": "tf-aws-resource-vpc_endpoint_route_table_association",
    "body": [
      "resource \"aws_vpc_endpoint_route_table_association\" \"example\" {",
      "  route_table_id  = \"${aws_route_table.example.id}\"",
      "  vpc_endpoint_id = \"${aws_vpc_endpoint.example.id}\"",
      "}"
    ]
  },
  "aws-resource-vpc_endpoint_service": {
    "description": "Defines vpc_endpoint_service",
    "prefix": "tf-aws-resource-vpc_endpoint_service",
    "body": [
      "resource \"aws_vpc_endpoint_service\" \"example\" {",
      "  acceptance_required        = false",
      "  network_load_balancer_arns = [\"${aws_lb.example.arn}\"]",
      "}"
    ]
  },
  "aws-resource-vpc_endpoint_service_allowed_principal": {
    "description": "Defines vpc_endpoint_service_allowed_principal",
    "prefix": "tf-aws-resource-vpc_endpoint_service_allowed_principal",
    "body": [
      "data \"aws_caller_identity\" \"current\" {}",
      "",
      "resource \"aws_vpc_endpoint_service_allowed_principal\" \"allow_me_to_foo\" {",
      "  vpc_endpoint_service_id = \"${aws_vpc_endpoint_service.foo.id}\"",
      "  principal_arn           = \"${data.aws_caller_identity.current.arn}\"",
      "}"
    ]
  },
  "aws-resource-vpc_endpoint_subnet_association": {
    "description": "Defines vpc_endpoint_subnet_association",
    "prefix": "tf-aws-resource-vpc_endpoint_subnet_association",
    "body": [
      "resource \"aws_vpc_endpoint_subnet_association\" \"sn_ec2\" {",
      "  vpc_endpoint_id = \"${aws_vpc_endpoint.ec2.id}\"",
      "  subnet_id       = \"${aws_subnet.sn.id}\"",
      "}"
    ]
  },
  "aws-resource-vpc_ipv4_cidr_block_association": {
    "description": "Defines vpc_ipv4_cidr_block_association",
    "prefix": "tf-aws-resource-vpc_ipv4_cidr_block_association",
    "body": [
      "resource \"aws_vpc\" \"main\" {",
      "  cidr_block = \"10.0.0.0/16\"",
      "}",
      "",
      "resource \"aws_vpc_ipv4_cidr_block_association\" \"secondary_cidr\" {",
      "  vpc_id     = \"${aws_vpc.main.id}\"",
      "  cidr_block = \"172.2.0.0/16\"",
      "}"
    ]
  },
  "aws-resource-vpc_peering": {
    "description": "Defines vpc_peering",
    "prefix": "tf-aws-resource-vpc_peering",
    "body": [
      "resource \"aws_vpc_peering_connection\" \"foo\" {",
      "  peer_owner_id = \"${var.peer_owner_id}\"",
      "  peer_vpc_id   = \"${aws_vpc.bar.id}\"",
      "  vpc_id        = \"${aws_vpc.foo.id}\"",
      "}"
    ]
  },
  "aws-resource-vpc_peering_accepter": {
    "description": "Defines vpc_peering_accepter",
    "prefix": "tf-aws-resource-vpc_peering_accepter",
    "body": [
      "provider \"aws\" {",
      "  region = \"us-east-1\"",
      "",
      "  # Requester's credentials.",
      "}",
      "",
      "provider \"aws\" {",
      "  alias  = \"peer\"",
      "  region = \"us-west-2\"",
      "",
      "  # Accepter's credentials.",
      "}",
      "",
      "resource \"aws_vpc\" \"main\" {",
      "  cidr_block = \"10.0.0.0/16\"",
      "}",
      "",
      "resource \"aws_vpc\" \"peer\" {",
      "  provider   = \"aws.peer\"",
      "  cidr_block = \"10.1.0.0/16\"",
      "}",
      "",
      "data \"aws_caller_identity\" \"peer\" {",
      "  provider = \"aws.peer\"",
      "}",
      "",
      "# Requester's side of the connection.",
      "resource \"aws_vpc_peering_connection\" \"peer\" {",
      "  vpc_id        = \"${aws_vpc.main.id}\"",
      "  peer_vpc_id   = \"${aws_vpc.peer.id}\"",
      "  peer_owner_id = \"${data.aws_caller_identity.peer.account_id}\"",
      "  peer_region   = \"us-west-2\"",
      "  auto_accept   = false",
      "",
      "  tags = {",
      "    Side = \"Requester\"",
      "  }",
      "}",
      "",
      "# Accepter's side of the connection.",
      "resource \"aws_vpc_peering_connection_accepter\" \"peer\" {",
      "  provider                  = \"aws.peer\"",
      "  vpc_peering_connection_id = \"${aws_vpc_peering_connection.peer.id}\"",
      "  auto_accept               = true",
      "",
      "  tags = {",
      "    Side = \"Accepter\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-vpc_peering_options": {
    "description": "Defines vpc_peering_options",
    "prefix": "tf-aws-resource-vpc_peering_options",
    "body": [
      "resource \"aws_vpc\" \"foo\" {",
      "  cidr_block = \"10.0.0.0/16\"",
      "}",
      "",
      "resource \"aws_vpc\" \"bar\" {",
      "  cidr_block = \"10.1.0.0/16\"",
      "}",
      "",
      "resource \"aws_vpc_peering_connection\" \"foo\" {",
      "  vpc_id      = \"${aws_vpc.foo.id}\"",
      "  peer_vpc_id = \"${aws_vpc.bar.id}\"",
      "  auto_accept = true",
      "}",
      "",
      "resource \"aws_vpc_peering_connection_options\" \"foo\" {",
      "  vpc_peering_connection_id = \"${aws_vpc_peering_connection.foo.id}\"",
      "",
      "  accepter {",
      "    allow_remote_vpc_dns_resolution = true",
      "  }",
      "",
      "  requester {",
      "    allow_vpc_to_remote_classic_link = true",
      "    allow_classic_link_to_remote_vpc = true",
      "  }",
      "}"
    ]
  },
  "aws-resource-vpn_connection": {
    "description": "Defines vpn_connection",
    "prefix": "tf-aws-resource-vpn_connection",
    "body": [
      "resource \"aws_ec2_transit_gateway\" \"example\" {}",
      "",
      "resource \"aws_customer_gateway\" \"example\" {",
      "  bgp_asn    = 65000",
      "  ip_address = \"172.0.0.1\"",
      "  type       = \"ipsec.1\"",
      "}",
      "",
      "resource \"aws_vpn_connection\" \"example\" {",
      "  customer_gateway_id = \"${aws_customer_gateway.example.id}\"",
      "  transit_gateway_id  = \"${aws_ec2_transit_gateway.example.id}\"",
      "  type                = \"${aws_customer_gateway.example.type}\"",
      "}"
    ]
  },
  "aws-resource-vpn_connection_route": {
    "description": "Defines vpn_connection_route",
    "prefix": "tf-aws-resource-vpn_connection_route",
    "body": [
      "resource \"aws_vpc\" \"vpc\" {",
      "  cidr_block = \"10.0.0.0/16\"",
      "}",
      "",
      "resource \"aws_vpn_gateway\" \"vpn_gateway\" {",
      "  vpc_id = \"${aws_vpc.vpc.id}\"",
      "}",
      "",
      "resource \"aws_customer_gateway\" \"customer_gateway\" {",
      "  bgp_asn    = 65000",
      "  ip_address = \"172.0.0.1\"",
      "  type       = \"ipsec.1\"",
      "}",
      "",
      "resource \"aws_vpn_connection\" \"main\" {",
      "  vpn_gateway_id      = \"${aws_vpn_gateway.vpn_gateway.id}\"",
      "  customer_gateway_id = \"${aws_customer_gateway.customer_gateway.id}\"",
      "  type                = \"ipsec.1\"",
      "  static_routes_only  = true",
      "}",
      "",
      "resource \"aws_vpn_connection_route\" \"office\" {",
      "  destination_cidr_block = \"192.168.10.0/24\"",
      "  vpn_connection_id      = \"${aws_vpn_connection.main.id}\"",
      "}"
    ]
  },
  "aws-resource-vpn_gateway": {
    "description": "Defines vpn_gateway",
    "prefix": "tf-aws-resource-vpn_gateway",
    "body": [
      "resource \"aws_vpn_gateway\" \"vpn_gw\" {",
      "  vpc_id = \"${aws_vpc.main.id}\"",
      "",
      "  tags = {",
      "    Name = \"main\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-vpn_gateway_attachment": {
    "description": "Defines vpn_gateway_attachment",
    "prefix": "tf-aws-resource-vpn_gateway_attachment",
    "body": [
      "resource \"aws_vpc\" \"network\" {",
      "  cidr_block = \"10.0.0.0/16\"",
      "}",
      "",
      "resource \"aws_vpn_gateway\" \"vpn\" {",
      "  tags = {",
      "    Name = \"example-vpn-gateway\"",
      "  }",
      "}",
      "",
      "resource \"aws_vpn_gateway_attachment\" \"vpn_attachment\" {",
      "  vpc_id         = \"${aws_vpc.network.id}\"",
      "  vpn_gateway_id = \"${aws_vpn_gateway.vpn.id}\"",
      "}"
    ]
  },
  "aws-resource-vpn_gateway_route_propagation": {
    "description": "Defines vpn_gateway_route_propagation",
    "prefix": "tf-aws-resource-vpn_gateway_route_propagation",
    "body": [
      "resource \"aws_vpn_gateway_route_propagation\" \"example\" {",
      "  vpn_gateway_id = \"${aws_vpn_gateway.example.id}\"",
      "  route_table_id = \"${aws_route_table.example.id}\"",
      "}"
    ]
  },
  "aws-resource-waf_byte_match_set": {
    "description": "Defines waf_byte_match_set",
    "prefix": "tf-aws-resource-waf_byte_match_set",
    "body": [
      "resource \"aws_waf_byte_match_set\" \"byte_set\" {",
      "  name = \"tf_waf_byte_match_set\"",
      "",
      "  byte_match_tuples {",
      "    text_transformation   = \"NONE\"",
      "    target_string         = \"badrefer1\"",
      "    positional_constraint = \"CONTAINS\"",
      "",
      "    field_to_match {",
      "      type = \"HEADER\"",
      "      data = \"referer\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-waf_geo_match_set": {
    "description": "Defines waf_geo_match_set",
    "prefix": "tf-aws-resource-waf_geo_match_set",
    "body": [
      "resource \"aws_waf_geo_match_set\" \"geo_match_set\" {",
      "  name = \"geo_match_set\"",
      "",
      "  geo_match_constraint {",
      "    type  = \"Country\"",
      "    value = \"US\"",
      "  }",
      "",
      "  geo_match_constraint {",
      "    type  = \"Country\"",
      "    value = \"CA\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-waf_ipset": {
    "description": "Defines waf_ipset",
    "prefix": "tf-aws-resource-waf_ipset",
    "body": [
      "resource \"aws_waf_ipset\" \"ipset\" {",
      "  name = \"tfIPSet\"",
      "",
      "  ip_set_descriptors {",
      "    type  = \"IPV4\"",
      "    value = \"192.0.7.0/24\"",
      "  }",
      "",
      "  ip_set_descriptors {",
      "    type  = \"IPV4\"",
      "    value = \"10.16.16.0/16\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-waf_rate_based_rule": {
    "description": "Defines waf_rate_based_rule",
    "prefix": "tf-aws-resource-waf_rate_based_rule",
    "body": [
      "resource \"aws_waf_ipset\" \"ipset\" {",
      "  name = \"tfIPSet\"",
      "",
      "  ip_set_descriptors {",
      "    type  = \"IPV4\"",
      "    value = \"192.0.7.0/24\"",
      "  }",
      "}",
      "",
      "resource \"aws_waf_rate_based_rule\" \"wafrule\" {",
      "  depends_on  = [\"aws_waf_ipset.ipset\"]",
      "  name        = \"tfWAFRule\"",
      "  metric_name = \"tfWAFRule\"",
      "",
      "  rate_key   = \"IP\"",
      "  rate_limit = 2000",
      "",
      "  predicates {",
      "    data_id = \"${aws_waf_ipset.ipset.id}\"",
      "    negated = false",
      "    type    = \"IPMatch\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-waf_regex_match_set": {
    "description": "Defines waf_regex_match_set",
    "prefix": "tf-aws-resource-waf_regex_match_set",
    "body": [
      "resource \"aws_waf_regex_match_set\" \"example\" {",
      "  name = \"example\"",
      "",
      "  regex_match_tuple {",
      "    field_to_match {",
      "      data = \"User-Agent\"",
      "      type = \"HEADER\"",
      "    }",
      "",
      "    regex_pattern_set_id = \"${aws_waf_regex_pattern_set.example.id}\"",
      "    text_transformation  = \"NONE\"",
      "  }",
      "}",
      "",
      "resource \"aws_waf_regex_pattern_set\" \"example\" {",
      "  name                  = \"example\"",
      "  regex_pattern_strings = [\"one\", \"two\"]",
      "}"
    ]
  },
  "aws-resource-waf_regex_pattern_set": {
    "description": "Defines waf_regex_pattern_set",
    "prefix": "tf-aws-resource-waf_regex_pattern_set",
    "body": [
      "resource \"aws_waf_regex_pattern_set\" \"example\" {",
      "  name                  = \"tf_waf_regex_pattern_set\"",
      "  regex_pattern_strings = [\"one\", \"two\"]",
      "}"
    ]
  },
  "aws-resource-waf_rule": {
    "description": "Defines waf_rule",
    "prefix": "tf-aws-resource-waf_rule",
    "body": [
      "resource \"aws_waf_ipset\" \"ipset\" {",
      "  name = \"tfIPSet\"",
      "",
      "  ip_set_descriptors {",
      "    type  = \"IPV4\"",
      "    value = \"192.0.7.0/24\"",
      "  }",
      "}",
      "",
      "resource \"aws_waf_rule\" \"wafrule\" {",
      "  depends_on  = [\"aws_waf_ipset.ipset\"]",
      "  name        = \"tfWAFRule\"",
      "  metric_name = \"tfWAFRule\"",
      "",
      "  predicates {",
      "    data_id = \"${aws_waf_ipset.ipset.id}\"",
      "    negated = false",
      "    type    = \"IPMatch\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-waf_rule_group": {
    "description": "Defines waf_rule_group",
    "prefix": "tf-aws-resource-waf_rule_group",
    "body": [
      "resource \"aws_waf_rule\" \"example\" {",
      "  name        = \"example\"",
      "  metric_name = \"example\"",
      "}",
      "",
      "resource \"aws_waf_rule_group\" \"example\" {",
      "  name        = \"example\"",
      "  metric_name = \"example\"",
      "",
      "  activated_rule {",
      "    action {",
      "      type = \"COUNT\"",
      "    }",
      "",
      "    priority = 50",
      "    rule_id  = \"${aws_waf_rule.example.id}\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-waf_size_constraint_set": {
    "description": "Defines waf_size_constraint_set",
    "prefix": "tf-aws-resource-waf_size_constraint_set",
    "body": [
      "resource \"aws_waf_size_constraint_set\" \"size_constraint_set\" {",
      "  name = \"tfsize_constraints\"",
      "",
      "  size_constraints {",
      "    text_transformation = \"NONE\"",
      "    comparison_operator = \"EQ\"",
      "    size                = \"4096\"",
      "",
      "    field_to_match {",
      "      type = \"BODY\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-waf_sql_injection_match_set": {
    "description": "Defines waf_sql_injection_match_set",
    "prefix": "tf-aws-resource-waf_sql_injection_match_set",
    "body": [
      "resource \"aws_waf_sql_injection_match_set\" \"sql_injection_match_set\" {",
      "  name = \"tf-sql_injection_match_set\"",
      "",
      "  sql_injection_match_tuples {",
      "    text_transformation = \"URL_DECODE\"",
      "",
      "    field_to_match {",
      "      type = \"QUERY_STRING\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-waf_web_acl": {
    "description": "Defines waf_web_acl",
    "prefix": "tf-aws-resource-waf_web_acl",
    "body": [
      "resource \"aws_waf_ipset\" \"ipset\" {",
      "  name = \"tfIPSet\"",
      "",
      "  ip_set_descriptors {",
      "    type  = \"IPV4\"",
      "    value = \"192.0.7.0/24\"",
      "  }",
      "}",
      "",
      "resource \"aws_waf_rule\" \"wafrule\" {",
      "  depends_on  = [\"aws_waf_ipset.ipset\"]",
      "  name        = \"tfWAFRule\"",
      "  metric_name = \"tfWAFRule\"",
      "",
      "  predicates {",
      "    data_id = \"${aws_waf_ipset.ipset.id}\"",
      "    negated = false",
      "    type    = \"IPMatch\"",
      "  }",
      "}",
      "",
      "resource \"aws_waf_web_acl\" \"waf_acl\" {",
      "  depends_on  = [\"aws_waf_ipset.ipset\", \"aws_waf_rule.wafrule\"]",
      "  name        = \"tfWebACL\"",
      "  metric_name = \"tfWebACL\"",
      "",
      "  default_action {",
      "    type = \"ALLOW\"",
      "  }",
      "",
      "  rules {",
      "    action {",
      "      type = \"BLOCK\"",
      "    }",
      "",
      "    priority = 1",
      "    rule_id  = \"${aws_waf_rule.wafrule.id}\"",
      "    type     = \"REGULAR\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-waf_xss_match_set": {
    "description": "Defines waf_xss_match_set",
    "prefix": "tf-aws-resource-waf_xss_match_set",
    "body": [
      "resource \"aws_waf_xss_match_set\" \"xss_match_set\" {",
      "  name = \"xss_match_set\"",
      "",
      "  xss_match_tuples {",
      "    text_transformation = \"NONE\"",
      "",
      "    field_to_match {",
      "      type = \"URI\"",
      "    }",
      "  }",
      "",
      "  xss_match_tuples {",
      "    text_transformation = \"NONE\"",
      "",
      "    field_to_match {",
      "      type = \"QUERY_STRING\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-wafregional_byte_match_set": {
    "description": "Defines wafregional_byte_match_set",
    "prefix": "tf-aws-resource-wafregional_byte_match_set",
    "body": [
      "resource \"aws_wafregional_byte_match_set\" \"byte_set\" {",
      "  name = \"tf_waf_byte_match_set\"",
      "",
      "  byte_match_tuples {",
      "    text_transformation   = \"NONE\"",
      "    target_string         = \"badrefer1\"",
      "    positional_constraint = \"CONTAINS\"",
      "",
      "    field_to_match {",
      "      type = \"HEADER\"",
      "      data = \"referer\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-wafregional_geo_match_set": {
    "description": "Defines wafregional_geo_match_set",
    "prefix": "tf-aws-resource-wafregional_geo_match_set",
    "body": [
      "resource \"aws_wafregional_geo_match_set\" \"geo_match_set\" {",
      "  name = \"geo_match_set\"",
      "",
      "  geo_match_constraint {",
      "    type  = \"Country\"",
      "    value = \"US\"",
      "  }",
      "",
      "  geo_match_constraint {",
      "    type  = \"Country\"",
      "    value = \"CA\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-wafregional_ipset": {
    "description": "Defines wafregional_ipset",
    "prefix": "tf-aws-resource-wafregional_ipset",
    "body": [
      "resource \"aws_wafregional_ipset\" \"ipset\" {",
      "  name = \"tfIPSet\"",
      "",
      "  ip_set_descriptor {",
      "    type  = \"IPV4\"",
      "    value = \"192.0.7.0/24\"",
      "  }",
      "",
      "  ip_set_descriptor {",
      "    type  = \"IPV4\"",
      "    value = \"10.16.16.0/16\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-wafregional_rate_based_rule": {
    "description": "Defines wafregional_rate_based_rule",
    "prefix": "tf-aws-resource-wafregional_rate_based_rule",
    "body": [
      "resource \"aws_wafregional_ipset\" \"ipset\" {",
      "  name = \"tfIPSet\"",
      "",
      "  ip_set_descriptors {",
      "    type  = \"IPV4\"",
      "    value = \"192.0.7.0/24\"",
      "  }",
      "}",
      "",
      "resource \"aws_wafregional_rate_based_rule\" \"wafrule\" {",
      "  depends_on  = [\"aws_wafregional_ipset.ipset\"]",
      "  name        = \"tfWAFRule\"",
      "  metric_name = \"tfWAFRule\"",
      "",
      "  rate_key   = \"IP\"",
      "  rate_limit = 2000",
      "",
      "  predicate {",
      "    data_id = \"${aws_wafregional_ipset.ipset.id}\"",
      "    negated = false",
      "    type    = \"IPMatch\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-wafregional_regex_match_set": {
    "description": "Defines wafregional_regex_match_set",
    "prefix": "tf-aws-resource-wafregional_regex_match_set",
    "body": [
      "resource \"aws_wafregional_regex_match_set\" \"example\" {",
      "  name = \"example\"",
      "",
      "  regex_match_tuple {",
      "    field_to_match {",
      "      data = \"User-Agent\"",
      "      type = \"HEADER\"",
      "    }",
      "",
      "    regex_pattern_set_id = \"${aws_wafregional_regex_pattern_set.example.id}\"",
      "    text_transformation  = \"NONE\"",
      "  }",
      "}",
      "",
      "resource \"aws_wafregional_regex_pattern_set\" \"example\" {",
      "  name                  = \"example\"",
      "  regex_pattern_strings = [\"one\", \"two\"]",
      "}"
    ]
  },
  "aws-resource-wafregional_regex_pattern_set": {
    "description": "Defines wafregional_regex_pattern_set",
    "prefix": "tf-aws-resource-wafregional_regex_pattern_set",
    "body": [
      "resource \"aws_wafregional_regex_pattern_set\" \"example\" {",
      "  name                  = \"example\"",
      "  regex_pattern_strings = [\"one\", \"two\"]",
      "}"
    ]
  },
  "aws-resource-wafregional_rule": {
    "description": "Defines wafregional_rule",
    "prefix": "tf-aws-resource-wafregional_rule",
    "body": [
      "resource \"aws_wafregional_ipset\" \"ipset\" {",
      "  name = \"tfIPSet\"",
      "",
      "  ip_set_descriptor {",
      "    type  = \"IPV4\"",
      "    value = \"192.0.7.0/24\"",
      "  }",
      "}",
      "",
      "resource \"aws_wafregional_rule\" \"wafrule\" {",
      "  name        = \"tfWAFRule\"",
      "  metric_name = \"tfWAFRule\"",
      "",
      "  predicate {",
      "    type    = \"IPMatch\"",
      "    data_id = \"${aws_wafregional_ipset.ipset.id}\"",
      "    negated = false",
      "  }",
      "}"
    ]
  },
  "aws-resource-wafregional_rule_group": {
    "description": "Defines wafregional_rule_group",
    "prefix": "tf-aws-resource-wafregional_rule_group",
    "body": [
      "resource \"aws_wafregional_rule\" \"example\" {",
      "  name        = \"example\"",
      "  metric_name = \"example\"",
      "}",
      "",
      "resource \"aws_wafregional_rule_group\" \"example\" {",
      "  name        = \"example\"",
      "  metric_name = \"example\"",
      "",
      "  activated_rule {",
      "    action {",
      "      type = \"COUNT\"",
      "    }",
      "",
      "    priority = 50",
      "    rule_id  = \"${aws_wafregional_rule.example.id}\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-wafregional_size_constraint_set": {
    "description": "Defines wafregional_size_constraint_set",
    "prefix": "tf-aws-resource-wafregional_size_constraint_set",
    "body": [
      "resource \"aws_wafregional_size_constraint_set\" \"size_constraint_set\" {",
      "  name = \"tfsize_constraints\"",
      "",
      "  size_constraints {",
      "    text_transformation = \"NONE\"",
      "    comparison_operator = \"EQ\"",
      "    size                = \"4096\"",
      "",
      "    field_to_match {",
      "      type = \"BODY\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-wafregional_sql_injection_match_set": {
    "description": "Defines wafregional_sql_injection_match_set",
    "prefix": "tf-aws-resource-wafregional_sql_injection_match_set",
    "body": [
      "resource \"aws_wafregional_sql_injection_match_set\" \"sql_injection_match_set\" {",
      "  name = \"tf-sql_injection_match_set\"",
      "",
      "  sql_injection_match_tuple {",
      "    text_transformation = \"URL_DECODE\"",
      "",
      "    field_to_match {",
      "      type = \"QUERY_STRING\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-wafregional_web_acl": {
    "description": "Defines wafregional_web_acl",
    "prefix": "tf-aws-resource-wafregional_web_acl",
    "body": [
      "resource \"aws_wafregional_ipset\" \"ipset\" {",
      "  name = \"tfIPSet\"",
      "",
      "  ip_set_descriptor {",
      "    type  = \"IPV4\"",
      "    value = \"192.0.7.0/24\"",
      "  }",
      "}",
      "",
      "resource \"aws_wafregional_rule\" \"wafrule\" {",
      "  name        = \"tfWAFRule\"",
      "  metric_name = \"tfWAFRule\"",
      "",
      "  predicate {",
      "    data_id = \"${aws_wafregional_ipset.ipset.id}\"",
      "    negated = false",
      "    type    = \"IPMatch\"",
      "  }",
      "}",
      "",
      "resource \"aws_wafregional_web_acl\" \"wafacl\" {",
      "  name        = \"tfWebACL\"",
      "  metric_name = \"tfWebACL\"",
      "",
      "  default_action {",
      "    type = \"ALLOW\"",
      "  }",
      "",
      "  rule {",
      "    action {",
      "      type = \"BLOCK\"",
      "    }",
      "",
      "    priority = 1",
      "    rule_id  = \"${aws_wafregional_rule.wafrule.id}\"",
      "    type     = \"REGULAR\"",
      "  }",
      "}"
    ]
  },
  "aws-resource-wafregional_web_acl_association": {
    "description": "Defines wafregional_web_acl_association",
    "prefix": "tf-aws-resource-wafregional_web_acl_association",
    "body": [
      "resource \"aws_wafregional_ipset\" \"ipset\" {",
      "  name = \"tfIPSet\"",
      "",
      "  ip_set_descriptor {",
      "    type  = \"IPV4\"",
      "    value = \"192.0.7.0/24\"",
      "  }",
      "}",
      "",
      "resource \"aws_wafregional_rule\" \"foo\" {",
      "  name        = \"tfWAFRule\"",
      "  metric_name = \"tfWAFRule\"",
      "",
      "  predicate {",
      "    data_id = \"${aws_wafregional_ipset.ipset.id}\"",
      "    negated = false",
      "    type    = \"IPMatch\"",
      "  }",
      "}",
      "",
      "resource \"aws_wafregional_web_acl\" \"foo\" {",
      "  name        = \"foo\"",
      "  metric_name = \"foo\"",
      "",
      "  default_action {",
      "    type = \"ALLOW\"",
      "  }",
      "",
      "  rule {",
      "    action {",
      "      type = \"BLOCK\"",
      "    }",
      "",
      "    priority = 1",
      "    rule_id  = \"${aws_wafregional_rule.foo.id}\"",
      "  }",
      "}",
      "",
      "resource \"aws_vpc\" \"foo\" {",
      "  cidr_block = \"10.1.0.0/16\"",
      "}",
      "",
      "data \"aws_availability_zones\" \"available\" {}",
      "",
      "resource \"aws_subnet\" \"foo\" {",
      "  vpc_id            = \"${aws_vpc.foo.id}\"",
      "  cidr_block        = \"10.1.1.0/24\"",
      "  availability_zone = \"${data.aws_availability_zones.available.names[0]}\"",
      "}",
      "",
      "resource \"aws_subnet\" \"bar\" {",
      "  vpc_id            = \"${aws_vpc.foo.id}\"",
      "  cidr_block        = \"10.1.2.0/24\"",
      "  availability_zone = \"${data.aws_availability_zones.available.names[1]}\"",
      "}",
      "",
      "resource \"aws_alb\" \"foo\" {",
      "  internal = true",
      "  subnets  = [\"${aws_subnet.foo.id}\", \"${aws_subnet.bar.id}\"]",
      "}",
      "",
      "resource \"aws_wafregional_web_acl_association\" \"foo\" {",
      "  resource_arn = \"${aws_alb.foo.arn}\"",
      "  web_acl_id   = \"${aws_wafregional_web_acl.foo.id}\"",
      "}"
    ]
  },
  "aws-resource-wafregional_xss_match_set": {
    "description": "Defines wafregional_xss_match_set",
    "prefix": "tf-aws-resource-wafregional_xss_match_set",
    "body": [
      "resource \"aws_wafregional_xss_match_set\" \"xss_match_set\" {",
      "  name = \"xss_match_set\"",
      "",
      "  xss_match_tuple {",
      "    text_transformation = \"NONE\"",
      "",
      "    field_to_match {",
      "      type = \"URI\"",
      "    }",
      "  }",
      "",
      "  xss_match_tuple {",
      "    text_transformation = \"NONE\"",
      "",
      "    field_to_match {",
      "      type = \"QUERY_STRING\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "aws-resource-worklink_fleet": {
    "description": "Defines worklink_fleet",
    "prefix": "tf-aws-resource-worklink_fleet",
    "body": [
      "resource \"aws_worklink_fleet\" \"example\" {",
      "  name = \"terraform-example\"",
      "}"
    ]
  },
  "aws-resource-worklink_website_certificate_authority_association": {
    "description": "Defines worklink_website_certificate_authority_association",
    "prefix": "tf-aws-resource-worklink_website_certificate_authority_association",
    "body": [
      "resource \"aws_worklink_fleet\" \"example\" {",
      "  name = \"terraform-example\"",
      "}",
      "",
      "resource \"aws_worklink_website_certificate_authority_association\" \"test\" {",
      "  fleet_arn   = \"${aws_worklink_fleet.test.arn}\"",
      "  certificate = \"${file(\"certificate.pem\")}\"",
      "}"
    ]
  },
  "aws-resource-xray_sampling_rule": {
    "description": "Defines xray_sampling_rule",
    "prefix": "tf-aws-resource-xray_sampling_rule",
    "body": [
      "resource \"aws_xray_sampling_rule\" \"example\" {",
      "  rule_name      = \"example\"",
      "  priority       = 10000",
      "  version        = 1",
      "  reservoir_size = 1",
      "  fixed_rate     = 0.05",
      "  url_path       = \"*\"",
      "  host           = \"*\"",
      "  http_method    = \"*\"",
      "  service_type   = \"*\"",
      "  service_name   = \"*\"",
      "  resource_arn   = \"*\"",
      "",
      "  attributes = {",
      "    Hello = \"Tris\"",
      "  }",
      "}"
    ]
  },
  "azure-classic-resource-affinity_group": {
    "description": "Defines affinity_group",
    "prefix": "tf-azure-classic-resource-affinity_group",
    "body": [
      "resource \"azure_affinity_group\" \"terraform-main-group\" {",
      "  name        = \"terraform-group\"",
      "  location    = \"North Europe\"",
      "  label       = \"tf-group-01\"",
      "  description = \"Affinity group created by Terraform.\"",
      "}"
    ]
  },
  "azure-classic-resource-data_disk": {
    "description": "Defines data_disk",
    "prefix": "tf-azure-classic-resource-data_disk",
    "body": [
      "resource \"azure_data_disk\" \"data\" {",
      "  lun                  = 0",
      "  size                 = 10",
      "  storage_service_name = \"yourstorage\"",
      "  virtual_machine      = \"server1\"",
      "}"
    ]
  },
  "azure-classic-resource-dns_server": {
    "description": "Defines dns_server",
    "prefix": "tf-azure-classic-resource-dns_server",
    "body": [
      "resource \"azure_dns_server\" \"google-dns\" {",
      "  name        = \"google\"",
      "  dns_address = \"8.8.8.8\"",
      "}"
    ]
  },
  "azure-classic-resource-hosted_service": {
    "description": "Defines hosted_service",
    "prefix": "tf-azure-classic-resource-hosted_service",
    "body": [
      "resource \"azure_hosted_service\" \"terraform-service\" {",
      "  name               = \"terraform-service\"",
      "  location           = \"North Europe\"",
      "  ephemeral_contents = false",
      "  description        = \"Hosted service created by Terraform.\"",
      "  label              = \"tf-hs-01\"",
      "}"
    ]
  },
  "azure-classic-resource-instance": {
    "description": "Defines instance",
    "prefix": "tf-azure-classic-resource-instance",
    "body": [
      "resource \"azure_hosted_service\" \"terraform-service\" {",
      "  name               = \"terraform-service\"",
      "  location           = \"North Europe\"",
      "  ephemeral_contents = false",
      "  description        = \"Hosted service created by Terraform.\"",
      "  label              = \"tf-hs-01\"",
      "}",
      "",
      "resource \"azure_instance\" \"web\" {",
      "  name                 = \"terraform-test\"",
      "  hosted_service_name  = \"${azure_hosted_service.terraform-service.name}\"",
      "  image                = \"Ubuntu Server 14.04 LTS\"",
      "  size                 = \"Basic_A1\"",
      "  storage_service_name = \"yourstorage\"",
      "  location             = \"West US\"",
      "  username             = \"terraform\"",
      "  password             = \"Pass!admin123\"",
      "  domain_name          = \"contoso.com\"",
      "  domain_ou            = \"OU=Servers,DC=contoso.com,DC=Contoso,DC=com\"",
      "  domain_username      = \"Administrator\"",
      "  domain_password      = \"Pa$$word123\"",
      "",
      "  endpoint {",
      "    name         = \"SSH\"",
      "    protocol     = \"tcp\"",
      "    public_port  = 22",
      "    private_port = 22",
      "  }",
      "}"
    ]
  },
  "azure-classic-resource-local_network_connection": {
    "description": "Defines local_network_connection",
    "prefix": "tf-azure-classic-resource-local_network_connection",
    "body": [
      "resource \"azure_local_network_connection\" \"localnet\" {",
      "  name                   = \"terraform-local-network-connection\"",
      "  vpn_gateway_address    = \"45.12.189.2\"",
      "  address_space_prefixes = [\"10.10.10.0/24\", \"10.10.11.0/24\"]",
      "}"
    ]
  },
  "azure-classic-resource-security_group": {
    "description": "Defines security_group",
    "prefix": "tf-azure-classic-resource-security_group",
    "body": [
      "resource \"azure_security_group\" \"web\" {",
      "  name     = \"webservers\"",
      "  location = \"West US\"",
      "}"
    ]
  },
  "azure-classic-resource-security_group_rule": {
    "description": "Defines security_group_rule",
    "prefix": "tf-azure-classic-resource-security_group_rule",
    "body": [
      "resource \"azure_security_group\" \"web\" {",
      "  # ...",
      "}",
      "",
      "resource \"azure_security_group\" \"apps\" {",
      "  # ...",
      "}",
      "",
      "resource \"azure_security_group_rule\" \"ssh_access\" {",
      "  name                       = \"ssh-access-rule\"",
      "  security_group_names       = [\"${azure_security_group.web.name}\", \"${azure_security_group.apps.name}\"]",
      "  type                       = \"Inbound\"",
      "  action                     = \"Allow\"",
      "  priority                   = 200",
      "  source_address_prefix      = \"100.0.0.0/32\"",
      "  source_port_range          = \"*\"",
      "  destination_address_prefix = \"10.0.0.0/32\"",
      "  destination_port_range     = \"22\"",
      "  protocol                   = \"TCP\"",
      "}"
    ]
  },
  "azure-classic-resource-sql_database_server": {
    "description": "Defines sql_database_server",
    "prefix": "tf-azure-classic-resource-sql_database_server",
    "body": [
      "resource \"azure_sql_database_server\" \"sql-serv\" {",
      "  name     = \"<computed>\"",
      "  location = \"West US\"",
      "  username = \"SuperUser\"",
      "  password = \"SuperSEKR3T\"",
      "  version  = \"2.0\"",
      "  url      = \"<computed>\"",
      "}"
    ]
  },
  "azure-classic-resource-sql_database_server_firewall_rule": {
    "description": "Defines sql_database_server_firewall_rule",
    "prefix": "tf-azure-classic-resource-sql_database_server_firewall_rule",
    "body": [
      "resource \"azure_sql_database_server\" \"sql-serv1\" {",
      "  # ...",
      "}",
      "",
      "resource \"azure_sql_database_server\" \"sql-serv2\" {",
      "  # ...",
      "}",
      "",
      "resource \"azure_sql_database_server_firewall_rule\" \"constraint\" {",
      "  name     = \"terraform-testing-rule\"",
      "  start_ip = \"154.0.0.0\"",
      "  end_ip   = \"154.0.0.255\"",
      "",
      "  database_server_names = [",
      "    \"${azure_sql_database_server.sql-serv1.name}\",",
      "    \"${azure_sql_database_server.sql-serv2.name}\",",
      "  ]",
      "}"
    ]
  },
  "azure-classic-resource-sql_database_service": {
    "description": "Defines sql_database_service",
    "prefix": "tf-azure-classic-resource-sql_database_service",
    "body": [
      "resource \"azure_sql_database_service\" \"sql-server\" {",
      "  name                 = \"terraform-testing-db-renamed\"",
      "  database_server_name = \"flibberflabber\"",
      "  edition              = \"Standard\"",
      "  collation            = \"SQL_Latin1_General_CP1_CI_AS\"",
      "  max_size_bytes       = \"5368709120\"",
      "  service_level_id     = \"f1173c43-91bd-4aaa-973c-54e79e15235b\"",
      "}"
    ]
  },
  "azure-classic-resource-storage_blob": {
    "description": "Defines storage_blob",
    "prefix": "tf-azure-classic-resource-storage_blob",
    "body": [
      "resource \"azure_storage_blob\" \"foo\" {",
      "  name                   = \"tftesting-blob\"",
      "  storage_service_name   = \"tfstorserv\"",
      "  storage_container_name = \"terraform-storage-container\"",
      "  type                   = \"PageBlob\"",
      "  size                   = 1024",
      "}"
    ]
  },
  "azure-classic-resource-storage_container": {
    "description": "Defines storage_container",
    "prefix": "tf-azure-classic-resource-storage_container",
    "body": [
      "resource \"azure_storage_container\" \"stor-cont\" {",
      "  name                  = \"terraform-storage-container\"",
      "  container_access_type = \"blob\"",
      "  storage_service_name  = \"tfstorserv\"",
      "}"
    ]
  },
  "azure-classic-resource-storage_queue": {
    "description": "Defines storage_queue",
    "prefix": "tf-azure-classic-resource-storage_queue",
    "body": [
      "resource \"azure_storage_queue\" \"stor-queue\" {",
      "  name                 = \"terraform-storage-queue\"",
      "  storage_service_name = \"tfstorserv\"",
      "}"
    ]
  },
  "azure-classic-resource-storage_service": {
    "description": "Defines storage_service",
    "prefix": "tf-azure-classic-resource-storage_service",
    "body": [
      "resource \"azure_storage_service\" \"tfstor\" {",
      "  name         = \"tfstor\"",
      "  location     = \"West US\"",
      "  description  = \"Made by Terraform.\"",
      "  account_type = \"Standard_LRS\"",
      "}"
    ]
  },
  "azure-classic-resource-virtual_network": {
    "description": "Defines virtual_network",
    "prefix": "tf-azure-classic-resource-virtual_network",
    "body": [
      "resource \"azure_virtual_network\" \"default\" {",
      "  name          = \"test-network\"",
      "  address_space = [\"10.1.2.0/24\"]",
      "  location      = \"West US\"",
      "",
      "  subnet {",
      "    name           = \"subnet1\"",
      "    address_prefix = \"10.1.2.0/25\"",
      "  }",
      "}"
    ]
  },
  "azuread-data-application": {
    "description": "Defines application",
    "prefix": "tf-azuread-data-application",
    "body": [
      "data \"azuread_application\" \"example\" {",
      "  name = \"My First AzureAD Application\"",
      "}",
      "",
      "output \"azure_ad_object_id\" {",
      "  value = \"${data.azuread_application.example.id}\"",
      "}"
    ]
  },
  "azuread-data-domains": {
    "description": "Defines domains",
    "prefix": "tf-azuread-data-domains",
    "body": [
      "data \"azuread_domains\" \"aad_domains\" {}",
      "",
      "output \"domains\" {",
      "  value = \"${data.azuread_domains.aad_domains.domains}\"",
      "}"
    ]
  },
  "azuread-data-group": {
    "description": "Defines group",
    "prefix": "tf-azuread-data-group",
    "body": [
      "data \"azuread_group\" \"example\" {",
      "  name = \"A-AD-Group\"",
      "}"
    ]
  },
  "azuread-data-groups": {
    "description": "Defines groups",
    "prefix": "tf-azuread-data-groups",
    "body": [
      "data \"azuread_groups\" \"groups\" {",
      "  names = [\"group-a\", \"group-b\"]",
      "}"
    ]
  },
  "azuread-data-service_principal": {
    "description": "Defines service_principal",
    "prefix": "tf-azuread-data-service_principal",
    "body": [
      "data \"azuread_service_principal\" \"example\" {",
      "  display_name = \"my-awesome-application\"",
      "}"
    ]
  },
  "azuread-data-user": {
    "description": "Defines user",
    "prefix": "tf-azuread-data-user",
    "body": [
      "data \"azuread_user\" \"example\" {",
      "  user_principal_name = \"user@hashicorp.com\"",
      "}"
    ]
  },
  "azuread-data-users": {
    "description": "Defines users",
    "prefix": "tf-azuread-data-users",
    "body": [
      "data \"azuread_users\" \"users\" {",
      "  user_principal_name = [\"kat@hashicorp.com\", \"byte@hashicorp.com\"]",
      "}"
    ]
  },
  "azuread-resource-application": {
    "description": "Defines application",
    "prefix": "tf-azuread-resource-application",
    "body": [
      "resource \"azuread_application\" \"example\" {",
      "  name                       = \"example\"",
      "  homepage                   = \"https://homepage\"",
      "  identifier_uris            = [\"https://uri\"]",
      "  reply_urls                 = [\"https://replyurl\"]",
      "  available_to_other_tenants = false",
      "  oauth2_allow_implicit_flow = true",
      "  type                       = \"webapp/api\"",
      "",
      "  required_resource_access {",
      "    resource_app_id = \"00000003-0000-0000-c000-000000000000\"",
      "",
      "    resource_access {",
      "      id   = \"...\"",
      "      type = \"Role\"",
      "    }",
      "",
      "    resource_access {",
      "      id   = \"...\"",
      "      type = \"Scope\"",
      "    }",
      "",
      "    resource_access {",
      "      id   = \"...\"",
      "      type = \"Scope\"",
      "    }",
      "  }",
      "",
      "  required_resource_access {",
      "    resource_app_id = \"00000002-0000-0000-c000-000000000000\"",
      "",
      "    resource_access {",
      "      id   = \"...\"",
      "      type = \"Scope\"",
      "    }",
      "  }",
      "",
      "  app_role {",
      "    allowed_member_types = [",
      "      \"User\",",
      "      \"Application\",",
      "    ]",
      "",
      "    description  = \"Admins can manage roles and perform all task actions\"",
      "    display_name = \"Admin\"",
      "    is_enabled   = true",
      "    value        = \"Admin\"",
      "  }",
      "}"
    ]
  },
  "azuread-resource-application_password": {
    "description": "Defines application_password",
    "prefix": "tf-azuread-resource-application_password",
    "body": [
      "resource \"azuread_application\" \"example\" {",
      "  name                       = \"example\"",
      "  homepage                   = \"http://homepage\"",
      "  identifier_uris            = [\"http://uri\"]",
      "  reply_urls                 = [\"http://replyurl\"]",
      "  available_to_other_tenants = false",
      "  oauth2_allow_implicit_flow = true",
      "}",
      "",
      "resource \"azuread_application_password\" \"example\" {",
      "  application_id = \"${azuread_application.example.id}\"",
      "  value          = \"VT=uSgbTanZhyz@%nL9Hpd+Tfay_MRV#\"",
      "  end_date       = \"2020-01-01T01:02:03Z\"",
      "}"
    ]
  },
  "azuread-resource-group": {
    "description": "Defines group",
    "prefix": "tf-azuread-resource-group",
    "body": [
      "resource \"azuread_group\" \"example\" {",
      "  name = \"A-AD-Group\"",
      "}"
    ]
  },
  "azuread-resource-group_member": {
    "description": "Defines group_member",
    "prefix": "tf-azuread-resource-group_member",
    "body": [
      "",
      "data \"azuread_user\" \"example\" {",
      "  user_principal_name = \"jdoe@hashicorp.com\"",
      "}",
      "",
      "resource \"azuread_group\" \"example\" {",
      "  name = \"my_group\"",
      "}",
      "",
      "resource \"azuread_group_member\" \"example\" {",
      "  group_object_id   = \"${azuread_group.example.id}\"",
      "  member_object_id  = \"${data.azuread_user.example.id}\"",
      "}"
    ]
  },
  "azuread-resource-service_principal": {
    "description": "Defines service_principal",
    "prefix": "tf-azuread-resource-service_principal",
    "body": [
      "resource \"azuread_application\" \"example\" {",
      "  name                       = \"example\"",
      "  homepage                   = \"http://homepage\"",
      "  identifier_uris            = [\"http://uri\"]",
      "  reply_urls                 = [\"http://replyurl\"]",
      "  available_to_other_tenants = false",
      "  oauth2_allow_implicit_flow = true",
      "}",
      "",
      "resource \"azuread_service_principal\" \"example\" {",
      "  application_id = \"${azuread_application.example.application_id}\"",
      "",
      "  tags = [\"example\", \"tags\", \"here\"]",
      "}"
    ]
  },
  "azuread-resource-service_principal_password": {
    "description": "Defines service_principal_password",
    "prefix": "tf-azuread-resource-service_principal_password",
    "body": [
      "resource \"azuread_application\" \"example\" {",
      "  name                       = \"example\"",
      "  homepage                   = \"http://homepage\"",
      "  identifier_uris            = [\"http://uri\"]",
      "  reply_urls                 = [\"http://replyurl\"]",
      "  available_to_other_tenants = false",
      "  oauth2_allow_implicit_flow = true",
      "}",
      "",
      "resource \"azuread_service_principal\" \"example\" {",
      "  application_id = \"${azuread_application.example.application_id}\"",
      "}",
      "",
      "resource \"azuread_service_principal_password\" \"example\" {",
      "  service_principal_id = \"${azuread_service_principal.test.id}\"",
      "  value                = \"VT=uSgbTanZhyz@%nL9Hpd+Tfay_MRV#\"",
      "  end_date             = \"2020-01-01T01:02:03Z\"",
      "}"
    ]
  },
  "azuread-resource-user": {
    "description": "Defines user",
    "prefix": "tf-azuread-resource-user",
    "body": [
      "resource \"azuread_user\" \"example\" {",
      "  user_principal_name = \"jdo@hashicorp.com\"",
      "  display_name        = \"J. Doe\"",
      "  mail_nickname       = \"jdoe\"",
      "  password            = \"SecretP@sswd99!\"",
      "}"
    ]
  },
  "azurerm-data-api_management": {
    "description": "Defines api_management",
    "prefix": "tf-azurerm-data-api_management",
    "body": [
      "data \"azurerm_api_management\" \"test\" {",
      "  name                = \"search-api\"",
      "  resource_group_name = \"search-service\"",
      "}",
      "",
      "output \"api_management_id\" {",
      "  value = \"${data.azurerm_api_management.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-api_management_api": {
    "description": "Defines api_management_api",
    "prefix": "tf-azurerm-data-api_management_api",
    "body": [
      "data \"azurerm_api_management_api\" \"test\" {",
      "  name                = \"search-api\"",
      "  api_management_name = \"search-api-management\"",
      "  resource_group_name = \"search-service\"",
      "  revision            = \"2\"",
      "}",
      "",
      "output \"api_management_api_id\" {",
      "  value = \"${data.azurerm_api_management_api.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-api_management_group": {
    "description": "Defines api_management_group",
    "prefix": "tf-azurerm-data-api_management_group",
    "body": [
      "data \"azurerm_api_management_group\" \"test\" {",
      "  name                = \"my-group\"",
      "  api_management_name = \"example-apim\"",
      "  resource_group_name = \"search-service\"",
      "}",
      "",
      "output \"group_type\" {",
      "  value = \"${data.azurerm_api_management_group.test.type}\"",
      "}"
    ]
  },
  "azurerm-data-api_management_product": {
    "description": "Defines api_management_product",
    "prefix": "tf-azurerm-data-api_management_product",
    "body": [
      "data \"azurerm_api_management_product\" \"test\" {",
      "  product_id          = \"my-product\"",
      "  api_management_name = \"example-apim\"",
      "  resource_group_name = \"search-service\"",
      "}",
      "",
      "output \"product_terms\" {",
      "  value = \"${data.azurerm_api_management_product.test.terms}\"",
      "}"
    ]
  },
  "azurerm-data-api_management_user": {
    "description": "Defines api_management_user",
    "prefix": "tf-azurerm-data-api_management_user",
    "body": [
      "data \"azurerm_api_management_user\" \"test\" {",
      "  user_id             = \"my-user\"",
      "  api_management_name = \"example-apim\"",
      "  resource_group_name = \"search-service\"",
      "}",
      "",
      "output \"notes\" {",
      "  value = \"${data.azurerm_api_management_user.test.notes}\"",
      "}"
    ]
  },
  "azurerm-data-app_service": {
    "description": "Defines app_service",
    "prefix": "tf-azurerm-data-app_service",
    "body": [
      "data \"azurerm_app_service\" \"test\" {",
      "  name                = \"search-app-service\"",
      "  resource_group_name = \"search-service\"",
      "}",
      "",
      "output \"app_service_id\" {",
      "  value = \"${data.azurerm_app_service.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-app_service_plan": {
    "description": "Defines app_service_plan",
    "prefix": "tf-azurerm-data-app_service_plan",
    "body": [
      "data \"azurerm_app_service_plan\" \"test\" {",
      "  name                = \"search-app-service-plan\"",
      "  resource_group_name = \"search-service\"",
      "}",
      "",
      "output \"app_service_plan_id\" {",
      "  value = \"${data.azurerm_app_service_plan.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-application_insights": {
    "description": "Defines application_insights",
    "prefix": "tf-azurerm-data-application_insights",
    "body": [
      "data \"azurerm_application_insights\" \"test\" {",
      "  name                = \"production\"",
      "  resource_group_name = \"networking\"",
      "}",
      "",
      "output \"application_insights_instrumentation_key\" {",
      "  value = \"${data.azurerm_application_insights.test.instrumentation_key}\"",
      "}"
    ]
  },
  "azurerm-data-application_security_group": {
    "description": "Defines application_security_group",
    "prefix": "tf-azurerm-data-application_security_group",
    "body": [
      "data \"azurerm_application_security_group\" \"test\" {",
      "  name                = \"tf-appsecuritygroup\"",
      "  resource_group_name = \"my-resource-group\"",
      "}",
      "",
      "output \"application_security_group_id\" {",
      "  value = \"${data.azurerm_application_security_group.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-automation_variable_bool": {
    "description": "Defines automation_variable_bool",
    "prefix": "tf-azurerm-data-automation_variable_bool",
    "body": [
      "data \"azurerm_automation_variable_bool\" \"example\" {",
      "  name                    = \"tfex-example-var\"",
      "  resource_group_name     = \"tfex-example-rg\"",
      "  automation_account_name = \"tfex-example-account\"",
      "}",
      "",
      "output \"variable_id\" {",
      "  value = \"${data.azurerm_automation_variable_bool.example.id}\"",
      "}"
    ]
  },
  "azurerm-data-automation_variable_datetime": {
    "description": "Defines automation_variable_datetime",
    "prefix": "tf-azurerm-data-automation_variable_datetime",
    "body": [
      "data \"azurerm_automation_variable_datetime\" \"example\" {",
      "  name                    = \"tfex-example-var\"",
      "  resource_group_name     = \"tfex-example-rg\"",
      "  automation_account_name = \"tfex-example-account\"",
      "}",
      "",
      "output \"variable_id\" {",
      "  value = \"${data.azurerm_automation_variable_datetime.example.id}\"",
      "}"
    ]
  },
  "azurerm-data-automation_variable_int": {
    "description": "Defines automation_variable_int",
    "prefix": "tf-azurerm-data-automation_variable_int",
    "body": [
      "data \"azurerm_automation_variable_int\" \"example\" {",
      "  name                    = \"tfex-example-var\"",
      "  resource_group_name     = \"tfex-example-rg\"",
      "  automation_account_name = \"tfex-example-account\"",
      "}",
      "",
      "output \"variable_id\" {",
      "  value = \"${data.azurerm_automation_variable_int.example.id}\"",
      "}"
    ]
  },
  "azurerm-data-automation_variable_string": {
    "description": "Defines automation_variable_string",
    "prefix": "tf-azurerm-data-automation_variable_string",
    "body": [
      "data \"azurerm_automation_variable_string\" \"example\" {",
      "  name                    = \"tfex-example-var\"",
      "  resource_group_name     = \"tfex-example-rg\"",
      "  automation_account_name = \"tfex-example-account\"",
      "}",
      "",
      "output \"variable_id\" {",
      "  value = \"${data.azurerm_automation_variable_string.example.id}\"",
      "}"
    ]
  },
  "azurerm-data-availability_set": {
    "description": "Defines availability_set",
    "prefix": "tf-azurerm-data-availability_set",
    "body": [
      "data \"azurerm_availability_set\" \"test\" {",
      "  name                = \"tf-appsecuritygroup\"",
      "  resource_group_name = \"my-resource-group\"",
      "}",
      "",
      "output \"availability_set_id\" {",
      "  value = \"${data.azurerm_availability_set.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-azuread_application": {
    "description": "Defines azuread_application",
    "prefix": "tf-azurerm-data-azuread_application",
    "body": [
      "data \"azurerm_azuread_application\" \"test\" {",
      "  name = \"My First AzureAD Application\"",
      "}",
      "",
      "output \"azure_active_directory_object_id\" {",
      "  value = \"${data.azurerm_azuread_application.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-azuread_service_principal": {
    "description": "Defines azuread_service_principal",
    "prefix": "tf-azurerm-data-azuread_service_principal",
    "body": [
      "data \"azurerm_azuread_service_principal\" \"test\" {",
      "  display_name = \"my-awesome-application\"",
      "}"
    ]
  },
  "azurerm-data-batch_account": {
    "description": "Defines batch_account",
    "prefix": "tf-azurerm-data-batch_account",
    "body": [
      "data \"azurerm_batch_account\" \"test\" {",
      "  name                = \"testbatchaccount\"",
      "  resource_group_name = \"test\"",
      "}",
      "",
      "output \"pool_allocation_mode\" {",
      "  value = \"${data.azurerm_batch_account.test.pool_allocation_mode}\"",
      "}"
    ]
  },
  "azurerm-data-batch_certificate": {
    "description": "Defines batch_certificate",
    "prefix": "tf-azurerm-data-batch_certificate",
    "body": [
      "data \"azurerm_batch_certificate\" \"example\" {",
      "  name                = \"SHA1-42C107874FD0E4A9583292A2F1098E8FE4B2EDDA\"",
      "  account_name        = \"examplebatchaccount\"",
      "  resource_group_name = \"example\"",
      "}",
      "",
      "output \"thumbprint\" {",
      "  value = \"${data.azurerm_batch_certificate.example.thumbprint}\"",
      "}"
    ]
  },
  "azurerm-data-batch_pool": {
    "description": "Defines batch_pool",
    "prefix": "tf-azurerm-data-batch_pool",
    "body": [
      "data \"azurerm_batch_pool\" \"test\" {",
      "  name                = \"testbatchpool\"",
      "  account_name        = \"testbatchaccount\"",
      "  resource_group_name = \"test\"",
      "}"
    ]
  },
  "azurerm-data-builtin_role_definition": {
    "description": "Defines builtin_role_definition",
    "prefix": "tf-azurerm-data-builtin_role_definition",
    "body": [
      "data \"azurerm_builtin_role_definition\" \"contributor\" {",
      "  name = \"Contributor\"",
      "}",
      "",
      "output \"contributor_role_definition_id\" {",
      "  value = \"${data.azurerm_builtin_role_definition.contributor.id}\"",
      "}"
    ]
  },
  "azurerm-data-cdn_profile": {
    "description": "Defines cdn_profile",
    "prefix": "tf-azurerm-data-cdn_profile",
    "body": [
      "data \"azurerm_cdn_profile\" \"test\" {",
      "  name                = \"myfirstcdnprofile\"",
      "  resource_group_name = \"example-resources\"",
      "}",
      "",
      "output \"cdn_profile_id\" {",
      "  value = \"${data.azurerm_cdn_profile.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-client_config": {
    "description": "Defines client_config",
    "prefix": "tf-azurerm-data-client_config",
    "body": [
      "data \"azurerm_client_config\" \"current\" {}",
      "",
      "output \"account_id\" {",
      "  value = \"${data.azurerm_client_config.current.service_principal_application_id}\"",
      "}"
    ]
  },
  "azurerm-data-container_registry": {
    "description": "Defines container_registry",
    "prefix": "tf-azurerm-data-container_registry",
    "body": [
      "data \"azurerm_container_registry\" \"test\" {",
      "  name                = \"testacr\"",
      "  resource_group_name = \"test\"",
      "}",
      "",
      "output \"login_server\" {",
      "  value = \"${data.azurerm_container_registry.test.login_server}\"",
      "}"
    ]
  },
  "azurerm-data-cosmosdb_account": {
    "description": "Defines cosmosdb_account",
    "prefix": "tf-azurerm-data-cosmosdb_account",
    "body": [
      "data \"azurerm_cosmosdb_account\" \"test\" {",
      "  name                = \"tfex-cosmosdb-account\"",
      "  resource_group_name = \"tfex-cosmosdb-account-rg\"",
      "}",
      "",
      "output \"cosmosdb_account_endpoint\" {",
      "  value = \"${data.azurerm_cosmosdb_account.jobs.endpoint}\"",
      "}"
    ]
  },
  "azurerm-data-data_lake_store": {
    "description": "Defines data_lake_store",
    "prefix": "tf-azurerm-data-data_lake_store",
    "body": [
      "data \"azurerm_data_lake_store\" \"test\" {",
      "  name                = \"testdatalake\"",
      "  resource_group_name = \"testdatalake\"",
      "}",
      "",
      "output \"data_lake_store_id\" {",
      "  value = \"${data.azurerm_data_lake_store.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-dev_test_lab": {
    "description": "Defines dev_test_lab",
    "prefix": "tf-azurerm-data-dev_test_lab",
    "body": [
      "data \"azurerm_dev_test_lab\" \"test\" {",
      "  name                = \"example-lab\"",
      "  resource_group_name = \"example-resources\"",
      "}",
      "",
      "output \"unique_identifier\" {",
      "  value = \"${data.azurerm_dev_test_lab.test.unique_identifier}\"",
      "}"
    ]
  },
  "azurerm-data-dns_zone": {
    "description": "Defines dns_zone",
    "prefix": "tf-azurerm-data-dns_zone",
    "body": [
      "data \"azurerm_dns_zone\" \"test\" {",
      "  name                = \"search-eventhubns\"",
      "  resource_group_name = \"search-service\"",
      "}",
      "",
      "output \"dns_zone_id\" {",
      "  value = \"${data.azurerm_dns_zone.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-eventhub_namespace": {
    "description": "Defines eventhub_namespace",
    "prefix": "tf-azurerm-data-eventhub_namespace",
    "body": [
      "data \"azurerm_eventhub_namespace\" \"test\" {",
      "  name                = \"search-eventhubns\"",
      "  resource_group_name = \"search-service\"",
      "}",
      "",
      "output \"eventhub_namespace_id\" {",
      "  value = \"${data.azurerm_eventhub_namespace.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-express_route_circuit": {
    "description": "Defines express_route_circuit",
    "prefix": "tf-azurerm-data-express_route_circuit",
    "body": [
      "data \"azurerm_express_route_circuit\" test {",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  name                = \"${azurerm_express_route_circuit.test.name}\"",
      "}",
      "",
      "output \"express_route_circuit_id\" {",
      "  value = \"${data.azurerm_express_route_circuit.test.id}\"",
      "}",
      "",
      "output \"service_key\" {",
      "  value = \"${data.azurerm_express_route_circuit.test.service_key}\"",
      "}"
    ]
  },
  "azurerm-data-firewall": {
    "description": "Defines firewall",
    "prefix": "tf-azurerm-data-firewall",
    "body": [
      "data \"azurerm_firewall\" \"test\" {",
      "  name                = \"firewall1\"",
      "  resource_group_name = \"firewall-RG\"",
      "}",
      "",
      "output \"firewall_private_ip\" {",
      "  value = \"${data.azurerm_firewall.test.ip_configuration.0.private_ip_address}\"",
      "}"
    ]
  },
  "azurerm-data-hdinsight_cluster": {
    "description": "Defines hdinsight_cluster",
    "prefix": "tf-azurerm-data-hdinsight_cluster",
    "body": [
      "data \"azurerm_hdinsight_cluster\" \"example\" {",
      "  name                = \"example\"",
      "  resource_group_name = \"example-resources\"",
      "}",
      "",
      "output \"https_endpoint\" {",
      "  value = \"${data.azurerm_hdinsight_cluster.example.https_endpoint}\"",
      "}"
    ]
  },
  "azurerm-data-image": {
    "description": "Defines image",
    "prefix": "tf-azurerm-data-image",
    "body": [
      "data \"azurerm_image\" \"search\" {",
      "  name                = \"search-api\"",
      "  resource_group_name = \"packerimages\"",
      "}",
      "",
      "output \"image_id\" {",
      "  value = \"${data.azurerm_image.search.id}\"",
      "}"
    ]
  },
  "azurerm-data-key_vault": {
    "description": "Defines key_vault",
    "prefix": "tf-azurerm-data-key_vault",
    "body": [
      "data \"azurerm_key_vault\" \"test\" {",
      "  name                = \"mykeyvault\"",
      "  resource_group_name = \"some-resource-group\"",
      "}",
      "",
      "output \"vault_uri\" {",
      "  value = \"${data.azurerm_key_vault.test.vault_uri}\"",
      "}"
    ]
  },
  "azurerm-data-key_vault_access_policy": {
    "description": "Defines key_vault_access_policy",
    "prefix": "tf-azurerm-data-key_vault_access_policy",
    "body": [
      "data \"azurerm_key_vault_access_policy\" \"contributor\" {",
      "  name = \"Key Management\"",
      "}",
      "",
      "output \"access_policy_key_permissions\" {",
      "  value = \"${data.azurerm_key_vault_access_policy.key_permissions}\"",
      "}"
    ]
  },
  "azurerm-data-key_vault_key": {
    "description": "Defines key_vault_key",
    "prefix": "tf-azurerm-data-key_vault_key",
    "body": [
      "data \"azurerm_key_vault_key\" \"test\" {",
      "  name      = \"secret-sauce\"",
      "  vault_uri = \"https://rickslab.vault.azure.net/\"",
      "}",
      "",
      "output \"key_type\" {",
      "  value = \"${data.azurerm_key_vault_secret.test.key_type}\"",
      "}"
    ]
  },
  "azurerm-data-key_vault_secret": {
    "description": "Defines key_vault_secret",
    "prefix": "tf-azurerm-data-key_vault_secret",
    "body": [
      "data \"azurerm_key_vault_secret\" \"test\" {",
      "  name         = \"secret-sauce\"",
      "  key_vault_id = \"${data.azurerm_key_vault.existing.id}\"",
      "}",
      "",
      "output \"secret_value\" {",
      "  value = \"${data.azurerm_key_vault_secret.test.value}\"",
      "}"
    ]
  },
  "azurerm-data-kubernetes_cluster": {
    "description": "Defines kubernetes_cluster",
    "prefix": "tf-azurerm-data-kubernetes_cluster",
    "body": [
      "data \"azurerm_kubernetes_cluster\" \"test\" {",
      "  name                = \"myakscluster\"",
      "  resource_group_name = \"my-example-resource-group\"",
      "}"
    ]
  },
  "azurerm-data-kubernetes_service_versions": {
    "description": "Defines kubernetes_service_versions",
    "prefix": "tf-azurerm-data-kubernetes_service_versions",
    "body": [
      "data \"azurerm_kubernetes_service_versions\" \"current\" {",
      "  location = \"West Europe\"",
      "}",
      "",
      "output \"versions\" {",
      "  value = \"${data.azurerm_kubernetes_service_versions.current.versions}\"",
      "}",
      "",
      "output \"latest_version\" {",
      "  value = \"${data.azurerm_kubernetes_service_versions.current.latest_version}\"",
      "}"
    ]
  },
  "azurerm-data-loadbalancer": {
    "description": "Defines loadbalancer",
    "prefix": "tf-azurerm-data-loadbalancer",
    "body": [
      "data \"azurerm_lb\" \"test\" {",
      "  name                = \"example-lb\"",
      "  resource_group_name = \"example-resources\"",
      "}",
      "",
      "output \"loadbalancer_id\" {",
      "  value = \"${data.azurerm_lb.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-loadbalancer_backend_address_pool": {
    "description": "Defines loadbalancer_backend_address_pool",
    "prefix": "tf-azurerm-data-loadbalancer_backend_address_pool",
    "body": [
      "data \"azurerm_lb\" \"test\" {",
      "  name                = \"example-lb\"",
      "  resource_group_name = \"example-resources\"",
      "}",
      "",
      "data \"azurerm_lb_backend_address_pool\" \"test\" {",
      "  name            = \"first\"",
      "  loadbalancer_id = \"${data.azurerm_lb.test.id}\"",
      "}",
      "",
      "output \"backend_address_pool_id\" {",
      "  value = \"${data.azurerm_lb_backend_address_pool.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-log_analytics_workspace": {
    "description": "Defines log_analytics_workspace",
    "prefix": "tf-azurerm-data-log_analytics_workspace",
    "body": [
      "data \"azurerm_log_analytics_workspace\" \"test\" {",
      "  name                = \"acctest-01\"",
      "  resource_group_name = \"acctest\"",
      "}",
      "",
      "output \"log_analytics_workspace_id\" {",
      "  value = \"${data.azurerm_log_analytics_workspace.test.workspace_id}\"",
      "}"
    ]
  },
  "azurerm-data-logic_app_workflow": {
    "description": "Defines logic_app_workflow",
    "prefix": "tf-azurerm-data-logic_app_workflow",
    "body": [
      "data \"azurerm_logic_app_workflow\" \"test\" {",
      "  name                = \"workflow1\"",
      "  resource_group_name = \"my-resource-group\"",
      "}",
      "",
      "output \"access_endpoint\" {",
      "  value = \"${data.azurerm_logic_app_workflow.test.access_endpoint}\"",
      "}"
    ]
  },
  "azurerm-data-managed_disk": {
    "description": "Defines managed_disk",
    "prefix": "tf-azurerm-data-managed_disk",
    "body": [
      "data \"azurerm_managed_disk\" \"datasourcemd\" {",
      "  name                = \"testManagedDisk\"",
      "  resource_group_name = \"acctestRG\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"acctvn\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"West US 2\"",
      "  resource_group_name = \"acctestRG\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"test\" {",
      "  name                 = \"acctsub\"",
      "  resource_group_name  = \"acctestRG\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.2.0/24\"",
      "}",
      "",
      "resource \"azurerm_network_interface\" \"test\" {",
      "  name                = \"acctni\"",
      "  location            = \"West US 2\"",
      "  resource_group_name = \"acctestRG\"",
      "",
      "  ip_configuration {",
      "    name                          = \"testconfiguration1\"",
      "    subnet_id                     = \"${azurerm_subnet.test.id}\"",
      "    private_ip_address_allocation = \"Dynamic\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_virtual_machine\" \"test\" {",
      "  name                  = \"acctvm\"",
      "  location              = \"West US 2\"",
      "  resource_group_name   = \"acctestRG\"",
      "  network_interface_ids = [\"${azurerm_network_interface.test.id}\"]",
      "  vm_size               = \"Standard_DS1_v2\"",
      "",
      "  storage_image_reference {",
      "    publisher = \"Canonical\"",
      "    offer     = \"UbuntuServer\"",
      "    sku       = \"16.04-LTS\"",
      "    version   = \"latest\"",
      "  }",
      "",
      "  storage_os_disk {",
      "    name              = \"myosdisk1\"",
      "    caching           = \"ReadWrite\"",
      "    create_option     = \"FromImage\"",
      "    managed_disk_type = \"Standard_LRS\"",
      "  }",
      "",
      "  storage_data_disk {",
      "    name              = \"datadisk_new\"",
      "    managed_disk_type = \"Standard_LRS\"",
      "    create_option     = \"Empty\"",
      "    lun               = 0",
      "    disk_size_gb      = \"1023\"",
      "  }",
      "",
      "  storage_data_disk {",
      "    name            = \"${data.azurerm_managed_disk.datasourcemd.name}\"",
      "    managed_disk_id = \"${data.azurerm_managed_disk.datasourcemd.id}\"",
      "    create_option   = \"Attach\"",
      "    lun             = 1",
      "    disk_size_gb    = \"${data.azurerm_managed_disk.datasourcemd.disk_size_gb}\"",
      "  }",
      "",
      "  os_profile {",
      "    computer_name  = \"hostname\"",
      "    admin_username = \"testadmin\"",
      "    admin_password = \"Password1234!\"",
      "  }",
      "",
      "  os_profile_linux_config {",
      "    disable_password_authentication = false",
      "  }",
      "",
      "  tags = {",
      "    environment = \"staging\"",
      "  }",
      "}"
    ]
  },
  "azurerm-data-management_group": {
    "description": "Defines management_group",
    "prefix": "tf-azurerm-data-management_group",
    "body": [
      "data \"azurerm_management_group\" \"test\" {",
      "  group_id = \"00000000-0000-0000-0000-000000000000\"",
      "}",
      "",
      "output \"display_name\" {",
      "  value = \"${data.azurerm_management_group.test.display_name}\"",
      "}"
    ]
  },
  "azurerm-data-maps_account": {
    "description": "Defines maps_account",
    "prefix": "tf-azurerm-data-maps_account",
    "body": [
      "data \"azurerm_maps_account\" \"test\" {",
      "  name                = \"production\"",
      "  resource_group_name = \"maps\"",
      "}",
      "",
      "output \"maps_account_id\" {",
      "  value = \"${data.azurerm_maps_account.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-monitor_action_group": {
    "description": "Defines monitor_action_group",
    "prefix": "tf-azurerm-data-monitor_action_group",
    "body": [
      "data \"azurerm_monitor_action_group\" \"example\" {",
      "  resource_group_name = \"terraform-example-rg\"",
      "  name                = \"tfex-actiongroup\"",
      "}",
      "",
      "output \"action_group_id\" {",
      "  value = \"${data.azurerm_monitor_action_group.example.id}\"",
      "}"
    ]
  },
  "azurerm-data-monitor_diagnostic_categories": {
    "description": "Defines monitor_diagnostic_categories",
    "prefix": "tf-azurerm-data-monitor_diagnostic_categories",
    "body": [
      "data \"azurerm_key_vault\" \"test\" {",
      "  name                = \"${azurerm_key_vault.test.name}\"",
      "  resource_group_name = \"${azurerm_key_vault.test.resource_group_name}\"",
      "}",
      "",
      "data \"azurerm_monitor_diagnostic_categories\" \"test\" {",
      "  resource_id = \"${data.azurerm_key_vault.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-monitor_log_profile": {
    "description": "Defines monitor_log_profile",
    "prefix": "tf-azurerm-data-monitor_log_profile",
    "body": [
      "data \"azurerm_monitor_log_profile\" \"test\" {",
      "  name = \"test-logprofile\"",
      "}",
      "",
      "output \"log_profile_storage_account_id\" {",
      "  value = \"${data.azurerm_monitor_log_profile.test.storage_account_id}\"",
      "}"
    ]
  },
  "azurerm-data-mssql_elasticpool": {
    "description": "Defines mssql_elasticpool",
    "prefix": "tf-azurerm-data-mssql_elasticpool",
    "body": [
      "data \"azurerm_mssql_elasticpool\" \"example\" {",
      "  name                = \"mssqlelasticpoolname\"",
      "  resource_group_name = \"example-resources\"",
      "  server_name         = \"example-sql-server\"",
      "}",
      "",
      "output \"elasticpool_id\" {",
      "  value = \"${data.azurerm_mssql_elasticpool.example.id}\"",
      "}"
    ]
  },
  "azurerm-data-network_interface": {
    "description": "Defines network_interface",
    "prefix": "tf-azurerm-data-network_interface",
    "body": [
      "data \"azurerm_network_interface\" \"test\" {",
      "  name                = \"acctest-nic\"",
      "  resource_group_name = \"networking\"",
      "}",
      "",
      "output \"network_interface_id\" {",
      "  value = \"${data.azurerm_network_interface.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-network_security_group": {
    "description": "Defines network_security_group",
    "prefix": "tf-azurerm-data-network_security_group",
    "body": [
      "data \"azurerm_network_security_group\" \"test\" {",
      "  name                = \"${azurerm_network_security_group.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "output \"location\" {",
      "  value = \"${data.azurerm_network_security_group.test.location}\"",
      "}"
    ]
  },
  "azurerm-data-network_watcher": {
    "description": "Defines network_watcher",
    "prefix": "tf-azurerm-data-network_watcher",
    "body": [
      "data \"azurerm_network_watcher\" \"test\" {",
      "  name                = \"${azurerm_network_watcher.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "output \"network_watcher_id\" {",
      "  value = \"${data.azurerm_network_watcher.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-notification_hub": {
    "description": "Defines notification_hub",
    "prefix": "tf-azurerm-data-notification_hub",
    "body": [
      "data \"azurerm_notification_hub\" \"test\" {",
      "  name                = \"notification-hub\"",
      "  namespace_name      = \"namespace-name\"",
      "  resource_group_name = \"resource-group-name\"",
      "}",
      "",
      "output \"id\" {",
      "  value = \"${data.azurerm_notification_hub.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-notification_hub_namespace": {
    "description": "Defines notification_hub_namespace",
    "prefix": "tf-azurerm-data-notification_hub_namespace",
    "body": [
      "data \"azurerm_notification_hub_namespace\" \"test\" {",
      "  name                = \"my-namespace\"",
      "  resource_group_name = \"my-resource-group\"",
      "}",
      "",
      "output \"servicebus_endpoint\" {",
      "  value = \"${data.azurerm_notification_hub_namespace.test.servicebus_endpoint}\"",
      "}"
    ]
  },
  "azurerm-data-platform_image": {
    "description": "Defines platform_image",
    "prefix": "tf-azurerm-data-platform_image",
    "body": [
      "data \"azurerm_platform_image\" \"test\" {",
      "  location  = \"West Europe\"",
      "  publisher = \"Canonical\"",
      "  offer     = \"UbuntuServer\"",
      "  sku       = \"16.04-LTS\"",
      "}",
      "",
      "output \"version\" {",
      "  value = \"${data.azurerm_platform_image.test.version}\"",
      "}"
    ]
  },
  "azurerm-data-policy_definition": {
    "description": "Defines policy_definition",
    "prefix": "tf-azurerm-data-policy_definition",
    "body": [
      "data \"azurerm_policy_definition\" \"test\" {",
      "  display_name = \"Allowed resource types\"",
      "}",
      "",
      "output \"id\" {",
      "  value = \"${data.azurerm_policy_definition.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-public_ip": {
    "description": "Defines public_ip",
    "prefix": "tf-azurerm-data-public_ip",
    "body": [
      "data \"azurerm_public_ip\" \"test\" {",
      "  name                = \"name_of_public_ip\"",
      "  resource_group_name = \"name_of_resource_group\"",
      "}",
      "",
      "output \"domain_name_label\" {",
      "  value = \"${data.azurerm_public_ip.test.domain_name_label}\"",
      "}",
      "",
      "output \"public_ip_address\" {",
      "  value = \"${data.azurerm_public_ip.test.ip_address}\"",
      "}"
    ]
  },
  "azurerm-data-public_ips": {
    "description": "Defines public_ips",
    "prefix": "tf-azurerm-data-public_ips",
    "body": [
      "data \"azurerm_public_ips\" \"test\" {",
      "  resource_group_name = \"pip-test\"",
      "  attached            = false",
      "}"
    ]
  },
  "azurerm-data-recovery_services_protection_policy_vm": {
    "description": "Defines recovery_services_protection_policy_vm",
    "prefix": "tf-azurerm-data-recovery_services_protection_policy_vm",
    "body": [
      "data \"azurerm_recovery_services_protection_policy_vm\" \"policy\" {",
      "  name                = \"policy\"",
      "  recovery_vault_name = \"recovery_vault\"",
      "  resource_group_name = \"resource_group\"",
      "}"
    ]
  },
  "azurerm-data-recovery_services_vault": {
    "description": "Defines recovery_services_vault",
    "prefix": "tf-azurerm-data-recovery_services_vault",
    "body": [
      "data \"azurerm_recovery_services_vault\" \"vault\" {",
      "  name                = \"tfex-recovery_vault\"",
      "  resource_group_name = \"tfex-resource_group\"",
      "}"
    ]
  },
  "azurerm-data-redis_cache": {
    "description": "Defines redis_cache",
    "prefix": "tf-azurerm-data-redis_cache",
    "body": [
      "data \"azurerm_redis_cache\" \"example\" {",
      "  name                = \"myrediscache\"",
      "  resource_group_name = \"redis-cache\"",
      "}",
      "",
      "output \"primary_access_key\" {",
      "  value = \"${data.azurerm_redis_cache.example.primary_access_key}\"",
      "}",
      "",
      "output \"hostname\" {",
      "  value = \"${data.azurerm_redis_cache.example.hostname}\"",
      "}"
    ]
  },
  "azurerm-data-resource_group": {
    "description": "Defines resource_group",
    "prefix": "tf-azurerm-data-resource_group",
    "body": [
      "data \"azurerm_resource_group\" \"test\" {",
      "  name = \"dsrg_test\"",
      "}",
      "",
      "resource \"azurerm_managed_disk\" \"test\" {",
      "  name                 = \"managed_disk_name\"",
      "  location             = \"${data.azurerm_resource_group.test.location}\"",
      "  resource_group_name  = \"${data.azurerm_resource_group.test.name}\"",
      "  storage_account_type = \"Standard_LRS\"",
      "  create_option        = \"Empty\"",
      "  disk_size_gb         = \"1\"",
      "}"
    ]
  },
  "azurerm-data-role_definition": {
    "description": "Defines role_definition",
    "prefix": "tf-azurerm-data-role_definition",
    "body": [
      "data \"azurerm_subscription\" \"primary\" {}",
      "",
      "resource \"azurerm_role_definition\" \"custom\" {",
      "  role_definition_id = \"00000000-0000-0000-0000-000000000000\"",
      "  name               = \"CustomRoleDef\"",
      "  scope              = \"${data.azurerm_subscription.primary.id}\"",
      "",
      "  #...",
      "}",
      "",
      "data \"azurerm_role_definition\" \"custom\" {",
      "  role_definition_id = \"${azurerm_role_definition.custom.role_definition_id}\"",
      "  scope              = \"${data.azurerm_subscription.primary.id}\"              # /subscriptions/00000000-0000-0000-0000-000000000000",
      "}",
      "",
      "data \"azurerm_role_definition\" \"custom-byname\" {",
      "  name  = \"${azurerm_role_definition.custom.name}\"",
      "  scope = \"${data.azurerm_subscription.primary.id}\"",
      "}",
      "",
      "data \"azurerm_builtin_role_definition\" \"builtin\" {",
      "  name = \"Contributor\"",
      "}",
      "",
      "output \"custom_role_definition_id\" {",
      "  value = \"${data.azurerm_role_definition.custom.id}\"",
      "}",
      "",
      "output \"contributor_role_definition_id\" {",
      "  value = \"${data.azurerm_role_definition.builtin.id}\"",
      "}"
    ]
  },
  "azurerm-data-route_table": {
    "description": "Defines route_table",
    "prefix": "tf-azurerm-data-route_table",
    "body": [
      "data \"azurerm_route_table\" \"test\" {",
      "  name                = \"myroutetable\"",
      "  resource_group_name = \"some-resource-group\"",
      "}"
    ]
  },
  "azurerm-data-scheduler_job_collection": {
    "description": "Defines scheduler_job_collection",
    "prefix": "tf-azurerm-data-scheduler_job_collection",
    "body": [
      "data \"azurerm_scheduler_job_collection\" \"test\" {",
      "  name                = \"tfex-job-collection\"",
      "  resource_group_name = \"tfex-job-collection-rg\"",
      "}",
      "",
      "output \"job_collection_state\" {",
      "  value = \"${data.azurerm_scheduler_job_collection.jobs.state}\"",
      "}"
    ]
  },
  "azurerm-data-servicebus_namespace": {
    "description": "Defines servicebus_namespace",
    "prefix": "tf-azurerm-data-servicebus_namespace",
    "body": [
      "data \"azurerm_servicebus_namespace\" \"test\" {",
      "  name                = \"examplenamespace\"",
      "  resource_group_name = \"example-resources\"",
      "}",
      "",
      "output \"location\" {",
      "  value = \"${data.azurerm_servicebus_namespace.test.location}\"",
      "}"
    ]
  },
  "azurerm-data-shared_image": {
    "description": "Defines shared_image",
    "prefix": "tf-azurerm-data-shared_image",
    "body": [
      "data \"azurerm_shared_image\" \"test\" {",
      "  name                = \"my-image\"",
      "  gallery_name        = \"my-image-gallery\"",
      "  resource_group_name = \"example-resources\"",
      "}"
    ]
  },
  "azurerm-data-shared_image_gallery": {
    "description": "Defines shared_image_gallery",
    "prefix": "tf-azurerm-data-shared_image_gallery",
    "body": [
      "data \"azurerm_shared_image_gallery\" \"test\" {",
      "  name                = \"my-image-gallery\"",
      "  resource_group_name = \"example-resources\"",
      "}"
    ]
  },
  "azurerm-data-shared_image_version": {
    "description": "Defines shared_image_version",
    "prefix": "tf-azurerm-data-shared_image_version",
    "body": [
      "data \"azurerm_shared_image_version\" \"test\" {",
      "  name                = \"1.0.0\"",
      "  image_name          = \"my-image\"",
      "  gallery_name        = \"my-image-gallery\"",
      "  resource_group_name = \"example-resources\"",
      "}"
    ]
  },
  "azurerm-data-snapshot": {
    "description": "Defines snapshot",
    "prefix": "tf-azurerm-data-snapshot",
    "body": [
      "data \"azurerm_snapshot\" \"test\" {",
      "  name                = \"my-snapshot\"",
      "  resource_group_name = \"my-resource-group\"",
      "}"
    ]
  },
  "azurerm-data-sql_server": {
    "description": "Defines sql_server",
    "prefix": "tf-azurerm-data-sql_server",
    "body": [
      "data \"azurerm_sql_server\" \"example\" {",
      "  name                = \"examplesqlservername\"",
      "  resource_group_name = \"example-resources\"",
      "}",
      "",
      "output \"sql_server_id\" {",
      "  value = \"${data.azurerm_sql_server.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-storage_account": {
    "description": "Defines storage_account",
    "prefix": "tf-azurerm-data-storage_account",
    "body": [
      "data \"azurerm_storage_account\" \"test\" {",
      "  name                = \"packerimages\"",
      "  resource_group_name = \"packer-storage\"",
      "}",
      "",
      "output \"storage_account_tier\" {",
      "  value = \"${data.azurerm_storage_account.test.account_tier}\"",
      "}"
    ]
  },
  "azurerm-data-storage_account_sas": {
    "description": "Defines storage_account_sas",
    "prefix": "tf-azurerm-data-storage_account_sas",
    "body": [
      "resource \"azurerm_resource_group\" \"testrg\" {",
      "  name     = \"resourceGroupName\"",
      "  location = \"westus\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"testsa\" {",
      "  name                     = \"storageaccountname\"",
      "  resource_group_name      = \"${azurerm_resource_group.testrg.name}\"",
      "  location                 = \"westus\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"GRS\"",
      "",
      "  tags = {",
      "    environment = \"staging\"",
      "  }",
      "}",
      "",
      "data \"azurerm_storage_account_sas\" \"test\" {",
      "  connection_string = \"${azurerm_storage_account.testsa.primary_connection_string}\"",
      "  https_only        = true",
      "",
      "  resource_types {",
      "    service   = true",
      "    container = false",
      "    object    = false",
      "  }",
      "",
      "  services {",
      "    blob  = true",
      "    queue = false",
      "    table = false",
      "    file  = false",
      "  }",
      "",
      "  start  = \"2018-03-21\"",
      "  expiry = \"2020-03-21\"",
      "",
      "  permissions {",
      "    read    = true",
      "    write   = true",
      "    delete  = false",
      "    list    = false",
      "    add     = true",
      "    create  = true",
      "    update  = false",
      "    process = false",
      "  }",
      "}",
      "",
      "output \"sas_url_query_string\" {",
      "  value = \"${data.azurerm_storage_account_sas.test.sas}\"",
      "}"
    ]
  },
  "azurerm-data-stream_analytics_job": {
    "description": "Defines stream_analytics_job",
    "prefix": "tf-azurerm-data-stream_analytics_job",
    "body": [
      "data \"azurerm_stream_analytics_job\" \"test\" {",
      "  name                = \"example-job\"",
      "  resource_group_name = \"example-resources\"",
      "}",
      "",
      "output \"job_id\" {",
      "  value = \"${data.azurerm_stream_analytics_job.test.job_id}\"",
      "}"
    ]
  },
  "azurerm-data-subnet": {
    "description": "Defines subnet",
    "prefix": "tf-azurerm-data-subnet",
    "body": [
      "data \"azurerm_subnet\" \"test\" {",
      "  name                 = \"backend\"",
      "  virtual_network_name = \"production\"",
      "  resource_group_name  = \"networking\"",
      "}",
      "",
      "output \"subnet_id\" {",
      "  value = \"${data.azurerm_subnet.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-subscription": {
    "description": "Defines subscription",
    "prefix": "tf-azurerm-data-subscription",
    "body": [
      "data \"azurerm_subscription\" \"current\" {}",
      "",
      "output \"current_subscription_display_name\" {",
      "  value = \"${data.azurerm_subscription.current.display_name}\"",
      "}"
    ]
  },
  "azurerm-data-subscriptions": {
    "description": "Defines subscriptions",
    "prefix": "tf-azurerm-data-subscriptions",
    "body": [
      "data \"azurerm_subscriptions\" \"available\" {}",
      "",
      "output \"available_subscriptions\" {",
      "  value = \"${data.azurerm_subscriptions.available.subscriptions}\"",
      "}",
      "",
      "output \"first_available_subscription_display_name\" {",
      "  value = \"${data.azurerm_subscriptions.available.subscriptions.0.display_name}\"",
      "}"
    ]
  },
  "azurerm-data-traffic_manager_geographical_location": {
    "description": "Defines traffic_manager_geographical_location",
    "prefix": "tf-azurerm-data-traffic_manager_geographical_location",
    "body": [
      "data \"azurerm_traffic_manager_geographical_location\" \"test\" {",
      "  name = \"World\"",
      "}",
      "",
      "output \"location_code\" {",
      "  value = \"${data.azurerm_traffic_manager_geographical_location.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-user_assigned_identity": {
    "description": "Defines user_assigned_identity",
    "prefix": "tf-azurerm-data-user_assigned_identity",
    "body": [
      "data \"azurerm_user_assigned_identity\" \"example\" {",
      "  name                = \"name_of_user_assigned_identity\"",
      "  resource_group_name = \"name_of_resource_group\"",
      "}",
      "",
      "output \"uai_client_id\" {",
      "  value = \"${data.azurerm_user_assigned_identity.example.client_id}\"",
      "}",
      "",
      "output \"uai_principal_id\" {",
      "  value = \"${data.azurerm_user_assigned_identity.example.principal_id}\"",
      "}"
    ]
  },
  "azurerm-data-virtual_machine": {
    "description": "Defines virtual_machine",
    "prefix": "tf-azurerm-data-virtual_machine",
    "body": [
      "data \"azurerm_virtual_machine\" \"test\" {",
      "  name                = \"production\"",
      "  resource_group_name = \"networking\"",
      "}",
      "",
      "output \"virtual_machine_id\" {",
      "  value = \"${data.azurerm_virtual_machine.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-virtual_network": {
    "description": "Defines virtual_network",
    "prefix": "tf-azurerm-data-virtual_network",
    "body": [
      "data \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"production\"",
      "  resource_group_name = \"networking\"",
      "}",
      "",
      "output \"virtual_network_id\" {",
      "  value = \"${data.azurerm_virtual_network.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-virtual_network_gateway": {
    "description": "Defines virtual_network_gateway",
    "prefix": "tf-azurerm-data-virtual_network_gateway",
    "body": [
      "data \"azurerm_virtual_network_gateway\" \"test\" {",
      "  name                = \"production\"",
      "  resource_group_name = \"networking\"",
      "}",
      "",
      "output \"virtual_network_gateway_id\" {",
      "  value = \"${data.azurerm_virtual_network_gateway.test.id}\"",
      "}"
    ]
  },
  "azurerm-data-virtual_network_gateway_connection": {
    "description": "Defines virtual_network_gateway_connection",
    "prefix": "tf-azurerm-data-virtual_network_gateway_connection",
    "body": [
      "data \"azurerm_virtual_network_gateway_connection\" \"test\" {",
      "  name                = \"production\"",
      "  resource_group_name = \"networking\"",
      "}",
      "",
      "output \"virtual_network_gateway_connection_id\" {",
      "  value = \"${data.azurerm_virtual_network_gateway_connection.test.id}\"",
      "}"
    ]
  },
  "azurerm-resource-analysis_services_server": {
    "description": "Defines analysis_services_server",
    "prefix": "tf-azurerm-resource-analysis_services_server",
    "body": [
      "resource \"azurerm_resource_group\" \"rg\" {",
      "  name     = \"analysis-services-server-test\"",
      "  location = \"northeurope\"",
      "}",
      "",
      "resource \"azurerm_analysis_services_server\" \"server\" {",
      "  name                    = \"analysisservicesserver\"",
      "  location                = \"northeurope\"",
      "  resource_group_name     = \"${azurerm_resource_group.rg.name}\"",
      "  sku                     = \"S0\"",
      "  admin_users             = [\"myuser@domain.tld\"]",
      "  enable_power_bi_service = true",
      "  ",
      "  ipv4_firewall_rule {",
      "    name        = \"myRule1\"",
      "    range_start = \"210.117.252.0\"",
      "    range_end   = \"210.117.252.255\"",
      "  }",
      "  ",
      "  tags = {",
      "    abc = 123",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-api_management": {
    "description": "Defines api_management",
    "prefix": "tf-azurerm-resource-api_management",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_api_management\" \"test\" {",
      "  name                = \"example-apim\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  publisher_name      = \"My Company\"",
      "  publisher_email     = \"company@terraform.io\"",
      "",
      "  sku {",
      "    name     = \"Developer\"",
      "    capacity = 1",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-api_management_api": {
    "description": "Defines api_management_api",
    "prefix": "tf-azurerm-resource-api_management_api",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_api_management\" \"test\" {",
      "  name                = \"example-apim\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  publisher_name      = \"My Company\"",
      "  publisher_email     = \"company@terraform.io\"",
      "",
      "  sku {",
      "    name     = \"Developer\"",
      "    capacity = 1",
      "  }",
      "}",
      "",
      "resource \"azurerm_api_management_api\" \"test\" {",
      "  name                = \"example-api\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  api_management_name = \"${azurerm_api_management.test.name}\"",
      "  revision            = \"1\"",
      "  display_name        = \"Example API\"",
      "  path                = \"example\"",
      "  protocols           = [\"https\"]",
      "",
      "  import {",
      "    content_format = \"swagger-link-json\"",
      "    content_value  = \"http://conferenceapi.azurewebsites.net/?format=json\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-api_management_api_operation": {
    "description": "Defines api_management_api_operation",
    "prefix": "tf-azurerm-resource-api_management_api_operation",
    "body": [
      "data \"azurerm_api_management_api\" \"example\" {",
      "  name                = \"search-api\"",
      "  api_management_name = \"search-api-management\"",
      "  resource_group_name = \"search-service\"",
      "  revision            = \"2\"",
      "}",
      "",
      "resource \"azurerm_api_management_api_operation\" \"example\" {",
      "  operation_id        = \"user-delete\"",
      "  api_name            = \"${data.azurerm_api_management_api.example.name}\"",
      "  api_management_name = \"${data.azurerm_api_management_api.example.api_management_name}\"",
      "  resource_group_name = \"${data.azurerm_api_management_api.example.resource_group_name}\"",
      "  display_name        = \"Delete User Operation\"",
      "  method              = \"DELETE\"",
      "  url_template        = \"/users/{id}/delete\"",
      "  description         = \"This can only be done by the logged in user.\"",
      "",
      "  response {",
      "    status_code = 200",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-api_management_api_operation_policy": {
    "description": "Defines api_management_api_operation_policy",
    "prefix": "tf-azurerm-resource-api_management_api_operation_policy",
    "body": [
      "resource \"azurerm_api_management_api_operation\" \"example\" {",
      "  #...",
      "}",
      "",
      "resource \"azurerm_api_management_api_operation_policy\" \"example\" {",
      "  api_name            = \"${azurerm_api_management_api_operation.example.api_name}\"",
      "  api_management_name = \"${azurerm_api_management_api_operation.example.api_management_name}\"",
      "  resource_group_name = \"${azurerm_api_management_api_operation.example.resource_group_name}\"",
      "  operation_id        = \"${azurerm_api_management_api_operation.example.operation_id}\"",
      "",
      "  xml_content = <<XML",
      "<policies>",
      "  <inbound>",
      "    <find-and-replace from=\"xyz\" to=\"abc\" />",
      "  </inbound>",
      "</policies>",
      "XML",
      "}"
    ]
  },
  "azurerm-resource-api_management_api_policy": {
    "description": "Defines api_management_api_policy",
    "prefix": "tf-azurerm-resource-api_management_api_policy",
    "body": [
      "data \"azurerm_api_management_api\" \"example\" {",
      "  api_name            = \"my-api\"",
      "  api_management_name = \"example-apim\"",
      "  resource_group_name = \"search-service\"",
      "}",
      "",
      "resource \"azurerm_api_management_api_policy\" \"example\" {",
      "  api_name            = \"${data.azurerm_api_management_api.example.name}\"",
      "  api_management_name = \"${data.azurerm_api_management_api.example.api_management_name}\"",
      "  resource_group_name = \"${data.azurerm_api_management_api.example.resource_group_name}\"",
      "",
      "  xml_content = <<XML",
      "<policies>",
      "  <inbound>",
      "    <find-and-replace from=\"xyz\" to=\"abc\" />",
      "  </inbound>",
      "</policies>",
      "XML",
      "}"
    ]
  },
  "azurerm-resource-api_management_api_schema": {
    "description": "Defines api_management_api_schema",
    "prefix": "tf-azurerm-resource-api_management_api_schema",
    "body": [
      "data \"azurerm_api_management_api\" \"example\" {",
      "  name                = \"search-api\"",
      "  api_management_name = \"search-api-management\"",
      "  resource_group_name = \"search-service\"",
      "  revision            = \"2\"",
      "}",
      "",
      "resource \"azurerm_api_management_api_schema\" \"example\" {",
      "  api_name            = \"${data.azurerm_api_management_api.example.name}\"",
      "  api_management_name = \"${data.azurerm_api_management_api.example.api_management_name}\"",
      "  resource_group_name = \"${data.azurerm_api_management_api.example.resource_group_name}\"",
      "  schema_id           = \"example-sche,a\"",
      "  content_type        = \"application/vnd.ms-azure-apim.xsd+xml\"",
      "  value               = \"${file(\"api_management_api_schema.xml\")}\"",
      "}"
    ]
  },
  "azurerm-resource-api_management_api_version_set": {
    "description": "Defines api_management_api_version_set",
    "prefix": "tf-azurerm-resource-api_management_api_version_set",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example-resources\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_api_management\" \"example\" {",
      "  name                = \"example-apim\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  publisher_name      = \"pub1\"",
      "  publisher_email     = \"pub1@email.com\"",
      "",
      "  sku {",
      "    name     = \"Developer\"",
      "    capacity = 1",
      "  }",
      "}",
      "",
      "resource \"azurerm_api_management_version_set\" \"example\" {",
      "  name                = \"example-apimapi-1.0.0\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  api_management_name = \"${azurerm_api_management.example.name}\"",
      "  display_name        = \"ExampleAPIVersionSet\"",
      "  versioning_scheme   = \"Segment\"",
      "}"
    ]
  },
  "azurerm-resource-api_management_authorization_server": {
    "description": "Defines api_management_authorization_server",
    "prefix": "tf-azurerm-resource-api_management_authorization_server",
    "body": [
      "data \"azurerm_api_management_api\" \"example\" {",
      "  name                = \"search-api\"",
      "  api_management_name = \"search-api-management\"",
      "  resource_group_name = \"search-service\"",
      "  revision            = \"2\"",
      "}",
      "",
      "resource \"azurerm_api_management_authorization_server\" \"example\" {",
      "  name                         = \"test-server\"",
      "  api_management_name          = \"${data.azurerm_api_management.example.name}\"",
      "  resource_group_name          = \"${data.azurerm_api_management.example.resource_group_name}\"",
      "  display_name                 = \"Test Server\"",
      "  authorization_endpoint       = \"https://example.mydomain.com/client/authorize\"",
      "  client_id                    = \"42424242-4242-4242-4242-424242424242\"",
      "  client_registration_endpoint = \"https://example.mydomain.com/client/register\"",
      "",
      "  grant_types = [",
      "    \"authorizationCode\",",
      "  ]",
      "}"
    ]
  },
  "azurerm-resource-api_management_backend": {
    "description": "Defines api_management_backend",
    "prefix": "tf-azurerm-resource-api_management_backend",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_api_management\" \"test\" {",
      "  name                = \"example-apim\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  publisher_name      = \"My Company\"",
      "  publisher_email     = \"company@terraform.io\"",
      "",
      "  sku {",
      "    name     = \"Developer\"",
      "    capacity = 1",
      "  }",
      "}",
      "",
      "resource \"azurerm_api_management_backend\" \"test\" {",
      "  name                = \"example-backend\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  api_management_name = \"${azurerm_api_management.test.name}\"",
      "  protocol            = \"http\"",
      "  url                 = \"https://backend\"",
      "}"
    ]
  },
  "azurerm-resource-api_management_certificate": {
    "description": "Defines api_management_certificate",
    "prefix": "tf-azurerm-resource-api_management_certificate",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_api_management\" \"test\" {",
      "  name                = \"example-apim\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  publisher_name      = \"My Company\"",
      "  publisher_email     = \"company@terraform.io\"",
      "",
      "  sku {",
      "    name     = \"Developer\"",
      "    capacity = 1",
      "  }",
      "}",
      "",
      "resource \"azurerm_api_management_certificate\" \"test\" {",
      "  name                = \"example-cert\"",
      "  api_management_name = \"${azurerm_api_management.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  data                = \"${filebase64(\"example.pfx\")}\"",
      "}"
    ]
  },
  "azurerm-resource-api_management_group": {
    "description": "Defines api_management_group",
    "prefix": "tf-azurerm-resource-api_management_group",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example-resources\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_api_management\" \"example\" {",
      "  name                = \"example-apim\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  publisher_name      = \"pub1\"",
      "  publisher_email     = \"pub1@email.com\"",
      "",
      "  sku {",
      "    name     = \"Developer\"",
      "    capacity = 1",
      "  }",
      "}",
      "",
      "resource \"azurerm_api_management_group\" \"example\" {",
      "  name                = \"example-apimg\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  api_management_name = \"${azurerm_api_management.example.name}\"",
      "  display_name        = \"Example Group\"",
      "  description         = \"This is an example API management group.\"",
      "}"
    ]
  },
  "azurerm-resource-api_management_group_user": {
    "description": "Defines api_management_group_user",
    "prefix": "tf-azurerm-resource-api_management_group_user",
    "body": [
      "data \"azurerm_api_management_user\" \"example\" {",
      "  user_id             = \"my-user\"",
      "  api_management_name = \"example-apim\"",
      "  resource_group_name = \"search-service\"",
      "}",
      "",
      "resource \"azurerm_api_management_group_user\" \"example\" {",
      "  user_id             = \"${data.azurerm_api_management_user.example.id}\"",
      "  group_name          = \"example-group\"",
      "  resource_group_name = \"${data.azurerm_api_management_user.example.resource_group_name}\"",
      "  api_management_name = \"${data.azurerm_api_management_user.example.api_management_name}\"",
      "}"
    ]
  },
  "azurerm-resource-api_management_logger": {
    "description": "Defines api_management_logger",
    "prefix": "tf-azurerm-resource-api_management_logger",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example-resources\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_application_insights\" \"example\" {",
      "  name                = \"example-appinsights\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  application_type    = \"Other\"",
      "}",
      "",
      "resource \"azurerm_api_management\" \"example\" {",
      "  name                = \"example-apim\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  publisher_name      = \"My Company\"",
      "  publisher_email     = \"company@terraform.io\"",
      "",
      "  sku {",
      "    name     = \"Developer\"",
      "    capacity = 1",
      "  }",
      "}",
      "",
      "resource \"azurerm_api_management_logger\" \"example\" {",
      "  name                = \"example-logger\"",
      "  api_management_name = \"${azurerm_api_management.example.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "",
      "  application_insights {",
      "    instrumentation_key = \"${azurerm_application_insights.example.instrumentation_key}\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-api_management_openid_connect_provider": {
    "description": "Defines api_management_openid_connect_provider",
    "prefix": "tf-azurerm-resource-api_management_openid_connect_provider",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_api_management\" \"test\" {",
      "  name                = \"example-apim\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  publisher_name      = \"My Company\"",
      "  publisher_email     = \"company@terraform.io\"",
      "",
      "  sku {",
      "    name     = \"Developer\"",
      "    capacity = 1",
      "  }",
      "}",
      "",
      "resource \"azurerm_api_management_openid_connect_provider\" \"test\" {",
      "  name                = \"example-provider\"",
      "  api_management_name = \"${azurerm_api_management.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  client_id           = \"00001111-2222-3333-4444-555566667777\"",
      "  display_name        = \"Example Provider\"",
      "  metadata_endpoint   = \"https://example.com/example\"",
      "}"
    ]
  },
  "azurerm-resource-api_management_product": {
    "description": "Defines api_management_product",
    "prefix": "tf-azurerm-resource-api_management_product",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_api_management\" \"test\" {",
      "  name                = \"example-apim\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  publisher_name      = \"My Company\"",
      "  publisher_email     = \"company@terraform.io\"",
      "",
      "  sku {",
      "    name     = \"Developer\"",
      "    capacity = 1",
      "  }",
      "}",
      "",
      "resource \"azurerm_api_management_product\" \"test\" {",
      "  product_id            = \"test-product\"",
      "  api_management_name   = \"${azurerm_api_management.test.name}\"",
      "  resource_group_name   = \"${azurerm_resource_group.test.name}\"",
      "  display_name          = \"Test Product\"",
      "  subscription_required = true",
      "  approval_required     = true",
      "  published             = true",
      "}"
    ]
  },
  "azurerm-resource-api_management_product_api": {
    "description": "Defines api_management_product_api",
    "prefix": "tf-azurerm-resource-api_management_product_api",
    "body": [
      "data \"azurerm_api_management\" \"example\" {",
      "  name                = \"example-api\"",
      "  resource_group_name = \"example-resources\"",
      "}",
      "",
      "data \"azurerm_api_management_api\" \"example\" {",
      "  name                = \"search-api\"",
      "  api_management_name = \"${data.azurerm_api_management.example.name}\"",
      "  resource_group_name = \"${data.azurerm_api_management.example.resource_group_name}\"",
      "  revision            = \"2\"",
      "}",
      "",
      "data \"azurerm_api_management_product\" \"test\" {",
      "  product_id          = \"my-product\"",
      "  api_management_name = \"${data.azurerm_api_management.example.name}\"",
      "  resource_group_name = \"${data.azurerm_api_management.example.resource_group_name}\"",
      "}",
      "",
      "resource \"azurerm_api_management_product_api\" \"example\" {",
      "  api_name            = \"${data.azurerm_api_management_api.example.name}\"",
      "  product_id          = \"${data.azurerm_api_management_product.example.product_id}\"",
      "  api_management_name = \"${data.azurerm_api_management.example.name}\"",
      "  resource_group_name = \"${data.azurerm_api_management.example.resource_group_name}\"",
      "}"
    ]
  },
  "azurerm-resource-api_management_product_group": {
    "description": "Defines api_management_product_group",
    "prefix": "tf-azurerm-resource-api_management_product_group",
    "body": [
      "data \"azurerm_api_management\" \"example\" {",
      "  name                = \"example-api\"",
      "  resource_group_name = \"example-resources\"",
      "}",
      "",
      "data \"azurerm_api_management_product\" \"example\" {",
      "  product_id          = \"my-product\"",
      "  api_management_name = \"${data.azurerm_api_management.example.name}\"",
      "  resource_group_name = \"${data.azurerm_api_management.example.resource_group_name}\"",
      "}",
      "",
      "data \"azurerm_api_management_group\" \"example\" {",
      "  name                = \"my-group\"",
      "  api_management_name = \"${data.azurerm_api_management.example.name}\"",
      "  resource_group_name = \"${data.azurerm_api_management.example.resource_group_name}\"",
      "}",
      "",
      "resource \"azurerm_api_management_product_group\" \"example\" {",
      "  product_id          = \"${data.azurerm_api_management_user.example.id}\"",
      "  group_name          = \"${data.azurerm_api_management_group.example.name}\"",
      "  api_management_name = \"${data.azurerm_api_management.example.name}\"",
      "  resource_group_name = \"${data.azurerm_api_management.example.resource_group_name}\"",
      "}"
    ]
  },
  "azurerm-resource-api_management_product_policy": {
    "description": "Defines api_management_product_policy",
    "prefix": "tf-azurerm-resource-api_management_product_policy",
    "body": [
      "data \"azurerm_api_management_product\" \"example\" {",
      "  product_id          = \"my-product\"",
      "  api_management_name = \"example-apim\"",
      "  resource_group_name = \"search-service\"",
      "}",
      "",
      "resource \"azurerm_api_management_product_policy\" \"example\" {",
      "  product_id          = \"${data.azurerm_api_management_product.example.product_id}\"",
      "  api_management_name = \"${data.azurerm_api_management_product.example.api_management_name}\"",
      "  resource_group_name = \"${data.azurerm_api_management_product.example.resource_group_name}\"",
      "",
      "  xml_content = <<XML",
      "<policies>",
      "  <inbound>",
      "    <find-and-replace from=\"xyz\" to=\"abc\" />",
      "  </inbound>",
      "</policies>",
      "XML",
      "}"
    ]
  },
  "azurerm-resource-api_management_property": {
    "description": "Defines api_management_property",
    "prefix": "tf-azurerm-resource-api_management_property",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example-resources\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_api_management\" \"example\" {",
      "  name                = \"example-apim\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  publisher_name      = \"pub1\"",
      "  publisher_email     = \"pub1@email.com\"",
      "",
      "  sku {",
      "    name     = \"Developer\"",
      "    capacity = 1",
      "  }",
      "}",
      "",
      "resource \"azurerm_api_management_property\" \"example\" {",
      "  name                = \"example-apimg\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  api_management_name = \"${azurerm_api_management.example.name}\"",
      "  display_name        = \"ExampleProperty\"",
      "  value               = \"Example Value\"",
      "}"
    ]
  },
  "azurerm-resource-api_management_subscription": {
    "description": "Defines api_management_subscription",
    "prefix": "tf-azurerm-resource-api_management_subscription",
    "body": [
      "data \"azurerm_api_management\" \"test\" {",
      "  name                = \"example-apim\"",
      "  resource_group_name = \"example-resources\"",
      "}",
      "",
      "data \"azurerm_api_management_product\" \"test\" {",
      "  product_id          = \"00000000-0000-0000-0000-000000000000\"",
      "  api_management_name = \"${data.azurerm_api_management.test.name}\"",
      "  resource_group_name = \"${data.azurerm_api_management.test.resource_group_name}\"",
      "}",
      "",
      "data \"azurerm_api_management_user\" \"test\" {",
      "  user_id             = \"11111111-1111-1111-1111-111111111111\"",
      "  api_management_name = \"${data.azurerm_api_management.test.name}\"",
      "  resource_group_name = \"${data.azurerm_api_management.test.resource_group_name}\"",
      "}",
      "",
      "resource \"azurerm_api_management_subscription\" \"test\" {",
      "  api_management_name = \"${data.azurerm_api_management.test.name}\"",
      "  resource_group_name = \"${data.azurerm_api_management.test.resource_group_name}\"",
      "  user_id             = \"${data.azurerm_api_management_user.test.id}\"",
      "  product_id          = \"${data.azurerm_api_management_product.test.id}\"",
      "  display_name        = \"Parser API\"",
      "}"
    ]
  },
  "azurerm-resource-api_management_user": {
    "description": "Defines api_management_user",
    "prefix": "tf-azurerm-resource-api_management_user",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_api_management\" \"test\" {",
      "  name                = \"example-apim\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  publisher_name      = \"My Company\"",
      "  publisher_email     = \"company@terraform.io\"",
      "",
      "  sku {",
      "    name     = \"Developer\"",
      "    capacity = 1",
      "  }",
      "}",
      "",
      "resource \"azurerm_api_management_user\" \"test\" {",
      "  user_id             = \"5931a75ae4bbd512288c680b\"",
      "  api_management_name = \"${azurerm_api_management.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  first_name          = \"Example\"",
      "  last_name           = \"User\"",
      "  email               = \"tom+tfdev@hashicorp.com\"",
      "  state               = \"active\"",
      "}"
    ]
  },
  "azurerm-resource-app_service": {
    "description": "Defines app_service",
    "prefix": "tf-azurerm-resource-app_service",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_app_service_plan\" \"test\" {",
      "  name                = \"example-appserviceplan\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  sku {",
      "    tier = \"Standard\"",
      "    size = \"S1\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_app_service\" \"test\" {",
      "  name                = \"example-app-service\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  app_service_plan_id = \"${azurerm_app_service_plan.test.id}\"",
      "",
      "  site_config {",
      "    dotnet_framework_version = \"v4.0\"",
      "    scm_type                 = \"LocalGit\"",
      "  }",
      "",
      "  app_settings = {",
      "    \"SOME_KEY\" = \"some-value\"",
      "  }",
      "",
      "  connection_string {",
      "    name  = \"Database\"",
      "    type  = \"SQLServer\"",
      "    value = \"Server=some-server.mydomain.com;Integrated Security=SSPI\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-app_service_active_slot": {
    "description": "Defines app_service_active_slot",
    "prefix": "tf-azurerm-resource-app_service_active_slot",
    "body": [
      "resource \"random_id\" \"server\" {",
      "  # ...",
      "}",
      "",
      "resource \"azurerm_resource_group\" \"test\" {",
      "  # ...",
      "}",
      "",
      "resource \"azurerm_app_service_plan\" \"test\" {",
      "  # ...",
      "}",
      "",
      "resource \"azurerm_app_service\" \"test\" {",
      "  # ...",
      "}",
      "",
      "resource \"azurerm_app_service_slot\" \"test\" {",
      "  # ...",
      "}",
      "",
      "resource \"azurerm_app_service_active_slot\" \"test\" {",
      "  resource_group_name   = \"${azurerm_resource_group.test.name}\"",
      "  app_service_name      = \"${azurerm_app_service.test.name}\"",
      "  app_service_slot_name = \"${azurerm_app_service_slot.test.name}\"",
      "}"
    ]
  },
  "azurerm-resource-app_service_custom_hostname_binding": {
    "description": "Defines app_service_custom_hostname_binding",
    "prefix": "tf-azurerm-resource-app_service_custom_hostname_binding",
    "body": [
      "resource \"random_id\" \"server\" {",
      "  keepers = {",
      "    azi_id = 1",
      "  }",
      "",
      "  byte_length = 8",
      "}",
      "",
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"some-resource-group\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_app_service_plan\" \"test\" {",
      "  name                = \"some-app-service-plan\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  sku {",
      "    tier = \"Standard\"",
      "    size = \"S1\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_app_service\" \"test\" {",
      "  name                = \"${random_id.server.hex}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  app_service_plan_id = \"${azurerm_app_service_plan.test.id}\"",
      "}",
      "",
      "resource \"azurerm_app_service_custom_hostname_binding\" \"test\" {",
      "  hostname            = \"www.mywebsite.com\"",
      "  app_service_name    = \"${azurerm_app_service.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}"
    ]
  },
  "azurerm-resource-app_service_plan": {
    "description": "Defines app_service_plan",
    "prefix": "tf-azurerm-resource-app_service_plan",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"api-rg-pro\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_app_service_plan\" \"test\" {",
      "  name                = \"api-appserviceplan-pro\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  sku {",
      "    tier = \"Standard\"",
      "    size = \"S1\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-app_service_slot": {
    "description": "Defines app_service_slot",
    "prefix": "tf-azurerm-resource-app_service_slot",
    "body": [
      "resource \"random_id\" \"server\" {",
      "  keepers = {",
      "    azi_id = 1",
      "  }",
      "",
      "  byte_length = 8",
      "}",
      "",
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"some-resource-group\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_app_service_plan\" \"test\" {",
      "  name                = \"some-app-service-plan\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  sku {",
      "    tier = \"Standard\"",
      "    size = \"S1\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_app_service\" \"test\" {",
      "  name                = \"${random_id.server.hex}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  app_service_plan_id = \"${azurerm_app_service_plan.test.id}\"",
      "",
      "  site_config {",
      "    dotnet_framework_version = \"v4.0\"",
      "  }",
      "",
      "  app_settings = {",
      "    \"SOME_KEY\" = \"some-value\"",
      "  }",
      "",
      "  connection_string {",
      "    name  = \"Database\"",
      "    type  = \"SQLServer\"",
      "    value = \"Server=some-server.mydomain.com;Integrated Security=SSPI\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_app_service_slot\" \"test\" {",
      "  name                = \"${random_id.server.hex}\"",
      "  app_service_name    = \"${azurerm_app_service.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  app_service_plan_id = \"${azurerm_app_service_plan.test.id}\"",
      "",
      "  site_config {",
      "    dotnet_framework_version = \"v4.0\"",
      "  }",
      "",
      "  app_settings = {",
      "    \"SOME_KEY\" = \"some-value\"",
      "  }",
      "",
      "  connection_string {",
      "    name  = \"Database\"",
      "    type  = \"SQLServer\"",
      "    value = \"Server=some-server.mydomain.com;Integrated Security=SSPI\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-application_gateway": {
    "description": "Defines application_gateway",
    "prefix": "tf-azurerm-resource-application_gateway",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"example-network\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  address_space       = [\"10.254.0.0/16\"]",
      "}",
      "",
      "resource \"azurerm_subnet\" \"frontend\" {",
      "  name                 = \"frontend\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.254.0.0/24\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"backend\" {",
      "  name                 = \"backend\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.254.2.0/24\"",
      "}",
      "",
      "resource \"azurerm_public_ip\" \"test\" {",
      "  name                = \"example-pip\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  allocation_method   = \"Dynamic\"",
      "}",
      "",
      "# since these variables are re-used - a locals block makes this more maintainable",
      "locals {",
      "  backend_address_pool_name      = \"${azurerm_virtual_network.test.name}-beap\"",
      "  frontend_port_name             = \"${azurerm_virtual_network.test.name}-feport\"",
      "  frontend_ip_configuration_name = \"${azurerm_virtual_network.test.name}-feip\"",
      "  http_setting_name              = \"${azurerm_virtual_network.test.name}-be-htst\"",
      "  listener_name                  = \"${azurerm_virtual_network.test.name}-httplstn\"",
      "  request_routing_rule_name      = \"${azurerm_virtual_network.test.name}-rqrt\"",
      "  redirect_configuration_name    = \"${azurerm_virtual_network.test.name}-rdrcfg\"",
      "}",
      "",
      "resource \"azurerm_application_gateway\" \"network\" {",
      "  name                = \"example-appgateway\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "",
      "  sku {",
      "    name     = \"Standard_Small\"",
      "    tier     = \"Standard\"",
      "    capacity = 2",
      "  }",
      "",
      "  gateway_ip_configuration {",
      "    name      = \"my-gateway-ip-configuration\"",
      "    subnet_id = \"${azurerm_subnet.frontend.id}\"",
      "  }",
      "",
      "  frontend_port {",
      "    name = \"${local.frontend_port_name}\"",
      "    port = 80",
      "  }",
      "",
      "  frontend_ip_configuration {",
      "    name                 = \"${local.frontend_ip_configuration_name}\"",
      "    public_ip_address_id = \"${azurerm_public_ip.test.id}\"",
      "  }",
      "",
      "  backend_address_pool {",
      "    name = \"${local.backend_address_pool_name}\"",
      "  }",
      "",
      "  backend_http_settings {",
      "    name                  = \"${local.http_setting_name}\"",
      "    cookie_based_affinity = \"Disabled\"",
      "    path                  = \"/path1/\"",
      "    port                  = 80",
      "    protocol              = \"Http\"",
      "    request_timeout       = 1",
      "  }",
      "",
      "  http_listener {",
      "    name                           = \"${local.listener_name}\"",
      "    frontend_ip_configuration_name = \"${local.frontend_ip_configuration_name}\"",
      "    frontend_port_name             = \"${local.frontend_port_name}\"",
      "    protocol                       = \"Http\"",
      "  }",
      "",
      "  request_routing_rule {",
      "    name                       = \"${local.request_routing_rule_name}\"",
      "    rule_type                  = \"Basic\"",
      "    http_listener_name         = \"${local.listener_name}\"",
      "    backend_address_pool_name  = \"${local.backend_address_pool_name}\"",
      "    backend_http_settings_name = \"${local.http_setting_name}\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-application_insights": {
    "description": "Defines application_insights",
    "prefix": "tf-azurerm-resource-application_insights",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"tf-test\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_application_insights\" \"test\" {",
      "  name                = \"tf-test-appinsights\"",
      "  location            = \"West Europe\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  application_type    = \"web\"",
      "}",
      "",
      "output \"instrumentation_key\" {",
      "  value = \"${azurerm_application_insights.test.instrumentation_key}\"",
      "}",
      "",
      "output \"app_id\" {",
      "  value = \"${azurerm_application_insights.test.app_id}\"",
      "}"
    ]
  },
  "azurerm-resource-application_insights_api_key": {
    "description": "Defines application_insights_api_key",
    "prefix": "tf-azurerm-resource-application_insights_api_key",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"tf-test\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_application_insights\" \"test\" {",
      "  name                = \"tf-test-appinsights\"",
      "  location            = \"West Europe\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  application_type    = \"web\"",
      "}",
      "",
      "resource \"azurerm_application_insights_api_key\" \"read_telemetry\" {",
      "  name                    = \"tf-test-appinsights-read-telemetry-api-key\"",
      "  application_insights_id = \"${azurerm_application_insights.test.id}\"",
      "  read_permissions        = [\"aggregate\", \"api\", \"draft\", \"extendqueries\", \"search\"]",
      "}",
      "",
      "resource \"azurerm_application_insights_api_key\" \"write_annotations\" {",
      "  name                    = \"tf-test-appinsights-write-annotations-api-key\"",
      "  application_insights_id = \"${azurerm_application_insights.test.id}\"",
      "  write_permissions       = [\"annotations\"]",
      "}",
      "",
      "resource \"azurerm_application_insights_api_key\" \"authenticate_sdk_control_channel\" {",
      "  name                    = \"tf-test-appinsights-authenticate-sdk-control-channel-api-key\"",
      "  application_insights_id = \"${azurerm_application_insights.test.id}\"",
      "  read_permissions        = [\"agentconfig\"]",
      "}",
      "",
      "resource \"azurerm_application_insights_api_key\" \"full_permissions\" {",
      "  name                    = \"tf-test-appinsights-full-permissions-api-key\"",
      "  application_insights_id = \"${azurerm_application_insights.test.id}\"",
      "  read_permissions        = [\"agentconfig\", \"aggregate\", \"api\", \"draft\", \"extendqueries\", \"search\"]",
      "  write_permissions       = [\"annotations\"]",
      "}",
      "",
      "output \"read_telemetry_api_key\" {",
      "  value = \"${azurerm_application_insights_api_key.read_telemetry.api_key}\"",
      "}",
      "",
      "output \"write_annotations_api_key\" {",
      "  value = \"${azurerm_application_insights_api_key.write_annotations.api_key}\"",
      "}",
      "",
      "output \"authenticate_sdk_control_channel\" {",
      "  value = \"${azurerm_application_insights_api_key.authenticate_sdk_control_channel.api_key}\"",
      "}",
      "",
      "output \"full_permissions_api_key\" {",
      "  value = \"${azurerm_application_insights_api_key.full_permissions.api_key}\"",
      "}"
    ]
  },
  "azurerm-resource-application_insights_web_test": {
    "description": "Defines application_insights_web_test",
    "prefix": "tf-azurerm-resource-application_insights_web_test",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"tf-test\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_application_insights\" \"test\" {",
      "  name                = \"tf-test-appinsights\"",
      "  location            = \"West Europe\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  application_type    = \"web\"",
      "}",
      "",
      "resource \"azurerm_application_insights_web_test\" \"test\" {",
      "  name                    = \"tf-test-appinsights-webtest\"",
      "  location                = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name     = \"${azurerm_resource_group.test.name}\"",
      "  application_insights_id = \"${azurerm_application_insights.test.id}\"",
      "  kind                    = \"ping\"",
      "  frequency               = 300",
      "  timeout                 = 60",
      "  enabled                 = true",
      "  geo_locations           = [\"us-tx-sn1-azr\", \"us-il-ch1-azr\"]",
      "",
      "  configuration = <<XML",
      "<WebTest Name=\"WebTest1\" Id=\"ABD48585-0831-40CB-9069-682EA6BB3583\" Enabled=\"True\" CssProjectStructure=\"\" CssIteration=\"\" Timeout=\"0\" WorkItemIds=\"\" xmlns=\"http://microsoft.com/schemas/VisualStudio/TeamTest/2010\" Description=\"\" CredentialUserName=\"\" CredentialPassword=\"\" PreAuthenticate=\"True\" Proxy=\"default\" StopOnError=\"False\" RecordedResultFile=\"\" ResultsLocale=\"\">",
      "  <Items>",
      "    <Request Method=\"GET\" Guid=\"a5f10126-e4cd-570d-961c-cea43999a200\" Version=\"1.1\" Url=\"http://microsoft.com\" ThinkTime=\"0\" Timeout=\"300\" ParseDependentRequests=\"True\" FollowRedirects=\"True\" RecordResult=\"True\" Cache=\"False\" ResponseTimeGoal=\"0\" Encoding=\"utf-8\" ExpectedHttpStatusCode=\"200\" ExpectedResponseUrl=\"\" ReportingName=\"\" IgnoreHttpStatusCode=\"False\" />",
      "  </Items>",
      "</WebTest>",
      "XML",
      "}",
      "",
      "output \"webtest_id\" {",
      "  value = \"${azurerm_application_insights_web_test.test.id}\"",
      "}",
      "",
      "output \"webtest_provisioning_state\" {",
      "  value = \"${azurerm_application_insights_web_test.test.provisioning_state}\"",
      "}",
      "",
      "output \"webtests_synthetic_id\" {",
      "  value = \"${azurerm_application_insights_web_test.test.synthetic_monitor_id}\"",
      "}"
    ]
  },
  "azurerm-resource-application_insights_web_tests": {
    "description": "Defines application_insights_web_tests",
    "prefix": "tf-azurerm-resource-application_insights_web_tests",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"tf-test\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_application_insights\" \"test\" {",
      "  name                = \"tf-test-appinsights\"",
      "  location            = \"West Europe\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  application_type    = \"web\"",
      "}",
      "",
      "resource \"azurerm_application_insights_web_test\" \"test\" {",
      "  name                    = \"tf-test-appinsights-webtest\"",
      "  location                = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name     = \"${azurerm_resource_group.test.name}\"",
      "  application_insights_id = \"${azurerm_application_insights.test.id}\"",
      "  kind                    = \"ping\"",
      "  frequency               = 300",
      "  timeout                 = 60",
      "  enabled                 = true",
      "  geo_locations           = [\"us-tx-sn1-azr\", \"us-il-ch1-azr\"]",
      "",
      "  configuration = <<XML",
      "<WebTest Name=\"WebTest1\" Id=\"ABD48585-0831-40CB-9069-682EA6BB3583\" Enabled=\"True\" CssProjectStructure=\"\" CssIteration=\"\" Timeout=\"0\" WorkItemIds=\"\" xmlns=\"http://microsoft.com/schemas/VisualStudio/TeamTest/2010\" Description=\"\" CredentialUserName=\"\" CredentialPassword=\"\" PreAuthenticate=\"True\" Proxy=\"default\" StopOnError=\"False\" RecordedResultFile=\"\" ResultsLocale=\"\">",
      "  <Items>",
      "    <Request Method=\"GET\" Guid=\"a5f10126-e4cd-570d-961c-cea43999a200\" Version=\"1.1\" Url=\"http://microsoft.com\" ThinkTime=\"0\" Timeout=\"300\" ParseDependentRequests=\"True\" FollowRedirects=\"True\" RecordResult=\"True\" Cache=\"False\" ResponseTimeGoal=\"0\" Encoding=\"utf-8\" ExpectedHttpStatusCode=\"200\" ExpectedResponseUrl=\"\" ReportingName=\"\" IgnoreHttpStatusCode=\"False\" />",
      "  </Items>",
      "</WebTest>",
      "XML",
      "}",
      "",
      "output \"webtest_id\" {",
      "  value = \"${azurerm_application_insights_web_test.test.id}\"",
      "}",
      "",
      "output \"webtest_provisioning_state\" {",
      "  value = \"${azurerm_application_insights_web_test.test.provisioning_state}\"",
      "}",
      "",
      "output \"webtests_synthetic_id\" {",
      "  value = \"${azurerm_application_insights_web_test.test.synthetic_monitor_id}\"",
      "}"
    ]
  },
  "azurerm-resource-application_security_group": {
    "description": "Defines application_security_group",
    "prefix": "tf-azurerm-resource-application_security_group",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"tf-test\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_application_security_group\" \"test\" {",
      "  name                = \"tf-appsecuritygroup\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  tags = {",
      "    Hello = \"World\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-automation_account": {
    "description": "Defines automation_account",
    "prefix": "tf-azurerm-resource-automation_account",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_automation_account\" \"example\" {",
      "  name                = \"automationAccount1\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "",
      "  sku_name = \"Basic\"",
      "  ",
      "  tags = {",
      "    environment = \"development\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-automation_credential": {
    "description": "Defines automation_credential",
    "prefix": "tf-azurerm-resource-automation_credential",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_automation_account\" \"example\" {",
      "  name                = \"account1\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "",
      "  sku {",
      "    name = \"Basic\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_automation_credential\" \"example\" {",
      "  name                = \"credential1\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  account_name        = \"${azurerm_automation_account.example.name}\"",
      "  username            = \"example_user\"",
      "  password            = \"example_pwd\"",
      "  description         = \"This is an example credential\"",
      "}"
    ]
  },
  "azurerm-resource-automation_dsc_configuration": {
    "description": "Defines automation_dsc_configuration",
    "prefix": "tf-azurerm-resource-automation_dsc_configuration",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_automation_account\" \"example\" {",
      "  name                = \"account1\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "",
      "  sku {",
      "    name = \"Basic\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_automation_dsc_configuration\" \"example\" {",
      "  name                    = \"test\"",
      "  resource_group_name     = \"${azurerm_resource_group.example.name}\"",
      "  automation_account_name = \"${azurerm_automation_account.example.name}\"",
      "  location                = \"${azurerm_resource_group.example.location}\"",
      "  content_embedded        = \"configuration test {}\"",
      "}"
    ]
  },
  "azurerm-resource-automation_dsc_nodeconfiguration": {
    "description": "Defines automation_dsc_nodeconfiguration",
    "prefix": "tf-azurerm-resource-automation_dsc_nodeconfiguration",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_automation_account\" \"example\" {",
      "  name                = \"account1\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "",
      "  sku {",
      "    name = \"Basic\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_automation_dsc_configuration\" \"example\" {",
      "  name                    = \"test\"",
      "  resource_group_name     = \"${azurerm_resource_group.example.name}\"",
      "  automation_account_name = \"${azurerm_automation_account.example.name}\"",
      "  location                = \"${azurerm_resource_group.example.location}\"",
      "  content_embedded        = \"configuration test {}\"",
      "}",
      "",
      "resource \"azurerm_automation_dsc_nodeconfiguration\" \"example\" {",
      "  name                    = \"test.localhost\"",
      "  resource_group_name     = \"${azurerm_resource_group.example.name}\"",
      "  automation_account_name = \"${azurerm_automation_account.example.name}\"",
      "  depends_on              = [\"azurerm_automation_dsc_configuration.example\"]",
      "",
      "  content_embedded = <<mofcontent",
      "instance of MSFT_FileDirectoryConfiguration as $MSFT_FileDirectoryConfiguration1ref",
      "{",
      "  ResourceID = \"[File]bla\";",
      "  Ensure = \"Present\";",
      "  Contents = \"bogus Content\";",
      "  DestinationPath = \"c:\\\\bogus.txt\";",
      "  ModuleName = \"PSDesiredStateConfiguration\";",
      "  SourceInfo = \"::3::9::file\";",
      "  ModuleVersion = \"1.0\";",
      "  ConfigurationName = \"bla\";",
      "};",
      "instance of OMI_ConfigurationDocument",
      "{",
      "  Version=\"2.0.0\";",
      "  MinimumCompatibleVersion = \"1.0.0\";",
      "  CompatibleVersionAdditionalProperties= {\"Omi_BaseResource:ConfigurationName\"};",
      "  Author=\"bogusAuthor\";",
      "  GenerationDate=\"06/15/2018 14:06:24\";",
      "  GenerationHost=\"bogusComputer\";",
      "  Name=\"test\";",
      "};",
      "mofcontent",
      "}"
    ]
  },
  "azurerm-resource-automation_module": {
    "description": "Defines automation_module",
    "prefix": "tf-azurerm-resource-automation_module",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_automation_account\" \"example\" {",
      "  name                = \"account1\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "",
      "  sku {",
      "    name = \"Basic\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_automation_module\" \"example\" {",
      "  name                    = \"xActiveDirectory\"",
      "  resource_group_name     = \"${azurerm_resource_group.example.name}\"",
      "  automation_account_name = \"${azurerm_automation_account.example.name}\"",
      "",
      "  module_link {",
      "    uri = \"https://devopsgallerystorage.blob.core.windows.net/packages/xactivedirectory.2.19.0.nupkg\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-automation_runbook": {
    "description": "Defines automation_runbook",
    "prefix": "tf-azurerm-resource-automation_runbook",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_automation_account\" \"example\" {",
      "  name                = \"account1\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "",
      "  sku {",
      "    name = \"Basic\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_automation_runbook\" \"example\" {",
      "  name                = \"Get-AzureVMTutorial\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  account_name        = \"${azurerm_automation_account.example.name}\"",
      "  log_verbose         = \"true\"",
      "  log_progress        = \"true\"",
      "  description         = \"This is an example runbook\"",
      "  runbook_type        = \"PowerShellWorkflow\"",
      "",
      "  publish_content_link {",
      "    uri = \"https://raw.githubusercontent.com/Azure/azure-quickstart-templates/master/101-automation-runbook-getvms/Runbooks/Get-AzureVMTutorial.ps1\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-automation_schedule": {
    "description": "Defines automation_schedule",
    "prefix": "tf-azurerm-resource-automation_schedule",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"tfex-automation-account\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_automation_account\" \"example\" {",
      "  name                = \"tfex-automation-account\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "",
      "  sku {",
      "    name = \"Basic\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_automation_schedule\" \"example\" {",
      "  name                    = \"tfex-automation-schedule\"",
      "  resource_group_name     = \"${azurerm_resource_group.example.name}\"",
      "  automation_account_name = \"${azurerm_automation_account.example.name}\"",
      "  frequency               = \"Week\"",
      "  interval                = 1",
      "  timezone                = \"Central Europe Standard Time\"",
      "  start_time              = \"2014-04-15T18:00:15+02:00\"",
      "  description             = \"This is an example schedule\"",
      "  week_days               = [\"Friday\"]",
      "}"
    ]
  },
  "azurerm-resource-automation_variable_bool": {
    "description": "Defines automation_variable_bool",
    "prefix": "tf-azurerm-resource-automation_variable_bool",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"tfex-example-rg\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_automation_account\" \"example\" {",
      "  name                = \"tfex-example-account\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "",
      "  sku {",
      "    name = \"Basic\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_automation_variable_bool\" \"example\" {",
      "  name                    = \"tfex-example-var\"",
      "  resource_group_name     = \"${azurerm_resource_group.example.name}\"",
      "  automation_account_name = \"${azurerm_automation_account.example.name}\"",
      "  value                   = false",
      "}"
    ]
  },
  "azurerm-resource-automation_variable_datetime": {
    "description": "Defines automation_variable_datetime",
    "prefix": "tf-azurerm-resource-automation_variable_datetime",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"tfex-example-rg\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_automation_account\" \"example\" {",
      "  name                = \"tfex-example-account\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "",
      "  sku {",
      "    name = \"Basic\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_automation_variable_datetime\" \"example\" {",
      "  name                    = \"tfex-example-var\"",
      "  resource_group_name     = \"${azurerm_resource_group.example.name}\"",
      "  automation_account_name = \"${azurerm_automation_account.example.name}\"",
      "  value                   = \"2019-04-24T21:40:54.074Z\"",
      "}"
    ]
  },
  "azurerm-resource-automation_variable_int": {
    "description": "Defines automation_variable_int",
    "prefix": "tf-azurerm-resource-automation_variable_int",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"tfex-example-rg\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_automation_account\" \"example\" {",
      "  name                = \"tfex-example-account\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "",
      "  sku {",
      "    name = \"Basic\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_automation_variable_int\" \"example\" {",
      "  name                    = \"tfex-example-var\"",
      "  resource_group_name     = \"${azurerm_resource_group.example.name}\"",
      "  automation_account_name = \"${azurerm_automation_account.example.name}\"",
      "  value                   = 1234",
      "}"
    ]
  },
  "azurerm-resource-automation_variable_string": {
    "description": "Defines automation_variable_string",
    "prefix": "tf-azurerm-resource-automation_variable_string",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"tfex-example-rg\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_automation_account\" \"example\" {",
      "  name                = \"tfex-example-account\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "",
      "  sku {",
      "    name = \"Basic\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_automation_variable_string\" \"example\" {",
      "  name                    = \"tfex-example-var\"",
      "  resource_group_name     = \"${azurerm_resource_group.example.name}\"",
      "  automation_account_name = \"${azurerm_automation_account.example.name}\"",
      "  value                   = \"Hello, Terraform Basic Test.\"",
      "}"
    ]
  },
  "azurerm-resource-autoscale_setting": {
    "description": "Defines autoscale_setting",
    "prefix": "tf-azurerm-resource-autoscale_setting",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"autoscalingTest\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_virtual_machine_scale_set\" \"test\" {",
      "  # ...",
      "}",
      "",
      "resource \"azurerm_autoscale_setting\" \"test\" {",
      "  name                = \"myAutoscaleSetting\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  target_resource_id  = \"${azurerm_virtual_machine_scale_set.test.id}\"",
      "",
      "  profile {",
      "    name = \"defaultProfile\"",
      "",
      "    capacity {",
      "      default = 1",
      "      minimum = 1",
      "      maximum = 10",
      "    }",
      "",
      "    rule {",
      "      metric_trigger {",
      "        metric_name        = \"Percentage CPU\"",
      "        metric_resource_id = \"${azurerm_virtual_machine_scale_set.test.id}\"",
      "        time_grain         = \"PT1M\"",
      "        statistic          = \"Average\"",
      "        time_window        = \"PT5M\"",
      "        time_aggregation   = \"Average\"",
      "        operator           = \"GreaterThan\"",
      "        threshold          = 75",
      "      }",
      "",
      "      scale_action {",
      "        direction = \"Increase\"",
      "        type      = \"ChangeCount\"",
      "        value     = \"1\"",
      "        cooldown  = \"PT1M\"",
      "      }",
      "    }",
      "",
      "    rule {",
      "      metric_trigger {",
      "        metric_name        = \"Percentage CPU\"",
      "        metric_resource_id = \"${azurerm_virtual_machine_scale_set.test.id}\"",
      "        time_grain         = \"PT1M\"",
      "        statistic          = \"Average\"",
      "        time_window        = \"PT5M\"",
      "        time_aggregation   = \"Average\"",
      "        operator           = \"LessThan\"",
      "        threshold          = 25",
      "      }",
      "",
      "      scale_action {",
      "        direction = \"Decrease\"",
      "        type      = \"ChangeCount\"",
      "        value     = \"1\"",
      "        cooldown  = \"PT1M\"",
      "      }",
      "    }",
      "  }",
      "",
      "  notification {",
      "    email {",
      "      send_to_subscription_administrator    = true",
      "      send_to_subscription_co_administrator = true",
      "      custom_emails                         = [\"admin@contoso.com\"]",
      "    }",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-availability_set": {
    "description": "Defines availability_set",
    "prefix": "tf-azurerm-resource-availability_set",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_availability_set\" \"test\" {",
      "  name                = \"acceptanceTestAvailabilitySet1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-azuread_application": {
    "description": "Defines azuread_application",
    "prefix": "tf-azurerm-resource-azuread_application",
    "body": [
      "resource \"azurerm_azuread_application\" \"test\" {",
      "  name                       = \"example\"",
      "  homepage                   = \"https://homepage\"",
      "  identifier_uris            = [\"https://uri\"]",
      "  reply_urls                 = [\"https://replyurl\"]",
      "  available_to_other_tenants = false",
      "  oauth2_allow_implicit_flow = true",
      "}"
    ]
  },
  "azurerm-resource-azuread_service_principal": {
    "description": "Defines azuread_service_principal",
    "prefix": "tf-azurerm-resource-azuread_service_principal",
    "body": [
      "resource \"azurerm_azuread_application\" \"test\" {",
      "  name                       = \"example\"",
      "  homepage                   = \"http://homepage\"",
      "  identifier_uris            = [\"http://uri\"]",
      "  reply_urls                 = [\"http://replyurl\"]",
      "  available_to_other_tenants = false",
      "  oauth2_allow_implicit_flow = true",
      "}",
      "",
      "resource \"azurerm_azuread_service_principal\" \"test\" {",
      "  application_id = \"${azurerm_azuread_application.test.application_id}\"",
      "}"
    ]
  },
  "azurerm-resource-azuread_service_principal_password": {
    "description": "Defines azuread_service_principal_password",
    "prefix": "tf-azurerm-resource-azuread_service_principal_password",
    "body": [
      "resource \"azurerm_azuread_application\" \"test\" {",
      "  name                       = \"example\"",
      "  homepage                   = \"http://homepage\"",
      "  identifier_uris            = [\"http://uri\"]",
      "  reply_urls                 = [\"http://replyurl\"]",
      "  available_to_other_tenants = false",
      "  oauth2_allow_implicit_flow = true",
      "}",
      "",
      "resource \"azurerm_azuread_service_principal\" \"test\" {",
      "  application_id = \"${azurerm_azuread_application.test.application_id}\"",
      "}",
      "",
      "resource \"azurerm_azuread_service_principal_password\" \"test\" {",
      "  service_principal_id = \"${azurerm_azuread_service_principal.test.id}\"",
      "  value                = \"VT=uSgbTanZhyz@%nL9Hpd+Tfay_MRV#\"",
      "  end_date             = \"2020-01-01T01:02:03Z\"",
      "}"
    ]
  },
  "azurerm-resource-batch_account": {
    "description": "Defines batch_account",
    "prefix": "tf-azurerm-resource-batch_account",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"testbatch\"",
      "  location = \"westeurope\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"test\" {",
      "  name                     = \"teststorage\"",
      "  resource_group_name      = \"${azurerm_resource_group.test.name}\"",
      "  location                 = \"${azurerm_resource_group.test.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_batch_account\" \"test\" {",
      "  name                 = \"testbatchaccount\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  location             = \"${azurerm_resource_group.test.location}\"",
      "  pool_allocation_mode = \"BatchService\"",
      "  storage_account_id   = \"${azurerm_storage_account.test.id}\"",
      "",
      "  tags = {",
      "    env = \"test\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-batch_application": {
    "description": "Defines batch_application",
    "prefix": "tf-azurerm-resource-batch_application",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example-rg\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"example\" {",
      "  name                     = \"examplesa\"",
      "  resource_group_name      = \"${azurerm_resource_group.example.name}\"",
      "  location                 = \"${azurerm_resource_group.example.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_batch_account\" \"example\" {",
      "  name                 = \"exampleba\"",
      "  resource_group_name  = \"${azurerm_resource_group.example.name}\"",
      "  location             = \"${azurerm_resource_group.example.location}\"",
      "  pool_allocation_mode = \"BatchService\"",
      "  storage_account_id   = \"${azurerm_storage_account.example.id}\"",
      "}",
      "",
      "resource \"azurerm_batch_application\" \"example\" {",
      "  name                = \"example-batch-application\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  account_name        = \"${azurerm_batch_account.example.name}\"",
      "}"
    ]
  },
  "azurerm-resource-batch_certificate": {
    "description": "Defines batch_certificate",
    "prefix": "tf-azurerm-resource-batch_certificate",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"testbatch\"",
      "  location = \"westeurope\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"test\" {",
      "  name                     = \"teststorage\"",
      "  resource_group_name      = \"${azurerm_resource_group.test.name}\"",
      "  location                 = \"${azurerm_resource_group.test.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_batch_account\" \"test\" {",
      "  name                 = \"testbatchaccount\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  location             = \"${azurerm_resource_group.test.location}\"",
      "  pool_allocation_mode = \"BatchService\"",
      "  storage_account_id   = \"${azurerm_storage_account.test.id}\"",
      "",
      "  tags = {",
      "    env = \"test\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_batch_certificate\" \"test\" {",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  account_name         = \"${azurerm_batch_account.test.name}\"",
      "  certificate          = \"${filebase64(\"certificate.pfx\")}\"",
      "  format               = \"Pfx\"",
      "  password             = \"terraform\"",
      "  thumbprint           = \"42C107874FD0E4A9583292A2F1098E8FE4B2EDDA\"",
      "  thumbprint_algorithm = \"SHA1\"",
      "}"
    ]
  },
  "azurerm-resource-batch_pool": {
    "description": "Defines batch_pool",
    "prefix": "tf-azurerm-resource-batch_pool",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"testaccbatch\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"test\" {",
      "  name                     = \"testaccsa\"",
      "  resource_group_name      = \"${azurerm_resource_group.test.name}\"",
      "  location                 = \"${azurerm_resource_group.test.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_batch_account\" \"test\" {",
      "  name                 = \"testaccbatch\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  location             = \"${azurerm_resource_group.test.location}\"",
      "  pool_allocation_mode = \"BatchService\"",
      "  storage_account_id   = \"${azurerm_storage_account.test.id}\"",
      "",
      "  tags = {",
      "    env = \"test\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_batch_certificate\" \"testcer\" {",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  account_name         = \"${azurerm_batch_account.test.name}\"",
      "  certificate          = \"${filebase64(\"certificate.cer\")}\"",
      "  format               = \"Cer\"",
      "  thumbprint           = \"312d31a79fa0cef49c00f769afc2b73e9f4edf34\"",
      "  thumbprint_algorithm = \"SHA1\"",
      "}",
      "",
      "resource \"azurerm_batch_pool\" \"test\" {",
      "  name                = \"testaccpool\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  account_name        = \"${azurerm_batch_account.test.name}\"",
      "  display_name        = \"Test Acc Pool Auto\"",
      "  vm_size             = \"Standard_A1\"",
      "  node_agent_sku_id   = \"batch.node.ubuntu 16.04\"",
      "",
      "  auto_scale {",
      "    evaluation_interval = \"PT15M\"",
      "",
      "    formula = <<EOF",
      "      startingNumberOfVMs = 1;",
      "      maxNumberofVMs = 25;",
      "      pendingTaskSamplePercent = $PendingTasks.GetSamplePercent(180 * TimeInterval_Second);",
      "      pendingTaskSamples = pendingTaskSamplePercent < 70 ? startingNumberOfVMs : avg($PendingTasks.GetSample(180 *   TimeInterval_Second));",
      "      $TargetDedicatedNodes=min(maxNumberofVMs, pendingTaskSamples);",
      "EOF",
      "  }",
      "",
      "  storage_image_reference {",
      "    publisher = \"microsoft-azure-batch\"",
      "    offer     = \"ubuntu-server-container\"",
      "    sku       = \"16-04-lts\"",
      "    version   = \"latest\"",
      "  }",
      "",
      "  container_configuration {",
      "    type = \"DockerCompatible\"",
      "  }",
      "",
      "  start_task {",
      "    command_line         = \"echo 'Hello World from $env'\"",
      "    max_task_retry_count = 1",
      "    wait_for_success     = true",
      "",
      "    environment = {",
      "      env = \"TEST\"",
      "    }",
      "",
      "    user_identity {",
      "      auto_user {",
      "        elevation_level = \"NonAdmin\"",
      "        scope           = \"Task\"",
      "      }",
      "    }",
      "  }",
      "",
      "  certificate {",
      "    id         = \"${azurerm_batch_certificate.testcer.id}\"",
      "    visibility = [\"StartTask\"]",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-cdn_endpoint": {
    "description": "Defines cdn_endpoint",
    "prefix": "tf-azurerm-resource-cdn_endpoint",
    "body": [
      "resource \"random_id\" \"server\" {",
      "  keepers = {",
      "    azi_id = 1",
      "  }",
      "",
      "  byte_length = 8",
      "}",
      "",
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_cdn_profile\" \"test\" {",
      "  name                = \"exampleCdnProfile\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  sku                 = \"Standard_Verizon\"",
      "}",
      "",
      "resource \"azurerm_cdn_endpoint\" \"test\" {",
      "  name                = \"${random_id.server.hex}\"",
      "  profile_name        = \"${azurerm_cdn_profile.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  origin {",
      "    name      = \"exampleCdnOrigin\"",
      "    host_name = \"www.example.com\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-cdn_profile": {
    "description": "Defines cdn_profile",
    "prefix": "tf-azurerm-resource-cdn_profile",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_cdn_profile\" \"test\" {",
      "  name                = \"exampleCdnProfile\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  sku                 = \"Standard_Verizon\"",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "    cost_center = \"MSFT\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-cognitive_account": {
    "description": "Defines cognitive_account",
    "prefix": "tf-azurerm-resource-cognitive_account",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_cognitive_account\" \"test\" {",
      "  name                = \"example-account\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  kind                = \"Face\"",
      "",
      "  sku {",
      "    name = \"S0\"",
      "    tier = \"Standard\"",
      "  }",
      "",
      "  tags = {",
      "    Acceptance = \"Test\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-connection_monitor": {
    "description": "Defines connection_monitor",
    "prefix": "tf-azurerm-resource-connection_monitor",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"connection-monitor-rg\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_network_watcher\" \"test\" {",
      "  name                = \"network-watcher\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"production-network\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"test\" {",
      "  name                 = \"internal\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.2.0/24\"",
      "}",
      "",
      "resource \"azurerm_network_interface\" \"test\" {",
      "  name                = \"cmtest-nic\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  ip_configuration {",
      "    name                          = \"testconfiguration1\"",
      "    subnet_id                     = \"${azurerm_subnet.test.id}\"",
      "    private_ip_address_allocation = \"Dynamic\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_virtual_machine\" \"test\" {",
      "  name                  = \"cmtest-vm\"",
      "  location              = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name   = \"${azurerm_resource_group.test.name}\"",
      "  network_interface_ids = [\"${azurerm_network_interface.test.id}\"]",
      "  vm_size               = \"Standard_F2\"",
      "",
      "  storage_image_reference {",
      "    publisher = \"Canonical\"",
      "    offer     = \"UbuntuServer\"",
      "    sku       = \"16.04-LTS\"",
      "    version   = \"latest\"",
      "  }",
      "",
      "  storage_os_disk {",
      "    name              = \"osdisk\"",
      "    caching           = \"ReadWrite\"",
      "    create_option     = \"FromImage\"",
      "    managed_disk_type = \"Standard_LRS\"",
      "  }",
      "",
      "  os_profile {",
      "    computer_name  = \"cmtest-vm\"",
      "    admin_username = \"testadmin\"",
      "    admin_password = \"Password1234!\"",
      "  }",
      "",
      "  os_profile_linux_config {",
      "    disable_password_authentication = false",
      "  }",
      "}",
      "",
      "resource \"azurerm_virtual_machine_extension\" \"test\" {",
      "  name                       = \"cmtest-vm-network-watcher\"",
      "  location                   = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name        = \"${azurerm_resource_group.test.name}\"",
      "  virtual_machine_name       = \"${azurerm_virtual_machine.test.name}\"",
      "  publisher                  = \"Microsoft.Azure.NetworkWatcher\"",
      "  type                       = \"NetworkWatcherAgentLinux\"",
      "  type_handler_version       = \"1.4\"",
      "  auto_upgrade_minor_version = true",
      "}",
      "",
      "resource \"azurerm_connection_monitor\" \"test\" {",
      "  name                 = \"cmtest-connectionmonitor\"",
      "  location             = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  network_watcher_name = \"${azurerm_network_watcher.test.name}\"",
      "",
      "  source {",
      "    virtual_machine_id = \"${azurerm_virtual_machine.test.id}\"",
      "  }",
      "",
      "  destination {",
      "    address = \"terraform.io\"",
      "    port    = 80",
      "  }",
      "",
      "  depends_on = [\"azurerm_virtual_machine_extension.test\"]",
      "}"
    ]
  },
  "azurerm-resource-container_group": {
    "description": "Defines container_group",
    "prefix": "tf-azurerm-resource-container_group",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_container_group\" \"example\" {",
      "  name                = \"example-continst\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  ip_address_type     = \"public\"",
      "  dns_name_label      = \"aci-label\"",
      "  os_type             = \"Linux\"",
      "",
      "  container {",
      "    name   = \"hello-world\"",
      "    image  = \"microsoft/aci-helloworld:latest\"",
      "    cpu    = \"0.5\"",
      "    memory = \"1.5\"",
      "",
      "    ports {",
      "      port     = 443",
      "      protocol = \"TCP\"",
      "    }",
      "  }",
      "",
      "  container {",
      "    name   = \"sidecar\"",
      "    image  = \"microsoft/aci-tutorial-sidecar\"",
      "    cpu    = \"0.5\"",
      "    memory = \"1.5\"",
      "  }",
      "",
      "  tags = {",
      "    environment = \"testing\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-container_registry": {
    "description": "Defines container_registry",
    "prefix": "tf-azurerm-resource-container_registry",
    "body": [
      "resource \"azurerm_resource_group\" \"rg\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_container_registry\" \"acr\" {",
      "  name                     = \"containerRegistry1\"",
      "  resource_group_name      = \"${azurerm_resource_group.rg.name}\"",
      "  location                 = \"${azurerm_resource_group.rg.location}\"",
      "  sku                      = \"Premium\"",
      "  admin_enabled            = false",
      "  georeplication_locations = [\"East US\", \"West Europe\"]",
      "}"
    ]
  },
  "azurerm-resource-container_service": {
    "description": "Defines container_service",
    "prefix": "tf-azurerm-resource-container_service",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acctestRG1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_container_service\" \"test\" {",
      "  name                   = \"acctestcontservice1\"",
      "  location               = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name    = \"${azurerm_resource_group.test.name}\"",
      "  orchestration_platform = \"DCOS\"",
      "",
      "  master_profile {",
      "    count      = 1",
      "    dns_prefix = \"acctestmaster1\"",
      "  }",
      "",
      "  linux_profile {",
      "    admin_username = \"acctestuser1\"",
      "",
      "    ssh_key {",
      "      key_data = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+L2NxRIfQ781rxV6Iq5jSav6b2Q8z5KiseOlvKA/RF2wqU0UPYqQviQhLmW6THTpmrv/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+5N2Ta6UYH3lsDf9R9wTP2K/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+7HTcWfdu0qQqPWY5ujyMw/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt terraform@demo.tld\"",
      "    }",
      "  }",
      "",
      "  agent_pool_profile {",
      "    name       = \"default\"",
      "    count      = 1",
      "    dns_prefix = \"acctestagent1\"",
      "    vm_size    = \"Standard_F2\"",
      "  }",
      "",
      "  diagnostics_profile {",
      "    enabled = false",
      "  }",
      "",
      "  tags = {",
      "    Environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-cosmosdb_account": {
    "description": "Defines cosmosdb_account",
    "prefix": "tf-azurerm-resource-cosmosdb_account",
    "body": [
      "resource \"azurerm_resource_group\" \"rg\" {",
      "  name     = \"${var.resource_group_name}\"",
      "  location = \"${var.resource_group_location}\"",
      "}",
      "",
      "resource \"random_integer\" \"ri\" {",
      "  min = 10000",
      "  max = 99999",
      "}",
      "",
      "resource \"azurerm_cosmosdb_account\" \"db\" {",
      "  name                = \"tfex-cosmos-db-${random_integer.ri.result}\"",
      "  location            = \"${azurerm_resource_group.rg.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.rg.name}\"",
      "  offer_type          = \"Standard\"",
      "  kind                = \"GlobalDocumentDB\"",
      "",
      "  enable_automatic_failover = true",
      "",
      "  consistency_policy {",
      "    consistency_level       = \"BoundedStaleness\"",
      "    max_interval_in_seconds = 10",
      "    max_staleness_prefix    = 200",
      "  }",
      "",
      "  geo_location {",
      "    location          = \"${var.failover_location}\"",
      "    failover_priority = 1",
      "  }",
      "",
      "  geo_location {",
      "    prefix            = \"tfex-cosmos-db-${random_integer.ri.result}-customid\"",
      "    location          = \"${azurerm_resource_group.rg.location}\"",
      "    failover_priority = 0",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-cosmosdb_cassandra_keyspace": {
    "description": "Defines cosmosdb_cassandra_keyspace",
    "prefix": "tf-azurerm-resource-cosmosdb_cassandra_keyspace",
    "body": [
      "data \"azurerm_cosmosdb_account\" \"example\" {",
      "  name                = \"tfex-cosmosdb-account\"",
      "  resource_group_name = \"tfex-cosmosdb-account-rg\"",
      "}",
      "",
      "resource \"azurerm_cosmosdb_cassandra_keyspace\" \"example\" {",
      "  name                = \"tfex-cosmos-cassandra-keyspace\"",
      "  resource_group_name = \"${data.azurerm_cosmosdb_account.example.resource_group_name}\"",
      "  account_name        = \"${data.azurerm_cosmosdb_account.example.name}\"",
      "}"
    ]
  },
  "azurerm-resource-cosmosdb_mongo_collection": {
    "description": "Defines cosmosdb_mongo_collection",
    "prefix": "tf-azurerm-resource-cosmosdb_mongo_collection",
    "body": [
      "data \"azurerm_cosmosdb_account\" \"example\" {",
      "  name                = \"tfex-cosmosdb-account\"",
      "  resource_group_name = \"tfex-cosmosdb-account-rg\"",
      "}",
      "",
      "resource \"azurerm_cosmosdb_mongo_database\" \"example\" {",
      "  name                = \"tfex-cosmos-mongo-db\"",
      "  resource_group_name = \"${data.azurerm_cosmosdb_account.example.resource_group_name}\"",
      "  account_name        = \"${data.azurerm_cosmosdb_account.example.name}\"",
      "}",
      "",
      "resource \"azurerm_cosmosdb_mongo_collection\" \"example\" {",
      "  name                = \"tfex-cosmos-mongo-db\"",
      "  resource_group_name = \"${data.azurerm_cosmosdb_account.example.resource_group_name}\"",
      "  account_name        = \"${data.azurerm_cosmosdb_account.example.name}\"",
      "  database_name       = \"${azurerm_cosmosdb_mongo_database.example.name}\"",
      "",
      "  default_ttl_seconds = \"777\"",
      "  shard_key           = \"uniqueKey\"",
      "",
      "  indexes {",
      "    key    = \"aKey\"",
      "    unique = false",
      "  }",
      "",
      "  indexes {",
      "    key    = \"uniqueKey\"",
      "    unique = true",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-cosmosdb_mongo_database": {
    "description": "Defines cosmosdb_mongo_database",
    "prefix": "tf-azurerm-resource-cosmosdb_mongo_database",
    "body": [
      "data \"azurerm_cosmosdb_account\" \"example\" {",
      "  name                = \"tfex-cosmosdb-account\"",
      "  resource_group_name = \"tfex-cosmosdb-account-rg\"",
      "}",
      "",
      "resource \"azurerm_cosmosdb_mongo_database\" \"example\" {",
      "  name                = \"tfex-cosmos-mongo-db\"",
      "  resource_group_name = \"${data.azurerm_cosmosdb_account.example.resource_group_name}\"",
      "  account_name        = \"${data.azurerm_cosmosdb_account.example.name}\"",
      "}"
    ]
  },
  "azurerm-resource-cosmosdb_sql_database": {
    "description": "Defines cosmosdb_sql_database",
    "prefix": "tf-azurerm-resource-cosmosdb_sql_database",
    "body": [
      "data \"azurerm_cosmosdb_account\" \"example\" {",
      "  name                = \"tfex-cosmosdb-account\"",
      "  resource_group_name = \"tfex-cosmosdb-account-rg\"",
      "}",
      "",
      "resource \"azurerm_cosmosdb_sql_database\" \"example\" {",
      "  name                = \"tfex-cosmos-mongo-db\"",
      "  resource_group_name = \"${data.azurerm_cosmosdb_account.example.resource_group_name}\"",
      "  account_name        = \"${data.azurerm_cosmosdb_account.example.name}\"",
      "}"
    ]
  },
  "azurerm-resource-cosmosdb_table": {
    "description": "Defines cosmosdb_table",
    "prefix": "tf-azurerm-resource-cosmosdb_table",
    "body": [
      "data \"azurerm_cosmosdb_account\" \"example\" {",
      "  name                = \"tfex-cosmosdb-account\"",
      "  resource_group_name = \"tfex-cosmosdb-account-rg\"",
      "}",
      "",
      "resource \"azurerm_cosmosdb_table\" \"example\" {",
      "  name                = \"tfex-cosmos-table\"",
      "  resource_group_name = \"${data.azurerm_cosmosdb_account.example.resource_group_name}\"",
      "  account_name        = \"${data.azurerm_cosmosdb_account.example.name}\"",
      "}"
    ]
  },
  "azurerm-resource-data_factory": {
    "description": "Defines data_factory",
    "prefix": "tf-azurerm-resource-data_factory",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example\"",
      "  location = \"northeurope\"",
      "}",
      "",
      "resource \"azurerm_data_factory\" \"example\" {",
      "  name                = \"example\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "}"
    ]
  },
  "azurerm-resource-data_factory_dataset_mysql": {
    "description": "Defines data_factory_dataset_mysql",
    "prefix": "tf-azurerm-resource-data_factory_dataset_mysql",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example\"",
      "  location = \"northeurope\"",
      "}",
      "",
      "resource \"azurerm_data_factory\" \"example\" {",
      "  name                = \"example\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "}",
      "",
      "resource \"azurerm_data_factory_linked_service_mysql\" \"example\" {",
      "  name                = \"example\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  data_factory_name   = \"${azurerm_data_factory.example.name}\"",
      "  connection_string   = \"Server=test;Port=3306;Database=test;User=test;SSLMode=1;UseSystemTrustStore=0;Password=test\"",
      "}",
      "",
      "resource \"azurerm_data_factory_dataset_mysql\" \"example\" {",
      "  name                = \"example\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  data_factory_name   = \"${azurerm_data_factory.example.name}\"",
      "  linked_service_name = \"${azurerm_data_factory_linked_service_mysql.test.name}\"",
      "}"
    ]
  },
  "azurerm-resource-data_factory_dataset_postgresql": {
    "description": "Defines data_factory_dataset_postgresql",
    "prefix": "tf-azurerm-resource-data_factory_dataset_postgresql",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example\"",
      "  location = \"northeurope\"",
      "}",
      "",
      "resource \"azurerm_data_factory\" \"example\" {",
      "  name                = \"example\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "}",
      "",
      "resource \"azurerm_data_factory_linked_service_postgresql\" \"example\" {",
      "  name                = \"example\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  data_factory_name   = \"${azurerm_data_factory.example.name}\"",
      "  connection_string   = \"Host=example;Port=5432;Database=example;UID=example;EncryptionMethod=0;Password=example\"",
      "}",
      "",
      "resource \"azurerm_data_factory_dataset_postgresql\" \"example\" {",
      "  name                = \"example\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  data_factory_name   = \"${azurerm_data_factory.example.name}\"",
      "  linked_service_name = \"${azurerm_data_factory_linked_service_postgresql.test.name}\"",
      "}"
    ]
  },
  "azurerm-resource-data_factory_dataset_sql_server_table": {
    "description": "Defines data_factory_dataset_sql_server_table",
    "prefix": "tf-azurerm-resource-data_factory_dataset_sql_server_table",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example\"",
      "  location = \"northeurope\"",
      "}",
      "",
      "resource \"azurerm_data_factory\" \"example\" {",
      "  name                = \"example\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "}",
      "",
      "resource \"azurerm_data_factory_linked_service_sql_server\" \"example\" {",
      "  name                = \"example\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  data_factory_name   = \"${azurerm_data_factory.example.name}\"",
      "  connection_string   = \"Integrated Security=False;Data Source=test;Initial Catalog=test;User ID=test;Password=test\"",
      "}",
      "",
      "resource \"azurerm_data_factory_dataset_sql_server_table\" \"example\" {",
      "  name                = \"example\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  data_factory_name   = \"${azurerm_data_factory.example.name}\"",
      "  linked_service_name = \"${azurerm_data_factory_linked_service_sql_server.test.name}\"",
      "}"
    ]
  },
  "azurerm-resource-data_factory_linked_service_data_lake_storage_gen2": {
    "description": "Defines data_factory_linked_service_data_lake_storage_gen2",
    "prefix": "tf-azurerm-resource-data_factory_linked_service_data_lake_storage_gen2",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example\"",
      "  location = \"northeurope\"",
      "}",
      "",
      "resource \"azurerm_data_factory\" \"example\" {",
      "  name                = \"example\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "}",
      "",
      "data \"azurerm_client_config\" \"current\" {}",
      "",
      "resource \"azurerm_data_factory_linked_service_data_lake_storage_gen2\" \"example\" {",
      "  name                  = \"example\"",
      "  resource_group_name   = \"${azurerm_resource_group.test.name}\"",
      "  data_factory_name     = \"${azurerm_data_factory.test.name}\"",
      "  service_principal_id  = \"${data.azurerm_client_config.current.client_id}\"",
      "  service_principal_key = \"exampleKey\"",
      "  tenant                = \"11111111-1111-1111-1111-111111111111\"",
      "  url                   = \"https://datalakestoragegen2\"",
      "}"
    ]
  },
  "azurerm-resource-data_factory_linked_service_mysql": {
    "description": "Defines data_factory_linked_service_mysql",
    "prefix": "tf-azurerm-resource-data_factory_linked_service_mysql",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example\"",
      "  location = \"northeurope\"",
      "}",
      "",
      "resource \"azurerm_data_factory\" \"example\" {",
      "  name                = \"example\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "}",
      "",
      "resource \"azurerm_data_factory_linked_service_mysql\" \"example\" {",
      "  name                = \"example\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  data_factory_name   = \"${azurerm_data_factory.test.name}\"",
      "  connection_string   = \"Server=test;Port=3306;Database=test;User=test;SSLMode=1;UseSystemTrustStore=0;Password=test\"",
      "}"
    ]
  },
  "azurerm-resource-data_factory_linked_service_postgresql": {
    "description": "Defines data_factory_linked_service_postgresql",
    "prefix": "tf-azurerm-resource-data_factory_linked_service_postgresql",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example\"",
      "  location = \"northeurope\"",
      "}",
      "",
      "resource \"azurerm_data_factory\" \"example\" {",
      "  name                = \"example\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "}",
      "",
      "resource \"azurerm_data_factory_linked_service_postgresql\" \"example\" {",
      "  name                = \"example\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  data_factory_name   = \"${azurerm_data_factory.test.name}\"",
      "  connection_string   = \"Host=example;Port=5432;Database=example;UID=example;EncryptionMethod=0;Password=example\"",
      "}"
    ]
  },
  "azurerm-resource-data_factory_linked_service_sql_server": {
    "description": "Defines data_factory_linked_service_sql_server",
    "prefix": "tf-azurerm-resource-data_factory_linked_service_sql_server",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example\"",
      "  location = \"northeurope\"",
      "}",
      "",
      "resource \"azurerm_data_factory\" \"example\" {",
      "  name                = \"example\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "}",
      "",
      "resource \"azurerm_data_factory_linked_service_sql_server\" \"example\" {",
      "  name                = \"example\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  data_factory_name   = \"${azurerm_data_factory.test.name}\"",
      "  connection_string   = \"Integrated Security=False;Data Source=test;Initial Catalog=test;User ID=test;Password=test\"",
      "}"
    ]
  },
  "azurerm-resource-data_factory_pipeline": {
    "description": "Defines data_factory_pipeline",
    "prefix": "tf-azurerm-resource-data_factory_pipeline",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example\"",
      "  location = \"northeurope\"",
      "}",
      "",
      "resource \"azurerm_data_factory\" \"example\" {",
      "  name                = \"example\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "}",
      "",
      "resource \"azurerm_data_factory_pipeline\" \"example\" {",
      "  name                = \"example\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  data_factory_name   = \"${azurerm_data_factory.example.name}\"",
      "}"
    ]
  },
  "azurerm-resource-data_lake_analytics_account": {
    "description": "Defines data_lake_analytics_account",
    "prefix": "tf-azurerm-resource-data_lake_analytics_account",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"tfex-datalake-account\"",
      "  location = \"northeurope\"",
      "}",
      "",
      "resource \"azurerm_data_lake_store\" \"example\" {",
      "  name                = \"tfexdatalakestore\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "}",
      "",
      "resource \"azurerm_data_lake_analytics_account\" \"example\" {",
      "  name                = \"tfexdatalakeaccount\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "",
      "  default_store_account_name = \"${azurerm_data_lake_store.example.name}\"",
      "}"
    ]
  },
  "azurerm-resource-data_lake_analytics_firewall_rule": {
    "description": "Defines data_lake_analytics_firewall_rule",
    "prefix": "tf-azurerm-resource-data_lake_analytics_firewall_rule",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"tfex_datalake_fw_rule\"",
      "  location = \"northeurope\"",
      "}",
      "",
      "resource \"azurerm_data_lake_store\" \"example\" {",
      "  name                = \"tfexdatalakestore\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "}",
      "",
      "resource \"azurerm_data_lake_analytics_account\" \"example\" {",
      "  name                = \"tfexdatalakeaccount\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "",
      "  default_store_account_name = \"${azurerm_data_lake_store.example.name}\"",
      "}",
      "",
      "resource \"azurerm_data_lake_analytics_firewall_rule\" \"example\" {",
      "  name                = \"office-ip-range\"",
      "  account_name        = \"${azurerm_data_lake_analytics.example.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  start_ip_address    = \"1.2.3.4\"",
      "  end_ip_address      = \"2.3.4.5\"",
      "}"
    ]
  },
  "azurerm-resource-data_lake_store": {
    "description": "Defines data_lake_store",
    "prefix": "tf-azurerm-resource-data_lake_store",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example\"",
      "  location = \"northeurope\"",
      "}",
      "",
      "resource \"azurerm_data_lake_store\" \"example\" {",
      "  name                = \"consumptiondatalake\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  encryption_state    = \"Enabled\"",
      "  encryption_type     = \"ServiceManaged\"",
      "}"
    ]
  },
  "azurerm-resource-data_lake_store_file": {
    "description": "Defines data_lake_store_file",
    "prefix": "tf-azurerm-resource-data_lake_store_file",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example\"",
      "  location = \"northeurope\"",
      "}",
      "",
      "resource \"azurerm_data_lake_store\" \"example\" {",
      "  name                = \"consumptiondatalake\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "}",
      "",
      "resource \"azurerm_data_lake_store_file\" \"example\" {",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  local_file_path     = \"/path/to/local/file\"",
      "  remote_file_path    = \"/path/created/for/remote/file\"",
      "}"
    ]
  },
  "azurerm-resource-data_lake_store_firewall_rule": {
    "description": "Defines data_lake_store_firewall_rule",
    "prefix": "tf-azurerm-resource-data_lake_store_firewall_rule",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example\"",
      "  location = \"northeurope\"",
      "}",
      "",
      "resource \"azurerm_data_lake_store\" \"example\" {",
      "  name                = \"consumptiondatalake\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "}",
      "",
      "resource \"azurerm_data_lake_store_firewall_rule\" \"example\" {",
      "  name                = \"office-ip-range\"",
      "  account_name        = \"${azurerm_data_lake_store.example.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  start_ip_address    = \"1.2.3.4\"",
      "  end_ip_address      = \"2.3.4.5\"",
      "}"
    ]
  },
  "azurerm-resource-databricks_workspace": {
    "description": "Defines databricks_workspace",
    "prefix": "tf-azurerm-resource-databricks_workspace",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_databricks_workspace\" \"test\" {",
      "  name                = \"databricks-test\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  sku                 = \"standard\"",
      "",
      "  tags = {",
      "    Environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-ddos_protection_plan": {
    "description": "Defines ddos_protection_plan",
    "prefix": "tf-azurerm-resource-ddos_protection_plan",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_ddos_protection_plan\" \"test\" {",
      "  name                = \"example-protection-plan\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}"
    ]
  },
  "azurerm-resource-dev_test_lab": {
    "description": "Defines dev_test_lab",
    "prefix": "tf-azurerm-resource-dev_test_lab",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_dev_test_lab\" \"test\" {",
      "  name                = \"example-devtestlab\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  tags = {",
      "    \"Sydney\" = \"Australia\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-dev_test_linux_virtual_machine": {
    "description": "Defines dev_test_linux_virtual_machine",
    "prefix": "tf-azurerm-resource-dev_test_linux_virtual_machine",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_dev_test_lab\" \"test\" {",
      "  name                = \"example-devtestlab\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  tags = {",
      "    \"Sydney\" = \"Australia\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_dev_test_virtual_network\" \"test\" {",
      "  name                = \"example-network\"",
      "  lab_name            = \"${azurerm_dev_test_lab.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  subnet {",
      "    use_public_ip_address           = \"Allow\"",
      "    use_in_virtual_machine_creation = \"Allow\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_dev_test_linux_virtual_machine\" \"test\" {",
      "  name                   = \"example-vm03\"",
      "  lab_name               = \"${azurerm_dev_test_lab.test.name}\"",
      "  resource_group_name    = \"${azurerm_resource_group.test.name}\"",
      "  location               = \"${azurerm_resource_group.test.location}\"",
      "  size                   = \"Standard_DS2\"",
      "  username               = \"exampleuser99\"",
      "  ssh_key                = \"${file(\"~/.ssh/id_rsa.pub\")}\"",
      "  lab_virtual_network_id = \"${azurerm_dev_test_virtual_network.test.id}\"",
      "  lab_subnet_name        = \"${azurerm_dev_test_virtual_network.test.subnet.0.name}\"",
      "  storage_type           = \"Premium\"",
      "  notes                  = \"Some notes about this Virtual Machine.\"",
      "",
      "  gallery_image_reference {",
      "    offer     = \"UbuntuServer\"",
      "    publisher = \"Canonical\"",
      "    sku       = \"18.04-LTS\"",
      "    version   = \"latest\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-dev_test_policy": {
    "description": "Defines dev_test_policy",
    "prefix": "tf-azurerm-resource-dev_test_policy",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_dev_test_lab\" \"test\" {",
      "  name                = \"example-devtestlab\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  tags = {",
      "    \"Sydney\" = \"Australia\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_dev_test_policy\" \"test\" {",
      "  name                = \"LabVmCount\"",
      "  policy_set_name     = \"default\"",
      "  lab_name            = \"${azurerm_dev_test_lab.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  fact_data           = \"\"",
      "  threshold           = \"999\"",
      "  evaluator_type      = \"MaxValuePolicy\"",
      "",
      "  tags = {",
      "    \"Acceptance\" = \"Test\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-dev_test_virtual_network": {
    "description": "Defines dev_test_virtual_network",
    "prefix": "tf-azurerm-resource-dev_test_virtual_network",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_dev_test_lab\" \"test\" {",
      "  name                = \"example-devtestlab\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  tags = {",
      "    \"Sydney\" = \"Australia\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_dev_test_virtual_network\" \"test\" {",
      "  name                = \"example-network\"",
      "  lab_name            = \"${azurerm_dev_test_lab.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  subnet {",
      "    use_public_ip_address           = \"Allow\"",
      "    use_in_virtual_machine_creation = \"Allow\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-dev_test_windows_virtual_machine": {
    "description": "Defines dev_test_windows_virtual_machine",
    "prefix": "tf-azurerm-resource-dev_test_windows_virtual_machine",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_dev_test_lab\" \"test\" {",
      "  name                = \"example-devtestlab\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  tags = {",
      "    \"Sydney\" = \"Australia\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_dev_test_virtual_network\" \"test\" {",
      "  name                = \"example-network\"",
      "  lab_name            = \"${azurerm_dev_test_lab.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  subnet {",
      "    use_public_ip_address           = \"Allow\"",
      "    use_in_virtual_machine_creation = \"Allow\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_dev_test_windows_virtual_machine\" \"test\" {",
      "  name                   = \"example-vm03\"",
      "  lab_name               = \"${azurerm_dev_test_lab.test.name}\"",
      "  resource_group_name    = \"${azurerm_resource_group.test.name}\"",
      "  location               = \"${azurerm_resource_group.test.location}\"",
      "  size                   = \"Standard_DS2\"",
      "  username               = \"exampleuser99\"",
      "  password               = \"Pa$$w0rd1234!\"",
      "  lab_virtual_network_id = \"${azurerm_dev_test_virtual_network.test.id}\"",
      "  lab_subnet_name        = \"${azurerm_dev_test_virtual_network.test.subnet.0.name}\"",
      "  storage_type           = \"Premium\"",
      "  notes                  = \"Some notes about this Virtual Machine.\"",
      "",
      "  gallery_image_reference {",
      "    offer     = \"UbuntuServer\"",
      "    publisher = \"Canonical\"",
      "    sku       = \"18.04-LTS\"",
      "    version   = \"latest\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-devspace_controller": {
    "description": "Defines devspace_controller",
    "prefix": "tf-azurerm-resource-devspace_controller",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acctestRG1\"",
      "  location = \"westeurope\"",
      "}",
      "",
      "resource \"azurerm_kubernetes_cluster\" \"test\" {",
      "  name                = \"acctestaks1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  dns_prefix          = \"acctestaks1\"",
      "",
      "  agent_pool_profile {",
      "    name    = \"default\"",
      "    count   = \"1\"",
      "    vm_size = \"Standard_DS2_v2\"",
      "  }",
      "",
      "  service_principal {",
      "    client_id     = \"00000000-0000-0000-0000-000000000000\"",
      "    client_secret = \"00000000000000000000000000000000\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_devspace_controller\" \"test\" {",
      "  name                = \"acctestdsc1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  sku {",
      "    name = \"S1\"",
      "    tier = \"Standard\"",
      "  }",
      "",
      "  host_suffix                              = \"suffix\"",
      "  target_container_host_resource_id        = \"${azurerm_kubernetes_cluster.test.id}\"",
      "  target_container_host_credentials_base64 = \"${base64encode(azurerm_kubernetes_cluster.test.kube_config_raw)}\"",
      "",
      "  tags = {",
      "    Environment = \"Testing\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-dns_a_record": {
    "description": "Defines dns_a_record",
    "prefix": "tf-azurerm-resource-dns_a_record",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_dns_zone\" \"test\" {",
      "  name                = \"mydomain.com\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_dns_a_record\" \"test\" {",
      "  name                = \"test\"",
      "  zone_name           = \"${azurerm_dns_zone.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  ttl                 = 300",
      "  records             = [\"10.0.180.17\"]",
      "}"
    ]
  },
  "azurerm-resource-dns_aaaa_record": {
    "description": "Defines dns_aaaa_record",
    "prefix": "tf-azurerm-resource-dns_aaaa_record",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_dns_zone\" \"test\" {",
      "  name                = \"mydomain.com\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_dns_aaaa_record\" \"test\" {",
      "  name                = \"test\"",
      "  zone_name           = \"${azurerm_dns_zone.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  ttl                 = 300",
      "  records             = [\"2607:f8b0:4009:1803::1005\"]",
      "}"
    ]
  },
  "azurerm-resource-dns_caa_record": {
    "description": "Defines dns_caa_record",
    "prefix": "tf-azurerm-resource-dns_caa_record",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_dns_zone\" \"test\" {",
      "  name                = \"mydomain.com\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_dns_caa_record\" \"test\" {",
      "  name                = \"test\"",
      "  zone_name           = \"${azurerm_dns_zone.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  ttl                 = 300",
      "",
      "  record {",
      "    flags = 0",
      "    tag   = \"issue\"",
      "    value = \"example.com\"",
      "  }",
      "",
      "  record {",
      "    flags = 0",
      "    tag   = \"issue\"",
      "    value = \"example.net\"",
      "  }",
      "",
      "  record {",
      "    flags = 0",
      "    tag   = \"issuewild\"",
      "    value = \";\"",
      "  }",
      "",
      "  record {",
      "    flags = 0",
      "    tag   = \"iodef\"",
      "    value = \"mailto:terraform@nonexisting.tld\"",
      "  }",
      "",
      "  tags = {",
      "    Environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-dns_cname_record": {
    "description": "Defines dns_cname_record",
    "prefix": "tf-azurerm-resource-dns_cname_record",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_dns_zone\" \"test\" {",
      "  name                = \"mydomain.com\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_dns_cname_record\" \"test\" {",
      "  name                = \"test\"",
      "  zone_name           = \"${azurerm_dns_zone.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  ttl                 = 300",
      "  record              = \"contoso.com\"",
      "}"
    ]
  },
  "azurerm-resource-dns_mx_record": {
    "description": "Defines dns_mx_record",
    "prefix": "tf-azurerm-resource-dns_mx_record",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_dns_zone\" \"test\" {",
      "  name                = \"mydomain.com\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_dns_mx_record\" \"test\" {",
      "  name                = \"test\"",
      "  zone_name           = \"${azurerm_dns_zone.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  ttl                 = 300",
      "",
      "  record {",
      "    preference = 10",
      "    exchange   = \"mail1.contoso.com\"",
      "  }",
      "",
      "  record {",
      "    preference = 20",
      "    exchange   = \"mail2.contoso.com\"",
      "  }",
      "",
      "  tags = {",
      "    Environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-dns_ns_record": {
    "description": "Defines dns_ns_record",
    "prefix": "tf-azurerm-resource-dns_ns_record",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_dns_zone\" \"test\" {",
      "  name                = \"mydomain.com\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_dns_ns_record\" \"test\" {",
      "  name                = \"test\"",
      "  zone_name           = \"${azurerm_dns_zone.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  ttl                 = 300",
      "",
      "  records = [\"ns1.contoso.com\", \"ns2.contoso.com\"]",
      "",
      "  tags = {",
      "    Environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-dns_ptr_record": {
    "description": "Defines dns_ptr_record",
    "prefix": "tf-azurerm-resource-dns_ptr_record",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_dns_zone\" \"test\" {",
      "  name                = \"mydomain.com\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_dns_ptr_record\" \"test\" {",
      "  name                = \"test\"",
      "  zone_name           = \"${azurerm_dns_zone.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  ttl                 = 300",
      "  records             = [\"yourdomain.com\"]",
      "}"
    ]
  },
  "azurerm-resource-dns_srv_record": {
    "description": "Defines dns_srv_record",
    "prefix": "tf-azurerm-resource-dns_srv_record",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_dns_zone\" \"test\" {",
      "  name                = \"mydomain.com\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_dns_srv_record\" \"test\" {",
      "  name                = \"test\"",
      "  zone_name           = \"${azurerm_dns_zone.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  ttl                 = 300",
      "",
      "  record {",
      "    priority = 1",
      "    weight   = 5",
      "    port     = 8080",
      "    target   = \"target1.contoso.com\"",
      "  }",
      "",
      "  tags = {",
      "    Environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-dns_txt_record": {
    "description": "Defines dns_txt_record",
    "prefix": "tf-azurerm-resource-dns_txt_record",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_dns_zone\" \"test\" {",
      "  name                = \"mydomain.com\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_dns_txt_record\" \"test\" {",
      "  name                = \"test\"",
      "  zone_name           = \"${azurerm_dns_zone.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  ttl                 = 300",
      "",
      "  record {",
      "    value = \"google-site-authenticator\"",
      "  }",
      "",
      "  record {",
      "    value = \"more site information here\"",
      "  }",
      "",
      "  tags = {",
      "    Environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-dns_zone": {
    "description": "Defines dns_zone",
    "prefix": "tf-azurerm-resource-dns_zone",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_dns_zone\" \"test\" {",
      "  name                = \"mydomain.com\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  zone_type           = \"Public\"",
      "}",
      "",
      "resource \"azurerm_dns_zone\" \"test_private\" {",
      "  name                = \"mydomain.com\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  zone_type           = \"Private\"",
      "}"
    ]
  },
  "azurerm-resource-eventgrid_domain": {
    "description": "Defines eventgrid_domain",
    "prefix": "tf-azurerm-resource-eventgrid_domain",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West US 2\"",
      "}",
      "",
      "resource \"azurerm_eventgrid_domain\" \"test\" {",
      "  name                = \"my-eventgrid-domain\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-eventgrid_event_subscription": {
    "description": "Defines eventgrid_event_subscription",
    "prefix": "tf-azurerm-resource-eventgrid_event_subscription",
    "body": [
      "resource \"azurerm_resource_group\" \"default\" {",
      "  name     = \"defaultResourceGroup\"",
      "  location = \"West US 2\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"default\" {",
      "  name                     = \"defaultStorageAccount\"",
      "  resource_group_name      = \"${azurerm_resource_group.default.name}\"",
      "  location                 = \"${azurerm_resource_group.default.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "",
      "  tags = {",
      "    environment = \"staging\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_storage_queue\" \"default\" {",
      "  name                 = \"defaultStorageQueue\"",
      "  resource_group_name  = \"${azurerm_resource_group.default.name}\"",
      "  storage_account_name = \"${azurerm_storage_account.default.name}\"",
      "}",
      "",
      "resource \"azurerm_eventgrid_event_subscription\" \"default\" {",
      "  name  = \"defaultEventSubscription\"",
      "  scope = \"${azurerm_resource_group.default.id}\"",
      "",
      "  storage_queue_endpoint {",
      "    storage_account_id = \"${azurerm_storage_account.default.id}\"",
      "    queue_name         = \"${azurerm_storage_queue.default.name}\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-eventgrid_topic": {
    "description": "Defines eventgrid_topic",
    "prefix": "tf-azurerm-resource-eventgrid_topic",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West US 2\"",
      "}",
      "",
      "resource \"azurerm_eventgrid_topic\" \"test\" {",
      "  name                = \"my-eventgrid-topic\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-eventhub": {
    "description": "Defines eventhub",
    "prefix": "tf-azurerm-resource-eventhub",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_eventhub_namespace\" \"test\" {",
      "  name                = \"acceptanceTestEventHubNamespace\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  sku                 = \"Standard\"",
      "  capacity            = 1",
      "  kafka_enabled       = false",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_eventhub\" \"test\" {",
      "  name                = \"acceptanceTestEventHub\"",
      "  namespace_name      = \"${azurerm_eventhub_namespace.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  partition_count     = 2",
      "  message_retention   = 1",
      "}"
    ]
  },
  "azurerm-resource-eventhub_authorization_rule": {
    "description": "Defines eventhub_authorization_rule",
    "prefix": "tf-azurerm-resource-eventhub_authorization_rule",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_eventhub_namespace\" \"test\" {",
      "  name                = \"acceptanceTestEventHubNamespace\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  sku                 = \"Basic\"",
      "  capacity            = 2",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_eventhub\" \"test\" {",
      "  name                = \"acceptanceTestEventHub\"",
      "  namespace_name      = \"${azurerm_eventhub_namespace.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  partition_count     = 2",
      "  message_retention   = 2",
      "}",
      "",
      "resource \"azurerm_eventhub_authorization_rule\" \"test\" {",
      "  name                = \"navi\"",
      "  namespace_name      = \"${azurerm_eventhub_namespace.test.name}\"",
      "  eventhub_name       = \"${azurerm_eventhub.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  listen              = true",
      "  send                = false",
      "  manage              = false",
      "}"
    ]
  },
  "azurerm-resource-eventhub_consumer_group": {
    "description": "Defines eventhub_consumer_group",
    "prefix": "tf-azurerm-resource-eventhub_consumer_group",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_eventhub_namespace\" \"test\" {",
      "  name                = \"acceptanceTestEventHubNamespace\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  sku                 = \"Basic\"",
      "  capacity            = 2",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_eventhub\" \"test\" {",
      "  name                = \"acceptanceTestEventHub\"",
      "  namespace_name      = \"${azurerm_eventhub_namespace.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  partition_count     = 2",
      "  message_retention   = 2",
      "}",
      "",
      "resource \"azurerm_eventhub_consumer_group\" \"test\" {",
      "  name                = \"acceptanceTestEventHubConsumerGroup\"",
      "  namespace_name      = \"${azurerm_eventhub_namespace.test.name}\"",
      "  eventhub_name       = \"${azurerm_eventhub.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  user_metadata       = \"some-meta-data\"",
      "}"
    ]
  },
  "azurerm-resource-eventhub_namespace": {
    "description": "Defines eventhub_namespace",
    "prefix": "tf-azurerm-resource-eventhub_namespace",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_eventhub_namespace\" \"test\" {",
      "  name                = \"acceptanceTestEventHubNamespace\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  sku                 = \"Standard\"",
      "  capacity            = 2",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-eventhub_namespace_authorization_rule": {
    "description": "Defines eventhub_namespace_authorization_rule",
    "prefix": "tf-azurerm-resource-eventhub_namespace_authorization_rule",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_eventhub_namespace\" \"test\" {",
      "  name                = \"acceptanceTestEventHubNamespace\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  sku                 = \"Basic\"",
      "  capacity            = 2",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_eventhub_namespace_authorization_rule\" \"test\" {",
      "  name                = \"navi\"",
      "  namespace_name      = \"${azurerm_eventhub_namespace.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  listen = true",
      "  send   = false",
      "  manage = false",
      "}"
    ]
  },
  "azurerm-resource-express_route_circuit": {
    "description": "Defines express_route_circuit",
    "prefix": "tf-azurerm-resource-express_route_circuit",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"exprtTest\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_express_route_circuit\" \"test\" {",
      "  name                  = \"expressRoute1\"",
      "  resource_group_name   = \"${azurerm_resource_group.test.name}\"",
      "  location              = \"${azurerm_resource_group.test.location}\"",
      "  service_provider_name = \"Equinix\"",
      "  peering_location      = \"Silicon Valley\"",
      "  bandwidth_in_mbps     = 50",
      "",
      "  sku {",
      "    tier   = \"Standard\"",
      "    family = \"MeteredData\"",
      "  }",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-express_route_circuit_authorization": {
    "description": "Defines express_route_circuit_authorization",
    "prefix": "tf-azurerm-resource-express_route_circuit_authorization",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"exprtTest\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_express_route_circuit\" \"test\" {",
      "  name                  = \"expressRoute1\"",
      "  resource_group_name   = \"${azurerm_resource_group.test.name}\"",
      "  location              = \"${azurerm_resource_group.test.location}\"",
      "  service_provider_name = \"Equinix\"",
      "  peering_location      = \"Silicon Valley\"",
      "  bandwidth_in_mbps     = 50",
      "",
      "  sku {",
      "    tier   = \"Standard\"",
      "    family = \"MeteredData\"",
      "  }",
      "",
      "  allow_classic_operations = false",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_express_route_circuit_authorization\" \"test\" {",
      "  name                       = \"exampleERCAuth\"",
      "  express_route_circuit_name = \"${azurerm_express_route_circuit.test.name}\"",
      "  resource_group_name        = \"${azurerm_resource_group.test.name}\"",
      "}"
    ]
  },
  "azurerm-resource-express_route_circuit_peering": {
    "description": "Defines express_route_circuit_peering",
    "prefix": "tf-azurerm-resource-express_route_circuit_peering",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"exprtTest\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_express_route_circuit\" \"test\" {",
      "  name                  = \"expressRoute1\"",
      "  resource_group_name   = \"${azurerm_resource_group.test.name}\"",
      "  location              = \"${azurerm_resource_group.test.location}\"",
      "  service_provider_name = \"Equinix\"",
      "  peering_location      = \"Silicon Valley\"",
      "  bandwidth_in_mbps     = 50",
      "",
      "  sku {",
      "    tier   = \"Standard\"",
      "    family = \"MeteredData\"",
      "  }",
      "",
      "  allow_classic_operations = false",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_express_route_circuit_peering\" \"test\" {",
      "  peering_type                  = \"MicrosoftPeering\"",
      "  express_route_circuit_name    = \"${azurerm_express_route_circuit.test.name}\"",
      "  resource_group_name           = \"${azurerm_resource_group.test.name}\"",
      "  peer_asn                      = 100",
      "  primary_peer_address_prefix   = \"123.0.0.0/30\"",
      "  secondary_peer_address_prefix = \"123.0.0.4/30\"",
      "  vlan_id                       = 300",
      "",
      "  microsoft_peering_config {",
      "    advertised_public_prefixes = [\"123.1.0.0/24\"]",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-firewall": {
    "description": "Defines firewall",
    "prefix": "tf-azurerm-resource-firewall",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"North Europe\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"testvnet\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"test\" {",
      "  name                 = \"AzureFirewallSubnet\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.1.0/24\"",
      "}",
      "",
      "resource \"azurerm_public_ip\" \"test\" {",
      "  name                = \"testpip\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  allocation_method   = \"Static\"",
      "  sku                 = \"Standard\"",
      "}",
      "",
      "resource \"azurerm_firewall\" \"test\" {",
      "  name                = \"testfirewall\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  ip_configuration {",
      "    name                 = \"configuration\"",
      "    subnet_id            = \"${azurerm_subnet.test.id}\"",
      "    public_ip_address_id = \"${azurerm_public_ip.test.id}\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-firewall_application_rule_collection": {
    "description": "Defines firewall_application_rule_collection",
    "prefix": "tf-azurerm-resource-firewall_application_rule_collection",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"North Europe\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"testvnet\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"test\" {",
      "  name                 = \"AzureFirewallSubnet\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.1.0/24\"",
      "}",
      "",
      "resource \"azurerm_public_ip\" \"test\" {",
      "  name                = \"testpip\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  allocation_method   = \"Static\"",
      "  sku                 = \"Standard\"",
      "}",
      "",
      "resource \"azurerm_firewall\" \"test\" {",
      "  name                = \"testfirewall\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  ip_configuration {",
      "    name                 = \"configuration\"",
      "    subnet_id            = \"${azurerm_subnet.test.id}\"",
      "    public_ip_address_id = \"${azurerm_public_ip.test.id}\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_firewall_application_rule_collection\" \"test\" {",
      "  name                = \"testcollection\"",
      "  azure_firewall_name = \"${azurerm_firewall.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  priority            = 100",
      "  action              = \"Allow\"",
      "",
      "  rule {",
      "    name = \"testrule\"",
      "",
      "    source_addresses = [",
      "      \"10.0.0.0/16\",",
      "    ]",
      "",
      "    target_fqdns = [",
      "      \"*.google.com\",",
      "    ]",
      "",
      "    protocol {",
      "      port = \"443\"",
      "      type = \"Https\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-firewall_nat_rule_collection": {
    "description": "Defines firewall_nat_rule_collection",
    "prefix": "tf-azurerm-resource-firewall_nat_rule_collection",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"North Europe\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"testvnet\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"test\" {",
      "  name                 = \"AzureFirewallSubnet\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.1.0/24\"",
      "}",
      "",
      "resource \"azurerm_public_ip\" \"test\" {",
      "  name                = \"testpip\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  allocation_method   = \"Static\"",
      "  sku                 = \"Standard\"",
      "}",
      "",
      "resource \"azurerm_firewall\" \"test\" {",
      "  name                = \"testfirewall\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  ip_configuration {",
      "    name                 = \"configuration\"",
      "    subnet_id            = \"${azurerm_subnet.test.id}\"",
      "    public_ip_address_id = \"${azurerm_public_ip.test.id}\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_firewall_nat_rule_collection\" \"test\" {",
      "  name                = \"testcollection\"",
      "  azure_firewall_name = \"${azurerm_firewall.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  priority            = 100",
      "  action              = \"Dnat\"",
      "",
      "  rule {",
      "    name = \"testrule\"",
      "",
      "    source_addresses = [",
      "      \"10.0.0.0/16\",",
      "    ]",
      "",
      "    destination_ports = [",
      "      \"53\",",
      "    ]",
      "",
      "    destination_addresses = [",
      "      \"8.8.8.8\",",
      "      \"8.8.4.4\",",
      "    ]",
      "",
      "    protocols = [",
      "      \"TCP\",",
      "      \"UDP\",",
      "    ]",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-firewall_network_rule_collection": {
    "description": "Defines firewall_network_rule_collection",
    "prefix": "tf-azurerm-resource-firewall_network_rule_collection",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"North Europe\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"testvnet\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"test\" {",
      "  name                 = \"AzureFirewallSubnet\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.1.0/24\"",
      "}",
      "",
      "resource \"azurerm_public_ip\" \"test\" {",
      "  name                = \"testpip\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  allocation_method   = \"Static\"",
      "  sku                 = \"Standard\"",
      "}",
      "",
      "resource \"azurerm_firewall\" \"test\" {",
      "  name                = \"testfirewall\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  ip_configuration {",
      "    name                 = \"configuration\"",
      "    subnet_id            = \"${azurerm_subnet.test.id}\"",
      "    public_ip_address_id = \"${azurerm_public_ip.test.id}\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_firewall_network_rule_collection\" \"test\" {",
      "  name                = \"testcollection\"",
      "  azure_firewall_name = \"${azurerm_firewall.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  priority            = 100",
      "  action              = \"Allow\"",
      "",
      "  rule {",
      "    name = \"testrule\"",
      "",
      "    source_addresses = [",
      "      \"10.0.0.0/16\",",
      "    ]",
      "",
      "    destination_ports = [",
      "      \"53\",",
      "    ]",
      "",
      "    destination_addresses = [",
      "      \"8.8.8.8\",",
      "      \"8.8.4.4\",",
      "    ]",
      "",
      "    protocols = [",
      "      \"TCP\",",
      "      \"UDP\",",
      "    ]",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-function_app": {
    "description": "Defines function_app",
    "prefix": "tf-azurerm-resource-function_app",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"azure-functions-test-rg\"",
      "  location = \"westus2\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"test\" {",
      "  name                     = \"functionsapptestsa\"",
      "  resource_group_name      = \"${azurerm_resource_group.test.name}\"",
      "  location                 = \"${azurerm_resource_group.test.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_app_service_plan\" \"test\" {",
      "  name                = \"azure-functions-test-service-plan\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  sku {",
      "    tier = \"Standard\"",
      "    size = \"S1\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_function_app\" \"test\" {",
      "  name                      = \"test-azure-functions\"",
      "  location                  = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name       = \"${azurerm_resource_group.test.name}\"",
      "  app_service_plan_id       = \"${azurerm_app_service_plan.test.id}\"",
      "  storage_connection_string = \"${azurerm_storage_account.test.primary_connection_string}\"",
      "}"
    ]
  },
  "azurerm-resource-hdinsight_hadoop_cluster": {
    "description": "Defines hdinsight_hadoop_cluster",
    "prefix": "tf-azurerm-resource-hdinsight_hadoop_cluster",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"example\" {",
      "  name                     = \"hdinsightstor\"",
      "  resource_group_name      = \"${azurerm_resource_group.example.name}\"",
      "  location                 = \"${azurerm_resource_group.example.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_storage_container\" \"example\" {",
      "  name                  = \"hdinsight\"",
      "  resource_group_name   = \"${azurerm_resource_group.example.name}\"",
      "  storage_account_name  = \"${azurerm_storage_account.example.name}\"",
      "  container_access_type = \"private\"",
      "}",
      "",
      "resource \"azurerm_hdinsight_hadoop_cluster\" \"example\" {",
      "  name                = \"example-hdicluster\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  cluster_version     = \"3.6\"",
      "  tier                = \"Standard\"",
      "",
      "  component_version {",
      "    hadoop = \"2.7\"",
      "  }",
      "",
      "  gateway {",
      "    enabled  = true",
      "    username = \"acctestusrgw\"",
      "    password = \"TerrAform123!\"",
      "  }",
      "",
      "  storage_account {",
      "    storage_container_id = \"${azurerm_storage_container.example.id}\"",
      "    storage_account_key  = \"${azurerm_storage_account.example.primary_access_key}\"",
      "    is_default           = true",
      "  }",
      "",
      "  roles {",
      "    head_node {",
      "      vm_size  = \"Standard_D3_V2\"",
      "      username = \"acctestusrvm\"",
      "      password = \"AccTestvdSC4daf986!\"",
      "    }",
      "",
      "    worker_node {",
      "      vm_size               = \"Standard_D4_V2\"",
      "      username              = \"acctestusrvm\"",
      "      password              = \"AccTestvdSC4daf986!\"",
      "      target_instance_count = 3",
      "    }",
      "",
      "    zookeeper_node {",
      "      vm_size  = \"Standard_D3_V2\"",
      "      username = \"acctestusrvm\"",
      "      password = \"AccTestvdSC4daf986!\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-hdinsight_hbase_cluster": {
    "description": "Defines hdinsight_hbase_cluster",
    "prefix": "tf-azurerm-resource-hdinsight_hbase_cluster",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"example\" {",
      "  name                     = \"hdinsightstor\"",
      "  resource_group_name      = \"${azurerm_resource_group.example.name}\"",
      "  location                 = \"${azurerm_resource_group.example.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_storage_container\" \"example\" {",
      "  name                  = \"hdinsight\"",
      "  resource_group_name   = \"${azurerm_resource_group.example.name}\"",
      "  storage_account_name  = \"${azurerm_storage_account.example.name}\"",
      "  container_access_type = \"private\"",
      "}",
      "",
      "resource \"azurerm_hdinsight_hbase_cluster\" \"example\" {",
      "  name                = \"example-hdicluster\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  cluster_version     = \"3.6\"",
      "  tier                = \"Standard\"",
      "",
      "  component_version {",
      "    hbase = \"1.1\"",
      "  }",
      "",
      "  gateway {",
      "    enabled  = true",
      "    username = \"acctestusrgw\"",
      "    password = \"TerrAform123!\"",
      "  }",
      "",
      "  storage_account {",
      "    storage_container_id = \"${azurerm_storage_container.example.id}\"",
      "    storage_account_key  = \"${azurerm_storage_account.example.primary_access_key}\"",
      "    is_default           = true",
      "  }",
      "",
      "  roles {",
      "    head_node {",
      "      vm_size  = \"Standard_D3_V2\"",
      "      username = \"acctestusrvm\"",
      "      password = \"AccTestvdSC4daf986!\"",
      "    }",
      "",
      "    worker_node {",
      "      vm_size               = \"Standard_D3_V2\"",
      "      username              = \"acctestusrvm\"",
      "      password              = \"AccTestvdSC4daf986!\"",
      "      target_instance_count = 3",
      "    }",
      "",
      "    zookeeper_node {",
      "      vm_size  = \"Standard_D3_V2\"",
      "      username = \"acctestusrvm\"",
      "      password = \"AccTestvdSC4daf986!\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-hdinsight_interactive_query_cluster": {
    "description": "Defines hdinsight_interactive_query_cluster",
    "prefix": "tf-azurerm-resource-hdinsight_interactive_query_cluster",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"example\" {",
      "  name                     = \"hdinsightstor\"",
      "  resource_group_name      = \"${azurerm_resource_group.example.name}\"",
      "  location                 = \"${azurerm_resource_group.example.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_storage_container\" \"example\" {",
      "  name                  = \"hdinsight\"",
      "  resource_group_name   = \"${azurerm_resource_group.example.name}\"",
      "  storage_account_name  = \"${azurerm_storage_account.example.name}\"",
      "  container_access_type = \"private\"",
      "}",
      "",
      "resource \"azurerm_hdinsight_interactive_query_cluster\" \"example\" {",
      "  name                = \"example-hdicluster\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  cluster_version     = \"3.6\"",
      "  tier                = \"Standard\"",
      "",
      "  component_version {",
      "    interactive_hive = \"2.1\"",
      "  }",
      "",
      "  gateway {",
      "    enabled  = true",
      "    username = \"acctestusrgw\"",
      "    password = \"TerrAform123!\"",
      "  }",
      "",
      "  storage_account {",
      "    storage_container_id = \"${azurerm_storage_container.example.id}\"",
      "    storage_account_key  = \"${azurerm_storage_account.example.primary_access_key}\"",
      "    is_default           = true",
      "  }",
      "",
      "  roles {",
      "    head_node {",
      "      vm_size  = \"Standard_D13_V2\"",
      "      username = \"acctestusrvm\"",
      "      password = \"AccTestvdSC4daf986!\"",
      "    }",
      "",
      "    worker_node {",
      "      vm_size               = \"Standard_D14_V2\"",
      "      username              = \"acctestusrvm\"",
      "      password              = \"AccTestvdSC4daf986!\"",
      "      target_instance_count = 3",
      "    }",
      "",
      "    zookeeper_node {",
      "      vm_size  = \"Standard_A4_V2\"",
      "      username = \"acctestusrvm\"",
      "      password = \"AccTestvdSC4daf986!\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-hdinsight_kafka_cluster": {
    "description": "Defines hdinsight_kafka_cluster",
    "prefix": "tf-azurerm-resource-hdinsight_kafka_cluster",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"example\" {",
      "  name                     = \"hdinsightstor\"",
      "  resource_group_name      = \"${azurerm_resource_group.example.name}\"",
      "  location                 = \"${azurerm_resource_group.example.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_storage_container\" \"example\" {",
      "  name                  = \"hdinsight\"",
      "  resource_group_name   = \"${azurerm_resource_group.example.name}\"",
      "  storage_account_name  = \"${azurerm_storage_account.example.name}\"",
      "  container_access_type = \"private\"",
      "}",
      "",
      "resource \"azurerm_hdinsight_kafka_cluster\" \"example\" {",
      "  name                = \"example-hdicluster\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  cluster_version     = \"3.6\"",
      "  tier                = \"Standard\"",
      "",
      "  component_version {",
      "    kafka = \"2.3\"",
      "  }",
      "",
      "  gateway {",
      "    enabled  = true",
      "    username = \"acctestusrgw\"",
      "    password = \"TerrAform123!\"",
      "  }",
      "",
      "  storage_account {",
      "    storage_container_id = \"${azurerm_storage_container.example.id}\"",
      "    storage_account_key  = \"${azurerm_storage_account.example.primary_access_key}\"",
      "    is_default           = true",
      "  }",
      "",
      "  roles {",
      "    head_node {",
      "      vm_size  = \"Standard_D3_V2\"",
      "      username = \"acctestusrvm\"",
      "      password = \"AccTestvdSC4daf986!\"",
      "    }",
      "",
      "    worker_node {",
      "      vm_size                  = \"Standard_D3_V2\"",
      "      username                 = \"acctestusrvm\"",
      "      password                 = \"AccTestvdSC4daf986!\"",
      "      number_of_disks_per_node = 3",
      "      target_instance_count    = 3",
      "    }",
      "",
      "    zookeeper_node {",
      "      vm_size  = \"Standard_D3_V2\"",
      "      username = \"acctestusrvm\"",
      "      password = \"AccTestvdSC4daf986!\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-hdinsight_ml_services_cluster": {
    "description": "Defines hdinsight_ml_services_cluster",
    "prefix": "tf-azurerm-resource-hdinsight_ml_services_cluster",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"example\" {",
      "  name                     = \"hdinsightstor\"",
      "  resource_group_name      = \"${azurerm_resource_group.example.name}\"",
      "  location                 = \"${azurerm_resource_group.example.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_storage_container\" \"example\" {",
      "  name                  = \"hdinsight\"",
      "  resource_group_name   = \"${azurerm_resource_group.example.name}\"",
      "  storage_account_name  = \"${azurerm_storage_account.example.name}\"",
      "  container_access_type = \"private\"",
      "}",
      "",
      "resource \"azurerm_hdinsight_ml_services_cluster\" \"example\" {",
      "  name                = \"example-hdicluster\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  cluster_version     = \"3.6\"",
      "  tier                = \"Standard\"",
      "  rstudio             = true",
      "",
      "  gateway {",
      "    enabled  = true",
      "    username = \"acctestusrgw\"",
      "    password = \"TerrAform123!\"",
      "  }",
      "",
      "  storage_account {",
      "    storage_container_id = \"${azurerm_storage_container.example.id}\"",
      "    storage_account_key  = \"${azurerm_storage_account.example.primary_access_key}\"",
      "    is_default           = true",
      "  }",
      "",
      "  roles {",
      "    head_node {",
      "      vm_size  = \"Standard_D3_v2\"",
      "      username = \"acctestusrvm\"",
      "      password = \"AccTestvdSC4daf986!\"",
      "    }",
      "",
      "    worker_node {",
      "      vm_size               = \"Standard_D4_V2\"",
      "      username              = \"acctestusrvm\"",
      "      password              = \"AccTestvdSC4daf986!\"",
      "      target_instance_count = 3",
      "    }",
      "",
      "    zookeeper_node {",
      "      vm_size  = \"Standard_D3_v2\"",
      "      username = \"acctestusrvm\"",
      "      password = \"AccTestvdSC4daf986!\"",
      "    }",
      "",
      "    edge_node {",
      "      vm_size  = \"Standard_D3_v2\"",
      "      username = \"acctestusrvm\"",
      "      password = \"AccTestvdSC4daf986!\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-hdinsight_rserver_cluster": {
    "description": "Defines hdinsight_rserver_cluster",
    "prefix": "tf-azurerm-resource-hdinsight_rserver_cluster",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"example\" {",
      "  name                     = \"hdinsightstor\"",
      "  resource_group_name      = \"${azurerm_resource_group.example.name}\"",
      "  location                 = \"${azurerm_resource_group.example.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_storage_container\" \"example\" {",
      "  name                  = \"hdinsight\"",
      "  resource_group_name   = \"${azurerm_resource_group.example.name}\"",
      "  storage_account_name  = \"${azurerm_storage_account.example.name}\"",
      "  container_access_type = \"private\"",
      "}",
      "",
      "resource \"azurerm_hdinsight_rserver_cluster\" \"example\" {",
      "  name                = \"example-hdicluster\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  cluster_version     = \"3.6\"",
      "  tier                = \"Standard\"",
      "  rstudio             = true",
      "",
      "  gateway {",
      "    enabled  = true",
      "    username = \"acctestusrgw\"",
      "    password = \"TerrAform123!\"",
      "  }",
      "",
      "  storage_account {",
      "    storage_container_id = \"${azurerm_storage_container.example.id}\"",
      "    storage_account_key  = \"${azurerm_storage_account.example.primary_access_key}\"",
      "    is_default           = true",
      "  }",
      "",
      "  roles {",
      "    head_node {",
      "      vm_size  = \"Standard_D3_v2\"",
      "      username = \"acctestusrvm\"",
      "      password = \"AccTestvdSC4daf986!\"",
      "    }",
      "",
      "    worker_node {",
      "      vm_size               = \"Standard_D4_V2\"",
      "      username              = \"acctestusrvm\"",
      "      password              = \"AccTestvdSC4daf986!\"",
      "      target_instance_count = 3",
      "    }",
      "",
      "    zookeeper_node {",
      "      vm_size  = \"Standard_D3_v2\"",
      "      username = \"acctestusrvm\"",
      "      password = \"AccTestvdSC4daf986!\"",
      "    }",
      "",
      "    edge_node {",
      "      vm_size  = \"Standard_D3_v2\"",
      "      username = \"acctestusrvm\"",
      "      password = \"AccTestvdSC4daf986!\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-hdinsight_spark_cluster": {
    "description": "Defines hdinsight_spark_cluster",
    "prefix": "tf-azurerm-resource-hdinsight_spark_cluster",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"example\" {",
      "  name                     = \"hdinsightstor\"",
      "  resource_group_name      = \"${azurerm_resource_group.example.name}\"",
      "  location                 = \"${azurerm_resource_group.example.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_storage_container\" \"example\" {",
      "  name                  = \"hdinsight\"",
      "  resource_group_name   = \"${azurerm_resource_group.example.name}\"",
      "  storage_account_name  = \"${azurerm_storage_account.example.name}\"",
      "  container_access_type = \"private\"",
      "}",
      "",
      "resource \"azurerm_hdinsight_spark_cluster\" \"example\" {",
      "  name                = \"example-hdicluster\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  cluster_version     = \"3.6\"",
      "  tier                = \"Standard\"",
      "",
      "  component_version {",
      "    spark = \"2.3\"",
      "  }",
      "",
      "  gateway {",
      "    enabled  = true",
      "    username = \"acctestusrgw\"",
      "    password = \"TerrAform123!\"",
      "  }",
      "",
      "  storage_account {",
      "    storage_container_id = \"${azurerm_storage_container.example.id}\"",
      "    storage_account_key  = \"${azurerm_storage_account.example.primary_access_key}\"",
      "    is_default           = true",
      "  }",
      "",
      "  roles {",
      "    head_node {",
      "      vm_size  = \"Standard_A3\"",
      "      username = \"acctestusrvm\"",
      "      password = \"AccTestvdSC4daf986!\"",
      "    }",
      "",
      "    worker_node {",
      "      vm_size               = \"Standard_A3\"",
      "      username              = \"acctestusrvm\"",
      "      password              = \"AccTestvdSC4daf986!\"",
      "      target_instance_count = 3",
      "    }",
      "",
      "    zookeeper_node {",
      "      vm_size  = \"Medium\"",
      "      username = \"acctestusrvm\"",
      "      password = \"AccTestvdSC4daf986!\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-hdinsight_storm_cluster": {
    "description": "Defines hdinsight_storm_cluster",
    "prefix": "tf-azurerm-resource-hdinsight_storm_cluster",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"example\" {",
      "  name                     = \"hdinsightstor\"",
      "  resource_group_name      = \"${azurerm_resource_group.example.name}\"",
      "  location                 = \"${azurerm_resource_group.example.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_storage_container\" \"example\" {",
      "  name                  = \"hdinsight\"",
      "  resource_group_name   = \"${azurerm_resource_group.example.name}\"",
      "  storage_account_name  = \"${azurerm_storage_account.example.name}\"",
      "  container_access_type = \"private\"",
      "}",
      "",
      "resource \"azurerm_hdinsight_storm_cluster\" \"example\" {",
      "  name                = \"example-hdicluster\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  cluster_version     = \"3.6\"",
      "  tier                = \"Standard\"",
      "",
      "  component_version {",
      "    storm = \"1.1\"",
      "  }",
      "",
      "  gateway {",
      "    enabled  = true",
      "    username = \"acctestusrgw\"",
      "    password = \"TerrAform123!\"",
      "  }",
      "",
      "  storage_account {",
      "    storage_container_id = \"${azurerm_storage_container.example.id}\"",
      "    storage_account_key  = \"${azurerm_storage_account.example.primary_access_key}\"",
      "    is_default           = true",
      "  }",
      "",
      "  roles {",
      "    head_node {",
      "      vm_size  = \"Standard_A3\"",
      "      username = \"acctestusrvm\"",
      "      password = \"AccTestvdSC4daf986!\"",
      "    }",
      "",
      "    worker_node {",
      "      vm_size               = \"Standard_D3_V2\"",
      "      username              = \"acctestusrvm\"",
      "      password              = \"AccTestvdSC4daf986!\"",
      "      target_instance_count = 3",
      "    }",
      "",
      "    zookeeper_node {",
      "      vm_size  = \"Standard_A4_V2\"",
      "      username = \"acctestusrvm\"",
      "      password = \"AccTestvdSC4daf986!\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-image": {
    "description": "Defines image",
    "prefix": "tf-azurerm-resource-image",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acctest\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_image\" \"test\" {",
      "  name                = \"acctest\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  os_disk {",
      "    os_type  = \"Linux\"",
      "    os_state = \"Generalized\"",
      "    blob_uri = \"{blob_uri}\"",
      "    size_gb  = 30",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-iot_dps": {
    "description": "Defines iot_dps",
    "prefix": "tf-azurerm-resource-iot_dps",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_iot_dps\" \"example\" {",
      "  name                = \"example\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "",
      "  sku {",
      "    name     = \"S1\"",
      "    tier     = \"Standard\"",
      "    capacity = \"1\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-iot_dps_certificate": {
    "description": "Defines iot_dps_certificate",
    "prefix": "tf-azurerm-resource-iot_dps_certificate",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_iot_dps\" \"example\" {",
      "  name                = \"example\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "",
      "  sku {",
      "    name     = \"S1\"",
      "    tier     = \"Standard\"",
      "    capacity = \"1\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_iot_dps_certificate\" \"example\" {",
      "  name                = \"example\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  iot_dps_name        = \"${azurerm_iot_dps.example.name}\"",
      "",
      "  certificate_content = \"${filebase64(\"example.cer\")}\"",
      "}"
    ]
  },
  "azurerm-resource-iothub": {
    "description": "Defines iothub",
    "prefix": "tf-azurerm-resource-iothub",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"test\" {",
      "  name                     = \"teststa\"",
      "  resource_group_name      = \"${azurerm_resource_group.test.name}\"",
      "  location                 = \"${azurerm_resource_group.test.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_storage_container\" \"test\" {",
      "  name                  = \"test\"",
      "  resource_group_name   = \"${azurerm_resource_group.test.name}\"",
      "  storage_account_name  = \"${azurerm_storage_account.test.name}\"",
      "  container_access_type = \"private\"",
      "}",
      "",
      "resource \"azurerm_iothub\" \"test\" {",
      "  name                = \"test\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "",
      "  sku {",
      "    name     = \"S1\"",
      "    tier     = \"Standard\"",
      "    capacity = \"1\"",
      "  }",
      "",
      "  endpoint {",
      "    type                       = \"AzureIotHub.StorageContainer\"",
      "    connection_string          = \"${azurerm_storage_account.test.primary_blob_connection_string}\"",
      "    name                       = \"export\"",
      "    batch_frequency_in_seconds = 60",
      "    max_chunk_size_in_bytes    = 10485760",
      "    container_name             = \"test\"",
      "    encoding                   = \"Avro\"",
      "    file_name_format           = \"{iothub}/{partition}_{YYYY}_{MM}_{DD}_{HH}_{mm}\"",
      "  }",
      "",
      "  route {",
      "    name           = \"export\"",
      "    source         = \"DeviceMessages\"",
      "    condition      = \"true\"",
      "    endpoint_names = [\"export\"]",
      "    enabled        = true",
      "  }",
      "",
      "  fallback_route {",
      "    enabled = true",
      "  }",
      "",
      "  file_upload {",
      "    connection_string  = \"${azurerm_storage_account.test.primary_blob_connection_string}\"",
      "    container_name     = \"${azurerm_storage_container.test.name}\"",
      "    sas_ttl            = \"PT1H\"",
      "    notifications      = true",
      "    lock_duration      = \"PT1M\"",
      "    default_ttl        = \"PT1H\"",
      "    max_delivery_count = 10",
      "  }",
      "",
      "  tags = {",
      "    purpose = \"testing\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-iothub_consumer_group": {
    "description": "Defines iothub_consumer_group",
    "prefix": "tf-azurerm-resource-iothub_consumer_group",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_iothub\" \"test\" {",
      "  name                = \"test\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "",
      "  sku {",
      "    name     = \"S1\"",
      "    tier     = \"Standard\"",
      "    capacity = \"1\"",
      "  }",
      "",
      "  tags = {",
      "    purpose = \"testing\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_iothub_consumer_group\" \"test\" {",
      "  name                   = \"terraform\"",
      "  iothub_name            = \"${azurerm_iothub.test.name}\"",
      "  eventhub_endpoint_name = \"events\"",
      "  resource_group_name    = \"${azurerm_resource_group.foo.name}\"",
      "}"
    ]
  },
  "azurerm-resource-iothub_shared_access_policy": {
    "description": "Defines iothub_shared_access_policy",
    "prefix": "tf-azurerm-resource-iothub_shared_access_policy",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_iothub\" \"example\" {",
      "  name                = \"example\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "",
      "  sku {",
      "    name     = \"S1\"",
      "    tier     = \"Standard\"",
      "    capacity = \"1\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_iothub_shared_access_policy\" \"example\" {",
      "  name                = \"example\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  iothub_name         = \"${azurerm_iothub.example.name}\"",
      "",
      "  registry_read  = true",
      "  registry_write = true",
      "}"
    ]
  },
  "azurerm-resource-key_vault": {
    "description": "Defines key_vault",
    "prefix": "tf-azurerm-resource-key_vault",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_key_vault\" \"test\" {",
      "  name                        = \"testvault\"",
      "  location                    = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name         = \"${azurerm_resource_group.test.name}\"",
      "  enabled_for_disk_encryption = true",
      "  tenant_id                   = \"d6e396d0-5584-41dc-9fc0-268df99bc610\"",
      "",
      "  sku_name = \"standard\"",
      "",
      "  access_policy {",
      "    tenant_id = \"d6e396d0-5584-41dc-9fc0-268df99bc610\"",
      "    object_id = \"d746815a-0433-4a21-b95d-fc437d2d475b\"",
      "",
      "    key_permissions = [",
      "      \"get\",",
      "    ]",
      "",
      "    secret_permissions = [",
      "      \"get\",",
      "    ]",
      "",
      "    storage_permissions = [",
      "      \"get\",",
      "    ]",
      "  }",
      "",
      "  network_acls {",
      "    default_action = \"Deny\"",
      "    bypass         = \"AzureServices\"",
      "  }",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-key_vault_access_policy": {
    "description": "Defines key_vault_access_policy",
    "prefix": "tf-azurerm-resource-key_vault_access_policy",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"${azurerm_resource_group.test.location}\"",
      "}",
      "",
      "resource \"azurerm_key_vault\" \"test\" {",
      "  name                = \"testvault\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  sku_name = \"standard\"",
      "",
      "  tenant_id = \"22222222-2222-2222-2222-222222222222\"",
      "",
      "  enabled_for_disk_encryption = true",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_key_vault_access_policy\" \"test\" {",
      "  key_vault_id = \"${azurerm_key_vault.test.id}\"",
      "",
      "  tenant_id = \"00000000-0000-0000-0000-000000000000\"",
      "  object_id = \"11111111-1111-1111-1111-111111111111\"",
      "",
      "  key_permissions = [",
      "    \"get\",",
      "  ]",
      "",
      "  secret_permissions = [",
      "    \"get\",",
      "  ]",
      "}"
    ]
  },
  "azurerm-resource-key_vault_certificate": {
    "description": "Defines key_vault_certificate",
    "prefix": "tf-azurerm-resource-key_vault_certificate",
    "body": [
      "data \"azurerm_client_config\" \"current\" {}",
      "",
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"key-vault-certificate-example\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_key_vault\" \"test\" {",
      "  name                = \"keyvaultcertexample\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  tenant_id           = \"${data.azurerm_client_config.current.tenant_id}\"",
      "",
      "  sku_name = \"standard\"",
      "",
      "  access_policy {",
      "    tenant_id = \"${data.azurerm_client_config.current.tenant_id}\"",
      "    object_id = \"${data.azurerm_client_config.current.service_principal_object_id}\"",
      "",
      "    certificate_permissions = [",
      "      \"create\",",
      "      \"delete\",",
      "      \"deleteissuers\",",
      "      \"get\",",
      "      \"getissuers\",",
      "      \"import\",",
      "      \"list\",",
      "      \"listissuers\",",
      "      \"managecontacts\",",
      "      \"manageissuers\",",
      "      \"setissuers\",",
      "      \"update\",",
      "    ]",
      "",
      "    key_permissions = [",
      "      \"backup\",",
      "      \"create\",",
      "      \"decrypt\",",
      "      \"delete\",",
      "      \"encrypt\",",
      "      \"get\",",
      "      \"import\",",
      "      \"list\",",
      "      \"purge\",",
      "      \"recover\",",
      "      \"restore\",",
      "      \"sign\",",
      "      \"unwrapKey\",",
      "      \"update\",",
      "      \"verify\",",
      "      \"wrapKey\",",
      "    ]",
      "",
      "    secret_permissions = [",
      "      \"backup\",",
      "      \"delete\",",
      "      \"get\",",
      "      \"list\",",
      "      \"purge\",",
      "      \"recover\",",
      "      \"restore\",",
      "      \"set\",",
      "    ]",
      "  }",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_key_vault_certificate\" \"test\" {",
      "  name         = \"imported-cert\"",
      "  key_vault_id = \"${azurerm_key_vault.test.id}\"",
      "",
      "  certificate {",
      "    contents = \"${filebase64(\"certificate-to-import.pfx\")}\"",
      "    password = \"\"",
      "  }",
      "",
      "  certificate_policy {",
      "    issuer_parameters {",
      "      name = \"Self\"",
      "    }",
      "",
      "    key_properties {",
      "      exportable = true",
      "      key_size   = 2048",
      "      key_type   = \"RSA\"",
      "      reuse_key  = false",
      "    }",
      "",
      "    secret_properties {",
      "      content_type = \"application/x-pkcs12\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-key_vault_key": {
    "description": "Defines key_vault_key",
    "prefix": "tf-azurerm-resource-key_vault_key",
    "body": [
      "data \"azurerm_client_config\" \"current\" {}",
      "",
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"my-resource-group\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"random_id\" \"server\" {",
      "  keepers = {",
      "    ami_id = 1",
      "  }",
      "",
      "  byte_length = 8",
      "}",
      "",
      "resource \"azurerm_key_vault\" \"test\" {",
      "  name                = \"keyvaultkeyexample\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  tenant_id           = \"${data.azurerm_client_config.current.tenant_id}\"",
      "",
      "  sku_name = \"premium\"",
      "",
      "  access_policy {",
      "    tenant_id = \"${data.azurerm_client_config.current.tenant_id}\"",
      "    object_id = \"${data.azurerm_client_config.current.service_principal_object_id}\"",
      "",
      "    key_permissions = [",
      "      \"create\",",
      "      \"get\",",
      "    ]",
      "",
      "    secret_permissions = [",
      "      \"set\",",
      "    ]",
      "  }",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_key_vault_key\" \"generated\" {",
      "  name         = \"generated-certificate\"",
      "  key_vault_id = \"${azurerm_key_vault.test.id}\"",
      "  key_type     = \"RSA\"",
      "  key_size     = 2048",
      "",
      "  key_opts = [",
      "    \"decrypt\",",
      "    \"encrypt\",",
      "    \"sign\",",
      "    \"unwrapKey\",",
      "    \"verify\",",
      "    \"wrapKey\",",
      "  ]",
      "}"
    ]
  },
  "azurerm-resource-key_vault_secret": {
    "description": "Defines key_vault_secret",
    "prefix": "tf-azurerm-resource-key_vault_secret",
    "body": [
      "data \"azurerm_client_config\" \"current\" {}",
      "",
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"my-resource-group\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"random_id\" \"server\" {",
      "  keepers = {",
      "    ami_id = 1",
      "  }",
      "",
      "  byte_length = 8",
      "}",
      "",
      "resource \"azurerm_key_vault\" \"test\" {",
      "  name                = \"${format(\"%s%s\", \"kv\", random_id.server.hex)}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  tenant_id           = \"${data.azurerm_client_config.current.tenant_id}\"",
      "",
      "  sku_name = \"premium\"",
      "",
      "  access_policy {",
      "    tenant_id = \"${data.azurerm_client_config.current.tenant_id}\"",
      "    object_id = \"${data.azurerm_client_config.current.service_principal_object_id}\"",
      "",
      "    key_permissions = [",
      "      \"create\",",
      "      \"get\",",
      "    ]",
      "",
      "    secret_permissions = [",
      "      \"set\",",
      "      \"get\",",
      "      \"delete\",",
      "    ]",
      "  }",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_key_vault_secret\" \"test\" {",
      "  name         = \"secret-sauce\"",
      "  value        = \"szechuan\"",
      "  key_vault_id = \"${azurerm_key_vault.test.id}\"",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-kubernetes_cluster": {
    "description": "Defines kubernetes_cluster",
    "prefix": "tf-azurerm-resource-kubernetes_cluster",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acctestRG1\"",
      "  location = \"East US\"",
      "}",
      "",
      "resource \"azurerm_kubernetes_cluster\" \"test\" {",
      "  name                = \"acctestaks1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  dns_prefix          = \"acctestagent1\"",
      "",
      "  agent_pool_profile {",
      "    name            = \"default\"",
      "    count           = 1",
      "    vm_size         = \"Standard_D1_v2\"",
      "    os_type         = \"Linux\"",
      "    os_disk_size_gb = 30",
      "  }",
      "",
      "  agent_pool_profile {",
      "    name            = \"pool2\"",
      "    count           = 1",
      "    vm_size         = \"Standard_D2_v2\"",
      "    os_type         = \"Linux\"",
      "    os_disk_size_gb = 30",
      "  }",
      "",
      "  service_principal {",
      "    client_id     = \"00000000-0000-0000-0000-000000000000\"",
      "    client_secret = \"00000000000000000000000000000000\"",
      "  }",
      "",
      "  tags = {",
      "    Environment = \"Production\"",
      "  }",
      "}",
      "",
      "output \"client_certificate\" {",
      "  value = \"${azurerm_kubernetes_cluster.test.kube_config.0.client_certificate}\"",
      "}",
      "",
      "output \"kube_config\" {",
      "  value = \"${azurerm_kubernetes_cluster.test.kube_config_raw}\"",
      "}"
    ]
  },
  "azurerm-resource-loadbalancer": {
    "description": "Defines loadbalancer",
    "prefix": "tf-azurerm-resource-loadbalancer",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"LoadBalancerRG\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_public_ip\" \"test\" {",
      "  name                = \"PublicIPForLB\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  allocation_method   = \"Static\"",
      "}",
      "",
      "resource \"azurerm_lb\" \"test\" {",
      "  name                = \"TestLoadBalancer\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  frontend_ip_configuration {",
      "    name                 = \"PublicIPAddress\"",
      "    public_ip_address_id = \"${azurerm_public_ip.test.id}\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-loadbalancer_backend_address_pool": {
    "description": "Defines loadbalancer_backend_address_pool",
    "prefix": "tf-azurerm-resource-loadbalancer_backend_address_pool",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"LoadBalancerRG\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_public_ip\" \"test\" {",
      "  name                = \"PublicIPForLB\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  allocation_method   = \"Static\"",
      "}",
      "",
      "resource \"azurerm_lb\" \"test\" {",
      "  name                = \"TestLoadBalancer\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  frontend_ip_configuration {",
      "    name                 = \"PublicIPAddress\"",
      "    public_ip_address_id = \"${azurerm_public_ip.test.id}\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_lb_backend_address_pool\" \"test\" {",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  loadbalancer_id     = \"${azurerm_lb.test.id}\"",
      "  name                = \"BackEndAddressPool\"",
      "}"
    ]
  },
  "azurerm-resource-loadbalancer_nat_pool": {
    "description": "Defines loadbalancer_nat_pool",
    "prefix": "tf-azurerm-resource-loadbalancer_nat_pool",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"LoadBalancerRG\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_public_ip\" \"test\" {",
      "  name                = \"PublicIPForLB\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  allocation_method   = \"Static\"",
      "}",
      "",
      "resource \"azurerm_lb\" \"test\" {",
      "  name                = \"TestLoadBalancer\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  frontend_ip_configuration {",
      "    name                 = \"PublicIPAddress\"",
      "    public_ip_address_id = \"${azurerm_public_ip.test.id}\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_lb_nat_pool\" \"test\" {",
      "  resource_group_name            = \"${azurerm_resource_group.test.name}\"",
      "  loadbalancer_id                = \"${azurerm_lb.test.id}\"",
      "  name                           = \"SampleApplicationPool\"",
      "  protocol                       = \"Tcp\"",
      "  frontend_port_start            = 80",
      "  frontend_port_end              = 81",
      "  backend_port                   = 8080",
      "  frontend_ip_configuration_name = \"PublicIPAddress\"",
      "}"
    ]
  },
  "azurerm-resource-loadbalancer_nat_rule": {
    "description": "Defines loadbalancer_nat_rule",
    "prefix": "tf-azurerm-resource-loadbalancer_nat_rule",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"LoadBalancerRG\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_public_ip\" \"test\" {",
      "  name                = \"PublicIPForLB\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  allocation_method   = \"Static\"",
      "}",
      "",
      "resource \"azurerm_lb\" \"test\" {",
      "  name                = \"TestLoadBalancer\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  frontend_ip_configuration {",
      "    name                 = \"PublicIPAddress\"",
      "    public_ip_address_id = \"${azurerm_public_ip.test.id}\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_lb_nat_rule\" \"test\" {",
      "  resource_group_name            = \"${azurerm_resource_group.test.name}\"",
      "  loadbalancer_id                = \"${azurerm_lb.test.id}\"",
      "  name                           = \"RDPAccess\"",
      "  protocol                       = \"Tcp\"",
      "  frontend_port                  = 3389",
      "  backend_port                   = 3389",
      "  frontend_ip_configuration_name = \"PublicIPAddress\"",
      "}"
    ]
  },
  "azurerm-resource-loadbalancer_outbound_rule": {
    "description": "Defines loadbalancer_outbound_rule",
    "prefix": "tf-azurerm-resource-loadbalancer_outbound_rule",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"LoadBalancerRG\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_public_ip\" \"test\" {",
      "  name                = \"PublicIPForLB\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  allocation_method   = \"Static\"",
      "}",
      "",
      "resource \"azurerm_lb\" \"test\" {",
      "  name                = \"TestLoadBalancer\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  frontend_ip_configuration {",
      "    name                 = \"PublicIPAddress\"",
      "    public_ip_address_id = \"${azurerm_public_ip.test.id}\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_lb_backend_address_pool\" \"test\" {",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  loadbalancer_id     = \"${azurerm_lb.test.id}\"",
      "  name                = \"be-%d\"",
      "}",
      "",
      "resource \"azurerm_lb_outbound_rule\" \"test\" {",
      "  resource_group_name     = \"${azurerm_resource_group.test.name}\"",
      "  loadbalancer_id         = \"${azurerm_lb.test.id}\"",
      "  name                    = \"OutboundRule\"",
      "  protocol                = \"Tcp\"",
      "  backend_address_pool_id = \"${azurerm_lb_backend_address_pool.test.id}\"",
      "",
      "  frontend_ip_configuration {",
      "    name = \"PublicIPAddress\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-loadbalancer_probe": {
    "description": "Defines loadbalancer_probe",
    "prefix": "tf-azurerm-resource-loadbalancer_probe",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"LoadBalancerRG\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_public_ip\" \"test\" {",
      "  name                = \"PublicIPForLB\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  allocation_method   = \"Static\"",
      "}",
      "",
      "resource \"azurerm_lb\" \"test\" {",
      "  name                = \"TestLoadBalancer\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  frontend_ip_configuration {",
      "    name                 = \"PublicIPAddress\"",
      "    public_ip_address_id = \"${azurerm_public_ip.test.id}\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_lb_probe\" \"test\" {",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  loadbalancer_id     = \"${azurerm_lb.test.id}\"",
      "  name                = \"ssh-running-probe\"",
      "  port                = 22",
      "}"
    ]
  },
  "azurerm-resource-loadbalancer_rule": {
    "description": "Defines loadbalancer_rule",
    "prefix": "tf-azurerm-resource-loadbalancer_rule",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"LoadBalancerRG\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_public_ip\" \"test\" {",
      "  name                = \"PublicIPForLB\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  allocation_method   = \"Static\"",
      "}",
      "",
      "resource \"azurerm_lb\" \"test\" {",
      "  name                = \"TestLoadBalancer\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  frontend_ip_configuration {",
      "    name                 = \"PublicIPAddress\"",
      "    public_ip_address_id = \"${azurerm_public_ip.test.id}\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_lb_rule\" \"test\" {",
      "  resource_group_name            = \"${azurerm_resource_group.test.name}\"",
      "  loadbalancer_id                = \"${azurerm_lb.test.id}\"",
      "  name                           = \"LBRule\"",
      "  protocol                       = \"Tcp\"",
      "  frontend_port                  = 3389",
      "  backend_port                   = 3389",
      "  frontend_ip_configuration_name = \"PublicIPAddress\"",
      "}"
    ]
  },
  "azurerm-resource-local_network_gateway": {
    "description": "Defines local_network_gateway",
    "prefix": "tf-azurerm-resource-local_network_gateway",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"localNetworkGWTest\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_local_network_gateway\" \"home\" {",
      "  name                = \"backHome\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  gateway_address     = \"12.13.14.15\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "}"
    ]
  },
  "azurerm-resource-log_analytics_linked_service": {
    "description": "Defines log_analytics_linked_service",
    "prefix": "tf-azurerm-resource-log_analytics_linked_service",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"resourcegroup-01\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_automation_account\" \"test\" {",
      "  name                = \"automation-01\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  sku {",
      "    name = \"Basic\"",
      "  }",
      "",
      "  tags = {",
      "    environment = \"development\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_log_analytics_workspace\" \"test\" {",
      "  name                = \"workspace-01\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  sku                 = \"PerGB2018\"",
      "  retention_in_days   = 30",
      "}",
      "",
      "resource \"azurerm_log_analytics_linked_service\" \"test\" {",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  workspace_name      = \"${azurerm_log_analytics_workspace.test.name}\"",
      "  resource_id         = \"${azurerm_automation_account.test.id}\"",
      "}"
    ]
  },
  "azurerm-resource-log_analytics_solution": {
    "description": "Defines log_analytics_solution",
    "prefix": "tf-azurerm-resource-log_analytics_solution",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"k8s-log-analytics-test\"",
      "  location = \"westeurope\"",
      "}",
      "",
      "resource \"random_id\" \"workspace\" {",
      "  keepers = {",
      "    # Generate a new id each time we switch to a new resource group",
      "    group_name = \"${azurerm_resource_group.test.name}\"",
      "  }",
      "",
      "  byte_length = 8",
      "}",
      "",
      "resource \"azurerm_log_analytics_workspace\" \"test\" {",
      "  name                = \"k8s-workspace-${random_id.workspace.hex}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  sku                 = \"PerGB2018\"",
      "}",
      "",
      "resource \"azurerm_log_analytics_solution\" \"test\" {",
      "  solution_name         = \"ContainerInsights\"",
      "  location              = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name   = \"${azurerm_resource_group.test.name}\"",
      "  workspace_resource_id = \"${azurerm_log_analytics_workspace.test.id}\"",
      "  workspace_name        = \"${azurerm_log_analytics_workspace.test.name}\"",
      "",
      "  plan {",
      "    publisher = \"Microsoft\"",
      "    product   = \"OMSGallery/ContainerInsights\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-log_analytics_workspace": {
    "description": "Defines log_analytics_workspace",
    "prefix": "tf-azurerm-resource-log_analytics_workspace",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acctestRG-01\"",
      "  location = \"East US\"",
      "}",
      "",
      "resource \"azurerm_log_analytics_workspace\" \"test\" {",
      "  name                = \"acctest-01\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  sku                 = \"PerGB2018\"",
      "  retention_in_days   = 30",
      "}"
    ]
  },
  "azurerm-resource-log_analytics_workspace_linked_service": {
    "description": "Defines log_analytics_workspace_linked_service",
    "prefix": "tf-azurerm-resource-log_analytics_workspace_linked_service",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"resourcegroup-01\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_automation_account\" \"test\" {",
      "  name                = \"automation-01\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  sku {",
      "    name = \"Basic\"",
      "  }",
      "",
      "  tags = {",
      "    environment = \"development\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_log_analytics_workspace\" \"test\" {",
      "  name                = \"workspace-01\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  sku                 = \"PerGB2018\"",
      "  retention_in_days   = 30",
      "}",
      "",
      "resource \"azurerm_log_analytics_workspace_linked_service\" \"test\" {",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  workspace_name      = \"${azurerm_log_analytics_workspace.test.name}\"",
      "  resource_id         = \"${azurerm_automation_account.test.id}\"",
      "}"
    ]
  },
  "azurerm-resource-logic_app_action_custom": {
    "description": "Defines logic_app_action_custom",
    "prefix": "tf-azurerm-resource-logic_app_action_custom",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"workflow-resources\"",
      "  location = \"East US\"",
      "}",
      "",
      "resource \"azurerm_logic_app_workflow\" \"test\" {",
      "  name                = \"workflow1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_logic_app_action_custom\" \"test\" {",
      "  name         = \"example-action\"",
      "  logic_app_id = \"${azurerm_logic_app_workflow.test.id}\"",
      "",
      "  body = <<BODY",
      "{",
      "    \"description\": \"A variable to configure the auto expiration age in days. Configured in negative number. Default is -30 (30 days old).\",",
      "    \"inputs\": {",
      "        \"variables\": [",
      "            {",
      "                \"name\": \"ExpirationAgeInDays\",",
      "                \"type\": \"Integer\",",
      "                \"value\": -30",
      "            }",
      "        ]",
      "    },",
      "    \"runAfter\": {},",
      "    \"type\": \"InitializeVariable\"",
      "}",
      "BODY",
      "}"
    ]
  },
  "azurerm-resource-logic_app_action_http": {
    "description": "Defines logic_app_action_http",
    "prefix": "tf-azurerm-resource-logic_app_action_http",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"workflow-resources\"",
      "  location = \"East US\"",
      "}",
      "",
      "resource \"azurerm_logic_app_workflow\" \"test\" {",
      "  name                = \"workflow1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_logic_app_action_http\" \"test\" {",
      "  name         = \"webhook\"",
      "  logic_app_id = \"${azurerm_logic_app_workflow.test.id}\"",
      "  method       = \"GET\"",
      "  uri          = \"http://example.com/some-webhook\"",
      "}"
    ]
  },
  "azurerm-resource-logic_app_trigger_custom": {
    "description": "Defines logic_app_trigger_custom",
    "prefix": "tf-azurerm-resource-logic_app_trigger_custom",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"workflow-resources\"",
      "  location = \"East US\"",
      "}",
      "",
      "resource \"azurerm_logic_app_workflow\" \"test\" {",
      "  name                = \"workflow1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_logic_app_trigger_custom\" \"test\" {",
      "  name         = \"example-trigger\"",
      "  logic_app_id = \"${azurerm_logic_app_workflow.test.id}\"",
      "",
      "  body = <<BODY",
      "{",
      "  \"recurrence\": {",
      "    \"frequency\": \"Day\",",
      "    \"interval\": 1",
      "  },",
      "  \"type\": \"Recurrence\"",
      "}",
      "BODY",
      "}"
    ]
  },
  "azurerm-resource-logic_app_trigger_http_request": {
    "description": "Defines logic_app_trigger_http_request",
    "prefix": "tf-azurerm-resource-logic_app_trigger_http_request",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"workflow-resources\"",
      "  location = \"East US\"",
      "}",
      "",
      "resource \"azurerm_logic_app_workflow\" \"test\" {",
      "  name                = \"workflow1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_logic_app_trigger_http_request\" \"test\" {",
      "  name         = \"some-http-trigger\"",
      "  logic_app_id = \"${azurerm_logic_app_workflow.test.id}\"",
      "",
      "  schema = <<SCHEMA",
      "{",
      "    \"type\": \"object\",",
      "    \"properties\": {",
      "        \"hello\": {",
      "            \"type\": \"string\"",
      "        }",
      "    }",
      "}",
      "SCHEMA",
      "}"
    ]
  },
  "azurerm-resource-logic_app_trigger_recurrence": {
    "description": "Defines logic_app_trigger_recurrence",
    "prefix": "tf-azurerm-resource-logic_app_trigger_recurrence",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"workflow-resources\"",
      "  location = \"East US\"",
      "}",
      "",
      "resource \"azurerm_logic_app_workflow\" \"test\" {",
      "  name                = \"workflow1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_logic_app_trigger_recurrence\" \"test\" {",
      "  name         = \"run-every-day\"",
      "  logic_app_id = \"${azurerm_logic_app_workflow.test.id}\"",
      "  frequency    = \"Day\"",
      "  interval     = 1",
      "}"
    ]
  },
  "azurerm-resource-logic_app_workflow": {
    "description": "Defines logic_app_workflow",
    "prefix": "tf-azurerm-resource-logic_app_workflow",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"workflow-resources\"",
      "  location = \"East US\"",
      "}",
      "",
      "resource \"azurerm_logic_app_workflow\" \"test\" {",
      "  name                = \"workflow1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}"
    ]
  },
  "azurerm-resource-managed_disk": {
    "description": "Defines managed_disk",
    "prefix": "tf-azurerm-resource-managed_disk",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acctestRG\"",
      "  location = \"West US 2\"",
      "}",
      "",
      "resource \"azurerm_managed_disk\" \"test\" {",
      "  name                 = \"acctestmd\"",
      "  location             = \"West US 2\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  storage_account_type = \"Standard_LRS\"",
      "  create_option        = \"Empty\"",
      "  disk_size_gb         = \"1\"",
      "",
      "  tags = {",
      "    environment = \"staging\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-management_group": {
    "description": "Defines management_group",
    "prefix": "tf-azurerm-resource-management_group",
    "body": [
      "data \"azurerm_subscription\" \"current\" {}",
      "",
      "resource \"azurerm_management_group\" \"example_parent\" {",
      "  display_name = \"ParentGroup\"",
      "",
      "  subscription_ids = [",
      "    \"${data.azurerm_subscription.current.subscription_id}\",",
      "  ]",
      "}",
      "",
      "resource \"azurerm_management_group\" \"example_child\" {",
      "  display_name               = \"ChildGroup\"",
      "  parent_management_group_id = \"${azurerm_management_group.example_parent.id}\"",
      "",
      "  subscription_ids = [",
      "    \"${data.azurerm_subscription.current.subscription_id}\",",
      "  ]",
      "",
      "  # other subscription IDs can go here",
      "}"
    ]
  },
  "azurerm-resource-management_lock": {
    "description": "Defines management_lock",
    "prefix": "tf-azurerm-resource-management_lock",
    "body": [
      "data \"azurerm_subscription\" \"current\" {}",
      "",
      "resource \"azurerm_management_lock\" \"subscription-level\" {",
      "  name       = \"subscription-level\"",
      "  scope      = \"${data.azurerm_subscription.current.id}\"",
      "  lock_level = \"CanNotDelete\"",
      "  notes      = \"Items can't be deleted in this subscription!\"",
      "}"
    ]
  },
  "azurerm-resource-maps_account": {
    "description": "Defines maps_account",
    "prefix": "tf-azurerm-resource-maps_account",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_maps_account\" \"test\" {",
      "  name                = \"example-maps-account\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  sku_name            = \"s1\"",
      "",
      "  tags = {",
      "    environment = \"Test\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-mariadb_database": {
    "description": "Defines mariadb_database",
    "prefix": "tf-azurerm-resource-mariadb_database",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"tfex-mariadb-database-RG\"",
      "  location = \"westeurope\"",
      "}",
      "",
      "resource \"azurerm_mariadb_server\" \"example\" {",
      "  name                = \"mariadb-svr\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "",
      "  sku {",
      "    name     = \"B_Gen5_2\"",
      "    capacity = 2",
      "    tier     = \"Basic\"",
      "    family   = \"Gen5\"",
      "  }",
      "",
      "  storage_profile {",
      "    storage_mb            = 51200",
      "    backup_retention_days = 7",
      "    geo_redundant_backup  = \"Disabled\"",
      "  }",
      "",
      "  administrator_login          = \"acctestun\"",
      "  administrator_login_password = \"H@Sh1CoR3!\"",
      "  version                      = \"10.2\"",
      "  ssl_enforcement              = \"Enabled\"",
      "}",
      "",
      "resource \"azurerm_mariadb_database\" \"example\" {",
      "  name                = \"mariadb_database\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  server_name         = \"${azurerm_mariadb_server.example.name}\"",
      "  charset             = \"utf8\"",
      "  collation           = \"utf8_general_ci\"",
      "}"
    ]
  },
  "azurerm-resource-mariadb_firewall_rule": {
    "description": "Defines mariadb_firewall_rule",
    "prefix": "tf-azurerm-resource-mariadb_firewall_rule",
    "body": [
      "resource \"azurerm_mariadb_firewall_rule\" \"test\" {",
      "  name                = \"test-rule\"",
      "  resource_group_name = \"test-rg\"",
      "  server_name         = \"test-server\"",
      "  start_ip_address    = \"40.112.8.12\"",
      "  end_ip_address      = \"40.112.8.12\"",
      "}"
    ]
  },
  "azurerm-resource-mariadb_server": {
    "description": "Defines mariadb_server",
    "prefix": "tf-azurerm-resource-mariadb_server",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"api-rg-pro\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_mariadb_server\" \"test\" {",
      "  name                = \"mariadb-server-1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  sku {",
      "    name     = \"B_Gen5_2\"",
      "    capacity = 2",
      "    tier     = \"Basic\"",
      "    family   = \"Gen5\"",
      "  }",
      "",
      "  storage_profile {",
      "    storage_mb            = 5120",
      "    backup_retention_days = 7",
      "    geo_redundant_backup  = \"Disabled\"",
      "  }",
      "",
      "  administrator_login          = \"mariadbadmin\"",
      "  administrator_login_password = \"H@Sh1CoR3!\"",
      "  version                      = \"10.2\"",
      "  ssl_enforcement              = \"Enabled\"",
      "}"
    ]
  },
  "azurerm-resource-media_services_account": {
    "description": "Defines media_services_account",
    "prefix": "tf-azurerm-resource-media_services_account",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"media-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"test\" {",
      "  name                     = \"examplestoracc\"",
      "  resource_group_name      = \"${azurerm_resource_group.test.name}\"",
      "  location                 = \"${azurerm_resource_group.test.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"GRS\"",
      "}",
      "",
      "resource \"azurerm_media_services_account\" \"test\" {",
      "  name                = \"examplemediaacc\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  storage_account {",
      "    id         = \"${azurerm_storage_account.test.id}\"",
      "    is_primary = true",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-metric_alertrule": {
    "description": "Defines metric_alertrule",
    "prefix": "tf-azurerm-resource-metric_alertrule",
    "body": [
      "resource \"azurerm_metric_alertrule\" \"test\" {",
      "  name                = \"${azurerm_virtual_machine.test.name}-cpu\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "",
      "  description = \"An alert rule to watch the metric Percentage CPU\"",
      "",
      "  enabled = true",
      "",
      "  resource_id = \"${azurerm_virtual_machine.test.id}\"",
      "  metric_name = \"Percentage CPU\"",
      "  operator    = \"GreaterThan\"",
      "  threshold   = 75",
      "  aggregation = \"Average\"",
      "  period      = \"PT5M\"",
      "",
      "  email_action {",
      "    send_to_service_owners = false",
      "",
      "    custom_emails = [",
      "      \"some.user@example.com\",",
      "    ]",
      "  }",
      "",
      "  webhook_action {",
      "    service_uri = \"https://example.com/some-url\"",
      "",
      "    properties = {",
      "      severity        = \"incredible\"",
      "      acceptance_test = \"true\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-monitor_action_group": {
    "description": "Defines monitor_action_group",
    "prefix": "tf-azurerm-resource-monitor_action_group",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"monitoring-resources\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_monitor_action_group\" \"test\" {",
      "  name                = \"CriticalAlertsAction\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  short_name          = \"p0action\"",
      "",
      "  email_receiver {",
      "    name          = \"sendtoadmin\"",
      "    email_address = \"admin@contoso.com\"",
      "  }",
      "",
      "  email_receiver {",
      "    name          = \"sendtodevops\"",
      "    email_address = \"devops@contoso.com\"",
      "  }",
      "",
      "  sms_receiver {",
      "    name         = \"oncallmsg\"",
      "    country_code = \"1\"",
      "    phone_number = \"1231231234\"",
      "  }",
      "",
      "  webhook_receiver {",
      "    name        = \"callmyapiaswell\"",
      "    service_uri = \"http://example.com/alert\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-monitor_activity_log_alert": {
    "description": "Defines monitor_activity_log_alert",
    "prefix": "tf-azurerm-resource-monitor_activity_log_alert",
    "body": [
      "resource \"azurerm_resource_group\" \"main\" {",
      "  name     = \"example-resources\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_monitor_action_group\" \"main\" {",
      "  name                = \"example-actiongroup\"",
      "  resource_group_name = \"${azurerm_resource_group.main.name}\"",
      "  short_name          = \"p0action\"",
      "",
      "  webhook_receiver {",
      "    name        = \"callmyapi\"",
      "    service_uri = \"http://example.com/alert\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"to_monitor\" {",
      "  name                     = \"examplesa\"",
      "  resource_group_name      = \"${azurerm_resource_group.main.name}\"",
      "  location                 = \"${azurerm_resource_group.main.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"GRS\"",
      "}",
      "",
      "resource \"azurerm_monitor_activity_log_alert\" \"main\" {",
      "  name                = \"example-activitylogalert\"",
      "  resource_group_name = \"${azurerm_resource_group.main.name}\"",
      "  scopes              = [\"${azurerm_resource_group.main.id}\"]",
      "  description         = \"This alert will monitor a specific storage account updates.\"",
      "",
      "  criteria {",
      "    resource_id    = \"${azurerm_storage_account.to_monitor.id}\"",
      "    operation_name = \"Microsoft.Storage/storageAccounts/write\"",
      "    category       = \"Recommendation\"",
      "  }",
      "",
      "  action {",
      "    action_group_id = \"${azurerm_monitor_action_group.main.id}\"",
      "",
      "    webhook_properties = {",
      "      from = \"terraform\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-monitor_autoscale_setting": {
    "description": "Defines monitor_autoscale_setting",
    "prefix": "tf-azurerm-resource-monitor_autoscale_setting",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"autoscalingTest\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_virtual_machine_scale_set\" \"test\" {",
      "  # ...",
      "}",
      "",
      "resource \"azurerm_monitor_autoscale_setting\" \"test\" {",
      "  name                = \"myAutoscaleSetting\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  target_resource_id  = \"${azurerm_virtual_machine_scale_set.test.id}\"",
      "",
      "  profile {",
      "    name = \"defaultProfile\"",
      "",
      "    capacity {",
      "      default = 1",
      "      minimum = 1",
      "      maximum = 10",
      "    }",
      "",
      "    rule {",
      "      metric_trigger {",
      "        metric_name        = \"Percentage CPU\"",
      "        metric_resource_id = \"${azurerm_virtual_machine_scale_set.test.id}\"",
      "        time_grain         = \"PT1M\"",
      "        statistic          = \"Average\"",
      "        time_window        = \"PT5M\"",
      "        time_aggregation   = \"Average\"",
      "        operator           = \"GreaterThan\"",
      "        threshold          = 75",
      "      }",
      "",
      "      scale_action {",
      "        direction = \"Increase\"",
      "        type      = \"ChangeCount\"",
      "        value     = \"1\"",
      "        cooldown  = \"PT1M\"",
      "      }",
      "    }",
      "",
      "    rule {",
      "      metric_trigger {",
      "        metric_name        = \"Percentage CPU\"",
      "        metric_resource_id = \"${azurerm_virtual_machine_scale_set.test.id}\"",
      "        time_grain         = \"PT1M\"",
      "        statistic          = \"Average\"",
      "        time_window        = \"PT5M\"",
      "        time_aggregation   = \"Average\"",
      "        operator           = \"LessThan\"",
      "        threshold          = 25",
      "      }",
      "",
      "      scale_action {",
      "        direction = \"Decrease\"",
      "        type      = \"ChangeCount\"",
      "        value     = \"1\"",
      "        cooldown  = \"PT1M\"",
      "      }",
      "    }",
      "  }",
      "",
      "  notification {",
      "    email {",
      "      send_to_subscription_administrator    = true",
      "      send_to_subscription_co_administrator = true",
      "      custom_emails                         = [\"admin@contoso.com\"]",
      "    }",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-monitor_diagnostic_setting": {
    "description": "Defines monitor_diagnostic_setting",
    "prefix": "tf-azurerm-resource-monitor_diagnostic_setting",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "data \"azurerm_storage_account\" \"test\" {",
      "  name                = \"examplestoracc\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "data \"azurerm_key_vault\" \"test\" {",
      "  name                = \"example-vault\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_monitor_diagnostic_setting\" \"test\" {",
      "  name               = \"example\"",
      "  target_resource_id = \"${data.azurerm_key_vault.test.id}\"",
      "  storage_account_id = \"${data.azurerm_storage_account.test.id}\"",
      "",
      "  log {",
      "    category = \"AuditEvent\"",
      "    enabled  = false",
      "",
      "    retention_policy {",
      "      enabled = false",
      "    }",
      "  }",
      "",
      "  metric {",
      "    category = \"AllMetrics\"",
      "",
      "    retention_policy {",
      "      enabled = false",
      "    }",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-monitor_log_profile": {
    "description": "Defines monitor_log_profile",
    "prefix": "tf-azurerm-resource-monitor_log_profile",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"logprofiletest-rg\"",
      "  location = \"eastus\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"test\" {",
      "  name                     = \"afscsdfytw\"",
      "  resource_group_name      = \"${azurerm_resource_group.test.name}\"",
      "  location                 = \"${azurerm_resource_group.test.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"GRS\"",
      "}",
      "",
      "resource \"azurerm_eventhub_namespace\" \"test\" {",
      "  name                = \"logprofileeventhub\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  sku                 = \"Standard\"",
      "  capacity            = 2",
      "}",
      "",
      "resource \"azurerm_monitor_log_profile\" \"test\" {",
      "  name = \"default\"",
      "",
      "  categories = [",
      "    \"Action\",",
      "    \"Delete\",",
      "    \"Write\",",
      "  ]",
      "",
      "  locations = [",
      "    \"westus\",",
      "    \"global\",",
      "  ]",
      "",
      "  # RootManageSharedAccessKey is created by default with listen, send, manage permissions",
      "  servicebus_rule_id = \"${azurerm_eventhub_namespace.test.id}/authorizationrules/RootManageSharedAccessKey\"",
      "  storage_account_id = \"${azurerm_storage_account.test.id}\"",
      "",
      "  retention_policy {",
      "    enabled = true",
      "    days    = 7",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-monitor_metric_alert": {
    "description": "Defines monitor_metric_alert",
    "prefix": "tf-azurerm-resource-monitor_metric_alert",
    "body": [
      "resource \"azurerm_resource_group\" \"main\" {",
      "  name     = \"example-resources\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"to_monitor\" {",
      "  name                     = \"examplestorageaccount\"",
      "  resource_group_name      = \"${azurerm_resource_group.main.name}\"",
      "  location                 = \"${azurerm_resource_group.main.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_monitor_action_group\" \"main\" {",
      "  name                = \"example-actiongroup\"",
      "  resource_group_name = \"${azurerm_resource_group.main.name}\"",
      "  short_name          = \"exampleact\"",
      "",
      "  webhook_receiver {",
      "    name        = \"callmyapi\"",
      "    service_uri = \"http://example.com/alert\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_monitor_metric_alert\" \"test\" {",
      "  name                = \"example-metricalert\"",
      "  resource_group_name = \"${azurerm_resource_group.main.name}\"",
      "  scopes              = [\"${azurerm_storage_account.to_monitor.id}\"]",
      "  description         = \"Action will be triggered when Transactions count is greater than 50.\"",
      "",
      "  criteria {",
      "    metric_namespace = \"Microsoft.Storage/storageAccounts\"",
      "    metric_name      = \"Transactions\"",
      "    aggregation      = \"Total\"",
      "    operator         = \"GreaterThan\"",
      "    threshold        = 50",
      "",
      "    dimension {",
      "      name     = \"ApiName\"",
      "      operator = \"Include\"",
      "      values   = [\"*\"]",
      "    }",
      "  }",
      "",
      "  action {",
      "    action_group_id = \"${azurerm_monitor_action_group.main.id}\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-monitor_metric_alertrule": {
    "description": "Defines monitor_metric_alertrule",
    "prefix": "tf-azurerm-resource-monitor_metric_alertrule",
    "body": [
      "resource \"azurerm_monitor_metric_alertrule\" \"test\" {",
      "  name                = \"${azurerm_virtual_machine.test.name}-cpu\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "",
      "  description = \"An alert rule to watch the metric Percentage CPU\"",
      "",
      "  enabled = true",
      "",
      "  resource_id = \"${azurerm_virtual_machine.test.id}\"",
      "  metric_name = \"Percentage CPU\"",
      "  operator    = \"GreaterThan\"",
      "  threshold   = 75",
      "  aggregation = \"Average\"",
      "  period      = \"PT5M\"",
      "",
      "  email_action {",
      "    send_to_service_owners = false",
      "",
      "    custom_emails = [",
      "      \"some.user@example.com\",",
      "    ]",
      "  }",
      "",
      "  webhook_action {",
      "    service_uri = \"https://example.com/some-url\"",
      "",
      "    properties = {",
      "      severity        = \"incredible\"",
      "      acceptance_test = \"true\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-mssql_elasticpool": {
    "description": "Defines mssql_elasticpool",
    "prefix": "tf-azurerm-resource-mssql_elasticpool",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"my-resource-group\"",
      "  location = \"westeurope\"",
      "}",
      "",
      "resource \"azurerm_sql_server\" \"test\" {",
      "  name                         = \"my-sql-server\"",
      "  resource_group_name          = \"${azurerm_resource_group.test.name}\"",
      "  location                     = \"${azurerm_resource_group.test.location}\"",
      "  version                      = \"12.0\"",
      "  administrator_login          = \"4dm1n157r470r\"",
      "  administrator_login_password = \"4-v3ry-53cr37-p455w0rd\"",
      "}",
      "",
      "resource \"azurerm_mssql_elasticpool\" \"test\" {",
      "  name                = \"test-epool\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  server_name         = \"${azurerm_sql_server.test.name}\"",
      "  max_size_gb         = 756",
      "",
      "  sku {",
      "    name     = \"GP_Gen5\"",
      "    tier     = \"GeneralPurpose\"",
      "    family   = \"Gen5\"",
      "    capacity = 4",
      "  }",
      "",
      "  per_database_settings {",
      "    min_capacity = 0.25",
      "    max_capacity = 4",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-mysql_configuration": {
    "description": "Defines mysql_configuration",
    "prefix": "tf-azurerm-resource-mysql_configuration",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"api-rg-pro\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_mysql_server\" \"test\" {",
      "  name                = \"mysql-server-1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  sku {",
      "    name     = \"B_Gen5_2\"",
      "    capacity = 2",
      "    tier     = \"Basic\"",
      "    family   = \"Gen4\"",
      "  }",
      "",
      "  storage_profile {",
      "    storage_mb            = 5120",
      "    backup_retention_days = 7",
      "    geo_redundant_backup  = \"Disabled\"",
      "  }",
      "",
      "  administrator_login          = \"psqladminun\"",
      "  administrator_login_password = \"H@Sh1CoR3!\"",
      "  version                      = \"5.7\"",
      "  ssl_enforcement              = \"Enabled\"",
      "}",
      "",
      "resource \"azurerm_mysql_configuration\" \"test\" {",
      "  name                = \"interactive_timeout\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  server_name         = \"${azurerm_mysql_server.test.name}\"",
      "  value               = \"600\"",
      "}"
    ]
  },
  "azurerm-resource-mysql_database": {
    "description": "Defines mysql_database",
    "prefix": "tf-azurerm-resource-mysql_database",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"api-rg-pro\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_mysql_server\" \"test\" {",
      "  name                = \"mysql-server-1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  sku {",
      "    name     = \"B_Gen5_2\"",
      "    capacity = 2",
      "    tier     = \"Basic\"",
      "    family   = \"Gen5\"",
      "  }",
      "",
      "  storage_profile {",
      "    storage_mb            = 5120",
      "    backup_retention_days = 7",
      "    geo_redundant_backup  = \"Disabled\"",
      "  }",
      "",
      "  administrator_login          = \"mysqladminun\"",
      "  administrator_login_password = \"H@Sh1CoR3!\"",
      "  version                      = \"5.7\"",
      "  ssl_enforcement              = \"Enabled\"",
      "}",
      "",
      "resource \"azurerm_mysql_database\" \"test\" {",
      "  name                = \"exampledb\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  server_name         = \"${azurerm_mysql_server.test.name}\"",
      "  charset             = \"utf8\"",
      "  collation           = \"utf8_unicode_ci\"",
      "}"
    ]
  },
  "azurerm-resource-mysql_firewall_rule": {
    "description": "Defines mysql_firewall_rule",
    "prefix": "tf-azurerm-resource-mysql_firewall_rule",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"api-rg-pro\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_mysql_server\" \"test\" {",
      "  # ...",
      "}",
      "",
      "resource \"azurerm_mysql_firewall_rule\" \"test\" {",
      "  name                = \"office\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  server_name         = \"${azurerm_mysql_server.test.name}\"",
      "  start_ip_address    = \"40.112.8.12\"",
      "  end_ip_address      = \"40.112.8.12\"",
      "}"
    ]
  },
  "azurerm-resource-mysql_server": {
    "description": "Defines mysql_server",
    "prefix": "tf-azurerm-resource-mysql_server",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"api-rg-pro\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_mysql_server\" \"test\" {",
      "  name                = \"mysql-server-1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  sku {",
      "    name     = \"B_Gen5_2\"",
      "    capacity = 2",
      "    tier     = \"Basic\"",
      "    family   = \"Gen5\"",
      "  }",
      "",
      "  storage_profile {",
      "    storage_mb            = 5120",
      "    backup_retention_days = 7",
      "    geo_redundant_backup  = \"Disabled\"",
      "  }",
      "",
      "  administrator_login          = \"mysqladminun\"",
      "  administrator_login_password = \"H@Sh1CoR3!\"",
      "  version                      = \"5.7\"",
      "  ssl_enforcement              = \"Enabled\"",
      "}"
    ]
  },
  "azurerm-resource-mysql_virtual_network_rule": {
    "description": "Defines mysql_virtual_network_rule",
    "prefix": "tf-azurerm-resource-mysql_virtual_network_rule",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"example-vnet\"",
      "  address_space       = [\"10.7.29.0/29\"]",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"internal\" {",
      "  name                 = \"internal\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.7.29.0/29\"",
      "  service_endpoints    = [\"Microsoft.Sql\"]",
      "}",
      "",
      "resource \"azurerm_mysql_server\" \"test\" {",
      "  name                         = \"mysql-server-1\"",
      "  location                     = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name          = \"${azurerm_resource_group.test.name}\"",
      "  administrator_login          = \"mysqladminun\"",
      "  administrator_login_password = \"H@Sh1CoR3!\"",
      "  version                      = \"5.7\"",
      "  ssl_enforcement              = \"Enabled\"",
      "",
      "  sku {",
      "    name     = \"GP_Gen5_2\"",
      "    capacity = 2",
      "    tier     = \"GeneralPurpose\"",
      "    family   = \"Gen5\"",
      "  }",
      "",
      "  storage_profile {",
      "    storage_mb            = 5120",
      "    backup_retention_days = 7",
      "    geo_redundant_backup  = \"Disabled\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_mysql_virtual_network_rule\" \"test\" {",
      "  name                = \"mysql-vnet-rule\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  server_name         = \"${azurerm_mysql_server.test.name}\"",
      "  subnet_id           = \"${azurerm_subnet.internal.id}\"",
      "}"
    ]
  },
  "azurerm-resource-network_connection_monitor": {
    "description": "Defines network_connection_monitor",
    "prefix": "tf-azurerm-resource-network_connection_monitor",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"connection-monitor-rg\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_network_watcher\" \"test\" {",
      "  name                = \"network-watcher\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"production-network\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"test\" {",
      "  name                 = \"internal\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.2.0/24\"",
      "}",
      "",
      "resource \"azurerm_network_interface\" \"test\" {",
      "  name                = \"cmtest-nic\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  ip_configuration {",
      "    name                          = \"testconfiguration1\"",
      "    subnet_id                     = \"${azurerm_subnet.test.id}\"",
      "    private_ip_address_allocation = \"Dynamic\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_virtual_machine\" \"test\" {",
      "  name                  = \"cmtest-vm\"",
      "  location              = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name   = \"${azurerm_resource_group.test.name}\"",
      "  network_interface_ids = [\"${azurerm_network_interface.test.id}\"]",
      "  vm_size               = \"Standard_F2\"",
      "",
      "  storage_image_reference {",
      "    publisher = \"Canonical\"",
      "    offer     = \"UbuntuServer\"",
      "    sku       = \"16.04-LTS\"",
      "    version   = \"latest\"",
      "  }",
      "",
      "  storage_os_disk {",
      "    name              = \"osdisk\"",
      "    caching           = \"ReadWrite\"",
      "    create_option     = \"FromImage\"",
      "    managed_disk_type = \"Standard_LRS\"",
      "  }",
      "",
      "  os_profile {",
      "    computer_name  = \"cmtest-vm\"",
      "    admin_username = \"testadmin\"",
      "    admin_password = \"Password1234!\"",
      "  }",
      "",
      "  os_profile_linux_config {",
      "    disable_password_authentication = false",
      "  }",
      "}",
      "",
      "resource \"azurerm_virtual_machine_extension\" \"test\" {",
      "  name                       = \"cmtest-vm-network-watcher\"",
      "  location                   = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name        = \"${azurerm_resource_group.test.name}\"",
      "  virtual_machine_name       = \"${azurerm_virtual_machine.test.name}\"",
      "  publisher                  = \"Microsoft.Azure.NetworkWatcher\"",
      "  type                       = \"NetworkWatcherAgentLinux\"",
      "  type_handler_version       = \"1.4\"",
      "  auto_upgrade_minor_version = true",
      "}",
      "",
      "resource \"azurerm_network_connection_monitor\" \"test\" {",
      "  name                 = \"cmtest-connectionmonitor\"",
      "  location             = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  network_watcher_name = \"${azurerm_network_watcher.test.name}\"",
      "",
      "  source {",
      "    virtual_machine_id = \"${azurerm_virtual_machine.test.id}\"",
      "  }",
      "",
      "  destination {",
      "    address = \"terraform.io\"",
      "    port    = 80",
      "  }",
      "",
      "  depends_on = [\"azurerm_virtual_machine_extension.test\"]",
      "}"
    ]
  },
  "azurerm-resource-network_ddos_protection_plan": {
    "description": "Defines network_ddos_protection_plan",
    "prefix": "tf-azurerm-resource-network_ddos_protection_plan",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_network_ddos_protection_plan\" \"test\" {",
      "  name                = \"example-protection-plan\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}"
    ]
  },
  "azurerm-resource-network_interface": {
    "description": "Defines network_interface",
    "prefix": "tf-azurerm-resource-network_interface",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"acceptanceTestVirtualNetwork1\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"test\" {",
      "  name                 = \"testsubnet\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.2.0/24\"",
      "}",
      "",
      "resource \"azurerm_network_interface\" \"test\" {",
      "  name                = \"acceptanceTestNetworkInterface1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  ip_configuration {",
      "    name                          = \"testconfiguration1\"",
      "    subnet_id                     = \"${azurerm_subnet.test.id}\"",
      "    private_ip_address_allocation = \"Dynamic\"",
      "  }",
      "",
      "  tags = {",
      "    environment = \"staging\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-network_interface_application_gateway_backend_address_pool_association": {
    "description": "Defines network_interface_application_gateway_backend_address_pool_association",
    "prefix": "tf-azurerm-resource-network_interface_application_gateway_backend_address_pool_association",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"example-network\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"frontend\" {",
      "  name                 = \"frontend\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.254.0.0/24\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"backend\" {",
      "  name                 = \"backend\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.254.2.0/24\"",
      "}",
      "",
      "resource \"azurerm_public_ip\" \"test\" {",
      "  name                = \"example-pip\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  allocation_method   = \"Dynamic\"",
      "}",
      "",
      "# since these variables are re-used - a locals block makes this more maintainable",
      "locals {",
      "  backend_address_pool_name      = \"${azurerm_virtual_network.test.name}-beap\"",
      "  frontend_port_name             = \"${azurerm_virtual_network.test.name}-feport\"",
      "  frontend_ip_configuration_name = \"${azurerm_virtual_network.test.name}-feip\"",
      "  http_setting_name              = \"${azurerm_virtual_network.test.name}-be-htst\"",
      "  listener_name                  = \"${azurerm_virtual_network.test.name}-httplstn\"",
      "  request_routing_rule_name      = \"${azurerm_virtual_network.test.name}-rqrt\"",
      "}",
      "",
      "resource \"azurerm_application_gateway\" \"network\" {",
      "  name                = \"example-appgateway\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "",
      "  sku {",
      "    name     = \"Standard_Small\"",
      "    tier     = \"Standard\"",
      "    capacity = 2",
      "  }",
      "",
      "  gateway_ip_configuration {",
      "    name      = \"my-gateway-ip-configuration\"",
      "    subnet_id = \"${azurerm_subnet.frontend.id}\"",
      "  }",
      "",
      "  frontend_port {",
      "    name = \"${local.frontend_port_name}\"",
      "    port = 80",
      "  }",
      "",
      "  frontend_ip_configuration {",
      "    name                 = \"${local.frontend_ip_configuration_name}\"",
      "    public_ip_address_id = \"${azurerm_public_ip.test.id}\"",
      "  }",
      "",
      "  backend_address_pool {",
      "    name = \"${local.backend_address_pool_name}\"",
      "  }",
      "",
      "  backend_http_settings {",
      "    name                  = \"${local.http_setting_name}\"",
      "    cookie_based_affinity = \"Disabled\"",
      "    port                  = 80",
      "    protocol              = \"Http\"",
      "    request_timeout       = 1",
      "  }",
      "",
      "  http_listener {",
      "    name                           = \"${local.listener_name}\"",
      "    frontend_ip_configuration_name = \"${local.frontend_ip_configuration_name}\"",
      "    frontend_port_name             = \"${local.frontend_port_name}\"",
      "    protocol                       = \"Http\"",
      "  }",
      "",
      "  request_routing_rule {",
      "    name                       = \"${local.request_routing_rule_name}\"",
      "    rule_type                  = \"Basic\"",
      "    http_listener_name         = \"${local.listener_name}\"",
      "    backend_address_pool_name  = \"${local.backend_address_pool_name}\"",
      "    backend_http_settings_name = \"${local.http_setting_name}\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_network_interface\" \"test\" {",
      "  name                = \"example-nic\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  ip_configuration {",
      "    name                          = \"testconfiguration1\"",
      "    subnet_id                     = \"${azurerm_subnet.frontend.id}\"",
      "    private_ip_address_allocation = \"Dynamic\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_network_interface_application_gateway_backend_address_pool_association\" \"test\" {",
      "  network_interface_id    = \"${azurerm_network_interface.test.id}\"",
      "  ip_configuration_name   = \"testconfiguration1\"",
      "  backend_address_pool_id = \"${azurerm_application_gateway.test.backend_address_pool.0.id}\"",
      "}"
    ]
  },
  "azurerm-resource-network_interface_application_security_group_association": {
    "description": "Defines network_interface_application_security_group_association",
    "prefix": "tf-azurerm-resource-network_interface_application_security_group_association",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"example-network\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"test\" {",
      "  name                 = \"internal\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.1.0/24\"",
      "}",
      "",
      "resource \"azurerm_application_security_group\" \"test\" {",
      "  name                = \"example-asg\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_network_interface\" \"test\" {",
      "  name                = \"example-nic\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  ip_configuration {",
      "    name                           = \"testconfiguration1\"",
      "    subnet_id                      = \"${azurerm_subnet.test.id}\"",
      "    private_ip_address_allocation  = \"Dynamic\"",
      "    application_security_group_ids = [\"${azurerm_application_security_group.test.id}\"]",
      "  }",
      "}",
      "",
      "resource \"azurerm_network_interface_application_security_group_association\" \"test\" {",
      "  network_interface_id          = \"${azurerm_network_interface.test.id}\"",
      "  ip_configuration_name         = \"testconfiguration1\"",
      "  application_security_group_id = \"${azurerm_application_security_group.test.id}\"",
      "}"
    ]
  },
  "azurerm-resource-network_interface_backend_address_pool_association": {
    "description": "Defines network_interface_backend_address_pool_association",
    "prefix": "tf-azurerm-resource-network_interface_backend_address_pool_association",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"example-network\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"test\" {",
      "  name                 = \"internal\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.2.0/24\"",
      "}",
      "",
      "resource \"azurerm_public_ip\" \"test\" {",
      "  name                = \"example-pip\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  allocation_method   = \"Static\"",
      "}",
      "",
      "resource \"azurerm_lb\" \"test\" {",
      "  name                = \"example-lb\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  frontend_ip_configuration {",
      "    name                 = \"primary\"",
      "    public_ip_address_id = \"${azurerm_public_ip.test.id}\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_lb_backend_address_pool\" \"test\" {",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  loadbalancer_id     = \"${azurerm_lb.test.id}\"",
      "  name                = \"acctestpool\"",
      "}",
      "",
      "resource \"azurerm_network_interface\" \"test\" {",
      "  name                = \"example-nic\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  ip_configuration {",
      "    name                          = \"testconfiguration1\"",
      "    subnet_id                     = \"${azurerm_subnet.test.id}\"",
      "    private_ip_address_allocation = \"Dynamic\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_network_interface_backend_address_pool_association\" \"test\" {",
      "  network_interface_id    = \"${azurerm_network_interface.test.id}\"",
      "  ip_configuration_name   = \"testconfiguration1\"",
      "  backend_address_pool_id = \"${azurerm_lb_backend_address_pool.test.id}\"",
      "}"
    ]
  },
  "azurerm-resource-network_interface_nat_rule_association": {
    "description": "Defines network_interface_nat_rule_association",
    "prefix": "tf-azurerm-resource-network_interface_nat_rule_association",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"example-network\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"test\" {",
      "  name                 = \"internal\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.2.0/24\"",
      "}",
      "",
      "resource \"azurerm_public_ip\" \"test\" {",
      "  name                = \"example-pip\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  allocation_method   = \"Static\"",
      "}",
      "",
      "resource \"azurerm_lb\" \"test\" {",
      "  name                = \"example-lb\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  frontend_ip_configuration {",
      "    name                 = \"primary\"",
      "    public_ip_address_id = \"${azurerm_public_ip.test.id}\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_lb_nat_rule\" \"test\" {",
      "  resource_group_name            = \"${azurerm_resource_group.test.name}\"",
      "  loadbalancer_id                = \"${azurerm_lb.test.id}\"",
      "  name                           = \"RDPAccess\"",
      "  protocol                       = \"Tcp\"",
      "  frontend_port                  = 3389",
      "  backend_port                   = 3389",
      "  frontend_ip_configuration_name = \"primary\"",
      "}",
      "",
      "resource \"azurerm_network_interface\" \"test\" {",
      "  name                = \"example-nic\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  ip_configuration {",
      "    name                          = \"testconfiguration1\"",
      "    subnet_id                     = \"${azurerm_subnet.test.id}\"",
      "    private_ip_address_allocation = \"Dynamic\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_network_interface_nat_rule_association\" \"test\" {",
      "  network_interface_id  = \"${azurerm_network_interface.test.id}\"",
      "  ip_configuration_name = \"testconfiguration1\"",
      "  nat_rule_id           = \"${azurerm_lb_nat_rule.test.id}\"",
      "}"
    ]
  },
  "azurerm-resource-network_packet_capture": {
    "description": "Defines network_packet_capture",
    "prefix": "tf-azurerm-resource-network_packet_capture",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"packet-capture-rg\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_network_watcher\" \"test\" {",
      "  name                = \"network-watcher\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"production-network\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"test\" {",
      "  name                 = \"internal\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.2.0/24\"",
      "}",
      "",
      "resource \"azurerm_network_interface\" \"test\" {",
      "  name                = \"pctest-nic\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  ip_configuration {",
      "    name                          = \"testconfiguration1\"",
      "    subnet_id                     = \"${azurerm_subnet.test.id}\"",
      "    private_ip_address_allocation = \"Dynamic\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_virtual_machine\" \"test\" {",
      "  name                  = \"pctest-vm\"",
      "  location              = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name   = \"${azurerm_resource_group.test.name}\"",
      "  network_interface_ids = [\"${azurerm_network_interface.test.id}\"]",
      "  vm_size               = \"Standard_F2\"",
      "",
      "  storage_image_reference {",
      "    publisher = \"Canonical\"",
      "    offer     = \"UbuntuServer\"",
      "    sku       = \"16.04-LTS\"",
      "    version   = \"latest\"",
      "  }",
      "",
      "  storage_os_disk {",
      "    name              = \"osdisk\"",
      "    caching           = \"ReadWrite\"",
      "    create_option     = \"FromImage\"",
      "    managed_disk_type = \"Standard_LRS\"",
      "  }",
      "",
      "  os_profile {",
      "    computer_name  = \"pctest-vm\"",
      "    admin_username = \"testadmin\"",
      "    admin_password = \"Password1234!\"",
      "  }",
      "",
      "  os_profile_linux_config {",
      "    disable_password_authentication = false",
      "  }",
      "}",
      "",
      "resource \"azurerm_virtual_machine_extension\" \"test\" {",
      "  name                       = \"network-watcher\"",
      "  location                   = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name        = \"${azurerm_resource_group.test.name}\"",
      "  virtual_machine_name       = \"${azurerm_virtual_machine.test.name}\"",
      "  publisher                  = \"Microsoft.Azure.NetworkWatcher\"",
      "  type                       = \"NetworkWatcherAgentLinux\"",
      "  type_handler_version       = \"1.4\"",
      "  auto_upgrade_minor_version = true",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"test\" {",
      "  name                     = \"pctestsa\"",
      "  resource_group_name      = \"${azurerm_resource_group.test.name}\"",
      "  location                 = \"${azurerm_resource_group.test.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_network_packet_capture\" \"test\" {",
      "  name                 = \"pctestcapture\"",
      "  network_watcher_name = \"${azurerm_network_watcher.test.name}\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  target_resource_id   = \"${azurerm_virtual_machine.test.id}\"",
      "",
      "  storage_location {",
      "    storage_account_id = \"${azurerm_storage_account.test.id}\"",
      "  }",
      "",
      "  depends_on = [\"azurerm_virtual_machine_extension.test\"]",
      "}"
    ]
  },
  "azurerm-resource-network_profile": {
    "description": "Defines network_profile",
    "prefix": "tf-azurerm-resource-network_profile",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"examplegroup\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"example\" {",
      "  name                = \"examplevnet\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  address_space       = [\"10.1.0.0/16\"]",
      "}",
      "",
      "resource \"azurerm_subnet\" \"example\" {",
      "  name                 = \"examplesubnet\"",
      "  resource_group_name  = \"${azurerm_resource_group.example.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.example.name}\"",
      "  address_prefix       = \"10.1.0.0/24\"",
      "",
      "  delegation {",
      "    name = \"delegation\"",
      "",
      "    service_delegation {",
      "      name    = \"Microsoft.ContainerInstance/containerGroups\"",
      "      actions = [\"Microsoft.Network/virtualNetworks/subnets/action\"]",
      "    }",
      "  }",
      "}",
      "",
      "resource \"azurerm_network_profile\" \"example\" {",
      "  name                = \"examplenetprofile\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "",
      "  container_network_interface_configuration {",
      "    name = \"examplecnic\"",
      "",
      "    ip_configuration {",
      "      name      = \"exampleipconfig\"",
      "      subnet_id = \"${azurerm_subnet.example.id}\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-network_security_group": {
    "description": "Defines network_security_group",
    "prefix": "tf-azurerm-resource-network_security_group",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_network_security_group\" \"test\" {",
      "  name                = \"acceptanceTestSecurityGroup1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  security_rule {",
      "    name                       = \"test123\"",
      "    priority                   = 100",
      "    direction                  = \"Inbound\"",
      "    access                     = \"Allow\"",
      "    protocol                   = \"Tcp\"",
      "    source_port_range          = \"*\"",
      "    destination_port_range     = \"*\"",
      "    source_address_prefix      = \"*\"",
      "    destination_address_prefix = \"*\"",
      "  }",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-network_security_rule": {
    "description": "Defines network_security_rule",
    "prefix": "tf-azurerm-resource-network_security_rule",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_network_security_group\" \"test\" {",
      "  name                = \"acceptanceTestSecurityGroup1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_network_security_rule\" \"test\" {",
      "  name                        = \"test123\"",
      "  priority                    = 100",
      "  direction                   = \"Outbound\"",
      "  access                      = \"Allow\"",
      "  protocol                    = \"Tcp\"",
      "  source_port_range           = \"*\"",
      "  destination_port_range      = \"*\"",
      "  source_address_prefix       = \"*\"",
      "  destination_address_prefix  = \"*\"",
      "  resource_group_name         = \"${azurerm_resource_group.test.name}\"",
      "  network_security_group_name = \"${azurerm_network_security_group.test.name}\"",
      "}"
    ]
  },
  "azurerm-resource-network_watcher": {
    "description": "Defines network_watcher",
    "prefix": "tf-azurerm-resource-network_watcher",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"production-nwwatcher\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_network_watcher\" \"test\" {",
      "  name                = \"production-nwwatcher\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}"
    ]
  },
  "azurerm-resource-notification_hub": {
    "description": "Defines notification_hub",
    "prefix": "tf-azurerm-resource-notification_hub",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"notificationhub-resources\"",
      "  location = \"Australia East\"",
      "}",
      "",
      "resource \"azurerm_notification_hub_namespace\" \"test\" {",
      "  name                = \"myappnamespace\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  namespace_type      = \"NotificationHub\"",
      "",
      "  sku_name = \"Free\"",
      "}",
      "",
      "resource \"azurerm_notification_hub\" \"test\" {",
      "  name                = \"mynotificationhub\"",
      "  namespace_name      = \"${azurerm_notification_hub_namespace.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "}"
    ]
  },
  "azurerm-resource-notification_hub_authorization_rule": {
    "description": "Defines notification_hub_authorization_rule",
    "prefix": "tf-azurerm-resource-notification_hub_authorization_rule",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"notificationhub-resources\"",
      "  location = \"Australia East\"",
      "}",
      "",
      "resource \"azurerm_notification_hub_namespace\" \"test\" {",
      "  name                = \"myappnamespace\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  namespace_type      = \"NotificationHub\"",
      "",
      "  sku_name = \"Free\"",
      "}",
      "",
      "resource \"azurerm_notification_hub\" \"test\" {",
      "  name                = \"mynotificationhub\"",
      "  namespace_name      = \"${azurerm_notification_hub_namespace.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "}",
      "",
      "resource \"azurerm_notification_hub_authorization_rule\" \"test\" {",
      "  name                  = \"management-auth-rule\"",
      "  notification_hub_name = \"${azurerm_notification_hub.test.name}\"",
      "  namespace_name        = \"${azurerm_notification_hub_namespace.test.name}\"",
      "  resource_group_name   = \"${azurerm_resource_group.test.name}\"",
      "  manage                = true",
      "  send                  = true",
      "  listen                = true",
      "}"
    ]
  },
  "azurerm-resource-notification_hub_namespace": {
    "description": "Defines notification_hub_namespace",
    "prefix": "tf-azurerm-resource-notification_hub_namespace",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"notificationhub-resources\"",
      "  location = \"Australia East\"",
      "}",
      "",
      "resource \"azurerm_notification_hub_namespace\" \"test\" {",
      "  name                = \"myappnamespace\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  namespace_type      = \"NotificationHub\"",
      "",
      "  sku_name = \"Free\"",
      "}"
    ]
  },
  "azurerm-resource-packet_capture": {
    "description": "Defines packet_capture",
    "prefix": "tf-azurerm-resource-packet_capture",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"packet-capture-rg\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_network_watcher\" \"test\" {",
      "  name                = \"network-watcher\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"production-network\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"test\" {",
      "  name                 = \"internal\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.2.0/24\"",
      "}",
      "",
      "resource \"azurerm_network_interface\" \"test\" {",
      "  name                = \"pctest-nic\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  ip_configuration {",
      "    name                          = \"testconfiguration1\"",
      "    subnet_id                     = \"${azurerm_subnet.test.id}\"",
      "    private_ip_address_allocation = \"Dynamic\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_virtual_machine\" \"test\" {",
      "  name                  = \"pctest-vm\"",
      "  location              = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name   = \"${azurerm_resource_group.test.name}\"",
      "  network_interface_ids = [\"${azurerm_network_interface.test.id}\"]",
      "  vm_size               = \"Standard_F2\"",
      "",
      "  storage_image_reference {",
      "    publisher = \"Canonical\"",
      "    offer     = \"UbuntuServer\"",
      "    sku       = \"16.04-LTS\"",
      "    version   = \"latest\"",
      "  }",
      "",
      "  storage_os_disk {",
      "    name              = \"osdisk\"",
      "    caching           = \"ReadWrite\"",
      "    create_option     = \"FromImage\"",
      "    managed_disk_type = \"Standard_LRS\"",
      "  }",
      "",
      "  os_profile {",
      "    computer_name  = \"pctest-vm\"",
      "    admin_username = \"testadmin\"",
      "    admin_password = \"Password1234!\"",
      "  }",
      "",
      "  os_profile_linux_config {",
      "    disable_password_authentication = false",
      "  }",
      "}",
      "",
      "resource \"azurerm_virtual_machine_extension\" \"test\" {",
      "  name                       = \"network-watcher\"",
      "  location                   = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name        = \"${azurerm_resource_group.test.name}\"",
      "  virtual_machine_name       = \"${azurerm_virtual_machine.test.name}\"",
      "  publisher                  = \"Microsoft.Azure.NetworkWatcher\"",
      "  type                       = \"NetworkWatcherAgentLinux\"",
      "  type_handler_version       = \"1.4\"",
      "  auto_upgrade_minor_version = true",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"test\" {",
      "  name                     = \"pctestsa\"",
      "  resource_group_name      = \"${azurerm_resource_group.test.name}\"",
      "  location                 = \"${azurerm_resource_group.test.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_packet_capture\" \"test\" {",
      "  name                 = \"pctestcapture\"",
      "  network_watcher_name = \"${azurerm_network_watcher.test.name}\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  target_resource_id   = \"${azurerm_virtual_machine.test.id}\"",
      "",
      "  storage_location {",
      "    storage_account_id = \"${azurerm_storage_account.test.id}\"",
      "  }",
      "",
      "  depends_on = [\"azurerm_virtual_machine_extension.test\"]",
      "}"
    ]
  },
  "azurerm-resource-policy_assignment": {
    "description": "Defines policy_assignment",
    "prefix": "tf-azurerm-resource-policy_assignment",
    "body": [
      "resource \"azurerm_policy_definition\" \"test\" {",
      "  name         = \"my-policy-definition\"",
      "  policy_type  = \"Custom\"",
      "  mode         = \"All\"",
      "  display_name = \"my-policy-definition\"",
      "",
      "  policy_rule = <<POLICY_RULE",
      "\t{",
      "    \"if\": {",
      "      \"not\": {",
      "        \"field\": \"location\",",
      "        \"in\": \"[parameters('allowedLocations')]\"",
      "      }",
      "    },",
      "    \"then\": {",
      "      \"effect\": \"audit\"",
      "    }",
      "  }",
      "POLICY_RULE",
      "",
      "  parameters = <<PARAMETERS",
      "\t{",
      "    \"allowedLocations\": {",
      "      \"type\": \"Array\",",
      "      \"metadata\": {",
      "        \"description\": \"The list of allowed locations for resources.\",",
      "        \"displayName\": \"Allowed locations\",",
      "        \"strongType\": \"location\"",
      "      }",
      "    }",
      "  }",
      "PARAMETERS",
      "}",
      "",
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"test-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_policy_assignment\" \"test\" {",
      "  name                 = \"example-policy-assignment\"",
      "  scope                = \"${azurerm_resource_group.test.id}\"",
      "  policy_definition_id = \"${azurerm_policy_definition.test.id}\"",
      "  description          = \"Policy Assignment created via an Acceptance Test\"",
      "  display_name         = \"My Example Policy Assignment\"",
      "",
      "  parameters = <<PARAMETERS",
      "{",
      "  \"allowedLocations\": {",
      "    \"value\": [ \"West Europe\" ]",
      "  }",
      "}",
      "PARAMETERS",
      "}"
    ]
  },
  "azurerm-resource-policy_definition": {
    "description": "Defines policy_definition",
    "prefix": "tf-azurerm-resource-policy_definition",
    "body": [
      "resource \"azurerm_policy_definition\" \"policy\" {",
      "  name         = \"accTestPolicy\"",
      "  policy_type  = \"Custom\"",
      "  mode         = \"Indexed\"",
      "  display_name = \"acceptance test policy definition\"",
      "",
      "  metadata     = <<METADATA",
      "    {",
      "    \"category\": \"General\"",
      "    }",
      "  METADATA",
      "",
      "  policy_rule = <<POLICY_RULE",
      "\t{",
      "    \"if\": {",
      "      \"not\": {",
      "        \"field\": \"location\",",
      "        \"in\": \"[parameters('allowedLocations')]\"",
      "      }",
      "    },",
      "    \"then\": {",
      "      \"effect\": \"audit\"",
      "    }",
      "  }",
      "POLICY_RULE",
      "",
      "  parameters = <<PARAMETERS",
      "\t{",
      "    \"allowedLocations\": {",
      "      \"type\": \"Array\",",
      "      \"metadata\": {",
      "        \"description\": \"The list of allowed locations for resources.\",",
      "        \"displayName\": \"Allowed locations\",",
      "        \"strongType\": \"location\"",
      "      }",
      "    }",
      "  }",
      "PARAMETERS",
      "}"
    ]
  },
  "azurerm-resource-policy_set_definition": {
    "description": "Defines policy_set_definition",
    "prefix": "tf-azurerm-resource-policy_set_definition",
    "body": [
      "resource \"azurerm_policy_set_definition\" \"test\" {",
      "  name         = \"testPolicySet\"",
      "  policy_type  = \"Custom\"",
      "  display_name = \"Test Policy Set\"",
      "",
      "  parameters = <<PARAMETERS",
      "    {",
      "        \"allowedLocations\": {",
      "            \"type\": \"Array\",",
      "            \"metadata\": {",
      "                \"description\": \"The list of allowed locations for resources.\",",
      "                \"displayName\": \"Allowed locations\",",
      "                \"strongType\": \"location\"",
      "            }",
      "        }",
      "    }",
      "PARAMETERS",
      "",
      "  policy_definitions = <<POLICY_DEFINITIONS",
      "    [",
      "        {",
      "            \"parameters\": {",
      "                \"listOfAllowedLocations\": {",
      "                    \"value\": \"[parameters('allowedLocations')]\"",
      "                }",
      "            },",
      "            \"policyDefinitionId\": \"/providers/Microsoft.Authorization/policyDefinitions/e765b5de-1225-4ba3-bd56-1ac6695af988\"",
      "        }",
      "    ]",
      "POLICY_DEFINITIONS",
      "}"
    ]
  },
  "azurerm-resource-postgresql_configuration": {
    "description": "Defines postgresql_configuration",
    "prefix": "tf-azurerm-resource-postgresql_configuration",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"api-rg-pro\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_postgresql_server\" \"test\" {",
      "  name                = \"postgresql-server-1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  sku {",
      "    name     = \"B_Gen5_2\"",
      "    capacity = 2",
      "    tier     = \"Basic\"",
      "    family   = \"Gen4\"",
      "  }",
      "",
      "  storage_profile {",
      "    storage_mb            = 5120",
      "    backup_retention_days = 7",
      "    geo_redundant_backup  = \"Disabled\"",
      "  }",
      "",
      "  administrator_login          = \"psqladminun\"",
      "  administrator_login_password = \"H@Sh1CoR3!\"",
      "  version                      = \"9.5\"",
      "  ssl_enforcement              = \"Enabled\"",
      "}",
      "",
      "resource \"azurerm_postgresql_configuration\" \"test\" {",
      "  name                = \"backslash_quote\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  server_name         = \"${azurerm_postgresql_server.test.name}\"",
      "  value               = \"on\"",
      "}"
    ]
  },
  "azurerm-resource-postgresql_database": {
    "description": "Defines postgresql_database",
    "prefix": "tf-azurerm-resource-postgresql_database",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"api-rg-pro\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_postgresql_server\" \"test\" {",
      "  name                = \"postgresql-server-1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  sku {",
      "    name     = \"B_Gen5_2\"",
      "    capacity = 2",
      "    tier     = \"Basic\"",
      "    family   = \"Gen4\"",
      "  }",
      "",
      "  storage_profile {",
      "    storage_mb            = 5120",
      "    backup_retention_days = 7",
      "    geo_redundant_backup  = \"Disabled\"",
      "  }",
      "",
      "  administrator_login          = \"psqladminun\"",
      "  administrator_login_password = \"H@Sh1CoR3!\"",
      "  version                      = \"9.5\"",
      "  ssl_enforcement              = \"Enabled\"",
      "}",
      "",
      "resource \"azurerm_postgresql_database\" \"test\" {",
      "  name                = \"exampledb\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  server_name         = \"${azurerm_postgresql_server.test.name}\"",
      "  charset             = \"UTF8\"",
      "  collation           = \"English_United States.1252\"",
      "}"
    ]
  },
  "azurerm-resource-postgresql_firewall_rule": {
    "description": "Defines postgresql_firewall_rule",
    "prefix": "tf-azurerm-resource-postgresql_firewall_rule",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"api-rg-pro\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_postgresql_server\" \"test\" {",
      "  # ...",
      "}",
      "",
      "resource \"azurerm_postgresql_firewall_rule\" \"test\" {",
      "  name                = \"office\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  server_name         = \"${azurerm_postgresql_server.test.name}\"",
      "  start_ip_address    = \"40.112.8.12\"",
      "  end_ip_address      = \"40.112.8.12\"",
      "}"
    ]
  },
  "azurerm-resource-postgresql_server": {
    "description": "Defines postgresql_server",
    "prefix": "tf-azurerm-resource-postgresql_server",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"api-rg-pro\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_postgresql_server\" \"test\" {",
      "  name                = \"postgresql-server-1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  sku {",
      "    name     = \"B_Gen5_2\"",
      "    capacity = 2",
      "    tier     = \"Basic\"",
      "    family   = \"Gen4\"",
      "  }",
      "",
      "  storage_profile {",
      "    storage_mb            = 5120",
      "    backup_retention_days = 7",
      "    geo_redundant_backup  = \"Disabled\"",
      "  }",
      "",
      "  administrator_login          = \"psqladminun\"",
      "  administrator_login_password = \"H@Sh1CoR3!\"",
      "  version                      = \"9.5\"",
      "  ssl_enforcement              = \"Enabled\"",
      "}"
    ]
  },
  "azurerm-resource-postgresql_virtual_network_rule": {
    "description": "Defines postgresql_virtual_network_rule",
    "prefix": "tf-azurerm-resource-postgresql_virtual_network_rule",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"example-vnet\"",
      "  address_space       = [\"10.7.29.0/29\"]",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"internal\" {",
      "  name                 = \"internal\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.7.29.0/29\"",
      "  service_endpoints    = [\"Microsoft.Sql\"]",
      "}",
      "",
      "resource \"azurerm_postgresql_server\" \"test\" {",
      "  name                = \"postgresql-server-1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  sku {",
      "    name     = \"GP_Gen5_2\"",
      "    capacity = 2",
      "    tier     = \"GeneralPurpose\"",
      "    family   = \"Gen5\"",
      "  }",
      "",
      "  storage_profile {",
      "    storage_mb            = 5120",
      "    backup_retention_days = 7",
      "    geo_redundant_backup  = \"Disabled\"",
      "  }",
      "",
      "  administrator_login          = \"psqladminun\"",
      "  administrator_login_password = \"H@Sh1CoR3!\"",
      "  version                      = \"9.5\"",
      "  ssl_enforcement              = \"Enabled\"",
      "}",
      "",
      "resource \"azurerm_postgresql_virtual_network_rule\" \"test\" {",
      "  name                                 = \"postgresql-vnet-rule\"",
      "  resource_group_name                  = \"${azurerm_resource_group.test.name}\"",
      "  server_name                          = \"${azurerm_postgresql_server.test.name}\"",
      "  subnet_id                            = \"${azurerm_subnet.internal.id}\"",
      "  ignore_missing_vnet_service_endpoint = true",
      "}"
    ]
  },
  "azurerm-resource-private_dns_a_record": {
    "description": "Defines private_dns_a_record",
    "prefix": "tf-azurerm-resource-private_dns_a_record",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_private_dns_zone\" \"test\" {",
      "  name                = \"mydomain.com\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_private_dns_a_record\" \"test\" {",
      "  name                = \"test\"",
      "  zone_name           = \"${azurerm_dns_zone.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  ttl                 = 300",
      "  records             = [\"10.0.180.17\"]",
      "}"
    ]
  },
  "azurerm-resource-private_dns_zone": {
    "description": "Defines private_dns_zone",
    "prefix": "tf-azurerm-resource-private_dns_zone",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_private_dns_zone\" \"test\" {",
      "  name                = \"mydomain.com\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}"
    ]
  },
  "azurerm-resource-public_ip": {
    "description": "Defines public_ip",
    "prefix": "tf-azurerm-resource-public_ip",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_public_ip\" \"test\" {",
      "  name                = \"acceptanceTestPublicIp1\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  allocation_method   = \"Static\"",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-public_ip_prefix": {
    "description": "Defines public_ip_prefix",
    "prefix": "tf-azurerm-resource-public_ip_prefix",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_public_ip_prefix\" \"test\" {",
      "  name                = \"acceptanceTestPublicIpPrefix1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  prefix_length = 31",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-recovery_services_protected_vm": {
    "description": "Defines recovery_services_protected_vm",
    "prefix": "tf-azurerm-resource-recovery_services_protected_vm",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"tfex-recovery_vault\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_recovery_services_vault\" \"example\" {",
      "  name                = \"tfex-recovery-vault\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  sku                 = \"Standard\"",
      "}",
      "",
      "resource \"azurerm_recovery_services_protection_policy_vm\" \"example\" {",
      "  name                = \"tfex-recovery-vault-policy\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  recovery_vault_name = \"${azurerm_recovery_services_vault.example.name}\"",
      "",
      "  backup {",
      "    frequency = \"Daily\"",
      "    time      = \"23:00\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_recovery_services_protected_vm\" \"vm1\" {",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  recovery_vault_name = \"${azurerm_recovery_services_vault.example.name}\"",
      "  source_vm_id        = \"${azurerm_virtual_machine.example.id}\"",
      "  backup_policy_id    = \"${azurerm_recovery_services_protection_policy_vm.example.id}\"",
      "}"
    ]
  },
  "azurerm-resource-recovery_services_protection_policy_vm": {
    "description": "Defines recovery_services_protection_policy_vm",
    "prefix": "tf-azurerm-resource-recovery_services_protection_policy_vm",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"tfex-recovery_vault\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_recovery_services_vault\" \"example\" {",
      "  name                = \"tfex-recovery-vault\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  sku                 = \"Standard\"",
      "}",
      "",
      "resource \"azurerm_recovery_services_protection_policy_vm\" \"test\" {",
      "  name                = \"tfex-recovery-vault-policy\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  recovery_vault_name = \"${azurerm_recovery_services_vault.example.name}\"",
      "",
      "  timezone = \"UTC\"",
      "",
      "  backup {",
      "    frequency = \"Daily\"",
      "    time      = \"23:00\"",
      "  }",
      "",
      "  retention_daily {",
      "    count = 10",
      "  }",
      "",
      "  retention_weekly {",
      "    count    = 42",
      "    weekdays = [\"Sunday\", \"Wednesday\", \"Friday\", \"Saturday\"]",
      "  }",
      "",
      "  retention_monthly {",
      "    count    = 7",
      "    weekdays = [\"Sunday\", \"Wednesday\"]",
      "    weeks    = [\"First\", \"Last\"]",
      "  }",
      "",
      "  retention_yearly {",
      "    count    = 77",
      "    weekdays = [\"Sunday\"]",
      "    weeks    = [\"Last\"]",
      "    months   = [\"January\"]",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-recovery_services_vault": {
    "description": "Defines recovery_services_vault",
    "prefix": "tf-azurerm-resource-recovery_services_vault",
    "body": [
      "resource \"azurerm_resource_group\" \"rg\" {",
      "  name     = \"tfex-recovery_vault\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_recovery_services_vault\" \"vault\" {",
      "  name                = \"example_recovery_vault\"",
      "  location            = \"${azurerm_resource_group.rg.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.rg.name}\"",
      "  sku                 = \"Standard\"",
      "}"
    ]
  },
  "azurerm-resource-redis_cache": {
    "description": "Defines redis_cache",
    "prefix": "tf-azurerm-resource-redis_cache",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "# NOTE: the Name used for Redis needs to be globally unique",
      "resource \"azurerm_redis_cache\" \"example\" {",
      "  name                = \"example-cache\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  capacity            = 2",
      "  family              = \"C\"",
      "  sku_name            = \"Standard\"",
      "  enable_non_ssl_port = false",
      "  minimum_tls_version = \"1.2\"",
      "",
      "  redis_configuration {}",
      "}"
    ]
  },
  "azurerm-resource-redis_firewall_rule": {
    "description": "Defines redis_firewall_rule",
    "prefix": "tf-azurerm-resource-redis_firewall_rule",
    "body": [
      "resource \"random_id\" \"server\" {",
      "  keepers = {",
      "    azi_id = 1",
      "  }",
      "",
      "  byte_length = 8",
      "}",
      "",
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"redis-resourcegroup\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_redis_cache\" \"test\" {",
      "  name                = \"redis${random_id.server.hex}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  capacity            = 1",
      "  family              = \"P\"",
      "  sku_name            = \"Premium\"",
      "  enable_non_ssl_port = false",
      "",
      "  redis_configuration {",
      "    maxclients         = 256",
      "    maxmemory_reserved = 2",
      "    maxmemory_delta    = 2",
      "    maxmemory_policy   = \"allkeys-lru\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_redis_firewall_rule\" \"test\" {",
      "  name                = \"someIPrange\"",
      "  redis_cache_name    = \"${azurerm_redis_cache.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  start_ip            = \"1.2.3.4\"",
      "  end_ip              = \"2.3.4.5\"",
      "}"
    ]
  },
  "azurerm-resource-relay_namespace": {
    "description": "Defines relay_namespace",
    "prefix": "tf-azurerm-resource-relay_namespace",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_relay_namespace\" \"test\" {",
      "  name                = \"example-relay\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  sku_name = \"Standard\"",
      "",
      "  tags = {",
      "    source = \"terraform\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-resource_group": {
    "description": "Defines resource_group",
    "prefix": "tf-azurerm-resource-resource_group",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"testResourceGroup1\"",
      "  location = \"West US\"",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-role_assignment": {
    "description": "Defines role_assignment",
    "prefix": "tf-azurerm-resource-role_assignment",
    "body": [
      "data \"azurerm_subscription\" \"primary\" {}",
      "",
      "data \"azurerm_client_config\" \"test\" {}",
      "",
      "resource \"azurerm_role_assignment\" \"test\" {",
      "  scope                = \"${data.azurerm_subscription.primary.id}\"",
      "  role_definition_name = \"Reader\"",
      "  principal_id         = \"${data.azurerm_client_config.test.service_principal_object_id}\"",
      "}"
    ]
  },
  "azurerm-resource-role_definition": {
    "description": "Defines role_definition",
    "prefix": "tf-azurerm-resource-role_definition",
    "body": [
      "data \"azurerm_subscription\" \"primary\" {}",
      "",
      "resource \"azurerm_role_definition\" \"test\" {",
      "  name        = \"my-custom-role\"",
      "  scope       = \"${data.azurerm_subscription.primary.id}\"",
      "  description = \"This is a custom role created via Terraform\"",
      "",
      "  permissions {",
      "    actions     = [\"*\"]",
      "    not_actions = []",
      "  }",
      "",
      "  assignable_scopes = [",
      "    \"${data.azurerm_subscription.primary.id}\", # /subscriptions/00000000-0000-0000-0000-000000000000",
      "  ]",
      "}"
    ]
  },
  "azurerm-resource-route": {
    "description": "Defines route",
    "prefix": "tf-azurerm-resource-route",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_route_table\" \"test\" {",
      "  name                = \"acceptanceTestRouteTable1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_route\" \"test\" {",
      "  name                = \"acceptanceTestRoute1\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  route_table_name    = \"${azurerm_route_table.test.name}\"",
      "  address_prefix      = \"10.1.0.0/16\"",
      "  next_hop_type       = \"vnetlocal\"",
      "}"
    ]
  },
  "azurerm-resource-route_table": {
    "description": "Defines route_table",
    "prefix": "tf-azurerm-resource-route_table",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_route_table\" \"test\" {",
      "  name                          = \"acceptanceTestSecurityGroup1\"",
      "  location                      = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name           = \"${azurerm_resource_group.test.name}\"",
      "  disable_bgp_route_propagation = false",
      "",
      "  route {",
      "    name           = \"route1\"",
      "    address_prefix = \"10.1.0.0/16\"",
      "    next_hop_type  = \"vnetlocal\"",
      "  }",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-scheduler_job": {
    "description": "Defines scheduler_job",
    "prefix": "tf-azurerm-resource-scheduler_job",
    "body": [
      "resource \"azurerm_scheduler_job\" \"web-once-now\" {",
      "  name                = \"tfex-web-once-now\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  job_collection_name = \"${azurerm_scheduler_job_collection.example.name}\"",
      "",
      "  # re-enable it each run",
      "  state = \"enabled\"",
      "",
      "  action_web {",
      "    # defaults to get",
      "    url = \"http://this.url.fails\"",
      "  }",
      "",
      "  # default start time is now",
      "}"
    ]
  },
  "azurerm-resource-scheduler_job_collection": {
    "description": "Defines scheduler_job_collection",
    "prefix": "tf-azurerm-resource-scheduler_job_collection",
    "body": [
      "resource \"azurerm_resource_group\" \"rg\" {",
      "  name     = \"tfex-job_collection\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_scheduler_job_collection\" \"jobs\" {",
      "  name                = \"example_job_collection\"",
      "  location            = \"${azurerm_resource_group.rg.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.rg.name}\"",
      "  sku                 = \"free\"",
      "  state               = \"enabled\"",
      "",
      "  quota {",
      "    max_job_count            = 5",
      "    max_recurrence_interval  = 24",
      "    max_recurrence_frequency = \"hour\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-search_service": {
    "description": "Defines search_service",
    "prefix": "tf-azurerm-resource-search_service",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_search_service\" \"test\" {",
      "  name                = \"acceptanceTestSearchService1\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  sku                 = \"standard\"",
      "",
      "  tags = {",
      "    environment = \"staging\"",
      "    database    = \"test\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-security_center_contact": {
    "description": "Defines security_center_contact",
    "prefix": "tf-azurerm-resource-security_center_contact",
    "body": [
      "resource \"azurerm_security_center_contact\" \"example\" {",
      "  email = \"contact@example.com\"",
      "  phone = \"+1-555-555-5555\"",
      "",
      "  alert_notifications = true",
      "  alerts_to_admins    = true",
      "}"
    ]
  },
  "azurerm-resource-security_center_subscription_pricing": {
    "description": "Defines security_center_subscription_pricing",
    "prefix": "tf-azurerm-resource-security_center_subscription_pricing",
    "body": [
      "resource \"azurerm_security_center_subscription_pricing\" \"example\" {",
      "  tier = \"Standard\"",
      "}"
    ]
  },
  "azurerm-resource-security_center_workspace": {
    "description": "Defines security_center_workspace",
    "prefix": "tf-azurerm-resource-security_center_workspace",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"tfex-security-workspace\"",
      "  location = \"westus\"",
      "}",
      "",
      "resource \"azurerm_log_analytics_workspace\" \"example\" {",
      "  name                = \"tfex-security-workspace\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  sku                 = \"PerGB2018\"",
      "}",
      "",
      "resource \"azurerm_security_center_workspace\" \"example\" {",
      "  scope        = \"/subscriptions/00000000-0000-0000-0000-000000000000\"",
      "  workspace_id = \"${azurerm_log_analytics_workspace.example.id}\"",
      "}"
    ]
  },
  "azurerm-resource-service_fabric_cluster": {
    "description": "Defines service_fabric_cluster",
    "prefix": "tf-azurerm-resource-service_fabric_cluster",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_service_fabric_cluster\" \"test\" {",
      "  name                 = \"example-servicefabric\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  location             = \"${azurerm_resource_group.test.location}\"",
      "  reliability_level    = \"Bronze\"",
      "  upgrade_mode         = \"Manual\"",
      "  cluster_code_version = \"6.3.176.9494\"",
      "  vm_image             = \"Windows\"",
      "  management_endpoint  = \"https://example:80\"",
      "",
      "  node_type {",
      "    name                 = \"first\"",
      "    instance_count       = 3",
      "    is_primary           = true",
      "    client_endpoint_port = 2020",
      "    http_endpoint_port   = 80",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-servicebus_namespace": {
    "description": "Defines servicebus_namespace",
    "prefix": "tf-azurerm-resource-servicebus_namespace",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"terraform-servicebus\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_servicebus_namespace\" \"example\" {",
      "  name                = \"tfex_sevicebus_namespace\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  sku                 = \"Standard\"",
      "",
      "  tags = {",
      "    source = \"terraform\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-servicebus_namespace_authorization_rule": {
    "description": "Defines servicebus_namespace_authorization_rule",
    "prefix": "tf-azurerm-resource-servicebus_namespace_authorization_rule",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"terraform-servicebus\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_servicebus_namespace\" \"example\" {",
      "  name                = \"tfex_sevicebus_namespace\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  sku                 = \"Standard\"",
      "",
      "  tags = {",
      "    source = \"terraform\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_servicebus_namespace_authorization_rule\" \"example\" {",
      "  name                = \"examplerule\"",
      "  namespace_name      = \"${azurerm_servicebus_namespace.example.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "",
      "  listen = true",
      "  send   = true",
      "  manage = false",
      "}"
    ]
  },
  "azurerm-resource-servicebus_queue": {
    "description": "Defines servicebus_queue",
    "prefix": "tf-azurerm-resource-servicebus_queue",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"terraform-servicebus\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_servicebus_namespace\" \"example\" {",
      "  name                = \"tfex_sevicebus_namespace\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  sku                 = \"Standard\"",
      "",
      "  tags = {",
      "    source = \"terraform\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_servicebus_queue\" \"example\" {",
      "  name                = \"tfex_servicebus_queue\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  namespace_name      = \"${azurerm_servicebus_namespace.example.name}\"",
      "",
      "  enable_partitioning = true",
      "}"
    ]
  },
  "azurerm-resource-servicebus_queue_authorization_rule": {
    "description": "Defines servicebus_queue_authorization_rule",
    "prefix": "tf-azurerm-resource-servicebus_queue_authorization_rule",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"terraform-servicebus\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_servicebus_namespace\" \"example\" {",
      "  name                = \"tfex_sevicebus_namespace\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  sku                 = \"Standard\"",
      "",
      "  tags = {",
      "    source = \"terraform\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_servicebus_queue\" \"example\" {",
      "  name                = \"tfex_servicebus_queue\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  namespace_name      = \"${azurerm_servicebus_namespace.example.name}\"",
      "",
      "  enable_partitioning = true",
      "}",
      "",
      "resource \"azurerm_servicebus_queue_authorization_rule\" \"example\" {",
      "  name                = \"examplerule\"",
      "  namespace_name      = \"${azurerm_servicebus_namespace.example.name}\"",
      "  queue_name          = \"${azurerm_servicebus_queue.example.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "",
      "  listen = true",
      "  send   = true",
      "  manage = false",
      "}"
    ]
  },
  "azurerm-resource-servicebus_subscription": {
    "description": "Defines servicebus_subscription",
    "prefix": "tf-azurerm-resource-servicebus_subscription",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"tfex-servicebus-subscription\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_servicebus_namespace\" \"example\" {",
      "  name                = \"tfex_sevicebus_namespace\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  sku                 = \"Standard\"",
      "",
      "  tags = {",
      "    source = \"terraform\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_servicebus_topic\" \"example\" {",
      "  name                = \"tfex_sevicebus_topic\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  namespace_name      = \"${azurerm_servicebus_namespace.example.name}\"",
      "",
      "  enable_partitioning = true",
      "}",
      "",
      "resource \"azurerm_servicebus_subscription\" \"example\" {",
      "  name                = \"tfex_sevicebus_subscription\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  namespace_name      = \"${azurerm_servicebus_namespace.example.name}\"",
      "  topic_name          = \"${azurerm_servicebus_topic.example.name}\"",
      "  max_delivery_count  = 1",
      "}"
    ]
  },
  "azurerm-resource-servicebus_subscription_rule": {
    "description": "Defines servicebus_subscription_rule",
    "prefix": "tf-azurerm-resource-servicebus_subscription_rule",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"tfex-servicebus-subscription-rule-sql\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_servicebus_namespace\" \"example\" {",
      "  name                = \"tfex_sevicebus_namespace\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  sku                 = \"Standard\"",
      "",
      "  tags = {",
      "    source = \"terraform\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_servicebus_topic\" \"example\" {",
      "  name                = \"tfex_sevicebus_topic\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  namespace_name      = \"${azurerm_servicebus_namespace.example.name}\"",
      "",
      "  enable_partitioning = true",
      "}",
      "",
      "resource \"azurerm_servicebus_subscription\" \"example\" {",
      "  name                = \"tfex_sevicebus_subscription\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  namespace_name      = \"${azurerm_servicebus_namespace.example.name}\"",
      "  topic_name          = \"${azurerm_servicebus_topic.example.name}\"",
      "  max_delivery_count  = 1",
      "}",
      "",
      "resource \"azurerm_servicebus_subscription_rule\" \"example\" {",
      "  name                = \"tfex_sevicebus_rule\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  namespace_name      = \"${azurerm_servicebus_namespace.example.name}\"",
      "  topic_name          = \"${azurerm_servicebus_topic.example.name}\"",
      "  subscription_name   = \"${azurerm_servicebus_subscription.example.name}\"",
      "  filter_type         = \"SqlFilter\"",
      "  sql_filter          = \"color = 'red'\"",
      "}"
    ]
  },
  "azurerm-resource-servicebus_topic": {
    "description": "Defines servicebus_topic",
    "prefix": "tf-azurerm-resource-servicebus_topic",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"tfex-servicebus-topic\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_servicebus_namespace\" \"example\" {",
      "  name                = \"tfex_sevicebus_namespace\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  sku                 = \"Standard\"",
      "",
      "  tags = {",
      "    source = \"terraform\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_servicebus_topic\" \"example\" {",
      "  name                = \"tfex_sevicebus_topic\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  namespace_name      = \"${azurerm_servicebus_namespace.example.name}\"",
      "",
      "  enable_partitioning = true",
      "}"
    ]
  },
  "azurerm-resource-servicebus_topic_authorization_rule": {
    "description": "Defines servicebus_topic_authorization_rule",
    "prefix": "tf-azurerm-resource-servicebus_topic_authorization_rule",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"tfex-servicebus\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_servicebus_namespace\" \"example\" {",
      "  name                = \"tfex_servicebus_namespace\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  sku                 = \"Standard\"",
      "",
      "  tags = {",
      "    source = \"terraform\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_servicebus_topic\" \"example\" {",
      "  name                = \"tfex_servicebus_topic\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  namespace_name      = \"${azurerm_servicebus_namespace.example.name}\"",
      "}",
      "",
      "resource \"azurerm_servicebus_topic_authorization_rule\" \"example\" {",
      "  name                = \"tfex_servicebus_topic_sasPolicy\"",
      "  namespace_name      = \"${azurerm_servicebus_namespace.example.name}\"",
      "  topic_name          = \"${azurerm_servicebus_topic.example.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  listen              = true",
      "  send                = false",
      "  manage              = false",
      "}"
    ]
  },
  "azurerm-resource-shared_image": {
    "description": "Defines shared_image",
    "prefix": "tf-azurerm-resource-shared_image",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_shared_image_gallery\" \"test\" {",
      "  name                = \"example_image_gallery\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  description         = \"Shared images and things.\"",
      "",
      "  tags = {",
      "    Hello = \"There\"",
      "    World = \"Example\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_shared_image\" \"test\" {",
      "  name                = \"my-image\"",
      "  gallery_name        = \"${azurerm_shared_image_gallery.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  os_type             = \"Linux\"",
      "",
      "  identifier {",
      "    publisher = \"PublisherName\"",
      "    offer     = \"OfferName\"",
      "    sku       = \"ExampleSku\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-shared_image_gallery": {
    "description": "Defines shared_image_gallery",
    "prefix": "tf-azurerm-resource-shared_image_gallery",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_shared_image_gallery\" \"test\" {",
      "  name                = \"example_image_gallery\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  description         = \"Shared images and things.\"",
      "",
      "  tags = {",
      "    Hello = \"There\"",
      "    World = \"Example\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-shared_image_version": {
    "description": "Defines shared_image_version",
    "prefix": "tf-azurerm-resource-shared_image_version",
    "body": [
      "data \"azurerm_image\" \"existing\" {",
      "  name                = \"search-api\"",
      "  resource_group_name = \"packerimages\"",
      "}",
      "",
      "data \"azurerm_shared_image\" \"existing\" {",
      "  name                = \"existing-image\"",
      "  gallery_name        = \"existing_gallery\"",
      "  resource_group_name = \"existing-resources\"",
      "}",
      "",
      "resource \"azurerm_shared_image_version\" \"test\" {",
      "  name                = \"0.0.1\"",
      "  gallery_name        = \"${data.azurerm_shared_image.existing.gallery_name}\"",
      "  image_name          = \"${data.azurerm_shared_image.existing.name}\"",
      "  resource_group_name = \"${data.azurerm_shared_image.existing.resource_group_name}\"",
      "  location            = \"${data.azurerm_shared_image.existing.location}\"",
      "  managed_image_id    = \"${data.azurerm_image.existing.id}\"",
      "",
      "  target_region {",
      "    name                   = \"${data.azurerm_shared_image.existing.location}\"",
      "    regional_replica_count = \"5\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-signalr_service": {
    "description": "Defines signalr_service",
    "prefix": "tf-azurerm-resource-signalr_service",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"terraform-signalr\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_signalr_service\" \"example\" {",
      "  name                = \"tfex-signalr\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "",
      "  sku {",
      "    name     = \"Free_F1\"",
      "    capacity = 1",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-snapshot": {
    "description": "Defines snapshot",
    "prefix": "tf-azurerm-resource-snapshot",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"snapshot-rg\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_managed_disk\" \"test\" {",
      "  name                 = \"managed-disk\"",
      "  location             = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  storage_account_type = \"Standard_LRS\"",
      "  create_option        = \"Empty\"",
      "  disk_size_gb         = \"10\"",
      "}",
      "",
      "resource \"azurerm_snapshot\" \"test\" {",
      "  name                = \"snapshot\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  create_option       = \"Copy\"",
      "  source_uri          = \"${azurerm_managed_disk.test.id}\"",
      "}"
    ]
  },
  "azurerm-resource-sql_active_directory_administrator": {
    "description": "Defines sql_active_directory_administrator",
    "prefix": "tf-azurerm-resource-sql_active_directory_administrator",
    "body": [
      "data \"azurerm_client_config\" \"current\" {}",
      "",
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_sql_server\" \"test\" {",
      "  name                         = \"mysqlserver\"",
      "  resource_group_name          = \"${azurerm_resource_group.test.name}\"",
      "  location                     = \"${azurerm_resource_group.test.location}\"",
      "  version                      = \"12.0\"",
      "  administrator_login          = \"4dm1n157r470r\"",
      "  administrator_login_password = \"4-v3ry-53cr37-p455w0rd\"",
      "}",
      "",
      "resource \"azurerm_sql_active_directory_administrator\" \"test\" {",
      "  server_name         = \"${azurerm_sql_server.test.name}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  login               = \"sqladmin\"",
      "  tenant_id           = \"${data.azurerm_client_config.current.tenant_id}\"",
      "  object_id           = \"${data.azurerm_client_config.current.service_principal_object_id}\"",
      "}"
    ]
  },
  "azurerm-resource-sql_database": {
    "description": "Defines sql_database",
    "prefix": "tf-azurerm-resource-sql_database",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_sql_server\" \"test\" {",
      "  name                         = \"mysqlserver\"",
      "  resource_group_name          = \"${azurerm_resource_group.test.name}\"",
      "  location                     = \"West US\"",
      "  version                      = \"12.0\"",
      "  administrator_login          = \"4dm1n157r470r\"",
      "  administrator_login_password = \"4-v3ry-53cr37-p455w0rd\"",
      "}",
      "",
      "resource \"azurerm_sql_database\" \"test\" {",
      "  name                = \"mysqldatabase\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"West US\"",
      "  server_name         = \"${azurerm_sql_server.test.name}\"",
      "",
      "  tags = {",
      "    environment = \"production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-sql_elasticpool": {
    "description": "Defines sql_elasticpool",
    "prefix": "tf-azurerm-resource-sql_elasticpool",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"my-resource-group\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_sql_server\" \"test\" {",
      "  name                         = \"my-sql-server\"                           # NOTE: needs to be globally unique",
      "  resource_group_name          = \"${azurerm_resource_group.test.name}\"",
      "  location                     = \"${azurerm_resource_group.test.location}\"",
      "  version                      = \"12.0\"",
      "  administrator_login          = \"4dm1n157r470r\"",
      "  administrator_login_password = \"4-v3ry-53cr37-p455w0rd\"",
      "}",
      "",
      "resource \"azurerm_sql_elasticpool\" \"test\" {",
      "  name                = \"test\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  server_name         = \"${azurerm_sql_server.test.name}\"",
      "  edition             = \"Basic\"",
      "  dtu                 = 50",
      "  db_dtu_min          = 0",
      "  db_dtu_max          = 5",
      "  pool_size           = 5000",
      "}"
    ]
  },
  "azurerm-resource-sql_firewall_rule": {
    "description": "Defines sql_firewall_rule",
    "prefix": "tf-azurerm-resource-sql_firewall_rule",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_sql_server\" \"test\" {",
      "  name                         = \"mysqlserver\"",
      "  resource_group_name          = \"${azurerm_resource_group.test.name}\"",
      "  location                     = \"West US\"",
      "  version                      = \"12.0\"",
      "  administrator_login          = \"4dm1n157r470r\"",
      "  administrator_login_password = \"4-v3ry-53cr37-p455w0rd\"",
      "}",
      "",
      "resource \"azurerm_sql_firewall_rule\" \"test\" {",
      "  name                = \"FirewallRule1\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  server_name         = \"${azurerm_sql_server.test.name}\"",
      "  start_ip_address    = \"10.0.17.62\"",
      "  end_ip_address      = \"10.0.17.62\"",
      "}"
    ]
  },
  "azurerm-resource-sql_server": {
    "description": "Defines sql_server",
    "prefix": "tf-azurerm-resource-sql_server",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"database-rg\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_sql_server\" \"test\" {",
      "  name                         = \"mysqlserver\"",
      "  resource_group_name          = \"${azurerm_resource_group.test.name}\"",
      "  location                     = \"${azurerm_resource_group.test.location}\"",
      "  version                      = \"12.0\"",
      "  administrator_login          = \"mradministrator\"",
      "  administrator_login_password = \"thisIsDog11\"",
      "",
      "  tags = {",
      "    environment = \"production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-sql_virtual_network_rule": {
    "description": "Defines sql_virtual_network_rule",
    "prefix": "tf-azurerm-resource-sql_virtual_network_rule",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example-sql-server-vnet-rule\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"vnet\" {",
      "  name                = \"example-vnet\"",
      "  address_space       = [\"10.7.29.0/29\"]",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"subnet\" {",
      "  name                 = \"example-subnet\"",
      "  resource_group_name  = \"${azurerm_resource_group.example.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.vnet.name}\"",
      "  address_prefix       = \"10.7.29.0/29\"",
      "  service_endpoints    = [\"Microsoft.Sql\"]",
      "}",
      "",
      "resource \"azurerm_sql_server\" \"sqlserver\" {",
      "  name                         = \"unqiueazuresqlserver\"",
      "  resource_group_name          = \"${azurerm_resource_group.example.name}\"",
      "  location                     = \"${azurerm_resource_group.example.location}\"",
      "  version                      = \"12.0\"",
      "  administrator_login          = \"4dm1n157r470r\"",
      "  administrator_login_password = \"4-v3ry-53cr37-p455w0rd\"",
      "}",
      "",
      "resource \"azurerm_sql_virtual_network_rule\" \"sqlvnetrule\" {",
      "  name                = \"sql-vnet-rule\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  server_name         = \"${azurerm_sql_server.sqlserver.name}\"",
      "  subnet_id           = \"${azurerm_subnet.subnet.id}\"",
      "}"
    ]
  },
  "azurerm-resource-storage_account": {
    "description": "Defines storage_account",
    "prefix": "tf-azurerm-resource-storage_account",
    "body": [
      "resource \"azurerm_resource_group\" \"testrg\" {",
      "  name     = \"resourceGroupName\"",
      "  location = \"westus\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"testsa\" {",
      "  name                     = \"storageaccountname\"",
      "  resource_group_name      = \"${azurerm_resource_group.testrg.name}\"",
      "  location                 = \"westus\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"GRS\"",
      "",
      "  tags = {",
      "    environment = \"staging\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-storage_blob": {
    "description": "Defines storage_blob",
    "prefix": "tf-azurerm-resource-storage_blob",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acctestRG-d\"",
      "  location = \"westus\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"test\" {",
      "  name                     = \"acctestaccs\"",
      "  resource_group_name      = \"${azurerm_resource_group.test.name}\"",
      "  location                 = \"westus\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_storage_container\" \"test\" {",
      "  name                  = \"vhds\"",
      "  resource_group_name   = \"${azurerm_resource_group.test.name}\"",
      "  storage_account_name  = \"${azurerm_storage_account.test.name}\"",
      "  container_access_type = \"private\"",
      "}",
      "",
      "resource \"azurerm_storage_blob\" \"testsb\" {",
      "  name = \"sample.vhd\"",
      "",
      "  resource_group_name    = \"${azurerm_resource_group.test.name}\"",
      "  storage_account_name   = \"${azurerm_storage_account.test.name}\"",
      "  storage_container_name = \"${azurerm_storage_container.test.name}\"",
      "",
      "  type = \"page\"",
      "  size = 5120",
      "}"
    ]
  },
  "azurerm-resource-storage_container": {
    "description": "Defines storage_container",
    "prefix": "tf-azurerm-resource-storage_container",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"test\" {",
      "  name                     = \"examplestoraccount\"",
      "  resource_group_name      = \"${azurerm_resource_group.test.name}\"",
      "  location                 = \"${azurerm_resource_group.test.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "",
      "  tags = {",
      "    environment = \"staging\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_storage_container\" \"test\" {",
      "  name                  = \"vhds\"",
      "  resource_group_name   = \"${azurerm_resource_group.test.name}\"",
      "  storage_account_name  = \"${azurerm_storage_account.test.name}\"",
      "  container_access_type = \"private\"",
      "}"
    ]
  },
  "azurerm-resource-storage_queue": {
    "description": "Defines storage_queue",
    "prefix": "tf-azurerm-resource-storage_queue",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"test\" {",
      "  name                     = \"examplestorageacc\"",
      "  resource_group_name      = \"${azurerm_resource_group.test.name}\"",
      "  location                 = \"${azurerm_resource_group.test.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_storage_queue\" \"test\" {",
      "  name                 = \"mysamplequeue\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  storage_account_name = \"${azurerm_storage_account.test.name}\"",
      "}"
    ]
  },
  "azurerm-resource-storage_share": {
    "description": "Defines storage_share",
    "prefix": "tf-azurerm-resource-storage_share",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"azuretest\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"test\" {",
      "  name                     = \"azureteststorage\"",
      "  resource_group_name      = \"${azurerm_resource_group.test.name}\"",
      "  location                 = \"${azurerm_resource_group.test.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_storage_share\" \"testshare\" {",
      "  name                 = \"sharename\"",
      "  storage_account_name = \"${azurerm_storage_account.test.name}\"",
      "  quota                = 50",
      "}"
    ]
  },
  "azurerm-resource-storage_share_directory": {
    "description": "Defines storage_share_directory",
    "prefix": "tf-azurerm-resource-storage_share_directory",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"azuretest\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"test\" {",
      "  name                     = \"azureteststorage\"",
      "  resource_group_name      = \"${azurerm_resource_group.test.name}\"",
      "  location                 = \"${azurerm_resource_group.test.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_storage_share\" \"test\" {",
      "  name                 = \"sharename\"",
      "  storage_account_name = \"${azurerm_storage_account.test.name}\"",
      "  quota                = 50",
      "}",
      "",
      "resource \"azurerm_storage_share_directory\" \"test\" {",
      "  name                 = \"example\"",
      "  share_name           = \"${azurerm_storage_share.test.name}\"",
      "  storage_account_name = \"${azurerm_storage_account.test.name}\"",
      "}"
    ]
  },
  "azurerm-resource-storage_table": {
    "description": "Defines storage_table",
    "prefix": "tf-azurerm-resource-storage_table",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"azuretest\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"test\" {",
      "  name                     = \"azureteststorage1\"",
      "  resource_group_name      = \"${azurerm_resource_group.test.name}\"",
      "  location                 = \"${azurerm_resource_group.test.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_storage_table\" \"test\" {",
      "  name                 = \"mysampletable\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  storage_account_name = \"${azurerm_storage_account.test.name}\"",
      "}"
    ]
  },
  "azurerm-resource-storage_table_entity": {
    "description": "Defines storage_table_entity",
    "prefix": "tf-azurerm-resource-storage_table_entity",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"azureexample\"",
      "  location = \"westus\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"example\" {",
      "  name                     = \"azureexamplestorage1\"",
      "  resource_group_name      = \"${azurerm_resource_group.example.name}\"",
      "  location                 = \"${azurerm_resource_group.example.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_storage_table\" \"example\" {",
      "  name                 = \"myexampletable\"",
      "  resource_group_name  = \"${azurerm_resource_group.example.name}\"",
      "  storage_account_name = \"${azurerm_storage_account.example.name}\"",
      "}",
      "",
      "resource \"azurerm_storage_table_entity\" \"example\" {",
      "  storage_account_name = \"${azurerm_storage_account.example.name}\"",
      "  table_name           = \"${azurerm_storage_table.example.name}\"",
      "  ",
      "  partition_key = \"examplepartition\"",
      "  row_key       = \"exmamplerow\"",
      "",
      "  entity = {",
      "    example = \"sample\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-stream_analytics_function_javascript_udf": {
    "description": "Defines stream_analytics_function_javascript_udf",
    "prefix": "tf-azurerm-resource-stream_analytics_function_javascript_udf",
    "body": [
      "data \"azurerm_resource_group\" \"example\" {",
      "  name = \"example-resources\"",
      "}",
      "",
      "data \"azurerm_stream_analytics_job\" \"example\" {",
      "  name                = \"example-job\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "}",
      "",
      "resource \"azurerm_stream_analytics_function_javascript_udf\" \"test\" {",
      "  name                      = \"example-javascript-function\"",
      "  stream_analytics_job_name = \"${data.azurerm_stream_analytics_job.example.name}\"",
      "  resource_group_name       = \"${data.azurerm_stream_analytics_job.example.resource_group_name}\"",
      "",
      "  script = <<SCRIPT",
      "function getRandomNumber(in) {",
      "  return in;",
      "}",
      "SCRIPT",
      "",
      "  input {",
      "    type = \"bigint\"",
      "  }",
      "",
      "  output {",
      "    type = \"bigint\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-stream_analytics_job": {
    "description": "Defines stream_analytics_job",
    "prefix": "tf-azurerm-resource-stream_analytics_job",
    "body": [
      "resource \"azurerm_resource_group\" \"example\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_stream_analytics_job\" \"example\" {",
      "  name                                     = \"example-job\"",
      "  resource_group_name                      = \"${azurerm_resource_group.example.name}\"",
      "  location                                 = \"${azurerm_resource_group.example.location}\"",
      "  compatibility_level                      = \"1.1\"",
      "  data_locale                              = \"en-GB\"",
      "  events_late_arrival_max_delay_in_seconds = 60",
      "  events_out_of_order_max_delay_in_seconds = 50",
      "  events_out_of_order_policy               = \"Adjust\"",
      "  output_error_policy                      = \"Drop\"",
      "  streaming_units                          = 3",
      "",
      "  tags = {",
      "    environment = \"Example\"",
      "  }",
      "",
      "  transformation_query = <<QUERY",
      "    SELECT *",
      "    INTO [YourOutputAlias]",
      "    FROM [YourInputAlias]",
      "QUERY",
      "}"
    ]
  },
  "azurerm-resource-stream_analytics_output_blob": {
    "description": "Defines stream_analytics_output_blob",
    "prefix": "tf-azurerm-resource-stream_analytics_output_blob",
    "body": [
      "data \"azurerm_resource_group\" \"example\" {",
      "  name = \"example-resources\"",
      "}",
      "",
      "data \"azurerm_stream_analytics_job\" \"example\" {",
      "  name                = \"example-job\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"example\" {",
      "  name                     = \"examplesa\"",
      "  resource_group_name      = \"${data.azurerm_resource_group.example.name}\"",
      "  location                 = \"${data.azurerm_resource_group.example.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_storage_container\" \"example\" {",
      "  name                  = \"example\"",
      "  resource_group_name   = \"${data.azurerm_resource_group.example.name}\"",
      "  storage_account_name  = \"${azurerm_storage_account.example.name}\"",
      "  container_access_type = \"private\"",
      "}",
      "",
      "resource \"azurerm_stream_analytics_output_blob\" \"example\" {",
      "  name                      = \"output-to-blob-storage\"",
      "  stream_analytics_job_name = \"${data.azurerm_stream_analytics_job.example.name}\"",
      "  resource_group_name       = \"${data.azurerm_stream_analytics_job.example.resource_group_name}\"",
      "  storage_account_name      = \"${azurerm_storage_account.example.name}\"",
      "  storage_account_key       = \"${azurerm_storage_account.example.primary_access_key}\"",
      "  storage_container_name    = \"${azurerm_storage_container.example.name}\"",
      "  path_pattern              = \"some-pattern\"",
      "  date_format               = \"yyyy-MM-dd\"",
      "  time_format               = \"HH\"",
      "",
      "  serialization {",
      "    type            = \"Csv\"",
      "    encoding        = \"UTF8\"",
      "    field_delimiter = \",\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-stream_analytics_output_eventhub": {
    "description": "Defines stream_analytics_output_eventhub",
    "prefix": "tf-azurerm-resource-stream_analytics_output_eventhub",
    "body": [
      "data \"azurerm_resource_group\" \"example\" {",
      "  name = \"example-resources\"",
      "}",
      "",
      "data \"azurerm_stream_analytics_job\" \"example\" {",
      "  name                = \"example-job\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "}",
      "",
      "resource \"azurerm_eventhub_namespace\" \"test\" {",
      "  name                = \"example-ehnamespace\"",
      "  location            = \"${data.azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${data.azurerm_resource_group.example.name}\"",
      "  sku                 = \"Standard\"",
      "  capacity            = 1",
      "  kafka_enabled       = false",
      "}",
      "",
      "resource \"azurerm_eventhub\" \"test\" {",
      "  name                = \"example-eventhub\"",
      "  namespace_name      = \"${azurerm_eventhub_namespace.example.name}\"",
      "  resource_group_name = \"${data.azurerm_resource_group.example.name}\"",
      "  partition_count     = 2",
      "  message_retention   = 1",
      "}",
      "",
      "resource \"azurerm_stream_analytics_output_eventhub\" \"example\" {",
      "  name                      = \"output-to-eventhub\"",
      "  stream_analytics_job_name = \"${data.azurerm_stream_analytics_job.example.name}\"",
      "  resource_group_name       = \"${data.azurerm_stream_analytics_job.example.resource_group_name}\"",
      "  eventhub_name             = \"${azurerm_eventhub.example.name}\"",
      "  servicebus_namespace      = \"${azurerm_eventhub_namespace.example.name}\"",
      "  shared_access_policy_key  = \"${azurerm_eventhub_namespace.example.default_primary_key}\"",
      "  shared_access_policy_name = \"RootManageSharedAccessKey\"",
      "",
      "  serialization {",
      "    type = \"Avro\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-stream_analytics_output_mssql": {
    "description": "Defines stream_analytics_output_mssql",
    "prefix": "tf-azurerm-resource-stream_analytics_output_mssql",
    "body": [
      "data \"azurerm_resource_group\" \"example\" {",
      "  name = \"example-resources\"",
      "}",
      "",
      "data \"azurerm_stream_analytics_job\" \"example\" {",
      "  name                = \"example-job\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "}",
      "",
      "resource \"azurerm_sql_server\" \"example\" {",
      "  name                         = \"example-server\"",
      "  resource_group_name          = \"${azurerm_resource_group.example.name}\"",
      "  location                     = \"${azurerm_resource_group.example.location}\"",
      "  version                      = \"12.0\"",
      "  administrator_login          = \"dbadmin\"",
      "  administrator_login_password = \"example-password\"",
      "}",
      "",
      "resource \"azurerm_sql_database\" \"example\" {",
      "  name                             = \"exampledb\"",
      "  resource_group_name              = \"${azurerm_resource_group.example.name}\"",
      "  location                         = \"${azurerm_resource_group.example.location}\"",
      "  server_name                      = \"${azurerm_sql_server.example.name}\"",
      "  requested_service_objective_name = \"S0\"",
      "  collation                        = \"SQL_LATIN1_GENERAL_CP1_CI_AS\"",
      "  max_size_bytes                   = \"268435456000\"",
      "  create_mode                      = \"Default\"",
      "}",
      "",
      "resource \"azurerm_stream_analytics_output_mssql\" \"example\" {",
      "  name                      = \"example-output-sql\"",
      "  stream_analytics_job_name = \"${azurerm_stream_analytics_job.example.name}\"",
      "  resource_group_name       = \"${azurerm_stream_analytics_job.example.resource_group_name}\"",
      "",
      "  server   = \"${azurerm_sql_server.example.fully_qualified_domain_name}\"",
      "  user     = \"${azurerm_sql_server.example.administrator_login}\"",
      "  password = \"${azurerm_sql_server.example.administrator_login_password}\"",
      "  database = \"${azurerm_sql_database.example.name}\"",
      "  table    = \"ExampleTable\"",
      "}"
    ]
  },
  "azurerm-resource-stream_analytics_output_servicebus_queue": {
    "description": "Defines stream_analytics_output_servicebus_queue",
    "prefix": "tf-azurerm-resource-stream_analytics_output_servicebus_queue",
    "body": [
      "data \"azurerm_resource_group\" \"example\" {",
      "  name = \"example-resources\"",
      "}",
      "",
      "data \"azurerm_stream_analytics_job\" \"example\" {",
      "  name                = \"example-job\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "}",
      "",
      "resource \"azurerm_servicebus_namespace\" \"example\" {",
      "  name                = \"example-namespace\"",
      "  location            = \"${data.azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${data.azurerm_resource_group.example.name}\"",
      "  sku                 = \"Standard\"",
      "}",
      "",
      "resource \"azurerm_servicebus_queue\" \"example\" {",
      "  name                = \"example-queue\"",
      "  resource_group_name = \"${data.azurerm_resource_group.example.name}\"",
      "  namespace_name      = \"${azurerm_servicebus_namespace.example.name}\"",
      "  enable_partitioning = true",
      "}",
      "",
      "resource \"azurerm_stream_analytics_output_servicebus_queue\" \"test\" {",
      "  name                      = \"blob-storage-output\"",
      "  stream_analytics_job_name = \"${data.azurerm_stream_analytics_job.example.name}\"",
      "  resource_group_name       = \"${data.azurerm_stream_analytics_job.example.resource_group_name}\"",
      "  queue_name                = \"${azurerm_servicebus_queue.example.name}\"",
      "  servicebus_namespace      = \"${azurerm_servicebus_namespace.example.name}\"",
      "  shared_access_policy_key  = \"${azurerm_servicebus_namespace.example.default_primary_key}\"",
      "  shared_access_policy_name = \"RootManageSharedAccessKey\"",
      "",
      "  serialization {",
      "    format = \"Avro\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-stream_analytics_stream_input_blob": {
    "description": "Defines stream_analytics_stream_input_blob",
    "prefix": "tf-azurerm-resource-stream_analytics_stream_input_blob",
    "body": [
      "data \"azurerm_resource_group\" \"example\" {",
      "  name = \"example-resources\"",
      "}",
      "",
      "data \"azurerm_stream_analytics_job\" \"example\" {",
      "  name                = \"example-job\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"example\" {",
      "  name                     = \"examplestoracc\"",
      "  resource_group_name      = \"${azurerm_resource_group.example.name}\"",
      "  location                 = \"${azurerm_resource_group.example.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurerm_storage_container\" \"example\" {",
      "  name                  = \"example\"",
      "  resource_group_name   = \"${azurerm_resource_group.example.name}\"",
      "  storage_account_name  = \"${azurerm_storage_account.example.name}\"",
      "  container_access_type = \"private\"",
      "}",
      "",
      "resource \"azurerm_stream_analytics_stream_input_eventhub\" \"test\" {",
      "  name                      = \"eventhub-stream-input\"",
      "  stream_analytics_job_name = \"${data.azurerm_stream_analytics_job.example.name}\"",
      "  resource_group_name       = \"${data.azurerm_stream_analytics_job.example.resource_group_name}\"",
      "  storage_account_name      = \"${azurerm_storage_account.example.name}\"",
      "  storage_account_key       = \"${azurerm_storage_account.example.primary_access_key}\"",
      "  storage_container_name    = \"${azurerm_storage_container.example.name}\"",
      "  path_pattern              = \"some-random-pattern\"",
      "  date_format               = \"yyyy/MM/dd\"",
      "  time_format               = \"HH\"",
      "",
      "  serialization {",
      "    type     = \"Json\"",
      "    encoding = \"UTF8\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-stream_analytics_stream_input_eventhub": {
    "description": "Defines stream_analytics_stream_input_eventhub",
    "prefix": "tf-azurerm-resource-stream_analytics_stream_input_eventhub",
    "body": [
      "data \"azurerm_resource_group\" \"example\" {",
      "  name = \"example-resources\"",
      "}",
      "",
      "data \"azurerm_stream_analytics_job\" \"example\" {",
      "  name                = \"example-job\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "}",
      "",
      "resource \"azurerm_eventhub_namespace\" \"example\" {",
      "  name                = \"example-namespace\"",
      "  location            = \"${data.azurerm_resource_group.example.location}\"",
      "  resource_group_name = \"${data.azurerm_resource_group.example.name}\"",
      "  sku                 = \"Standard\"",
      "  capacity            = 1",
      "  kafka_enabled       = false",
      "}",
      "",
      "resource \"azurerm_eventhub\" \"example\" {",
      "  name                = \"example-eventhub\"",
      "  namespace_name      = \"${azurerm_eventhub_namespace.example.name}\"",
      "  resource_group_name = \"${data.azurerm_resource_group.example.name}\"",
      "  partition_count     = 2",
      "  message_retention   = 1",
      "}",
      "",
      "resource \"azurerm_eventhub_consumer_group\" \"test\" {",
      "  name                = \"example-consumergroup\"",
      "  namespace_name      = \"${azurerm_eventhub_namespace.test.name}\"",
      "  eventhub_name       = \"${azurerm_eventhub.test.name}\"",
      "  resource_group_name = \"${data.azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_stream_analytics_stream_input_eventhub\" \"test\" {",
      "  name                         = \"eventhub-stream-input\"",
      "  stream_analytics_job_name    = \"${data.azurerm_stream_analytics_job.example.name}\"",
      "  resource_group_name          = \"${data.azurerm_stream_analytics_job.example.resource_group_name}\"",
      "  eventhub_consumer_group_name = \"${azurerm_eventhub_consumer_group.example.name}\"",
      "  eventhub_name                = \"${azurerm_eventhub.example.name}\"",
      "  servicebus_namespace         = \"${azurerm_eventhub_namespace.example.name}\"",
      "  shared_access_policy_key     = \"${azurerm_eventhub_namespace.example.default_primary_key}\"",
      "  shared_access_policy_name    = \"RootManageSharedAccessKey\"",
      "",
      "  serialization {",
      "    type     = \"Json\"",
      "    encoding = \"UTF8\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-stream_analytics_stream_input_iothub": {
    "description": "Defines stream_analytics_stream_input_iothub",
    "prefix": "tf-azurerm-resource-stream_analytics_stream_input_iothub",
    "body": [
      "data \"azurerm_resource_group\" \"example\" {",
      "  name = \"example-resources\"",
      "}",
      "",
      "data \"azurerm_stream_analytics_job\" \"example\" {",
      "  name                = \"example-job\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "}",
      "",
      "resource \"azurerm_iothub\" \"test\" {",
      "  name                = \"example-iothub\"",
      "  resource_group_name = \"${azurerm_resource_group.example.name}\"",
      "  location            = \"${azurerm_resource_group.example.location}\"",
      "",
      "  sku {",
      "    name     = \"S1\"",
      "    tier     = \"Standard\"",
      "    capacity = \"1\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_stream_analytics_stream_input_iothub\" \"test\" {",
      "  name                         = \"example-iothub-input\"",
      "  stream_analytics_job_name    = \"${data.azurerm_stream_analytics_job.example.name}\"",
      "  resource_group_name          = \"${data.azurerm_stream_analytics_job.example.resource_group_name}\"",
      "  endpoint                     = \"messages/events\"",
      "  eventhub_consumer_group_name = \"$Default\"",
      "  iothub_namespace             = \"${azurerm_iothub.example.name}\"",
      "  shared_access_policy_key     = \"${azurerm_iothub.example.shared_access_policy.0.primary_key}\"",
      "  shared_access_policy_name    = \"iothubowner\"",
      "",
      "  serialization {",
      "    type     = \"Json\"",
      "    encoding = \"UTF8\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-subnet": {
    "description": "Defines subnet",
    "prefix": "tf-azurerm-resource-subnet",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"acceptanceTestVirtualNetwork1\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"test\" {",
      "  name                 = \"testsubnet\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.1.0/24\"",
      "",
      "  delegation {",
      "    name = \"acctestdelegation\"",
      "",
      "    service_delegation {",
      "      name    = \"Microsoft.ContainerInstance/containerGroups\"",
      "      actions = [\"Microsoft.Network/virtualNetworks/subnets/action\"]",
      "    }",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-subnet_network_security_group_association": {
    "description": "Defines subnet_network_security_group_association",
    "prefix": "tf-azurerm-resource-subnet_network_security_group_association",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"example-network\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"test\" {",
      "  name                      = \"frontend\"",
      "  resource_group_name       = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name      = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix            = \"10.0.2.0/24\"",
      "  network_security_group_id = \"${azurerm_network_security_group.test.id}\"",
      "}",
      "",
      "resource \"azurerm_network_security_group\" \"test\" {",
      "  name                = \"example-nsg\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  security_rule {",
      "    name                       = \"test123\"",
      "    priority                   = 100",
      "    direction                  = \"Inbound\"",
      "    access                     = \"Allow\"",
      "    protocol                   = \"Tcp\"",
      "    source_port_range          = \"*\"",
      "    destination_port_range     = \"*\"",
      "    source_address_prefix      = \"*\"",
      "    destination_address_prefix = \"*\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_subnet_network_security_group_association\" \"test\" {",
      "  subnet_id                 = \"${azurerm_subnet.test.id}\"",
      "  network_security_group_id = \"${azurerm_network_security_group.test.id}\"",
      "}"
    ]
  },
  "azurerm-resource-subnet_route_table_association": {
    "description": "Defines subnet_route_table_association",
    "prefix": "tf-azurerm-resource-subnet_route_table_association",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"example-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"example-network\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"test\" {",
      "  name                 = \"frontend\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.2.0/24\"",
      "  route_table_id       = \"${azurerm_route_table.test.id}\"",
      "}",
      "",
      "resource \"azurerm_route_table\" \"test\" {",
      "  name                = \"example-routetable\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  route {",
      "    name                   = \"example\"",
      "    address_prefix         = \"10.100.0.0/14\"",
      "    next_hop_type          = \"VirtualAppliance\"",
      "    next_hop_in_ip_address = \"10.10.1.1\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_subnet_route_table_association\" \"test\" {",
      "  subnet_id      = \"${azurerm_subnet.test.id}\"",
      "  route_table_id = \"${azurerm_route_table.test.id}\"",
      "}"
    ]
  },
  "azurerm-resource-template_deployment": {
    "description": "Defines template_deployment",
    "prefix": "tf-azurerm-resource-template_deployment",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acctestRG-01\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_template_deployment\" \"test\" {",
      "  name                = \"acctesttemplate-01\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  template_body = <<DEPLOY",
      "{",
      "  \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",",
      "  \"contentVersion\": \"1.0.0.0\",",
      "  \"parameters\": {",
      "    \"storageAccountType\": {",
      "      \"type\": \"string\",",
      "      \"defaultValue\": \"Standard_LRS\",",
      "      \"allowedValues\": [",
      "        \"Standard_LRS\",",
      "        \"Standard_GRS\",",
      "        \"Standard_ZRS\"",
      "      ],",
      "      \"metadata\": {",
      "        \"description\": \"Storage Account type\"",
      "      }",
      "    }",
      "  },",
      "  \"variables\": {",
      "    \"location\": \"[resourceGroup().location]\",",
      "    \"storageAccountName\": \"[concat(uniquestring(resourceGroup().id), 'storage')]\",",
      "    \"publicIPAddressName\": \"[concat('myPublicIp', uniquestring(resourceGroup().id))]\",",
      "    \"publicIPAddressType\": \"Dynamic\",",
      "    \"apiVersion\": \"2015-06-15\",",
      "    \"dnsLabelPrefix\": \"terraform-acctest\"",
      "  },",
      "  \"resources\": [",
      "    {",
      "      \"type\": \"Microsoft.Storage/storageAccounts\",",
      "      \"name\": \"[variables('storageAccountName')]\",",
      "      \"apiVersion\": \"[variables('apiVersion')]\",",
      "      \"location\": \"[variables('location')]\",",
      "      \"properties\": {",
      "        \"accountType\": \"[parameters('storageAccountType')]\"",
      "      }",
      "    },",
      "    {",
      "      \"type\": \"Microsoft.Network/publicIPAddresses\",",
      "      \"apiVersion\": \"[variables('apiVersion')]\",",
      "      \"name\": \"[variables('publicIPAddressName')]\",",
      "      \"location\": \"[variables('location')]\",",
      "      \"properties\": {",
      "        \"publicIPAllocationMethod\": \"[variables('publicIPAddressType')]\",",
      "        \"dnsSettings\": {",
      "          \"domainNameLabel\": \"[variables('dnsLabelPrefix')]\"",
      "        }",
      "      }",
      "    }",
      "  ],",
      "  \"outputs\": {",
      "    \"storageAccountName\": {",
      "      \"type\": \"string\",",
      "      \"value\": \"[variables('storageAccountName')]\"",
      "    }",
      "  }",
      "}",
      "DEPLOY",
      "",
      "  # these key-value pairs are passed into the ARM Template's `parameters` block",
      "  parameters = {",
      "    \"storageAccountType\" = \"Standard_GRS\"",
      "  }",
      "",
      "  deployment_mode = \"Incremental\"",
      "}",
      "",
      "output \"storageAccountName\" {",
      "  value = \"${lookup(azurerm_template_deployment.test.outputs, \"storageAccountName\")}\"",
      "}"
    ]
  },
  "azurerm-resource-traffic_manager_endpoint": {
    "description": "Defines traffic_manager_endpoint",
    "prefix": "tf-azurerm-resource-traffic_manager_endpoint",
    "body": [
      "resource \"random_id\" \"server\" {",
      "  keepers = {",
      "    azi_id = 1",
      "  }",
      "",
      "  byte_length = 8",
      "}",
      "",
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"trafficmanagerendpointTest\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_traffic_manager_profile\" \"test\" {",
      "  name                = \"${random_id.server.hex}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  traffic_routing_method = \"Weighted\"",
      "",
      "  dns_config {",
      "    relative_name = \"${random_id.server.hex}\"",
      "    ttl           = 100",
      "  }",
      "",
      "  monitor_config {",
      "    protocol = \"http\"",
      "    port     = 80",
      "    path     = \"/\"",
      "  }",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_traffic_manager_endpoint\" \"test\" {",
      "  name                = \"${random_id.server.hex}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  profile_name        = \"${azurerm_traffic_manager_profile.test.name}\"",
      "  target              = \"terraform.io\"",
      "  type                = \"externalEndpoints\"",
      "  weight              = 100",
      "}"
    ]
  },
  "azurerm-resource-traffic_manager_profile": {
    "description": "Defines traffic_manager_profile",
    "prefix": "tf-azurerm-resource-traffic_manager_profile",
    "body": [
      "resource \"random_id\" \"server\" {",
      "  keepers = {",
      "    azi_id = 1",
      "  }",
      "",
      "  byte_length = 8",
      "}",
      "",
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"trafficmanagerProfile\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_traffic_manager_profile\" \"test\" {",
      "  name                   = \"${random_id.server.hex}\"",
      "  resource_group_name    = \"${azurerm_resource_group.test.name}\"",
      "  traffic_routing_method = \"Weighted\"",
      "",
      "  dns_config {",
      "    relative_name = \"${random_id.server.hex}\"",
      "    ttl           = 100",
      "  }",
      "",
      "  monitor_config {",
      "    protocol = \"http\"",
      "    port     = 80",
      "    path     = \"/\"",
      "  }",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-user_assigned_identity": {
    "description": "Defines user_assigned_identity",
    "prefix": "tf-azurerm-resource-user_assigned_identity",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"eastus\"",
      "}",
      "",
      "resource \"azurerm_user_assigned_identity\" \"testIdentity\" {",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "",
      "  name = \"search-api\"",
      "}"
    ]
  },
  "azurerm-resource-virtual_machine": {
    "description": "Defines virtual_machine",
    "prefix": "tf-azurerm-resource-virtual_machine",
    "body": [
      "variable \"prefix\" {",
      "  default = \"tfvmex\"",
      "}",
      "",
      "resource \"azurerm_resource_group\" \"main\" {",
      "  name     = \"${var.prefix}-resources\"",
      "  location = \"West US 2\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"main\" {",
      "  name                = \"${var.prefix}-network\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"${azurerm_resource_group.main.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.main.name}\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"internal\" {",
      "  name                 = \"internal\"",
      "  resource_group_name  = \"${azurerm_resource_group.main.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.main.name}\"",
      "  address_prefix       = \"10.0.2.0/24\"",
      "}",
      "",
      "resource \"azurerm_network_interface\" \"main\" {",
      "  name                = \"${var.prefix}-nic\"",
      "  location            = \"${azurerm_resource_group.main.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.main.name}\"",
      "",
      "  ip_configuration {",
      "    name                          = \"testconfiguration1\"",
      "    subnet_id                     = \"${azurerm_subnet.internal.id}\"",
      "    private_ip_address_allocation = \"Dynamic\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_virtual_machine\" \"main\" {",
      "  name                  = \"${var.prefix}-vm\"",
      "  location              = \"${azurerm_resource_group.main.location}\"",
      "  resource_group_name   = \"${azurerm_resource_group.main.name}\"",
      "  network_interface_ids = [\"${azurerm_network_interface.main.id}\"]",
      "  vm_size               = \"Standard_DS1_v2\"",
      "",
      "  # Uncomment this line to delete the OS disk automatically when deleting the VM",
      "  # delete_os_disk_on_termination = true",
      "",
      "",
      "  # Uncomment this line to delete the data disks automatically when deleting the VM",
      "  # delete_data_disks_on_termination = true",
      "",
      "  storage_image_reference {",
      "    publisher = \"Canonical\"",
      "    offer     = \"UbuntuServer\"",
      "    sku       = \"16.04-LTS\"",
      "    version   = \"latest\"",
      "  }",
      "  storage_os_disk {",
      "    name              = \"myosdisk1\"",
      "    caching           = \"ReadWrite\"",
      "    create_option     = \"FromImage\"",
      "    managed_disk_type = \"Standard_LRS\"",
      "  }",
      "  os_profile {",
      "    computer_name  = \"hostname\"",
      "    admin_username = \"testadmin\"",
      "    admin_password = \"Password1234!\"",
      "  }",
      "  os_profile_linux_config {",
      "    disable_password_authentication = false",
      "  }",
      "  tags = {",
      "    environment = \"staging\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-virtual_machine_data_disk_attachment": {
    "description": "Defines virtual_machine_data_disk_attachment",
    "prefix": "tf-azurerm-resource-virtual_machine_data_disk_attachment",
    "body": [
      "variable \"prefix\" {",
      "  default = \"example\"",
      "}",
      "",
      "locals {",
      "  vm_name = \"${var.prefix}-vm\"",
      "}",
      "",
      "resource \"azurerm_resource_group\" \"main\" {",
      "  name     = \"${var.prefix}-resources\"",
      "  location = \"West Europe\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"main\" {",
      "  name                = \"${var.prefix}-network\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"${azurerm_resource_group.main.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.main.name}\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"internal\" {",
      "  name                 = \"internal\"",
      "  resource_group_name  = \"${azurerm_resource_group.main.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.main.name}\"",
      "  address_prefix       = \"10.0.2.0/24\"",
      "}",
      "",
      "resource \"azurerm_network_interface\" \"main\" {",
      "  name                = \"${var.prefix}-nic\"",
      "  location            = \"${azurerm_resource_group.main.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.main.name}\"",
      "",
      "  ip_configuration {",
      "    name                          = \"internal\"",
      "    subnet_id                     = \"${azurerm_subnet.internal.id}\"",
      "    private_ip_address_allocation = \"Dynamic\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_virtual_machine\" \"test\" {",
      "  name                  = \"${local.vm_name}\"",
      "  location              = \"${azurerm_resource_group.main.location}\"",
      "  resource_group_name   = \"${azurerm_resource_group.main.name}\"",
      "  network_interface_ids = [\"${azurerm_network_interface.main.id}\"]",
      "  vm_size               = \"Standard_F2\"",
      "",
      "  storage_image_reference {",
      "    publisher = \"Canonical\"",
      "    offer     = \"UbuntuServer\"",
      "    sku       = \"16.04-LTS\"",
      "    version   = \"latest\"",
      "  }",
      "",
      "  storage_os_disk {",
      "    name              = \"myosdisk1\"",
      "    caching           = \"ReadWrite\"",
      "    create_option     = \"FromImage\"",
      "    managed_disk_type = \"Standard_LRS\"",
      "  }",
      "",
      "  os_profile {",
      "    computer_name  = \"${local.vm_name}\"",
      "    admin_username = \"testadmin\"",
      "    admin_password = \"Password1234!\"",
      "  }",
      "",
      "  os_profile_linux_config {",
      "    disable_password_authentication = false",
      "  }",
      "}",
      "",
      "resource \"azurerm_managed_disk\" \"test\" {",
      "  name                 = \"${local.vm_name}-disk1\"",
      "  location             = \"${azurerm_resource_group.main.location}\"",
      "  resource_group_name  = \"${azurerm_resource_group.main.name}\"",
      "  storage_account_type = \"Standard_LRS\"",
      "  create_option        = \"Empty\"",
      "  disk_size_gb         = 10",
      "}",
      "",
      "resource \"azurerm_virtual_machine_data_disk_attachment\" \"test\" {",
      "  managed_disk_id    = \"${azurerm_managed_disk.test.id}\"",
      "  virtual_machine_id = \"${azurerm_virtual_machine.test.id}\"",
      "  lun                = \"10\"",
      "  caching            = \"ReadWrite\"",
      "}"
    ]
  },
  "azurerm-resource-virtual_machine_extension": {
    "description": "Defines virtual_machine_extension",
    "prefix": "tf-azurerm-resource-virtual_machine_extension",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acctestRG\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"acctvn\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"test\" {",
      "  name                 = \"acctsub\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.2.0/24\"",
      "}",
      "",
      "resource \"azurerm_network_interface\" \"test\" {",
      "  name                = \"acctni\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  ip_configuration {",
      "    name                          = \"testconfiguration1\"",
      "    subnet_id                     = \"${azurerm_subnet.test.id}\"",
      "    private_ip_address_allocation = \"Dynamic\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_storage_account\" \"test\" {",
      "  name                     = \"accsa\"",
      "  resource_group_name      = \"${azurerm_resource_group.test.name}\"",
      "  location                 = \"${azurerm_resource_group.test.location}\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "",
      "  tags = {",
      "    environment = \"staging\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_storage_container\" \"test\" {",
      "  name                  = \"vhds\"",
      "  resource_group_name   = \"${azurerm_resource_group.test.name}\"",
      "  storage_account_name  = \"${azurerm_storage_account.test.name}\"",
      "  container_access_type = \"private\"",
      "}",
      "",
      "resource \"azurerm_virtual_machine\" \"test\" {",
      "  name                  = \"acctvm\"",
      "  location              = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name   = \"${azurerm_resource_group.test.name}\"",
      "  network_interface_ids = [\"${azurerm_network_interface.test.id}\"]",
      "  vm_size               = \"Standard_F2\"",
      "",
      "  storage_image_reference {",
      "    publisher = \"Canonical\"",
      "    offer     = \"UbuntuServer\"",
      "    sku       = \"16.04-LTS\"",
      "    version   = \"latest\"",
      "  }",
      "",
      "  storage_os_disk {",
      "    name          = \"myosdisk1\"",
      "    vhd_uri       = \"${azurerm_storage_account.test.primary_blob_endpoint}${azurerm_storage_container.test.name}/myosdisk1.vhd\"",
      "    caching       = \"ReadWrite\"",
      "    create_option = \"FromImage\"",
      "  }",
      "",
      "  os_profile {",
      "    computer_name  = \"hostname\"",
      "    admin_username = \"testadmin\"",
      "    admin_password = \"Password1234!\"",
      "  }",
      "",
      "  os_profile_linux_config {",
      "    disable_password_authentication = false",
      "  }",
      "",
      "  tags = {",
      "    environment = \"staging\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_virtual_machine_extension\" \"test\" {",
      "  name                 = \"hostname\"",
      "  location             = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_machine_name = \"${azurerm_virtual_machine.test.name}\"",
      "  publisher            = \"Microsoft.Azure.Extensions\"",
      "  type                 = \"CustomScript\"",
      "  type_handler_version = \"2.0\"",
      "",
      "  settings = <<SETTINGS",
      "\t{",
      "\t\t\"commandToExecute\": \"hostname && uptime\"",
      "\t}",
      "SETTINGS",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-virtual_machine_scale_set": {
    "description": "Defines virtual_machine_scale_set",
    "prefix": "tf-azurerm-resource-virtual_machine_scale_set",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acctestRG\"",
      "  location = \"West US 2\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"acctvn\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_subnet\" \"test\" {",
      "  name                 = \"acctsub\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.2.0/24\"",
      "}",
      "",
      "resource \"azurerm_public_ip\" \"test\" {",
      "  name                = \"test\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  allocation_method   = \"Static\"",
      "  domain_name_label   = \"${azurerm_resource_group.test.name}\"",
      "",
      "  tags = {",
      "    environment = \"staging\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_lb\" \"test\" {",
      "  name                = \"test\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  frontend_ip_configuration {",
      "    name                 = \"PublicIPAddress\"",
      "    public_ip_address_id = \"${azurerm_public_ip.test.id}\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_lb_backend_address_pool\" \"bpepool\" {",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  loadbalancer_id     = \"${azurerm_lb.test.id}\"",
      "  name                = \"BackEndAddressPool\"",
      "}",
      "",
      "resource \"azurerm_lb_nat_pool\" \"lbnatpool\" {",
      "  resource_group_name            = \"${azurerm_resource_group.test.name}\"",
      "  name                           = \"ssh\"",
      "  loadbalancer_id                = \"${azurerm_lb.test.id}\"",
      "  protocol                       = \"Tcp\"",
      "  frontend_port_start            = 50000",
      "  frontend_port_end              = 50119",
      "  backend_port                   = 22",
      "  frontend_ip_configuration_name = \"PublicIPAddress\"",
      "}",
      "",
      "resource \"azurerm_lb_probe\" \"test\" {",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  loadbalancer_id     = \"${azurerm_lb.test.id}\"",
      "  name                = \"http-probe\"",
      "  protocol            = \"Http\"",
      "  request_path        = \"/health\"",
      "  port                = 8080",
      "}",
      "",
      "resource \"azurerm_virtual_machine_scale_set\" \"test\" {",
      "  name                = \"mytestscaleset-1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  # automatic rolling upgrade",
      "  automatic_os_upgrade = true",
      "  upgrade_policy_mode  = \"Rolling\"",
      "",
      "  rolling_upgrade_policy {",
      "    max_batch_instance_percent              = 20",
      "    max_unhealthy_instance_percent          = 20",
      "    max_unhealthy_upgraded_instance_percent = 5",
      "    pause_time_between_batches              = \"PT0S\"",
      "  }",
      "",
      "  # required when using rolling upgrade policy",
      "  health_probe_id = \"${azurerm_lb_probe.test.id}\"",
      "",
      "  sku {",
      "    name     = \"Standard_F2\"",
      "    tier     = \"Standard\"",
      "    capacity = 2",
      "  }",
      "",
      "  storage_profile_image_reference {",
      "    publisher = \"Canonical\"",
      "    offer     = \"UbuntuServer\"",
      "    sku       = \"16.04-LTS\"",
      "    version   = \"latest\"",
      "  }",
      "",
      "  storage_profile_os_disk {",
      "    name              = \"\"",
      "    caching           = \"ReadWrite\"",
      "    create_option     = \"FromImage\"",
      "    managed_disk_type = \"Standard_LRS\"",
      "  }",
      "",
      "  storage_profile_data_disk {",
      "    lun           = 0",
      "    caching       = \"ReadWrite\"",
      "    create_option = \"Empty\"",
      "    disk_size_gb  = 10",
      "  }",
      "",
      "  os_profile {",
      "    computer_name_prefix = \"testvm\"",
      "    admin_username       = \"myadmin\"",
      "  }",
      "",
      "  os_profile_linux_config {",
      "    disable_password_authentication = true",
      "",
      "    ssh_keys {",
      "      path     = \"/home/myadmin/.ssh/authorized_keys\"",
      "      key_data = \"${file(\"~/.ssh/demo_key.pub\")}\"",
      "    }",
      "  }",
      "",
      "  network_profile {",
      "    name    = \"terraformnetworkprofile\"",
      "    primary = true",
      "",
      "    ip_configuration {",
      "      name                                   = \"TestIPConfiguration\"",
      "      primary                                = true",
      "      subnet_id                              = \"${azurerm_subnet.test.id}\"",
      "      load_balancer_backend_address_pool_ids = [\"${azurerm_lb_backend_address_pool.bpepool.id}\"]",
      "      load_balancer_inbound_nat_rules_ids    = [\"${element(azurerm_lb_nat_pool.lbnatpool.*.id, count.index)}\"]",
      "    }",
      "  }",
      "",
      "  tags = {",
      "    environment = \"staging\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-virtual_network": {
    "description": "Defines virtual_network",
    "prefix": "tf-azurerm-resource-virtual_network",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_network_security_group\" \"test\" {",
      "  name                = \"acceptanceTestSecurityGroup1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_ddos_protection_plan\" \"test\" {",
      "  name                = \"ddospplan1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"virtualNetwork1\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  dns_servers         = [\"10.0.0.4\", \"10.0.0.5\"]",
      "",
      "  ddos_protection_plan {",
      "    id     = \"${azurerm_ddos_protection_plan.test.id}\"",
      "    enable = true",
      "  }",
      "",
      "  subnet {",
      "    name           = \"subnet1\"",
      "    address_prefix = \"10.0.1.0/24\"",
      "  }",
      "",
      "  subnet {",
      "    name           = \"subnet2\"",
      "    address_prefix = \"10.0.2.0/24\"",
      "  }",
      "",
      "  subnet {",
      "    name           = \"subnet3\"",
      "    address_prefix = \"10.0.3.0/24\"",
      "    security_group = \"${azurerm_network_security_group.test.id}\"",
      "  }",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-virtual_network_gateway": {
    "description": "Defines virtual_network_gateway",
    "prefix": "tf-azurerm-resource-virtual_network_gateway",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"test\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"test\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "}",
      "",
      "resource \"azurerm_subnet\" \"test\" {",
      "  name                 = \"GatewaySubnet\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.1.0/24\"",
      "}",
      "",
      "resource \"azurerm_public_ip\" \"test\" {",
      "  name                = \"test\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  allocation_method = \"Dynamic\"",
      "}",
      "",
      "resource \"azurerm_virtual_network_gateway\" \"test\" {",
      "  name                = \"test\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  type     = \"Vpn\"",
      "  vpn_type = \"RouteBased\"",
      "",
      "  active_active = false",
      "  enable_bgp    = false",
      "  sku           = \"Basic\"",
      "",
      "  ip_configuration {",
      "    name                          = \"vnetGatewayConfig\"",
      "    public_ip_address_id          = \"${azurerm_public_ip.test.id}\"",
      "    private_ip_address_allocation = \"Dynamic\"",
      "    subnet_id                     = \"${azurerm_subnet.test.id}\"",
      "  }",
      "",
      "  vpn_client_configuration {",
      "    address_space = [\"10.2.0.0/24\"]",
      "",
      "    root_certificate {",
      "      name = \"DigiCert-Federated-ID-Root-CA\"",
      "",
      "      public_cert_data = <<EOF",
      "MIIDuzCCAqOgAwIBAgIQCHTZWCM+IlfFIRXIvyKSrjANBgkqhkiG9w0BAQsFADBn",
      "MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3",
      "d3cuZGlnaWNlcnQuY29tMSYwJAYDVQQDEx1EaWdpQ2VydCBGZWRlcmF0ZWQgSUQg",
      "Um9vdCBDQTAeFw0xMzAxMTUxMjAwMDBaFw0zMzAxMTUxMjAwMDBaMGcxCzAJBgNV",
      "BAYTAlVTMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdp",
      "Y2VydC5jb20xJjAkBgNVBAMTHURpZ2lDZXJ0IEZlZGVyYXRlZCBJRCBSb290IENB",
      "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvAEB4pcCqnNNOWE6Ur5j",
      "QPUH+1y1F9KdHTRSza6k5iDlXq1kGS1qAkuKtw9JsiNRrjltmFnzMZRBbX8Tlfl8",
      "zAhBmb6dDduDGED01kBsTkgywYPxXVTKec0WxYEEF0oMn4wSYNl0lt2eJAKHXjNf",
      "GTwiibdP8CUR2ghSM2sUTI8Nt1Omfc4SMHhGhYD64uJMbX98THQ/4LMGuYegou+d",
      "GTiahfHtjn7AboSEknwAMJHCh5RlYZZ6B1O4QbKJ+34Q0eKgnI3X6Vc9u0zf6DH8",
      "Dk+4zQDYRRTqTnVO3VT8jzqDlCRuNtq6YvryOWN74/dq8LQhUnXHvFyrsdMaE1X2",
      "DwIDAQABo2MwYTAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBhjAdBgNV",
      "HQ4EFgQUGRdkFnbGt1EWjKwbUne+5OaZvRYwHwYDVR0jBBgwFoAUGRdkFnbGt1EW",
      "jKwbUne+5OaZvRYwDQYJKoZIhvcNAQELBQADggEBAHcqsHkrjpESqfuVTRiptJfP",
      "9JbdtWqRTmOf6uJi2c8YVqI6XlKXsD8C1dUUaaHKLUJzvKiazibVuBwMIT84AyqR",
      "QELn3e0BtgEymEygMU569b01ZPxoFSnNXc7qDZBDef8WfqAV/sxkTi8L9BkmFYfL",
      "uGLOhRJOFprPdoDIUBB+tmCl3oDcBy3vnUeOEioz8zAkprcb3GHwHAK+vHmmfgcn",
      "WsfMLH4JCLa/tRYL+Rw/N3ybCkDp00s0WUZ+AoDywSl0Q/ZEnNY0MsFiw6LyIdbq",
      "M/s/1JRtO3bDSzD9TazRVzn2oBqzSa8VgIo5C1nOnoAKJTlsClJKvIhnRlaLQqk=",
      "EOF",
      "    }",
      "",
      "    revoked_certificate {",
      "      name       = \"Verizon-Global-Root-CA\"",
      "      thumbprint = \"912198EEF23DCAC40939312FEE97DD560BAE49B1\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "azurerm-resource-virtual_network_gateway_connection": {
    "description": "Defines virtual_network_gateway_connection",
    "prefix": "tf-azurerm-resource-virtual_network_gateway_connection",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"test\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test\" {",
      "  name                = \"test\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "}",
      "",
      "resource \"azurerm_subnet\" \"test\" {",
      "  name                 = \"GatewaySubnet\"",
      "  resource_group_name  = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurerm_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.1.0/24\"",
      "}",
      "",
      "resource \"azurerm_local_network_gateway\" \"onpremise\" {",
      "  name                = \"onpremise\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  gateway_address     = \"168.62.225.23\"",
      "  address_space       = [\"10.1.1.0/24\"]",
      "}",
      "",
      "resource \"azurerm_public_ip\" \"test\" {",
      "  name                = \"test\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  allocation_method   = \"Dynamic\"",
      "}",
      "",
      "resource \"azurerm_virtual_network_gateway\" \"test\" {",
      "  name                = \"test\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  type     = \"Vpn\"",
      "  vpn_type = \"RouteBased\"",
      "",
      "  active_active = false",
      "  enable_bgp    = false",
      "  sku           = \"Basic\"",
      "",
      "  ip_configuration {",
      "    public_ip_address_id          = \"${azurerm_public_ip.test.id}\"",
      "    private_ip_address_allocation = \"Dynamic\"",
      "    subnet_id                     = \"${azurerm_subnet.test.id}\"",
      "  }",
      "}",
      "",
      "resource \"azurerm_virtual_network_gateway_connection\" \"onpremise\" {",
      "  name                = \"onpremise\"",
      "  location            = \"${azurerm_resource_group.test.location}\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "",
      "  type                       = \"IPsec\"",
      "  virtual_network_gateway_id = \"${azurerm_virtual_network_gateway.test.id}\"",
      "  local_network_gateway_id   = \"${azurerm_local_network_gateway.onpremise.id}\"",
      "",
      "  shared_key = \"4-v3ry-53cr37-1p53c-5h4r3d-k3y\"",
      "}"
    ]
  },
  "azurerm-resource-virtual_network_peering": {
    "description": "Defines virtual_network_peering",
    "prefix": "tf-azurerm-resource-virtual_network_peering",
    "body": [
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"peeredvnets-rg\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test1\" {",
      "  name                = \"peternetwork1\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  address_space       = [\"10.0.1.0/24\"]",
      "  location            = \"West US\"",
      "}",
      "",
      "resource \"azurerm_virtual_network\" \"test2\" {",
      "  name                = \"peternetwork2\"",
      "  resource_group_name = \"${azurerm_resource_group.test.name}\"",
      "  address_space       = [\"10.0.2.0/24\"]",
      "  location            = \"West US\"",
      "}",
      "",
      "resource \"azurerm_virtual_network_peering\" \"test1\" {",
      "  name                      = \"peer1to2\"",
      "  resource_group_name       = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name      = \"${azurerm_virtual_network.test1.name}\"",
      "  remote_virtual_network_id = \"${azurerm_virtual_network.test2.id}\"",
      "}",
      "",
      "resource \"azurerm_virtual_network_peering\" \"test2\" {",
      "  name                      = \"peer2to1\"",
      "  resource_group_name       = \"${azurerm_resource_group.test.name}\"",
      "  virtual_network_name      = \"${azurerm_virtual_network.test2.name}\"",
      "  remote_virtual_network_id = \"${azurerm_virtual_network.test1.id}\"",
      "}"
    ]
  },
  "azurestack-data-client_config": {
    "description": "Defines client_config",
    "prefix": "tf-azurestack-data-client_config",
    "body": [
      "data \"azurestack_client_config\" \"current\" {}",
      "",
      "output \"account_id\" {",
      "  value = \"${data.azurestack_client_config.current.service_principal_application_id}\"",
      "}"
    ]
  },
  "azurestack-data-network_interface": {
    "description": "Defines network_interface",
    "prefix": "tf-azurestack-data-network_interface",
    "body": [
      "data \"azurestack_network_interface\" \"test\" {",
      "  name                = \"acctest-nic\"",
      "  resource_group_name = \"networking\"",
      "}",
      "",
      "output \"network_interface_id\" {",
      "  value = \"${data.azurestack_network_interface.test.id}\"",
      "}"
    ]
  },
  "azurestack-data-network_security_group": {
    "description": "Defines network_security_group",
    "prefix": "tf-azurestack-data-network_security_group",
    "body": [
      "data \"azurestack_network_security_group\" \"test\" {",
      "  name                = \"${azurestack_network_security_group.test.name}\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "}",
      "",
      "output \"location\" {",
      "  value = \"${data.azurestack_network_security_group.test.location}\"",
      "}"
    ]
  },
  "azurestack-data-platform_image": {
    "description": "Defines platform_image",
    "prefix": "tf-azurestack-data-platform_image",
    "body": [
      "data \"azurestack_platform_image\" \"test\" {",
      "  location  = \"West Europe\"",
      "  publisher = \"Canonical\"",
      "  offer     = \"UbuntuServer\"",
      "  sku       = \"16.04-LTS\"",
      "}",
      "",
      "output \"version\" {",
      "  value = \"${data.azurestack_platform_image.test.version}\"",
      "}"
    ]
  },
  "azurestack-data-public_ip": {
    "description": "Defines public_ip",
    "prefix": "tf-azurestack-data-public_ip",
    "body": [
      "data \"azurestack_public_ip\" \"test\" {",
      "  name                = \"name_of_public_ip\"",
      "  resource_group_name = \"name_of_resource_group\"",
      "}",
      "",
      "output \"domain_name_label\" {",
      "  value = \"${data.azurestack_public_ip.test.domain_name_label}\"",
      "}",
      "",
      "output \"public_ip_address\" {",
      "  value = \"${data.azurestack_public_ip.test.ip_address}\"",
      "}"
    ]
  },
  "azurestack-data-resource_group": {
    "description": "Defines resource_group",
    "prefix": "tf-azurestack-data-resource_group",
    "body": [
      "data \"azurestack_resource_group\" \"test\" {",
      "  name = \"dsrg_test\"",
      "}",
      "",
      "resource \"azurestack_managed_disk\" \"test\" {",
      "  name                 = \"managed_disk_name\"",
      "  location             = \"${data.azurestack_resource_group.test.location}\"",
      "  resource_group_name  = \"${data.azurestack_resource_group.test.name}\"",
      "  storage_account_type = \"Standard_LRS\"",
      "  create_option        = \"Empty\"",
      "  disk_size_gb         = \"1\"",
      "}"
    ]
  },
  "azurestack-data-route_table": {
    "description": "Defines route_table",
    "prefix": "tf-azurestack-data-route_table",
    "body": [
      "data \"azurestack_route_table\" \"test\" {",
      "  name                = \"myroutetable\"",
      "  resource_group_name = \"some-resource-group\"",
      "}"
    ]
  },
  "azurestack-data-storage_account": {
    "description": "Defines storage_account",
    "prefix": "tf-azurestack-data-storage_account",
    "body": [
      "data \"azurestack_storage_account\" \"test\" {",
      "  name                = \"packerimages\"",
      "  resource_group_name = \"packer-storage\"",
      "}",
      "",
      "output \"storage_account_tier\" {",
      "  value = \"${data.azurestack_storage_account.test.account_tier}\"",
      "}"
    ]
  },
  "azurestack-data-subnet": {
    "description": "Defines subnet",
    "prefix": "tf-azurestack-data-subnet",
    "body": [
      "data \"azurestack_subnet\" \"test\" {",
      "  name                 = \"backend\"",
      "  virtual_network_name = \"production\"",
      "  resource_group_name  = \"networking\"",
      "}",
      "",
      "output \"subnet_id\" {",
      "  value = \"${data.azurestack_subnet.test.id}\"",
      "}"
    ]
  },
  "azurestack-data-virtual_network": {
    "description": "Defines virtual_network",
    "prefix": "tf-azurestack-data-virtual_network",
    "body": [
      "data \"azurestack_virtual_network\" \"test\" {",
      "  name                = \"production\"",
      "  resource_group_name = \"networking\"",
      "}",
      "",
      "output \"virtual_network_id\" {",
      "  value = \"${data.azurestack_virtual_network.test.id}\"",
      "}"
    ]
  },
  "azurestack-data-virtual_network_gateway": {
    "description": "Defines virtual_network_gateway",
    "prefix": "tf-azurestack-data-virtual_network_gateway",
    "body": [
      "data \"azurestack_virtual_network_gateway\" \"test\" {",
      "  name                = \"production\"",
      "  resource_group_name = \"networking\"",
      "}",
      "",
      "output \"virtual_network_gateway_id\" {",
      "  value = \"${data.azurestack_virtual_network_gateway.test.id}\"",
      "}"
    ]
  },
  "azurestack-resource-availability_set": {
    "description": "Defines availability_set",
    "prefix": "tf-azurestack-resource-availability_set",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurestack_availability_set\" \"test\" {",
      "  name                = \"acceptanceTestAvailabilitySet1\"",
      "  location            = \"${azurestack_resource_group.test.location}\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurestack-resource-dns_a_record": {
    "description": "Defines dns_a_record",
    "prefix": "tf-azurestack-resource-dns_a_record",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurestack_dns_zone\" \"test\" {",
      "  name                = \"mydomain.com\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurestack_dns_a_record\" \"test\" {",
      "  name                = \"test\"",
      "  zone_name           = \"${azurestack_dns_zone.test.name}\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "  ttl                 = 300",
      "  records             = [\"10.0.180.17\"]",
      "}"
    ]
  },
  "azurestack-resource-dns_zone": {
    "description": "Defines dns_zone",
    "prefix": "tf-azurestack-resource-dns_zone",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurestack_dns_zone\" \"test\" {",
      "  name                = \"mydomain.com\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "}"
    ]
  },
  "azurestack-resource-loadbalancer": {
    "description": "Defines loadbalancer",
    "prefix": "tf-azurestack-resource-loadbalancer",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"LoadBalancerRG\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurestack_public_ip\" \"test\" {",
      "  name                         = \"PublicIPForLB\"",
      "  location                     = \"West US\"",
      "  resource_group_name          = \"${azurestack_resource_group.test.name}\"",
      "  public_ip_address_allocation = \"static\"",
      "}",
      "",
      "resource \"azurestack_lb\" \"test\" {",
      "  name                = \"TestLoadBalancer\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "",
      "  frontend_ip_configuration {",
      "    name                 = \"PublicIPAddress\"",
      "    public_ip_address_id = \"${azurestack_public_ip.test.id}\"",
      "  }",
      "}"
    ]
  },
  "azurestack-resource-loadbalancer_backend_address_pool": {
    "description": "Defines loadbalancer_backend_address_pool",
    "prefix": "tf-azurestack-resource-loadbalancer_backend_address_pool",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"LoadBalancerRG\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurestack_public_ip\" \"test\" {",
      "  name                         = \"PublicIPForLB\"",
      "  location                     = \"West US\"",
      "  resource_group_name          = \"${azurestack_resource_group.test.name}\"",
      "  public_ip_address_allocation = \"static\"",
      "}",
      "",
      "resource \"azurestack_lb\" \"test\" {",
      "  name                = \"TestLoadBalancer\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "",
      "  frontend_ip_configuration {",
      "    name                 = \"PublicIPAddress\"",
      "    public_ip_address_id = \"${azurestack_public_ip.test.id}\"",
      "  }",
      "}",
      "",
      "resource \"azurestack_lb_backend_address_pool\" \"test\" {",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "  loadbalancer_id     = \"${azurestack_lb.test.id}\"",
      "  name                = \"BackEndAddressPool\"",
      "}"
    ]
  },
  "azurestack-resource-loadbalancer_nat_pool": {
    "description": "Defines loadbalancer_nat_pool",
    "prefix": "tf-azurestack-resource-loadbalancer_nat_pool",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"LoadBalancerRG\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurestack_public_ip\" \"test\" {",
      "  name                         = \"PublicIPForLB\"",
      "  location                     = \"West US\"",
      "  resource_group_name          = \"${azurestack_resource_group.test.name}\"",
      "  public_ip_address_allocation = \"static\"",
      "}",
      "",
      "resource \"azurestack_lb\" \"test\" {",
      "  name                = \"TestLoadBalancer\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "",
      "  frontend_ip_configuration {",
      "    name                 = \"PublicIPAddress\"",
      "    public_ip_address_id = \"${azurestack_public_ip.test.id}\"",
      "  }",
      "}",
      "",
      "resource \"azurestack_lb_nat_pool\" \"test\" {",
      "  resource_group_name            = \"${azurestack_resource_group.test.name}\"",
      "  loadbalancer_id                = \"${azurestack_lb.test.id}\"",
      "  name                           = \"SampleApplicationPool\"",
      "  protocol                       = \"Tcp\"",
      "  frontend_port_start            = 80",
      "  frontend_port_end              = 81",
      "  backend_port                   = 8080",
      "  frontend_ip_configuration_name = \"PublicIPAddress\"",
      "}"
    ]
  },
  "azurestack-resource-loadbalancer_nat_rule": {
    "description": "Defines loadbalancer_nat_rule",
    "prefix": "tf-azurestack-resource-loadbalancer_nat_rule",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"LoadBalancerRG\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurestack_public_ip\" \"test\" {",
      "  name                         = \"PublicIPForLB\"",
      "  location                     = \"West US\"",
      "  resource_group_name          = \"${azurestack_resource_group.test.name}\"",
      "  public_ip_address_allocation = \"static\"",
      "}",
      "",
      "resource \"azurestack_lb\" \"test\" {",
      "  name                = \"TestLoadBalancer\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "",
      "  frontend_ip_configuration {",
      "    name                 = \"PublicIPAddress\"",
      "    public_ip_address_id = \"${azurestack_public_ip.test.id}\"",
      "  }",
      "}",
      "",
      "resource \"azurestack_lb_nat_rule\" \"test\" {",
      "  resource_group_name            = \"${azurestack_resource_group.test.name}\"",
      "  loadbalancer_id                = \"${azurestack_lb.test.id}\"",
      "  name                           = \"RDPAccess\"",
      "  protocol                       = \"Tcp\"",
      "  frontend_port                  = 3389",
      "  backend_port                   = 3389",
      "  frontend_ip_configuration_name = \"PublicIPAddress\"",
      "}"
    ]
  },
  "azurestack-resource-loadbalancer_probe": {
    "description": "Defines loadbalancer_probe",
    "prefix": "tf-azurestack-resource-loadbalancer_probe",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"LoadBalancerRG\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurestack_public_ip\" \"test\" {",
      "  name                         = \"PublicIPForLB\"",
      "  location                     = \"West US\"",
      "  resource_group_name          = \"${azurestack_resource_group.test.name}\"",
      "  public_ip_address_allocation = \"static\"",
      "}",
      "",
      "resource \"azurestack_lb\" \"test\" {",
      "  name                = \"TestLoadBalancer\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "",
      "  frontend_ip_configuration {",
      "    name                 = \"PublicIPAddress\"",
      "    public_ip_address_id = \"${azurestack_public_ip.test.id}\"",
      "  }",
      "}",
      "",
      "resource \"azurestack_lb_probe\" \"test\" {",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "  loadbalancer_id     = \"${azurestack_lb.test.id}\"",
      "  name                = \"ssh-running-probe\"",
      "  port                = 22",
      "}"
    ]
  },
  "azurestack-resource-loadbalancer_rule": {
    "description": "Defines loadbalancer_rule",
    "prefix": "tf-azurestack-resource-loadbalancer_rule",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"LoadBalancerRG\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurestack_public_ip\" \"test\" {",
      "  name                         = \"PublicIPForLB\"",
      "  location                     = \"West US\"",
      "  resource_group_name          = \"${azurestack_resource_group.test.name}\"",
      "  public_ip_address_allocation = \"static\"",
      "}",
      "",
      "resource \"azurestack_lb\" \"test\" {",
      "  name                = \"TestLoadBalancer\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "",
      "  frontend_ip_configuration {",
      "    name                 = \"PublicIPAddress\"",
      "    public_ip_address_id = \"${azurestack_public_ip.test.id}\"",
      "  }",
      "}",
      "",
      "resource \"azurestack_lb_rule\" \"test\" {",
      "  resource_group_name            = \"${azurestack_resource_group.test.name}\"",
      "  loadbalancer_id                = \"${azurestack_lb.test.id}\"",
      "  name                           = \"LBRule\"",
      "  protocol                       = \"Tcp\"",
      "  frontend_port                  = 3389",
      "  backend_port                   = 3389",
      "  frontend_ip_configuration_name = \"PublicIPAddress\"",
      "}"
    ]
  },
  "azurestack-resource-local_network_gateway": {
    "description": "Defines local_network_gateway",
    "prefix": "tf-azurestack-resource-local_network_gateway",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"localNetworkGWTest\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurestack_local_network_gateway\" \"home\" {",
      "  name                = \"backHome\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "  location            = \"${azurestack_resource_group.test.location}\"",
      "  gateway_address     = \"12.13.14.15\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "}"
    ]
  },
  "azurestack-resource-managed_disk": {
    "description": "Defines managed_disk",
    "prefix": "tf-azurestack-resource-managed_disk",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"acctestRG\"",
      "  location = \"West US 2\"",
      "}",
      "",
      "resource \"azurestack_managed_disk\" \"test\" {",
      "  name                 = \"acctestmd\"",
      "  location             = \"West US 2\"",
      "  resource_group_name  = \"${azurestack_resource_group.test.name}\"",
      "  storage_account_type = \"Standard_LRS\"",
      "  create_option        = \"Empty\"",
      "  disk_size_gb         = \"1\"",
      "",
      "  tags = {",
      "    environment = \"staging\"",
      "  }",
      "}"
    ]
  },
  "azurestack-resource-network_interface": {
    "description": "Defines network_interface",
    "prefix": "tf-azurestack-resource-network_interface",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurestack_virtual_network\" \"test\" {",
      "  name                = \"acceptanceTestVirtualNetwork1\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"${azurestack_resource_group.test.location}\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurestack_subnet\" \"test\" {",
      "  name                 = \"testsubnet\"",
      "  resource_group_name  = \"${azurestack_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurestack_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.2.0/24\"",
      "}",
      "",
      "resource \"azurestack_network_interface\" \"test\" {",
      "  name                = \"acceptanceTestNetworkInterface1\"",
      "  location            = \"${azurestack_resource_group.test.location}\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "",
      "  ip_configuration {",
      "    name                          = \"testconfiguration1\"",
      "    subnet_id                     = \"${azurestack_subnet.test.id}\"",
      "    private_ip_address_allocation = \"dynamic\"",
      "  }",
      "",
      "  tags = {",
      "    environment = \"staging\"",
      "  }",
      "}"
    ]
  },
  "azurestack-resource-network_security_group": {
    "description": "Defines network_security_group",
    "prefix": "tf-azurestack-resource-network_security_group",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurestack_network_security_group\" \"test\" {",
      "  name                = \"acceptanceTestSecurityGroup1\"",
      "  location            = \"${azurestack_resource_group.test.location}\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "",
      "  security_rule {",
      "    name                       = \"test123\"",
      "    priority                   = 100",
      "    direction                  = \"Inbound\"",
      "    access                     = \"Allow\"",
      "    protocol                   = \"Tcp\"",
      "    source_port_range          = \"*\"",
      "    destination_port_range     = \"*\"",
      "    source_address_prefix      = \"*\"",
      "    destination_address_prefix = \"*\"",
      "  }",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurestack-resource-network_security_rule": {
    "description": "Defines network_security_rule",
    "prefix": "tf-azurestack-resource-network_security_rule",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurestack_network_security_group\" \"test\" {",
      "  name                = \"acceptanceTestSecurityGroup1\"",
      "  location            = \"${azurestack_resource_group.test.location}\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurestack_network_security_rule\" \"test\" {",
      "  name                        = \"test123\"",
      "  priority                    = 100",
      "  direction                   = \"Outbound\"",
      "  access                      = \"Allow\"",
      "  protocol                    = \"Tcp\"",
      "  source_port_range           = \"*\"",
      "  destination_port_range      = \"*\"",
      "  source_address_prefix       = \"*\"",
      "  destination_address_prefix  = \"*\"",
      "  resource_group_name         = \"${azurestack_resource_group.test.name}\"",
      "  network_security_group_name = \"${azurestack_network_security_group.test.name}\"",
      "}"
    ]
  },
  "azurestack-resource-public_ip": {
    "description": "Defines public_ip",
    "prefix": "tf-azurestack-resource-public_ip",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"resourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurestack_public_ip\" \"test\" {",
      "  name                         = \"acceptanceTestPublicIp1\"",
      "  location                     = \"West US\"",
      "  resource_group_name          = \"${azurestack_resource_group.test.name}\"",
      "  public_ip_address_allocation = \"static\"",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurestack-resource-resource_group": {
    "description": "Defines resource_group",
    "prefix": "tf-azurestack-resource-resource_group",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"testResourceGroup1\"",
      "  location = \"West US\"",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurestack-resource-route": {
    "description": "Defines route",
    "prefix": "tf-azurestack-resource-route",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurestack_route_table\" \"test\" {",
      "  name                = \"acceptanceTestRouteTable1\"",
      "  location            = \"${azurestack_resource_group.test.location}\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurestack_route\" \"test\" {",
      "  name                = \"acceptanceTestRoute1\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "  route_table_name    = \"${azurestack_route_table.test.name}\"",
      "  address_prefix      = \"10.1.0.0/16\"",
      "  next_hop_type       = \"vnetlocal\"",
      "}"
    ]
  },
  "azurestack-resource-route_table": {
    "description": "Defines route_table",
    "prefix": "tf-azurestack-resource-route_table",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurestack_route_table\" \"test\" {",
      "  name                = \"acceptanceTestSecurityGroup1\"",
      "  location            = \"${azurestack_resource_group.test.location}\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "",
      "  disable_bgp_route_propagation = false",
      "",
      "  route {",
      "    name           = \"route1\"",
      "    address_prefix = \"10.1.0.0/16\"",
      "    next_hop_type  = \"vnetlocal\"",
      "  }",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurestack-resource-storage_account": {
    "description": "Defines storage_account",
    "prefix": "tf-azurestack-resource-storage_account",
    "body": [
      "resource \"azurestack_resource_group\" \"testrg\" {",
      "  name     = \"resourceGroupName\"",
      "  location = \"westus\"",
      "}",
      "",
      "resource \"azurestack_storage_account\" \"testsa\" {",
      "  name                     = \"storageaccountname\"",
      "  resource_group_name      = \"${azurestack_resource_group.testrg.name}\"",
      "  location                 = \"westus\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "",
      "  tags = {",
      "    environment = \"staging\"",
      "  }",
      "}"
    ]
  },
  "azurestack-resource-storage_blob": {
    "description": "Defines storage_blob",
    "prefix": "tf-azurestack-resource-storage_blob",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"acctestrg-d\"",
      "  location = \"westus\"",
      "}",
      "",
      "resource \"azurestack_storage_account\" \"test\" {",
      "  name                     = \"acctestaccs\"",
      "  resource_group_name      = \"${azurestack_resource_group.test.name}\"",
      "  location                 = \"westus\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "}",
      "",
      "resource \"azurestack_storage_container\" \"test\" {",
      "  name                  = \"vhds\"",
      "  resource_group_name   = \"${azurestack_resource_group.test.name}\"",
      "  storage_account_name  = \"${azurestack_storage_account.test.name}\"",
      "  container_access_type = \"private\"",
      "}",
      "",
      "resource \"azurestack_storage_blob\" \"testsb\" {",
      "  name = \"sample.vhd\"",
      "",
      "  resource_group_name    = \"${azurestack_resource_group.test.name}\"",
      "  storage_account_name   = \"${azurestack_storage_account.test.name}\"",
      "  storage_container_name = \"${azurestack_storage_container.test.name}\"",
      "",
      "  type = \"page\"",
      "  size = 5120",
      "}"
    ]
  },
  "azurestack-resource-storage_container": {
    "description": "Defines storage_container",
    "prefix": "tf-azurestack-resource-storage_container",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"acctestrg\"",
      "  location = \"westus\"",
      "}",
      "",
      "resource \"azurestack_storage_account\" \"test\" {",
      "  name                     = \"accteststorageaccount\"",
      "  resource_group_name      = \"${azurestack_resource_group.test.name}\"",
      "  location                 = \"westus\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "",
      "  tags = {",
      "    environment = \"staging\"",
      "  }",
      "}",
      "",
      "resource \"azurestack_storage_container\" \"test\" {",
      "  name                  = \"vhds\"",
      "  resource_group_name   = \"${azurestack_resource_group.test.name}\"",
      "  storage_account_name  = \"${azurestack_storage_account.test.name}\"",
      "  container_access_type = \"private\"",
      "}"
    ]
  },
  "azurestack-resource-subnet": {
    "description": "Defines subnet",
    "prefix": "tf-azurestack-resource-subnet",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurestack_virtual_network\" \"test\" {",
      "  name                = \"acceptanceTestVirtualNetwork1\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"${azurestack_resource_group.test.location}\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurestack_subnet\" \"test\" {",
      "  name                 = \"testsubnet\"",
      "  resource_group_name  = \"${azurestack_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurestack_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.1.0/24\"",
      "}"
    ]
  },
  "azurestack-resource-template_deployment": {
    "description": "Defines template_deployment",
    "prefix": "tf-azurestack-resource-template_deployment",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"acctestRG-01\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurestack_template_deployment\" \"test\" {",
      "  name                = \"acctesttemplate-01\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "",
      "  template_body = <<DEPLOY",
      "{",
      "  \"$schema\": \"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#\",",
      "  \"contentVersion\": \"1.0.0.0\",",
      "  \"parameters\": {",
      "    \"storageAccountType\": {",
      "      \"type\": \"string\",",
      "      \"defaultValue\": \"Standard_LRS\",",
      "      \"allowedValues\": [",
      "        \"Standard_LRS\",",
      "        \"Standard_GRS\",",
      "        \"Standard_ZRS\"",
      "      ],",
      "      \"metadata\": {",
      "        \"description\": \"Storage Account type\"",
      "      }",
      "    }",
      "  },",
      "  \"variables\": {",
      "    \"location\": \"[resourceGroup().location]\",",
      "    \"storageAccountName\": \"[concat(uniquestring(resourceGroup().id), 'storage')]\",",
      "    \"publicIPAddressName\": \"[concat('myPublicIp', uniquestring(resourceGroup().id))]\",",
      "    \"publicIPAddressType\": \"Dynamic\",",
      "    \"apiVersion\": \"2015-06-15\",",
      "    \"dnsLabelPrefix\": \"terraform-acctest\"",
      "  },",
      "  \"resources\": [",
      "    {",
      "      \"type\": \"Microsoft.Storage/storageAccounts\",",
      "      \"name\": \"[variables('storageAccountName')]\",",
      "      \"apiVersion\": \"[variables('apiVersion')]\",",
      "      \"location\": \"[variables('location')]\",",
      "      \"properties\": {",
      "        \"accountType\": \"[parameters('storageAccountType')]\"",
      "      }",
      "    },",
      "    {",
      "      \"type\": \"Microsoft.Network/publicIPAddresses\",",
      "      \"apiVersion\": \"[variables('apiVersion')]\",",
      "      \"name\": \"[variables('publicIPAddressName')]\",",
      "      \"location\": \"[variables('location')]\",",
      "      \"properties\": {",
      "        \"publicIPAllocationMethod\": \"[variables('publicIPAddressType')]\",",
      "        \"dnsSettings\": {",
      "          \"domainNameLabel\": \"[variables('dnsLabelPrefix')]\"",
      "        }",
      "      }",
      "    }",
      "  ],",
      "  \"outputs\": {",
      "    \"storageAccountName\": {",
      "      \"type\": \"string\",",
      "      \"value\": \"[variables('storageAccountName')]\"",
      "    }",
      "  }",
      "}",
      "DEPLOY",
      "",
      "  # these key-value pairs are passed into the ARM Template's `parameters` block",
      "  parameters = {",
      "    \"storageAccountType\" = \"Standard_GRS\"",
      "  }",
      "",
      "  deployment_mode = \"Incremental\"",
      "}",
      "",
      "output \"storageAccountName\" {",
      "  value = \"${azurestack_template_deployment.test.outputs[\"storageAccountName\"]}\"",
      "}"
    ]
  },
  "azurestack-resource-virtual_machine": {
    "description": "Defines virtual_machine",
    "prefix": "tf-azurestack-resource-virtual_machine",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name = \"acctestrg\"",
      "",
      "  # This is Azure Stack Region so it will be different per Azure Stack and should not be in the format of \"West US\" etc... those are not the same values",
      "  location = \"region1\"",
      "}",
      "",
      "resource \"azurestack_virtual_network\" \"test\" {",
      "  name                = \"acctvn\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"${azurestack_resource_group.test.location}\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurestack_subnet\" \"test\" {",
      "  name                 = \"acctsub\"",
      "  resource_group_name  = \"${azurestack_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurestack_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.2.0/24\"",
      "}",
      "",
      "resource \"azurestack_network_interface\" \"test\" {",
      "  name                = \"acctni\"",
      "  location            = \"${azurestack_resource_group.test.location}\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "",
      "  ip_configuration {",
      "    name                          = \"testconfiguration1\"",
      "    subnet_id                     = \"${azurestack_subnet.test.id}\"",
      "    private_ip_address_allocation = \"dynamic\"",
      "  }",
      "}",
      "",
      "resource \"azurestack_virtual_machine\" \"test\" {",
      "  name                  = \"acctvm\"",
      "  location              = \"${azurestack_resource_group.test.location}\"",
      "  resource_group_name   = \"${azurestack_resource_group.test.name}\"",
      "  network_interface_ids = [\"${azurestack_network_interface.test.id}\"]",
      "  vm_size               = \"Standard_F2\"",
      "",
      "  # Uncomment this line to delete the OS disk automatically when deleting the VM",
      "  # delete_os_disk_on_termination = true",
      "",
      "",
      "  # Uncomment this line to delete the data disks automatically when deleting the VM",
      "  # delete_data_disks_on_termination = true",
      "",
      "  storage_image_reference {",
      "    publisher = \"Canonical\"",
      "    offer     = \"UbuntuServer\"",
      "    sku       = \"16.04-LTS\"",
      "    version   = \"latest\"",
      "  }",
      "  storage_os_disk {",
      "    name              = \"myosdisk1\"",
      "    caching           = \"ReadWrite\"",
      "    create_option     = \"FromImage\"",
      "    managed_disk_type = \"Standard_LRS\"",
      "  }",
      "  os_profile {",
      "    computer_name  = \"hostname\"",
      "    admin_username = \"testadmin\"",
      "    admin_password = \"Password1234!\"",
      "  }",
      "  os_profile_linux_config {",
      "    disable_password_authentication = false",
      "  }",
      "  tags {",
      "    environment = \"staging\"",
      "  }",
      "}"
    ]
  },
  "azurestack-resource-virtual_machine_extension": {
    "description": "Defines virtual_machine_extension",
    "prefix": "tf-azurestack-resource-virtual_machine_extension",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"acctestrg\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurestack_virtual_network\" \"test\" {",
      "  name                = \"acctvn\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurestack_subnet\" \"test\" {",
      "  name                 = \"acctsub\"",
      "  resource_group_name  = \"${azurestack_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurestack_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.2.0/24\"",
      "}",
      "",
      "resource \"azurestack_network_interface\" \"test\" {",
      "  name                = \"acctni\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "",
      "  ip_configuration {",
      "    name                          = \"testconfiguration1\"",
      "    subnet_id                     = \"${azurestack_subnet.test.id}\"",
      "    private_ip_address_allocation = \"dynamic\"",
      "  }",
      "}",
      "",
      "resource \"azurestack_storage_account\" \"test\" {",
      "  name                     = \"accsa\"",
      "  resource_group_name      = \"${azurestack_resource_group.test.name}\"",
      "  location                 = \"westus\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "",
      "  tags = {",
      "    environment = \"staging\"",
      "  }",
      "}",
      "",
      "resource \"azurestack_storage_container\" \"test\" {",
      "  name                  = \"vhds\"",
      "  resource_group_name   = \"${azurestack_resource_group.test.name}\"",
      "  storage_account_name  = \"${azurestack_storage_account.test.name}\"",
      "  container_access_type = \"private\"",
      "}",
      "",
      "resource \"azurestack_virtual_machine\" \"test\" {",
      "  name                  = \"acctvm\"",
      "  location              = \"West US\"",
      "  resource_group_name   = \"${azurestack_resource_group.test.name}\"",
      "  network_interface_ids = [\"${azurestack_network_interface.test.id}\"]",
      "  vm_size               = \"Standard_A0\"",
      "",
      "  storage_image_reference {",
      "    publisher = \"Canonical\"",
      "    offer     = \"UbuntuServer\"",
      "    sku       = \"16.04-LTS\"",
      "    version   = \"latest\"",
      "  }",
      "",
      "  storage_os_disk {",
      "    name          = \"myosdisk1\"",
      "    vhd_uri       = \"${azurestack_storage_account.test.primary_blob_endpoint}${azurestack_storage_container.test.name}/myosdisk1.vhd\"",
      "    caching       = \"ReadWrite\"",
      "    create_option = \"FromImage\"",
      "  }",
      "",
      "  os_profile {",
      "    computer_name  = \"hostname\"",
      "    admin_username = \"testadmin\"",
      "    admin_password = \"Password1234!\"",
      "  }",
      "",
      "  os_profile_linux_config {",
      "    disable_password_authentication = false",
      "  }",
      "",
      "  tags = {",
      "    environment = \"staging\"",
      "  }",
      "}",
      "",
      "resource \"azurestack_virtual_machine_extension\" \"test\" {",
      "  name                 = \"hostname\"",
      "  location             = \"West US\"",
      "  resource_group_name  = \"${azurestack_resource_group.test.name}\"",
      "  virtual_machine_name = \"${azurestack_virtual_machine.test.name}\"",
      "  publisher            = \"Microsoft.Azure.Extensions\"",
      "  type                 = \"CustomScript\"",
      "  type_handler_version = \"2.0\"",
      "",
      "  settings = <<SETTINGS",
      "\t{",
      "\t\t\"commandToExecute\": \"hostname && uptime\"",
      "\t}",
      "SETTINGS",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurestack-resource-virtual_machine_scale_set": {
    "description": "Defines virtual_machine_scale_set",
    "prefix": "tf-azurestack-resource-virtual_machine_scale_set",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"acctestRG\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurestack_virtual_network\" \"test\" {",
      "  name                = \"acctvn\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurestack_subnet\" \"test\" {",
      "  name                 = \"acctsub\"",
      "  resource_group_name  = \"${azurestack_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurestack_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.2.0/24\"",
      "}",
      "",
      "resource \"azurestack_storage_account\" \"test\" {",
      "  name                     = \"accsa\"",
      "  resource_group_name      = \"${azurestack_resource_group.test.name}\"",
      "  location                 = \"westus\"",
      "  account_tier             = \"Standard\"",
      "  account_replication_type = \"LRS\"",
      "",
      "  tags = {",
      "    environment = \"staging\"",
      "  }",
      "}",
      "",
      "resource \"azurestack_storage_container\" \"test\" {",
      "  name                  = \"vhds\"",
      "  resource_group_name   = \"${azurestack_resource_group.test.name}\"",
      "  storage_account_name  = \"${azurestack_storage_account.test.name}\"",
      "  container_access_type = \"private\"",
      "}",
      "",
      "resource \"azurestack_virtual_machine_scale_set\" \"test\" {",
      "  name                = \"mytestscaleset-1\"",
      "  location            = \"West US\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "  upgrade_policy_mode = \"Manual\"",
      "",
      "  sku {",
      "    name     = \"Standard_A0\"",
      "    tier     = \"Standard\"",
      "    capacity = 2",
      "  }",
      "",
      "  os_profile {",
      "    computer_name_prefix = \"testvm\"",
      "    admin_username       = \"myadmin\"",
      "    admin_password       = \"Passwword1234\"",
      "  }",
      "",
      "  os_profile_linux_config {",
      "    disable_password_authentication = true",
      "",
      "    ssh_keys {",
      "      path     = \"/home/myadmin/.ssh/authorized_keys\"",
      "      key_data = \"${file(\"~/.ssh/demo_key.pub\")}\"",
      "    }",
      "  }",
      "",
      "  network_profile {",
      "    name    = \"TestNetworkProfile\"",
      "    primary = true",
      "",
      "    ip_configuration {",
      "      name      = \"TestIPConfiguration\"",
      "      subnet_id = \"${azurestack_subnet.test.id}\"",
      "    }",
      "  }",
      "",
      "  storage_profile_os_disk {",
      "    name           = \"osDiskProfile\"",
      "    caching        = \"ReadWrite\"",
      "    create_option  = \"FromImage\"",
      "    vhd_containers = [\"${azurestack_storage_account.test.primary_blob_endpoint}${azurestack_storage_container.test.name}\"]",
      "  }",
      "",
      "  storage_profile_image_reference {",
      "    publisher = \"Canonical\"",
      "    offer     = \"UbuntuServer\"",
      "    sku       = \"16.04-LTS\"",
      "    version   = \"latest\"",
      "  }",
      "}"
    ]
  },
  "azurestack-resource-virtual_network": {
    "description": "Defines virtual_network",
    "prefix": "tf-azurestack-resource-virtual_network",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"acceptanceTestResourceGroup1\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurestack_network_security_group\" \"test\" {",
      "  name                = \"acceptanceTestSecurityGroup1\"",
      "  location            = \"${azurestack_resource_group.test.location}\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "}",
      "",
      "resource \"azurestack_virtual_network\" \"test\" {",
      "  name                = \"virtualNetwork1\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "  location            = \"West US\"",
      "  dns_servers         = [\"10.0.0.4\", \"10.0.0.5\"]",
      "",
      "  subnet {",
      "    name           = \"subnet1\"",
      "    address_prefix = \"10.0.1.0/24\"",
      "  }",
      "",
      "  subnet {",
      "    name           = \"subnet2\"",
      "    address_prefix = \"10.0.2.0/24\"",
      "  }",
      "",
      "  subnet {",
      "    name           = \"subnet3\"",
      "    address_prefix = \"10.0.3.0/24\"",
      "    security_group = \"${azurestack_network_security_group.test.id}\"",
      "  }",
      "",
      "  tags = {",
      "    environment = \"Production\"",
      "  }",
      "}"
    ]
  },
  "azurestack-resource-virtual_network_gateway": {
    "description": "Defines virtual_network_gateway",
    "prefix": "tf-azurestack-resource-virtual_network_gateway",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"test\"",
      "  location = \"Azure-stack-region\"",
      "}",
      "",
      "resource \"azurestack_virtual_network\" \"test\" {",
      "  name                = \"test\"",
      "  location            = \"${azurestack_resource_group.test.location}\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "}",
      "",
      "resource \"azurestack_subnet\" \"test\" {",
      "  name                 = \"GatewaySubnet\"",
      "  resource_group_name  = \"${azurestack_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurestack_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.1.0/24\"",
      "}",
      "",
      "resource \"azurestack_public_ip\" \"test\" {",
      "  name                         = \"test\"",
      "  location                     = \"${azurestack_resource_group.test.location}\"",
      "  resource_group_name          = \"${azurestack_resource_group.test.name}\"",
      "  public_ip_address_allocation = \"Dynamic\"",
      "}",
      "",
      "resource \"azurestack_virtual_network_gateway\" \"test\" {",
      "  name                = \"test\"",
      "  location            = \"${azurestack_resource_group.test.location}\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "",
      "  type     = \"Vpn\"",
      "  vpn_type = \"RouteBased\"",
      "  sku      = \"Basic\"",
      "",
      "  ip_configuration {",
      "    public_ip_address_id          = \"${azurestack_public_ip.test.id}\"",
      "    private_ip_address_allocation = \"Dynamic\"",
      "    subnet_id                     = \"${azurestack_subnet.test.id}\"",
      "  }",
      "}"
    ]
  },
  "azurestack-resource-virtual_network_gateway_connection": {
    "description": "Defines virtual_network_gateway_connection",
    "prefix": "tf-azurestack-resource-virtual_network_gateway_connection",
    "body": [
      "resource \"azurestack_resource_group\" \"test\" {",
      "  name     = \"test\"",
      "  location = \"West US\"",
      "}",
      "",
      "resource \"azurestack_virtual_network\" \"test\" {",
      "  name                = \"test\"",
      "  location            = \"${azurestack_resource_group.test.location}\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "  address_space       = [\"10.0.0.0/16\"]",
      "}",
      "",
      "resource \"azurestack_subnet\" \"test\" {",
      "  name                 = \"GatewaySubnet\"",
      "  resource_group_name  = \"${azurestack_resource_group.test.name}\"",
      "  virtual_network_name = \"${azurestack_virtual_network.test.name}\"",
      "  address_prefix       = \"10.0.1.0/24\"",
      "}",
      "",
      "resource \"azurestack_local_network_gateway\" \"onpremise\" {",
      "  name                = \"onpremise\"",
      "  location            = \"${azurestack_resource_group.test.location}\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "  gateway_address     = \"168.62.225.23\"",
      "  address_space       = [\"10.1.1.0/24\"]",
      "}",
      "",
      "resource \"azurestack_public_ip\" \"test\" {",
      "  name                         = \"test\"",
      "  location                     = \"${azurestack_resource_group.test.location}\"",
      "  resource_group_name          = \"${azurestack_resource_group.test.name}\"",
      "  public_ip_address_allocation = \"Dynamic\"",
      "}",
      "",
      "resource \"azurestack_virtual_network_gateway\" \"test\" {",
      "  name                = \"test\"",
      "  location            = \"${azurestack_resource_group.test.location}\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "",
      "  type     = \"Vpn\"",
      "  vpn_type = \"RouteBased\"",
      "",
      "  active_active = false",
      "  enable_bgp    = false",
      "  sku           = \"Basic\"",
      "",
      "  ip_configuration {",
      "    public_ip_address_id          = \"${azurestack_public_ip.test.id}\"",
      "    private_ip_address_allocation = \"Dynamic\"",
      "    subnet_id                     = \"${azurestack_subnet.test.id}\"",
      "  }",
      "}",
      "",
      "resource \"azurestack_virtual_network_gateway_connection\" \"onpremise\" {",
      "  name                = \"onpremise\"",
      "  location            = \"${azurestack_resource_group.test.location}\"",
      "  resource_group_name = \"${azurestack_resource_group.test.name}\"",
      "",
      "  type                       = \"IPsec\"",
      "  virtual_network_gateway_id = \"${azurestack_virtual_network_gateway.test.id}\"",
      "  local_network_gateway_id   = \"${azurestack_local_network_gateway.onpremise.id}\"",
      "",
      "  shared_key = \"4-v3ry-53cr37-1p53c-5h4r3d-k3y\"",
      "}"
    ]
  },
  "bigip-resource-bigip_cm_device": {
    "description": "Defines bigip_cm_device",
    "prefix": "tf-bigip-resource-bigip_cm_device",
    "body": [
      "",
      "resource \"bigip_cm_device\" \"my_new_device\"",
      "",
      "        {",
      "            name = \"bigip300.f5.com\"",
      "            configsync_ip = \"2.2.2.2\"",
      "            mirror_ip = \"10.10.10.10\"",
      "            mirror_secondary_ip = \"11.11.11.11\"",
      "        }"
    ]
  },
  "bigip-resource-bigip_cm_devicegroup": {
    "description": "Defines bigip_cm_devicegroup",
    "prefix": "tf-bigip-resource-bigip_cm_devicegroup",
    "body": [
      "",
      "resource \"bigip_cm_devicegroup\" \"my_new_devicegroup\"",
      "",
      "        {",
      "            name = \"sanjose_devicegroup\"",
      "            auto_sync = \"enabled\"",
      "            full_load_on_sync = \"true\"",
      "            type = \"sync-only\"",
      "            device  { name = \"bigip1.cisco.com\"}",
      "            device  { name = \"bigip200.f5.com\"}",
      "        }",
      ""
    ]
  },
  "bigip-resource-bigip_ltm_datagroup": {
    "description": "Defines bigip_ltm_datagroup",
    "prefix": "tf-bigip-resource-bigip_ltm_datagroup",
    "body": [
      "resource \"bigip_ltm_datagroup\" \"datagroup\" {",
      "  name = \"/Common/dgx2\"",
      "  type = \"string\"",
      "",
      "  record {",
      "    name = \"abc.com\"",
      "    data = \"pool1\"",
      "  }",
      "",
      "  record {",
      "    name = \"test\"",
      "    value = \"123\"",
      "  }",
      "}",
      ""
    ]
  },
  "bigip-resource-bigip_ltm_irule": {
    "description": "Defines bigip_ltm_irule",
    "prefix": "tf-bigip-resource-bigip_ltm_irule",
    "body": [
      "# Loading from a file is the preferred method",
      "resource \"bigip_ltm_irule\" \"rule\" {",
      "  name = \"/Common/terraform_irule\"",
      "  irule = \"${file(\"myirule.tcl\")}\"",
      "}",
      "",
      "resource \"bigip_ltm_irule\" \"rule2\" {",
      "  name = \"/Common/terraform_irule2\"",
      "  irule = <<EOF",
      "when CLIENT_ACCEPTED {",
      "     log local0. \"test\"",
      "   }",
      "EOF",
      "}",
      "",
      "myirule.tcl",
      "",
      "when HTTP_REQUEST {",
      "",
      "  if { [string tolower [HTTP::header value Upgrade]] equals \"websocket\" } {",
      "    HTTP::disable",
      "#    ASM::disable",
      "    log local0. \"[IP::client_addr] - Connection upgraded to websocket protocol. Disabling ASM-checks and HTTP protocol. Traffic is treated as L4 TCP stream.\"",
      "  } else {",
      "    HTTP::enable",
      "#    ASM::enable",
      "    log local0. \"[IP::client_addr] - Regular HTTP request. ASM-checks and HTTP protocol enabled. Traffic is deep-inspected at L7.\"",
      "  }",
      "}",
      "",
      ""
    ]
  },
  "bigip-resource-bigip_ltm_monitor": {
    "description": "Defines bigip_ltm_monitor",
    "prefix": "tf-bigip-resource-bigip_ltm_monitor",
    "body": [
      "resource \"bigip_ltm_monitor\" \"monitor\" {",
      "  name = \"/Common/terraform_monitor\"",
      "  parent = \"/Common/http\"",
      "  send = \"GET /some/path\\r\\n\"",
      "  timeout = \"999\"",
      "  interval = \"999\"",
      "  destination = \"1.2.3.4:1234\"",
      "}",
      "",
      "resource \"bigip_ltm_monitor\" \"test-ftp-monitor\" {",
      "\tname = \"/Common/ftp-test\"",
      "\tparent = \"/Common/ftp\"",
      "\tinterval          = 5",
      "\ttime_until_up     = 0",
      "\ttimeout           = 16",
      "\tdestination       = \"*:8008\"",
      "\tfilename = \"somefile\"",
      "}",
      ""
    ]
  },
  "bigip-resource-bigip_ltm_node": {
    "description": "Defines bigip_ltm_node",
    "prefix": "tf-bigip-resource-bigip_ltm_node",
    "body": [
      "",
      "resource \"bigip_ltm_node\" \"node\" {",
      "  name = \"/Common/terraform_node1\"",
      "  address = \"192.168.30.1\"",
      "  connection_limit = \"0\"",
      "  dynamic_ratio = \"1\"",
      "  monitor = \"/Common/icmp\"",
      "  description = \"Test-Node\"  ",
      "  rate_limit = \"disabled\"",
      "  fqdn = { address_family = \"ipv4\", interval = \"3000\" }",
      "}"
    ]
  },
  "bigip-resource-bigip_ltm_persistence_profile_cookie": {
    "description": "Defines bigip_ltm_persistence_profile_cookie",
    "prefix": "tf-bigip-resource-bigip_ltm_persistence_profile_cookie",
    "body": [
      "resource \"bigip_ltm_persistence_profile_cookie\" \"test_ppcookie\" {",
      "    name = \"/Common/terraform_cookie\"",
      "    defaults_from = \"/Common/cookie\"",
      "    match_across_pools = \"enabled\"",
      "    match_across_services = \"enabled\"",
      "    match_across_virtuals = \"enabled\"",
      "    timeout = 3600",
      "    override_conn_limit = \"enabled\"",
      "    always_send = \"enabled\"",
      "    cookie_encryption = \"required\"",
      "    cookie_encryption_passphrase = \"iam\"",
      "    cookie_name = \"ham\"",
      "    expiration = \"1:0:0\"",
      "    hash_length = 0",
      "",
      "    lifecycle {",
      "        ignore_changes = [ \"cookie_encryption_passphrase\" ]",
      "    }",
      "}",
      "",
      ""
    ]
  },
  "bigip-resource-bigip_ltm_persistence_profile_dstaddr": {
    "description": "Defines bigip_ltm_persistence_profile_dstaddr",
    "prefix": "tf-bigip-resource-bigip_ltm_persistence_profile_dstaddr",
    "body": [
      "resource \"bigip_ltm_persistence_profile_dstaddr\" \"dstaddr\" {",
      "    name = \"/Common/terraform_ppdstaddr\"",
      "    defaults_from = \"/Common/dest_addr\"",
      "\tmatch_across_pools = \"enabled\"",
      "\tmatch_across_services = \"enabled\"",
      "\tmatch_across_virtuals = \"enabled\"",
      "\tmirror = \"enabled\"",
      "\ttimeout = 3600",
      "\toverride_conn_limit = \"enabled\"",
      "\thash_algorithm = \"carp\"",
      "\tmask = \"255.255.255.255\"",
      "",
      "}",
      "",
      ""
    ]
  },
  "bigip-resource-bigip_ltm_persistence_profile_srcaddr": {
    "description": "Defines bigip_ltm_persistence_profile_srcaddr",
    "prefix": "tf-bigip-resource-bigip_ltm_persistence_profile_srcaddr",
    "body": [
      "resource \"bigip_ltm_persistence_profile_srcaddr\" \"srcaddr\" {",
      "    name = \"/Common/terraform_srcaddr\"",
      "    defaults_from = \"/Common/source_addr\"",
      "    match_across_pools = \"enabled\"",
      "    match_across_services = \"enabled\"",
      "    match_across_virtuals = \"enabled\"",
      "    mirror = \"enabled\"",
      "    timeout = 3600",
      "    override_conn_limit = \"enabled\"",
      "    hash_algorithm = \"carp\"",
      "    map_proxies = \"enabled\"",
      "    mask = \"255.255.255.255\"",
      "}"
    ]
  },
  "bigip-resource-bigip_ltm_persistence_profile_ssl": {
    "description": "Defines bigip_ltm_persistence_profile_ssl",
    "prefix": "tf-bigip-resource-bigip_ltm_persistence_profile_ssl",
    "body": [
      "resource \"bigip_ltm_persistence_profile_ssl\" \"ppssl\" {",
      "    name = \"/Common/terraform_ssl\"",
      "    defaults_from = \"/Common/ssl\"",
      "    match_across_pools = \"enabled\"",
      "    match_across_services = \"enabled\"",
      "    match_across_virtuals = \"enabled\"",
      "    mirror = \"enabled\"",
      "    timeout = 3600",
      "    override_conn_limit = \"enabled\"",
      "}"
    ]
  },
  "bigip-resource-bigip_ltm_policy": {
    "description": "Defines bigip_ltm_policy",
    "prefix": "tf-bigip-resource-bigip_ltm_policy",
    "body": [
      "resource \"bigip_ltm_policy\" \"test-policy\" {",
      "name = \"my_policy\"",
      "strategy = \"first-match\"",
      " requires = [\"http\"]",
      "published_copy = \"Drafts/my_policy\"",
      " controls = [\"forwarding\"]",
      " rule  {",
      " name = \"rule6\"",
      "",
      "  action = {",
      "    tm_name = \"20\"",
      "    forward = true",
      "     pool = \"/Common/mypool\"",
      "  }",
      " }",
      "depends_on = [\"bigip_ltm_pool.mypool\"]",
      "}",
      "",
      ""
    ]
  },
  "bigip-resource-bigip_ltm_pool": {
    "description": "Defines bigip_ltm_pool",
    "prefix": "tf-bigip-resource-bigip_ltm_pool",
    "body": [
      "resource \"bigip_ltm_pool\" \"pool\" {",
      "  name = \"/Common/terraform-pool\"",
      "  load_balancing_mode = \"round-robin\"",
      "  description = \"Test-Pool\"",
      "  monitors = [\"${bigip_ltm_monitor.monitor.name}\",\"${bigip_ltm_monitor.monitor2.name}\"]",
      "  allow_snat = \"yes\"",
      "  allow_nat = \"yes\"",
      "}",
      ""
    ]
  },
  "bigip-resource-bigip_ltm_pool_attachment": {
    "description": "Defines bigip_ltm_pool_attachment",
    "prefix": "tf-bigip-resource-bigip_ltm_pool_attachment",
    "body": [
      "resource \"bigip_ltm_pool_attachment\" \"node-terraform_pool\" {",
      "  pool = \"/Common/terraform-pool\"",
      "  node = \"${bigip_ltm_node.node.name}:80\"",
      "}",
      ""
    ]
  },
  "bigip-resource-bigip_ltm_profile_fasthttp": {
    "description": "Defines bigip_ltm_profile_fasthttp",
    "prefix": "tf-bigip-resource-bigip_ltm_profile_fasthttp",
    "body": [
      "resource \"bigip_ltm_profile_fasthttp\" \"sjfasthttpprofile\"",
      "",
      "        {",
      "            name = \"sjfasthttpprofile\"",
      "            defaults_from = \"/Common/fasthttp\"",
      "            idle_timeout = 300",
      "            connpoolidle_timeoutoverride\t= 0",
      "            connpool_maxreuse = 2",
      "            connpool_maxsize  = 2048",
      "            connpool_minsize = 0",
      "            connpool_replenish = \"enabled\"",
      "            connpool_step = 4",
      "            forcehttp_10response = \"disabled\"",
      "            maxheader_size = 32768",
      "      }",
      ""
    ]
  },
  "bigip-resource-bigip_ltm_profile_fastl4": {
    "description": "Defines bigip_ltm_profile_fastl4",
    "prefix": "tf-bigip-resource-bigip_ltm_profile_fastl4",
    "body": [
      "resource \"bigip_ltm_profile_fastl4\" \"profile_fastl4\" {",
      "            name = \"/Common/sjfastl4profile\"",
      "            partition = \"Common\"",
      "            defaults_from = \"/Common/fastL4\"",
      "            client_timeout = 40",
      "            explicitflow_migration = \"enabled\"",
      "            hardware_syncookie = \"enabled\"",
      "            idle_timeout = \"200\"",
      "            iptos_toclient = \"pass-through\"",
      "            iptos_toserver = \"pass-through\"",
      "            keepalive_interval = \"disabled\"  //This cannot take enabled",
      "}",
      ""
    ]
  },
  "bigip-resource-bigip_ltm_profile_http": {
    "description": "Defines bigip_ltm_profile_http",
    "prefix": "tf-bigip-resource-bigip_ltm_profile_http",
    "body": [
      "resource \"bigip_ltm_profile_http\" \"sanjose-http\"",
      "",
      "        {",
      "          name = \"/Common/sanjose-http\"",
      "          defaults_from = \"/Common/http\"",
      "          description = \"some http\"",
      "          fallback_host = \"titanic\"",
      "          fallback_status_codes = [\"400\",\"500\",\"300\"]",
      "        }"
    ]
  },
  "bigip-resource-bigip_ltm_profile_http2": {
    "description": "Defines bigip_ltm_profile_http2",
    "prefix": "tf-bigip-resource-bigip_ltm_profile_http2",
    "body": [
      "resource \"bigip_ltm_profile_http2\" \"nyhttp2\"",
      "",
      "        {",
      "            name = \"/Common/NewYork_http2\"",
      "            defaults_from = \"/Common/http2\"",
      "            concurrent_streams_per_connection = 10",
      "            connection_idle_timeout= 30",
      "            activation_modes = [\"alpn\",\"npn\"]",
      "        }",
      ""
    ]
  },
  "bigip-resource-bigip_ltm_profile_httpcompress": {
    "description": "Defines bigip_ltm_profile_httpcompress",
    "prefix": "tf-bigip-resource-bigip_ltm_profile_httpcompress",
    "body": [
      " resource \"bigip_ltm_profile_httpcompress\" \"sjhttpcompression\"",
      "",
      "        {",
      "            name = \"/Common/sjhttpcompression2\"",
      "            defaults_from = \"/Common/httpcompression\"",
      "            uri_exclude   = [\"www.abc.f5.com\", \"www.abc2.f5.com\"]",
      "            uri_include   = [\"www.xyzbc.cisco.com\"]",
      "            content_type_include = [\"nicecontent.com\"]",
      "            content_type_exclude = [\"nicecontentexclude.com\"]",
      "        }",
      ""
    ]
  },
  "bigip-resource-bigip_ltm_profile_oneconnect": {
    "description": "Defines bigip_ltm_profile_oneconnect",
    "prefix": "tf-bigip-resource-bigip_ltm_profile_oneconnect",
    "body": [
      "resource \"bigip_ltm_profile_oneconnect\" \"oneconnect-sanjose\"",
      "",
      "        {  ",
      "            name = \"sanjose\"",
      "            partition = \"Common\"",
      "            defaults_from = \"/Common/oneconnect\"",
      "            idle_timeout_override = \"disabled\"",
      "            max_age = 3600",
      "            max_reuse = 1000",
      "            max_size = 1000",
      "            share_pools = \"disabled\"",
      "            source_mask = \"255.255.255.255\"",
      "        }",
      ""
    ]
  },
  "bigip-resource-bigip_ltm_profile_tcp": {
    "description": "Defines bigip_ltm_profile_tcp",
    "prefix": "tf-bigip-resource-bigip_ltm_profile_tcp",
    "body": [
      "resource \"bigip_ltm_profile_tcp\" \"sanjose-tcp-lan-profile\"",
      "",
      "        {  ",
      "            name = \"sanjose-tcp-lan-profile\"",
      "            idle_timeout = 200",
      "            close_wait_timeout = 5",
      "            finwait_2timeout = 5",
      "            finwait_timeout = 300",
      "            keepalive_interval = 1700",
      "            deferred_accept = \"enabled\"",
      "            fast_open = \"enabled\"",
      "        }"
    ]
  },
  "bigip-resource-bigip_ltm_snat": {
    "description": "Defines bigip_ltm_snat",
    "prefix": "tf-bigip-resource-bigip_ltm_snat",
    "body": [
      "resource \"bigip_ltm_snat\" \"snat3\" {",
      "  // this is using snatpool translation is not required",
      "  name = \"snat3\"",
      "  origins = [\"6.1.6.6\"]",
      "  mirror = \"false\"",
      "  snatpool = \"/Common/sanjaysnatpool\"",
      "  vlans = [\"test-vlan\"]",
      "}",
      ""
    ]
  },
  "bigip-resource-bigip_ltm_snatpool": {
    "description": "Defines bigip_ltm_snatpool",
    "prefix": "tf-bigip-resource-bigip_ltm_snatpool",
    "body": [
      " resource \"bigip_ltm_snatpoolpool\" \"snatpool_sanjose\" {",
      "  name = \"/Common/snatpool_sanjose\"",
      "  members = [\"191.1.1.1\",\"194.2.2.2\"]",
      "}",
      "",
      ""
    ]
  },
  "bigip-resource-bigip_ltm_virtual_address": {
    "description": "Defines bigip_ltm_virtual_address",
    "prefix": "tf-bigip-resource-bigip_ltm_virtual_address",
    "body": [
      "resource \"bigip_ltm_virtual_address\" \"vs_va\" {",
      "    name = \"/Common/vs_va\"",
      "    advertize_route = true",
      "}",
      ""
    ]
  },
  "bigip-resource-bigip_ltm_virtual_server": {
    "description": "Defines bigip_ltm_virtual_server",
    "prefix": "tf-bigip-resource-bigip_ltm_virtual_server",
    "body": [
      "resource \"bigip_ltm_virtual_server\" \"http\" {",
      "  name = \"/Common/terraform_vs_http\"",
      "  destination = \"10.12.12.12\"",
      "  port = 80",
      "  pool = \"/Common/the-default-pool\"",
      "}",
      "",
      "# A Virtual server with SSL enabled",
      "resource \"bigip_ltm_virtual_server\" \"https\" {",
      "  name = \"/Common/terraform_vs_https\"",
      "  destination = \"${var.vip_ip}\"",
      "  description = \"VirtualServer-test\"",
      "  port = 443",
      "  pool = \"${var.pool}\"",
      "  profiles = [\"/Common/tcp\",\"/Common/my-awesome-ssl-cert\",\"/Common/http\"]",
      "  source_address_translation = \"automap\"",
      "  translate_address = \"enabled\"",
      "  translate_port = \"enabled\"",
      "  vlans_disabled = true",
      "}",
      "",
      "# A Virtual server with separate client and server profiles",
      " resource \"bigip_ltm_virtual_server\" \"https\" {",
      "  name = \"/Common/terraform_vs_https\"",
      "  destination = \"10.255.255.254\"",
      "  description = \"VirtualServer-test\"",
      "  port = 443",
      "  client_profiles = [\"/Common/clientssl\"]",
      "  server_profiles = [\"/Common/serverssl\"]",
      "  source_address_translation = \"automap\"",
      "}",
      "",
      ""
    ]
  },
  "bigip-resource-bigip_net_route": {
    "description": "Defines bigip_net_route",
    "prefix": "tf-bigip-resource-bigip_net_route",
    "body": [
      "resource \"bigip_net_route\" \"route2\" {",
      "  name = \"external-route\"",
      "  network = \"10.10.10.0/24\"",
      "  gw      = \"1.1.1.2\"",
      "}",
      ""
    ]
  },
  "bigip-resource-bigip_net_selfip": {
    "description": "Defines bigip_net_selfip",
    "prefix": "tf-bigip-resource-bigip_net_selfip",
    "body": [
      "resource \"bigip_net_selfip\" \"selfip1\" {",
      "  name          = \"/Common/internalselfIP\"",
      "  ip            = \"11.1.1.1/24\"",
      "  vlan          = \"/Common/internal\"",
      "  traffic_group = \"traffic-group-1\"",
      "",
      "  depends_on = [\"bigip_net_vlan.vlan1\"]",
      "}"
    ]
  },
  "bigip-resource-bigip_net_vlan": {
    "description": "Defines bigip_net_vlan",
    "prefix": "tf-bigip-resource-bigip_net_vlan",
    "body": [
      "resource \"bigip_net_vlan\" \"vlan1\" {",
      "\tname = \"/Common/Internal\"",
      "\ttag = 101",
      "\tinterfaces = {",
      "                vlanport = 1.2,",
      "\t\t            tagged = false",
      "\t          }",
      "  }",
      ""
    ]
  },
  "bigip-resource-bigip_sys_dns": {
    "description": "Defines bigip_sys_dns",
    "prefix": "tf-bigip-resource-bigip_sys_dns",
    "body": [
      "resource \"bigip_ltm_dns\" \"dns1\" {",
      "   description = \"/Common/DNS1\"",
      "   name_servers = [\"1.1.1.1\"]",
      "   numberof_dots = 2",
      "   search = [\"f5.com\"]",
      "}"
    ]
  },
  "bigip-resource-bigip_sys_iapp": {
    "description": "Defines bigip_sys_iapp",
    "prefix": "tf-bigip-resource-bigip_sys_iapp",
    "body": [
      " resource \"bigip_sys_iapp\" \"simplehttp\" {",
      "  name = \"simplehttp\"",
      "  jsonfile = \"${file(\"simplehttp.json\")}\"",
      "}"
    ]
  },
  "bigip-resource-bigip_sys_ntp": {
    "description": "Defines bigip_sys_ntp",
    "prefix": "tf-bigip-resource-bigip_sys_ntp",
    "body": [
      "provider \"bigip\" {",
      "  address = \"10.192.74.73\"",
      "  username = \"admin\"",
      "  password = \"admin\"",
      "}",
      "",
      "",
      "resource \"bigip_sys_ntp\" \"ntp1\" {",
      "",
      "description = \"/Common/NTP1\"",
      "  servers = [\"time.facebook.com\"]",
      "  timezone = \"America/Los_Angeles\"",
      "}",
      ""
    ]
  },
  "bigip-resource-bigip_sys_provision": {
    "description": "Defines bigip_sys_provision",
    "prefix": "tf-bigip-resource-bigip_sys_provision",
    "body": [
      "provider \"bigip\" {",
      "  address = \"10.192.74.73\"",
      "  username = \"admin\"",
      "  password = \"admin\"",
      "}",
      "",
      "resource \"bigip_sys_provision\" \"provision-ilx\" {",
      "  name = \"/Common/ilx\"",
      "  fullPath  = \"ilx\"",
      "  cpuRatio = 0",
      "  diskRatio = 0",
      "  level = \"nominal\"",
      "  memoryRatio = 0",
      "}"
    ]
  },
  "bigip-resource-bigip_sys_snmp": {
    "description": "Defines bigip_sys_snmp",
    "prefix": "tf-bigip-resource-bigip_sys_snmp",
    "body": [
      "resource \"bigip_sys_snmp\" \"snmp\" {",
      "  sys_contact = \" NetOPsAdmin s.shitole@f5.com\"",
      "  sys_location = \"SeattleHQ\"",
      "  allowedaddresses = [\"202.10.10.2\"]",
      "}"
    ]
  },
  "bigip-resource-bigip_sys_snmp_traps": {
    "description": "Defines bigip_sys_snmp_traps",
    "prefix": "tf-bigip-resource-bigip_sys_snmp_traps",
    "body": [
      "resource \"bigip_sys_snmp_traps\" \"snmp_traps\" {",
      "name = \"snmptraps\"",
      "community = \"f5community\"",
      "host = \"195.10.10.1\"",
      "description = \"Setup snmp traps\"",
      "port = 111",
      "}"
    ]
  },
  "bitbucket-resource-default_reviewers": {
    "description": "Defines default_reviewers",
    "prefix": "tf-bitbucket-resource-default_reviewers",
    "body": [
      "# Manage your repository",
      "resource \"bitbucket_default_reviewers\" \"infrastructure\" {",
      "  owner      = \"myteam\"",
      "  repository = \"terraform-code\"",
      "",
      "  reviewers = [",
      "    \"gob\",",
      "    \"michael\",",
      "    \"michalejr\",",
      "  ]",
      "}"
    ]
  },
  "bitbucket-resource-hook": {
    "description": "Defines hook",
    "prefix": "tf-bitbucket-resource-hook",
    "body": [
      "# Manage your repositories hooks",
      "resource \"bitbucket_hook\" \"deploy_on_push\" {",
      "  owner       = \"myteam\"",
      "  repository  = \"terraform-code\"",
      "  url         = \"https://mywebhookservice.mycompany.com/deploy-on-push\"",
      "  description = \"Deploy the code via my webhook\"",
      "",
      "  events = [",
      "    \"repo:push\",",
      "  ]",
      "}"
    ]
  },
  "bitbucket-resource-repository": {
    "description": "Defines repository",
    "prefix": "tf-bitbucket-resource-repository",
    "body": [
      "# Manage your repository",
      "resource \"bitbucket_repository\" \"infrastructure\" {",
      "  owner = \"myteam\"",
      "  name  = \"terraform-code\"",
      "}"
    ]
  },
  "brightbox-data-brightbox_database_snapshot": {
    "description": "Defines brightbox_database_snapshot",
    "prefix": "tf-brightbox-data-brightbox_database_snapshot",
    "body": [
      "data \"brightbox_database_snapshot\" \"today\" {",
      "\tname = \"Main db\"",
      "\tmost_recent = true",
      "}"
    ]
  },
  "brightbox-data-brightbox_database_type": {
    "description": "Defines brightbox_database_type",
    "prefix": "tf-brightbox-data-brightbox_database_type",
    "body": [
      "data \"brightbox_database_type\" \"4gb\" {",
      "\tname = \"^SSD 4GB$\"",
      "}"
    ]
  },
  "brightbox-data-brightbox_image": {
    "description": "Defines brightbox_image",
    "prefix": "tf-brightbox-data-brightbox_image",
    "body": [
      "data \"brightbox_image\" \"ubuntu_lts\" {",
      "\tname = \"^ubuntu-xenial.*server$\"",
      "\tarch = \"x86_64\"",
      "\tofficial = true",
      "\tmost_recent = true",
      "}"
    ]
  },
  "brightbox-data-brightbox_server_group": {
    "description": "Defines brightbox_server_group",
    "prefix": "tf-brightbox-data-brightbox_server_group",
    "body": [
      "data \"brightbox_server_group\" \"defaul\" {",
      "\tname = \"^default$\"",
      "}"
    ]
  },
  "brightbox-resource-api_client": {
    "description": "Defines api_client",
    "prefix": "tf-brightbox-resource-api_client",
    "body": [
      "resource \"brightbox_api_client\" \"default\" {",
      "  name              = \"Terraform\"",
      "  description       = \"Terraform API Client\"",
      "  permissions_group = \"storage\"",
      "}"
    ]
  },
  "brightbox-resource-cloudip": {
    "description": "Defines cloudip",
    "prefix": "tf-brightbox-resource-cloudip",
    "body": [
      "resource \"brightbox_cloudip\" \"web-public\" {",
      "  target = \"${brightbox_server.web.interface}\"",
      "  name = \"web-1 public address\"",
      "  port_translator {",
      "\t  protocol = \"tcp\"",
      "\t  incoming = 80",
      "\t  outgoing = 8080",
      "  }",
      "  port_translator {",
      "\t  protocol = \"udp\"",
      "\t  incoming = 53",
      "\t  outgoing = 8053",
      "  }",
      "}",
      "",
      "resource \"brightbox_server\" \"web\" {",
      "  image  = \"img-testy\"",
      "  name   = \"web-1\"",
      "  zone = \"gb1-a\"",
      "  type = \"512mb.ssd\"",
      "  server_groups = [ \"grp-testy\" ]",
      "}"
    ]
  },
  "brightbox-resource-database_server": {
    "description": "Defines database_server",
    "prefix": "tf-brightbox-resource-database_server",
    "body": [
      "resource \"brightbox_database_server\" \"default\" {",
      "\tname = \"Default DB\"",
      "\tdescription = \"Default DB used by servers\"",
      "\tdatabase_engine = \"mysql\"",
      "\tdatabase_version = \"8.0\"",
      "\tdatabase_type = \"${data.brightbox_database_type.4gb.id}\"",
      "\tmaintenance_weekday = 5",
      "\tmaintenance_hour = 4",
      "\tsnapshots_schedule = \"0 5 * * *\"",
      "\tallow_access = [",
      "\t\t\"${brightbox_server_group.barfoo.id}\",",
      "\t\t\"${brightbox_server.foobar.id}\",",
      "\t\t\"158.152.1.65/32\"",
      "\t]",
      "}",
      "",
      "data \"brightbox_database_type\" \"4gb\" {",
      "\tname = \"^SSD 4GB$\"",
      "}",
      "",
      "resource \"brightbox_server\" \"foobar\" {",
      "\tname = \"database access\"",
      "\timage = \"img-testy\"",
      "\tserver_groups = [ \"${brightbox_server_group.barfoo.id}\" ]",
      "}",
      "",
      "resource \"brightbox_server_group\" \"barfoo\" {",
      "\tname = \"database access group\"",
      "}"
    ]
  },
  "brightbox-resource-firewall_policy": {
    "description": "Defines firewall_policy",
    "prefix": "tf-brightbox-resource-firewall_policy",
    "body": [
      "resource \"brightbox_server_group\" \"default\" {",
      "  name = \"Terraform\"",
      "}",
      "",
      "resource \"brightbox_firewall_policy\" \"default\" {",
      "  name         = \"Terraform\"",
      "  server_group = \"${brightbox_server_group.default.id}\"",
      "}"
    ]
  },
  "brightbox-resource-firewall_rule": {
    "description": "Defines firewall_rule",
    "prefix": "tf-brightbox-resource-firewall_rule",
    "body": [
      "resource \"brightbox_server_group\" \"default\" {",
      "  name = \"Terraform\"",
      "}",
      "",
      "resource \"brightbox_firewall_policy\" \"default\" {",
      "  name         = \"Terraform\"",
      "  server_group = \"${brightbox_server_group.default.id}\"",
      "}",
      "",
      "resource \"brightbox_firewall_rule\" \"default_ssh\" {",
      "  destination_port = 22",
      "  protocol         = \"tcp\"",
      "  source           = \"any\"",
      "  description      = \"SSH access from anywhere\"",
      "  firewall_policy  = \"${brightbox_firewall_policy.default.id}\"",
      "}",
      ""
    ]
  },
  "brightbox-resource-load_balancer": {
    "description": "Defines load_balancer",
    "prefix": "tf-brightbox-resource-load_balancer",
    "body": [
      "resource \"brightbox_load_balancer\" \"lb\" {",
      "  name = \"Terraform weblayer example\"",
      "",
      "  listener {",
      "    protocol = \"https\"",
      "    in       = 443",
      "    out      = 8080",
      "  }",
      "",
      "  listener {",
      "    protocol = \"http\"",
      "    in       = 80",
      "    out      = 8080",
      "    timeout  = 10000",
      "  }",
      "",
      "  listener {",
      "    protocol = \"http+ws\"",
      "    in       = 81",
      "    out      = 81",
      "    timeout  = 10000",
      "  }",
      "",
      "  healthcheck {",
      "    type = \"http\"",
      "    port = 8080",
      "  }",
      "",
      "  nodes = [",
      "    \"${brightbox_server.server2.id}\",",
      "    \"${brightbox_server.server1.id}\",",
      "  ]",
      "",
      "  certificate_pem = <<EOF",
      "-----BEGIN CERTIFICATE-----",
      "MIIDBzCCAe+gAwIBAgIJAPD+BTBqIVp6MA0GCSqGSIb3DQEBBQUAMBoxGDAWBgNV",
      "BAMMD3d3dy5leGFtcGxlLmNvbTAeFw0xNjAzMDIxMTU0MDFaFw0yNjAyMjgxMTU0",
      "MDFaMBoxGDAWBgNVBAMMD3d3dy5leGFtcGxlLmNvbTCCASIwDQYJKoZIhvcNAQEB",
      "BQADggEPADCCAQoCggEBANuA/TLmuCbZdHcMKUwFadRpNnjg3S3PuP9AECDu+mIC",
      "rOBmNqeZ66dEkzJqNMq4pEo30L9ZlZXl7fAvsIZTPYLEb0ieYGyTTdqAKrHi8GPP",
      "ZeC+iAySKXnTKjpnciTWFv2T8R9tLsgPrsv54okM59bYC5mSnD7pL6RR/aQ0oi4f",
      "X2eJex5fpfFlcxm9HvvVEdWq9/CQNoCOpGhLT911MRVMUl3S10BmzTG8Q87P76ji",
      "Axt3t5piPg8JGiSBHTUJmKw/jxcwhybWHaf/217RmSmeoTo40wMCB2b05RqdSOm5",
      "39qLotrjt2w3nFKzm423cVok3y2w55hLkDCbDlxUK1kCAwEAAaNQME4wHQYDVR0O",
      "BBYEFCX20aoQddqjbga66nppwRlJdvB8MB8GA1UdIwQYMBaAFCX20aoQddqjbga6",
      "6nppwRlJdvB8MAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQADggEBAJkFZvAL",
      "joeAiWaEItIPr8+98OJam7Pnta29HoKu4jAHkiunzXxNTQutUMMx1WhBF8OJJX1P",
      "pHhKEfK47W8z4PbsM/hudZfm2xXlFMfvYNAusptJxOhMKNJgJz+gjY5FaTCGD9Ao",
      "JkcshhUgXQ9zvu2Ol390qo0zlxMvnlVacRgKGY/I6hJaktrbdXm7qcReZp06Pw3a",
      "adoKmzXeUlPvlbb+8KLXSD7hgUaojLDEgOLpAE++muiAAuwOP2UX3XJOPUQZdicB",
      "sbrBMXO6F253YTqZiwAg9hgEHTHdXgqrd3TQT9P9mazrHxskqk9uWmIgN8oolHjp",
      "OsWSdvMP2tRS8Oo=",
      "-----END CERTIFICATE-----",
      "EOF",
      "",
      "  certificate_private_key = <<EOF",
      "-----BEGIN RSA PRIVATE KEY-----",
      "MIIEpAIBAAKCAQEA24D9Mua4Jtl0dwwpTAVp1Gk2eODdLc+4/0AQIO76YgKs4GY2",
      "p5nrp0STMmo0yrikSjfQv1mVleXt8C+whlM9gsRvSJ5gbJNN2oAqseLwY89l4L6I",
      "DJIpedMqOmdyJNYW/ZPxH20uyA+uy/niiQzn1tgLmZKcPukvpFH9pDSiLh9fZ4l7",
      "Hl+l8WVzGb0e+9UR1ar38JA2gI6kaEtP3XUxFUxSXdLXQGbNMbxDzs/vqOIDG3e3",
      "mmI+DwkaJIEdNQmYrD+PFzCHJtYdp//bXtGZKZ6hOjjTAwIHZvTlGp1I6bnf2oui",
      "2uO3bDecUrObjbdxWiTfLbDnmEuQMJsOXFQrWQIDAQABAoIBAHzvoC42sB48q1OP",
      "Mno4opHqCL0oj/uhPdTa69My8oSSrT9ULkubCkw8deO+G6o/ChPMTR58qO2W36VU",
      "H491FY+2qviUXKGv/iIdzS9O0jCdPYl8KQeusbjLfj+b3ZYl3RQb/qQ6iuQIOR+U",
      "bWJAXD0m3wNcNV6Bb0KCAHJUGvNQjiueMMVEND1Pvb9WogFWY7yvteoxv9ASFiRv",
      "1N2LDlm/199/Tpmb9a9vVrIuT8pZfAtmVfZ5HhwV8xU1q2qbys1j9DpZPggHnT4l",
      "CzIw7pALbaE8/sG17h6+icl13cKLpgp63HyJFgik1v1NDnCmzckrNAiSW4lZsgzM",
      "BV3m9hkCgYEA7qboVDv6FvwwwyILbd3aYjLjCqNjDzpvngJrOl6/cDDQR34NQPzI",
      "3ePYO1p99xRYmQe0FJ7ZuJtOQHJOdeLEJqeo6lNMI9T+FhKnqk7Gy7ZQI0PNP2x6",
      "tpfoa27emeDblu+AVSBIZjByS+Cpf/Mnf4/DhhofAMdT4TFyng/JbbMCgYEA63XA",
      "tHE8BwxY/6NxR/pGlRi0AbZfjfU40/q+309NNGrGyDZfoYpbG9I6Wo09Rc+QDhEq",
      "2+zk59ubO1jkgh9eIOBm6+5yHjcbwftBsxesQQdabAg34ppFYMfvKsLgDnejvYEW",
      "pfLmMAvcmIFGWid9hX5/ShbjjkJnIKSbu/vN9MMCgYEAoFhyZw45NTJSjPkV1sal",
      "0S7Bj0dB6lxn3DFh3EEGvRl/B1nxC8YMK9HHWfGuCtGXyZH8c5JbVIa8p95lSx2G",
      "jzY87tvyn2yfHzN/hZUSSpL++wK2J7P6Ky6bkXtXguoqgBoBDrD3E/nfAY48NGSq",
      "GDH+u95XEE3c1MRFb1/KBbMCgYEAo2VgqBdYR6/a5vPd/cwBRSASconDf7inifsc",
      "j8zxT6m1bmTFMk3X8dOOqR4QYiyq1Ag3zMx1AS0VaTbDxETORlRTN/CNgshNW+zn",
      "Z8fKwom+xu9hEMBr2sCECRGY+JEvsKcvN1P7R2ZD3BUB5Dg5U/U3kguWODd+Z1mz",
      "tN0FzI8CgYBx9giIe7aAItxl43p6tPsMW6ROlXEjWit2XBlaDdY5t48k8KJ2clk/",
      "IHu8B12R2mN+lMn9mkOa4mSb9MrVQZ2FGg4lUAQro519NVBcVqoRsEDn1kHd+hhl",
      "L6c41r4AZ3Iyvr3MYoSohogBbAnd6TW14NjvBHceREhAqvmIWlWmAQ==",
      "-----END RSA PRIVATE KEY-----",
      "EOF",
      "}"
    ]
  },
  "brightbox-resource-orbit_container": {
    "description": "Defines orbit_container",
    "prefix": "tf-brightbox-resource-orbit_container",
    "body": [
      "# Example Container",
      "resource \"brightbox_orbit_container\" \"initial\" {",
      "  name = \"initial\"",
      "  metadata {",
      "    \"description\" = \"Initial database snapshots\"",
      "  }",
      "  container_read = \"acc-testy,acc-12345\"",
      "}"
    ]
  },
  "brightbox-resource-server": {
    "description": "Defines server",
    "prefix": "tf-brightbox-resource-server",
    "body": [
      "# Create a new 512Mb SSD Web Server in the gb1-a zone",
      "resource \"brightbox_server\" \"web\" {",
      "  image  = \"img-testy\"",
      "  name   = \"web-1\"",
      "  zone = \"gb1-a\"",
      "  type = \"512mb.ssd\"",
      "  server_groups = [ \"grp-testy\" ]",
      "}"
    ]
  },
  "brightbox-resource-server_group": {
    "description": "Defines server_group",
    "prefix": "tf-brightbox-resource-server_group",
    "body": [
      "# Default Server Group",
      "# the instances over SSH and HTTP",
      "resource \"brightbox_server_group\" \"default\" {",
      "  name = \"Terraform controlled servers\"",
      "}",
      "",
      "# Create a new 512Mb SSD Web Server in the gb1-a zone",
      "resource \"brightbox_server\" \"web\" {",
      "  image  = \"img-testy\"",
      "  name   = \"web-1\"",
      "  zone = \"gb1-a\"",
      "  type = \"512mb.ssd\"",
      "  server_groups = [\"${brightbox_server_group.default.id}\"]",
      "}"
    ]
  },
  "chef-resource-data_bag": {
    "description": "Defines data_bag",
    "prefix": "tf-chef-resource-data_bag",
    "body": [
      "resource \"chef_data_bag\" \"example\" {",
      "  name = \"example-data-bag\"",
      "}"
    ]
  },
  "chef-resource-data_bag_item": {
    "description": "Defines data_bag_item",
    "prefix": "tf-chef-resource-data_bag_item",
    "body": [
      "resource \"chef_data_bag_item\" \"example\" {",
      "  data_bag_name = \"example-data-bag\"",
      "",
      "  content_json = <<EOT",
      "{",
      "    \"id\": \"example-item\",",
      "    \"any_arbitrary_data\": true",
      "}",
      "EOT",
      "}"
    ]
  },
  "chef-resource-environment": {
    "description": "Defines environment",
    "prefix": "tf-chef-resource-environment",
    "body": [
      "resource \"chef_environment\" \"example\" {",
      "  name = \"example-environment\"",
      "}"
    ]
  },
  "chef-resource-node": {
    "description": "Defines node",
    "prefix": "tf-chef-resource-node",
    "body": [
      "resource \"chef_node\" \"example\" {",
      "  name             = \"example-environment\"",
      "  environment_name = \"${chef_environment.example.name}\"",
      "  run_list         = [\"recipe[example]\", \"role[app_server]\"]",
      "}"
    ]
  },
  "chef-resource-role": {
    "description": "Defines role",
    "prefix": "tf-chef-resource-role",
    "body": [
      "resource \"chef_role\" \"example\" {",
      "  name     = \"example-role\"",
      "  run_list = [\"recipe[example]\"]",
      "}"
    ]
  },
  "circonus-data-account": {
    "description": "Defines account",
    "prefix": "tf-circonus-data-account",
    "body": [
      "data \"circonus_account\" \"current\" {",
      "  current = true",
      "}"
    ]
  },
  "circonus-data-collector": {
    "description": "Defines collector",
    "prefix": "tf-circonus-data-collector",
    "body": [
      "data \"circonus_collector\" \"ashburn\" {",
      "  id = \"/broker/1\"",
      "}"
    ]
  },
  "circonus-resource-check": {
    "description": "Defines check",
    "prefix": "tf-circonus-resource-check",
    "body": [
      "variable api_token {",
      "  default = \"my-token\"",
      "}",
      "",
      "resource \"circonus_check\" \"usage\" {",
      "  name = \"Circonus Usage Check\"",
      "",
      "  notes = <<-EOF",
      "A check to extract a usage metric.",
      "EOF",
      "",
      "  collector {",
      "    id = \"/broker/1\"",
      "  }",
      "",
      "  metric {",
      "    name = \"${circonus_metric.used.name}\"",
      "    tags = \"${circonus_metric.used.tags}\"",
      "    type = \"${circonus_metric.used.type}\"",
      "    unit = \"${circonus_metric.used.unit}\"",
      "  }",
      "",
      "  json {",
      "    url = \"https://api.circonus.com/v2\"",
      "",
      "    headers = {",
      "      Accept                = \"application/json\"",
      "      X-Circonus-App-Name   = \"TerraformCheck\"",
      "      X-Circonus-Auth-Token = \"${var.api_token}\"",
      "    }",
      "  }",
      "",
      "  period       = 60",
      "  tags         = [\"source:circonus\", \"author:terraform\"]",
      "  timeout      = 10",
      "}",
      "",
      "resource \"circonus_metric\" \"used\" {",
      "  name = \"_usage`0`_used\"",
      "  type = \"numeric\"",
      "  unit = \"qty\"",
      "",
      "  tags = {",
      "    source = \"circonus\"",
      "  }",
      "}"
    ]
  },
  "circonus-resource-contact_group": {
    "description": "Defines contact_group",
    "prefix": "tf-circonus-resource-contact_group",
    "body": [
      "resource \"circonus_contact_group\" \"myteam-alerts\" {",
      "  name = \"MyTeam Alerts\"",
      "",
      "  email {",
      "    user = \"/user/1234\"",
      "  }",
      "",
      "  email {",
      "    user = \"/user/5678\"",
      "  }",
      "",
      "  email {",
      "    address = \"user@example.com\"",
      "  }",
      "",
      "  http {",
      "    address = \"https://www.example.org/post/endpoint\"",
      "    format = \"json\"",
      "    method = \"POST\"",
      "  }",
      "",
      "  irc {",
      "    user = \"/user/6331\"",
      "  }",
      "",
      "  slack {",
      "    channel = \"#myteam\"",
      "    team = \"T038UT13D\"",
      "  }",
      "",
      "  sms {",
      "    user = \"/user/1234\"",
      "  }",
      "",
      "  sms {",
      "    address = \"8005551212\"",
      "  }",
      "",
      "  victorops {",
      "    api_key = \"xxxx\"",
      "    critical = 2",
      "    info = 5",
      "    team = \"myteam\"",
      "    warning = 3",
      "  }",
      "",
      "  xmpp {",
      "    user = \"/user/9876\"",
      "  }",
      "",
      "  aggregation_window = \"5m\"",
      "",
      "  alert_option {",
      "    severity = 1",
      "    reminder = \"5m\"",
      "    escalate_to = \"/contact_group/4444\"",
      "  }",
      "",
      "  alert_option {",
      "    severity = 2",
      "    reminder = \"15m\"",
      "    escalate_after = \"2h\"",
      "    escalate_to = \"/contact_group/4444\"",
      "  }",
      "",
      "  alert_option {",
      "    severity = 3",
      "    reminder = \"24m\"",
      "    escalate_after = \"3d\"",
      "    escalate_to = \"/contact_group/4444\"",
      "  }",
      "}"
    ]
  },
  "circonus-resource-graph": {
    "description": "Defines graph",
    "prefix": "tf-circonus-resource-graph",
    "body": [
      "variable \"myapp-tags\" {",
      "  type    = \"list\"",
      "  default = [ \"app:myapp\", \"owner:myteam\" ]",
      "}",
      "",
      "resource \"circonus_graph\" \"latency-graph\" {",
      "  name        = \"Latency Graph\"",
      "  description = \"A sample graph showing off two data points\"",
      "  notes       = \"Misc notes about this graph\"",
      "  graph_style = \"line\"",
      "  line_style  = \"stepped\"",
      "",
      "  metric {",
      "    check       = \"${circonus_check.api_latency.checks[0]}\"",
      "    metric_name = \"maximum\"",
      "    metric_type = \"numeric\"",
      "    name        = \"Maximum Latency\"",
      "    axis        = \"left\"",
      "    color       = \"#657aa6\"",
      "  }",
      "",
      "  metric {",
      "    check       = \"${circonus_check.api_latency.checks[0]}\"",
      "    metric_name = \"minimum\"",
      "    metric_type = \"numeric\"",
      "    name        = \"Minimum Latency\"",
      "    axis        = \"right\"",
      "    color       = \"#0000ff\"",
      "  }",
      "",
      "  tags = [ \"${var.myapp-tags}\" ]",
      "}"
    ]
  },
  "circonus-resource-metric": {
    "description": "Defines metric",
    "prefix": "tf-circonus-resource-metric",
    "body": [
      "resource \"circonus_metric\" \"used\" {",
      "  name  = \"_usage`0`_used\"",
      "  type  = \"numeric\"",
      "  units = \"qty\"",
      "",
      "  tags = {",
      "    author = \"terraform\"",
      "    source = \"circonus\"",
      "  }",
      "}"
    ]
  },
  "circonus-resource-metric_cluster": {
    "description": "Defines metric_cluster",
    "prefix": "tf-circonus-resource-metric_cluster",
    "body": [
      "resource \"circonus_metric_cluster\" \"nomad-job-memory-rss\" {",
      "  name = \"My Job's Resident Memory\"",
      "  description = <<-EOF",
      "An aggregation of all resident memory metric streams across allocations in a Nomad job.",
      "EOF",
      "",
      "  query {",
      "    definition = \"*`nomad-jobname`memory`rss\"",
      "    type       = \"average\"",
      "  }",
      "  tags = [\"source:nomad\",\"resource:memory\"]",
      "}"
    ]
  },
  "circonus-resource-rule_set": {
    "description": "Defines rule_set",
    "prefix": "tf-circonus-resource-rule_set",
    "body": [
      "variable \"myapp-tags\" {",
      "  type    = \"list\"",
      "  default = [ \"app:myapp\", \"owner:myteam\" ]",
      "}",
      "",
      "resource \"circonus_rule_set\" \"myapp-cert-ttl-alert\" {",
      "  check       = \"${circonus_check.myapp-https.checks[0]}\"",
      "  metric_name = \"cert_end_in\"",
      "  link        = \"https://wiki.example.org/playbook/how-to-renew-cert\"",
      "",
      "  if {",
      "    value {",
      "      min_value = \"${2 * 24 * 3600}\"",
      "    }",
      "",
      "    then {",
      "      notify = [ \"${circonus_contact_group.myapp-owners.id}\" ]",
      "      severity = 1",
      "    }",
      "  }",
      "",
      "  if {",
      "    value {",
      "      min_value = \"${7 * 24 * 3600}\"",
      "    }",
      "",
      "    then {",
      "      notify = [ \"${circonus_contact_group.myapp-owners.id}\" ]",
      "      severity = 2",
      "    }",
      "  }",
      "",
      "  if {",
      "    value {",
      "      min_value = \"${21 * 24 * 3600}\"",
      "    }",
      "",
      "    then {",
      "      notify = [ \"${circonus_contact_group.myapp-owners.id}\" ]",
      "      severity = 3",
      "    }",
      "  }",
      "",
      "  if {",
      "    value {",
      "      absent = \"24h\"",
      "    }",
      "",
      "    then {",
      "      notify = [ \"${circonus_contact_group.myapp-owners.id}\" ]",
      "      severity = 1",
      "    }",
      "  }",
      "",
      "  tags = [ \"${var.myapp-tags}\" ]",
      "}",
      "",
      "resource \"circonus_rule_set\" \"myapp-healthy-alert\" {",
      "  check = \"${circonus_check.myapp-https.checks[0]}\"",
      "  metric_name = \"duration\"",
      "  link = \"https://wiki.example.org/playbook/debug-down-app\"",
      "",
      "  if {",
      "    value {",
      "      # SEV1 if it takes more than 9.5s for us to complete an HTTP request",
      "      max_value = \"${9.5 * 1000}\"",
      "    }",
      "",
      "    then {",
      "      notify = [ \"${circonus_contact_group.myapp-owners.id}\" ]",
      "      severity = 1",
      "    }",
      "  }",
      "",
      "  if {",
      "    value {",
      "      # SEV2 if it takes more than 5s for us to complete an HTTP request",
      "      max_value = \"${5 * 1000}\"",
      "    }",
      "",
      "    then {",
      "      notify = [ \"${circonus_contact_group.myapp-owners.id}\" ]",
      "      severity = 2",
      "    }",
      "  }",
      "",
      "  if {",
      "    value {",
      "      # SEV3 if the average response time is more than 500ms using a moving",
      "      # average over the last 10min.  Any transient problems should have",
      "      # resolved themselves by now.  Something's wrong, need to page someone.",
      "      over {",
      "        last  = \"10m\"",
      "        using = \"average\"",
      "      }",
      "      max_value = \"500\"",
      "    }",
      "",
      "    then {",
      "      notify = [ \"${circonus_contact_group.myapp-owners.id}\" ]",
      "      severity = 3",
      "    }",
      "  }",
      "",
      "  if {",
      "    value {",
      "      # SEV4 if it takes more than 500ms for us to complete an HTTP request.  We",
      "      # want to record that things were slow, but not wake anyone up if it",
      "      # momentarily pops above 500ms.",
      "      min_value = \"500\"",
      "    }",
      "",
      "    then {",
      "      notify   = [ \"${circonus_contact_group.myapp-owners.id}\" ]",
      "      severity = 3",
      "    }",
      "  }",
      "",
      "  if {",
      "    value {",
      "      # If for whatever reason we're not recording any values for the last",
      "      # 24hrs, fire off a SEV1.",
      "      absent = \"24h\"",
      "    }",
      "",
      "    then {",
      "      notify = [ \"${circonus_contact_group.myapp-owners.id}\" ]",
      "      severity = 1",
      "    }",
      "  }",
      "",
      "  tags = [ \"${var.myapp-tags}\" ]",
      "}",
      "",
      "resource \"circonus_contact_group\" \"myapp-owners\" {",
      "  name = \"My App Owners\"",
      "  tags = [ \"${var.myapp-tags}\" ]",
      "}",
      "",
      "resource \"circonus_check\" \"myapp-https\" {",
      "  name = \"My App's HTTPS Check\"",
      "",
      "  notes = <<-EOF",
      "A check to create metric streams for Time to First Byte, HTTP transaction",
      "duration, and the TTL of a TLS cert.",
      "EOF",
      "",
      "  collector {",
      "    id = \"/broker/1\"",
      "  }",
      "",
      "  http {",
      "    code = \"^200$\"",
      "    headers = {",
      "      X-Request-Type = \"health-check\",",
      "    }",
      "    url = \"https://www.example.com/myapp/healthz\"",
      "  }",
      "",
      "  metric {",
      "    name = \"${circonus_metric.myapp-cert-ttl.name}\"",
      "    tags = \"${circonus_metric.myapp-cert-ttl.tags}\"",
      "    type = \"${circonus_metric.myapp-cert-ttl.type}\"",
      "    unit = \"${circonus_metric.myapp-cert-ttl.unit}\"",
      "  }",
      "",
      "  metric {",
      "    name = \"${circonus_metric.myapp-duration.name}\"",
      "    tags = \"${circonus_metric.myapp-duration.tags}\"",
      "    type = \"${circonus_metric.myapp-duration.type}\"",
      "    unit = \"${circonus_metric.myapp-duration.unit}\"",
      "  }",
      "",
      "  period       = 60",
      "  tags         = [\"source:circonus\", \"author:terraform\"]",
      "  timeout      = 10",
      "}",
      "",
      "resource \"circonus_metric\" \"myapp-cert-ttl\" {",
      "  name = \"cert_end_in\"",
      "  type = \"numeric\"",
      "  unit = \"seconds\"",
      "  tags = [ \"${var.myapp-tags}\", \"resource:tls\" ]",
      "}",
      "",
      "resource \"circonus_metric\" \"myapp-duration\" {",
      "  name = \"duration\"",
      "  type = \"numeric\"",
      "  unit = \"miliseconds\"",
      "  tags = [ \"${var.myapp-tags}\" ]",
      "}"
    ]
  },
  "circonus-resource-worksheet": {
    "description": "Defines worksheet",
    "prefix": "tf-circonus-resource-worksheet",
    "body": [
      "variable \"myapp-tags\" {",
      "  type    = \"list\"",
      "  default = [ \"app:myapp\", \"owner:myteam\" ]",
      "}",
      "",
      "resource \"circonus_graph\" \"latency-graph\" {",
      "  name        = \"Latency Graph\"",
      "  description = \"A sample graph showing off two data points\"",
      "  notes       = \"Misc notes about this graph\"",
      "  graph_style = \"line\"",
      "  line_style  = \"stepped\"",
      "",
      "  metric {",
      "    check       = \"${circonus_check.api_latency.checks[0]}\"",
      "    metric_name = \"maximum\"",
      "    metric_type = \"numeric\"",
      "    name        = \"Maximum Latency\"",
      "    axis        = \"left\"",
      "    color       = \"#657aa6\"",
      "  }",
      "",
      "  metric {",
      "    check       = \"${circonus_check.api_latency.checks[0]}\"",
      "    metric_name = \"minimum\"",
      "    metric_type = \"numeric\"",
      "    name        = \"Minimum Latency\"",
      "    axis        = \"right\"",
      "    color       = \"#0000ff\"",
      "  }",
      "",
      "  tags = [ \"${var.myapp-tags}\" ]",
      "}",
      "",
      "resource \"circonus_worksheet\" \"myapp_latency\" {",
      "  title = \"MyApp: Latencies\"",
      "  graphs = [",
      "    \"${circonus_graph.latency-graph.id}\",",
      "  ]",
      "}",
      "",
      "resource \"circonus_worksheet\" \"service_myapp\" {",
      "  title = \"Service: MyApp\"",
      "  smart_queries = [",
      "    {",
      "      name  = \"MyApp\"",
      "      query = \"(tags:${var.myapp-tags})\"",
      "    }",
      "  ]",
      "}"
    ]
  },
  "ciscoasa-resource-access_in_rules": {
    "description": "Defines access_in_rules",
    "prefix": "tf-ciscoasa-resource-access_in_rules",
    "body": [
      "resource \"ciscoasa_access_in_rules\" \"foo\" {",
      "  interface = \"inside\"",
      "  rule {",
      "    source              = \"192.168.10.5/32\"",
      "    destination         = \"192.168.15.0/25\"",
      "    destination_service = \"tcp/443\"",
      "  }",
      "  rule {",
      "    source              = \"192.168.10.0/24\"",
      "\t\tsource_service      = \"udp\"",
      "    destination         = \"192.168.15.6/32\"",
      "    destination_service = \"udp/53\"",
      "  }",
      "  rule {",
      "    source              = \"192.168.10.0/23\"",
      "    destination         = \"192.168.12.0/23\"",
      "    destination_service = \"icmp/0\"",
      "  }",
      "}"
    ]
  },
  "ciscoasa-resource-access_out_rules": {
    "description": "Defines access_out_rules",
    "prefix": "tf-ciscoasa-resource-access_out_rules",
    "body": [
      "resource \"ciscoasa_access_out_rules\" \"foo\" {",
      "  interface = \"inside\"",
      "  rule {",
      "    source              = \"192.168.10.5/32\"",
      "    destination         = \"192.168.15.0/25\"",
      "    destination_service = \"tcp/443\"",
      "  }",
      "  rule {",
      "    source              = \"192.168.10.0/24\"",
      "\t\tsource_service      = \"udp\"",
      "    destination         = \"192.168.15.6/32\"",
      "    destination_service = \"udp/53\"",
      "  }",
      "  rule {",
      "    source              = \"192.168.10.0/23\"",
      "    destination         = \"192.168.12.0/23\"",
      "    destination_service = \"icmp/0\"",
      "  }",
      "}"
    ]
  },
  "ciscoasa-resource-acl": {
    "description": "Defines acl",
    "prefix": "tf-ciscoasa-resource-acl",
    "body": [
      "resource \"ciscoasa_acl\" \"foo\" {",
      "  name = \"aclname\"",
      "  rule {",
      "    source              = \"192.168.10.5/32\"",
      "    destination         = \"192.168.15.0/25\"",
      "    destination_service = \"tcp/443\"",
      "  }",
      "  rule {",
      "    source              = \"192.168.10.0/24\"",
      "    source_service      = \"udp\"",
      "    destination         = \"192.168.15.6/32\"",
      "    destination_service = \"udp/53\"",
      "  }",
      "  rule {",
      "    source              = \"192.168.10.0/23\"",
      "    destination         = \"192.168.12.0/23\"",
      "    destination_service = \"icmp/0\"",
      "  }",
      "}"
    ]
  },
  "ciscoasa-resource-network_object": {
    "description": "Defines network_object",
    "prefix": "tf-ciscoasa-resource-network_object",
    "body": [
      "resource \"ciscoasa_network_object\" \"ipv4host\" {",
      "  name  = \"ipv4_host\"",
      "  value = \"192.168.10.5\"",
      "}",
      "resource \"ciscoasa_network_object\" \"ipv4range\" {",
      "  name  = \"ipv4_range\"",
      "  value = \"192.168.10.5-192.168.10.15\"",
      "}",
      "resource \"ciscoasa_network_object\" \"ipv4_subnet\" {",
      "  name  = \"ipv4_subnet\"",
      "  value = \"192.168.10.128/25\"",
      "}"
    ]
  },
  "ciscoasa-resource-network_object_group": {
    "description": "Defines network_object_group",
    "prefix": "tf-ciscoasa-resource-network_object_group",
    "body": [
      "resource \"ciscoasa_network_object\" \"ipv4host\" {",
      "  name  = \"my_object\"",
      "  value = \"192.168.10.5\"",
      "}",
      "",
      "resource \"ciscoasa_network_object_group\" \"objgrp_mixed\" {",
      "  name = \"my_group\"",
      "",
      "  members = [",
      "    \"${ciscoasa_network_object.obj_ipv4host.name}\",",
      "    \"192.168.10.15\",",
      "  \t\"10.5.10.0/24\",",
      "  ]",
      "}"
    ]
  },
  "ciscoasa-resource-network_service_group": {
    "description": "Defines network_service_group",
    "prefix": "tf-ciscoasa-resource-network_service_group",
    "body": [
      "resource \"ciscoasa_network_service_group\" \"service_group\" {",
      "  name = \"service_group\"",
      "  ",
      "  members = [",
      "    \"tcp/80\",",
      "    \"udp/53\",",
      "    \"tcp/6001-6500\",",
      "    \"icmp/0\",",
      "  ]",
      "}"
    ]
  },
  "ciscoasa-resource-static_route": {
    "description": "Defines static_route",
    "prefix": "tf-ciscoasa-resource-static_route",
    "body": [
      "resource \"ciscoasa_static_route\" \"ipv4_static_route\" {",
      "  interface = \"inside\"",
      "  network   = \"10.254.0.0/16\"",
      "  gateway   = \"192.168.10.20\"",
      "}",
      "",
      "resource \"ciscoasa_static_route\" \"ipv6_static_route\" {",
      "  interface = \"inside\"",
      "  network   = \"fd01:1337::/64\"",
      "  gateway   = \"fd01:1338::1\"",
      "}"
    ]
  },
  "clc-resource-group": {
    "description": "Defines group",
    "prefix": "tf-clc-resource-group",
    "body": [
      "# Provision/Resolve a server group",
      "resource \"clc_group\" \"frontends\" {",
      "  location_id = \"WA1\"",
      "  name        = \"frontends\"",
      "  parent      = \"Default Group\"",
      "}",
      "",
      "output \"group_id\" {",
      "  value = \"clc_group.frontends.id\"",
      "}"
    ]
  },
  "clc-resource-load_balancer": {
    "description": "Defines load_balancer",
    "prefix": "tf-clc-resource-load_balancer",
    "body": [
      "# Provision a load balancer",
      "resource \"clc_load_balancer\" \"api\" {",
      "  data_center = \"${clc_group.frontends.location_id}\"",
      "  name        = \"api\"",
      "  description = \"api load balancer\"",
      "  status      = \"enabled\"",
      "}",
      "",
      "output \"api_ip\" {",
      "  value = \"clc_load_balancer.api.ip_address\"",
      "}"
    ]
  },
  "clc-resource-load_balancer_pool": {
    "description": "Defines load_balancer_pool",
    "prefix": "tf-clc-resource-load_balancer_pool",
    "body": [
      "# Provision a load balancer pool",
      "resource \"clc_load_balancer_pool\" \"pool\" {",
      "  data_center   = \"${clc_group.frontends.location_id}\"",
      "  load_balancer = \"${clc_load_balancer.api.id}\"",
      "  method        = \"roundRobin\"",
      "  persistence   = \"standard\"",
      "  port          = 80",
      "",
      "  nodes {",
      "    status      = \"enabled\"",
      "    ipAddress   = \"${clc_server.node.0.private_ip_address}\"",
      "    privatePort = 3000",
      "  }",
      "",
      "  nodes {",
      "    status      = \"enabled\"",
      "    ipAddress   = \"${clc_server.node.1.private_ip_address}\"",
      "    privatePort = 3000",
      "  }",
      "}",
      "",
      "output \"pool\" {",
      "  value = \"${join(\" \", clc_load_balancer.pool.nodes)}\"",
      "}"
    ]
  },
  "clc-resource-public_ip": {
    "description": "Defines public_ip",
    "prefix": "tf-clc-resource-public_ip",
    "body": [
      "# Provision a public ip",
      "resource \"clc_public_ip\" \"backdoor\" {",
      "  server_id           = \"${clc_server.node.0.id}\"",
      "  internal_ip_address = \"${clc_server.node.0.private_ip_address}\"",
      "",
      "  ports {",
      "    protocol = \"ICMP\"",
      "    port     = -1",
      "  }",
      "",
      "  ports {",
      "    protocol = \"TCP\"",
      "    port     = 22",
      "  }",
      "",
      "  ports {",
      "    protocol = \"TCP\"",
      "    port     = 2000",
      "    port_to  = 9000",
      "  }",
      "",
      "  source_restrictions {",
      "    cidr = \"85.39.22.15/30\"",
      "  }",
      "}",
      "",
      "output \"ip\" {",
      "  value = \"clc_public_ip.backdoor.id\"",
      "}"
    ]
  },
  "clc-resource-server": {
    "description": "Defines server",
    "prefix": "tf-clc-resource-server",
    "body": [
      "# Provision a server",
      "resource \"clc_server\" \"node\" {",
      "  name_template    = \"trusty\"",
      "  source_server_id = \"UBUNTU-14-64-TEMPLATE\"",
      "  group_id         = \"${clc_group.frontends.id}\"",
      "  cpu              = 2",
      "  memory_mb        = 2048",
      "  password         = \"Green123$\"",
      "",
      "  additional_disks {",
      "    path    = \"/var\"",
      "    size_gb = 100",
      "    type    = \"partitioned\"",
      "  }",
      "",
      "  additional_disks {",
      "    size_gb = 10",
      "    type    = \"raw\"",
      "  }",
      "}",
      "",
      "output \"server_id\" {",
      "  value = \"clc_server.node.id\"",
      "}"
    ]
  },
  "cloudflare-data-ip_ranges": {
    "description": "Defines ip_ranges",
    "prefix": "tf-cloudflare-data-ip_ranges",
    "body": [
      "data \"cloudflare_ip_ranges\" \"cloudflare\" {}",
      "",
      "resource \"google_compute_firewall\" \"allow_cloudflare_ingress\" {",
      "  name    = \"from-cloudflare\"",
      "  network = \"default\"",
      "",
      "  source_ranges = [\"${data.cloudflare_ip_ranges.cloudflare.ipv4_cidr_blocks}\"]",
      "  ",
      "  allow {",
      "    ports    = \"443\"",
      "    protocol = \"tcp\"",
      "  }",
      "}"
    ]
  },
  "cloudflare-data-zones": {
    "description": "Defines zones",
    "prefix": "tf-cloudflare-data-zones",
    "body": [
      "data \"cloudflare_zones\" \"test\" {",
      "  filter {",
      "    name   = \"example.*\"",
      "    status = \"active\"",
      "    paused = false",
      "  }",
      "}",
      "",
      "resource \"cloudflare_zone_lockdown\" \"endpoint_lockdown\" {",
      "  zone        = \"${lookup(data.cloudflare_zones.test.zones[0], \"name\")}\"",
      "  paused      = \"false\"",
      "  description = \"Restrict access to these endpoints to requests from a known IP address\"",
      "  urls = [",
      "    \"api.mysite.com/some/endpoint*\",",
      "  ]",
      "  configurations {",
      "    target = \"ip\"",
      "    value = \"198.51.100.4\"",
      "  }",
      "}"
    ]
  },
  "cloudflare-resource-access_application": {
    "description": "Defines access_application",
    "prefix": "tf-cloudflare-resource-access_application",
    "body": [
      "resource \"cloudflare_access_application\" \"staging_app\" {",
      "  zone_id          = \"1d5fdc9e88c8a8c4518b068cd94331fe\"",
      "  name             = \"staging application\"",
      "  domain           = \"staging.example.com\"",
      "  session_duration = \"24h\"",
      "}"
    ]
  },
  "cloudflare-resource-access_policy": {
    "description": "Defines access_policy",
    "prefix": "tf-cloudflare-resource-access_policy",
    "body": [
      "# Allowing access to `test@example.com` email address only",
      "resource \"cloudflare_access_policy\" \"test_policy\" {",
      "  application_id = \"cb029e245cfdd66dc8d2e570d5dd3322\"",
      "  zone_id        = \"d41d8cd98f00b204e9800998ecf8427e\"",
      "  name           = \"staging policy\"",
      "  precedence     = \"1\"",
      "  decision       = \"allow\"",
      "",
      "  include {",
      "    email = [\"test@example.com\"]",
      "  }",
      "}",
      "",
      "# Allowing `test@example.com` to access but only when coming from a",
      "# specific IP.",
      "resource \"cloudflare_access_policy\" \"test_policy\" {",
      "  application_id = \"cb029e245cfdd66dc8d2e570d5dd3322\"",
      "  zone_id        = \"d41d8cd98f00b204e9800998ecf8427e\"",
      "  name           = \"staging policy\"",
      "  precedence     = \"1\"",
      "  decision       = \"allow\"",
      "",
      "  include {",
      "    email = [\"test@example.com\"]",
      "  }",
      "",
      "  require = {",
      "    ip = [\"${var.office_ip}\"]",
      "  }",
      "}"
    ]
  },
  "cloudflare-resource-access_rule": {
    "description": "Defines access_rule",
    "prefix": "tf-cloudflare-resource-access_rule",
    "body": [
      "# Challenge requests coming from known Tor exit nodes.",
      "resource \"cloudflare_access_rule\" \"tor_exit_nodes\" {",
      "  notes = \"Requests coming from known Tor exit nodes\"",
      "  mode = \"challenge\"",
      "  configuration {",
      "    target = \"country\"",
      "    value = \"T1\"",
      "  }",
      "}",
      "",
      "# Whitelist (sic!) requests coming from Antarctica, but only for single zone.",
      "resource \"cloudflare_access_rule\" \"antarctica\" {",
      "  notes = \"Requests coming from Antarctica\"",
      "  mode = \"whitelist\"",
      "  configuration {",
      "    target = \"country\"",
      "    value = \"AQ\"",
      "  }",
      "  zone = \"example.com\"",
      "}",
      "",
      "# Whitelist office's network IP ranges on all Organization's zones (or other lists of resources).",
      "# Resulting Terraform state will be a list of resources.",
      "provider \"cloudflare\" {",
      "  # ... other provider configuration",
      "  org_id = \"d41d8cd98f00b204e9800998ecf8427e\"",
      "}",
      "variable \"my_office\" {",
      "  type = \"list\"",
      "  default = [\"192.0.2.0/24\", \"198.51.100.0/24\", \"2001:db8::/56\"]",
      "}",
      "resource \"cloudflare_access_rule\" \"office_network\" {",
      "  count = \"${length(var.my_office)}\"",
      "  notes = \"Requests coming from office network\"",
      "  mode = \"whitelist\"",
      "  configuration {",
      "    target = \"ip_range\"",
      "    value = \"${element(var.my_office, count.index)}\"",
      "  }",
      "}"
    ]
  },
  "cloudflare-resource-account_member": {
    "description": "Defines account_member",
    "prefix": "tf-cloudflare-resource-account_member",
    "body": [
      "resource \"cloudflare_account_member\" \"example_user\" {",
      "  email_address = \"user@example.com\"",
      "  role_ids = [",
      "    \"68b329da9893e34099c7d8ad5cb9c940\",",
      "    \"d784fa8b6d98d27699781bd9a7cf19f0\"",
      "  ]",
      "}"
    ]
  },
  "cloudflare-resource-argo": {
    "description": "Defines argo",
    "prefix": "tf-cloudflare-resource-argo",
    "body": [
      "resource \"cloudflare_argo\" \"example\" {\r",
      "  zone_id        = \"d41d8cd98f00b204e9800998ecf8427e\"\r",
      "  tiered_caching = \"on\"\r",
      "  smart_routing  = \"on\"\r",
      "}\r"
    ]
  },
  "cloudflare-resource-custom_pages": {
    "description": "Defines custom_pages",
    "prefix": "tf-cloudflare-resource-custom_pages",
    "body": [
      "resource \"cloudflare_custom_pages\" \"basic_challenge\" {",
      "  zone_id = \"d41d8cd98f00b204e9800998ecf8427e\"",
      "  type    = \"basic_challenge\"",
      "  url     = \"https://example.com/challenge.html\"",
      "  state   = \"customized\"",
      "}"
    ]
  },
  "cloudflare-resource-filter": {
    "description": "Defines filter",
    "prefix": "tf-cloudflare-resource-filter",
    "body": [
      "resource \"cloudflare_filter\" \"wordpress\" {",
      "  zone_id = \"d41d8cd98f00b204e9800998ecf8427e\"",
      "  description = \"Wordpress break-in attempts that are outside of the office\"",
      "  expression = \"(http.request.uri.path ~ \\\".*wp-login.php\\\" or http.request.uri.path ~ \\\".*xmlrpc.php\\\") and ip.src ne 192.0.2.1\"",
      "}"
    ]
  },
  "cloudflare-resource-firewall_rule": {
    "description": "Defines firewall_rule",
    "prefix": "tf-cloudflare-resource-firewall_rule",
    "body": [
      "resource \"cloudflare_filter\" \"wordpress\" {",
      "  zone_id = \"d41d8cd98f00b204e9800998ecf8427e\"",
      "  description = \"Wordpress break-in attempts that are outside of the office\"",
      "  expression = \"(http.request.uri.path ~ \\\".*wp-login.php\\\" or http.request.uri.path ~ \\\".*xmlrpc.php\\\") and ip.src ne 192.0.2.1\"",
      "}",
      "",
      "resource \"cloudflare_firewall_rule\" \"wordpress\" {",
      "  zone_id = \"d41d8cd98f00b204e9800998ecf8427e\"",
      "  description = \"Block wordpress break-in attempts\"",
      "  filter_id = \"${cloudflare_filter.wordpress.id}\"",
      "  action = \"block\"",
      "}"
    ]
  },
  "cloudflare-resource-load_balancer": {
    "description": "Defines load_balancer",
    "prefix": "tf-cloudflare-resource-load_balancer",
    "body": [
      "# Define a load balancer which always points to a pool we define below",
      "# In normal usage, would have different pools set for different pops (cloudflare points-of-presence) and/or for different regions",
      "# Within each pop or region we can define multiple pools in failover order",
      "resource \"cloudflare_load_balancer\" \"bar\" {",
      "  zone = \"example.com\"",
      "  name = \"example-load-balancer\"",
      "  fallback_pool_id = \"${cloudflare_load_balancer_pool.foo.id}\"",
      "  default_pool_ids = [\"${cloudflare_load_balancer_pool.foo.id}\"]",
      "  description = \"example load balancer using geo-balancing\"",
      "  proxied = true",
      "  steering_policy = \"geo\"",
      "  pop_pools {",
      "    pop = \"LAX\"",
      "    pool_ids = [\"${cloudflare_load_balancer_pool.foo.id}\"]",
      "  }",
      "  region_pools {",
      "    region = \"WNAM\"",
      "    pool_ids = [\"${cloudflare_load_balancer_pool.foo.id}\"]",
      "  }",
      "}",
      "",
      "resource \"cloudflare_load_balancer_pool\" \"foo\" {",
      "  name = \"example-lb-pool\"",
      "  origins {",
      "    name = \"example-1\"",
      "    address = \"192.0.2.1\"",
      "    enabled = false",
      "  }",
      "}"
    ]
  },
  "cloudflare-resource-load_balancer_monitor": {
    "description": "Defines load_balancer_monitor",
    "prefix": "tf-cloudflare-resource-load_balancer_monitor",
    "body": [
      "resource \"cloudflare_load_balancer_monitor\" \"test\" {",
      "  expected_body = \"alive\"",
      "  expected_codes = \"2xx\"",
      "  method = \"GET\"",
      "  timeout = 7",
      "  path = \"/health\"",
      "  interval = 60",
      "  retries = 5",
      "  description = \"example load balancer\"",
      "  header {",
      "    header = \"Host\"",
      "    values = [\"example.com\"]",
      "  }",
      "  allow_insecure = false",
      "  follow_redirects = true",
      "}"
    ]
  },
  "cloudflare-resource-load_balancer_pool": {
    "description": "Defines load_balancer_pool",
    "prefix": "tf-cloudflare-resource-load_balancer_pool",
    "body": [
      "resource \"cloudflare_load_balancer_pool\" \"foo\" {",
      "  name = \"example-pool\"",
      "  origins {",
      "    name = \"example-1\"",
      "    address = \"192.0.2.1\"",
      "    enabled = false",
      "  }",
      "  origins {",
      "    name = \"example-2\"",
      "    address = \"192.0.2.2\"",
      "  }",
      "  description = \"example load balancer pool\"",
      "  enabled = false",
      "  minimum_origins = 1",
      "  notification_email = \"someone@example.com\"",
      "}"
    ]
  },
  "cloudflare-resource-logpush_job": {
    "description": "Defines logpush_job",
    "prefix": "tf-cloudflare-resource-logpush_job",
    "body": [
      "resource \"cloudflare_logpush_job\" \"example_job\" {",
      "  enabled = true",
      "  zone_id = \"d41d8cd98f00b204e9800998ecf8427e\"",
      "  name = \"My-logpush-job\"",
      "  logpull_options = \"fields=RayID,ClientIP,EdgeStartTimestamp&timestamps=rfc3339\"",
      "  destination_conf = \"s3://my-bucket-path?region=us-west-2\"",
      "  ownership_challenge = \"00000000000000000\"",
      "}"
    ]
  },
  "cloudflare-resource-page_rule": {
    "description": "Defines page_rule",
    "prefix": "tf-cloudflare-resource-page_rule",
    "body": [
      "# Add a page rule to the domain",
      "resource \"cloudflare_page_rule\" \"foobar\" {",
      "  zone = \"${var.cloudflare_zone}\"",
      "  target = \"sub.${var.cloudflare_zone}/page\"",
      "  priority = 1",
      "",
      "  actions {",
      "    ssl = \"flexible\"",
      "    email_obfuscation = \"on\"",
      "    minify {",
      "      html = \"off\"",
      "      css  = \"on\"",
      "      js   = \"on\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "cloudflare-resource-rate_limit": {
    "description": "Defines rate_limit",
    "prefix": "tf-cloudflare-resource-rate_limit",
    "body": [
      "resource \"cloudflare_rate_limit\" \"example\" {",
      "  zone = \"${var.cloudflare_zone}\"",
      "  threshold = 2000",
      "  period = 2",
      "  match {",
      "    request {",
      "      url_pattern = \"${var.cloudflare_zone}/*\"",
      "      schemes = [\"HTTP\", \"HTTPS\"]",
      "      methods = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"PATCH\", \"HEAD\"]",
      "    }",
      "    response {",
      "      statuses = [200, 201, 202, 301, 429]",
      "      origin_traffic = false",
      "    }",
      "  }",
      "  action {",
      "    mode = \"simulate\"",
      "    timeout = 43200",
      "    response {",
      "      content_type = \"text/plain\"",
      "      body = \"custom response body\"",
      "    }",
      "  }",
      "  correlate {",
      "    by = \"nat\"",
      "  }",
      "  disabled = false",
      "  description = \"example rate limit for a zone\"",
      "  bypass_url_patterns = [\"${var.cloudflare_zone}/bypass1\",\"${var.cloudflare_zone}/bypass2\"]",
      "}"
    ]
  },
  "cloudflare-resource-record": {
    "description": "Defines record",
    "prefix": "tf-cloudflare-resource-record",
    "body": [
      "# Add a record to the domain",
      "resource \"cloudflare_record\" \"foobar\" {",
      "  domain = \"${var.cloudflare_zone}\"",
      "  name   = \"terraform\"",
      "  value  = \"192.168.0.11\"",
      "  type   = \"A\"",
      "  ttl    = 3600",
      "}",
      "",
      "# Add a record requiring a data map",
      "resource \"cloudflare_record\" \"_sip_tls\" {",
      "  domain = \"${var.cloudflare_zone}\"",
      "  name   = \"_sip._tls\"",
      "  type   = \"SRV\"",
      "",
      "  data = {",
      "    service  = \"_sip\"",
      "    proto    = \"_tls\"",
      "    name     = \"terraform-srv\"",
      "    priority = 0",
      "    weight   = 0",
      "    port     = 443",
      "    target   = \"example.com\"",
      "  }",
      "}"
    ]
  },
  "cloudflare-resource-spectrum_application": {
    "description": "Defines spectrum_application",
    "prefix": "tf-cloudflare-resource-spectrum_application",
    "body": [
      "# Define a spectrum application proxies ssh traffic",
      "resource \"cloudflare_spectrum_application\" \"ssh_proxy\" {",
      "  protocol = \"tcp/22\"",
      "  dns = {",
      "    type = \"CNAME\"",
      "    name = \"ssh.example.com\"",
      "  }",
      "",
      "  origin_direct = [",
      "    \"tcp://109.151.40.129:22\"",
      "  ]",
      "}"
    ]
  },
  "cloudflare-resource-waf_rule": {
    "description": "Defines waf_rule",
    "prefix": "tf-cloudflare-resource-waf_rule",
    "body": [
      "resource \"cloudflare_waf_rule\" \"100000\" {",
      "  rule_id = \"100000\"",
      "  zone = \"domain.com\"",
      "  mode = \"simulate\"",
      "}"
    ]
  },
  "cloudflare-resource-worker_route": {
    "description": "Defines worker_route",
    "prefix": "tf-cloudflare-resource-worker_route",
    "body": [
      "# Enables the zone's worker script for all URLs that match `example.com/*`",
      "resource \"cloudflare_worker_route\" \"my_route\" {",
      "  zone = \"example.com\"",
      "  pattern = \"example.com/*\"",
      "  enabled = true",
      "",
      "  # it's recommended to set `depends_on` to point to the cloudflare_worker_script",
      "  # resource in order to make sure that the script is uploaded before the route",
      "  # is created",
      "  depends_on = [\"cloudflare_worker_script.my_script\"]",
      "}",
      "",
      "resource \"cloudflare_worker_script\" \"my_script\" {",
      "  # see \"cloudflare_worker_script\" documentation ...",
      "}"
    ]
  },
  "cloudflare-resource-worker_script": {
    "description": "Defines worker_script",
    "prefix": "tf-cloudflare-resource-worker_script",
    "body": [
      "# Sets the script for the example.com zone",
      "resource \"cloudflare_worker_script\" \"my_script\" {",
      "  zone = \"example.com\"",
      "  content = \"${file(\"script.js\")}\"",
      "}"
    ]
  },
  "cloudflare-resource-zone": {
    "description": "Defines zone",
    "prefix": "tf-cloudflare-resource-zone",
    "body": [
      "resource \"cloudflare_zone\" \"example\" {",
      "    zone = \"example.com\"",
      "}"
    ]
  },
  "cloudflare-resource-zone_lockdown": {
    "description": "Defines zone_lockdown",
    "prefix": "tf-cloudflare-resource-zone_lockdown",
    "body": [
      "# Restrict access to these endpoints to requests from a known IP address.",
      "resource \"cloudflare_zone_lockdown\" \"endpoint_lockdown\" {",
      "  zone        = \"api.mysite.com\"",
      "  paused      = \"false\"",
      "  description = \"Restrict access to these endpoints to requests from a known IP address\"",
      "  urls = [",
      "    \"api.mysite.com/some/endpoint*\",",
      "  ]",
      "  configurations {",
      "    target = \"ip\"",
      "    value = \"198.51.100.4\"",
      "  }",
      "}"
    ]
  },
  "cloudflare-resource-zone_settings_override": {
    "description": "Defines zone_settings_override",
    "prefix": "tf-cloudflare-resource-zone_settings_override",
    "body": [
      "resource \"cloudflare_zone_settings_override\" \"test\" {",
      "\tname = \"${var.cloudflare_zone}\"",
      "\tsettings {",
      "\t\tbrotli = \"on\"",
      "\t\tchallenge_ttl = 2700",
      "\t\tsecurity_level = \"high\"",
      "\t\topportunistic_encryption = \"on\"",
      "\t\tautomatic_https_rewrites = \"on\"",
      "\t\tmirage = \"on\"",
      "\t\twaf = \"on\"",
      "\t\tminify {",
      "\t\t\tcss = \"on\"",
      "\t\t\tjs = \"off\"",
      "\t\t\thtml = \"off\"",
      "\t\t}",
      "\t\tsecurity_header {",
      "\t\t\tenabled = true",
      "\t\t}",
      "\t}",
      "}"
    ]
  },
  "cloudscale-resource-floating_ip": {
    "description": "Defines floating_ip",
    "prefix": "tf-cloudscale-resource-floating_ip",
    "body": [
      "# Create a new Server",
      "resource \"cloudscale_server\" \"web-worker01\" {",
      "  name        = \"web-worker01\"",
      "  flavor_slug = \"flex-4\"",
      "  image_slug  = \"debian-9\"",
      "  ssh_keys    = [\"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL2jzgla23DfRVLQr3KT20QQYovqCCN3clHrjm2ZuQFW user@example.com\"]",
      "}",
      "",
      "# Add a Floating IPv4 address to web-worker01",
      "resource \"cloudscale_floating_ip\" \"web-worker01-vip\" {",
      "  server      = \"${cloudscale_server.web-worker01.id}\"",
      "  ip_version  = 4",
      "  reverse_ptr = \"vip.web-worker01.example.com\"",
      "}",
      "",
      "# Add a Floating IPv6 network to web-worker01",
      "resource \"cloudscale_floating_ip\" \"web-worker01-net\" {",
      "  server        = \"${cloudscale_server.web-worker01.id}\"",
      "  ip_version    = 6",
      "  prefix_length = 56",
      "}"
    ]
  },
  "cloudscale-resource-server": {
    "description": "Defines server",
    "prefix": "tf-cloudscale-resource-server",
    "body": [
      "# Create a new Server",
      "resource \"cloudscale_server\" \"web-worker01\" {",
      "  name                = \"web-worker01\"",
      "  flavor_slug         = \"flex-4\"",
      "  image_slug          = \"debian-9\"",
      "  volume_size_gb      = 10",
      "  ssh_keys            = [\"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL2jzgla23DfRVLQr3KT20QQYovqCCN3clHrjm2ZuQFW user@example.com\"]",
      "}"
    ]
  },
  "cloudscale-resource-server_group": {
    "description": "Defines server_group",
    "prefix": "tf-cloudscale-resource-server_group",
    "body": [
      "# Add a server group with anti affinity",
      "resource \"cloudscale_server_group\" \"web-worker-group\" {",
      "  name = \"web-worker-group\"",
      "  type = \"anti-affinity\"",
      "}",
      "# Create three new servers in that group",
      "resource \"cloudscale_server\" \"web-worker01\" {",
      "  count            = 3",
      "  name             = \"web-worker${count.index}\"",
      "  flavor_slug      = \"flex-4\"",
      "  image_slug       = \"debian-9\"",
      "  server_group_ids = [\"${cloudscale_server_group.web-worker-group.id}\"]",
      "  ssh_keys         = [\"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL2jzgla23DfRVLQr3KT20QQYovqCCN3clHrjm2ZuQFW user@example.com\"]",
      "}"
    ]
  },
  "cloudscale-resource-volume": {
    "description": "Defines volume",
    "prefix": "tf-cloudscale-resource-volume",
    "body": [
      "# Create a new Server",
      "resource \"cloudscale_server\" \"web-worker01\" {",
      "  name        = \"web-worker01\"",
      "  flavor_slug = \"flex-4\"",
      "  image_slug  = \"debian-9\"",
      "  ssh_keys    = [\"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIL2jzgla23DfRVLQr3KT20QQYovqCCN3clHrjm2ZuQFW user@example.com\"]",
      "}",
      "",
      "# Add a Volume to web-worker01",
      "resource \"cloudscale_volume\" \"web-worker01-volume\" {",
      "  name         = \"web-worker-data\"",
      "  size_gb      = 100",
      "  type         = \"ssd\"",
      "  server_uuids = [\"${cloudscale_server.web-worker01.id}\"]",
      "}"
    ]
  },
  "cloudstack-data-template": {
    "description": "Defines template",
    "prefix": "tf-cloudstack-data-template",
    "body": [
      "data \"cloudstack_template\" \"my_template\" {",
      "  template_filter = \"featured\"",
      "",
      "  filter {",
      "    name = \"name\"",
      "    value = \"CentOS 7\\\\.1\"",
      "  }",
      "",
      "  filter {",
      "    name = \"hypervisor\"",
      "    value = \"KVM\"",
      "  }",
      "}"
    ]
  },
  "cloudstack-resource-affinity_group": {
    "description": "Defines affinity_group",
    "prefix": "tf-cloudstack-resource-affinity_group",
    "body": [
      "resource \"cloudstack_affinity_group\" \"default\" {",
      "  name = \"test-affinity-group\"",
      "  type = \"host anti-affinity\"",
      "}"
    ]
  },
  "cloudstack-resource-disk": {
    "description": "Defines disk",
    "prefix": "tf-cloudstack-resource-disk",
    "body": [
      "resource \"cloudstack_disk\" \"default\" {",
      "  name               = \"test-disk\"",
      "  attach             = \"true\"",
      "  disk_offering      = \"custom\"",
      "  size               = 50",
      "  virtual_machine_id = \"server-1\"",
      "  zone               = \"zone-1\"",
      "}"
    ]
  },
  "cloudstack-resource-egress_firewall": {
    "description": "Defines egress_firewall",
    "prefix": "tf-cloudstack-resource-egress_firewall",
    "body": [
      "resource \"cloudstack_egress_firewall\" \"default\" {",
      "  network_id = \"6eb22f91-7454-4107-89f4-36afcdf33021\"",
      "",
      "  rule {",
      "    cidr_list = [\"10.0.0.0/8\"]",
      "    protocol  = \"tcp\"",
      "    ports     = [\"80\", \"1000-2000\"]",
      "  }",
      "}"
    ]
  },
  "cloudstack-resource-firewall": {
    "description": "Defines firewall",
    "prefix": "tf-cloudstack-resource-firewall",
    "body": [
      "resource \"cloudstack_firewall\" \"default\" {",
      "  ip_address_id = \"30b21801-d4b3-4174-852b-0c0f30bdbbfb\"",
      "",
      "  rule {",
      "    cidr_list = [\"10.0.0.0/8\"]",
      "    protocol  = \"tcp\"",
      "    ports     = [\"80\", \"1000-2000\"]",
      "  }",
      "}"
    ]
  },
  "cloudstack-resource-instance": {
    "description": "Defines instance",
    "prefix": "tf-cloudstack-resource-instance",
    "body": [
      "resource \"cloudstack_instance\" \"web\" {",
      "  name             = \"server-1\"",
      "  service_offering = \"small\"",
      "  network_id       = \"6eb22f91-7454-4107-89f4-36afcdf33021\"",
      "  template         = \"CentOS 6.5\"",
      "  zone             = \"zone-1\"",
      "}"
    ]
  },
  "cloudstack-resource-ipaddress": {
    "description": "Defines ipaddress",
    "prefix": "tf-cloudstack-resource-ipaddress",
    "body": [
      "resource \"cloudstack_ipaddress\" \"default\" {",
      "  network_id = \"6eb22f91-7454-4107-89f4-36afcdf33021\"",
      "}"
    ]
  },
  "cloudstack-resource-loadbalancer_rule": {
    "description": "Defines loadbalancer_rule",
    "prefix": "tf-cloudstack-resource-loadbalancer_rule",
    "body": [
      "resource \"cloudstack_loadbalancer_rule\" \"default\" {",
      "  name          = \"loadbalancer-rule-1\"",
      "  description   = \"Loadbalancer rule 1\"",
      "  ip_address_id = \"30b21801-d4b3-4174-852b-0c0f30bdbbfb\"",
      "  algorithm     = \"roundrobin\"",
      "  private_port  = 80",
      "  public_port   = 80",
      "  member_ids    = [\"f8141e2f-4e7e-4c63-9362-986c908b7ea7\"]",
      "}"
    ]
  },
  "cloudstack-resource-network": {
    "description": "Defines network",
    "prefix": "tf-cloudstack-resource-network",
    "body": [
      "resource \"cloudstack_network\" \"default\" {",
      "  name             = \"test-network\"",
      "  cidr             = \"10.0.0.0/16\"",
      "  network_offering = \"Default Network\"",
      "  zone             = \"zone-1\"",
      "}"
    ]
  },
  "cloudstack-resource-network_acl": {
    "description": "Defines network_acl",
    "prefix": "tf-cloudstack-resource-network_acl",
    "body": [
      "resource \"cloudstack_network_acl\" \"default\" {",
      "  name   = \"test-acl\"",
      "  vpc_id = \"76f6e8dc-07e3-4971-b2a2-8831b0cc4cb4\"",
      "}"
    ]
  },
  "cloudstack-resource-network_acl_rule": {
    "description": "Defines network_acl_rule",
    "prefix": "tf-cloudstack-resource-network_acl_rule",
    "body": [
      "resource \"cloudstack_network_acl_rule\" \"default\" {",
      "  acl_id = \"f3843ce0-334c-4586-bbd3-0c2e2bc946c6\"",
      "",
      "  rule {",
      "    action       = \"allow\"",
      "    cidr_list    = [\"10.0.0.0/8\"]",
      "    protocol     = \"tcp\"",
      "    ports        = [\"80\", \"1000-2000\"]",
      "    traffic_type = \"ingress\"",
      "  }",
      "}"
    ]
  },
  "cloudstack-resource-nic": {
    "description": "Defines nic",
    "prefix": "tf-cloudstack-resource-nic",
    "body": [
      "resource \"cloudstack_nic\" \"test\" {",
      "  network_id         = \"6eb22f91-7454-4107-89f4-36afcdf33021\"",
      "  ip_address         = \"192.168.1.1\"",
      "  virtual_machine_id = \"f8141e2f-4e7e-4c63-9362-986c908b7ea7\"",
      "}"
    ]
  },
  "cloudstack-resource-port_forward": {
    "description": "Defines port_forward",
    "prefix": "tf-cloudstack-resource-port_forward",
    "body": [
      "resource \"cloudstack_port_forward\" \"default\" {",
      "  ip_address_id = \"30b21801-d4b3-4174-852b-0c0f30bdbbfb\"",
      "",
      "  forward {",
      "    protocol           = \"tcp\"",
      "    private_port       = 80",
      "    public_port        = 8080",
      "    virtual_machine_id = \"f8141e2f-4e7e-4c63-9362-986c908b7ea7\"",
      "  }",
      "}"
    ]
  },
  "cloudstack-resource-private_gateway": {
    "description": "Defines private_gateway",
    "prefix": "tf-cloudstack-resource-private_gateway",
    "body": [
      "resource \"cloudstack_private_gateway\" \"default\" {",
      "  gateway    = \"10.0.0.1\"",
      "  ip_address = \"10.0.0.2\"",
      "  netmask    = \"255.255.255.252\"",
      "  vlan       = \"200\"",
      "  vpc_id     = \"76f6e8dc-07e3-4971-b2a2-8831b0cc4cb4\"",
      "}"
    ]
  },
  "cloudstack-resource-secondary_ipaddress": {
    "description": "Defines secondary_ipaddress",
    "prefix": "tf-cloudstack-resource-secondary_ipaddress",
    "body": [
      "resource \"cloudstack_secondary_ipaddress\" \"default\" {",
      "  virtual_machine_id = \"server-1\"",
      "}"
    ]
  },
  "cloudstack-resource-security_group": {
    "description": "Defines security_group",
    "prefix": "tf-cloudstack-resource-security_group",
    "body": [
      "resource \"cloudstack_security_group\" \"default\" {",
      "  name        = \"allow_web\"",
      "  description = \"Allow access to HTTP and HTTPS\"",
      "}"
    ]
  },
  "cloudstack-resource-security_group_rule": {
    "description": "Defines security_group_rule",
    "prefix": "tf-cloudstack-resource-security_group_rule",
    "body": [
      "resource \"cloudstack_security_group_rule\" \"web\" {",
      "  security_group_id = \"e340b62b-fbc2-4081-8f67-e40455c44bce\"",
      "",
      "  rule {",
      "    cidr_list = [\"0.0.0.0/0\"]",
      "    protocol  = \"tcp\"",
      "    ports     = [\"80\", \"443\"]",
      "  }",
      "",
      "  rule {",
      "    cidr_list                = [\"192.168.0.0/24\", \"192.168.1.0/25\"]",
      "    protocol                 = \"tcp\"",
      "    ports                    = [\"80-90\", \"443\"]",
      "    traffic_type             = \"egress\"",
      "    user_security_group_list = [\"group01\", \"group02\"]",
      "  }",
      "}"
    ]
  },
  "cloudstack-resource-ssh_keypair": {
    "description": "Defines ssh_keypair",
    "prefix": "tf-cloudstack-resource-ssh_keypair",
    "body": [
      "resource \"cloudstack_ssh_keypair\" \"default\" {",
      "  name       = \"myKey\"",
      "  public_key = \"${file(\"~/.ssh/id_rsa.pub\")}\"",
      "  project    = \"myProject\"",
      "}"
    ]
  },
  "cloudstack-resource-static_nat": {
    "description": "Defines static_nat",
    "prefix": "tf-cloudstack-resource-static_nat",
    "body": [
      "resource \"cloudstack_static_nat\" \"default\" {",
      "  ip_address_id      = \"f8141e2f-4e7e-4c63-9362-986c908b7ea7\"",
      "  virtual_machine_id = \"6ca2a163-bc68-429c-adc8-ab4a620b1bb3\"",
      "}"
    ]
  },
  "cloudstack-resource-static_route": {
    "description": "Defines static_route",
    "prefix": "tf-cloudstack-resource-static_route",
    "body": [
      "resource \"cloudstack_static_route\" \"default\" {",
      "  cidr       = \"10.0.0.0/16\"",
      "  gateway_id = \"76f607e3-e8dc-4971-8831-b2a2b0cc4cb4\"",
      "}"
    ]
  },
  "cloudstack-resource-template": {
    "description": "Defines template",
    "prefix": "tf-cloudstack-resource-template",
    "body": [
      "resource \"cloudstack_template\" \"centos64\" {",
      "  name       = \"CentOS 6.4 x64\"",
      "  format     = \"VHD\"",
      "  hypervisor = \"XenServer\"",
      "  os_type    = \"CentOS 6.4 (64bit)\"",
      "  url        = \"http://someurl.com/template.vhd\"",
      "  zone       = \"zone-1\"",
      "}"
    ]
  },
  "cloudstack-resource-vpc": {
    "description": "Defines vpc",
    "prefix": "tf-cloudstack-resource-vpc",
    "body": [
      "resource \"cloudstack_vpc\" \"default\" {",
      "  name         = \"test-vpc\"",
      "  cidr         = \"10.0.0.0/16\"",
      "  vpc_offering = \"Default VPC Offering\"",
      "  zone         = \"zone-1\"",
      "}"
    ]
  },
  "cloudstack-resource-vpn_connection": {
    "description": "Defines vpn_connection",
    "prefix": "tf-cloudstack-resource-vpn_connection",
    "body": [
      "resource \"cloudstack_vpn_connection\" \"default\" {",
      "  customer_gateway_id = \"8dab9381-ae73-48b8-9a3d-c460933ef5f7\"",
      "  vpn_gateway_id      = \"a7900060-f8a8-44eb-be15-ea54cf499703\"",
      "}"
    ]
  },
  "cloudstack-resource-vpn_customer_gateway": {
    "description": "Defines vpn_customer_gateway",
    "prefix": "tf-cloudstack-resource-vpn_customer_gateway",
    "body": [
      "resource \"cloudstack_vpn_customer_gateway\" \"default\" {",
      "  name       = \"test-vpc\"",
      "  cidr       = \"10.0.0.0/8\"",
      "  esp_policy = \"aes256-sha1;modp1024\"",
      "  gateway    = \"192.168.0.1\"",
      "  ike_policy = \"aes256-sha1;modp1024\"",
      "  ipsec_psk  = \"terraform\"",
      "}"
    ]
  },
  "cloudstack-resource-vpn_gateway": {
    "description": "Defines vpn_gateway",
    "prefix": "tf-cloudstack-resource-vpn_gateway",
    "body": [
      "resource \"cloudstack_vpn_gateway\" \"default\" {",
      "  vpc_id = \"f8141e2f-4e7e-4c63-9362-986c908b7ea7\"",
      "}"
    ]
  },
  "cobbler-resource-distro": {
    "description": "Defines distro",
    "prefix": "tf-cobbler-resource-distro",
    "body": [
      "resource \"cobbler_distro\" \"ubuntu-1404-x86_64\" {",
      "  name       = \"foo\"",
      "  breed      = \"ubuntu\"",
      "  os_version = \"trusty\"",
      "  arch       = \"x86_64\"",
      "  kernel     = \"/var/www/cobbler/ks_mirror/Ubuntu-14.04/install/netboot/ubuntu-installer/amd64/linux\"",
      "  initrd     = \"/var/www/cobbler/ks_mirror/Ubuntu-14.04/install/netboot/ubuntu-installer/amd64/initrd.gz\"",
      "}"
    ]
  },
  "cobbler-resource-kickstart_file": {
    "description": "Defines kickstart_file",
    "prefix": "tf-cobbler-resource-kickstart_file",
    "body": [
      "resource \"cobbler_kickstart_file\" \"my_kickstart\" {",
      "  name = \"/var/lib/cobbler/kickstarts/my_kickstart.ks\"",
      "  body = \"<content of kickstart file>\"",
      "}"
    ]
  },
  "cobbler-resource-profile": {
    "description": "Defines profile",
    "prefix": "tf-cobbler-resource-profile",
    "body": [
      "resource \"cobbler_profile\" \"my_profile\" {",
      "  name      = \"my_profile\"",
      "  distro    = \"ubuntu-1404-x86_64\"",
      "  kickstart = \"/var/lib/cobbler/kickstarts/default.ks\"",
      "}"
    ]
  },
  "cobbler-resource-repo": {
    "description": "Defines repo",
    "prefix": "tf-cobbler-resource-repo",
    "body": [
      "resource \"cobbler_repo\" \"my_repo\" {",
      "  name           = \"my_repo\"",
      "  breed          = \"apt\"",
      "  arch           = \"x86_64\"",
      "  apt_components = [\"main\"]",
      "  apt_dists      = [\"trusty\"]",
      "  mirror         = \"http://us.archive.ubuntu.com/ubuntu/\"",
      "}"
    ]
  },
  "cobbler-resource-snippet": {
    "description": "Defines snippet",
    "prefix": "tf-cobbler-resource-snippet",
    "body": [
      "resource \"cobbler_snippet\" \"my_snippet\" {",
      "  name = \"/var/lib/cobbler/snippets/my_snippet\"",
      "  body = \"<content of snippet>\"",
      "}"
    ]
  },
  "cobbler-resource-system": {
    "description": "Defines system",
    "prefix": "tf-cobbler-resource-system",
    "body": [
      "resource \"cobbler_system\" \"my_system\" {",
      "  name         = \"my_system\"",
      "  profile      = \"${cobbler_profile.my_profile.name}\"",
      "  name_servers = [\"8.8.8.8\", \"8.8.4.4\"]",
      "  comment      = \"I'm a system\"",
      "",
      "  interface {",
      "    name        = \"eth0\"",
      "    mac_address = \"aa:bb:cc:dd:ee:ff\"",
      "    static      = true",
      "    ip_address  = \"1.2.3.4\"",
      "    netmask     = \"255.255.255.0\"",
      "  }",
      "",
      "  interface {",
      "    name        = \"eth1\"",
      "    mac_address = \"aa:bb:cc:dd:ee:fa\"",
      "    static      = true",
      "    ip_address  = \"1.2.3.5\"",
      "    netmask     = \"255.255.255.0\"",
      "  }",
      "}"
    ]
  },
  "consul-data-agent_config": {
    "description": "Defines agent_config",
    "prefix": "tf-consul-data-agent_config",
    "body": [
      "data \"consul_agent_config\" \"remote_agent\" {}",
      "",
      "output \"consul_version\" {",
      "  value = \"${data.consul_agent_config.remote_agent.version}\"",
      "}"
    ]
  },
  "consul-data-agent_self": {
    "description": "Defines agent_self",
    "prefix": "tf-consul-data-agent_self",
    "body": [
      "data \"consul_agent_self\" \"read-dc1-agent\" {",
      "  query_options {",
      "    # Optional parameter: implicitly uses the current datacenter of the agent",
      "    datacenter = \"dc1\"",
      "  }",
      "}",
      "",
      "# Set the description to a whitespace delimited list of the services",
      "resource \"example_resource\" \"app\" {",
      "  description = \"Consul datacenter ${data.consul_agent_self.read-dc1-agent.datacenter}\"",
      "",
      "  # ...",
      "}"
    ]
  },
  "consul-data-autopilot_health": {
    "description": "Defines autopilot_health",
    "prefix": "tf-consul-data-autopilot_health",
    "body": [
      "data \"consul_autopilot_health\" \"read\" {}",
      "",
      "output \"health\" {",
      "  value = \"${data.consul_autopilot_health.read.healthy}\"",
      "}"
    ]
  },
  "consul-data-key_prefix": {
    "description": "Defines key_prefix",
    "prefix": "tf-consul-data-key_prefix",
    "body": [
      "data \"consul_key_prefix\" \"app\" {",
      "  datacenter = \"nyc1\"",
      "  token      = \"abcd\"",
      "",
      "  # Prefix to add to prepend to all of the subkey names below.",
      "  path_prefix = \"myapp/config/\"",
      "",
      "  # Read the ami subkey",
      "  subkey {",
      "    name    = \"ami\"",
      "    path    = \"app/launch_ami\"",
      "    default = \"ami-1234\"",
      "  }",
      "}",
      "",
      "# Start our instance with the dynamic ami value",
      "resource \"aws_instance\" \"app\" {",
      "  ami = \"${data.consul_key_prefix.app.var.ami}\"",
      "",
      "  # ...",
      "}"
    ]
  },
  "consul-data-keys": {
    "description": "Defines keys",
    "prefix": "tf-consul-data-keys",
    "body": [
      "data \"consul_keys\" \"app\" {",
      "  datacenter = \"nyc1\"",
      "  token      = \"abcd\"",
      "",
      "  # Read the launch AMI from Consul",
      "  key {",
      "    name    = \"ami\"",
      "    path    = \"service/app/launch_ami\"",
      "    default = \"ami-1234\"",
      "  }",
      "}",
      "",
      "# Start our instance with the dynamic ami value",
      "resource \"aws_instance\" \"app\" {",
      "  ami = \"${data.consul_keys.app.var.ami}\"",
      "",
      "  # ...",
      "}"
    ]
  },
  "consul-data-nodes": {
    "description": "Defines nodes",
    "prefix": "tf-consul-data-nodes",
    "body": [
      "data \"consul_nodes\" \"read-dc1-nodes\" {",
      "  query_options {",
      "    # Optional parameter: implicitly uses the current datacenter of the agent",
      "    datacenter = \"dc1\"",
      "  }",
      "}",
      "",
      "# Set the description to a whitespace delimited list of the node names",
      "resource \"example_resource\" \"app\" {",
      "  description = \"${join(\" \", formatlist(\"%s\", data.consul_nodes.node_names))}\"",
      "",
      "  # ...",
      "}"
    ]
  },
  "consul-data-service": {
    "description": "Defines service",
    "prefix": "tf-consul-data-service",
    "body": [
      "data \"consul_service\" \"read-consul-dc1\" {",
      "    name = \"consul\"",
      "    # Optional parameter: implicitly uses the current datacenter of the agent",
      "    datacenter = \"dc1\"",
      "}",
      "",
      "# Set the description to a whitespace delimited list of the node names",
      "resource \"example_resource\" \"app\" {",
      "  description = \"${join(\" \", data.consul_service.nodes)}\"",
      "",
      "  # ...",
      "}"
    ]
  },
  "consul-data-service_health": {
    "description": "Defines service_health",
    "prefix": "tf-consul-data-service_health",
    "body": [
      "provider \"consul\" {}",
      "",
      "data \"consul_service_health\" \"vault\" {",
      "  service = \"vault\"",
      "  passing = true",
      "}",
      "",
      "provider \"vault\" {",
      "  address = \"https://${data.consul_service_health.vault.results.0.service.0.address}:${data.consul_service_health.vault.results.0.service.0.port}\"",
      "}"
    ]
  },
  "consul-data-services": {
    "description": "Defines services",
    "prefix": "tf-consul-data-services",
    "body": [
      "data \"consul_services\" \"read-dc1\" {",
      "  query_options {",
      "    # Optional parameter: implicitly uses the current datacenter of the agent",
      "    datacenter = \"dc1\"",
      "  }",
      "}",
      "",
      "# Set the description to a whitespace delimited list of the services",
      "resource \"example_resource\" \"app\" {",
      "  description = \"${join(\" \", data.consul_services.names)}\"",
      "",
      "  # ...",
      "}"
    ]
  },
  "consul-resource-acl_auth_method": {
    "description": "Defines acl_auth_method",
    "prefix": "tf-consul-resource-acl_auth_method",
    "body": [
      "resource \"consul_acl_auth_method\" \"minikube\" {",
      "\tname        = \"minikube\"",
      "    type        = \"kubernetes\"",
      "    description = \"dev minikube cluster\"",
      "",
      "\tconfig = {",
      "        Host = \"https://192.0.2.42:8443\"",
      "\t\tCACert = \"-----BEGIN CERTIFICATE-----\\n...-----END CERTIFICATE-----\\n\"",
      "        ServiceAccountJWT = \"eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9...\"",
      "    }",
      "}"
    ]
  },
  "consul-resource-acl_binding_rule": {
    "description": "Defines acl_binding_rule",
    "prefix": "tf-consul-resource-acl_binding_rule",
    "body": [
      "resource \"consul_acl_auth_method\" \"minikube\" {",
      "\tname        = \"minikube\"",
      "    type        = \"kubernetes\"",
      "    description = \"dev minikube cluster\"",
      "",
      "\tconfig = {",
      "        Host = \"https://192.0.2.42:8443\"",
      "\t\tCACert = \"-----BEGIN CERTIFICATE-----\\n...-----END CERTIFICATE-----\\n\"",
      "        ServiceAccountJWT = \"eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9...\"",
      "    }",
      "}",
      "",
      "resource \"consul_acl_binding_rule\" \"test\" {",
      "\tauth_method = \"${consul_acl_auth_method.minikube.name}\"",
      "\tdescription = \"foobar\"",
      "\tselector    = \"serviceaccount.namespace==default\"",
      "\tbind_type   = \"service\"",
      "\tbind_name   = \"minikube\"",
      "}"
    ]
  },
  "consul-resource-acl_policy": {
    "description": "Defines acl_policy",
    "prefix": "tf-consul-resource-acl_policy",
    "body": [
      "resource \"consul_acl_policy\" \"test\" {",
      "  name        = \"my_policy\"",
      "  datacenters = [\"dc1\"]",
      "  rules       = <<-RULE",
      "    node_prefix \"\" {",
      "      policy = \"read\"",
      "    }",
      "    RULE",
      "}"
    ]
  },
  "consul-resource-acl_role": {
    "description": "Defines acl_role",
    "prefix": "tf-consul-resource-acl_role",
    "body": [
      "resource \"consul_acl_policy\" \"read-policy\" {",
      "\tname = \"read-policy\"",
      "\trules = \"node \\\"\\\" { policy = \\\"read\\\" }\"",
      "\tdatacenters = [ \"dc1\" ]",
      "}",
      "",
      "resource \"consul_acl_role\" \"test\" {",
      "\tname = \"foo\"",
      "\tdescription = \"bar\"",
      "",
      "\tpolicies = [",
      "\t\t\"${consul_acl_policy.read-policy.id}\"",
      "\t]",
      "",
      "\tservice_identities {",
      "\t\tservice_name = \"foo\"",
      "\t}",
      "}"
    ]
  },
  "consul-resource-acl_token": {
    "description": "Defines acl_token",
    "prefix": "tf-consul-resource-acl_token",
    "body": [
      "resource \"consul_acl_policy\" \"agent\" {",
      "  name  = \"agent\"",
      "  rules = <<-RULE",
      "    node_prefix \"\" {",
      "      policy = \"read\"",
      "    }",
      "    RULE",
      "}",
      "",
      "resource \"consul_acl_token\" \"test\" {",
      "  description = \"my test token\"",
      "  policies = [\"${consul_acl_policy.agent.name}\"]",
      "  local = true",
      "}"
    ]
  },
  "consul-resource-agent_service": {
    "description": "Defines agent_service",
    "prefix": "tf-consul-resource-agent_service",
    "body": [
      "resource \"consul_agent_service\" \"app\" {",
      "  address = \"www.google.com\"",
      "  name    = \"google\"",
      "  port    = 80",
      "  tags    = [\"tag0\", \"tag1\"]",
      "}"
    ]
  },
  "consul-resource-autopilot_config": {
    "description": "Defines autopilot_config",
    "prefix": "tf-consul-resource-autopilot_config",
    "body": [
      "resource \"consul_autopilot_config\" \"config\" {",
      "\tcleanup_dead_servers      =  false",
      "\tlast_contact_threshold    =  \"1s\"",
      "\tmax_trailing_logs         =  500",
      "}"
    ]
  },
  "consul-resource-catalog_entry": {
    "description": "Defines catalog_entry",
    "prefix": "tf-consul-resource-catalog_entry",
    "body": [
      "resource \"consul_catalog_entry\" \"app\" {",
      "  address = \"192.168.10.10\"",
      "  node    = \"foobar\"",
      "",
      "  service = {",
      "    address = \"127.0.0.1\"",
      "    id      = \"redis1\"",
      "    name    = \"redis\"",
      "    port    = 8000",
      "    tags    = [\"master\", \"v1\"]",
      "  }",
      "}"
    ]
  },
  "consul-resource-intention": {
    "description": "Defines intention",
    "prefix": "tf-consul-resource-intention",
    "body": [
      "resource \"consul_intention\" \"database\" {",
      "  source_name      = \"api\"",
      "  destination_name = \"db\"",
      "  action           = \"allow\"",
      "}"
    ]
  },
  "consul-resource-key_prefix": {
    "description": "Defines key_prefix",
    "prefix": "tf-consul-resource-key_prefix",
    "body": [
      "resource \"consul_key_prefix\" \"myapp_config\" {",
      "  datacenter = \"nyc1\"",
      "  token      = \"abcd\"",
      "",
      "  # Prefix to add to prepend to all of the subkey names below.",
      "  path_prefix = \"myapp/config/\"",
      "",
      "  subkeys = {",
      "    \"elb_cname\"         = \"${aws_elb.app.dns_name}\"",
      "    \"s3_bucket_name\"    = \"${aws_s3_bucket.app.bucket}\"",
      "    \"database/hostname\" = \"${aws_db_instance.app.address}\"",
      "    \"database/port\"     = \"${aws_db_instance.app.port}\"",
      "    \"database/username\" = \"${aws_db_instance.app.username}\"",
      "    \"database/name\"     = \"${aws_db_instance.app.name}\"",
      "  }",
      "",
      "  subkey {",
      "    path  = \"database/password\"",
      "    value = \"${aws_db_instance.app.password}\"",
      "    flags = 2",
      "  }",
      "",
      "}"
    ]
  },
  "consul-resource-keys": {
    "description": "Defines keys",
    "prefix": "tf-consul-resource-keys",
    "body": [
      "resource \"consul_keys\" \"app\" {",
      "  datacenter = \"nyc1\"",
      "  token      = \"abcd\"",
      "",
      "  # Set the CNAME of our load balancer as a key",
      "  key {",
      "    path  = \"service/app/elb_address\"",
      "    value = \"${aws_elb.app.dns_name}\"",
      "  }",
      "}"
    ]
  },
  "consul-resource-node": {
    "description": "Defines node",
    "prefix": "tf-consul-resource-node",
    "body": [
      "resource \"consul_node\" \"foobar\" {",
      "  address = \"192.168.10.10\"",
      "  name    = \"foobar\"",
      "}"
    ]
  },
  "consul-resource-prepared_query": {
    "description": "Defines prepared_query",
    "prefix": "tf-consul-resource-prepared_query",
    "body": [
      "# Creates a prepared query myquery.query.consul that finds the nearest",
      "# healthy myapp.service.consul instance that has the active tag and not",
      "# the standby tag.",
      "resource \"consul_prepared_query\" \"myapp-query\" {",
      "  name         = \"myquery\"",
      "  datacenter   = \"us-central1\"",
      "  token        = \"abcd\"",
      "  stored_token = \"wxyz\"",
      "  only_passing = true",
      "  near         = \"_agent\"",
      "",
      "  service = \"myapp\"",
      "  tags    = [\"active\", \"!standby\"]",
      "",
      "  failover {",
      "    nearest_n   = 3",
      "    datacenters = [\"us-west1\", \"us-east-2\", \"asia-east1\"]",
      "  }",
      "",
      "  dns {",
      "    ttl = \"30s\"",
      "  }",
      "}",
      "",
      "# Creates a Prepared Query Template that matches *-near-self.query.consul",
      "# and finds the nearest service that matches the glob character (e.g.",
      "# foo-near-self.query.consul will find the nearest healthy foo.service.consul).",
      "resource \"consul_prepared_query\" \"service-near-self\" {",
      "  datacenter   = \"nyc1\"",
      "  token        = \"abcd\"",
      "  stored_token = \"wxyz\"",
      "  name         = \"\"",
      "  only_passing = true",
      "  connect      = true",
      "  near         = \"_agent\"",
      "",
      "  template {",
      "    type   = \"name_prefix_match\"",
      "    regexp = \"^(.*)-near-self$\"",
      "  }",
      "",
      "  service = \"$${match(1)}\"",
      "",
      "  failover {",
      "    nearest_n   = 3",
      "    datacenters = [\"dc2\", \"dc3\", \"dc4\"]",
      "  }",
      "",
      "  dns {",
      "    ttl = \"5m\"",
      "  }",
      "}"
    ]
  },
  "consul-resource-service": {
    "description": "Defines service",
    "prefix": "tf-consul-resource-service",
    "body": [
      "resource \"consul_service\" \"google\" {",
      "  name    = \"google\"",
      "  node    = \"${consul_node.compute.name}\"",
      "  port    = 80",
      "  tags    = [\"tag0\"]",
      "}",
      "",
      "resource \"consul_node\" \"compute\" {",
      "  name    = \"compute-google\"",
      "  address = \"www.google.com\"",
      "}"
    ]
  },
  "datadog-resource-dashboard": {
    "description": "Defines dashboard",
    "prefix": "tf-datadog-resource-dashboard",
    "body": [
      "resource \"datadog_dashboard\" \"ordered_dashboard\" {",
      "  title         = \"Ordered Layout Dashboard\"",
      "  description   = \"Created using the Datadog provider in Terraform\"",
      "  layout_type   = \"ordered\"",
      "  is_read_only  = true",
      "",
      "  widget {",
      "    alert_graph_definition {",
      "      alert_id = \"895605\"",
      "      viz_type = \"timeseries\"",
      "      title = \"Widget Title\"",
      "      time = {",
      "        live_span = \"1h\"",
      "      }",
      "    }",
      "  }",
      "",
      "  widget {",
      "    alert_value_definition {",
      "      alert_id = \"895605\"",
      "      precision = 3",
      "      unit = \"b\"",
      "      text_align = \"center\"",
      "      title = \"Widget Title\"",
      "    }",
      "  }",
      "",
      "  widget {",
      "    alert_value_definition {",
      "      alert_id = \"895605\"",
      "      precision = 3",
      "      unit = \"b\"",
      "      text_align = \"center\"",
      "      title = \"Widget Title\"",
      "    }",
      "  }",
      "",
      "  widget {",
      "    change_definition {",
      "      request {",
      "        q = \"avg:system.load.1{env:staging} by {account}\"",
      "        change_type = \"absolute\"",
      "        compare_to = \"week_before\"",
      "        increase_good = true",
      "        order_by = \"name\"",
      "        order_dir = \"desc\"",
      "        show_present = true",
      "      }",
      "      title = \"Widget Title\"",
      "      time = {",
      "        live_span = \"1h\"",
      "      }",
      "    }",
      "  }",
      "",
      "  widget {",
      "    distribution_definition {",
      "      request {",
      "        q = \"avg:system.load.1{env:staging} by {account}\"",
      "      }",
      "      title = \"Widget Title\"",
      "      time = {",
      "        live_span = \"1h\"",
      "      }",
      "    }",
      "  }",
      "",
      "  widget {",
      "    check_status_definition {",
      "      check = \"aws.ecs.agent_connected\"",
      "      grouping = \"cluster\"",
      "      group_by = [\"account\", \"cluster\"]",
      "      tags = [\"account:demo\", \"cluster:awseb-ruthebdog-env-8-dn3m6u3gvk\"]",
      "      title = \"Widget Title\"",
      "      time = {",
      "        live_span = \"1h\"",
      "      }",
      "    }",
      "  }",
      "",
      "  widget {",
      "    heatmap_definition {",
      "      request {",
      "        q = \"avg:system.load.1{env:staging} by {account}\"",
      "      }",
      "      yaxis {",
      "        min = 1",
      "        max = 2",
      "        include_zero = true",
      "        scale = \"sqrt\"",
      "      }",
      "      title = \"Widget Title\"",
      "      time = {",
      "        live_span = \"1h\"",
      "      }",
      "    }",
      "  }",
      "",
      "  widget {",
      "    hostmap_definition {",
      "      request {",
      "        fill {",
      "          q = \"avg:system.load.1{*} by {host}\"",
      "        }",
      "        size {",
      "          q = \"avg:memcache.uptime{*} by {host}\"",
      "        }",
      "      }",
      "      node_type= \"container\"",
      "      group = [\"host\", \"region\"]",
      "      no_group_hosts = true",
      "      no_metric_hosts = true",
      "      scope = [\"region:us-east-1\", \"aws_account:727006795293\"]",
      "      title = \"Widget Title\"",
      "    }",
      "  }",
      "",
      "  widget {",
      "    note_definition {",
      "      content = \"note text\"",
      "      background_color = \"pink\"",
      "      font_size = \"14\"",
      "      text_align = \"center\"",
      "      show_tick = true",
      "      tick_edge = \"left\"",
      "      tick_pos = \"50%\"",
      "    }",
      "  }",
      "",
      "  widget {",
      "    query_value_definition {",
      "      request {",
      "        q = \"avg:system.load.1{env:staging} by {account}\"",
      "        aggregator = \"sum\"",
      "        conditional_formats {",
      "          comparator = \"<\"",
      "          value = \"2\"",
      "          palette = \"white_on_green\"",
      "        }",
      "        conditional_formats {",
      "          comparator = \">\"",
      "          value = \"2.2\"",
      "          palette = \"white_on_red\"",
      "        }",
      "      }",
      "      autoscale = true",
      "      custom_unit = \"xx\"",
      "      precision = \"4\"",
      "      text_align = \"right\"",
      "      title = \"Widget Title\"",
      "      time = {",
      "        live_span = \"1h\"",
      "      }",
      "    }",
      "  }",
      "",
      "  widget {",
      "    scatterplot_definition {",
      "      request {",
      "        x {",
      "          q = \"avg:system.cpu.user{*} by {service, account}\"",
      "          aggregator = \"max\"",
      "        }",
      "        y {",
      "          q = \"avg:system.mem.used{*} by {service, account}\"",
      "          aggregator = \"min\"",
      "        }",
      "      }",
      "      color_by_groups = [\"account\", \"apm-role-group\"]",
      "      xaxis {",
      "        include_zero = true",
      "        label = \"x\"",
      "        min = \"1\"",
      "        max = \"2000\"",
      "        scale = \"pow\"",
      "      }",
      "      yaxis {",
      "        include_zero = false",
      "        label = \"y\"",
      "        min = \"5\"",
      "        max = \"2222\"",
      "        scale = \"log\"",
      "      }",
      "      title = \"Widget Title\"",
      "      time = {",
      "        live_span = \"1h\"",
      "      }",
      "    }",
      "  }",
      "",
      "  widget {",
      "    timeseries_definition {",
      "      request {",
      "        q= \"avg:system.cpu.user{app:general} by {env}\"",
      "        display_type = \"line\"",
      "      }",
      "      request {",
      "        log_query {",
      "          index = \"mcnulty\"",
      "          compute = {",
      "            aggregation = \"count\"",
      "            facet = \"@duration\"",
      "            interval = 5000",
      "          }",
      "          search = {",
      "            query = \"status:info\"",
      "          }",
      "          group_by {",
      "            facet = \"host\"",
      "            limit = 10",
      "            sort = {",
      "              aggregation = \"avg\"",
      "              order = \"desc\"",
      "              facet = \"@duration\"",
      "            }",
      "          }",
      "        }",
      "        display_type = \"area\"",
      "      }",
      "      request {",
      "        apm_query {",
      "          index = \"apm-search\"",
      "          compute = {",
      "            aggregation = \"count\"",
      "            facet = \"@duration\"",
      "            interval = 5000",
      "          }",
      "          search = {",
      "            query = \"type:web\"",
      "          }",
      "          group_by {",
      "            facet = \"resource_name\"",
      "            limit = 50",
      "            sort = {",
      "              aggregation = \"avg\"",
      "              order = \"desc\"",
      "              facet = \"@string_query.interval\"",
      "            }",
      "          }",
      "        }",
      "        display_type = \"bars\"",
      "      }",
      "      request {",
      "        process_query {",
      "          metric = \"process.stat.cpu.total_pct\"",
      "          search_by = \"error\"",
      "          filter_by = [\"active\"]",
      "          limit = 50",
      "        }",
      "        display_type = \"area\"",
      "      }",
      "      marker {",
      "        display_type = \"error dashed\"",
      "        label = \" z=6 \"",
      "        value = \"y = 4\"",
      "      }",
      "      marker {",
      "        display_type = \"ok solid\"",
      "        value = \"10 < y < 999\"",
      "        label = \" x=8 \"",
      "      }",
      "      title = \"Widget Title\"",
      "      time = {",
      "        live_span = \"1h\"",
      "      }",
      "    }",
      "  }",
      "",
      "  widget {",
      "    toplist_definition {",
      "      request {",
      "        q= \"avg:system.cpu.user{app:general} by {env}\"",
      "        conditional_formats {",
      "          comparator = \"<\"",
      "          value = \"2\"",
      "          palette = \"white_on_green\"",
      "        }",
      "        conditional_formats {",
      "          comparator = \">\"",
      "          value = \"2.2\"",
      "          palette = \"white_on_red\"",
      "        }",
      "      }",
      "      title = \"Widget Title\"",
      "    }",
      "  }",
      "",
      "  widget {",
      "    group_definition {",
      "      layout_type = \"ordered\"",
      "      title = \"Group Widget\"",
      "",
      "      widget {",
      "        note_definition {",
      "          content = \"cluster note widget\"",
      "          background_color = \"pink\"",
      "          font_size = \"14\"",
      "          text_align = \"center\"",
      "          show_tick = true",
      "          tick_edge = \"left\"",
      "          tick_pos = \"50%\"",
      "        }",
      "      }",
      "",
      "      widget {",
      "        alert_graph_definition {",
      "          alert_id = \"123\"",
      "          viz_type = \"toplist\"",
      "          title = \"Alert Graph\"",
      "          time = {",
      "            live_span = \"1h\"",
      "          }",
      "        }",
      "      }",
      "    }",
      "  }",
      "",
      "  template_variable {",
      "    name   = \"var_1\"",
      "    prefix = \"host\"",
      "    default = \"aws\"",
      "  }",
      "  template_variable {",
      "    name   = \"var_2\"",
      "    prefix = \"service_name\"",
      "    default = \"autoscaling\"",
      "  }",
      "}"
    ]
  },
  "datadog-resource-downtime": {
    "description": "Defines downtime",
    "prefix": "tf-datadog-resource-downtime",
    "body": [
      "# Create a new daily 1700-0900 Datadog downtime",
      "resource \"datadog_downtime\" \"foo\" {",
      "  scope = [\"*\"]",
      "  start = 1483308000",
      "  end   = 1483365600",
      "",
      "  recurrence {",
      "    type   = \"days\"",
      "    period = 1",
      "  }",
      "}"
    ]
  },
  "datadog-resource-integration_aws": {
    "description": "Defines integration_aws",
    "prefix": "tf-datadog-resource-integration_aws",
    "body": [
      "# Create a new Datadog - Amazon Web Services integration",
      "resource \"datadog_integration_aws\" \"sandbox\" {",
      "    account_id = \"1234567890\"",
      "    role_name = \"DatadogAWSIntegrationRole\"",
      "    filter_tags = [\"key:value\"]",
      "    host_tags = [\"key:value\", \"key2:value2\"]",
      "    account_specific_namespace_rules = {",
      "        auto_scaling = false",
      "        opsworks = false",
      "    }",
      "}"
    ]
  },
  "datadog-resource-integration_gcp": {
    "description": "Defines integration_gcp",
    "prefix": "tf-datadog-resource-integration_gcp",
    "body": [
      "# Create a new Datadog - Google Cloud Platform integration",
      "resource \"datadog_integration_gcp\" \"awesome_gcp_project_integration\" {",
      "  project_id     = \"awesome-project-id\"",
      "  private_key_id = \"1234567890123456789012345678901234567890\"",
      "  private_key    = \"-----BEGIN PRIVATE KEY-----\\n...\\n-----END PRIVATE KEY-----\\n\"",
      "  client_email   = \"awesome-service-account@awesome-project-id.iam.gserviceaccount.com\"",
      "  client_id      = \"123456789012345678901\"",
      "  host_filters   = \"foo:bar,buzz:lightyear\"",
      "}"
    ]
  },
  "datadog-resource-integration_pagerduty": {
    "description": "Defines integration_pagerduty",
    "prefix": "tf-datadog-resource-integration_pagerduty",
    "body": [
      "resource \"datadog_integration_pagerduty\" \"pd\" {",
      "  individual_services = true",
      "  schedules = [",
      "    \"https://ddog.pagerduty.com/schedules/X123VF\",",
      "    \"https://ddog.pagerduty.com/schedules/X321XX\"",
      "    ]",
      "  subdomain = \"ddog\"",
      "  api_token = \"38457822378273432587234242874\"",
      "}",
      "",
      "resource \"datadog_integration_pagerduty_service_object\" \"testing_foo\" {",
      "  # when creating the integration object for the first time, the service",
      "  # objects have to be created *after* the integration",
      "  depends_on = [\"datadog_integration_pagerduty.pd\"]",
      "  service_name = \"testing_foo\"",
      "  service_key  = \"9876543210123456789\"",
      "}",
      "",
      "resource \"datadog_integration_pagerduty_service_object\" \"testing_bar\" {",
      "  depends_on = [\"datadog_integration_pagerduty.pd\"]",
      "  service_name = \"testing_bar\"",
      "  service_key  = \"54321098765432109876\"",
      "}"
    ]
  },
  "datadog-resource-integration_pagerduty_service_object": {
    "description": "Defines integration_pagerduty_service_object",
    "prefix": "tf-datadog-resource-integration_pagerduty_service_object",
    "body": [
      "resource \"datadog_integration_pagerduty\" \"pd\" {",
      "  individual_services = true",
      "  schedules = [",
      "    \"https://ddog.pagerduty.com/schedules/X123VF\",",
      "    \"https://ddog.pagerduty.com/schedules/X321XX\"",
      "    ]",
      "  subdomain = \"ddog\"",
      "  api_token = \"38457822378273432587234242874\"",
      "}",
      "",
      "resource \"datadog_integration_pagerduty_service_object\" \"testing_foo\" {",
      "  # when creating the integration object for the first time, the service",
      "  # objects have to be created *after* the integration",
      "  depends_on = [\"datadog_integration_pagerduty.pd\"]",
      "  service_name = \"testing_foo\"",
      "  service_key  = \"9876543210123456789\"",
      "}",
      "",
      "resource \"datadog_integration_pagerduty_service_object\" \"testing_bar\" {",
      "  depends_on = [\"datadog_integration_pagerduty.pd\"]",
      "  service_name = \"testing_bar\"",
      "  service_key  = \"54321098765432109876\"",
      "}"
    ]
  },
  "datadog-resource-metric_metadata": {
    "description": "Defines metric_metadata",
    "prefix": "tf-datadog-resource-metric_metadata",
    "body": [
      "# Manage a Datadog metric's metadata",
      "resource \"datadog_metric_metadata\" \"request_time\" {",
      "  metric      = \"request.time\"",
      "  short_name  = \"Request time\"",
      "  description = \"99th percentile request time in millseconds\"",
      "  type        = \"gauge\"",
      "  unit        = \"millisecond\"",
      "}"
    ]
  },
  "datadog-resource-monitor": {
    "description": "Defines monitor",
    "prefix": "tf-datadog-resource-monitor",
    "body": [
      "# Create a new Datadog monitor",
      "resource \"datadog_monitor\" \"foo\" {",
      "  name               = \"Name for monitor foo\"",
      "  type               = \"metric alert\"",
      "  message            = \"Monitor triggered. Notify: @hipchat-channel\"",
      "  escalation_message = \"Escalation message @pagerduty\"",
      "",
      "  query = \"avg(last_1h):avg:aws.ec2.cpu{environment:foo,host:foo} by {host} > 4\"",
      "",
      "  thresholds = {",
      "    ok                = 0",
      "    warning           = 2",
      "    warning_recovery  = 1",
      "    critical          = 4",
      "    critical_recovery = 3",
      "  }",
      "",
      "  notify_no_data    = false",
      "  renotify_interval = 60",
      "",
      "  notify_audit = false",
      "  timeout_h    = 60",
      "  include_tags = true",
      "",
      "  silenced = {",
      "    \"*\" = 0",
      "  }",
      "",
      "  tags = [\"foo:bar\", \"baz\"]",
      "}"
    ]
  },
  "datadog-resource-screenboard": {
    "description": "Defines screenboard",
    "prefix": "tf-datadog-resource-screenboard",
    "body": [
      "# Create a new Datadog screenboard",
      "resource \"datadog_screenboard\" \"acceptance_test\" {",
      "  title     = \"Test Screenboard\"",
      "  read_only = true",
      "",
      "  template_variable {",
      "    name    = \"varname 1\"",
      "    prefix  = \"pod_name\"",
      "    default = \"*\"",
      "  }",
      "",
      "  template_variable {",
      "    name    = \"varname 2\"",
      "    prefix  = \"service_name\"",
      "    default = \"autoscaling\"",
      "  }",
      "",
      "  widget {",
      "    type       = \"free_text\"",
      "    x          = 5",
      "    y          = 5",
      "    text       = \"test text\"",
      "    text_align = \"right\"",
      "    font_size  = \"36\"",
      "    color      = \"#ffc0cb\"",
      "  }",
      "",
      "  widget {",
      "    type        = \"timeseries\"",
      "    x           = 25",
      "    y           = 5",
      "    title       = \"graph title terraform\"",
      "    title_size  = 16",
      "    title_align = \"right\"",
      "    legend      = true",
      "    legend_size = 16",
      "",
      "    time = {",
      "      live_span = \"1d\"",
      "    }",
      "",
      "    tile_def {",
      "      viz = \"timeseries\"",
      "",
      "      request {",
      "        q    = \"avg:system.cpu.user{*}\"",
      "        type = \"line\"",
      "",
      "        style = {",
      "          palette = \"purple\"",
      "          type    = \"dashed\"",
      "          width   = \"thin\"",
      "        }",
      "",
      "        # NOTE: this will only work with TF >= 0.12; see metadata_json",
      "        # documentation below for example on usage with TF < 0.12",
      "        metadata_json = jsonencode({",
      "          \"avg:system.cpu.user{*}\": {",
      "            \"alias\": \"CPU Usage\"",
      "          }",
      "        })",
      "      }",
      "",
      "      marker {",
      "        label = \"test marker\"",
      "        type  = \"error dashed\"",
      "        value = \"y < 6\"",
      "      }",
      "",
      "      event {",
      "        q = \"test event\"",
      "      }",
      "    }",
      "  }",
      "",
      "  widget {",
      "    type        = \"query_value\"",
      "    x           = 45",
      "    y           = 25",
      "    title       = \"query value title terraform\"",
      "    title_size  = 20",
      "    title_align = \"center\"",
      "    legend      = true",
      "    legend_size = 16",
      "",
      "    tile_def {",
      "      viz = \"query_value\"",
      "",
      "      request {",
      "        q    = \"avg:system.cpu.user{*}\"",
      "        type = \"line\"",
      "",
      "        style = {",
      "          palette = \"purple\"",
      "          type    = \"dashed\"",
      "          width   = \"thin\"",
      "        }",
      "",
      "        conditional_format {",
      "          comparator = \">\"",
      "          value      = \"1\"",
      "          palette    = \"white_on_red\"",
      "        }",
      "",
      "        conditional_format {",
      "          comparator = \">=\"",
      "          value      = \"2\"",
      "          palette    = \"white_on_yellow\"",
      "        }",
      "",
      "        aggregator = \"max\"",
      "      }",
      "",
      "      custom_unit = \"%\"",
      "      autoscale   = false",
      "      precision   = \"6\"",
      "      text_align  = \"right\"",
      "    }",
      "  }",
      "",
      "  widget {",
      "    type        = \"toplist\"",
      "    x           = 65",
      "    y           = 5",
      "    title       = \"toplist title terraform\"",
      "    legend      = true",
      "    legend_size = \"auto\"",
      "",
      "    time = {",
      "      live_span = \"1d\"",
      "    }",
      "",
      "    tile_def {",
      "      viz = \"toplist\"",
      "",
      "      request {",
      "        q = \"top(avg:system.load.1{*} by {host}, 10, 'mean', 'desc')\"",
      "",
      "        style = {",
      "          palette = \"purple\"",
      "          type    = \"dashed\"",
      "          width   = \"thin\"",
      "        }",
      "",
      "        conditional_format {",
      "          comparator = \">\"",
      "          value      = \"4\"",
      "          palette    = \"white_on_green\"",
      "        }",
      "      }",
      "    }",
      "  }",
      "",
      "  widget {",
      "    type  = \"change\"",
      "    x     = 85",
      "    y     = 5",
      "    title = \"change title terraform\"",
      "",
      "    tile_def {",
      "      viz = \"change\"",
      "",
      "      request {",
      "        q             = \"min:system.load.1{*} by {host}\"",
      "        compare_to    = \"week_before\"",
      "        change_type   = \"relative\"",
      "        order_by      = \"present\"",
      "        order_dir     = \"asc\"",
      "        extra_col     = \"\"",
      "        increase_good = false",
      "      }",
      "    }",
      "  }",
      "",
      "  widget {",
      "    type  = \"event_timeline\"",
      "    x     = 105",
      "    y     = 5",
      "    title = \"event_timeline title terraform\"",
      "    query = \"status:error\"",
      "",
      "    time = {",
      "      live_span = \"1d\"",
      "    }",
      "  }",
      "",
      "  widget {",
      "    type       = \"event_stream\"",
      "    x          = 115",
      "    y          = 5",
      "    title      = \"event_stream title terraform\"",
      "    query      = \"*\"",
      "    event_size = \"l\"",
      "",
      "    time = {",
      "      live_span = \"4h\"",
      "    }",
      "  }",
      "",
      "  widget {",
      "    type   = \"image\"",
      "    x      = 145",
      "    y      = 5",
      "    title  = \"image title terraform\"",
      "    sizing = \"fit\"",
      "    margin = \"large\"",
      "    url    = \"https://datadog-prod.imgix.net/img/dd_logo_70x75.png\"",
      "  }",
      "",
      "  widget {",
      "    type       = \"note\"",
      "    x          = 165",
      "    y          = 5",
      "    bgcolor    = \"pink\"",
      "    text_align = \"right\"",
      "    font_size  = \"36\"",
      "    tick       = true",
      "    tick_edge  = \"bottom\"",
      "    tick_pos   = \"50%\"",
      "    html       = \"<b>test note</b>\"",
      "  }",
      "",
      "  widget {",
      "    type     = \"alert_graph\"",
      "    x        = 185",
      "    y        = 5",
      "    title    = \"alert graph title terraform\"",
      "    alert_id = \"123456\"",
      "    viz_type = \"toplist\"",
      "",
      "    time = {",
      "      live_span = \"15m\"",
      "    }",
      "  }",
      "",
      "  widget {",
      "    type       = \"alert_value\"",
      "    x          = 205",
      "    y          = 5",
      "    title      = \"alert value title terraform\"",
      "    alert_id   = \"123456\"",
      "    text_size  = \"fill_height\"",
      "    text_align = \"right\"",
      "    precision  = \"*\"",
      "    unit       = \"b\"",
      "  }",
      "",
      "  widget {",
      "    type = \"iframe\"",
      "    x    = 225",
      "    y    = 5",
      "    url  = \"https://www.datadoghq.org\"",
      "  }",
      "",
      "  widget {",
      "    type        = \"check_status\"",
      "    x           = 245",
      "    y           = 5",
      "    title       = \"test title\"",
      "    title_align = \"left\"",
      "    grouping    = \"check\"",
      "    check       = \"aws.ecs.agent_connected\"",
      "    tags        = [\"*\"]",
      "    group       = \"cluster:test\"",
      "",
      "    time = {",
      "      live_span = \"30m\"",
      "    }",
      "  }",
      "",
      "  widget {",
      "    type                    = \"trace_service\"",
      "    x                       = 265",
      "    y                       = 5",
      "    env                     = \"testEnv\"",
      "    service_service         = \"\"",
      "    service_name            = \"\"",
      "    size_version            = \"large\"",
      "    layout_version          = \"three_column\"",
      "    must_show_hits          = true",
      "    must_show_errors        = true",
      "    must_show_latency       = true",
      "    must_show_breakdown     = true",
      "    must_show_distribution  = true",
      "    must_show_resource_list = true",
      "",
      "    time = {",
      "      live_span = \"30m\"",
      "    }",
      "  }",
      "",
      "  widget {",
      "    type  = \"hostmap\"",
      "    x     = 285",
      "    y     = 5",
      "    query = \"avg:system.load.1{*} by {host}\"",
      "",
      "    tile_def {",
      "      viz             = \"hostmap\"",
      "      node_type       = \"container\"",
      "      scope           = [\"datacenter:test\"]",
      "      group           = [\"pod_name\"]",
      "      no_group_hosts  = false",
      "      no_metric_hosts = false",
      "",
      "      request {",
      "        q    = \"max:process.stat.container.io.wbps{datacenter:test} by {host}\"",
      "        type = \"fill\"",
      "      }",
      "",
      "      style = {",
      "        palette      = \"hostmap_blues\"",
      "        palette_flip = true",
      "        fill_min     = 20",
      "        fill_max     = 300",
      "      }",
      "    }",
      "  }",
      "",
      "  widget {",
      "    type                      = \"manage_status\"",
      "    x                         = 305",
      "    y                         = 5",
      "    display_format            = \"countsAndList\"",
      "    color_preference          = \"background\"",
      "    hide_zero_counts          = true",
      "    manage_status_show_title  = false",
      "    manage_status_title_text  = \"test title\"",
      "    manage_status_title_size  = \"20\"",
      "    manage_status_title_align = \"right\"",
      "",
      "    params = {",
      "      sort  = \"status,asc\"",
      "      text  = \"status:alert\"",
      "      count = 50",
      "      start = 0",
      "    }",
      "  }",
      "",
      "  widget {",
      "    type    = \"log_stream\"",
      "    x       = 325",
      "    y       = 5",
      "    query   = \"source:kubernetes\"",
      "    columns = \"[\\\"column1\\\",\\\"column2\\\",\\\"column3\\\"]\"",
      "    logset  = \"1234\"",
      "",
      "    time = {",
      "      live_span = \"1h\"",
      "    }",
      "  }",
      "",
      "  widget {",
      "    type = \"process\"",
      "    x    = 365",
      "    y    = 5",
      "",
      "    tile_def {",
      "      viz = \"process\"",
      "",
      "      request {",
      "        query_type  = \"process\"",
      "        metric      = \"process.stat.cpu.total_pct\"",
      "        text_filter = \"\"",
      "        tag_filters = []",
      "        limit       = 200",
      "",
      "        style = {",
      "          palette = \"dog_classic_area\"",
      "        }",
      "      }",
      "    }",
      "  }",
      "}"
    ]
  },
  "datadog-resource-synthetics": {
    "description": "Defines synthetics",
    "prefix": "tf-datadog-resource-synthetics",
    "body": [
      "# Create a new Datadog Synthetics API test on https://www.example.org",
      "resource \"datadog_synthetics_test\" \"foo\" {",
      "  type = \"api\"",
      "  request = {",
      "    method = \"GET\"",
      "    url = \"https://www.example.org\"",
      "  }",
      "  request_headers = {",
      "    Content-Type = \"application/json\"",
      "    Authentication = \"Token: 1234566789\"",
      "  }",
      "  assertions = [",
      "    {",
      "      type = \"statusCode\"",
      "      operator = \"is\"",
      "      target = \"200\"",
      "    }",
      "  ]",
      "  locations = [ \"aws:eu-central-1\" ]",
      "  options = {",
      "    tick_every = 900",
      "  }",
      "  name = \"An API test on example.org\"",
      "  message = \"Notify @pagerduty\"",
      "  tags = [\"foo:bar\", \"foo\", \"env:test\"]",
      "",
      "  status = \"live\"",
      "}"
    ]
  },
  "datadog-resource-timeboard": {
    "description": "Defines timeboard",
    "prefix": "tf-datadog-resource-timeboard",
    "body": [
      "# Create a new Datadog timeboard",
      "resource \"datadog_timeboard\" \"redis\" {",
      "  title       = \"Redis Timeboard (created via Terraform)\"",
      "  description = \"created using the Datadog provider in Terraform\"",
      "  read_only   = true",
      "",
      "  graph {",
      "    title = \"Redis latency (ms)\"",
      "    viz   = \"timeseries\"",
      "",
      "    request {",
      "      q    = \"avg:redis.info.latency_ms{$host}\"",
      "      type = \"bars\"",
      "",
      "      # NOTE: this will only work with TF >= 0.12; see metadata_json",
      "      # documentation below for example on usage with TF < 0.12",
      "      metadata_json = jsonencode({",
      "        \"avg:redis.info.latency_ms{$host}\": {",
      "          \"alias\": \"Redis latency\"",
      "        }",
      "      })",
      "    }",
      "  }",
      "",
      "  graph {",
      "    title = \"Redis memory usage\"",
      "    viz   = \"timeseries\"",
      "",
      "    request {",
      "      q       = \"avg:redis.mem.used{$host} - avg:redis.mem.lua{$host}, avg:redis.mem.lua{$host}\"",
      "      stacked = true",
      "    }",
      "",
      "    request {",
      "      q = \"avg:redis.mem.rss{$host}\"",
      "",
      "      style = {",
      "        palette = \"warm\"",
      "      }",
      "    }",
      "  }",
      "",
      "  graph {",
      "    title = \"Top System CPU by Docker container\"",
      "    viz   = \"toplist\"",
      "",
      "    request {",
      "      q = \"top(avg:docker.cpu.system{*} by {container_name}, 10, 'mean', 'desc')\"",
      "    }",
      "  }",
      "",
      "  template_variable {",
      "    name   = \"host\"",
      "    prefix = \"host\"",
      "  }",
      "}"
    ]
  },
  "datadog-resource-user": {
    "description": "Defines user",
    "prefix": "tf-datadog-resource-user",
    "body": [
      "# Create a new Datadog user",
      "resource \"datadog_user\" \"foo\" {",
      "  email  = \"new@example.com\"",
      "  handle = \"new@example.com\"",
      "  name   = \"New User\"",
      "}"
    ]
  },
  "digitalocean-data-certificate": {
    "description": "Defines certificate",
    "prefix": "tf-digitalocean-data-certificate",
    "body": [
      "data \"digitalocean_certificate\" \"example\" {",
      "  name = \"example\"",
      "}"
    ]
  },
  "digitalocean-data-database_cluster": {
    "description": "Defines database_cluster",
    "prefix": "tf-digitalocean-data-database_cluster",
    "body": [
      "# Create a new database cluster",
      "data \"digitalocean_database_cluster\" \"example\" {",
      "  name = \"example-cluster\"",
      "}"
    ]
  },
  "digitalocean-data-domain": {
    "description": "Defines domain",
    "prefix": "tf-digitalocean-data-domain",
    "body": [
      "data \"digitalocean_domain\" \"example\" {",
      "  name = \"example.com\"",
      "}",
      "",
      "output \"domain_output\" {",
      "  value = \"${data.digitalocean_domain.example.zone_file}\"",
      "}"
    ]
  },
  "digitalocean-data-droplet": {
    "description": "Defines droplet",
    "prefix": "tf-digitalocean-data-droplet",
    "body": [
      "data \"digitalocean_droplet\" \"example\" {",
      "  name = \"web\"",
      "}"
    ]
  },
  "digitalocean-data-droplet_snapshot": {
    "description": "Defines droplet_snapshot",
    "prefix": "tf-digitalocean-data-droplet_snapshot",
    "body": [
      "data \"digitalocean_droplet_snapshot\" \"web-snapshot\" {",
      "  name_regex  = \"^web\"",
      "  region      = \"nyc3\"",
      "  most_recent = true",
      "}"
    ]
  },
  "digitalocean-data-floating_ip": {
    "description": "Defines floating_ip",
    "prefix": "tf-digitalocean-data-floating_ip",
    "body": [
      "variable \"public_ip\" {}",
      "",
      "data \"digitalocean_floating_ip\" \"example\" {",
      "  ip_address = \"${var.public_ip}\"",
      "}"
    ]
  },
  "digitalocean-data-image": {
    "description": "Defines image",
    "prefix": "tf-digitalocean-data-image",
    "body": [
      "data \"digitalocean_image\" \"example1\" {",
      "  name = \"example-1.0.0\"",
      "}"
    ]
  },
  "digitalocean-data-kubernetes_cluster": {
    "description": "Defines kubernetes_cluster",
    "prefix": "tf-digitalocean-data-kubernetes_cluster",
    "body": [
      "data \"digitalocean_kubernetes_cluster\" \"example\" {",
      "  name = \"prod-cluster-01\"",
      "}",
      "",
      "provider \"kubernetes\" {",
      "  host = \"${data.digitalocean_kubernetes_cluster.example.endpoint}\"",
      "",
      "  client_certificate     = \"${base64decode(data.digitalocean_kubernetes_cluster.example.kube_config.0.client_certificate)}\"",
      "  client_key             = \"${base64decode(data.digitalocean_kubernetes_cluster.example.kube_config.0.client_key)}\"",
      "  cluster_ca_certificate = \"${base64decode(data.digitalocean_kubernetes_cluster.example.kube_config.0.cluster_ca_certificate)}\"",
      "}"
    ]
  },
  "digitalocean-data-loadbalancer": {
    "description": "Defines loadbalancer",
    "prefix": "tf-digitalocean-data-loadbalancer",
    "body": [
      "data \"digitalocean_loadbalancer\" \"example\" {",
      "  name = \"app\"",
      "}"
    ]
  },
  "digitalocean-data-record": {
    "description": "Defines record",
    "prefix": "tf-digitalocean-data-record",
    "body": [
      "data \"digitalocean_record\" \"example\" {",
      "  domain  = \"example.com\"",
      "  name    = \"test\"",
      "}",
      "",
      "output \"record_type\" {",
      "  value = \"${data.digitalocean_record.example.type}\"",
      "}",
      "",
      "output \"record_ttl\" {",
      "  value = \"${data.digitalocean_record.example.ttl}\"",
      "}"
    ]
  },
  "digitalocean-data-ssh_key": {
    "description": "Defines ssh_key",
    "prefix": "tf-digitalocean-data-ssh_key",
    "body": [
      "data \"digitalocean_ssh_key\" \"example\" {",
      "  name = \"example\"",
      "}"
    ]
  },
  "digitalocean-data-tag": {
    "description": "Defines tag",
    "prefix": "tf-digitalocean-data-tag",
    "body": [
      "data \"digitalocean_tag\" \"example\" {",
      "  name = \"example\"",
      "}"
    ]
  },
  "digitalocean-data-volume": {
    "description": "Defines volume",
    "prefix": "tf-digitalocean-data-volume",
    "body": [
      "data \"digitalocean_volume\" \"example\" {",
      "  name   = \"app-data\"",
      "  region = \"nyc3\"",
      "}"
    ]
  },
  "digitalocean-data-volume_snapshot": {
    "description": "Defines volume_snapshot",
    "prefix": "tf-digitalocean-data-volume_snapshot",
    "body": [
      "data \"digitalocean_volume_snapshot\" \"snapshot\" {",
      "  name_regex  = \"^web\"",
      "  region      = \"nyc3\"",
      "  most_recent = true",
      "}"
    ]
  },
  "digitalocean-resource-cdn": {
    "description": "Defines cdn",
    "prefix": "tf-digitalocean-resource-cdn",
    "body": [
      "# Create a new Spaces Bucket",
      "resource \"digitalocean_spaces_bucket\" \"mybucket\" {",
      "    name   = \"example\"",
      "    region = \"sfo2\"",
      "    acl    = \"public-read\"",
      "}",
      "",
      "# Add a CDN endpoint to the Spaces Bucket",
      "resource \"digitalocean_cdn\" \"mycdn\" {",
      "  origin = \"${digitalocean_spaces_bucket.mybucket.bucket_domain_name}\"",
      "}",
      "",
      "# Output the endpoint for the CDN resource",
      "output \"fqdn\" {",
      "  value = \"${digitalocean_cdn.mycdn.endpoint}\"",
      "}"
    ]
  },
  "digitalocean-resource-certificate": {
    "description": "Defines certificate",
    "prefix": "tf-digitalocean-resource-certificate",
    "body": [
      "resource \"digitalocean_certificate\" \"cert\" {",
      "  name              = \"custom-terraform-example\"",
      "  type              = \"custom\"",
      "  private_key       = \"${file(\"/Users/terraform/certs/privkey.pem\")}\"",
      "  leaf_certificate  = \"${file(\"/Users/terraform/certs/cert.pem\")}\"",
      "  certificate_chain = \"${file(\"/Users/terraform/certs/fullchain.pem\")}\"",
      "}"
    ]
  },
  "digitalocean-resource-database_cluster": {
    "description": "Defines database_cluster",
    "prefix": "tf-digitalocean-resource-database_cluster",
    "body": [
      "# Create a new database cluster",
      "resource \"digitalocean_database_cluster\" \"example\" {",
      "  name       = \"example-cluster\"",
      "  engine     = \"pg\"",
      "  version    = \"11\"",
      "  size       = \"db-s-1vcpu-1gb\"",
      "  region     = \"nyc1\"",
      "  node_count = 1",
      "}"
    ]
  },
  "digitalocean-resource-domain": {
    "description": "Defines domain",
    "prefix": "tf-digitalocean-resource-domain",
    "body": [
      "# Create a new domain",
      "resource \"digitalocean_domain\" \"default\" {",
      "  name       = \"example.com\"",
      "  ip_address = \"${digitalocean_droplet.foo.ipv4_address}\"",
      "}"
    ]
  },
  "digitalocean-resource-droplet": {
    "description": "Defines droplet",
    "prefix": "tf-digitalocean-resource-droplet",
    "body": [
      "# Create a new Web Droplet in the nyc2 region",
      "resource \"digitalocean_droplet\" \"web\" {",
      "  image  = \"ubuntu-18-04-x64\"",
      "  name   = \"web-1\"",
      "  region = \"nyc2\"",
      "  size   = \"s-1vcpu-1gb\"",
      "}"
    ]
  },
  "digitalocean-resource-droplet_snapshot": {
    "description": "Defines droplet_snapshot",
    "prefix": "tf-digitalocean-resource-droplet_snapshot",
    "body": [
      "resource \"digitalocean_droplet\" \"web\" {",
      "\tname      = \"web-01\"",
      "\tsize      = \"s-1vcpu-1gb\"",
      "\timage     = \"centos-7-x64\"",
      "\tregion    = \"nyc3\"",
      "}",
      "",
      "resource \"digitalocean_droplet_snapshot\" \"web-snapshot\" {",
      "\tdroplet_id = \"${digitalocean_droplet.web.id}\"",
      "\tname       = \"web-snapshot-01\"",
      "}",
      ""
    ]
  },
  "digitalocean-resource-firewall": {
    "description": "Defines firewall",
    "prefix": "tf-digitalocean-resource-firewall",
    "body": [
      "resource \"digitalocean_droplet\" \"web\" {",
      "  name      = \"web-1\"",
      "  size      = \"s-1vcpu-1gb\"",
      "  image     = \"ubuntu-18-04-x64\"",
      "  region    = \"nyc3\"",
      "}",
      "",
      "resource \"digitalocean_firewall\" \"web\" {",
      "  name = \"only-22-80-and-443\"",
      "",
      "  droplet_ids = [\"${digitalocean_droplet.web.id}\"]",
      "",
      "  inbound_rule {",
      "      protocol           = \"tcp\"",
      "      port_range         = \"22\"",
      "      source_addresses   = [\"192.168.1.0/24\", \"2002:1:2::/48\"]",
      "  }",
      "",
      "  inbound_rule {",
      "      protocol           = \"tcp\"",
      "      port_range         = \"80\"",
      "      source_addresses   = [\"0.0.0.0/0\", \"::/0\"]",
      "  }",
      "",
      "  inbound_rule {",
      "      protocol           = \"tcp\"",
      "      port_range         = \"443\"",
      "      source_addresses   = [\"0.0.0.0/0\", \"::/0\"]",
      "  }",
      "",
      "  inbound_rule {",
      "      protocol           = \"icmp\"",
      "      source_addresses   = [\"0.0.0.0/0\", \"::/0\"]",
      "  }",
      "",
      "  outbound_rule {",
      "      protocol                = \"tcp\"",
      "      port_range              = \"53\"",
      "      destination_addresses   = [\"0.0.0.0/0\", \"::/0\"]",
      "  }",
      "",
      "  outbound_rule {",
      "      protocol                = \"udp\"",
      "      port_range              = \"53\"",
      "      destination_addresses   = [\"0.0.0.0/0\", \"::/0\"]",
      "  }",
      "",
      "  outbound_rule {",
      "      protocol                = \"icmp\"",
      "      destination_addresses   = [\"0.0.0.0/0\", \"::/0\"]",
      "  }",
      "}"
    ]
  },
  "digitalocean-resource-floating_ip": {
    "description": "Defines floating_ip",
    "prefix": "tf-digitalocean-resource-floating_ip",
    "body": [
      "resource \"digitalocean_droplet\" \"foobar\" {",
      "  name               = \"baz\"",
      "  size               = \"s-1vcpu-1gb\"",
      "  image              = \"ubuntu-18-04-x64\"",
      "  region             = \"sgp1\"",
      "  ipv6               = true",
      "  private_networking = true",
      "}",
      "",
      "resource \"digitalocean_floating_ip\" \"foobar\" {",
      "  droplet_id = \"${digitalocean_droplet.foobar.id}\"",
      "  region     = \"${digitalocean_droplet.foobar.region}\"",
      "}"
    ]
  },
  "digitalocean-resource-floating_ip_assignment": {
    "description": "Defines floating_ip_assignment",
    "prefix": "tf-digitalocean-resource-floating_ip_assignment",
    "body": [
      "resource \"digitalocean_floating_ip\" \"foobar\" {",
      "  region            = \"sgp1\"",
      "}",
      "",
      "resource \"digitalocean_droplet\" \"foobar\" {",
      "  name               = \"baz\"",
      "  size               = \"s-1vcpu-1gb\"",
      "  image              = \"ubuntu-18-04-x64\"",
      "  region             = \"sgp1\"",
      "  ipv6               = true",
      "  private_networking = true",
      "}",
      "",
      "resource \"digitalocean_floating_ip_assignment\" \"foobar\" {",
      "  ip_address = \"${digitalocean_floating_ip.foobar.ip_address}\"",
      "  droplet_id = \"${digitalocean_droplet.foobar.id}\"",
      "}"
    ]
  },
  "digitalocean-resource-kubernetes_cluster": {
    "description": "Defines kubernetes_cluster",
    "prefix": "tf-digitalocean-resource-kubernetes_cluster",
    "body": [
      "resource \"digitalocean_kubernetes_cluster\" \"foo\" {",
      "  name    = \"foo\"",
      "  region  = \"nyc1\"",
      "  version = \"1.14.4-do.0\"",
      "",
      "  node_pool {",
      "    name       = \"worker-pool\"",
      "    size       = \"s-2vcpu-2gb\"",
      "    node_count = 3",
      "  }",
      "}"
    ]
  },
  "digitalocean-resource-kubernetes_node_pool": {
    "description": "Defines kubernetes_node_pool",
    "prefix": "tf-digitalocean-resource-kubernetes_node_pool",
    "body": [
      "resource \"digitalocean_kubernetes_cluster\" \"foo\" {",
      "  name    = \"foo\"",
      "  region  = \"nyc1\"",
      "  version = \"1.12.1-do.2\"",
      "",
      "  node_pool {",
      "    name       = \"front-end-pool\"",
      "    size       = \"s-2vcpu-2gb\"",
      "    node_count = 3",
      "  }",
      "}",
      "",
      "resource \"digitalocean_kubernetes_node_pool\" \"bar\" {",
      "  cluster_id = \"${digitalocean_kubernetes_cluster.foo.id}\"",
      "",
      "  name       = \"backend-pool\"",
      "  size       = \"c-2\"",
      "  node_count = 2",
      "  tags       = [\"backend\"]",
      "}"
    ]
  },
  "digitalocean-resource-loadbalancer": {
    "description": "Defines loadbalancer",
    "prefix": "tf-digitalocean-resource-loadbalancer",
    "body": [
      "resource \"digitalocean_droplet\" \"web\" {",
      "  name      = \"web-1\"",
      "  size      = \"s-1vcpu-1gb\"",
      "  image     = \"ubuntu-18-04-x64\"",
      "  region    = \"nyc3\"",
      "}",
      "",
      "resource \"digitalocean_loadbalancer\" \"public\" {",
      "  name = \"loadbalancer-1\"",
      "  region = \"nyc3\"",
      "",
      "  forwarding_rule {",
      "    entry_port = 80",
      "    entry_protocol = \"http\"",
      "",
      "    target_port = 80",
      "    target_protocol = \"http\"",
      "  }",
      "",
      "  healthcheck {",
      "    port = 22",
      "    protocol = \"tcp\"",
      "  }",
      "",
      "  droplet_ids = [\"${digitalocean_droplet.web.id}\"]",
      "}"
    ]
  },
  "digitalocean-resource-project": {
    "description": "Defines project",
    "prefix": "tf-digitalocean-resource-project",
    "body": [
      "resource \"digitalocean_project\" \"playground\" {",
      "  name        = \"playground\"",
      "  description = \"A project to represent development resources.\"",
      "  purpose     = \"Web Application\"",
      "  environment = \"Development\"",
      "}"
    ]
  },
  "digitalocean-resource-record": {
    "description": "Defines record",
    "prefix": "tf-digitalocean-resource-record",
    "body": [
      "# Create a new domain",
      "resource \"digitalocean_domain\" \"default\" {",
      "  name = \"example.com\"",
      "}",
      "",
      "# Add a record to the domain",
      "resource \"digitalocean_record\" \"www\" {",
      "  domain = \"${digitalocean_domain.default.name}\"",
      "  type   = \"A\"",
      "  name   = \"www\"",
      "  value  = \"192.168.0.11\"",
      "}",
      "",
      "# Output the FQDN for the record",
      "output \"fqdn\" {",
      "  value = \"${digitalocean_record.www.fqdn}\"",
      "}"
    ]
  },
  "digitalocean-resource-spaces_bucket": {
    "description": "Defines spaces_bucket",
    "prefix": "tf-digitalocean-resource-spaces_bucket",
    "body": [
      "provider \"digitalocean\" {",
      "  token             = \"${var.digitalocean_token}\"",
      "",
      "  spaces_access_id  = \"${var.access_id}\"",
      "  spaces_secret_key = \"${var.secret_key}\"",
      "}",
      "",
      "resource \"digitalocean_spaces_bucket\" \"static-assets\" {",
      "  # ...",
      "}"
    ]
  },
  "digitalocean-resource-ssh_key": {
    "description": "Defines ssh_key",
    "prefix": "tf-digitalocean-resource-ssh_key",
    "body": [
      "# Create a new SSH key",
      "resource \"digitalocean_ssh_key\" \"default\" {",
      "  name       = \"Terraform Example\"",
      "  public_key = \"${file(\"/Users/terraform/.ssh/id_rsa.pub\")}\"",
      "}",
      "",
      "# Create a new Droplet using the SSH key",
      "resource \"digitalocean_droplet\" \"web\" {",
      "  image    = \"ubuntu-18-04-x64\"",
      "  name     = \"web-1\"",
      "  region   = \"nyc3\"",
      "  size     = \"s-1vcpu-1gb\"",
      "  ssh_keys = [\"${digitalocean_ssh_key.default.fingerprint}\"]",
      "}"
    ]
  },
  "digitalocean-resource-tag": {
    "description": "Defines tag",
    "prefix": "tf-digitalocean-resource-tag",
    "body": [
      "# Create a new tag",
      "resource \"digitalocean_tag\" \"foobar\" {",
      "  name = \"foobar\"",
      "}",
      "",
      "# Create a new Droplet in nyc3 with the foobar tag",
      "resource \"digitalocean_droplet\" \"web\" {",
      "  image  = \"ubuntu-18-04-x64\"",
      "  name   = \"web-1\"",
      "  region = \"nyc3\"",
      "  size   = \"s-1vcpu-1gb\"",
      "  tags   = [\"${digitalocean_tag.foobar.id}\"]",
      "}"
    ]
  },
  "digitalocean-resource-volume": {
    "description": "Defines volume",
    "prefix": "tf-digitalocean-resource-volume",
    "body": [
      "resource \"digitalocean_volume\" \"foobar\" {",
      "  region                  = \"nyc1\"",
      "  name                    = \"baz\"",
      "  size                    = 100",
      "  initial_filesystem_type = \"ext4\"",
      "  description             = \"an example volume\"",
      "}",
      "",
      "resource \"digitalocean_droplet\" \"foobar\" {",
      "  name       = \"baz\"",
      "  size       = \"s-1vcpu-1gb\"",
      "  image      = \"ubuntu-18-04-x64\"",
      "  region     = \"nyc1\"",
      "}",
      "",
      "resource \"digitalocean_volume_attachment\" \"foobar\" {",
      "  droplet_id = \"${digitalocean_droplet.foobar.id}\"",
      "  volume_id  = \"${digitalocean_volume.foobar.id}\"",
      "}"
    ]
  },
  "digitalocean-resource-volume_attachment": {
    "description": "Defines volume_attachment",
    "prefix": "tf-digitalocean-resource-volume_attachment",
    "body": [
      "resource \"digitalocean_volume\" \"foobar\" {",
      "  region                  = \"nyc1\"",
      "  name                    = \"baz\"",
      "  size                    = 100",
      "  initial_filesystem_type = \"ext4\"",
      "  description             = \"an example volume\"",
      "}",
      "",
      "resource \"digitalocean_droplet\" \"foobar\" {",
      "  name       = \"baz\"",
      "  size       = \"s-1vcpu-1gb\"",
      "  image      = \"ubuntu-18-04-x64\"",
      "  region     = \"nyc1\"",
      "}",
      "",
      "resource \"digitalocean_volume_attachment\" \"foobar\" {",
      "  droplet_id = \"${digitalocean_droplet.foobar.id}\"",
      "  volume_id = \"${digitalocean_volume.foobar.id}\"",
      "}"
    ]
  },
  "digitalocean-resource-volume_snapshot": {
    "description": "Defines volume_snapshot",
    "prefix": "tf-digitalocean-resource-volume_snapshot",
    "body": [
      "resource \"digitalocean_volume\" \"foobar\" {",
      "  region      = \"nyc1\"",
      "  name        = \"baz\"",
      "  size        = 100",
      "  description = \"an example volume\"",
      "}",
      "",
      "resource \"digitalocean_volume_snapshot\" \"foobar\" {",
      "  name      = \"foo\"",
      "  volume_id = \"${digitalocean_volume.foobar.id}\"",
      "}"
    ]
  },
  "dme-resource-record": {
    "description": "Defines record",
    "prefix": "tf-dme-resource-record",
    "body": [
      "# Add an A record to the domain",
      "resource \"dme_record\" \"www\" {",
      "  domainid    = \"123456\"",
      "  name        = \"www\"",
      "  type        = \"A\"",
      "  value       = \"192.168.1.1\"",
      "  ttl         = 3600",
      "  gtdLocation = \"DEFAULT\"",
      "}"
    ]
  },
  "dns-data-dns_a_record_set": {
    "description": "Defines dns_a_record_set",
    "prefix": "tf-dns-data-dns_a_record_set",
    "body": [
      "data \"dns_a_record_set\" \"google\" {",
      "  host = \"google.com\"",
      "}",
      "",
      "output \"google_addrs\" {",
      "  value = \"${join(\",\", data.dns_a_record_set.google.addrs)}\"",
      "}"
    ]
  },
  "dns-data-dns_aaaa_record_set": {
    "description": "Defines dns_aaaa_record_set",
    "prefix": "tf-dns-data-dns_aaaa_record_set",
    "body": [
      "data \"dns_aaaa_record_set\" \"google\" {",
      "  host = \"google.com\"",
      "}",
      "",
      "output \"google_addrs\" {",
      "  value = \"${join(\",\", data.dns_aaaa_record_set.google.addrs)}\"",
      "}"
    ]
  },
  "dns-data-dns_cname_record_set": {
    "description": "Defines dns_cname_record_set",
    "prefix": "tf-dns-data-dns_cname_record_set",
    "body": [
      "data \"dns_cname_record_set\" \"hashicorp\" {",
      "  host = \"www.hashicorp.com\"",
      "}",
      "",
      "output \"hashi_cname\" {",
      "  value = \"${data.dns_cname_record_set.hashi.cname}\"",
      "}"
    ]
  },
  "dns-data-dns_mx_record_set": {
    "description": "Defines dns_mx_record_set",
    "prefix": "tf-dns-data-dns_mx_record_set",
    "body": [
      "data \"dns_mx_record_set\" \"mail\" {",
      "  domain = \"example.com.\"",
      "}",
      "",
      "output \"mailserver\" {",
      "  value = \"${data.dns_mx_record_set.mail.mx.0.exchange}\"",
      "}"
    ]
  },
  "dns-data-dns_ns_record_set": {
    "description": "Defines dns_ns_record_set",
    "prefix": "tf-dns-data-dns_ns_record_set",
    "body": [
      "data \"dns_ns_record_set\" \"google\" {",
      "  host = \"google.com\"",
      "}",
      "",
      "output \"google_nameservers\" {",
      "  value = \"${join(\",\", data.dns_ns_record_set.google.nameservers)}\"",
      "}"
    ]
  },
  "dns-data-dns_ptr_record_set": {
    "description": "Defines dns_ptr_record_set",
    "prefix": "tf-dns-data-dns_ptr_record_set",
    "body": [
      "data \"dns_ptr_record_set\" \"hashicorp\" {",
      "  ip_address = \"8.8.8.8\"",
      "}",
      "",
      "output \"hashi_ptr\" {",
      "  value = \"${data.dns_ptr_record_set.hashicorp.ptr}\"",
      "}"
    ]
  },
  "dns-data-dns_srv_record_set": {
    "description": "Defines dns_srv_record_set",
    "prefix": "tf-dns-data-dns_srv_record_set",
    "body": [
      "data \"dns_srv_record_set\" \"sip\" {",
      "  service = \"_sip._tcp.example.com.\"",
      "}",
      "",
      "output \"sipserver\" {",
      "  value = \"${data.dns_srv_record_set.sip.srv.0.target}\"",
      "}"
    ]
  },
  "dns-data-dns_txt_record_set": {
    "description": "Defines dns_txt_record_set",
    "prefix": "tf-dns-data-dns_txt_record_set",
    "body": [
      "data \"dns_txt_record_set\" \"hashicorp\" {",
      "  host = \"www.hashicorp.com\"",
      "}",
      "",
      "output \"hashi_txt\" {",
      "  value = \"${data.dns_txt_record_set.hashi.record}\"",
      "}",
      "",
      "output \"hashi_txts\" {",
      "  value = \"${join(\",\", data.dns_txt_record_set.hashi.records)}\"",
      "}"
    ]
  },
  "dns-resource-dns_a_record_set": {
    "description": "Defines dns_a_record_set",
    "prefix": "tf-dns-resource-dns_a_record_set",
    "body": [
      "resource \"dns_a_record_set\" \"www\" {",
      "  zone = \"example.com.\"",
      "  name = \"www\"",
      "  addresses = [",
      "    \"192.168.0.1\",",
      "    \"192.168.0.2\",",
      "    \"192.168.0.3\",",
      "  ]",
      "  ttl = 300",
      "}"
    ]
  },
  "dns-resource-dns_aaaa_record_set": {
    "description": "Defines dns_aaaa_record_set",
    "prefix": "tf-dns-resource-dns_aaaa_record_set",
    "body": [
      "resource \"dns_aaaa_record_set\" \"www\" {",
      "  zone = \"example.com.\"",
      "  name = \"www\"",
      "  addresses = [",
      "    \"fdd5:e282:43b8:5303:dead:beef:cafe:babe\",",
      "    \"fdd5:e282:43b8:5303:cafe:babe:dead:beef\",",
      "  ]",
      "  ttl = 300",
      "}"
    ]
  },
  "dns-resource-dns_cname_record": {
    "description": "Defines dns_cname_record",
    "prefix": "tf-dns-resource-dns_cname_record",
    "body": [
      "resource \"dns_cname_record\" \"foo\" {",
      "  zone  = \"example.com.\"",
      "  name  = \"foo\"",
      "  cname = \"bar.example.com.\"",
      "  ttl   = 300",
      "}"
    ]
  },
  "dns-resource-dns_mx_record_set": {
    "description": "Defines dns_mx_record_set",
    "prefix": "tf-dns-resource-dns_mx_record_set",
    "body": [
      "resource \"dns_a_record_set\" \"smtp\" {",
      "  zone = \"example.com.\"",
      "  name = \"smtp\"",
      "  ttl  = 300",
      "",
      "  addresses = [",
      "    \"192.0.2.1\",",
      "  ]",
      "}",
      "",
      "resource \"dns_a_record_set\" \"backup\" {",
      "  zone = \"example.com.\"",
      "  name = \"backup\"",
      "  ttl  = 300",
      "",
      "  addresses = [",
      "    \"192.0.2.2\",",
      "  ]",
      "}",
      "",
      "resource \"dns_mx_record_set\" \"mx\" {",
      "  zone = \"example.com.\"",
      "  ttl  = 300",
      "",
      "  mx {",
      "    preference = 10",
      "    exchange   = \"smtp.example.com.\"",
      "  }",
      "",
      "  mx {",
      "    preference = 20",
      "    exchange   = \"backup.example.com.\"",
      "  }",
      "",
      "  depends_on = [",
      "    \"dns_a_record_set.smtp\",",
      "    \"dns_a_record_set.backup\",",
      "  ]",
      "}"
    ]
  },
  "dns-resource-dns_ns_record_set": {
    "description": "Defines dns_ns_record_set",
    "prefix": "tf-dns-resource-dns_ns_record_set",
    "body": [
      "resource \"dns_ns_record_set\" \"www\" {",
      "  zone = \"example.com.\"",
      "  name = \"www\"",
      "  nameservers = [",
      "    \"a.iana-servers.net.\",",
      "    \"b.iana-servers.net.\",",
      "  ]",
      "  ttl = 300",
      "}"
    ]
  },
  "dns-resource-dns_ptr_record": {
    "description": "Defines dns_ptr_record",
    "prefix": "tf-dns-resource-dns_ptr_record",
    "body": [
      "resource \"dns_ptr_record\" \"dns-sd\" {",
      "  zone = \"example.com.\"",
      "  name = \"r._dns-sd\"",
      "  ptr  = \"example.com.\"",
      "  ttl  = 300",
      "}"
    ]
  },
  "dns-resource-dns_srv_record_set": {
    "description": "Defines dns_srv_record_set",
    "prefix": "tf-dns-resource-dns_srv_record_set",
    "body": [
      "resource \"dns_srv_record_set\" \"sip\" {",
      "  zone = \"example.com.\"",
      "  name = \"_sip._tcp\"",
      "  srv {",
      "    priority = 10",
      "    weight   = 60",
      "    target   = \"bigbox.example.com.\"",
      "    port     = 5060",
      "  }",
      "  srv {",
      "    priority = 10",
      "    weight   = 20",
      "    target   = \"smallbox1.example.com.\"",
      "    port     = 5060",
      "  }",
      "  srv {",
      "    priority = 10",
      "    weight   = 20",
      "    target   = \"smallbox2.example.com.\"",
      "    port     = 5060",
      "  }",
      "  ttl = 300",
      "}"
    ]
  },
  "dns-resource-dns_txt_record_set": {
    "description": "Defines dns_txt_record_set",
    "prefix": "tf-dns-resource-dns_txt_record_set",
    "body": [
      "resource \"dns_txt_record_set\" \"google\" {",
      "  zone = \"example.com.\"",
      "  txt = [",
      "    \"google-site-verification=...\",",
      "  ]",
      "  ttl = 300",
      "}"
    ]
  },
  "dnsimple-resource-record": {
    "description": "Defines record",
    "prefix": "tf-dnsimple-resource-record",
    "body": [
      "# Add a record to the root domain",
      "resource \"dnsimple_record\" \"foobar\" {",
      "  domain = \"${var.dnsimple_domain}\"",
      "  name   = \"\"",
      "  value  = \"192.168.0.11\"",
      "  type   = \"A\"",
      "  ttl    = 3600",
      "}"
    ]
  },
  "docker-data-docker_network": {
    "description": "Defines docker_network",
    "prefix": "tf-docker-data-docker_network",
    "body": [
      "data \"docker_network\" \"main\" {",
      "  name = \"main\"",
      "}"
    ]
  },
  "docker-data-registry_image": {
    "description": "Defines registry_image",
    "prefix": "tf-docker-data-registry_image",
    "body": [
      "data \"docker_registry_image\" \"ubuntu\" {",
      "  name = \"ubuntu:precise\"",
      "}",
      "",
      "resource \"docker_image\" \"ubuntu\" {",
      "  name          = \"${data.docker_registry_image.ubuntu.name}\"",
      "  pull_triggers = [\"${data.docker_registry_image.ubuntu.sha256_digest}\"]",
      "}"
    ]
  },
  "docker-resource-config": {
    "description": "Defines config",
    "prefix": "tf-docker-resource-config",
    "body": [
      "# Creates a config",
      "resource \"docker_config\" \"foo_config\" {",
      "  name = \"foo_config\"",
      "  data = \"ewogICJzZXJIfQo=\"",
      "}"
    ]
  },
  "docker-resource-container": {
    "description": "Defines container",
    "prefix": "tf-docker-resource-container",
    "body": [
      "# Start a container",
      "resource \"docker_container\" \"ubuntu\" {",
      "  name  = \"foo\"",
      "  image = \"${docker_image.ubuntu.latest}\"",
      "}",
      "",
      "# Find the latest Ubuntu precise image.",
      "resource \"docker_image\" \"ubuntu\" {",
      "  name = \"ubuntu:precise\"",
      "}"
    ]
  },
  "docker-resource-image": {
    "description": "Defines image",
    "prefix": "tf-docker-resource-image",
    "body": [
      "# Find the latest Ubuntu precise image.",
      "resource \"docker_image\" \"ubuntu\" {",
      "  name = \"ubuntu:precise\"",
      "}",
      "",
      "# Access it somewhere else with ${docker_image.ubuntu.latest}",
      ""
    ]
  },
  "docker-resource-network": {
    "description": "Defines network",
    "prefix": "tf-docker-resource-network",
    "body": [
      "# Create a new docker network",
      "resource \"docker_network\" \"private_network\" {",
      "  name = \"my_network\"",
      "}",
      "",
      "# Access it somewhere else with ${docker_network.private_network.name}",
      ""
    ]
  },
  "docker-resource-secret": {
    "description": "Defines secret",
    "prefix": "tf-docker-resource-secret",
    "body": [
      "# Creates a secret",
      "resource \"docker_secret\" \"foo_secret\" {",
      "  name = \"foo_secret\"",
      "  data = \"ewogICJzZXJsaasIfQo=\"",
      "}"
    ]
  },
  "docker-resource-service": {
    "description": "Defines service",
    "prefix": "tf-docker-resource-service",
    "body": [
      "resource \"docker_service\" \"foo\" {",
      "  name = \"foo-service\"",
      "",
      "  task_spec {",
      "    container_spec {",
      "      image = \"repo.mycompany.com:8080/foo-service:v1\"",
      "    }",
      "  }",
      "",
      "  endpoint_spec {",
      "    ports {",
      "      target_port = \"8080\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "docker-resource-volume": {
    "description": "Defines volume",
    "prefix": "tf-docker-resource-volume",
    "body": [
      "# Creates a docker volume \"shared_volume\".",
      "resource \"docker_volume\" \"shared_volume\" {",
      "  name = \"shared_volume\"",
      "}",
      "",
      "# Reference the volume with ${docker_volume.shared_volume.name}",
      ""
    ]
  },
  "dyn-resource-record": {
    "description": "Defines record",
    "prefix": "tf-dyn-resource-record",
    "body": [
      "# Add a record to the domain",
      "resource \"dyn_record\" \"foobar\" {",
      "  zone  = \"${var.dyn_zone}\"",
      "  name  = \"terraform\"",
      "  value = \"192.168.0.11\"",
      "  type  = \"A\"",
      "  ttl   = 3600",
      "}"
    ]
  },
  "fastly-data-ip_ranges": {
    "description": "Defines ip_ranges",
    "prefix": "tf-fastly-data-ip_ranges",
    "body": [
      "data \"fastly_ip_ranges\" \"fastly\" {}",
      "",
      "resource \"aws_security_group\" \"from_fastly\" {",
      "  name = \"from_fastly\"",
      "",
      "  ingress {",
      "    from_port   = \"443\"",
      "    to_port     = \"443\"",
      "    protocol    = \"tcp\"",
      "    cidr_blocks = [\"${data.fastly_ip_ranges.fastly.cidr_blocks}\"]",
      "  }",
      "}"
    ]
  },
  "fastly-resource-service_v1": {
    "description": "Defines service_v1",
    "prefix": "tf-fastly-resource-service_v1",
    "body": [
      "resource \"fastly_service_v1\" \"demo\" {",
      "  name = \"demofastly\"",
      "",
      "  domain {",
      "    name    = \"demo.notexample.com\"",
      "    comment = \"demo\"",
      "  }",
      "",
      "  backend {",
      "    address = \"127.0.0.1\"",
      "    name    = \"localhost\"",
      "    port    = 80",
      "  }",
      "",
      "  force_destroy = true",
      "}"
    ]
  },
  "flexibleengine-data-blockstorage_volume_v2": {
    "description": "Defines blockstorage_volume_v2",
    "prefix": "tf-flexibleengine-data-blockstorage_volume_v2",
    "body": [
      "data \"flexibleengine_blockstorage_volume_v2\" \"volume\" {",
      "  name = \"test_volume\"",
      "}"
    ]
  },
  "flexibleengine-data-cce_cluster_v3": {
    "description": "Defines cce_cluster_v3",
    "prefix": "tf-flexibleengine-data-cce_cluster_v3",
    "body": [
      "#XXX empty snippet",
      ""
    ]
  },
  "flexibleengine-data-cce_nodes_v3": {
    "description": "Defines cce_nodes_v3",
    "prefix": "tf-flexibleengine-data-cce_nodes_v3",
    "body": [
      "    variable \"cluster_id\" { }",
      "    variable \"node_id\" { }",
      "  ",
      "    data \"flexibleengine_cce_node_v3\" \"node\" {",
      "     cluster_id = \"${var.cluster_id}\"",
      "     node_id= \"${var.node_id}\"",
      "    }"
    ]
  },
  "flexibleengine-data-compute_bms_flavors_v2": {
    "description": "Defines compute_bms_flavors_v2",
    "prefix": "tf-flexibleengine-data-compute_bms_flavors_v2",
    "body": [
      "    ",
      "    variable \"flavor_id\" { }",
      "    variable \"disk_size\" { }",
      "",
      "    data \"flexibleengine_compute_bms_flavors_v2\" \"Query_BMS_flavors\" ",
      "    {",
      "        id = \"${var.bms_id}\",",
      "        min_disk = \"${var.disk_size}\",",
      "        sort_key = \"id\",",
      "        sort_dir = \"desc\",",
      "    }",
      "    "
    ]
  },
  "flexibleengine-data-compute_bms_keypairs_v2": {
    "description": "Defines compute_bms_keypairs_v2",
    "prefix": "tf-flexibleengine-data-compute_bms_keypairs_v2",
    "body": [
      "    variable \"keypair_name\" {}",
      "",
      "    data \"flexibleengine_compute_bms_keypairs_v2\" \"Query_BMS_keypair\" ",
      "    {",
      "        name = \"${var.keypair_name}\"",
      "    }"
    ]
  },
  "flexibleengine-data-compute_bms_nic_v2": {
    "description": "Defines compute_bms_nic_v2",
    "prefix": "tf-flexibleengine-data-compute_bms_nic_v2",
    "body": [
      "    ",
      "    variable \"bms_id\" {}",
      "    variable \"nic_id\" {}",
      "",
      "    data \"flexibleengine_compute_bms_nic_v2\" \"Query_BMS_Nic\" ",
      "    {",
      "        server_id = \"${var.bms_id}\",",
      "        id = \"${var.nic_id}\",",
      "    }",
      "       "
    ]
  },
  "flexibleengine-data-compute_bms_server_v2": {
    "description": "Defines compute_bms_server_v2",
    "prefix": "tf-flexibleengine-data-compute_bms_server_v2",
    "body": [
      "",
      "    variable \"bms_id\" {}",
      "    variable \"bms_name\" {}",
      "",
      "    data \"flexibleengine_compute_bms_server_v2\" \"Query_BMS\" ",
      "    {",
      "        id = \"${var.bms_id}\",",
      "        name = \"${var.bms_name}\"     ",
      "    }",
      ""
    ]
  },
  "flexibleengine-data-csbs_backup_policy_v1": {
    "description": "Defines csbs_backup_policy_v1",
    "prefix": "tf-flexibleengine-data-csbs_backup_policy_v1",
    "body": [
      "variable \"policy_id\" { }",
      "",
      "data \"flexibleengine_csbs_backup_policy_v1\" \"csbs_policy\" {",
      "  id = \"${var.policy_id}\" ",
      "}",
      ""
    ]
  },
  "flexibleengine-data-csbs_backup_v1": {
    "description": "Defines csbs_backup_v1",
    "prefix": "tf-flexibleengine-data-csbs_backup_v1",
    "body": [
      "variable \"backup_name\" { }",
      "",
      "data \"flexibleengine_csbs_backup_v1\" \"csbs\" {",
      "  backup_name = \"${var.backup_name}\" ",
      "}"
    ]
  },
  "flexibleengine-data-cts_tracker_v1": {
    "description": "Defines cts_tracker_v1",
    "prefix": "tf-flexibleengine-data-cts_tracker_v1",
    "body": [
      "variable \"bucket_name\" { }",
      "",
      "data \"flexibleengine_cts_tracker_v1\" \"tracker_v1\" {",
      "  bucket_name = \"${var.bucket_name}\"",
      "}",
      ""
    ]
  },
  "flexibleengine-data-dcs_az_v1": {
    "description": "Defines dcs_az_v1",
    "prefix": "tf-flexibleengine-data-dcs_az_v1",
    "body": [
      "",
      "data \"flexibleengine_dcs_az_v1\" \"az1\" {",
      "  name = \"AZ1\"",
      "  port = \"8004\"",
      "  code = \"sa-chile-1a\"",
      "}"
    ]
  },
  "flexibleengine-data-dcs_maintainwindow_v1": {
    "description": "Defines dcs_maintainwindow_v1",
    "prefix": "tf-flexibleengine-data-dcs_maintainwindow_v1",
    "body": [
      "",
      "data \"flexibleengine_dcs_maintainwindow_v1\" \"maintainwindow1\" {",
      "seq = 1",
      "}",
      ""
    ]
  },
  "flexibleengine-data-dcs_product_v1": {
    "description": "Defines dcs_product_v1",
    "prefix": "tf-flexibleengine-data-dcs_product_v1",
    "body": [
      "",
      "data \"flexibleengine_dcs_product_v1\" \"product1\" {",
      "  engine = \"kafka\"",
      "  version = \"1.1.0\"",
      "  instance_type = \"cluster\"",
      "  partition_num = 300",
      "  storage = 600",
      "  storage_spec_code = \"dcs.physical.storage.high\"",
      "}"
    ]
  },
  "flexibleengine-data-dns_zone_v2": {
    "description": "Defines dns_zone_v2",
    "prefix": "tf-flexibleengine-data-dns_zone_v2",
    "body": [
      "data \"flexibleengine_dns_zone_v2\" \"zone_1\" {",
      "  name = \"example.com\"",
      "}"
    ]
  },
  "flexibleengine-data-images_image_v2": {
    "description": "Defines images_image_v2",
    "prefix": "tf-flexibleengine-data-images_image_v2",
    "body": [
      "data \"flexibleengine_images_image_v2\" \"ubuntu\" {",
      "  name = \"Ubuntu 16.04\"",
      "  most_recent = true",
      "}"
    ]
  },
  "flexibleengine-data-kms_data_key_v1": {
    "description": "Defines kms_data_key_v1",
    "prefix": "tf-flexibleengine-data-kms_data_key_v1",
    "body": [
      "",
      "resource \"flexibleengine_kms_key_v1\" \"key1\" {",
      "  key_alias       = \"key_1\"",
      "  pending_days    = \"7\"",
      "  key_description = \"first test key\"",
      "}",
      "",
      "data \"flexibleengine_kms_data_key_v1\" \"kms_datakey1\" {",
      "  key_id         = \"${flexibleengine_kms_key_v1.key1.id}\"",
      "  datakey_length = \"512\"",
      "}",
      ""
    ]
  },
  "flexibleengine-data-kms_key_v1": {
    "description": "Defines kms_key_v1",
    "prefix": "tf-flexibleengine-data-kms_key_v1",
    "body": [
      "",
      "data \"flexibleengine_kms_key_v1\" \"key_1\" {",
      "  key_alias        = \"test_key\"",
      "  key_description  = \"test key description\"",
      "  key_state        = \"2\"",
      "  key_id           = \"af650527-a0ff-4527-aef3-c493df1f3012\"",
      "  realm            = \"cn-north-1\"",
      "  default_key_flag = \"0\"",
      "  domain_id        = \"b168fe00ff56492495a7d22974df2d0b\"",
      "  origin           = \"kms\"",
      "}"
    ]
  },
  "flexibleengine-data-networking_network_v2": {
    "description": "Defines networking_network_v2",
    "prefix": "tf-flexibleengine-data-networking_network_v2",
    "body": [
      "data \"flexibleengine_networking_network_v2\" \"network\" {",
      "  name = \"tf_test_network\"",
      "}"
    ]
  },
  "flexibleengine-data-networking_secgroup_v2": {
    "description": "Defines networking_secgroup_v2",
    "prefix": "tf-flexibleengine-data-networking_secgroup_v2",
    "body": [
      "data \"flexibleengine_networking_secgroup_v2\" \"secgroup\" {",
      "  name = \"tf_test_secgroup\"",
      "}"
    ]
  },
  "flexibleengine-data-rds_flavors_v1": {
    "description": "Defines rds_flavors_v1",
    "prefix": "tf-flexibleengine-data-rds_flavors_v1",
    "body": [
      "data \"flexibleengine_rds_flavors_v1\" \"flavor\" {",
      "    region = \"eu-de\"",
      "    datastore_name = \"PostgreSQL\"",
      "    datastore_version = \"9.5.5\"",
      "    speccode = \"rds.pg.s1.medium\"",
      "}"
    ]
  },
  "flexibleengine-data-rds_flavors_v3": {
    "description": "Defines rds_flavors_v3",
    "prefix": "tf-flexibleengine-data-rds_flavors_v3",
    "body": [
      "data \"flexibleengine_rds_flavors_v3\" \"flavor\" {",
      "    db_type = \"PostgreSQL\"",
      "    db_version = \"9.5\"",
      "    instance_mode = \"ha\"",
      "}"
    ]
  },
  "flexibleengine-data-rts_software_config": {
    "description": "Defines rts_software_config",
    "prefix": "tf-flexibleengine-data-rts_software_config",
    "body": [
      "variable \"config_name\" {}",
      "",
      "variable \"server_id\" {}",
      "",
      "data \"flexibleengine_rts_software_config_v1\" \"myconfig\" {",
      "  id = \"${var.config_name}\"",
      "}",
      "",
      "resource \"flexibleengine_rts_software_deployment_v1\" \"mydeployment\" {",
      "  config_id = \"${data.flexibleengine_rts_software_config_v1.myconfig.id}\"",
      "  server_id = \"${var.server_id}\"",
      "}"
    ]
  },
  "flexibleengine-data-rts_stack_resource_v1": {
    "description": "Defines rts_stack_resource_v1",
    "prefix": "tf-flexibleengine-data-rts_stack_resource_v1",
    "body": [
      "variable \"stack_name\" { }",
      "variable \"resource_name\" { }",
      "",
      "data \"flexibleengine_rts_stack_resource_v1\" \"stackresource\" {",
      "  stack_name = \"${var.stack_name}\"",
      "  resource_name = \"${var.resource_name}\"  ",
      "}"
    ]
  },
  "flexibleengine-data-rts_stack_v1": {
    "description": "Defines rts_stack_v1",
    "prefix": "tf-flexibleengine-data-rts_stack_v1",
    "body": [
      "variable \"stack_name\" { }",
      "",
      "data \"flexibleengine_rts_stack_v1\" \"mystack\" {",
      "  name = \"${var.stack_name}\"  ",
      "}"
    ]
  },
  "flexibleengine-data-s3_bucket_object": {
    "description": "Defines s3_bucket_object",
    "prefix": "tf-flexibleengine-data-s3_bucket_object",
    "body": [
      "data \"flexibleengine_s3_bucket_object\" \"b\" {",
      "  bucket = \"my-test-bucket\"",
      "  key    = \"hello-world.zip\"",
      "}"
    ]
  },
  "flexibleengine-data-sfs_file_system_v2": {
    "description": "Defines sfs_file_system_v2",
    "prefix": "tf-flexibleengine-data-sfs_file_system_v2",
    "body": [
      "    variable \"share_name\" { }",
      "",
      "    variable \"share_id\" { }",
      "",
      "    data \"flexibleengine_sfs_file_system_v2\" \"shared_file\"",
      "    {",
      "        name = \"${var.share_name}\"",
      "        id = \"${var.share_id}\"",
      "    }"
    ]
  },
  "flexibleengine-data-vbs_backup_policy_v2": {
    "description": "Defines vbs_backup_policy_v2",
    "prefix": "tf-flexibleengine-data-vbs_backup_policy_v2",
    "body": [
      "",
      " variable \"policy_name\" { }",
      "",
      " variable \"policy_id\" { }",
      "    ",
      "data \"flexibleengine_vbs_backup_policy_v2\" \"policies\" {",
      "  name = \"${var.policy_name}\"",
      "  id = \"${var.policy_id}\"",
      "}"
    ]
  },
  "flexibleengine-data-vbs_backup_v2": {
    "description": "Defines vbs_backup_v2",
    "prefix": "tf-flexibleengine-data-vbs_backup_v2",
    "body": [
      "variable \"backup_id\" {}",
      "",
      "data \"flexibleengine_vbs_backup_v2\" \"mybackup\" {",
      "  id = \"${var.backup_id}\"",
      "}"
    ]
  },
  "flexibleengine-data-vpc_peering_v2": {
    "description": "Defines vpc_peering_v2",
    "prefix": "tf-flexibleengine-data-vpc_peering_v2",
    "body": [
      "",
      "data \"flexibleengine_vpc_peering_connection_v2\" \"peering\" {",
      "   vpc_id          = \"${flexibleengine_vpc_v1.vpc.id}\"",
      "   peer_vpc_id     = \"${flexibleengine_vpc_v1.peer_vpc.id}\"",
      " }",
      "",
      "",
      "resource \"flexibleengine_vpc_route_v2\" \"vpc_route\" {",
      "  type       = \"peering\"",
      "  nexthop    = \"${data.flexibleengine_vpc_peering_connection_v2.peering.id}\"",
      "  destination = \"192.168.0.0/16\"",
      "  vpc_id = \"${flexibleengine_vpc_v1.vpc.id}\"",
      "}"
    ]
  },
  "flexibleengine-data-vpc_route_ids_v2": {
    "description": "Defines vpc_route_ids_v2",
    "prefix": "tf-flexibleengine-data-vpc_route_ids_v2",
    "body": [
      " variable \"vpc_id\" { }",
      "",
      "data \"flexibleengine_vpc_route_ids_v2\" \"example\" {",
      "  vpc_id = \"${var.vpc_id}\"",
      "}",
      "",
      "data \"flexibleengine_vpc_route_v2\" \"vpc_route\" {",
      "  count = \"${length(data.flexibleengine_vpc_route_ids_v2.example.ids)}\"",
      "  id = \"${data.flexibleengine_vpc_route_ids_v2.example.ids[count.index]}\"",
      "}",
      "",
      "output \"route_nexthop\" {",
      "  value = [\"${data.flexibleengine_vpc_route_v2.vpc_route.*.nexthop}\"]",
      "}"
    ]
  },
  "flexibleengine-data-vpc_route_v2": {
    "description": "Defines vpc_route_v2",
    "prefix": "tf-flexibleengine-data-vpc_route_v2",
    "body": [
      " variable \"route_id\" { }",
      "",
      "data \"flexibleengine_vpc_route_v2\" \"vpc_route\" {",
      "  id = \"${var.route_id}\"",
      "}",
      "",
      "resource \"flexibleengine_vpc_subnet_v1\" \"subnet_v1\" {",
      "  name = \"test-subnet\"",
      "  cidr = \"192.168.0.0/24\"",
      "  gateway_ip = \"192.168.0.1\"",
      "  vpc_id = \"${data.flexibleengine_vpc_route_v2.vpc_route.vpc_id}\"",
      "}",
      ""
    ]
  },
  "flexibleengine-data-vpc_subnet_ids_v1": {
    "description": "Defines vpc_subnet_ids_v1",
    "prefix": "tf-flexibleengine-data-vpc_subnet_ids_v1",
    "body": [
      "data \"flexibleengine_vpc_subnet_ids_v1\" \"subnet_ids\" {",
      "  vpc_id = \"${var.vpc_id}\" ",
      "}",
      "",
      "data \"flexibleengine_vpc_subnet_v1\" \"subnet\" {",
      "  count = \"${length(data.flexibleengine_vpc_subnet_ids_v1.subnet_ids.ids)}\"",
      "  id    = \"${data.flexibleengine_vpc_subnet_ids_v1.subnet_ids.ids[count.index]}\"",
      " }",
      "",
      "output \"subnet_cidr_blocks\" {",
      "  value = \"${data.flexibleengine_vpc_subnet_v1.subnet.*.cidr}\"",
      "}"
    ]
  },
  "flexibleengine-data-vpc_subnet_v1": {
    "description": "Defines vpc_subnet_v1",
    "prefix": "tf-flexibleengine-data-vpc_subnet_v1",
    "body": [
      "data \"flexibleengine_vpc_subnet_v1\" \"subnet_v1\" {",
      "  id   = \"${var.subnet_id}\"",
      " }",
      "",
      "output \"subnet_vpc_id\" {",
      "  value = \"${data.flexibleengine_vpc_subnet_v1.subnet_v1.vpc_id}\"",
      "}"
    ]
  },
  "flexibleengine-data-vpc_v1": {
    "description": "Defines vpc_v1",
    "prefix": "tf-flexibleengine-data-vpc_v1",
    "body": [
      "",
      "variable \"vpc_name\" {}",
      "",
      "data \"flexibleengine_vpc_v1\" \"vpc\" {",
      "  name = \"${var.vpc_name}\"",
      "}",
      ""
    ]
  },
  "flexibleengine-resource-antiddos_v1": {
    "description": "Defines antiddos_v1",
    "prefix": "tf-flexibleengine-resource-antiddos_v1",
    "body": [
      " variable \"eip_id\" {}",
      "  ",
      " resource \"flexibleengine_antiddos_v1\" \"myantiddos\" {",
      "     floating_ip_id = \"${var.eip_id}\"",
      "     enable_l7 = true",
      "     traffic_pos_id = 1",
      "     http_request_pos_id = 3",
      "     cleaning_access_pos_id = 2",
      "     app_type_id = 0",
      " }",
      ""
    ]
  },
  "flexibleengine-resource-as_configuration_v1": {
    "description": "Defines as_configuration_v1",
    "prefix": "tf-flexibleengine-resource-as_configuration_v1",
    "body": [
      "resource \"flexibleengine_as_configuration_v1\" \"my_as_config\" {",
      "  scaling_configuration_name = \"my_as_config\"",
      "  instance_config {",
      "    flavor = \"${var.flavor}\"",
      "    image = \"${var.image_id}\"",
      "    disk {",
      "      size = 40",
      "      volume_type = \"SATA\"",
      "      disk_type = \"SYS\"",
      "    }",
      "    key_name = \"${var.keyname}\"",
      "    user_data = \"${file(\"userdata.txt\")}\"",
      "  }",
      "}"
    ]
  },
  "flexibleengine-resource-as_group_v1": {
    "description": "Defines as_group_v1",
    "prefix": "tf-flexibleengine-resource-as_group_v1",
    "body": [
      "resource \"flexibleengine_as_group_v1\" \"my_as_group\" {",
      "  scaling_group_name = \"my_as_group\"",
      "  scaling_configuration_id = \"37e310f5-db9d-446e-9135-c625f9c2bbfc\"",
      "  desire_instance_number = 2",
      "  min_instance_number = 0",
      "  max_instance_number = 10",
      "  networks {",
      "    id = \"ad091b52-742f-469e-8f3c-fd81cadf0743\"",
      "  }",
      "  security_groups {",
      "    id = \"45e4c6de-6bf0-4843-8953-2babde3d4810\"",
      "  }",
      "  vpc_id = \"1d8f7e7c-fe04-4cf5-85ac-08b478c290e9\"",
      "  delete_publicip = true",
      "  delete_instances = \"yes\"",
      "}"
    ]
  },
  "flexibleengine-resource-as_policy_v1": {
    "description": "Defines as_policy_v1",
    "prefix": "tf-flexibleengine-resource-as_policy_v1",
    "body": [
      "resource \"flexibleengine_as_policy_v1\" \"hth_aspolicy\"{",
      "  scaling_policy_name = \"hth_aspolicy\"",
      "  scaling_group_id = \"4579f2f5-cbe8-425a-8f32-53dcb9d9053a\"",
      "  cool_down_time = 900",
      "  scaling_policy_type = \"RECURRENCE\"",
      "  scaling_policy_action {",
      "    operation = \"ADD\"",
      "    instance_number = 1",
      "  }",
      "  scheduled_policy {",
      "    launch_time = \"07:00\"",
      "    recurrence_type = \"Daily\"",
      "    start_time = \"2017-11-30T12:00Z\"",
      "    end_time = \"2017-12-30T12:00Z\"",
      "  }",
      "}",
      ""
    ]
  },
  "flexibleengine-resource-blockstorage_volume_v2": {
    "description": "Defines blockstorage_volume_v2",
    "prefix": "tf-flexibleengine-resource-blockstorage_volume_v2",
    "body": [
      "resource \"flexibleengine_blockstorage_volume_v2\" \"volume_1\" {",
      "  region      = \"RegionOne\"",
      "  name        = \"volume_1\"",
      "  description = \"first test volume\"",
      "  size        = 3",
      "  metadata = {",
      "    __system__encrypted = \"1\"",
      "    __system__cmkid     = \"kms_id\"",
      "  }",
      "}"
    ]
  },
  "flexibleengine-resource-cce_cluster_v3": {
    "description": "Defines cce_cluster_v3",
    "prefix": "tf-flexibleengine-resource-cce_cluster_v3",
    "body": [
      "    variable \"flavor_id\" { }",
      "    variable \"vpc_id\" { }",
      "    variable \"subnet_id\" { }",
      "\t",
      "    resource \"flexibleengine_cce_cluster_v3\" \"cluster_1\" {",
      "     name = \"cluster\"",
      "     cluster_type= \"VirtualMachine\"",
      "     flavor_id= \"${var.flavor_id}\"",
      "     vpc_id= \"${var.vpc_id}\"",
      "     subnet_id= \"${var.subnet_id}\"",
      "     container_network_type= \"overlay_l2\"",
      "     description= \"Create cluster\"",
      "    }",
      "```",
      "",
      "## Argument Reference",
      "",
      "The following arguments are supported:",
      "",
      "",
      "* `name` - (Required) Cluster name. Changing this parameter will create a new cluster resource.",
      "",
      "* `labels` - (Optional) Cluster tag, key/value pair format. Changing this parameter will create a new cluster resource.",
      "",
      "* `annotations` - (Optional) Cluster annotation, key/value pair format. Changing this parameter will create a new cluster resource.",
      "",
      "* `flavor_id` - (Required) Cluster specifications. Changing this parameter will create a new cluster resource.",
      "",
      "\t* `cce.s1.small` - small-scale single cluster (up to 50 nodes).",
      "\t* `cce.s1.medium` - medium-scale single cluster (up to 200 nodes).",
      "\t* `cce.s1.large` - large-scale single cluster (up to 1000 nodes).",
      "\t* `cce.s2.small` - small-scale HA cluster (up to 50 nodes).",
      "\t* `cce.s2.medium` - medium-scale HA cluster (up to 200 nodes).",
      "\t* `cce.s2.large` - large-scale HA cluster (up to 1000 nodes).",
      "\t* `cce.t1.small` - small-scale single physical machine cluster (up to 10 nodes).",
      "\t* `cce.t1.medium` - medium-scale single physical machine cluster (up to 100 nodes).",
      "\t* `cce.t1.large` - large-scale single physical machine cluster (up to 500 nodes).",
      "\t* `cce.t2.small` - small-scale HA physical machine cluster (up to 10 nodes).",
      "\t* `cce.t2.medium` - medium-scale HA physical machine cluster (up to 100 nodes).",
      "\t* `cce.t2.large` - large-scale HA physical machine cluster (up to 500 nodes).",
      "",
      "* `cluster_version` - (Optional) For the cluster version, possible value is v1.9.7-r1.",
      "",
      "* `cluster_type` - (Required) Cluster Type, possible values are VirtualMachine and BareMetal. Changing this parameter will create a new cluster resource.",
      "",
      "* `description` - (Optional) Cluster description.",
      "",
      "* `billing_mode` - (Optional) Charging mode of the cluster, which is 0 (on demand). Changing this parameter will create a new cluster resource.",
      "",
      "* `extend_param` - (Optional) Extended parameter. Changing this parameter will create a new cluster resource.",
      "",
      "* `vpc_id` - (Required) The ID of the VPC used to create the node. Changing this parameter will create a new cluster resource.",
      "",
      "* `subnet_id` - (Required) The NETWORK ID of the subnet used to create the node. Changing this parameter will create a new cluster resource.",
      "",
      "* `highway_subnet_id` - (Optional) The ID of the high speed network used to create bare metal nodes. Changing this parameter will create a new cluster resource.",
      "",
      "* `container_network_type` - (Required) Container network parameters. Possible values:",
      "",
      "\t* `overlay_l2` - An overlay_l2 network built for containers by using Open vSwitch(OVS)",
      "\t* `underlay_ipvlan` - An underlay_ipvlan network built for bare metal servers by using ipvlan.",
      "\t* `vpc-router` - An vpc-router network built for containers by using ipvlan and custom VPC routes.",
      "",
      "* `container_network_cidr` - (Optional) Container network segment. Changing this parameter will create a new cluster resource.",
      "",
      "## Attributes Reference",
      "",
      "All above argument parameters can be exported as attribute parameters along with attribute reference.",
      "",
      "  * `id` -  Id of the cluster resource.",
      "",
      "  * `status` -  Cluster status information.",
      "",
      "  * `internal` - The internal network address.",
      "",
      "  * `external` - The external network address.",
      "",
      "  * `external_otc` - The endpoint of the cluster to be accessed through API Gateway.",
      "",
      "## Import",
      "",
      " Cluster can be imported using the cluster id, e.g.",
      ""
    ]
  },
  "flexibleengine-resource-cce_nodes_v3": {
    "description": "Defines cce_nodes_v3",
    "prefix": "tf-flexibleengine-resource-cce_nodes_v3",
    "body": [
      "   variable \"cluster_id\" { }",
      "   variable \"ssh_key\" { }",
      "   variable \"availability_zone\" { }",
      "",
      "   resource \"flexibleengine_cce_node_v3\" \"node_1\" {",
      "     cluster_id=\"${var.cluster_id}\"",
      "     name = \"node1\"",
      "     flavor_id=\"s1.medium\"",
      "     iptype=\"5_bgp\"",
      "     availability_zone= \"${var.availability_zone}\"",
      "     key_pair=\"${var.ssh_key}\"",
      "     root_volume {",
      "       size= 40",
      "       volumetype= \"SATA\"",
      "     }",
      "     sharetype= \"PER\"",
      "     bandwidth_size= 100",
      "     data_volumes {",
      "       size= 100",
      "       volumetype= \"SATA\"",
      "     }",
      "  }"
    ]
  },
  "flexibleengine-resource-ces_alarmrule": {
    "description": "Defines ces_alarmrule",
    "prefix": "tf-flexibleengine-resource-ces_alarmrule",
    "body": [
      "resource \"flexibleengine_ces_alarmrule\" \"alarm_rule\" {",
      "  \"alarm_name\" = \"alarm_rule\"",
      "  \"metric\" {",
      "    \"namespace\" = \"SYS.ECS\"",
      "    \"metric_name\" = \"network_outgoing_bytes_rate_inband\"",
      "    \"dimensions\" {",
      "        \"name\" = \"instance_id\"",
      "        \"value\" = \"${flexibleengine_compute_instance_v2.webserver.id}\"",
      "    }",
      "  }",
      "  \"condition\"  {",
      "    \"period\" = 300",
      "    \"filter\" = \"average\"",
      "    \"comparison_operator\" = \">\"",
      "    \"value\" = 6",
      "    \"unit\" = \"B/s\"",
      "    \"count\" = 1",
      "  }",
      "  \"alarm_actions\" {",
      "    \"type\" = \"notification\"",
      "    \"notification_list\" = [",
      "      \"${flexibleengine_smn_topic_v2.topic.id}\"",
      "    ]",
      "  }",
      "  \"alarm_actions\" {",
      "    \"type\" = \"notification\"",
      "    \"notification_list\" = [",
      "      \"${flexibleengine_smn_topic_v2.topic_2.id}\"",
      "    ]",
      "  }",
      "}"
    ]
  },
  "flexibleengine-resource-compute_bms_server_v2": {
    "description": "Defines compute_bms_server_v2",
    "prefix": "tf-flexibleengine-resource-compute_bms_server_v2",
    "body": [
      "variable \"image_id\" {}",
      "variable \"flavor_id\" {}",
      "variable \"keypair_name\" {}",
      "variable \"network_id\" {}",
      "variable \"availability_zone\" {}",
      "",
      "resource \"flexibleengine_compute_bms_server_v2\" \"basic\" {",
      "  name            = \"basic\"",
      "  image_id        = \"${var.image_id}\"",
      "  flavor_id       = \"${var.flavor_id}\"",
      "  key_pair        = \"${var.keypair_name}\"",
      "  security_groups = [\"default\"]",
      "  availability_zone = \"${var.availability_zone}\"",
      "",
      "  metadata = {",
      "    this = \"that\"",
      "  }",
      "",
      "  network {",
      "    uuid = \"${var.network_id}\"",
      "  }",
      "}"
    ]
  },
  "flexibleengine-resource-compute_floatingip_associate_v2": {
    "description": "Defines compute_floatingip_associate_v2",
    "prefix": "tf-flexibleengine-resource-compute_floatingip_associate_v2",
    "body": [
      "resource \"flexibleengine_compute_instance_v2\" \"instance_1\" {",
      "  name            = \"instance_1\"",
      "  image_id        = \"ad091b52-742f-469e-8f3c-fd81cadf0743\"",
      "  flavor_id       = 3",
      "  key_pair        = \"my_key_pair_name\"",
      "  security_groups = [\"default\"]",
      "}",
      "",
      "resource \"flexibleengine_vpc_eip_v1\" \"eip_1\" {",
      "  publicip {",
      "    type = \"5_bgp\"",
      "  }",
      "  bandwidth {",
      "    name = \"test\"",
      "    size = 8",
      "    share_type = \"PER\"",
      "    charge_mode = \"traffic\"",
      "  }",
      "}",
      "",
      "resource \"flexibleengine_compute_floatingip_associate_v2\" \"fip_1\" {",
      "  floating_ip = \"${flexibleengine_vpc_eip_v1.eip_1.publicip.0.ip_address}\"",
      "  instance_id = \"${flexibleengine_compute_instance_v2.instance_1.id}\"",
      "}"
    ]
  },
  "flexibleengine-resource-compute_floatingip_v2": {
    "description": "Defines compute_floatingip_v2",
    "prefix": "tf-flexibleengine-resource-compute_floatingip_v2",
    "body": [
      "resource \"flexibleengine_compute_floatingip_v2\" \"floatip_1\" {",
      "}"
    ]
  },
  "flexibleengine-resource-compute_instance_v2": {
    "description": "Defines compute_instance_v2",
    "prefix": "tf-flexibleengine-resource-compute_instance_v2",
    "body": [
      "resource \"flexibleengine_compute_instance_v2\" \"basic\" {",
      "  name            = \"basic\"",
      "  image_id        = \"ad091b52-742f-469e-8f3c-fd81cadf0743\"",
      "  flavor_id       = \"3\"",
      "  key_pair        = \"my_key_pair_name\"",
      "  security_groups = [\"default\"]",
      "",
      "  metadata = {",
      "    this = \"that\"",
      "  }",
      "",
      "  network {",
      "    name = \"my_network\"",
      "  }",
      "}"
    ]
  },
  "flexibleengine-resource-compute_interface_attach_v2": {
    "description": "Defines compute_interface_attach_v2",
    "prefix": "tf-flexibleengine-resource-compute_interface_attach_v2",
    "body": [
      "resource \"flexibleengine_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"flexibleengine_compute_instance_v2\" \"instance_1\" {",
      "  name            = \"instance_1\"",
      "  security_groups = [\"default\"]",
      "}",
      "",
      "resource \"flexibleengine_compute_interface_attach_v2\" \"ai_1\" {",
      "  instance_id = \"${flexibleengine_compute_instance_v2.instance_1.id}\"",
      "  network_id  = \"${flexibleengine_networking_port_v2.network_1.id}\"",
      "}",
      ""
    ]
  },
  "flexibleengine-resource-compute_keypair_v2": {
    "description": "Defines compute_keypair_v2",
    "prefix": "tf-flexibleengine-resource-compute_keypair_v2",
    "body": [
      "resource \"flexibleengine_compute_keypair_v2\" \"test-keypair\" {",
      "  name       = \"my-keypair\"",
      "  public_key = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDAjpC1hwiOCCmKEWxJ4qzTTsJbKzndLotBCz5PcwtUnflmU+gHJtWMZKpuEGVi29h0A/+ydKek1O18k10Ff+4tyFjiHDQAnOfgWf7+b1yK+qDip3X1C0UPMbwHlTfSGWLGZqd9LvEFx9k3h/M+VtMvwR1lJ9LUyTAImnNjWG7TaIPmui30HvM2UiFEmqkr4ijq45MyX2+fLIePLRIF61p4whjHAQYufqyno3BS48icQb4p6iVEZPo4AE2o9oIyQvj2mx4dk5Y8CgSETOZTYDOR3rU2fZTRDRgPJDH9FWvQjF5tA0p3d9CoWWd2s6GKKbfoUIi8R/Db1BSPJwkqB\"",
      "}"
    ]
  },
  "flexibleengine-resource-compute_servergroup_v2": {
    "description": "Defines compute_servergroup_v2",
    "prefix": "tf-flexibleengine-resource-compute_servergroup_v2",
    "body": [
      "resource \"flexibleengine_compute_servergroup_v2\" \"test-sg\" {",
      "  name     = \"my-sg\"",
      "  policies = [\"anti-affinity\"]",
      "}"
    ]
  },
  "flexibleengine-resource-compute_volume_attach_v2": {
    "description": "Defines compute_volume_attach_v2",
    "prefix": "tf-flexibleengine-resource-compute_volume_attach_v2",
    "body": [
      "resource \"flexibleengine_blockstorage_volume_v2\" \"volume_1\" {",
      "  name = \"volume_1\"",
      "  size = 1",
      "}",
      "",
      "resource \"flexibleengine_compute_instance_v2\" \"instance_1\" {",
      "  name            = \"instance_1\"",
      "  security_groups = [\"default\"]",
      "}",
      "",
      "resource \"flexibleengine_compute_volume_attach_v2\" \"va_1\" {",
      "  instance_id = \"${flexibleengine_compute_instance_v2.instance_1.id}\"",
      "  volume_id   = \"${flexibleengine_blockstorage_volume_v2.volume_1.id}\"",
      "}"
    ]
  },
  "flexibleengine-resource-csbs_backup_policy_v1": {
    "description": "Defines csbs_backup_policy_v1",
    "prefix": "tf-flexibleengine-resource-csbs_backup_policy_v1",
    "body": [
      " variable \"name\" { }",
      " variable \"id\" { }",
      " variable \"resource_name\" { }",
      " ",
      " resource \"flexibleengine_csbs_backup_policy_v1\" \"backup_policy_v1\" {",
      "   name  = \"${var.name}\"",
      "   resource {",
      "     id = \"${var.id}\"",
      "     type = \"OS::Nova::Server\"",
      "     name = \"${var.resource_name}\"",
      "   }",
      "   scheduled_operation {",
      "     enabled = true",
      "     operation_type = \"backup\"",
      "     trigger_pattern = \"BEGIN:VCALENDAR\\r\\nBEGIN:VEVENT\\r\\nRRULE:FREQ=WEEKLY;BYDAY=TH;BYHOUR=12;BYMINUTE=27\\r\\nEND:VEVENT\\r\\nEND:VCALENDAR\\r\\n\"",
      "   }",
      " }",
      ""
    ]
  },
  "flexibleengine-resource-csbs_backup_v1": {
    "description": "Defines csbs_backup_v1",
    "prefix": "tf-flexibleengine-resource-csbs_backup_v1",
    "body": [
      " variable \"backup_name\" { }",
      " variable \"resource_id\" { }",
      " ",
      " resource \"flexibleengine_csbs_backup_v1\" \"backup_v1\" {",
      "   backup_name = \"${var.backup_name}\"",
      "   resource_id = \"${var.resource_id}\"",
      "   resource_type = \"OS::Nova::Server\"",
      " }",
      ""
    ]
  },
  "flexibleengine-resource-cts_tracker_v1": {
    "description": "Defines cts_tracker_v1",
    "prefix": "tf-flexibleengine-resource-cts_tracker_v1",
    "body": [
      " variable \"bucket_name\" { }",
      " ",
      " resource \"flexibleengine_cts_tracker_v1\" \"tracker_v1\" {",
      "   bucket_name      = \"${var.bucket_name}\"",
      "   file_prefix_name      = \"yO8Q\"",
      " }",
      ""
    ]
  },
  "flexibleengine-resource-dcs_instance_v1": {
    "description": "Defines dcs_instance_v1",
    "prefix": "tf-flexibleengine-resource-dcs_instance_v1",
    "body": [
      "       resource \"flexibleengine_networking_secgroup_v2\" \"secgroup_1\" {",
      "         name = \"secgroup_1\"",
      "         description = \"secgroup_1\"",
      "       }",
      "       data \"flexibleengine_dcs_az_v1\" \"az_1\" {",
      "         port = \"8002\"",
      "\t\t}",
      "       data \"flexibleengine_dcs_product_v1\" \"product_1\" {",
      "          spec_code = \"dcs.master_standby\"",
      "\t\t}",
      "\t\tresource \"flexibleengine_dcs_instance_v1\" \"instance_1\" {",
      "\t\t  name  = \"test_dcs_instance\"",
      "          engine_version = \"3.0.7\"",
      "          password = \"Huawei_test\"",
      "          engine = \"Redis\"",
      "          capacity = 2",
      "          vpc_id = \"1477393a-29c9-4de5-843f-18ef51257c7e\"",
      "          security_group_id = \"${flexibleengine_networking_secgroup_v2.secgroup_1.id}\"",
      "          subnet_id = \"27d99e17-42f2-4751-818f-5c8c6c03ff15\"",
      "          available_zones = [\"${data.flexibleengine_dcs_az_v1.az_1.id}\"]",
      "          product_id = \"${data.flexibleengine_dcs_product_v1.product_1.id}\"",
      "          save_days = 1",
      "          backup_type = \"manual\"",
      "          begin_at = \"00:00-01:00\"",
      "          period_type = \"weekly\"",
      "          backup_at = [1]",
      "          depends_on = [\"data.flexibleengine_dcs_product_v1.product_1\", \"flexibleengine_networking_secgroup_v2.secgroup_1\"]",
      "\t\t}"
    ]
  },
  "flexibleengine-resource-dns_recordset_v2": {
    "description": "Defines dns_recordset_v2",
    "prefix": "tf-flexibleengine-resource-dns_recordset_v2",
    "body": [
      "resource \"flexibleengine_dns_zone_v2\" \"example_zone\" {",
      "  name = \"example.com.\"",
      "  email = \"email2@example.com\"",
      "  description = \"a zone\"",
      "  ttl = 6000",
      "  zone_type = \"public\"",
      "}",
      "",
      "resource \"flexibleengine_dns_recordset_v2\" \"rs_example_com\" {",
      "  zone_id = \"${flexibleengine_dns_zone_v2.example_zone.id}\"",
      "  name = \"rs.example.com.\"",
      "  description = \"An example record set\"",
      "  ttl = 3000",
      "  type = \"A\"",
      "  records = [\"10.0.0.1\"]",
      "}"
    ]
  },
  "flexibleengine-resource-dns_zone_v2": {
    "description": "Defines dns_zone_v2",
    "prefix": "tf-flexibleengine-resource-dns_zone_v2",
    "body": [
      "resource \"flexibleengine_dns_zone_v2\" \"my_public_zone\" {",
      "  name = \"example.com.\"",
      "  email = \"jdoe@example.com\"",
      "  description = \"An example zone\"",
      "  ttl = 3000",
      "  zone_type = \"public\"",
      "}"
    ]
  },
  "flexibleengine-resource-drs_replication_v2": {
    "description": "Defines drs_replication_v2",
    "prefix": "tf-flexibleengine-resource-drs_replication_v2",
    "body": [
      "resource \"flexibleengine_blockstorage_volume_v2\" \"volume_1\" {",
      "  name = \"volume_1\"",
      "  size = 1",
      "  availability_zone = \"eu-west-0a\"",
      "}",
      "",
      "resource \"flexibleengine_blockstorage_volume_v2\" \"volume_2\" {",
      "  name = \"volume_2\"",
      "  size = 1",
      "  availability_zone = \"eu-west-0b\"",
      "}",
      "",
      "resource \"flexibleengine_drs_replication_v2\" \"replication_1\" {",
      "  name = \"replication_1\"",
      "  description = \"The description of replication_1\"",
      "  volume_ids = [\"${flexibleengine_blockstorage_volume_v2.volume_1.id}\", \"${flexibleengine_blockstorage_volume_v2.volume_2.id}\"]",
      "  priority_station = \"eu-west-0a\"",
      "}"
    ]
  },
  "flexibleengine-resource-drs_replicationconsistencygroup_v2": {
    "description": "Defines drs_replicationconsistencygroup_v2",
    "prefix": "tf-flexibleengine-resource-drs_replicationconsistencygroup_v2",
    "body": [
      "resource \"flexibleengine_blockstorage_volume_v2\" \"volume_1\" {",
      "  name = \"volume_1\"",
      "  size = 1",
      "  availability_zone = \"eu-west-0a\"",
      "}",
      "",
      "resource \"flexibleengine_blockstorage_volume_v2\" \"volume_2\" {",
      "  name = \"volume_2\"",
      "  size = 1",
      "  availability_zone = \"eu-west-0b\"",
      "}",
      "",
      "resource \"flexibleengine_drs_replication_v2\" \"replication_1\" {",
      "  name = \"replication_1\"",
      "  description = \"The description of replication_1\"",
      "  volume_ids = [\"${flexibleengine_blockstorage_volume_v2.volume_1.id}\", \"${flexibleengine_blockstorage_volume_v2.volume_2.id}\"]",
      "  priority_station = \"eu-west-0a\"",
      "}",
      "",
      "resource \"flexibleengine_drs_replicationconsistencygroup_v2\" \"replicationconsistencygroup_1\" {",
      "  name = \"replicationconsistencygroup_1\"",
      "  description = \"The description of replicationconsistencygroup_1\"",
      "  replication_ids = [\"${flexibleengine_drs_replication_v2.replication_1.id}\"]",
      "  priority_station = \"eu-west-0a\"",
      "}"
    ]
  },
  "flexibleengine-resource-dws_cluster_v1": {
    "description": "Defines dws_cluster_v1",
    "prefix": "tf-flexibleengine-resource-dws_cluster_v1",
    "body": [
      "resource \"flexibleengine_dws_cluster_v1\" \"cluster\" {",
      "  node_type = \"dws.d1.xlarge\"",
      "  number_of_node = 3",
      "  subnet_id = \"{{ subnet_id }}\"",
      "  vpc_id = \"{{ vpc_id }}\"",
      "  security_group_id = \"{{ security_group_id }}\"",
      "  availability_zone = \"{{ availability_zone }}\"",
      "  name = \"terraform_dws_cluster_test\"",
      "  user_name = \"test_cluster_admin\"",
      "  user_pwd = \"cluster123@!\"",
      "",
      "  timeouts {",
      "    create = \"30m\"",
      "    delete = \"30m\"",
      "  }",
      "}"
    ]
  },
  "flexibleengine-resource-elb_backend": {
    "description": "Defines elb_backend",
    "prefix": "tf-flexibleengine-resource-elb_backend",
    "body": [
      "resource \"flexibleengine_elb_loadbalancer\" \"elb\" {",
      "  name = \"elb\"",
      "  type = \"External\"",
      "  description = \"test elb\"",
      "  vpc_id = \"e346dc4a-d9a6-46f4-90df-10153626076e\"",
      "  admin_state_up = 1",
      "  bandwidth = 5",
      "}",
      "",
      "resource \"flexibleengine_elb_listener\" \"listener\" {",
      "  name = \"test-elb-listener\"",
      "  description = \"great listener\"",
      "  protocol = \"TCP\"",
      "  backend_protocol = \"TCP\"",
      "  protocol_port = 12345",
      "  backend_port = 8080",
      "  lb_algorithm = \"roundrobin\"",
      "  loadbalancer_id = \"${flexibleengine_elb_loadbalancer.elb.id}\"",
      "  timeouts {",
      "\tcreate = \"5m\"",
      "\tupdate = \"5m\"",
      "\tdelete = \"5m\"",
      "  }",
      "}",
      "",
      "resource \"flexibleengine_elb_backend\" \"backend\" {",
      "  address = \"192.168.0.211\"",
      "  listener_id = \"${flexibleengine_elb_listener.listener.id}\"",
      "  server_id = \"8f7a32f1-f66c-4d13-9b17-3a13f9f0bb8d\"",
      "}"
    ]
  },
  "flexibleengine-resource-elb_health": {
    "description": "Defines elb_health",
    "prefix": "tf-flexibleengine-resource-elb_health",
    "body": [
      "resource \"flexibleengine_elb_loadbalancer\" \"elb\" {",
      "  name = \"elb\"",
      "  type = \"External\"",
      "  description = \"test elb\"",
      "  vpc_id = \"e346dc4a-d9a6-46f4-90df-10153626076e\"",
      "  admin_state_up = 1",
      "  bandwidth = 5",
      "}",
      "",
      "resource \"flexibleengine_elb_listener\" \"listener\" {",
      "  name = \"test-elb-listener\"",
      "  description = \"great listener\"",
      "  protocol = \"TCP\"",
      "  backend_protocol = \"TCP\"",
      "  protocol_port = 12345",
      "  backend_port = 8080",
      "  lb_algorithm = \"roundrobin\"",
      "  loadbalancer_id = \"${flexibleengine_elb_loadbalancer.elb.id}\"",
      "  timeouts {",
      "\tcreate = \"5m\"",
      "\tupdate = \"5m\"",
      "\tdelete = \"5m\"",
      "  }",
      "}",
      "",
      "resource \"flexibleengine_elb_health\" \"healthcheck\" {",
      "  listener_id = \"${flexibleengine_elb_listener.listener.id}\"",
      "  healthcheck_protocol = \"TCP\"",
      "  healthcheck_connect_port = 22",
      "  healthy_threshold = 5",
      "  healthcheck_timeout = 25",
      "  healthcheck_interval = 3",
      "  timeouts {",
      "    create = \"5m\"",
      "    update = \"5m\"",
      "    delete = \"5m\"",
      "  }",
      "}"
    ]
  },
  "flexibleengine-resource-elb_listener": {
    "description": "Defines elb_listener",
    "prefix": "tf-flexibleengine-resource-elb_listener",
    "body": [
      "resource \"flexibleengine_elb_loadbalancer\" \"elb\" {",
      "  name = \"elb\"",
      "  type = \"External\"",
      "  description = \"test elb\"",
      "  vpc_id = \"e346dc4a-d9a6-46f4-90df-10153626076e\"",
      "  admin_state_up = 1",
      "  bandwidth = 5",
      "}",
      "",
      "resource \"flexibleengine_elb_listener\" \"listener\" {",
      "  name = \"test-elb-listener\"",
      "  description = \"great listener\"",
      "  protocol = \"TCP\"",
      "  backend_protocol = \"TCP\"",
      "  protocol_port = 12345",
      "  backend_port = 8080",
      "  lb_algorithm = \"roundrobin\"",
      "  loadbalancer_id = \"${flexibleengine_elb_loadbalancer.elb.id}\"",
      "  timeouts {",
      "\tcreate = \"5m\"",
      "\tupdate = \"5m\"",
      "\tdelete = \"5m\"",
      "  }",
      "}"
    ]
  },
  "flexibleengine-resource-elb_loadbalancer": {
    "description": "Defines elb_loadbalancer",
    "prefix": "tf-flexibleengine-resource-elb_loadbalancer",
    "body": [
      "resource \"flexibleengine_elb_loadbalancer\" \"elb\" {",
      "  name = \"elb\"",
      "  type = \"External\"",
      "  description = \"test elb\"",
      "  vpc_id = \"e346dc4a-d9a6-46f4-90df-10153626076e\"",
      "  admin_state_up = 1",
      "  bandwidth = 5",
      "}"
    ]
  },
  "flexibleengine-resource-fw_firewall_group_v2": {
    "description": "Defines fw_firewall_group_v2",
    "prefix": "tf-flexibleengine-resource-fw_firewall_group_v2",
    "body": [
      "resource \"flexibleengine_fw_rule_v2\" \"rule_1\" {",
      "  name             = \"my-rule-1\"",
      "  description      = \"drop TELNET traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"tcp\"",
      "  destination_port = \"23\"",
      "  enabled          = \"true\"",
      "}",
      "",
      "resource \"flexibleengine_fw_rule_v2\" \"rule_2\" {",
      "  name             = \"my-rule-2\"",
      "  description      = \"drop NTP traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"udp\"",
      "  destination_port = \"123\"",
      "  enabled          = \"false\"",
      "}",
      "",
      "resource \"flexibleengine_fw_policy_v2\" \"policy_1\" {",
      "  name = \"my-policy\"",
      "",
      "  rules = [\"${flexibleengine_fw_rule_v2.rule_1.id}\",",
      "    \"${flexibleengine_fw_rule_v2.rule_2.id}\",",
      "  ]",
      "}",
      "",
      "resource \"flexibleengine_fw_firewall_group_v2\" \"firewall_group_1\" {",
      "  name      = \"my-firewall-group\"",
      "  ingress_policy_id = \"${flexibleengine_fw_policy_v2.policy_1.id}\"",
      "}"
    ]
  },
  "flexibleengine-resource-fw_policy_v2": {
    "description": "Defines fw_policy_v2",
    "prefix": "tf-flexibleengine-resource-fw_policy_v2",
    "body": [
      "resource \"flexibleengine_fw_rule_v2\" \"rule_1\" {",
      "  name             = \"my-rule-1\"",
      "  description      = \"drop TELNET traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"tcp\"",
      "  destination_port = \"23\"",
      "  enabled          = \"true\"",
      "}",
      "",
      "resource \"flexibleengine_fw_rule_v2\" \"rule_2\" {",
      "  name             = \"my-rule-2\"",
      "  description      = \"drop NTP traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"udp\"",
      "  destination_port = \"123\"",
      "  enabled          = \"false\"",
      "}",
      "",
      "resource \"flexibleengine_fw_policy_v2\" \"policy_1\" {",
      "  name = \"my-policy\"",
      "",
      "  rules = [\"${flexibleengine_fw_rule_v2.rule_1.id}\",",
      "    \"${flexibleengine_fw_rule_v2.rule_2.id}\",",
      "  ]",
      "}"
    ]
  },
  "flexibleengine-resource-fw_rule_v2": {
    "description": "Defines fw_rule_v2",
    "prefix": "tf-flexibleengine-resource-fw_rule_v2",
    "body": [
      "resource \"flexibleengine_fw_rule_v2\" \"rule_1\" {",
      "  name             = \"my_rule\"",
      "  description      = \"drop TELNET traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"tcp\"",
      "  destination_port = \"23\"",
      "  enabled          = \"true\"",
      "}"
    ]
  },
  "flexibleengine-resource-images_image_v2": {
    "description": "Defines images_image_v2",
    "prefix": "tf-flexibleengine-resource-images_image_v2",
    "body": [
      "resource \"flexibleengine_images_image_v2\" \"rancheros\" {",
      "  name   = \"RancherOS\"",
      "  image_source_url = \"https://releases.rancher.com/os/latest/rancheros-openstack.img\"",
      "  container_format = \"bare\"",
      "  disk_format = \"qcow2\"",
      "}"
    ]
  },
  "flexibleengine-resource-kms_key_v1": {
    "description": "Defines kms_key_v1",
    "prefix": "tf-flexibleengine-resource-kms_key_v1",
    "body": [
      "resource \"flexibleengine_kms_key_v1\" \"key_1\" {",
      "  key_alias       = \"key_1\"",
      "  pending_days    = \"7\"",
      "  key_description = \"first test key\"",
      "  realm           = \"cn-north-1\"",
      "  is_enabled      = true",
      "}"
    ]
  },
  "flexibleengine-resource-lb_certificate_v2": {
    "description": "Defines lb_certificate_v2",
    "prefix": "tf-flexibleengine-resource-lb_certificate_v2",
    "body": [
      "resource \"flexibleengine_lb_certificate_v2\" \"certificate_1\" {",
      "  name = \"certificate_1\"",
      "  description = \"terraform test certificate\"",
      "  domain = \"www.elb.com\"",
      "  private_key = <<EOT",
      "-----BEGIN RSA PRIVATE KEY-----",
      "MIIEowIBAAKCAQEAwZ5UJULAjWr7p6FVwGRQRjFN2s8tZ/6LC3X82fajpVsYqF1x",
      "qEuUDndDXVD09E4u83MS6HO6a3bIVQDp6/klnYldiE6Vp8HH5BSKaCWKVg8lGWg1",
      "UM9wZFnlryi14KgmpIFmcu9nA8yV/6MZAe6RSDmb3iyNBmiZ8aZhGw2pI1YwR+15",
      "MVqFFGB+7ExkziROi7L8CFCyCezK2/oOOvQsH1dzQ8z1JXWdg8/9Zx7Ktvgwu5PQ",
      "M3cJtSHX6iBPOkMU8Z8TugLlTqQXKZOEgwajwvQ5mf2DPkVgM08XAgaLJcLigwD5",
      "13koAdtJd5v+9irw+5LAuO3JclqwTvwy7u/YwwIDAQABAoIBACU9S5fjD9/jTMXA",
      "DRs08A+gGgZUxLn0xk+NAPX3LyB1tfdkCaFB8BccLzO6h3KZuwQOBPv6jkdvEDbx",
      "Nwyw3eA/9GJsIvKiHc0rejdvyPymaw9I8MA7NbXHaJrY7KpqDQyk6sx+aUTcy5jg",
      "iMXLWdwXYHhJ/1HVOo603oZyiS6HZeYU089NDUcX+1SJi3e5Ke0gPVXEqCq1O11/",
      "rh24bMxnwZo4PKBWdcMBN5Zf/4ij9vrZE+fFzW7vGBO48A5lvZxWU2U5t/OZQRtN",
      "1uLOHmMFa0FIF2aWbTVfwdUWAFsvAOkHj9VV8BXOUwKOUuEktdkfAlvrxmsFrO/H",
      "yDeYYPkCgYEA/S55CBbR0sMXpSZ56uRn8JHApZJhgkgvYr+FqDlJq/e92nAzf01P",
      "RoEBUajwrnf1ycevN/SDfbtWzq2XJGqhWdJmtpO16b7KBsC6BdRcH6dnOYh31jgA",
      "vABMIP3wzI4zSVTyxRE8LDuboytF1mSCeV5tHYPQTZNwrplDnLQhywcCgYEAw8Yc",
      "Uk/eiFr3hfH/ZohMfV5p82Qp7DNIGRzw8YtVG/3+vNXrAXW1VhugNhQY6L+zLtJC",
      "aKn84ooup0m3YCg0hvINqJuvzfsuzQgtjTXyaE0cEwsjUusOmiuj09vVx/3U7siK",
      "Hdjd2ICPCvQ6Q8tdi8jV320gMs05AtaBkZdsiWUCgYEAtLw4Kk4f+xTKDFsrLUNf",
      "75wcqhWVBiwBp7yQ7UX4EYsJPKZcHMRTk0EEcAbpyaJZE3I44vjp5ReXIHNLMfPs",
      "uvI34J4Rfot0LN3n7cFrAi2+wpNo+MOBwrNzpRmijGP2uKKrq4JiMjFbKV/6utGF",
      "Up7VxfwS904JYpqGaZctiIECgYA1A6nZtF0riY6ry/uAdXpZHL8ONNqRZtWoT0kD",
      "79otSVu5ISiRbaGcXsDExC52oKrSDAgFtbqQUiEOFg09UcXfoR6HwRkba2CiDwve",
      "yHQLQI5Qrdxz8Mk0gIrNrSM4FAmcW9vi9z4kCbQyoC5C+4gqeUlJRpDIkQBWP2Y4",
      "2ct/bQKBgHv8qCsQTZphOxc31BJPa2xVhuv18cEU3XLUrVfUZ/1f43JhLp7gynS2",
      "ep++LKUi9D0VGXY8bqvfJjbECoCeu85vl8NpCXwe/LoVoIn+7KaVIZMwqoGMfgNl",
      "nEqm7HWkNxHhf8A6En/IjleuddS1sf9e/x+TJN1Xhnt9W6pe7Fk1",
      "-----END RSA PRIVATE KEY-----",
      "EOT",
      "",
      "certificate = <<EOT",
      "-----BEGIN CERTIFICATE-----",
      "MIIDpTCCAo2gAwIBAgIJAKdmmOBYnFvoMA0GCSqGSIb3DQEBCwUAMGkxCzAJBgNV",
      "BAYTAnh4MQswCQYDVQQIDAJ4eDELMAkGA1UEBwwCeHgxCzAJBgNVBAoMAnh4MQsw",
      "CQYDVQQLDAJ4eDELMAkGA1UEAwwCeHgxGTAXBgkqhkiG9w0BCQEWCnh4QDE2My5j",
      "b20wHhcNMTcxMjA0MDM0MjQ5WhcNMjAxMjAzMDM0MjQ5WjBpMQswCQYDVQQGEwJ4",
      "eDELMAkGA1UECAwCeHgxCzAJBgNVBAcMAnh4MQswCQYDVQQKDAJ4eDELMAkGA1UE",
      "CwwCeHgxCzAJBgNVBAMMAnh4MRkwFwYJKoZIhvcNAQkBFgp4eEAxNjMuY29tMIIB",
      "IjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAwZ5UJULAjWr7p6FVwGRQRjFN",
      "2s8tZ/6LC3X82fajpVsYqF1xqEuUDndDXVD09E4u83MS6HO6a3bIVQDp6/klnYld",
      "iE6Vp8HH5BSKaCWKVg8lGWg1UM9wZFnlryi14KgmpIFmcu9nA8yV/6MZAe6RSDmb",
      "3iyNBmiZ8aZhGw2pI1YwR+15MVqFFGB+7ExkziROi7L8CFCyCezK2/oOOvQsH1dz",
      "Q8z1JXWdg8/9Zx7Ktvgwu5PQM3cJtSHX6iBPOkMU8Z8TugLlTqQXKZOEgwajwvQ5",
      "mf2DPkVgM08XAgaLJcLigwD513koAdtJd5v+9irw+5LAuO3JclqwTvwy7u/YwwID",
      "AQABo1AwTjAdBgNVHQ4EFgQUo5A2tIu+bcUfvGTD7wmEkhXKFjcwHwYDVR0jBBgw",
      "FoAUo5A2tIu+bcUfvGTD7wmEkhXKFjcwDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0B",
      "AQsFAAOCAQEAWJ2rS6Mvlqk3GfEpboezx2J3X7l1z8Sxoqg6ntwB+rezvK3mc9H0",
      "83qcVeUcoH+0A0lSHyFN4FvRQL6X1hEheHarYwJK4agb231vb5erasuGO463eYEG",
      "r4SfTuOm7SyiV2xxbaBKrXJtpBp4WLL/s+LF+nklKjaOxkmxUX0sM4CTA7uFJypY",
      "c8Tdr8lDDNqoUtMD8BrUCJi+7lmMXRcC3Qi3oZJW76ja+kZA5mKVFPd1ATih8TbA",
      "i34R7EQDtFeiSvBdeKRsPp8c0KT8H1B4lXNkkCQs2WX5p4lm99+ZtLD4glw8x6Ic",
      "i1YhgnQbn5E0hz55OLu5jvOkKQjPCW+8Kg==",
      "-----END CERTIFICATE-----",
      "EOT",
      "",
      "  timeouts {",
      "    create = \"5m\"",
      "    update = \"5m\"",
      "    delete = \"5m\"",
      "  }",
      "}"
    ]
  },
  "flexibleengine-resource-lb_l7policy_v2": {
    "description": "Defines lb_l7policy_v2",
    "prefix": "tf-flexibleengine-resource-lb_l7policy_v2",
    "body": [
      "resource \"flexibleengine_lb_loadbalancer_v2\" \"loadbalancer_1\" {",
      "  name = \"loadbalancer_1\"",
      "  vip_subnet_id = \"SUBNET_ID\"",
      "}",
      "",
      "resource \"flexibleengine_lb_listener_v2\" \"listener_1\" {",
      "  name = \"listener_1\"",
      "  protocol = \"HTTP\"",
      "  protocol_port = 8080",
      "  loadbalancer_id = \"${flexibleengine_lb_loadbalancer_v2.loadbalancer_1.id}\"",
      "}",
      "",
      "resource \"flexibleengine_lb_pool_v2\" \"pool_1\" {",
      "  name            = \"pool_1\"",
      "  protocol        = \"HTTP\"",
      "  lb_method       = \"ROUND_ROBIN\"",
      "  loadbalancer_id = \"${flexibleengine_lb_loadbalancer_v2.loadbalancer_1.id}\"",
      "}",
      "",
      "resource \"flexibleengine_lb_l7policy_v2\" \"l7policy_1\" {",
      "  name             = \"test\"",
      "  action           = \"REDIRECT_TO_POOL\"",
      "  description      = \"test l7 policy\"",
      "  position         = 1",
      "  listener_id      = \"${flexibleengine_lb_listener_v2.listener_1.id}\"",
      "  redirect_pool_id = \"${flexibleengine_lb_pool_v2.pool_1.id}\"",
      "}"
    ]
  },
  "flexibleengine-resource-lb_l7rule_v2": {
    "description": "Defines lb_l7rule_v2",
    "prefix": "tf-flexibleengine-resource-lb_l7rule_v2",
    "body": [
      "resource \"flexibleengine_lb_loadbalancer_v2\" \"loadbalancer_1\" {",
      "  name = \"loadbalancer_1\"",
      "  vip_subnet_id = \"SUBNET_ID\"",
      "}",
      "",
      "resource \"flexibleengine_lb_listener_v2\" \"listener_1\" {",
      "  name = \"listener_1\"",
      "  protocol = \"HTTP\"",
      "  protocol_port = 8080",
      "  loadbalancer_id = \"${flexibleengine_lb_loadbalancer_v2.loadbalancer_1.id}\"",
      "}",
      "",
      "resource \"flexibleengine_lb_pool_v2\" \"pool_1\" {",
      "  name            = \"pool_1\"",
      "  protocol        = \"HTTP\"",
      "  lb_method       = \"ROUND_ROBIN\"",
      "  loadbalancer_id = \"${flexibleengine_lb_loadbalancer_v2.loadbalancer_1.id}\"",
      "}",
      "",
      "resource \"flexibleengine_lb_l7policy_v2\" \"l7policy_1\" {",
      "  name         = \"test\"",
      "  action       = \"REDIRECT_TO_URL\"",
      "  description  = \"test description\"",
      "  position     = 1",
      "  listener_id  = \"${flexibleengine_lb_listener_v2.listener_1.id}\"",
      "  redirect_url = \"http://www.example.com\"",
      "}",
      "",
      "resource \"flexibleengine_lb_l7rule_v2\" \"l7rule_1\" {",
      "  l7policy_id  = \"${flexibleengine_lb_l7policy_v2.l7policy_1.id}\"",
      "  type         = \"PATH\"",
      "  compare_type = \"EQUAL_TO\"",
      "  value        = \"/api\"",
      "}"
    ]
  },
  "flexibleengine-resource-lb_listener_v2": {
    "description": "Defines lb_listener_v2",
    "prefix": "tf-flexibleengine-resource-lb_listener_v2",
    "body": [
      "resource \"flexibleengine_lb_listener_v2\" \"listener_1\" {",
      "  protocol        = \"HTTP\"",
      "  protocol_port   = 8080",
      "  loadbalancer_id = \"d9415786-5f1a-428b-b35f-2f1523e146d2\"",
      "}"
    ]
  },
  "flexibleengine-resource-lb_loadbalancer_v2": {
    "description": "Defines lb_loadbalancer_v2",
    "prefix": "tf-flexibleengine-resource-lb_loadbalancer_v2",
    "body": [
      "resource \"flexibleengine_lb_loadbalancer_v2\" \"lb_1\" {",
      "  vip_subnet_id = \"d9415786-5f1a-428b-b35f-2f1523e146d2\"",
      "}"
    ]
  },
  "flexibleengine-resource-lb_member_v2": {
    "description": "Defines lb_member_v2",
    "prefix": "tf-flexibleengine-resource-lb_member_v2",
    "body": [
      "resource \"flexibleengine_lb_member_v2\" \"member_1\" {",
      "  address       = \"192.168.199.23\"",
      "  protocol_port = 8080",
      "  pool_id       = POOL_ID",
      "  subnet_id     = SUBNET_ID",
      "}"
    ]
  },
  "flexibleengine-resource-lb_monitor_v2": {
    "description": "Defines lb_monitor_v2",
    "prefix": "tf-flexibleengine-resource-lb_monitor_v2",
    "body": [
      "resource \"flexibleengine_lb_monitor_v2\" \"monitor_1\" {",
      "  pool_id     = \"${flexibleengine_lb_pool_v2.pool_1.id}\"",
      "  type        = \"PING\"",
      "  delay       = 20",
      "  timeout     = 10",
      "  max_retries = 5",
      "}"
    ]
  },
  "flexibleengine-resource-lb_pool_v2": {
    "description": "Defines lb_pool_v2",
    "prefix": "tf-flexibleengine-resource-lb_pool_v2",
    "body": [
      "resource \"flexibleengine_lb_pool_v2\" \"pool_1\" {",
      "  protocol    = \"HTTP\"",
      "  lb_method   = \"ROUND_ROBIN\"",
      "  listener_id = \"d9415786-5f1a-428b-b35f-2f1523e146d2\"",
      "",
      "  persistence {",
      "    type        = \"HTTP_COOKIE\"",
      "    cookie_name = \"testCookie\"",
      "  }",
      "}"
    ]
  },
  "flexibleengine-resource-mls_instance_v1": {
    "description": "Defines mls_instance_v1",
    "prefix": "tf-flexibleengine-resource-mls_instance_v1",
    "body": [
      "",
      "resource \"flexibleengine_mrs_cluster_v1\" \"cluster1\" {",
      "  cluster_name = \"mrs-cluster-acc\"",
      "  region = \"eu-west-0\"",
      "  billing_type = 12",
      "  master_node_num = 2",
      "  core_node_num = 3",
      "  master_node_size = \"s1.4xlarge.linux.mrs\"",
      "  core_node_size = \"s1.xlarge.linux.mrs\"",
      "  available_zone_id = \"eu-west-0a\"",
      "  vpc_id = \"c1095fe7-03df-4205-ad2d-6f4c181d436e\"",
      "  subnet_id = \"b65f8d25-c533-47e2-8601-cfaa265a3e3e\"",
      "  cluster_version = \"MRS 1.3.0\"",
      "  volume_type = \"SATA\"",
      "  volume_size = 100",
      "  safe_mode = 0",
      "  cluster_type = 0",
      "  node_public_cert_name = \"KeyPair-ci\"",
      "  cluster_admin_secret = \"\"",
      "  component_list {",
      "      component_name = \"Hadoop\"",
      "  }",
      "  component_list {",
      "      component_name = \"Spark\"",
      "  }",
      "  component_list {",
      "      component_name = \"Hive\"",
      "  }",
      "}",
      "",
      "resource \"flexibleengine_mls_instance_v1\" \"instance\" {",
      "  name = \"terraform-mls-instance\"",
      "  version = \"1.2.0\"",
      "  flavor = \"mls.c2.2xlarge.common\"",
      "  network {",
      "    vpc_id = \"c1095fe7-03df-4205-ad2d-6f4c181d436e\"",
      "    subnet_id = \"b65f8d25-c533-47e2-8601-cfaa265a3e3e\"",
      "\tavailable_zone = \"eu-west-0a\"",
      "\tpublic_ip {",
      "\t  bind_type = \"not_use\"",
      "\t}",
      "  }",
      "  mrs_cluster {",
      "    id = \"${flexibleengine_mrs_cluster_v1.cluster1.id}\"",
      "  }",
      "}"
    ]
  },
  "flexibleengine-resource-mrs_cluster_v1": {
    "description": "Defines mrs_cluster_v1",
    "prefix": "tf-flexibleengine-resource-mrs_cluster_v1",
    "body": [
      "resource \"flexibleengine_mrs_cluster_v1\" \"cluster1\" {",
      "  cluster_name = \"mrs-cluster-chenying\"",
      "  region = \"sa-chile-1\"",
      "  billing_type = 12",
      "  master_node_num = 2",
      "  core_node_num = 3",
      "  master_node_size = \"c2.4xlarge.linux.bigdata\"",
      "  core_node_size = \"s1.xlarge.linux.bigdata\"",
      "  available_zone_id = \"sa-chile-1a\"",
      "  vpc_id = \"51edfb75-f9f0-4bbc-b4dc-21466b93f60d\"",
      "  subnet_id = \"1d7a8646-43ee-455a-a3ab-40da87a1304c\"",
      "  cluster_version = \"MRS 1.5.0\"",
      "  volume_type = \"SATA\"",
      "  volume_size = 100",
      "  safe_mode = 0",
      "  cluster_type = 0",
      "  node_public_cert_name = \"KeyPair-ci\"",
      "  cluster_admin_secret = \"\"",
      "  component_list {",
      "      component_name = \"Hadoop\"",
      "  }",
      "  component_list {",
      "      component_name = \"Spark\"",
      "  }",
      "  component_list {",
      "      component_name = \"Hive\"",
      "  }",
      "}"
    ]
  },
  "flexibleengine-resource-mrs_job_v1": {
    "description": "Defines mrs_job_v1",
    "prefix": "tf-flexibleengine-resource-mrs_job_v1",
    "body": [
      "",
      "resource \"flexibleengine_mrs_job_v1\" \"job1\" {",
      "  job_type = 1",
      "  job_name = \"test_mapreduce_job1\"",
      "  cluster_id = \"ef43d2ff-1ecf-4f13-bd0c-0004c429a058\"",
      "  jar_path = \"s3a://wordcount/program/hadoop-mapreduce-examples-2.7.5.jar\"",
      "  input = \"s3a://wordcount/input/\"",
      "  output = \"s3a://wordcount/output/\"",
      "  job_log = \"s3a://wordcount/log/\"",
      "  arguments = \"wordcount\"",
      "}",
      ""
    ]
  },
  "flexibleengine-resource-nat_dnat_rule_v2": {
    "description": "Defines nat_dnat_rule_v2",
    "prefix": "tf-flexibleengine-resource-nat_dnat_rule_v2",
    "body": [
      "resource \"flexibleengine_nat_dnat_rule_v2\" \"dnat_1\" {",
      "  floating_ip_id = \"2bd659ab-bbf7-43d7-928b-9ee6a10de3ef\"",
      "  nat_gateway_id = \"bf99c679-9f41-4dac-8513-9c9228e713e1\"",
      "  private_ip = \"10.0.0.12\"",
      "  internal_service_port = 993",
      "  protocol = \"tcp\"",
      "  external_service_port = 242",
      "}"
    ]
  },
  "flexibleengine-resource-nat_gateway_v2": {
    "description": "Defines nat_gateway_v2",
    "prefix": "tf-flexibleengine-resource-nat_gateway_v2",
    "body": [
      "resource \"flexibleengine_nat_gateway_v2\" \"nat_1\" {",
      "  name   = \"Terraform\"",
      "  description = \"test for terraform2\"",
      "  spec = \"3\"",
      "  router_id = \"2c1fe4bd-ebad-44ca-ae9d-e94e63847b75\"",
      "  internal_network_id = \"dc8632e2-d9ff-41b1-aa0c-d455557314a0\"",
      "}"
    ]
  },
  "flexibleengine-resource-nat_snat_rule_v2": {
    "description": "Defines nat_snat_rule_v2",
    "prefix": "tf-flexibleengine-resource-nat_snat_rule_v2",
    "body": [
      "resource \"flexibleengine_nat_snat_rule_v2\" \"snat_1\" {",
      "  nat_gateway_id = \"3c0dffda-7c76-452b-9dcc-5bce7ae56b17\"",
      "  network_id = \"dc8632e2-d9ff-41b1-aa0c-d455557314a0\"",
      "  floating_ip_id = \"0a166fc5-a904-42fb-b1ef-cf18afeeddca\"",
      "}"
    ]
  },
  "flexibleengine-resource-networking_floatingip_associate_v2": {
    "description": "Defines networking_floatingip_associate_v2",
    "prefix": "tf-flexibleengine-resource-networking_floatingip_associate_v2",
    "body": [
      "resource \"flexibleengine_networking_port_v2\" \"port_1\" {",
      "  network_id = \"a5bbd213-e1d3-49b6-aed1-9df60ea94b9a\"",
      "}",
      "",
      "resource \"flexibleengine_networking_floatingip_associate_v2\" \"fip_1\" {",
      "  floating_ip = \"1.2.3.4\"",
      "  port_id = \"${flexibleengine_networking_port_v2.port_1.id}\"",
      "}"
    ]
  },
  "flexibleengine-resource-networking_floatingip_v2": {
    "description": "Defines networking_floatingip_v2",
    "prefix": "tf-flexibleengine-resource-networking_floatingip_v2",
    "body": [
      "resource \"flexibleengine_networking_floatingip_v2\" \"floatip_1\" {",
      "}"
    ]
  },
  "flexibleengine-resource-networking_network_v2": {
    "description": "Defines networking_network_v2",
    "prefix": "tf-flexibleengine-resource-networking_network_v2",
    "body": [
      "resource \"flexibleengine_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"flexibleengine_networking_subnet_v2\" \"subnet_1\" {",
      "  name       = \"subnet_1\"",
      "  network_id = \"${flexibleengine_networking_network_v2.network_1.id}\"",
      "  cidr       = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "}",
      "",
      "resource \"flexibleengine_compute_secgroup_v2\" \"secgroup_1\" {",
      "  name        = \"secgroup_1\"",
      "  description = \"a security group\"",
      "",
      "  rule {",
      "    from_port   = 22",
      "    to_port     = 22",
      "    ip_protocol = \"tcp\"",
      "    cidr        = \"0.0.0.0/0\"",
      "  }",
      "}",
      "",
      "resource \"flexibleengine_networking_port_v2\" \"port_1\" {",
      "  name               = \"port_1\"",
      "  network_id         = \"${flexibleengine_networking_network_v2.network_1.id}\"",
      "  admin_state_up     = \"true\"",
      "  security_group_ids = [\"${flexibleengine_compute_secgroup_v2.secgroup_1.id}\"]",
      "",
      "  fixed_ip {",
      "    \"subnet_id\"  = \"${flexibleengine_networking_subnet_v2.subnet_1.id}\"",
      "    \"ip_address\" = \"192.168.199.10\"",
      "  }",
      "}",
      "",
      "resource \"flexibleengine_compute_instance_v2\" \"instance_1\" {",
      "  name            = \"instance_1\"",
      "  security_groups = [\"${flexibleengine_compute_secgroup_v2.secgroup_1.name}\"]",
      "",
      "  network {",
      "    port = \"${flexibleengine_networking_port_v2.port_1.id}\"",
      "  }",
      "}"
    ]
  },
  "flexibleengine-resource-networking_port_v2": {
    "description": "Defines networking_port_v2",
    "prefix": "tf-flexibleengine-resource-networking_port_v2",
    "body": [
      "resource \"flexibleengine_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"flexibleengine_networking_port_v2\" \"port_1\" {",
      "  name           = \"port_1\"",
      "  network_id     = \"${flexibleengine_networking_network_v2.network_1.id}\"",
      "  admin_state_up = \"true\"",
      "}"
    ]
  },
  "flexibleengine-resource-networking_router_interface_v2": {
    "description": "Defines networking_router_interface_v2",
    "prefix": "tf-flexibleengine-resource-networking_router_interface_v2",
    "body": [
      "resource \"flexibleengine_networking_network_v2\" \"network_1\" {",
      "  name           = \"tf_test_network\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"flexibleengine_networking_subnet_v2\" \"subnet_1\" {",
      "  network_id = \"${flexibleengine_networking_network_v2.network_1.id}\"",
      "  cidr       = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "}",
      "",
      "resource \"flexibleengine_networking_router_v2\" \"router_1\" {",
      "  name             = \"my_router\"",
      "  external_gateway = \"f67f0d72-0ddf-11e4-9d95-e1f29f417e2f\"",
      "}",
      "",
      "resource \"flexibleengine_networking_router_interface_v2\" \"router_interface_1\" {",
      "  router_id = \"${flexibleengine_networking_router_v2.router_1.id}\"",
      "  subnet_id = \"${flexibleengine_networking_subnet_v2.subnet_1.id}\"",
      "}"
    ]
  },
  "flexibleengine-resource-networking_router_route_v2": {
    "description": "Defines networking_router_route_v2",
    "prefix": "tf-flexibleengine-resource-networking_router_route_v2",
    "body": [
      "resource \"flexibleengine_networking_router_v2\" \"router_1\" {",
      "  name           = \"router_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"flexibleengine_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"flexibleengine_networking_subnet_v2\" \"subnet_1\" {",
      "  network_id = \"${flexibleengine_networking_network_v2.network_1.id}\"",
      "  cidr       = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "}",
      "",
      "resource \"flexibleengine_networking_router_interface_v2\" \"int_1\" {",
      "  router_id = \"${flexibleengine_networking_router_v2.router_1.id}\"",
      "  subnet_id = \"${flexibleengine_networking_subnet_v2.subnet_1.id}\"",
      "}",
      "",
      "resource \"flexibleengine_networking_router_route_v2\" \"router_route_1\" {",
      "  depends_on       = [\"flexibleengine_networking_router_interface_v2.int_1\"]",
      "  router_id        = \"${flexibleengine_networking_router_v2.router_1.id}\"",
      "  destination_cidr = \"10.0.1.0/24\"",
      "  next_hop         = \"192.168.199.254\"",
      "}"
    ]
  },
  "flexibleengine-resource-networking_router_v2": {
    "description": "Defines networking_router_v2",
    "prefix": "tf-flexibleengine-resource-networking_router_v2",
    "body": [
      "resource \"flexibleengine_networking_router_v2\" \"router_1\" {",
      "  name             = \"my_router\"",
      "  external_gateway = \"f67f0d72-0ddf-11e4-9d95-e1f29f417e2f\"",
      "}"
    ]
  },
  "flexibleengine-resource-networking_secgroup_rule_v2": {
    "description": "Defines networking_secgroup_rule_v2",
    "prefix": "tf-flexibleengine-resource-networking_secgroup_rule_v2",
    "body": [
      "resource \"flexibleengine_networking_secgroup_v2\" \"secgroup_1\" {",
      "  name        = \"secgroup_1\"",
      "  description = \"My neutron security group\"",
      "}",
      "",
      "resource \"flexibleengine_networking_secgroup_rule_v2\" \"secgroup_rule_1\" {",
      "  direction         = \"ingress\"",
      "  ethertype         = \"IPv4\"",
      "  protocol          = \"tcp\"",
      "  port_range_min    = 22",
      "  port_range_max    = 22",
      "  remote_ip_prefix  = \"0.0.0.0/0\"",
      "  security_group_id = \"${flexibleengine_networking_secgroup_v2.secgroup_1.id}\"",
      "}"
    ]
  },
  "flexibleengine-resource-networking_secgroup_v2": {
    "description": "Defines networking_secgroup_v2",
    "prefix": "tf-flexibleengine-resource-networking_secgroup_v2",
    "body": [
      "resource \"flexibleengine_networking_secgroup_v2\" \"secgroup_1\" {",
      "  name        = \"secgroup_1\"",
      "  description = \"My neutron security group\"",
      "}"
    ]
  },
  "flexibleengine-resource-networking_subnet_v2": {
    "description": "Defines networking_subnet_v2",
    "prefix": "tf-flexibleengine-resource-networking_subnet_v2",
    "body": [
      "resource \"flexibleengine_networking_network_v2\" \"network_1\" {",
      "  name           = \"tf_test_network\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"flexibleengine_networking_subnet_v2\" \"subnet_1\" {",
      "  network_id = \"${flexibleengine_networking_network_v2.network_1.id}\"",
      "  cidr       = \"192.168.199.0/24\"",
      "}"
    ]
  },
  "flexibleengine-resource-networking_vip_associate_v2": {
    "description": "Defines networking_vip_associate_v2",
    "prefix": "tf-flexibleengine-resource-networking_vip_associate_v2",
    "body": [
      "resource \"flexibleengine_networking_network_v2\" \"network_1\" {",
      "  name = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"flexibleengine_networking_subnet_v2\" \"subnet_1\" {",
      "  name = \"subnet_1\"",
      "  cidr = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "  network_id = \"${flexibleengine_networking_network_v2.network_1.id}\"",
      "}",
      "",
      "resource \"flexibleengine_networking_router_interface_v2\" \"router_interface_1\" {",
      "  router_id = \"${flexibleengine_networking_router_v2.router_1.id}\"",
      "  subnet_id = \"${flexibleengine_networking_subnet_v2.subnet_1.id}\"",
      "}",
      "",
      "resource \"flexibleengine_networking_router_v2\" \"router_1\" {",
      "  name = \"router_1\"",
      "  external_gateway = \"0a2228f2-7f8a-45f1-8e09-9039e1d09975\"",
      "}",
      "",
      "resource \"flexibleengine_networking_port_v2\" \"port_1\" {",
      "  name = \"port_1\"",
      "  admin_state_up = \"true\"",
      "  network_id = \"${flexibleengine_networking_network_v2.network_1.id}\"",
      "",
      "  fixed_ip {",
      "    subnet_id =  \"${flexibleengine_networking_subnet_v2.subnet_1.id}\"",
      "  }",
      "}",
      "",
      "resource \"flexibleengine_compute_instance_v2\" \"instance_1\" {",
      "  name = \"instance_1\"",
      "  security_groups = [\"default\"]",
      "",
      "  network {",
      "    port = \"${flexibleengine_networking_port_v2.port_1.id}\"",
      "  }",
      "}",
      "",
      "resource \"flexibleengine_networking_port_v2\" \"port_2\" {",
      "  name = \"port_2\"",
      "  admin_state_up = \"true\"",
      "  network_id = \"${flexibleengine_networking_network_v2.network_1.id}\"",
      "",
      "  fixed_ip {",
      "    subnet_id =  \"${flexibleengine_networking_subnet_v2.subnet_1.id}\"",
      "  }",
      "}",
      "",
      "resource \"flexibleengine_compute_instance_v2\" \"instance_2\" {",
      "  name = \"instance_2\"",
      "  security_groups = [\"default\"]",
      "",
      "  network {",
      "    port = \"${flexibleengine_networking_port_v2.port_1.id}\"",
      "  }",
      "}",
      "",
      "resource \"flexibleengine_networking_vip_v2\" \"vip_1\" {",
      "  network_id = \"${flexibleengine_networking_network_v2.network_1.id}\"",
      "  subnet_id = \"${flexibleengine_networking_subnet_v2.subnet_1.id}\"",
      "}",
      "",
      "resource \"flexibleengine_networking_vip_associate_v2\" \"vip_associate_1\" {",
      "  vip_id = \"${flexibleengine_networking_vip_v2.vip_1.id}\"",
      "  port_ids = [\"${flexibleengine_networking_port_v2.port_1.id}\", \"${flexibleengine_networking_port_v2.port_2.id}\"]",
      "}"
    ]
  },
  "flexibleengine-resource-networking_vip_v2": {
    "description": "Defines networking_vip_v2",
    "prefix": "tf-flexibleengine-resource-networking_vip_v2",
    "body": [
      "resource \"flexibleengine_networking_network_v2\" \"network_1\" {",
      "  name = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"flexibleengine_networking_subnet_v2\" \"subnet_1\" {",
      "  name = \"subnet_1\"",
      "  cidr = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "  network_id = \"${flexibleengine_networking_network_v2.network_1.id}\"",
      "}",
      "",
      "resource \"flexibleengine_networking_router_interface_v2\" \"router_interface_1\" {",
      "  router_id = \"${flexibleengine_networking_router_v2.router_1.id}\"",
      "  subnet_id = \"${flexibleengine_networking_subnet_v2.subnet_1.id}\"",
      "}",
      "",
      "resource \"flexibleengine_networking_router_v2\" \"router_1\" {",
      "  name = \"router_1\"",
      "  external_gateway = \"0a2228f2-7f8a-45f1-8e09-9039e1d09975\"",
      "}",
      "",
      "resource \"flexibleengine_networking_vip_v2\" \"vip_1\" {",
      "  network_id = \"${flexibleengine_networking_network_v2.network_1.id}\"",
      "  subnet_id = \"${flexibleengine_networking_subnet_v2.subnet_1.id}\"",
      "}"
    ]
  },
  "flexibleengine-resource-rds_instance_v1": {
    "description": "Defines rds_instance_v1",
    "prefix": "tf-flexibleengine-resource-rds_instance_v1",
    "body": [
      "data \"flexibleengine_rds_flavors_v1\" \"flavor\" {",
      "    region = \"eu-de\"",
      "    datastore_name = \"PostgreSQL\"",
      "    datastore_version = \"9.5.5\"",
      "    speccode = \"rds.pg.s1.large.ha\"",
      "}",
      "",
      "resource \"flexibleengine_compute_secgroup_v2\" \"secgrp_rds\" {",
      "  name        = \"secgrp-rds-instance\"",
      "  description = \"Rds Security Group\"",
      "}",
      "",
      "resource \"flexibleengine_rds_instance_v1\" \"instance\" {",
      "  name = \"rds-instance\"",
      "  datastore {",
      "    type = \"PostgreSQL\"",
      "    version = \"9.5.5\"",
      "  }",
      "  flavorref = \"${data.flexibleengine_rds_flavors_v1.flavor.id}\"",
      "  volume {",
      "    type = \"COMMON\"",
      "    size = 200",
      "  }",
      "  region = \"eu-de\"",
      "  availabilityzone = \"eu-de-01\"",
      "  vpc = \"c1095fe7-03df-4205-ad2d-6f4c181d436e\"",
      "  nics {",
      "    subnetid = \"b65f8d25-c533-47e2-8601-cfaa265a3e3e\"",
      "  }",
      "  securitygroup {",
      "    id = \"${flexibleengine_compute_secgroup_v2.secgrp_rds.id}\"",
      "  }",
      "  dbport = \"8635\"",
      "  backupstrategy {",
      "    starttime = \"04:00:00\"",
      "    keepdays = 4",
      "  }",
      "  dbrtpd = \"Huangwei!120521\"",
      "  ha {",
      "    enable = true",
      "    replicationmode = \"async\"",
      "  }",
      "  depends_on = [\"flexibleengine_compute_secgroup_v2.secgrp_rds\"]",
      "}"
    ]
  },
  "flexibleengine-resource-rds_instance_v3": {
    "description": "Defines rds_instance_v3",
    "prefix": "tf-flexibleengine-resource-rds_instance_v3",
    "body": [
      "resource \"flexibleengine_networking_secgroup_v2\" \"secgroup\" {",
      "  name = \"terraform_test_security_group\"",
      "  description = \"terraform security group acceptance test\"",
      "}",
      "",
      "resource \"flexibleengine_rds_instance_v3\" \"instance\" {",
      "  availability_zone = [\"{{ availability_zone }}\"]",
      "  db {",
      "    password = \"Huangwei!120521\"",
      "    type = \"PostgreSQL\"",
      "    version = \"9.5\"",
      "    port = \"8635\"",
      "  }",
      "  name = \"terraform_test_rds_instance\"",
      "  security_group_id = \"${flexibleengine_networking_secgroup_v2.secgroup.id}\"",
      "  subnet_id = \"{{ subnet_id }}\"",
      "  vpc_id = \"{{ vpc_id }}\"",
      "  volume {",
      "    type = \"COMMON\"",
      "    size = 100",
      "  }",
      "  flavor = \"rds.pg.s1.medium\"",
      "  backup_strategy {",
      "    start_time = \"08:00-09:00\"",
      "    keep_days = 1",
      "  }",
      "}"
    ]
  },
  "flexibleengine-resource-rds_parametergroup_v3": {
    "description": "Defines rds_parametergroup_v3",
    "prefix": "tf-flexibleengine-resource-rds_parametergroup_v3",
    "body": [
      "",
      "resource \"flexibleengine_rds_parametergroup_v3\" \"pg_1\" {",
      "\tname = \"pg_1\"",
      "\tdescription = \"description_1\"",
      "\tvalues = {",
      "\t\tmax_connections = \"10\"",
      "\t\tautocommit = \"OFF\"",
      "\t}",
      "\tdatastore {",
      "\t\ttype = \"mysql\"",
      "\t\tversion = \"5.6\"",
      "\t}",
      "}",
      ""
    ]
  },
  "flexibleengine-resource-rts_software_config_v1": {
    "description": "Defines rts_software_config_v1",
    "prefix": "tf-flexibleengine-resource-rts_software_config_v1",
    "body": [
      "variable \"config_name\" {}",
      " ",
      "resource \"flexibleengine_rts_software_config_v1\" \"myconfig\" {",
      "  name = \"${var.config_name}\"",
      "}"
    ]
  },
  "flexibleengine-resource-rts_stack_v1": {
    "description": "Defines rts_stack_v1",
    "prefix": "tf-flexibleengine-resource-rts_stack_v1",
    "body": [
      " variable \"name\" { }",
      " variable \"network_id\" { }",
      " variable \"instance_type\" { }",
      " variable \"image_id\" { }",
      " ",
      "resource \"flexibleengine_rts_stack_v1\" \"mystack\" {",
      "  name = \"${var.name}\"",
      "  disable_rollback = true",
      "  timeout_mins=60",
      "  parameters = {",
      "      \"network_id\" = \"${var.network_id}\"",
      "      \"instance_type\" = \"${var.instance_type}\"",
      "      \"image_id\" = \"${var.image_id}\"",
      "    }",
      "  template_body = <<STACK",
      "  {",
      "    \"heat_template_version\": \"2016-04-08\",",
      "    \"description\": \"Simple template to deploy\",",
      "    \"parameters\": {",
      "        \"image_id\": {",
      "            \"type\": \"string\",",
      "            \"description\": \"Image to be used for compute instance\",",
      "            \"label\": \"Image ID\"",
      "        },",
      "        \"network_id\": {",
      "            \"type\": \"string\",",
      "            \"description\": \"The Network to be used\",",
      "            \"label\": \"Network UUID\"",
      "        },",
      "        \"instance_type\": {",
      "            \"type\": \"string\",",
      "            \"description\": \"Type of instance (Flavor) to be used\",",
      "            \"label\": \"Instance Type\"",
      "        }",
      "    },",
      "    \"resources\": {",
      "        \"my_instance\": {",
      "            \"type\": \"OS::Nova::Server\",",
      "            \"properties\": {",
      "                \"image\": {",
      "                    \"get_param\": \"image_id\"",
      "                },",
      "                \"flavor\": {",
      "                    \"get_param\": \"instance_type\"",
      "                },",
      "                \"networks\": [{",
      "                    \"network\": {",
      "                        \"get_param\": \"network_id\"",
      "                    }",
      "                }]",
      "            }",
      "        }",
      "    },",
      "    \"outputs\":  {",
      "      \"InstanceIP\":{",
      "        \"description\": \"Instance IP\",",
      "        \"value\": {  \"get_attr\": [\"my_instance\", \"first_address\"]  }",
      "      }",
      "    }",
      "}",
      "STACK",
      " }"
    ]
  },
  "flexibleengine-resource-s3_bucket": {
    "description": "Defines s3_bucket",
    "prefix": "tf-flexibleengine-resource-s3_bucket",
    "body": [
      "resource \"flexibleengine_s3_bucket\" \"b\" {",
      "  bucket = \"my-tf-test-bucket\"",
      "  acl    = \"private\"",
      "}"
    ]
  },
  "flexibleengine-resource-s3_bucket_object": {
    "description": "Defines s3_bucket_object",
    "prefix": "tf-flexibleengine-resource-s3_bucket_object",
    "body": [
      "resource \"flexibleengine_s3_bucket_object\" \"object\" {",
      "  bucket = \"your_bucket_name\"",
      "  key    = \"new_object_key\"",
      "  source = \"path/to/file\"",
      "  etag   = \"${md5(file(\"path/to/file\"))}\"",
      "}"
    ]
  },
  "flexibleengine-resource-s3_bucket_policy": {
    "description": "Defines s3_bucket_policy",
    "prefix": "tf-flexibleengine-resource-s3_bucket_policy",
    "body": [
      "resource \"flexibleengine_s3_bucket\" \"b\" {",
      "  bucket = \"my_tf_test_bucket\"",
      "}",
      "",
      "resource \"flexibleengine_s3_bucket_policy\" \"b\" {",
      "  bucket = \"${flexibleengine_s3_bucket.b.id}\"",
      "  policy =<<POLICY",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Id\": \"MYBUCKETPOLICY\",",
      "  \"Statement\": [",
      "    {",
      "      \"Sid\": \"IPAllow\",",
      "      \"Effect\": \"Deny\",",
      "      \"Principal\": \"*\",",
      "      \"Action\": \"s3:*\",",
      "      \"Resource\": \"arn:aws:s3:::my_tf_test_bucket/*\",",
      "      \"Condition\": {",
      "         \"IpAddress\": {\"aws:SourceIp\": \"8.8.8.8/32\"}",
      "      } ",
      "    } ",
      "  ]",
      "}",
      "POLICY",
      "}"
    ]
  },
  "flexibleengine-resource-sfs_file_system_v2": {
    "description": "Defines sfs_file_system_v2",
    "prefix": "tf-flexibleengine-resource-sfs_file_system_v2",
    "body": [
      "    variable \"share_name\" { }",
      "",
      "    variable \"share_description\" { }",
      "",
      "    variable \"vpc_id\" { }",
      "",
      "    resource \"flexibleengine_sfs_file_system_v2\" \"share-file\"",
      "    {",
      "            size = 50",
      "            name = \"${var.share_name}\"",
      "            access_to = \"${var.vpc_id}\"",
      "            access_level = \"rw\"",
      "            description = \"${var.share_description}\"",
      "            metadata = {",
      "                \"type\"=\"nfs\"",
      "            }",
      "",
      "    }"
    ]
  },
  "flexibleengine-resource-smn_subscription_v2": {
    "description": "Defines smn_subscription_v2",
    "prefix": "tf-flexibleengine-resource-smn_subscription_v2",
    "body": [
      "resource \"flexibleengine_smn_topic_v2\" \"topic_1\" {",
      "  name\t\t  = \"topic_1\"",
      "  display_name    = \"The display name of topic_1\"",
      "}",
      "",
      "resource \"flexibleengine_smn_subscription_v2\" \"subscription_1\" {",
      "  topic_urn       = \"${flexibleengine_smn_topic_v2.topic_1.id}\"",
      "  endpoint        = \"mailtest@gmail.com\"",
      "  protocol        = \"email\"",
      "  remark          = \"O&M\"",
      "}",
      "",
      "resource \"flexibleengine_smn_subscription_v2\" \"subscription_2\" {",
      "  topic_urn       = \"${flexibleengine_smn_topic_v2.topic_1.id}\"",
      "  endpoint        = \"13600000000\"",
      "  protocol        = \"sms\"",
      "  remark          = \"O&M\"",
      "}"
    ]
  },
  "flexibleengine-resource-smn_topic_v2": {
    "description": "Defines smn_topic_v2",
    "prefix": "tf-flexibleengine-resource-smn_topic_v2",
    "body": [
      "resource \"flexibleengine_smn_topic_v2\" \"topic_1\" {",
      "  name            = \"topic_1\"",
      "  display_name    = \"The display name of topic_1\"",
      "}"
    ]
  },
  "flexibleengine-resource-vbs_backup_policy_v2": {
    "description": "Defines vbs_backup_policy_v2",
    "prefix": "tf-flexibleengine-resource-vbs_backup_policy_v2",
    "body": [
      "resource \"flexibleengine_vbs_backup_policy_v2\" \"vbs\" {",
      "  name = \"policy_002\"",
      "  start_time  = \"12:00\"",
      "  status  = \"ON\"",
      "  retain_first_backup = \"N\"",
      "  rentention_num = 2",
      "  frequency = 1",
      "}"
    ]
  },
  "flexibleengine-resource-vbs_backup_v2": {
    "description": "Defines vbs_backup_v2",
    "prefix": "tf-flexibleengine-resource-vbs_backup_v2",
    "body": [
      "variable \"backup_name\" {}",
      "",
      "variable \"volume_id\" {}",
      " ",
      "resource \"flexibleengine_vbs_backup_v2\" \"mybackup\" {",
      "  volume_id = \"${var.volume_id}\"",
      "  name = \"${var.backup_name}\"",
      "}"
    ]
  },
  "flexibleengine-resource-vpc_eip_v1": {
    "description": "Defines vpc_eip_v1",
    "prefix": "tf-flexibleengine-resource-vpc_eip_v1",
    "body": [
      "resource \"flexibleengine_vpc_eip_v1\" \"eip_1\" {",
      "  publicip {",
      "    type = \"5_bgp\"",
      "  }",
      "  bandwidth {",
      "    name = \"test\"",
      "    size = 8",
      "    share_type = \"PER\"",
      "    charge_mode = \"traffic\"",
      "  }",
      "}"
    ]
  },
  "flexibleengine-resource-vpc_peering_accepter_v2": {
    "description": "Defines vpc_peering_accepter_v2",
    "prefix": "tf-flexibleengine-resource-vpc_peering_accepter_v2",
    "body": [
      " provider \"flexibleengine\"  {",
      "    alias = \"main\"",
      "    user_name   = \"${var.username}\"",
      "    domain_name = \"${var.domain_name}\"",
      "    password    = \"${var.password}\"",
      "    auth_url    = \"${var.auth_url}\"",
      "    region      = \"${var.region}\"",
      "    tenant_id   = \"${var.tenant_id}\"",
      "}",
      "",
      "provider \"flexibleengine\"  {",
      "    alias = \"peer\"",
      "    user_name = \"${var.peer_username}\"",
      "    domain_name = \"${var.peer_domain_name}\"",
      "    password    = \"${var.peer_password}\"",
      "    auth_url    = \"${var.peer_auth_url}\"",
      "    region      = \"${var.peer_region}\"",
      "    tenant_id   = \"${var.peer_tenant_id}\"",
      "}",
      "",
      "resource \"flexibleengine_vpc_v1\" \"vpc_main\" {",
      "    provider = \"flexibleengine.main\"",
      "    name = \"${var.vpc_name}\"",
      "    cidr = \"${var.vpc_cidr}\"",
      "}",
      "",
      "resource \"flexibleengine_vpc_v1\" \"vpc_peer\" {",
      "    provider = \"flexibleengine.peer\"",
      "    name = \"${var.peer_vpc_name}\"",
      "    cidr = \"${var.peer_vpc_cidr}\"",
      "}",
      "",
      "# Requester's side of the connection.",
      "resource \"flexibleengine_vpc_peering_connection_v2\" \"peering\" {",
      "    provider = \"flexibleengine.main\"",
      "    name = \"${var.peer_name}\"",
      "    vpc_id = \"${flexibleengine_vpc_v1.vpc_main.id}\"",
      "    peer_vpc_id = \"${flexibleengine_vpc_v1.vpc_peer.id}\"",
      "    peer_tenant_id =  \"${var.tenant_id}\"",
      "}",
      "",
      "# Accepter's side of the connection.",
      "resource \"flexibleengine_vpc_peering_connection_accepter_v2\" \"peer\" {",
      "    provider = \"flexibleengine.peer\"",
      "    vpc_peering_connection_id = \"${flexibleengine_vpc_peering_connection_v2.peering.id}\"",
      "    accept = true",
      "  ",
      "}"
    ]
  },
  "flexibleengine-resource-vpc_peering_v2": {
    "description": "Defines vpc_peering_v2",
    "prefix": "tf-flexibleengine-resource-vpc_peering_v2",
    "body": [
      "resource \"flexibleengine_vpc_peering_connection_v2\" \"peering\" {",
      "  name = \"${var.peer_conn_name}\"",
      "  vpc_id = \"${var.vpc_id}\"",
      "  peer_vpc_id = \"${var.accepter_vpc_id}\"",
      "}"
    ]
  },
  "flexibleengine-resource-vpc_route_v2": {
    "description": "Defines vpc_route_v2",
    "prefix": "tf-flexibleengine-resource-vpc_route_v2",
    "body": [
      "#XXX empty snippet",
      ""
    ]
  },
  "flexibleengine-resource-vpc_subnet_v1": {
    "description": "Defines vpc_subnet_v1",
    "prefix": "tf-flexibleengine-resource-vpc_subnet_v1",
    "body": [
      "resource \"flexibleengine_vpc_v1\" \"vpc_v1\" {",
      "  name = \"${var.vpc_name}\"",
      "  cidr = \"${var.vpc_cidr}\"",
      "}",
      "",
      "",
      "resource \"flexibleengine_vpc_subnet_v1\" \"subnet_v1\" {",
      "  name = \"${var.subnet_name}\"",
      "  cidr = \"${var.subnet_cidr}\"",
      "  gateway_ip = \"${var.subnet_gateway_ip}\"",
      "  vpc_id = \"${flexibleengine_vpc_v1.vpc_v1.id}\"",
      "}"
    ]
  },
  "flexibleengine-resource-vpc_v1": {
    "description": "Defines vpc_v1",
    "prefix": "tf-flexibleengine-resource-vpc_v1",
    "body": [
      "",
      "variable \"vpc_name\" {",
      "  default = \"flexibleengine_vpc\"",
      "}",
      "",
      "variable \"vpc_cidr\" {",
      "  default = \"192.168.0.0/16\"",
      "}",
      "",
      "resource \"flexibleengine_vpc_v1\" \"vpc_v1\" {",
      "  name = \"${var.vpc_name}\"",
      "  cidr = \"${var.vpc_cidr}\"",
      "}",
      ""
    ]
  },
  "fortios-resource-fortios_firewall_object_address": {
    "description": "Defines fortios_firewall_object_address",
    "prefix": "tf-fortios-resource-fortios_firewall_object_address",
    "body": [
      "provider \"fortios\" {\r",
      "\thostname = \"54.226.179.231\"\r",
      "\ttoken = \"jn3t3Nw7qckQzt955Htkfj5hwQ6jdb\"\t\r",
      "}\r",
      "\r",
      "resource \"fortios_firewall_object_address\" \"s1\" {\r",
      "\tname = \"s1\"\r",
      "\ttype = \"iprange\"\r",
      "\tstart_ip = \"1.0.0.0\"\r",
      "\tend_ip = \"2.0.0.0\"\r",
      "\tcomment = \"dd\"\r",
      "}\r"
    ]
  },
  "fortios-resource-fortios_firewall_object_addressgroup": {
    "description": "Defines fortios_firewall_object_addressgroup",
    "prefix": "tf-fortios-resource-fortios_firewall_object_addressgroup",
    "body": [
      "provider \"fortios\" {\r",
      "\thostname = \"54.226.179.231\"\r",
      "\ttoken = \"jn3t3Nw7qckQzt955Htkfj5hwQ6jdb\"\t\r",
      "}\r",
      "\r",
      "resource \"fortios_firewall_object_addressgroup\" \"s1\" {\r",
      "\tname = \"s1\"\r",
      "\tmember = [\"google-play\",\"swscan.apple.com\"]\r",
      "\tcomment = \"dfdsad\"\r",
      "}\r"
    ]
  },
  "fortios-resource-fortios_firewall_object_ippool": {
    "description": "Defines fortios_firewall_object_ippool",
    "prefix": "tf-fortios-resource-fortios_firewall_object_ippool",
    "body": [
      "provider \"fortios\" {\r",
      "\thostname = \"54.226.179.231\"\r",
      "\ttoken = \"jn3t3Nw7qckQzt955Htkfj5hwQ6jdb\"\t\r",
      "}\r",
      "\r",
      "resource \"fortios_firewall_object_ippool\" \"s1\" {\r",
      "\tname = \"ddd\"\r",
      "\ttype = \"overload\"\r",
      "\tstartip = \"11.0.0.0\"\r",
      "\tendip = \"22.0.0.0\"\r",
      "\tarp_reply = \"enable\"\r",
      "\tcomments = \"fdsaf\"\r",
      "}\r"
    ]
  },
  "fortios-resource-fortios_firewall_object_service": {
    "description": "Defines fortios_firewall_object_service",
    "prefix": "tf-fortios-resource-fortios_firewall_object_service",
    "body": [
      "provider \"fortios\" {\r",
      "\thostname = \"54.226.179.231\"\r",
      "\ttoken = \"jn3t3Nw7qckQzt955Htkfj5hwQ6jdb\"\t\r",
      "}\r",
      "\r",
      "resource \"fortios_firewall_object_service\" \"v11\" {\r",
      "\tname = \"servicetest1\"\r",
      "\tcategory = \"General\"\r",
      "\tprotocol = \"TCP/UDP/SCTP\"\r",
      "\tfqdn = \"abc.com\"\r",
      "\tcomment = \"comment\"\r",
      "}\r"
    ]
  },
  "fortios-resource-fortios_firewall_object_servicegroup": {
    "description": "Defines fortios_firewall_object_servicegroup",
    "prefix": "tf-fortios-resource-fortios_firewall_object_servicegroup",
    "body": [
      "provider \"fortios\" {\r",
      "\thostname = \"54.226.179.231\"\r",
      "\ttoken = \"jn3t3Nw7qckQzt955Htkfj5hwQ6jdb\"\t\r",
      "}\r",
      "\r",
      "resource \"fortios_firewall_object_servicegroup\" \"v11\" {\r",
      "\tname = \"1fdsafd11a\"\r",
      "\tcomment = \"fdsafdsa\"\r",
      "\tmember = [\"DCE-RPC\", \"DNS\", \"HTTPS\"]\r",
      "}\r"
    ]
  },
  "fortios-resource-fortios_firewall_object_vip": {
    "description": "Defines fortios_firewall_object_vip",
    "prefix": "tf-fortios-resource-fortios_firewall_object_vip",
    "body": [
      "provider \"fortios\" {\r",
      "\thostname = \"54.226.179.231\"\r",
      "\ttoken = \"jn3t3Nw7qckQzt955Htkfj5hwQ6jdb\"\t\r",
      "}\r",
      "\r",
      "resource \"fortios_firewall_object_vip\" \"v11\" {\r",
      "\tname = \"dfa\"\r",
      "\tcomment = \"fdsafdsafds\"\r",
      "\textip = \"11.1.1.1-21.1.1.1\"\r",
      "\tmappedip = [\"22.2.2.2-32.2.2.2\"]\r",
      "\textintf = \"port3\"\r",
      "\tportforward = \"enable\"\r",
      "\tprotocol = \"tcp\"\r",
      "\textport = \"2-3\"\r",
      "\tmappedport = \"4-5\"\r",
      "}\r"
    ]
  },
  "fortios-resource-fortios_firewall_object_vipgroup": {
    "description": "Defines fortios_firewall_object_vipgroup",
    "prefix": "tf-fortios-resource-fortios_firewall_object_vipgroup",
    "body": [
      "provider \"fortios\" {\r",
      "\thostname = \"54.226.179.231\"\r",
      "\ttoken = \"jn3t3Nw7qckQzt955Htkfj5hwQ6jdb\"\t\r",
      "}\r",
      "\r",
      "resource \"fortios_firewall_object_vipgroup\" \"v11\" {\r",
      "\tname = \"1fdsafd11a\"\r",
      "\tinterface = \"port3\"\r",
      "\tcomments = \"comments\"\r",
      "\tmember = [\"vip1\", \"vip3\"]\r",
      "}\r"
    ]
  },
  "fortios-resource-fortios_firewall_security_policy": {
    "description": "Defines fortios_firewall_security_policy",
    "prefix": "tf-fortios-resource-fortios_firewall_security_policy",
    "body": [
      "provider \"fortios\" {\r",
      "\thostname = \"54.226.179.231\"\r",
      "\ttoken = \"jn3t3Nw7qckQzt955Htkfj5hwQ6jdb\"\r",
      "}\r",
      "\r",
      "resource \"fortios_firewall_security_policy\" \"test1\" {\r",
      "\tname = \"ap11\"\r",
      "\tsrcintf = [\"port2\"]\r",
      "\tdstintf = [\"port1\"]\r",
      "\tsrcaddr = [\"swscan.apple.com\", \"google-play\"]\r",
      "\tdstaddr = [\"swscan.apple.com\", \"update.microsoft.com\"]\r",
      "\tinternet_service = \"disable\"\r",
      "\tinternet_service_id = []\r",
      "\tschedule = \"always\"\r",
      "\tservice = [\"ALL_ICMP\", \"FTP\"]\r",
      "\taction = \"accept\"\r",
      "\tutm_status = \"enable\"\r",
      "\tlogtraffic = \"all\"\r",
      "\tlogtraffic_start = \"enable\"\r",
      "\tcapture_packet = \"enable\"\r",
      "\tippool = \"enable\"\r",
      "\tpoolname = [\"rewq\", \"rbb\"]\r",
      "\tgroups = [\"Guest-group\", \"SSO_Guest_Users\"]\r",
      "\tdevices = [\"android-phone\", \"android-tablet\"]\r",
      "\tcomments = \"security policy\"\r",
      "\tav_profile = \"wifi-default\"\r",
      "\twebfilter_profile = \"monitor-all\"\r",
      "\tdnsfilter_profile = \"default\"\r",
      "\tips_sensor = \"protect_client\"\r",
      "\tapplication_list = \"block-high-risk\"\r",
      "\tssl_ssh_profile = \"certificate-inspection\"\r",
      "\tnat = \"enable\"\r",
      "}\r"
    ]
  },
  "fortios-resource-fortios_log_fortianalyzer_setting": {
    "description": "Defines fortios_log_fortianalyzer_setting",
    "prefix": "tf-fortios-resource-fortios_log_fortianalyzer_setting",
    "body": [
      "provider \"fortios\" {\r",
      "\thostname = \"54.226.179.231\"\r",
      "\ttoken = \"jn3t3Nw7qckQzt955Htkfj5hwQ6jdb\"\t\r",
      "}\r",
      "\r",
      "resource \"fortios_log_fortianalyzer_setting\" \"test1\" {\r",
      "\tstatus = \"enable\"\r",
      "\tserver = \"10.2.2.99\"\r",
      "\tsource_ip = \"10.2.2.99\"\r",
      "\tupload_option = \"realtime\"\r",
      "\treliable = \"enable\"\r",
      "\thmac_algorithm = \"sha256\"\r",
      "\tenc_algorithm = \"high-medium\"\r",
      "}\r"
    ]
  },
  "fortios-resource-fortios_log_syslog_setting": {
    "description": "Defines fortios_log_syslog_setting",
    "prefix": "tf-fortios-resource-fortios_log_syslog_setting",
    "body": [
      "provider \"fortios\" {\r",
      "\thostname = \"54.226.179.231\"\r",
      "\ttoken = \"jn3t3Nw7qckQzt955Htkfj5hwQ6jdb\"\t\r",
      "}\r",
      "\r",
      "resource \"fortios_log_syslog_setting\" \"test2\" {\r",
      "\tstatus = \"enable\"\r",
      "\tserver = \"2.2.2.2\"\r",
      "\tmode = \"udp\"\r",
      "\tport = \"514\"\r",
      "\tfacility = \"local7\"\r",
      "\tsource_ip = \"10.2.2.199\"\r",
      "\tformat = \"csv\"\r",
      "}\r"
    ]
  },
  "fortios-resource-fortios_networking_interface_port": {
    "description": "Defines fortios_networking_interface_port",
    "prefix": "tf-fortios-resource-fortios_networking_interface_port",
    "body": [
      "provider \"fortios\" {\r",
      "\thostname = \"54.226.179.231\"\r",
      "\ttoken = \"jn3t3Nw7qckQzt955Htkfj5hwQ6jdb\"\t\r",
      "}\r",
      "\r",
      "resource \"fortios_networking_interface_port\" \"loopback1\" {\r",
      "\tip = \"23.123.33.10/24\"\r",
      "\tallowaccess = \"ping http\"\r",
      "\talias = \"cc1\"\r",
      "\tdescription = \"description\"\r",
      "\tstatus = \"up\"\r",
      "\trole = \"lan\"\r",
      "\tname = \"myinterface1\"\r",
      "\tvdom = \"root\"\r",
      "\ttype = \"loopback\"\r",
      "\tmode = \"static\"\r",
      "}\r"
    ]
  },
  "fortios-resource-fortios_networking_route_static": {
    "description": "Defines fortios_networking_route_static",
    "prefix": "tf-fortios-resource-fortios_networking_route_static",
    "body": [
      "provider \"fortios\" {\r",
      "\thostname = \"54.226.179.231\"\r",
      "\ttoken = \"jn3t3Nw7qckQzt955Htkfj5hwQ6jdb\"\t\r",
      "}\r",
      "\r",
      "resource \"fortios_networking_route_static\" \"test1\" {\r",
      "\tdst = \"110.2.2.122/32\"\r",
      "\tgateway = \"2.2.2.2\"\r",
      "\tblackhole = \"disable\"\r",
      "\tdistance = \"22\"\r",
      "\tweight = \"3\"\r",
      "\tpriority = \"3\"\r",
      "\tdevice = \"port2\"\r",
      "\tcomment = \"Terraform test\"\r",
      "}\r"
    ]
  },
  "fortios-resource-fortios_system_admin_administrator": {
    "description": "Defines fortios_system_admin_administrator",
    "prefix": "tf-fortios-resource-fortios_system_admin_administrator",
    "body": [
      "provider \"fortios\" {\r",
      "\thostname = \"54.226.179.231\"\r",
      "\ttoken = \"jn3t3Nw7qckQzt955Htkfj5hwQ6jdb\"\t\r",
      "}\r",
      "\r",
      "resource \"fortios_system_admin_administrator\" \"admintest\" {\r",
      "\tname = \"testadminacc\"\r",
      "\tpassword = \"cc37331AC1\"\r",
      "\ttrusthost1 = \"1.1.1.0 255.255.255.0\"\r",
      "\ttrusthost2 = \"2.2.2.0 255.255.255.0\"\r",
      "\taccprofile = \"3d3\"\r",
      "\tvdom = [\"root\"]\r",
      "\tcomments = \"comments\"\r",
      "}\r"
    ]
  },
  "fortios-resource-fortios_system_admin_profiles": {
    "description": "Defines fortios_system_admin_profiles",
    "prefix": "tf-fortios-resource-fortios_system_admin_profiles",
    "body": [
      "provider \"fortios\" {\r",
      "\thostname = \"54.226.179.231\"\r",
      "\ttoken = \"jn3t3Nw7qckQzt955Htkfj5hwQ6jdb\"\t\r",
      "}\r",
      "\r",
      "resource \"fortios_system_admin_profiles\" \"test1\" {\r",
      "\tname = \"223d3\"\r",
      "\tscope = \"vdom\"\r",
      "\tcomments = \"test\"\r",
      "\tsecfabgrp = \"read-write\"\r",
      "\tftviewgrp = \"read\"\r",
      "\tauthgrp = \"none\"\r",
      "\tsysgrp = \"read\"\r",
      "\tnetgrp = \"none\"\r",
      "\tloggrp = \"none\"\r",
      "\tfwgrp = \"none\"\r",
      "\tvpngrp = \"none\"\r",
      "\tutmgrp = \"none\"\r",
      "\twanoptgrp = \"none\"\r",
      "\twifi = \"none\"\r",
      "\tadmintimeout_override = \"disable\"\r",
      "}\r"
    ]
  },
  "fortios-resource-fortios_system_apiuser_setting": {
    "description": "Defines fortios_system_apiuser_setting",
    "prefix": "tf-fortios-resource-fortios_system_apiuser_setting",
    "body": [
      "provider \"fortios\" {\r",
      "\thostname = \"54.226.179.231\"\r",
      "\ttoken = \"jn3t3Nw7qckQzt955Htkfj5hwQ6jdb\"\r",
      "}\r",
      "\r",
      "resource \"fortios_system_apiuser_setting\" \"test2\" {\r",
      "\tname = \"testapiuser\"\r",
      "\taccprofile = \"restAPIprofile\"\r",
      "\tvdom = [\"root\"]\r",
      "\ttrusthost {\r",
      "\t\ttype = \"ipv4-trusthost\"\r",
      "\t\tipv4_trusthost = \"61.149.0.0 255.255.0.0\"\r",
      "\t}\r",
      "\r",
      "\ttrusthost {\r",
      "\t\ttype = \"ipv4-trusthost\"\r",
      "\t\tipv4_trusthost = \"22.22.0.0 255.255.0.0\"\r",
      "\t}\r",
      "}\r"
    ]
  },
  "fortios-resource-fortios_system_license_forticare": {
    "description": "Defines fortios_system_license_forticare",
    "prefix": "tf-fortios-resource-fortios_system_license_forticare",
    "body": [
      "provider \"fortios\" {\r",
      "\thostname = \"54.226.179.231\"\r",
      "\ttoken = \"jn3t3Nw7qckQzt955Htkfj5hwQ6jdb\"\r",
      "}\r",
      "\r",
      "resource \"fortios_system_license_forticare\" \"test2\" {\r",
      "\tregistration_code = \"license\"\r",
      "}\r"
    ]
  },
  "fortios-resource-fortios_system_license_vdom": {
    "description": "Defines fortios_system_license_vdom",
    "prefix": "tf-fortios-resource-fortios_system_license_vdom",
    "body": [
      "provider \"fortios\" {\r",
      "\thostname = \"54.226.179.231\"\r",
      "\ttoken = \"jn3t3Nw7qckQzt955Htkfj5hwQ6jdb\"\r",
      "}\r",
      "\r",
      "resource \"fortios_system_license_vdom\" \"test2\" {\r",
      "\tlicense = \"license\"\r",
      "}\r"
    ]
  },
  "fortios-resource-fortios_system_license_vm": {
    "description": "Defines fortios_system_license_vm",
    "prefix": "tf-fortios-resource-fortios_system_license_vm",
    "body": [
      "provider \"fortios\" {\r",
      "\thostname = \"54.226.179.231\"\r",
      "\ttoken = \"jn3t3Nw7qckQzt955Htkfj5hwQ6jdb\"\r",
      "}\r",
      "\r",
      "resource \"fortios_system_license_vm\" \"test2\" {\r",
      "\tfile_content = \"LS0tLS1CRUdJTiBGR1QgVk0gTElDRU5TRS0tLS0tDQpRQUFBQUxXaTdCVnVkV2x3QXJZcC92S2J2Yk5zME5YNWluUW9sVldmcFoxWldJQi9pL2g4c01oR0psWWc5Vkl1DQorSlBJRis1aFphMWwyNm9yNHdiEQE3RnJDeVZnQUFBQWhxWjliWHFLK1hGN2o3dnB3WTB6QXRTaTdOMVM1ZWNxDQpWYmRRREZyYklUdnRvUWNyRU1jV0ltQzFqWWs5dmVoeGlYTG1OV0MwN25BSitYTTJFNmh2b29DMjE1YUwxK2wrDQovUHl5M0VLVnNTNjJDT2hMZHc3UndXajB3V3RqMmZiWg0KLS0tLS1FTkQgRkdUIFZNIExJQ0VOU0UtLS0tLQ0K\"\r",
      "}\r"
    ]
  },
  "fortios-resource-fortios_system_setting_dns": {
    "description": "Defines fortios_system_setting_dns",
    "prefix": "tf-fortios-resource-fortios_system_setting_dns",
    "body": [
      "provider \"fortios\" {\r",
      "\thostname = \"54.226.179.231\"\r",
      "\ttoken = \"jn3t3Nw7qckQzt955Htkfj5hwQ6jdb\"\t\r",
      "}\r",
      "\r",
      "resource \"fortios_system_setting_dns\" \"test1\" {\r",
      "\tprimary = \"208.91.112.53\"\r",
      "\tsecondary = \"208.91.112.22\"\r",
      "}\r"
    ]
  },
  "fortios-resource-fortios_system_setting_global": {
    "description": "Defines fortios_system_setting_global",
    "prefix": "tf-fortios-resource-fortios_system_setting_global",
    "body": [
      "provider \"fortios\" {\r",
      "\thostname = \"54.226.179.231\"\r",
      "\ttoken = \"jn3t3Nw7qckQzt955Htkfj5hwQ6jdb\"\t\r",
      "}\r",
      "\r",
      "resource \"fortios_system_setting_global\" \"test1\" {\r",
      "\tadmintimeout = 65\r",
      "\ttimezone = \"04\"\r",
      "\thostname = \"mytestFortiGate\"\r",
      "\tadmin_sport = 443\r",
      "\tadmin_ssh_port = 22\r",
      "}\r"
    ]
  },
  "fortios-resource-fortios_system_setting_ntp": {
    "description": "Defines fortios_system_setting_ntp",
    "prefix": "tf-fortios-resource-fortios_system_setting_ntp",
    "body": [
      "provider \"fortios\" {\r",
      "\thostname = \"54.226.179.231\"\r",
      "\ttoken = \"jn3t3Nw7qckQzt955Htkfj5hwQ6jdb\"\t\r",
      "}\r",
      "\r",
      "resource \"fortios_system_setting_ntp\" \"test2\" {\r",
      "\ttype = \"custom\"\r",
      "\tntpserver = [\"1.1.1.1\", \"3.3.3.3\"]\r",
      "\tntpsync = \"disable\"\r",
      "}\r"
    ]
  },
  "fortios-resource-fortios_system_vdom_setting": {
    "description": "Defines fortios_system_vdom_setting",
    "prefix": "tf-fortios-resource-fortios_system_vdom_setting",
    "body": [
      "provider \"fortios\" {\r",
      "\thostname = \"54.226.179.231\"\r",
      "\ttoken = \"jn3t3Nw7qckQzt955Htkfj5hwQ6jdb\"\t\r",
      "}\r",
      "\r",
      "resource \"fortios_system_vdom_setting\" \"test2\" {\r",
      "\tname = \"aa1122\"\r",
      "\tshort_name = \"aa1122\"\r",
      "\ttemporary = 0\r",
      "}\r"
    ]
  },
  "fortios-resource-fortios_vpn_ipsec_phase1interface": {
    "description": "Defines fortios_vpn_ipsec_phase1interface",
    "prefix": "tf-fortios-resource-fortios_vpn_ipsec_phase1interface",
    "body": [
      "#XXX empty snippet",
      ""
    ]
  },
  "fortios-resource-fortios_vpn_ipsec_phase2interface": {
    "description": "Defines fortios_vpn_ipsec_phase2interface",
    "prefix": "tf-fortios-resource-fortios_vpn_ipsec_phase2interface",
    "body": [
      "provider \"fortios\" {\r",
      "\thostname = \"54.226.179.231\"\r",
      "\ttoken = \"jn3t3Nw7qckQzt955Htkfj5hwQ6jdb\"\r",
      "}\r",
      "\r",
      "resource \"fortios_vpn_ipsec_phase1interface\" \"test1\" {\r",
      "\tname = \"001Test\"\r",
      "\ttype = \"static\"\r",
      "\tinterface = \"port2\"\r",
      "\tpeertype = \"any\"\r",
      "\tproposal = \"aes128-sha256 aes256-sha256 aes128-sha1 aes256-sha1\"\r",
      "\tcomments = \"VPN 001Test P1\"\r",
      "\twizard_type = \"static-fortigate\"\r",
      "\tremote_gw = \"1.2.2.2\"\r",
      "\tpsksecret = \"testscecret112233445566778899\"\r",
      "\tauthmethod = \"psk\"\r",
      "\tauthmethod_remote = \"\"\r",
      "\tmode_cfg = \"disable\"\r",
      "\r",
      "}\r"
    ]
  },
  "github-data-collaborators": {
    "description": "Defines collaborators",
    "prefix": "tf-github-data-collaborators",
    "body": [
      "data \"github_collaborators\" \"test\" {",
      "  owner      = \"example_owner\"",
      "  repository = \"example_repository\"",
      "}"
    ]
  },
  "github-data-ip_ranges": {
    "description": "Defines ip_ranges",
    "prefix": "tf-github-data-ip_ranges",
    "body": [
      "data \"github_ip_ranges\" \"test\" {}"
    ]
  },
  "github-data-repositories": {
    "description": "Defines repositories",
    "prefix": "tf-github-data-repositories",
    "body": [
      "data \"github_repositories\" \"example\" {",
      "  query = \"org:hashicorp language:Go\"",
      "}"
    ]
  },
  "github-data-repository": {
    "description": "Defines repository",
    "prefix": "tf-github-data-repository",
    "body": [
      "data \"github_repository\" \"example\" {",
      "  full_name = \"hashicorp/terraform\"",
      "}"
    ]
  },
  "github-data-team": {
    "description": "Defines team",
    "prefix": "tf-github-data-team",
    "body": [
      "data \"github_team\" \"example\" {",
      "  slug = \"example\"",
      "}"
    ]
  },
  "github-data-user": {
    "description": "Defines user",
    "prefix": "tf-github-data-user",
    "body": [
      "data \"github_user\" \"example\" {",
      "  username = \"example\"",
      "}"
    ]
  },
  "github-resource-branch_protection": {
    "description": "Defines branch_protection",
    "prefix": "tf-github-resource-branch_protection",
    "body": [
      "# Protect the master branch of the foo repository. Additionally, require that",
      "# the \"ci/travis\" context to be passing and only allow the engineers team merge",
      "# to the branch.",
      "resource \"github_branch_protection\" \"example\" {",
      "  repository     = \"${github_repository.example.name}\"",
      "  branch         = \"master\"",
      "  enforce_admins = true",
      "",
      "  required_status_checks {",
      "    strict   = false",
      "    contexts = [\"ci/travis\"]",
      "  }",
      "",
      "  required_pull_request_reviews {",
      "    dismiss_stale_reviews = true",
      "    dismissal_users       = [\"foo-user\"]",
      "    dismissal_teams       = [\"${github_team.example.slug}\", \"${github_team.second.slug}\"]",
      "  }",
      "",
      "  restrictions {",
      "    users = [\"foo-user\"]",
      "    teams = [\"${github_team.example.slug}\"]",
      "  }",
      "}",
      "",
      "resource \"github_team\" \"example\" {",
      "  name = \"Example Name\"",
      "}",
      "",
      "resource \"github_team_repository\" \"example\" {",
      "  team_id    = \"${github_team.example.id}\"",
      "  repository = \"${github_repository.example.name}\"",
      "  permission = \"pull\"",
      "}"
    ]
  },
  "github-resource-issue_label": {
    "description": "Defines issue_label",
    "prefix": "tf-github-resource-issue_label",
    "body": [
      "# Create a new, red colored label",
      "resource \"github_issue_label\" \"test_repo\" {",
      "  repository = \"test-repo\"",
      "  name       = \"Urgent\"",
      "  color      = \"FF0000\"",
      "}"
    ]
  },
  "github-resource-membership": {
    "description": "Defines membership",
    "prefix": "tf-github-resource-membership",
    "body": [
      "# Add a user to the organization",
      "resource \"github_membership\" \"membership_for_some_user\" {",
      "  username = \"SomeUser\"",
      "  role     = \"member\"",
      "}"
    ]
  },
  "github-resource-organization_block": {
    "description": "Defines organization_block",
    "prefix": "tf-github-resource-organization_block",
    "body": [
      "resource \"github_organization_block\" \"example\" {",
      "  username = \"paultyng\"",
      "}"
    ]
  },
  "github-resource-organization_project": {
    "description": "Defines organization_project",
    "prefix": "tf-github-resource-organization_project",
    "body": [
      "resource \"github_organization_project\" \"project\" {",
      "  name = \"A Organization Project\"",
      "  body = \"This is a organization project.\"",
      "}"
    ]
  },
  "github-resource-organization_webhook": {
    "description": "Defines organization_webhook",
    "prefix": "tf-github-resource-organization_webhook",
    "body": [
      "resource \"github_organization_webhook\" \"foo\" {",
      "  name = \"web\"",
      "",
      "  configuration {",
      "    url          = \"https://google.de/\"",
      "    content_type = \"form\"",
      "    insecure_ssl = false",
      "  }",
      "",
      "  active = false",
      "",
      "  events = [\"issues\"]",
      "}"
    ]
  },
  "github-resource-project_column": {
    "description": "Defines project_column",
    "prefix": "tf-github-resource-project_column",
    "body": [
      "resource \"github_organization_project\" \"project\" {",
      "  name = \"A Organization Project\"",
      "  body = \"This is an organization project.\"",
      "}",
      "",
      "resource \"github_project_column\" \"column\" {",
      "  project_id = \"${github_organization_project.project.id}\"",
      "  name       = \"a column\"",
      "}"
    ]
  },
  "github-resource-repository": {
    "description": "Defines repository",
    "prefix": "tf-github-resource-repository",
    "body": [
      "resource \"github_repository\" \"example\" {",
      "  name        = \"example\"",
      "  description = \"My awesome codebase\"",
      "",
      "  private = true",
      "}"
    ]
  },
  "github-resource-repository_collaborator": {
    "description": "Defines repository_collaborator",
    "prefix": "tf-github-resource-repository_collaborator",
    "body": [
      "# Add a collaborator to a repository",
      "resource \"github_repository_collaborator\" \"a_repo_collaborator\" {",
      "  repository = \"our-cool-repo\"",
      "  username   = \"SomeUser\"",
      "  permission = \"admin\"",
      "}"
    ]
  },
  "github-resource-repository_deploy_key": {
    "description": "Defines repository_deploy_key",
    "prefix": "tf-github-resource-repository_deploy_key",
    "body": [
      "# Add a deploy key",
      "resource \"github_repository_deploy_key\" \"example_repository_deploy_key\" {",
      "  title      = \"Repository test key\"",
      "  repository = \"test-repo\"",
      "  key        = \"ssh-rsa AAA...\"",
      "  read_only  = \"false\"",
      "}"
    ]
  },
  "github-resource-repository_project": {
    "description": "Defines repository_project",
    "prefix": "tf-github-resource-repository_project",
    "body": [
      "resource \"github_repository\" \"example\" {",
      "  name         = \"example\"",
      "  description  = \"My awesome codebase\"",
      "  has_projects = true",
      "}",
      "",
      "resource \"github_repository_project\" \"project\" {",
      "  name       = \"A Repository Project\"",
      "  repository = \"${github_repository.example.name}\"",
      "  body       = \"This is a repository project.\"",
      "}"
    ]
  },
  "github-resource-repository_webhook": {
    "description": "Defines repository_webhook",
    "prefix": "tf-github-resource-repository_webhook",
    "body": [
      "resource \"github_repository\" \"repo\" {",
      "  name         = \"foo\"",
      "  description  = \"Terraform acceptance tests\"",
      "  homepage_url = \"http://example.com/\"",
      "",
      "  private = false",
      "}",
      "",
      "resource \"github_repository_webhook\" \"foo\" {",
      "  repository = \"${github_repository.repo.name}\"",
      "",
      "  name = \"web\"",
      "",
      "  configuration {",
      "    url          = \"https://google.de/\"",
      "    content_type = \"form\"",
      "    insecure_ssl = false",
      "  }",
      "",
      "  active = false",
      "",
      "  events = [\"issues\"]",
      "}"
    ]
  },
  "github-resource-team": {
    "description": "Defines team",
    "prefix": "tf-github-resource-team",
    "body": [
      "# Add a team to the organization",
      "resource \"github_team\" \"some_team\" {",
      "  name        = \"some-team\"",
      "  description = \"Some cool team\"",
      "  privacy     = \"closed\"",
      "}"
    ]
  },
  "github-resource-team_membership": {
    "description": "Defines team_membership",
    "prefix": "tf-github-resource-team_membership",
    "body": [
      "# Add a user to the organization",
      "resource \"github_membership\" \"membership_for_some_user\" {",
      "  username = \"SomeUser\"",
      "  role     = \"member\"",
      "}",
      "",
      "resource \"github_team\" \"some_team\" {",
      "  name        = \"SomeTeam\"",
      "  description = \"Some cool team\"",
      "}",
      "",
      "resource \"github_team_membership\" \"some_team_membership\" {",
      "  team_id  = \"${github_team.some_team.id}\"",
      "  username = \"SomeUser\"",
      "  role     = \"member\"",
      "}"
    ]
  },
  "github-resource-team_repository": {
    "description": "Defines team_repository",
    "prefix": "tf-github-resource-team_repository",
    "body": [
      "# Add a repository to the team",
      "resource \"github_team\" \"some_team\" {",
      "  name        = \"SomeTeam\"",
      "  description = \"Some cool team\"",
      "}",
      "",
      "resource \"github_repository\" \"some_repo\" {",
      "  name = \"some-repo\"",
      "}",
      "",
      "resource \"github_team_repository\" \"some_team_repo\" {",
      "  team_id    = \"${github_team.some_team.id}\"",
      "  repository = \"${github_repository.some_repo.name}\"",
      "  permission = \"pull\"",
      "}"
    ]
  },
  "github-resource-user_gpg_key": {
    "description": "Defines user_gpg_key",
    "prefix": "tf-github-resource-user_gpg_key",
    "body": [
      "resource \"github_user_gpg_key\" \"example\" {",
      "  armored_public_key = \"-----BEGIN PGP PUBLIC KEY BLOCK-----\\n...\\n-----END PGP PUBLIC KEY BLOCK-----\"",
      "}"
    ]
  },
  "github-resource-user_invitation_accepter": {
    "description": "Defines user_invitation_accepter",
    "prefix": "tf-github-resource-user_invitation_accepter",
    "body": [
      "resource \"github_repository\" \"example\" {",
      "  name = \"example-repo\"",
      "}",
      "",
      "resource \"github_repository_collaborator\" \"example\" {",
      "  repository = \"${github_repository.example.name}\"",
      "  username   = \"example-username\"",
      "  permission = \"push\"",
      "}",
      "",
      "provider \"github\" {",
      "  alias = \"invitee\"",
      "  token = \"${var.invitee_token}\"",
      "}",
      "",
      "resource \"github_user_invitation_accepter\" \"example\" {",
      "  provider      = \"github.invitee\"",
      "  invitation_id = \"${github_repository_collaborator.example.invitation_id}\"",
      "}"
    ]
  },
  "github-resource-user_ssh_key": {
    "description": "Defines user_ssh_key",
    "prefix": "tf-github-resource-user_ssh_key",
    "body": [
      "resource \"github_user_ssh_key\" \"example\" {",
      "  title = \"example title\"",
      "  key   = \"${file(\"~/.ssh/id_rsa.pub\")}\"",
      "}"
    ]
  },
  "gitlab-data-group": {
    "description": "Defines group",
    "prefix": "tf-gitlab-data-group",
    "body": [
      "data \"gitlab_group\" \"foo\" {",
      "  group_id = 123",
      "}"
    ]
  },
  "gitlab-data-project": {
    "description": "Defines project",
    "prefix": "tf-gitlab-data-project",
    "body": [
      "data \"gitlab_project\" \"example\" {",
      "\tid = 30",
      "}"
    ]
  },
  "gitlab-data-user": {
    "description": "Defines user",
    "prefix": "tf-gitlab-data-user",
    "body": [
      "data \"gitlab_user\" \"example\" {",
      "  username = \"myuser\"",
      "}"
    ]
  },
  "gitlab-data-users": {
    "description": "Defines users",
    "prefix": "tf-gitlab-data-users",
    "body": [
      "data \"gitlab_users\" \"example\" {",
      "  sort = \"desc\"",
      "  order_by = \"name\"",
      "  created_before = \"2019-01-01\"",
      "}"
    ]
  },
  "gitlab-resource-branch_protection": {
    "description": "Defines branch_protection",
    "prefix": "tf-gitlab-resource-branch_protection",
    "body": [
      "resource \"gitlab_branch_protection\" \"BranchProtect\" {",
      "  project = \"12345\"",
      "  branch = \"BranchProtected\"",
      "  push_access_level = \"developer\"",
      "  merge_access_level = \"developer\"",
      "}"
    ]
  },
  "gitlab-resource-deploy_key": {
    "description": "Defines deploy_key",
    "prefix": "tf-gitlab-resource-deploy_key",
    "body": [
      "resource \"gitlab_deploy_key\" \"example\" {",
      "  project = \"example/deploying\"",
      "  title   = \"Example deploy key\"",
      "  key     = \"ssh-rsa AAAA...\"",
      "}"
    ]
  },
  "gitlab-resource-group": {
    "description": "Defines group",
    "prefix": "tf-gitlab-resource-group",
    "body": [
      "resource \"gitlab_group\" \"example\" {",
      "  name        = \"example\"",
      "  path        = \"example\"",
      "  description = \"An example group\"",
      "}",
      "",
      "// Create a project in the example group",
      "resource \"gitlab_project\" \"example\" {",
      "  name         = \"example\"",
      "  description  = \"An example project\"",
      "  parent_id = \"${gitlab_group.example.id}\"",
      "}"
    ]
  },
  "gitlab-resource-group_membership": {
    "description": "Defines group_membership",
    "prefix": "tf-gitlab-resource-group_membership",
    "body": [
      "resource \"gitlab_group_membership\" \"test\" {",
      "group_id = \"12345\"",
      "user_id = 1337",
      "access_level = \"guest\"",
      "expires_at = \"2020-12-31\"",
      "}"
    ]
  },
  "gitlab-resource-group_variable": {
    "description": "Defines group_variable",
    "prefix": "tf-gitlab-resource-group_variable",
    "body": [
      "resource \"gitlab_group_variable\" \"example\" {",
      "   group     = \"12345\"",
      "   key       = \"group_variable_key\"",
      "   value     = \"group_variable_value\"",
      "   protected = false",
      "}"
    ]
  },
  "gitlab-resource-label": {
    "description": "Defines label",
    "prefix": "tf-gitlab-resource-label",
    "body": [
      "resource \"gitlab_label\" \"fixme\" {",
      "  project     = \"example\"",
      "  name        = \"fixme\"",
      "  description = \"issue with failing tests\"",
      "  color       = \"#ffcc00\"",
      "}"
    ]
  },
  "gitlab-resource-pipeline_schedule": {
    "description": "Defines pipeline_schedule",
    "prefix": "tf-gitlab-resource-pipeline_schedule",
    "body": [
      "resource \"gitlab_pipeline_schedule\" \"example\" {",
      "   project     = \"12345\"",
      "   description = \"Used to schedule builds\"",
      "   ref         = \"master\"",
      "   cron        = \"0 1 * * *\"",
      "}"
    ]
  },
  "gitlab-resource-pipeline_trigger": {
    "description": "Defines pipeline_trigger",
    "prefix": "tf-gitlab-resource-pipeline_trigger",
    "body": [
      "resource \"gitlab_pipeline_trigger\" \"example\" {",
      "   project   = \"12345\"",
      "   description = \"Used to trigger builds\"",
      "}"
    ]
  },
  "gitlab-resource-project": {
    "description": "Defines project",
    "prefix": "tf-gitlab-resource-project",
    "body": [
      "resource \"gitlab_project\" \"example\" {",
      "  name        = \"example\"",
      "  description = \"My awesome codebase\"",
      "",
      "  visibility_level = \"public\"",
      "}"
    ]
  },
  "gitlab-resource-project_cluster": {
    "description": "Defines project_cluster",
    "prefix": "tf-gitlab-resource-project_cluster",
    "body": [
      "resource \"gitlab_project\" \"foo\" {",
      "  name = \"foo-project\"",
      "}",
      "",
      "resource gitlab_project_cluster \"bar\" {",
      "  project                       = \"${gitlab_project.foo.id}\"",
      "  name                          = \"bar-cluster\"",
      "  domain                        = \"example.com\"",
      "  enabled                       = true",
      "  kubernetes_api_url            = \"https://124.124.124\"",
      "  kubernetes_token              = \"some-token\"",
      "  kubernetes_ca_cert            = \"some-cert\"",
      "  kubernetes_namespace          = \"namespace\"",
      "  kubernetes_authorization_type = \"rbac\"",
      "  environment_scope             = \"*\"",
      "}"
    ]
  },
  "gitlab-resource-project_hook": {
    "description": "Defines project_hook",
    "prefix": "tf-gitlab-resource-project_hook",
    "body": [
      "resource \"gitlab_project_hook\" \"example\" {",
      "  project               = \"example/hooked\"",
      "  url                   = \"https://example.com/hook/example\"",
      "  merge_requests_events = true",
      "}"
    ]
  },
  "gitlab-resource-project_membership": {
    "description": "Defines project_membership",
    "prefix": "tf-gitlab-resource-project_membership",
    "body": [
      "resource \"gitlab_project_membership\" \"test\" {",
      "project_id = \"12345\"",
      "user_id = 1337",
      "access_level = \"guest\"",
      "}"
    ]
  },
  "gitlab-resource-project_variable": {
    "description": "Defines project_variable",
    "prefix": "tf-gitlab-resource-project_variable",
    "body": [
      "resource \"gitlab_project_variable\" \"example\" {",
      "   project   = \"12345\"",
      "   key       = \"project_variable_key\"",
      "   value     = \"project_variable_value\"",
      "   protected = false",
      "}"
    ]
  },
  "gitlab-resource-service_jira": {
    "description": "Defines service_jira",
    "prefix": "tf-gitlab-resource-service_jira",
    "body": [
      "resource \"gitlab_project\" \"awesome_project\" {",
      "  name = \"awesome_project\"",
      "  description = \"My awesome project.\"",
      "  visibility_level = \"public\"",
      "}",
      "",
      "resource \"gitlab_service_jira\" \"jira\" {",
      "  project  = \"${gitlab_project.awesome_project.id}\"",
      "  url      = \"https://jira.example.com\"",
      "  username = \"user\"",
      "  password = \"mypass\"",
      "}"
    ]
  },
  "gitlab-resource-service_slack": {
    "description": "Defines service_slack",
    "prefix": "tf-gitlab-resource-service_slack",
    "body": [
      "resource \"gitlab_project\" \"awesome_project\" {",
      "  name = \"awesome_project\"",
      "  description = \"My awesome project.\"",
      "  visibility_level = \"public\"",
      "}",
      "",
      "resource \"gitlab_service_slack\" \"slack\" {",
      "  project                    = \"${gitlab_project.awesome_project.id}\"",
      "  webhook                    = \"https://webhook.com\"",
      "  username                   = \"myuser\"",
      "  push_events                = true",
      "  push_channel               = \"push_chan\"",
      "}"
    ]
  },
  "gitlab-resource-tag_protection": {
    "description": "Defines tag_protection",
    "prefix": "tf-gitlab-resource-tag_protection",
    "body": [
      "resource \"gitlab_tag_protection\" \"TagProtect\" {",
      "  project = \"12345\"",
      "  tag = \"TagProtected\"",
      "  create_access_level = \"developer\"",
      "}"
    ]
  },
  "gitlab-resource-user": {
    "description": "Defines user",
    "prefix": "tf-gitlab-resource-user",
    "body": [
      "resource \"gitlab_user\" \"example\" {",
      "  name             = \"Example Foo\"",
      "  username         = \"example\"",
      "  password         = \"superPassword\"",
      "  email            = \"gitlab@user.create\"",
      "  is_admin         = true",
      "  projects_limit   = 4",
      "  can_create_group = false",
      "  is_external      = true",
      "}"
    ]
  },
  "google-beta-data-datasource_client_config": {
    "description": "Defines datasource_client_config",
    "prefix": "tf-google-beta-data-datasource_client_config",
    "body": [
      "data \"google_client_config\" \"current\" {}",
      "",
      "output \"project\" {",
      "  value = \"${data.google_client_config.current.project}\"",
      "}"
    ]
  },
  "google-beta-data-datasource_cloudfunctions_function": {
    "description": "Defines datasource_cloudfunctions_function",
    "prefix": "tf-google-beta-data-datasource_cloudfunctions_function",
    "body": [
      "data \"google_cloudfunctions_function\" \"my-function\" {",
      "  name = \"function\"",
      "}"
    ]
  },
  "google-beta-data-datasource_compute_address": {
    "description": "Defines datasource_compute_address",
    "prefix": "tf-google-beta-data-datasource_compute_address",
    "body": [
      "data \"google_compute_address\" \"my_address\" {",
      "  name = \"foobar\"",
      "}",
      "",
      "resource \"google_dns_record_set\" \"frontend\" {",
      "  name = \"frontend.${google_dns_managed_zone.prod.dns_name}\"",
      "  type = \"A\"",
      "  ttl  = 300",
      "",
      "  managed_zone = \"${google_dns_managed_zone.prod.name}\"",
      "",
      "  rrdatas = [\"${data.google_compute_address.my_address.address}\"]",
      "}",
      "",
      "resource \"google_dns_managed_zone\" \"prod\" {",
      "  name     = \"prod-zone\"",
      "  dns_name = \"prod.mydomain.com.\"",
      "}"
    ]
  },
  "google-beta-data-datasource_compute_forwarding_rule": {
    "description": "Defines datasource_compute_forwarding_rule",
    "prefix": "tf-google-beta-data-datasource_compute_forwarding_rule",
    "body": [
      "data \"google_compute_forwarding_rule\" \"my-forwarding-rule\" {",
      "  name = \"forwarding-rule-us-east1\"",
      "}"
    ]
  },
  "google-beta-data-datasource_compute_global_address": {
    "description": "Defines datasource_compute_global_address",
    "prefix": "tf-google-beta-data-datasource_compute_global_address",
    "body": [
      "data \"google_compute_global_address\" \"my_address\" {",
      "  name = \"foobar\"",
      "}",
      "",
      "resource \"google_dns_record_set\" \"frontend\" {",
      "  name = \"lb.${google_dns_managed_zone.prod.dns_name}\"",
      "  type = \"A\"",
      "  ttl  = 300",
      "",
      "  managed_zone = \"${google_dns_managed_zone.prod.name}\"",
      "",
      "  rrdatas = [\"${data.google_compute_global_address.my_address.address}\"]",
      "}",
      "",
      "resource \"google_dns_managed_zone\" \"prod\" {",
      "  name     = \"prod-zone\"",
      "  dns_name = \"prod.mydomain.com.\"",
      "}"
    ]
  },
  "google-beta-data-datasource_compute_image": {
    "description": "Defines datasource_compute_image",
    "prefix": "tf-google-beta-data-datasource_compute_image",
    "body": [
      "data \"google_compute_image\" \"my_image\" {",
      "  family  = \"debian-9\"",
      "  project = \"debian-cloud\"",
      "}",
      "",
      "resource \"google_compute_instance\" \"default\" {",
      "  # ...",
      "",
      "  boot_disk {",
      "    initialize_params {",
      "      image = \"${data.google_compute_image.my_image.self_link}\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "google-beta-data-datasource_compute_instance": {
    "description": "Defines datasource_compute_instance",
    "prefix": "tf-google-beta-data-datasource_compute_instance",
    "body": [
      "data \"google_compute_instance\" \"appserver\" {",
      "\tname = \"primary-application-server\"",
      "\tzone = \"us-central1-a\"",
      "}"
    ]
  },
  "google-beta-data-datasource_compute_lb_ip_ranges": {
    "description": "Defines datasource_compute_lb_ip_ranges",
    "prefix": "tf-google-beta-data-datasource_compute_lb_ip_ranges",
    "body": [
      "data \"google_compute_lb_ip_ranges\" \"ranges\" {}",
      "",
      "resource \"google_compute_firewall\" \"lb\" {",
      "  name    = \"lb-firewall\"",
      "  network = \"${google_compute_network.main.name}\"",
      "",
      "  allow {",
      "    protocol = \"tcp\"",
      "    ports    = [\"80\"]",
      "  }",
      "",
      "  source_ranges = [\"${data.google_compute_lb_ip_ranges.ranges.network}\"]",
      "  target_tags = [",
      "    \"InstanceBehindLoadBalancer\"",
      "  ]",
      "}"
    ]
  },
  "google-beta-data-datasource_compute_network": {
    "description": "Defines datasource_compute_network",
    "prefix": "tf-google-beta-data-datasource_compute_network",
    "body": [
      "data \"google_compute_network\" \"my-network\" {",
      "  name = \"default-us-east1\"",
      "}"
    ]
  },
  "google-beta-data-datasource_compute_region_instance_group": {
    "description": "Defines datasource_compute_region_instance_group",
    "prefix": "tf-google-beta-data-datasource_compute_region_instance_group",
    "body": [
      "data \"google_compute_region_instance_group\" \"group\" {",
      "\tname = \"instance-group-name\"",
      "}"
    ]
  },
  "google-beta-data-datasource_compute_ssl_certificate": {
    "description": "Defines datasource_compute_ssl_certificate",
    "prefix": "tf-google-beta-data-datasource_compute_ssl_certificate",
    "body": [
      "data \"google_compute_ssl_certificate\" \"my_cert\" {",
      "  name       = \"my-cert\"",
      "  location   = \"us-east1-a\"",
      "}",
      "",
      "output \"certificate\" {",
      "  value = \"${data.google_compute_ssl_certificate.my_cert.certificate}\"",
      "}",
      "",
      "output \"certificate_id\" {",
      "  value = \"${data.google_compute_ssl_certificate.my_cert.certificate_id}\"",
      "}",
      "",
      "output \"self_link\" {",
      "  value = \"${data.google_compute_ssl_certificate.my_cert.self_link}\"",
      "}"
    ]
  },
  "google-beta-data-datasource_compute_ssl_policy": {
    "description": "Defines datasource_compute_ssl_policy",
    "prefix": "tf-google-beta-data-datasource_compute_ssl_policy",
    "body": [
      "data \"google_compute_ssl_policy\" \"my-ssl-policy\" {",
      "  name = \"production-ssl-policy\"",
      "}"
    ]
  },
  "google-beta-data-datasource_compute_subnetwork": {
    "description": "Defines datasource_compute_subnetwork",
    "prefix": "tf-google-beta-data-datasource_compute_subnetwork",
    "body": [
      "data \"google_compute_subnetwork\" \"my-subnetwork\" {",
      "  name   = \"default-us-east1\"",
      "  region = \"us-east1\"",
      "}"
    ]
  },
  "google-beta-data-datasource_compute_vpn_gateway": {
    "description": "Defines datasource_compute_vpn_gateway",
    "prefix": "tf-google-beta-data-datasource_compute_vpn_gateway",
    "body": [
      "data \"google_compute_vpn_gateway\" \"my-vpn-gateway\" {",
      "  name = \"vpn-gateway-us-east1\"",
      "}"
    ]
  },
  "google-beta-data-datasource_google_client_openid_userinfo": {
    "description": "Defines datasource_google_client_openid_userinfo",
    "prefix": "tf-google-beta-data-datasource_google_client_openid_userinfo",
    "body": [
      "provider \"google\" {",
      "  scopes = [",
      "    \"https://www.googleapis.com/auth/compute\",",
      "    \"https://www.googleapis.com/auth/cloud-platform\",",
      "    \"https://www.googleapis.com/auth/ndev.clouddns.readwrite\",",
      "    \"https://www.googleapis.com/auth/devstorage.full_control\",",
      "    \"https://www.googleapis.com/auth/userinfo.email\",",
      "  ]",
      "}",
      "",
      "data \"google_client_openid_userinfo\" \"me\" {}",
      "",
      "output \"my-email\" {",
      "  value = \"${data.google_client_openid_userinfo.me.email}\"",
      "}"
    ]
  },
  "google-beta-data-datasource_google_composer_image_versions": {
    "description": "Defines datasource_google_composer_image_versions",
    "prefix": "tf-google-beta-data-datasource_google_composer_image_versions",
    "body": [
      "data \"google_composer_image_versions\" \"all\" {",
      "}",
      "",
      "resource \"google_composer_environment\" \"test\" {",
      "  name           = \"test-env\"",
      "  region         = \"us-central1\"",
      "  config {",
      "    software_config {",
      "      image_version  = \"${data.google_composer_image_versions.all.image_versions.0.image_version_id}\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "google-beta-data-datasource_google_compute_backend_service": {
    "description": "Defines datasource_google_compute_backend_service",
    "prefix": "tf-google-beta-data-datasource_google_compute_backend_service",
    "body": [
      "data \"google_compute_backend_service\" \"baz\" {",
      "  name = \"foobar\"",
      "}",
      "",
      "resource \"google_compute_backend_service\" \"default\" {",
      "  name          = \"backend-service\"",
      "  health_checks = [\"${tolist(data.google_compute_backend_service.baz.health_checks)[0]}\"]",
      "}"
    ]
  },
  "google-beta-data-datasource_google_folder_organization_policy": {
    "description": "Defines datasource_google_folder_organization_policy",
    "prefix": "tf-google-beta-data-datasource_google_folder_organization_policy",
    "body": [
      "data \"google_folder_organization_policy\" \"policy\" {",
      "  folder     = \"folders/folderid\"",
      "  constraint = \"constraints/compute.trustedImageProjects\"",
      "}",
      "",
      "output \"version\" {",
      "  value = \"${data.google_folder_organization_policy.policy.version}\"",
      "}"
    ]
  },
  "google-beta-data-datasource_google_iam_role": {
    "description": "Defines datasource_google_iam_role",
    "prefix": "tf-google-beta-data-datasource_google_iam_role",
    "body": [
      "data \"google_iam_role\" \"roleinfo\" {",
      "  name = \"roles/compute.viewer\"",
      "}",
      "",
      "output \"the_role_permissions\" {",
      "  value = \"${data.google_iam_role.roleinfo.included_permissions}\"",
      "}",
      ""
    ]
  },
  "google-beta-data-datasource_google_netblock_ip_ranges": {
    "description": "Defines datasource_google_netblock_ip_ranges",
    "prefix": "tf-google-beta-data-datasource_google_netblock_ip_ranges",
    "body": [
      "data \"google_netblock_ip_ranges\" \"netblock\" {}",
      "",
      "output \"cidr_blocks\" {",
      "  value = \"${data.google_netblock_ip_ranges.netblock.cidr_blocks}\"",
      "}",
      "",
      "output \"cidr_blocks_ipv4\" {",
      "  value = \"${data.google_netblock_ip_ranges.netblock.cidr_blocks_ipv4}\"",
      "}",
      "",
      "output \"cidr_blocks_ipv6\" {",
      "  value = \"${data.google_netblock_ip_ranges.netblock.cidr_blocks_ipv6}\"",
      "}"
    ]
  },
  "google-beta-data-datasource_google_project_organization_policy": {
    "description": "Defines datasource_google_project_organization_policy",
    "prefix": "tf-google-beta-data-datasource_google_project_organization_policy",
    "body": [
      "data \"google_project_organization_policy\" \"policy\" {",
      "  project    = \"project-id\"",
      "  constraint = \"constraints/serviceuser.services\"",
      "}",
      "",
      "output \"version\" {",
      "  value = \"${data.google_project_organization_policy.policy.version}\"",
      "}"
    ]
  },
  "google-beta-data-datasource_google_service_account": {
    "description": "Defines datasource_google_service_account",
    "prefix": "tf-google-beta-data-datasource_google_service_account",
    "body": [
      "data \"google_service_account\" \"object_viewer\" {",
      "  account_id = \"object-viewer\"",
      "}"
    ]
  },
  "google-beta-data-datasource_google_service_account_access_token": {
    "description": "Defines datasource_google_service_account_access_token",
    "prefix": "tf-google-beta-data-datasource_google_service_account_access_token",
    "body": [
      "resource \"google_service_account_iam_binding\" \"token-creator-iam\" {",
      "\tservice_account_id = \"projects/-/serviceAccounts/service_B@projectB.iam.gserviceaccount.com\"",
      "\trole               = \"roles/iam.serviceAccountTokenCreator\"",
      "\tmembers = [",
      "\t\t\"serviceAccount:service_A@projectA.iam.gserviceaccount.com\",",
      "\t]",
      "}"
    ]
  },
  "google-beta-data-datasource_google_service_account_key": {
    "description": "Defines datasource_google_service_account_key",
    "prefix": "tf-google-beta-data-datasource_google_service_account_key",
    "body": [
      "resource \"google_service_account\" \"myaccount\" {",
      "  account_id = \"dev-foo-account\"",
      "}",
      "",
      "resource \"google_service_account_key\" \"mykey\" {",
      "  service_account_id = \"${google_service_account.myaccount.name}\"",
      "}",
      "",
      "data \"google_service_account_key\" \"mykey\" {",
      "  name = \"${google_service_account_key.mykey.name}\"",
      "  public_key_type = \"TYPE_X509_PEM_FILE\"",
      "}"
    ]
  },
  "google-beta-data-dns_managed_zone": {
    "description": "Defines dns_managed_zone",
    "prefix": "tf-google-beta-data-dns_managed_zone",
    "body": [
      "data \"google_dns_managed_zone\" \"env_dns_zone\" {",
      "  name        = \"qa-zone\"",
      "}",
      "",
      "resource \"google_dns_record_set\" \"dns\" {",
      "  name = \"my-address.${data.google_dns_managed_zone.env_dns_zone.dns_name}\"",
      "  type = \"TXT\"",
      "  ttl  = 300",
      "",
      "  managed_zone = \"${data.google_dns_managed_zone.env_dns_zone.name}\"",
      "",
      "  rrdatas = [\"test\"]",
      "}"
    ]
  },
  "google-beta-data-google_active_folder": {
    "description": "Defines google_active_folder",
    "prefix": "tf-google-beta-data-google_active_folder",
    "body": [
      "data \"google_active_folder\" \"department1\" {",
      "  display_name = \"Department 1\"",
      "  parent = \"organizations/1234567\"",
      "}"
    ]
  },
  "google-beta-data-google_billing_account": {
    "description": "Defines google_billing_account",
    "prefix": "tf-google-beta-data-google_billing_account",
    "body": [
      "data \"google_billing_account\" \"acct\" {",
      "  display_name = \"My Billing Account\"",
      "  open         = true",
      "}",
      "",
      "resource \"google_project\" \"my_project\" {",
      "  name       = \"My Project\"",
      "  project_id = \"your-project-id\"",
      "  org_id     = \"1234567\"",
      "",
      "  billing_account = \"${data.google_billing_account.acct.id}\"",
      "}"
    ]
  },
  "google-beta-data-google_compute_default_service_account": {
    "description": "Defines google_compute_default_service_account",
    "prefix": "tf-google-beta-data-google_compute_default_service_account",
    "body": [
      "data \"google_compute_default_service_account\" \"default\" { }",
      "",
      "output \"default_account\" {",
      "  value = \"${data.google_compute_default_service_account.default.email}\"",
      "} "
    ]
  },
  "google-beta-data-google_compute_instance_group": {
    "description": "Defines google_compute_instance_group",
    "prefix": "tf-google-beta-data-google_compute_instance_group",
    "body": [
      "data \"google_compute_instance_group\" \"all\" {",
      "\tname = \"instance-group-name\"",
      "\tzone = \"us-central1-a\"",
      "}"
    ]
  },
  "google-beta-data-google_compute_node_types": {
    "description": "Defines google_compute_node_types",
    "prefix": "tf-google-beta-data-google_compute_node_types",
    "body": [
      "data \"google_compute_node_types\" \"central1b\" {",
      "  zone = \"us-central1-b\"",
      "}",
      "",
      "resource \"google_compute_node_template\" \"tmpl\" {",
      "  name      = \"terraform-test-tmpl\"",
      "  region    = \"us-central1\"",
      "  node_type = \"${data.google_compute_node_types.types.names[0]}\"",
      "}"
    ]
  },
  "google-beta-data-google_compute_regions": {
    "description": "Defines google_compute_regions",
    "prefix": "tf-google-beta-data-google_compute_regions",
    "body": [
      "data \"google_compute_regions\" \"available\" {}",
      "",
      "resource \"google_compute_subnetwork\" \"cluster\" {",
      "  count = \"${length(data.google_compute_regions.available.names)}\"",
      "  name          = \"my-network\"",
      "  ip_cidr_range = \"10.36.${count.index}.0/24\"",
      "  network       = \"my-network\"",
      "  region        = \"${data.google_compute_regions.available.names[count.index]}\"",
      "}"
    ]
  },
  "google-beta-data-google_compute_zones": {
    "description": "Defines google_compute_zones",
    "prefix": "tf-google-beta-data-google_compute_zones",
    "body": [
      "data \"google_compute_zones\" \"available\" {}",
      "",
      "resource \"google_compute_instance_group_manager\" \"foo\" {",
      "  count = \"${length(data.google_compute_zones.available.names)}\"",
      "",
      "  name               = \"terraform-test-${count.index}\"",
      "  instance_template  = \"${google_compute_instance_template.foobar.self_link}\"",
      "  base_instance_name = \"foobar-${count.index}\"",
      "  zone               = \"${data.google_compute_zones.available.names[count.index]}\"",
      "  target_size        = 1",
      "}"
    ]
  },
  "google-beta-data-google_container_cluster": {
    "description": "Defines google_container_cluster",
    "prefix": "tf-google-beta-data-google_container_cluster",
    "body": [
      "data \"google_container_cluster\" \"my_cluster\" {",
      "  name       = \"my-cluster\"",
      "  location   = \"us-east1-a\"",
      "}",
      "",
      "output \"cluster_username\" {",
      "  value = \"${data.google_container_cluster.my_cluster.master_auth.0.username}\"",
      "}",
      "",
      "output \"cluster_password\" {",
      "  value = \"${data.google_container_cluster.my_cluster.master_auth.0.password}\"",
      "}",
      "",
      "output \"endpoint\" {",
      "  value = \"${data.google_container_cluster.my_cluster.endpoint}\"",
      "}",
      "",
      "output \"instance_group_urls\" {",
      "  value = \"${data.google_container_cluster.my_cluster.instance_group_urls}\"",
      "}",
      "",
      "output \"node_config\" {",
      "  value = \"${data.google_container_cluster.my_cluster.node_config}\"",
      "}",
      "",
      "output \"node_pools\" {",
      "  value = \"${data.google_container_cluster.my_cluster.node_pool}\"",
      "}"
    ]
  },
  "google-beta-data-google_container_engine_versions": {
    "description": "Defines google_container_engine_versions",
    "prefix": "tf-google-beta-data-google_container_engine_versions",
    "body": [
      "data \"google_container_engine_versions\" \"central1b\" {",
      "  location           = \"us-central1-b\"",
      "  version_prefix = \"1.12.\"",
      "}",
      "",
      "resource \"google_container_cluster\" \"foo\" {",
      "  name               = \"terraform-test-cluster\"",
      "  location               = \"us-central1-b\"",
      "  node_version       = \"${data.google_container_engine_versions.central1b.latest_node_version}\"",
      "  initial_node_count = 1",
      "",
      "  master_auth {",
      "    username = \"mr.yoda\"",
      "    password = \"adoy.rm\"",
      "  }",
      "}"
    ]
  },
  "google-beta-data-google_container_registry_image": {
    "description": "Defines google_container_registry_image",
    "prefix": "tf-google-beta-data-google_container_registry_image",
    "body": [
      "data \"google_container_registry_image\" \"debian\" {",
      "    name = \"debian\"",
      "}",
      "",
      "output \"gcr_location\" {",
      "    value = \"${data.google_container_registry_image.debian.image_url}\"",
      "}"
    ]
  },
  "google-beta-data-google_container_registry_repository": {
    "description": "Defines google_container_registry_repository",
    "prefix": "tf-google-beta-data-google_container_registry_repository",
    "body": [
      "data \"google_container_registry_repository\" \"foo\" {}",
      "",
      "output \"gcr_location\" {",
      "    value = \"${data.google_container_registry_repository.foo.repository_url}\"",
      "}"
    ]
  },
  "google-beta-data-google_folder": {
    "description": "Defines google_folder",
    "prefix": "tf-google-beta-data-google_folder",
    "body": [
      "# Get folder by id",
      "data \"google_folder\" \"my_folder_1\" {",
      "  folder = \"folders/12345\"",
      "  lookup_organization = true",
      "}",
      "",
      "# Search by fields",
      "data \"google_folder\" \"my_folder_2\" {",
      "  folder = \"folders/23456\"",
      "}",
      "",
      "output \"my_folder_1_organization\" {",
      "  value = \"${data.google_folder.my_folder_1.organization}\"",
      "}",
      "",
      "output \"my_folder_2_parent\" {",
      "  value = \"${data.google_folder.my_folder_2.parent}\"",
      "}",
      ""
    ]
  },
  "google-beta-data-google_iam_policy": {
    "description": "Defines google_iam_policy",
    "prefix": "tf-google-beta-data-google_iam_policy",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/compute.instanceAdmin\"",
      "",
      "    members = [",
      "      \"serviceAccount:your-custom-sa@your-project.iam.gserviceaccount.com\",",
      "    ]",
      "  }",
      "",
      "  binding {",
      "    role = \"roles/storage.objectViewer\"",
      "",
      "    members = [",
      "      \"user:alice@gmail.com\",",
      "    ]",
      "  }",
      "",
      "  audit_config {",
      "    service = \"cloudkms.googleapis.com\"",
      "    audit_log_configs {",
      "      log_type = \"DATA_READ\",",
      "      exempted_members = [\"user:you@domain.com\"]",
      "    }",
      "",
      "    audit_log_configs {",
      "      log_type = \"DATA_WRITE\",",
      "    }",
      "",
      "    audit_log_configs {",
      "      log_type = \"ADMIN_READ\",",
      "    }",
      "  }",
      "}"
    ]
  },
  "google-beta-data-google_kms_crypto_key": {
    "description": "Defines google_kms_crypto_key",
    "prefix": "tf-google-beta-data-google_kms_crypto_key",
    "body": [
      "data \"google_kms_key_ring\" \"my_key_ring\" {",
      "  name     = \"my-key-ring\"",
      "  location = \"us-central1\"",
      "}",
      "",
      "data \"google_kms_crypto_key\" \"my_crypto_key\" {",
      "  name            = \"my-crypto-key\"",
      "  key_ring        = \"${data.google_kms_key_ring.my_key_ring.self_link}\"",
      "}"
    ]
  },
  "google-beta-data-google_kms_crypto_key_version": {
    "description": "Defines google_kms_crypto_key_version",
    "prefix": "tf-google-beta-data-google_kms_crypto_key_version",
    "body": [
      "data \"google_kms_key_ring\" \"my_key_ring\" {",
      "  name     = \"my-key-ring\"",
      "  location = \"us-central1\"",
      "}",
      "",
      "data \"google_kms_crypto_key\" \"my_crypto_key\" {",
      "  name     = \"my-crypto-key\"",
      "  key_ring = \"${data.google_kms_key_ring.my_key_ring.self_link}\"",
      "}",
      "",
      "data \"google_kms_crypto_key_version\" \"my_crypto_key_version\" {",
      "  crypto_key = \"${data.google_kms_key.my_key.self_link}\"",
      "}"
    ]
  },
  "google-beta-data-google_kms_key_ring": {
    "description": "Defines google_kms_key_ring",
    "prefix": "tf-google-beta-data-google_kms_key_ring",
    "body": [
      "data \"google_kms_key_ring\" \"my_key_ring\" {",
      "  name     = \"my-key-ring\"",
      "  location = \"us-central1\"",
      "}"
    ]
  },
  "google-beta-data-google_kms_secret": {
    "description": "Defines google_kms_secret",
    "prefix": "tf-google-beta-data-google_kms_secret",
    "body": [
      "resource \"google_kms_key_ring\" \"my_key_ring\" {",
      "  project  = \"my-project\"",
      "  name     = \"my-key-ring\"",
      "  location = \"us-central1\"",
      "}",
      "",
      "resource \"google_kms_crypto_key\" \"my_crypto_key\" {",
      "  name     = \"my-crypto-key\"",
      "  key_ring = \"${google_kms_key_ring.my_key_ring.id}\"",
      "}"
    ]
  },
  "google-beta-data-google_organization": {
    "description": "Defines google_organization",
    "prefix": "tf-google-beta-data-google_organization",
    "body": [
      "data \"google_organization\" \"org\" {",
      "  domain = \"example.com\"",
      "}",
      "",
      "resource \"google_folder\" \"sales\" {",
      "  display_name = \"Sales\"",
      "  parent       = \"${data.google_organization.org.name}\"",
      "}"
    ]
  },
  "google-beta-data-google_project": {
    "description": "Defines google_project",
    "prefix": "tf-google-beta-data-google_project",
    "body": [
      "data \"google_project\" \"project\" {}",
      "",
      "output \"project_number\" {",
      "  value = \"${data.google_project.project.number}\"",
      "} "
    ]
  },
  "google-beta-data-google_project_services": {
    "description": "Defines google_project_services",
    "prefix": "tf-google-beta-data-google_project_services",
    "body": [
      "data \"google_project_services\" \"project\" {",
      "  project = \"your-project-id\"",
      "}",
      "",
      "output \"project_services\" {",
      "  value = \"${join(\",\", data.google_project_services.project.services)}\"",
      "}"
    ]
  },
  "google-beta-data-google_projects": {
    "description": "Defines google_projects",
    "prefix": "tf-google-beta-data-google_projects",
    "body": [
      "data \"google_projects\" \"my-org-projects\" {",
      "  filter = \"parent.id:012345678910 lifecycleState:DELETE_REQUESTED\"",
      "}",
      "",
      "data \"google_project\" \"deletion-candidate\" {",
      "   project_id = \"${data.google_projects.my-org-projects.projects.0.project_id}\"",
      "}"
    ]
  },
  "google-beta-data-google_storage_project_service_account": {
    "description": "Defines google_storage_project_service_account",
    "prefix": "tf-google-beta-data-google_storage_project_service_account",
    "body": [
      "data \"google_storage_project_service_account\" \"gcs_account\" {}",
      "",
      "resource \"google_pubsub_topic_iam_binding\" \"binding\" {",
      "\ttopic       = \"${google_pubsub_topic.topic.name}\"",
      "\trole        = \"roles/pubsub.publisher\"",
      "\t\t  ",
      "\tmembers     = [\"serviceAccount:${data.google_storage_project_service_account.gcs_account.email_address}\"]",
      "}"
    ]
  },
  "google-beta-data-google_storage_transfer_project_service_account": {
    "description": "Defines google_storage_transfer_project_service_account",
    "prefix": "tf-google-beta-data-google_storage_transfer_project_service_account",
    "body": [
      "data \"google_storage_transfer_project_service_account\" \"default\" { }",
      "",
      "output \"default_account\" {",
      "  value = \"${data.google_storage_transfer_project_service_account.default.email}\"",
      "}"
    ]
  },
  "google-beta-data-signed_url": {
    "description": "Defines signed_url",
    "prefix": "tf-google-beta-data-signed_url",
    "body": [
      "data \"google_storage_object_signed_url\" \"artifact\" {",
      "  bucket = \"install_binaries\"",
      "  path   = \"path/to/install_file.bin\"",
      "",
      "}",
      "",
      "resource \"google_compute_instance\" \"vm\" {",
      "    name = \"vm\"",
      "    ...",
      "    ",
      "    provisioner \"remote-exec\" {",
      "        inline = [",
      "                \"wget '${data.google_storage_object_signed_url.artifact.signed_url}' -O install_file.bin\",",
      "                \"chmod +x install_file.bin\",",
      "                \"./install_file.bin\"",
      "                ]",
      "     }",
      "}"
    ]
  },
  "google-beta-data-storage_bucket_object": {
    "description": "Defines storage_bucket_object",
    "prefix": "tf-google-beta-data-storage_bucket_object",
    "body": [
      "data \"google_storage_bucket_object\" \"picture\" {",
      "  name   = \"folder/butterfly01.jpg\"",
      "  bucket = \"image-store\"",
      "}"
    ]
  },
  "google-beta-resource-access_context_manager_access_level": {
    "description": "Defines access_context_manager_access_level",
    "prefix": "tf-google-beta-resource-access_context_manager_access_level",
    "body": [
      "resource \"google_access_context_manager_access_level\" \"access-level\" {",
      "  parent      = \"accessPolicies/${google_access_context_manager_access_policy.test-access.name}\"",
      "  name        = \"accessPolicies/${google_access_context_manager_access_policy.test-access.name}/accessLevels/chromeos_no_lock\"",
      "  title       = \"chromeos_no_lock\"",
      "  basic {",
      "    conditions {",
      "      device_policy {",
      "        require_screen_lock = false",
      "        os_constraints {",
      "          os_type = \"DESKTOP_CHROME_OS\"",
      "        }",
      "      }",
      "    }",
      "  }",
      "}",
      "",
      "resource \"google_access_context_manager_access_policy\" \"access-policy\" {",
      "  parent = \"organizations/123456789\"",
      "  title  = \"my policy\"",
      "}"
    ]
  },
  "google-beta-resource-access_context_manager_access_policy": {
    "description": "Defines access_context_manager_access_policy",
    "prefix": "tf-google-beta-resource-access_context_manager_access_policy",
    "body": [
      "resource \"google_access_context_manager_access_policy\" \"access-policy\" {",
      "  parent = \"organizations/123456789\"",
      "  title  = \"my policy\"",
      "}"
    ]
  },
  "google-beta-resource-access_context_manager_service_perimeter": {
    "description": "Defines access_context_manager_service_perimeter",
    "prefix": "tf-google-beta-resource-access_context_manager_service_perimeter",
    "body": [
      "resource \"google_access_context_manager_service_perimeter\" \"service-perimeter\" {",
      "  parent      = \"accessPolicies/${google_access_context_manager_access_policy.test-access.name}\"",
      "  name        = \"accessPolicies/${google_access_context_manager_access_policy.test-access.name}/servicePerimeters/restrict_all\"",
      "  title       = \"restrict_all\"",
      "  status {",
      "    restricted_services = [\"storage.googleapis.com\"]",
      "  }",
      "}",
      "",
      "resource \"google_access_context_manager_access_level\" \"access-level\" {",
      "  parent      = \"accessPolicies/${google_access_context_manager_access_policy.test-access.name}\"",
      "  name        = \"accessPolicies/${google_access_context_manager_access_policy.test-access.name}/accessLevels/chromeos_no_lock\"",
      "  title       = \"chromeos_no_lock\"",
      "  basic {",
      "    conditions {",
      "      device_policy {",
      "        require_screen_lock = false",
      "        os_constraints {",
      "          os_type = \"DESKTOP_CHROME_OS\"",
      "        }",
      "      }",
      "    }",
      "  }",
      "}",
      "",
      "resource \"google_access_context_manager_access_policy\" \"access-policy\" {",
      "  parent = \"organizations/123456789\"",
      "  title  = \"my policy\"",
      "}"
    ]
  },
  "google-beta-resource-app_engine_application": {
    "description": "Defines app_engine_application",
    "prefix": "tf-google-beta-resource-app_engine_application",
    "body": [
      "resource \"google_project\" \"my_project\" {",
      "  name       = \"My Project\"",
      "  project_id = \"your-project-id\"",
      "  org_id     = \"1234567\"",
      "}",
      "",
      "resource \"google_app_engine_application\" \"app\" {",
      "  project     = \"${google_project.my_project.project_id}\"",
      "  location_id = \"us-central\"",
      "}"
    ]
  },
  "google-beta-resource-app_engine_firewall_rule": {
    "description": "Defines app_engine_firewall_rule",
    "prefix": "tf-google-beta-resource-app_engine_firewall_rule",
    "body": [
      "resource \"google_project\" \"my_project\" {",
      "  name       = \"tf-test-project\"",
      "  project_id = \"test-project\"",
      "  org_id     = \"123456789\"",
      "}",
      "",
      "resource \"google_app_engine_application\" \"app\" {",
      "  project     = \"${google_project.my_project.project_id}\"",
      "  location_id = \"us-central\"",
      "}",
      "",
      "resource \"google_app_engine_firewall_rule\" \"rule\" {",
      "  project = \"${google_app_engine_application.app.project}\"",
      "  priority = 1000",
      "  action = \"ALLOW\"",
      "  source_range = \"*\"",
      "}"
    ]
  },
  "google-beta-resource-bigquery_dataset": {
    "description": "Defines bigquery_dataset",
    "prefix": "tf-google-beta-resource-bigquery_dataset",
    "body": [
      "resource \"google_bigquery_dataset\" \"default\" {",
      "  dataset_id                  = \"foo\"",
      "  friendly_name               = \"test\"",
      "  description                 = \"This is a test description\"",
      "  location                    = \"EU\"",
      "  default_table_expiration_ms = 3600000",
      "",
      "  labels = {",
      "    env = \"default\"",
      "  }",
      "",
      "  access {",
      "    role   = \"READER\"",
      "    domain = \"example.com\"",
      "  }",
      "  access {",
      "    role           = \"WRITER\"",
      "    group_by_email = \"writers@example.com\"",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-bigquery_table": {
    "description": "Defines bigquery_table",
    "prefix": "tf-google-beta-resource-bigquery_table",
    "body": [
      "resource \"google_bigquery_dataset\" \"default\" {",
      "  dataset_id                  = \"foo\"",
      "  friendly_name               = \"test\"",
      "  description                 = \"This is a test description\"",
      "  location                    = \"EU\"",
      "  default_table_expiration_ms = 3600000",
      "",
      "  labels = {",
      "    env = \"default\"",
      "  }",
      "}",
      "",
      "resource \"google_bigquery_table\" \"default\" {",
      "  dataset_id = \"${google_bigquery_dataset.default.dataset_id}\"",
      "  table_id   = \"bar\"",
      "",
      "  time_partitioning {",
      "    type = \"DAY\"",
      "  }",
      "",
      "  labels = {",
      "    env = \"default\"",
      "  }",
      "",
      "  schema = <<EOF",
      "[",
      "  {",
      "    \"name\": \"permalink\",",
      "    \"type\": \"STRING\",",
      "    \"mode\": \"NULLABLE\",",
      "    \"description\": \"The Permalink\"",
      "  },",
      "  {",
      "    \"name\": \"state\",",
      "    \"type\": \"STRING\",",
      "    \"mode\": \"NULLABLE\",",
      "    \"description\": \"State where the head office is located\"",
      "  }",
      "]",
      "EOF",
      "}",
      "",
      "resource \"google_bigquery_table\" \"sheet\" {",
      "  dataset_id = \"${google_bigquery_dataset.default.dataset_id}\"",
      "  table_id   = \"scheet\"",
      "",
      "  external_data_configuration {",
      "    autodetect    = true",
      "    source_format = \"GOOGLE_SHEETS\"",
      "",
      "    google_sheets_options {",
      "      skip_leading_rows = 1",
      "    }",
      "",
      "    source_uris = [",
      "      \"https://docs.google.com/spreadsheets/d/123456789012345\",",
      "    ]",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-bigtable_instance": {
    "description": "Defines bigtable_instance",
    "prefix": "tf-google-beta-resource-bigtable_instance",
    "body": [
      "resource \"google_bigtable_instance\" \"production-instance\" {",
      "  name         = \"tf-instance\"",
      "",
      "  cluster {",
      "    cluster_id   = \"tf-instance-cluster\"",
      "    zone         = \"us-central1-b\"",
      "    num_nodes    = 3",
      "    storage_type = \"HDD\"",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-bigtable_instance_iam": {
    "description": "Defines bigtable_instance_iam",
    "prefix": "tf-google-beta-resource-bigtable_instance_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role    = \"roles/editor\"",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_bigtable_instance_iam_policy\" \"editor\" {",
      "  project      = \"your-project\"",
      "  instance      = \"your-bigtable-instance\"",
      "  policy_data  = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-beta-resource-bigtable_table": {
    "description": "Defines bigtable_table",
    "prefix": "tf-google-beta-resource-bigtable_table",
    "body": [
      "resource \"google_bigtable_instance\" \"instance\" {",
      "  name         = \"tf-instance\"",
      "  cluster_id   = \"tf-instance-cluster\"",
      "  zone         = \"us-central1-b\"",
      "  num_nodes    = 3",
      "  storage_type = \"HDD\"",
      "}",
      "",
      "resource \"google_bigtable_table\" \"table\" {",
      "  name          = \"tf-table\"",
      "  instance_name = \"${google_bigtable_instance.instance.name}\"",
      "  split_keys    = [\"a\", \"b\", \"c\"]",
      "}"
    ]
  },
  "google-beta-resource-binary_authorization_attestor": {
    "description": "Defines binary_authorization_attestor",
    "prefix": "tf-google-beta-resource-binary_authorization_attestor",
    "body": [
      "resource \"google_binary_authorization_attestor\" \"attestor\" {",
      "  name = \"test-attestor\"",
      "  attestation_authority_note {",
      "    note_reference = \"${google_container_analysis_note.note.name}\"",
      "    public_keys {",
      "      ascii_armored_pgp_public_key = <<EOF",
      "mQENBFtP0doBCADF+joTiXWKVuP8kJt3fgpBSjT9h8ezMfKA4aXZctYLx5wslWQl",
      "bB7Iu2ezkECNzoEeU7WxUe8a61pMCh9cisS9H5mB2K2uM4Jnf8tgFeXn3akJDVo0",
      "oR1IC+Dp9mXbRSK3MAvKkOwWlG99sx3uEdvmeBRHBOO+grchLx24EThXFOyP9Fk6",
      "V39j6xMjw4aggLD15B4V0v9JqBDdJiIYFzszZDL6pJwZrzcP0z8JO4rTZd+f64bD",
      "Mpj52j/pQfA8lZHOaAgb1OrthLdMrBAjoDjArV4Ek7vSbrcgYWcI6BhsQrFoxKdX",
      "83TZKai55ZCfCLIskwUIzA1NLVwyzCS+fSN/ABEBAAG0KCJUZXN0IEF0dGVzdG9y",
      "IiA8ZGFuYWhvZmZtYW5AZ29vZ2xlLmNvbT6JAU4EEwEIADgWIQRfWkqHt6hpTA1L",
      "uY060eeM4dc66AUCW0/R2gIbLwULCQgHAgYVCgkICwIEFgIDAQIeAQIXgAAKCRA6",
      "0eeM4dc66HdpCAC4ot3b0OyxPb0Ip+WT2U0PbpTBPJklesuwpIrM4Lh0N+1nVRLC",
      "51WSmVbM8BiAFhLbN9LpdHhds1kUrHF7+wWAjdR8sqAj9otc6HGRM/3qfa2qgh+U",
      "WTEk/3us/rYSi7T7TkMuutRMIa1IkR13uKiW56csEMnbOQpn9rDqwIr5R8nlZP5h",
      "MAU9vdm1DIv567meMqTaVZgR3w7bck2P49AO8lO5ERFpVkErtu/98y+rUy9d789l",
      "+OPuS1NGnxI1YKsNaWJF4uJVuvQuZ1twrhCbGNtVorO2U12+cEq+YtUxj7kmdOC1",
      "qoIRW6y0+UlAc+MbqfL0ziHDOAmcqz1GnROg",
      "=6Bvm",
      "EOF",
      "    }",
      "  }",
      "}",
      "",
      "resource \"google_container_analysis_note\" \"note\" {",
      "  name = \"test-attestor-note\"",
      "  attestation_authority {",
      "    hint {",
      "      human_readable_name = \"Attestor Note\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-binary_authorization_policy": {
    "description": "Defines binary_authorization_policy",
    "prefix": "tf-google-beta-resource-binary_authorization_policy",
    "body": [
      "resource \"google_binary_authorization_policy\" \"policy\" {",
      "  admission_whitelist_patterns {",
      "    name_pattern= \"gcr.io/google_containers/*\"",
      "  }",
      "",
      "  default_admission_rule {",
      "    evaluation_mode = \"ALWAYS_ALLOW\"",
      "    enforcement_mode = \"ENFORCED_BLOCK_AND_AUDIT_LOG\"",
      "  }",
      "",
      "  cluster_admission_rules {",
      "    cluster = \"us-central1-a.prod-cluster\"",
      "    evaluation_mode = \"REQUIRE_ATTESTATION\"",
      "    enforcement_mode = \"ENFORCED_BLOCK_AND_AUDIT_LOG\"",
      "    require_attestations_by = [\"${google_binary_authorization_attestor.attestor.name}\"]",
      "  }",
      "}",
      "",
      "resource \"google_container_analysis_note\" \"note\" {",
      "  name = \"test-attestor-note\"",
      "  attestation_authority {",
      "    hint {",
      "      human_readable_name = \"My attestor\"",
      "    }",
      "  }",
      "}",
      "",
      "resource \"google_binary_authorization_attestor\" \"attestor\" {",
      "  name = \"test-attestor\"",
      "  attestation_authority_note {",
      "    note_reference = \"${google_container_analysis_note.note.name}\"",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-cloud_build_trigger": {
    "description": "Defines cloud_build_trigger",
    "prefix": "tf-google-beta-resource-cloud_build_trigger",
    "body": [
      "resource \"google_cloudbuild_trigger\" \"filename-trigger\" {",
      "  trigger_template {",
      "    branch_name = \"master\"",
      "    repo_name   = \"my-repo\"",
      "  }",
      "",
      "  substitutions = {",
      "    _FOO = \"bar\"",
      "    _BAZ = \"qux\"",
      "  }",
      "",
      "  filename = \"cloudbuild.yaml\"",
      "}"
    ]
  },
  "google-beta-resource-cloud_run_domain_mapping": {
    "description": "Defines cloud_run_domain_mapping",
    "prefix": "tf-google-beta-resource-cloud_run_domain_mapping",
    "body": [
      "resource \"google_cloud_run_domain_mapping\" \"default\" {",
      "  location = \"us-central1\"",
      "  provider = \"google-beta\"",
      "  name = \"tftest-domainmapping.com\"",
      "",
      "  metadata {",
      "    namespace = \"my-project-name\"",
      "  }",
      "",
      "  spec {",
      "    route_name = \"should-be-a-service\"",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-cloud_run_service": {
    "description": "Defines cloud_run_service",
    "prefix": "tf-google-beta-resource-cloud_run_service",
    "body": [
      "resource \"google_cloud_run_service\" \"default\" {",
      "  name     = \"tftest-cloudrun\"",
      "  location = \"us-central1\"",
      "  provider = \"google-beta\"",
      "",
      "  metadata {",
      "    namespace = \"my-project-name\"",
      "  }",
      "",
      "  spec {",
      "    containers {",
      "      image = \"gcr.io/cloudrun/hello\"",
      "    }",
      "  }",
      "}",
      "",
      "# The Service is ready to be used when the \"Ready\" condition is True",
      "# Due to Terraform and API limitations this is best accessed through a local variable",
      "locals {",
      "  cloud_run_status = {",
      "    for cond in google_cloud_run_service.default.status[0].conditions :",
      "    cond.type => cond.status",
      "  }",
      "}",
      "",
      "output \"isReady\" {",
      "  value = local.cloud_run_status[\"Ready\"] == \"True\"",
      "}"
    ]
  },
  "google-beta-resource-cloud_scheduler_job": {
    "description": "Defines cloud_scheduler_job",
    "prefix": "tf-google-beta-resource-cloud_scheduler_job",
    "body": [
      "resource \"google_pubsub_topic\" \"topic\" {",
      "  name = \"job-topic\"",
      "}",
      "",
      "resource \"google_cloud_scheduler_job\" \"job\" {",
      "  name     = \"test-job\"",
      "  description = \"test job\"",
      "  schedule = \"*/2 * * * *\"",
      "",
      "  pubsub_target {",
      "    topic_name = \"${google_pubsub_topic.topic.id}\"",
      "    data = \"${base64encode(\"test\")}\"",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-cloudfunctions_function": {
    "description": "Defines cloudfunctions_function",
    "prefix": "tf-google-beta-resource-cloudfunctions_function",
    "body": [
      "resource \"google_storage_bucket\" \"bucket\" {",
      "  name = \"test-bucket\"",
      "}",
      "",
      "resource \"google_storage_bucket_object\" \"archive\" {",
      "  name   = \"index.zip\"",
      "  bucket = \"${google_storage_bucket.bucket.name}\"",
      "  source = \"./path/to/zip/file/which/contains/code\"",
      "}",
      "",
      "resource \"google_cloudfunctions_function\" \"function\" {",
      "  name                  = \"function-test\"",
      "  description           = \"My function\"",
      "  runtime               = \"nodejs10\"",
      "",
      "  available_memory_mb   = 128",
      "  source_archive_bucket = \"${google_storage_bucket.bucket.name}\"",
      "  source_archive_object = \"${google_storage_bucket_object.archive.name}\"",
      "  trigger_http          = true",
      "  timeout               = 60",
      "  entry_point           = \"helloGET\"",
      "  labels = {",
      "    my-label = \"my-label-value\"",
      "  }",
      "  ",
      "  environment_variables = {",
      "    MY_ENV_VAR = \"my-env-var-value\"",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-cloudiot_registry": {
    "description": "Defines cloudiot_registry",
    "prefix": "tf-google-beta-resource-cloudiot_registry",
    "body": [
      "resource \"google_pubsub_topic\" \"default-devicestatus\" {",
      "  name = \"default-devicestatus\"",
      "}",
      "",
      "resource \"google_pubsub_topic\" \"default-telemetry\" {",
      "  name = \"default-telemetry\"",
      "}",
      "",
      "resource \"google_cloudiot_registry\" \"default-registry\" {",
      "  name = \"default-registry\"",
      "",
      "  event_notification_config = {",
      "    pubsub_topic_name = \"${google_pubsub_topic.default-telemetry.id}\"",
      "  }",
      "",
      "  state_notification_config = {",
      "    pubsub_topic_name = \"${google_pubsub_topic.default-devicestatus.id}\"",
      "  }",
      "",
      "  http_config = {",
      "    http_enabled_state = \"HTTP_ENABLED\"",
      "  }",
      "",
      "  mqtt_config = {",
      "    mqtt_enabled_state = \"MQTT_ENABLED\"",
      "  }",
      "",
      "  credentials = [",
      "    {",
      "      public_key_certificate = {",
      "        format      = \"X509_CERTIFICATE_PEM\"",
      "        certificate = \"${file(\"rsa_cert.pem\")}\"",
      "      }",
      "    },",
      "  ]",
      "}"
    ]
  },
  "google-beta-resource-composer_environment": {
    "description": "Defines composer_environment",
    "prefix": "tf-google-beta-resource-composer_environment",
    "body": [
      "resource \"google_composer_environment\" \"test\" {",
      "  name   = \"my-composer-env\"",
      "  region = \"us-central1\"",
      "}"
    ]
  },
  "google-beta-resource-compute_address": {
    "description": "Defines compute_address",
    "prefix": "tf-google-beta-resource-compute_address",
    "body": [
      "resource \"google_compute_address\" \"ip_address\" {",
      "  name = \"my-address\"",
      "}"
    ]
  },
  "google-beta-resource-compute_attached_disk": {
    "description": "Defines compute_attached_disk",
    "prefix": "tf-google-beta-resource-compute_attached_disk",
    "body": [
      "resource \"google_compute_attached_disk\" \"default\" {",
      "  disk = \"${google_compute_disk.default.self_link}\"",
      "  instance = \"${google_compute_instance.default.self_link}\"",
      "}",
      "",
      "resource \"google_compute_instance\" \"default\" {",
      "  name         = \"attached-disk-instance\"",
      "  machine_type = \"n1-standard-1\"",
      "  zone         = \"us-west1-a\"",
      "",
      "",
      "  boot_disk {",
      "    initialize_params {",
      "      image = \"debian-cloud/debian-9\"",
      "    }",
      "  }",
      "",
      "  network_interface {",
      "    network = \"default\"",
      "  }",
      "",
      "  lifecycle {",
      "    ignore_changes = [\"attached_disk\"]",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-compute_autoscaler": {
    "description": "Defines compute_autoscaler",
    "prefix": "tf-google-beta-resource-compute_autoscaler",
    "body": [
      "resource \"google_compute_autoscaler\" \"default\" {",
      "  provider = \"google-beta\"",
      "",
      "  name   = \"my-autoscaler\"",
      "  zone   = \"us-central1-f\"",
      "  target = \"${google_compute_instance_group_manager.default.self_link}\"",
      "",
      "  autoscaling_policy {",
      "    max_replicas    = 5",
      "    min_replicas    = 1",
      "    cooldown_period = 60",
      "",
      "    metric {",
      "      name                       = \"pubsub.googleapis.com/subscription/num_undelivered_messages\"",
      "      filter                     = \"resource.type = pubsub_subscription AND resource.label.subscription_id = our-subscription\"",
      "      single_instance_assignment = 65535",
      "    }",
      "  }",
      "}",
      "",
      "resource \"google_compute_instance_template\" \"default\" {",
      "  provider = \"google-beta\"",
      "",
      "  name           = \"my-instance-template\"",
      "  machine_type   = \"n1-standard-1\"",
      "  can_ip_forward = false",
      "",
      "  tags = [\"foo\", \"bar\"]",
      "",
      "  disk {",
      "    source_image = \"${data.google_compute_image.debian_9.self_link}\"",
      "  }",
      "",
      "  network_interface {",
      "    network = \"default\"",
      "  }",
      "",
      "  metadata = {",
      "    foo = \"bar\"",
      "  }",
      "",
      "  service_account {",
      "    scopes = [\"userinfo-email\", \"compute-ro\", \"storage-ro\"]",
      "  }",
      "}",
      "",
      "resource \"google_compute_target_pool\" \"default\" {",
      "  provider = \"google-beta\"",
      "",
      "  name = \"my-target-pool\"",
      "}",
      "",
      "resource \"google_compute_instance_group_manager\" \"default\" {",
      "  provider = \"google-beta\"",
      "",
      "  name = \"my-igm\"",
      "  zone = \"us-central1-f\"",
      "",
      "  version {",
      "    instance_template  = \"${google_compute_instance_template.default.self_link}\"",
      "    name               = \"primary\"",
      "  }",
      "",
      "  target_pools       = [\"${google_compute_target_pool.default.self_link}\"]",
      "  base_instance_name = \"autoscaler-sample\"",
      "}",
      "",
      "data \"google_compute_image\" \"debian_9\" {",
      "  provider = \"google-beta\"",
      "",
      "  family  = \"debian-9\"",
      "  project = \"debian-cloud\"",
      "}",
      "",
      "provider \"google-beta\"{",
      "  region = \"us-central1\"",
      "  zone   = \"us-central1-a\"",
      "}"
    ]
  },
  "google-beta-resource-compute_backend_bucket": {
    "description": "Defines compute_backend_bucket",
    "prefix": "tf-google-beta-resource-compute_backend_bucket",
    "body": [
      "resource \"google_compute_backend_bucket\" \"image_backend\" {",
      "  name        = \"image-backend-bucket\"",
      "  description = \"Contains beautiful images\"",
      "  bucket_name = \"${google_storage_bucket.image_bucket.name}\"",
      "  enable_cdn  = true",
      "}",
      "",
      "resource \"google_storage_bucket\" \"image_bucket\" {",
      "  name     = \"image-store-bucket\"",
      "  location = \"EU\"",
      "}"
    ]
  },
  "google-beta-resource-compute_backend_bucket_signed_url_key": {
    "description": "Defines compute_backend_bucket_signed_url_key",
    "prefix": "tf-google-beta-resource-compute_backend_bucket_signed_url_key",
    "body": [
      "resource \"google_compute_backend_bucket_signed_url_key\" \"backend_key\" {",
      "  name           = \"test-key\"",
      "  key_value      = \"pPsVemX8GM46QVeezid6Rw==\"",
      "  backend_bucket = \"${google_compute_backend_bucket.test_backend.name}\"",
      "}",
      "",
      "resource \"google_compute_backend_bucket\" \"test_backend\" {",
      "  name        = \"test-signed-backend-bucket\"",
      "  description = \"Contains beautiful images\"",
      "  bucket_name = \"${google_storage_bucket.bucket.name}\"",
      "  enable_cdn  = true",
      "}",
      "",
      "resource \"google_storage_bucket\" \"bucket\" {",
      "  name     = \"test-storage-bucket\"",
      "  location = \"EU\"",
      "}"
    ]
  },
  "google-beta-resource-compute_backend_service": {
    "description": "Defines compute_backend_service",
    "prefix": "tf-google-beta-resource-compute_backend_service",
    "body": [
      "resource \"google_compute_backend_service\" \"default\" {",
      "  name          = \"backend-service\"",
      "  health_checks = [\"${google_compute_http_health_check.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_http_health_check\" \"default\" {",
      "  name               = \"health-check\"",
      "  request_path       = \"/\"",
      "  check_interval_sec = 1",
      "  timeout_sec        = 1",
      "}"
    ]
  },
  "google-beta-resource-compute_backend_service_signed_url_key": {
    "description": "Defines compute_backend_service_signed_url_key",
    "prefix": "tf-google-beta-resource-compute_backend_service_signed_url_key",
    "body": [
      "resource \"google_compute_backend_service_signed_url_key\" \"backend_key\" {",
      "  name           = \"test-key\"",
      "  key_value      = \"pPsVemX8GM46QVeezid6Rw==\"",
      "  backend_service = \"${google_compute_backend_service.example_backend.name}\"",
      "}",
      "",
      "resource \"google_compute_backend_service\" \"example_backend\" {",
      "  name        = \"my-backend-service\"",
      "  description = \"Our company website\"",
      "  port_name   = \"http\"",
      "  protocol    = \"HTTP\"",
      "  timeout_sec = 10",
      "  enable_cdn  = true",
      "",
      "  backend {",
      "    group = \"${google_compute_instance_group_manager.webservers.instance_group}\"",
      "  }",
      "",
      "  health_checks = [\"${google_compute_http_health_check.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_instance_group_manager\" \"webservers\" {",
      "  name               = \"my-webservers\"",
      "  instance_template  = \"${google_compute_instance_template.webserver.self_link}\"",
      "  base_instance_name = \"webserver\"",
      "  zone               = \"us-central1-f\"",
      "  target_size        = 1",
      "}",
      "",
      "resource \"google_compute_instance_template\" \"webserver\" {",
      "  name         = \"standard-webserver\"",
      "  machine_type = \"n1-standard-1\"",
      "",
      "  network_interface {",
      "    network = \"default\"",
      "  }",
      "",
      "  disk {",
      "    source_image = \"debian-cloud/debian-9\"",
      "    auto_delete  = true",
      "    boot         = true",
      "  }",
      "}",
      "",
      "resource \"google_compute_http_health_check\" \"default\" {",
      "  name               = \"test\"",
      "  request_path       = \"/\"",
      "  check_interval_sec = 1",
      "  timeout_sec        = 1",
      "}"
    ]
  },
  "google-beta-resource-compute_disk": {
    "description": "Defines compute_disk",
    "prefix": "tf-google-beta-resource-compute_disk",
    "body": [
      "resource \"google_compute_disk\" \"default\" {",
      "  name  = \"test-disk\"",
      "  type  = \"pd-ssd\"",
      "  zone  = \"us-central1-a\"",
      "  image = \"debian-8-jessie-v20170523\"",
      "  labels = {",
      "    environment = \"dev\"",
      "  }",
      "  physical_block_size_bytes = 4096",
      "}"
    ]
  },
  "google-beta-resource-compute_external_vpn_gateway": {
    "description": "Defines compute_external_vpn_gateway",
    "prefix": "tf-google-beta-resource-compute_external_vpn_gateway",
    "body": [
      "resource \"google_compute_ha_vpn_gateway\" \"ha_gateway\" {",
      "  provider = \"google-beta\"",
      "  region   = \"us-central1\"",
      "  name     = \"ha-vpn\"",
      "  network  = \"${google_compute_network.network.self_link}\"",
      "}",
      "",
      "resource \"google_compute_external_vpn_gateway\" \"external_gateway\" {",
      "  provider        = \"google-beta\"",
      "  name            = \"external-gateway\"",
      "  redundancy_type = \"SINGLE_IP_INTERNALLY_REDUNDANT\"",
      "  description     = \"An externally managed VPN gateway\"",
      "  interface {",
      "    id = 0",
      "    ip_address = \"8.8.8.8\"",
      "  }",
      "}",
      "",
      "resource \"google_compute_network\" \"network\" {",
      "  provider                = \"google-beta\"",
      "  name                    = \"network\"",
      "  routing_mode            = \"GLOBAL\"",
      "  auto_create_subnetworks = false",
      "}",
      "",
      "resource \"google_compute_subnetwork\" \"network_subnet1\" {",
      "  provider = \"google-beta\"",
      "  name          = \"ha-vpn-subnet-1\"",
      "  ip_cidr_range = \"10.0.1.0/24\"",
      "  region        = \"us-central1\"",
      "  network       = \"${google_compute_network.network.self_link}\"",
      "}",
      "",
      "resource \"google_compute_subnetwork\" \"network_subnet2\" {",
      "  provider = \"google-beta\"",
      "  name          = \"ha-vpn-subnet-2\"",
      "  ip_cidr_range = \"10.0.2.0/24\"",
      "  region        = \"us-west1\"",
      "  network       = \"${google_compute_network.network.self_link}\"",
      "}",
      "",
      "resource \"google_compute_router\" \"router1\" {",
      "  provider = \"google-beta\"",
      "  name    = \"ha-vpn-router1\"",
      "  network = \"${google_compute_network.network.name}\"",
      "  bgp {",
      "    asn = 64514",
      "  }",
      "}",
      "",
      "resource \"google_compute_vpn_tunnel\" \"tunnel1\" {",
      "  provider         = \"google-beta\"",
      "  name             = \"ha-vpn-tunnel1\"",
      "  region           = \"us-central1\"",
      "  vpn_gateway      = \"${google_compute_ha_vpn_gateway.ha_gateway.self_link}\"",
      "  peer_external_gateway = \"${google_compute_external_vpn_gateway.external_gateway.self_link}\"",
      "  peer_external_gateway_interface = 0",
      "  shared_secret    = \"a secret message\"",
      "  router           = \"${google_compute_router.router1.self_link}\"",
      "  vpn_gateway_interface = 0",
      "}",
      "",
      "resource \"google_compute_vpn_tunnel\" \"tunnel2\" {",
      "  provider         = \"google-beta\"",
      "  name             = \"ha-vpn-tunnel2\"",
      "  region           = \"us-central1\"",
      "  vpn_gateway      = \"${google_compute_ha_vpn_gateway.ha_gateway.self_link}\"",
      "  peer_external_gateway = \"${google_compute_external_vpn_gateway.external_gateway.self_link}\"",
      "  peer_external_gateway_interface = 0",
      "  shared_secret    = \"a secret message\"",
      "  router           = \" ${google_compute_router.router1.self_link}\"",
      "  vpn_gateway_interface = 1",
      "}",
      "",
      "resource \"google_compute_router_interface\" \"router1_interface1\" {",
      "  provider = \"google-beta\"",
      "  name       = \"router1-interface1\"",
      "  router     = \"${google_compute_router.router1.name}\"",
      "  region     = \"us-central1\"",
      "  ip_range   = \"169.254.0.1/30\"",
      "  vpn_tunnel = \"${google_compute_vpn_tunnel.tunnel1.name}\"",
      "}",
      "",
      "resource \"google_compute_router_peer\" \"router1_peer1\" {",
      "  provider = \"google-beta\"",
      "  name                      = \"router1-peer1\"",
      "  router                    = \"${google_compute_router.router1.name}\"",
      "  region                    = \"us-central1\"",
      "  peer_ip_address           = \"169.254.0.2\"",
      "  peer_asn                  = 64515",
      "  advertised_route_priority = 100",
      "  interface                 = \"${google_compute_router_interface.router1_interface1.name}\"",
      "}",
      "",
      "resource \"google_compute_router_interface\" \"router1_interface2\" {",
      "  provider = \"google-beta\"",
      "  name       = \"router1-interface2\"",
      "  router     = \"${google_compute_router.router1.name}\"",
      "  region     = \"us-central1\"",
      "  ip_range   = \"169.254.1.1/30\"",
      "  vpn_tunnel = \"${google_compute_vpn_tunnel.tunnel2.name}\"",
      "}",
      "",
      "resource \"google_compute_router_peer\" \"router1_peer2\" {",
      "  provider = \"google-beta\"",
      "  name                      = \"router1-peer2\"",
      "  router                    = \"${google_compute_router.router1.name}\"",
      "  region                    = \"us-central1\"",
      "  peer_ip_address           = \"169.254.1.2\"",
      "  peer_asn                  = 64515",
      "  advertised_route_priority = 100",
      "  interface                 = \"${google_compute_router_interface.router1_interface2.name}\"",
      "}"
    ]
  },
  "google-beta-resource-compute_firewall": {
    "description": "Defines compute_firewall",
    "prefix": "tf-google-beta-resource-compute_firewall",
    "body": [
      "resource \"google_compute_firewall\" \"default\" {",
      "  name    = \"test-firewall\"",
      "  network = \"${google_compute_network.default.name}\"",
      "",
      "  allow {",
      "    protocol = \"icmp\"",
      "  }",
      "",
      "  allow {",
      "    protocol = \"tcp\"",
      "    ports    = [\"80\", \"8080\", \"1000-2000\"]",
      "  }",
      "",
      "  source_tags = [\"web\"]",
      "}",
      "",
      "resource \"google_compute_network\" \"default\" {",
      "  name = \"test-network\"",
      "}"
    ]
  },
  "google-beta-resource-compute_forwarding_rule": {
    "description": "Defines compute_forwarding_rule",
    "prefix": "tf-google-beta-resource-compute_forwarding_rule",
    "body": [
      "resource \"google_compute_forwarding_rule\" \"default\" {",
      "  name       = \"website-forwarding-rule\"",
      "  target     = \"${google_compute_target_pool.default.self_link}\"",
      "  port_range = \"80\"",
      "}",
      "",
      "resource \"google_compute_target_pool\" \"default\" {",
      "  name = \"website-target-pool\"",
      "}"
    ]
  },
  "google-beta-resource-compute_global_address": {
    "description": "Defines compute_global_address",
    "prefix": "tf-google-beta-resource-compute_global_address",
    "body": [
      "resource \"google_compute_global_address\" \"default\" {",
      "  name = \"global-appserver-ip\"",
      "}"
    ]
  },
  "google-beta-resource-compute_global_forwarding_rule": {
    "description": "Defines compute_global_forwarding_rule",
    "prefix": "tf-google-beta-resource-compute_global_forwarding_rule",
    "body": [
      "resource \"google_compute_global_forwarding_rule\" \"default\" {",
      "  name       = \"global-rule\"",
      "  target     = \"${google_compute_target_http_proxy.default.self_link}\"",
      "  port_range = \"80\"",
      "}",
      "",
      "resource \"google_compute_target_http_proxy\" \"default\" {",
      "  name        = \"target-proxy\"",
      "  description = \"a description\"",
      "  url_map     = \"${google_compute_url_map.default.self_link}\"",
      "}",
      "",
      "resource \"google_compute_url_map\" \"default\" {",
      "  name            = \"url-map-target-proxy\"",
      "  description     = \"a description\"",
      "  default_service = \"${google_compute_backend_service.default.self_link}\"",
      "",
      "  host_rule {",
      "    hosts        = [\"mysite.com\"]",
      "    path_matcher = \"allpaths\"",
      "  }",
      "",
      "  path_matcher {",
      "    name            = \"allpaths\"",
      "    default_service = \"${google_compute_backend_service.default.self_link}\"",
      "",
      "    path_rule {",
      "      paths   = [\"/*\"]",
      "      service = \"${google_compute_backend_service.default.self_link}\"",
      "    }",
      "  }",
      "}",
      "",
      "resource \"google_compute_backend_service\" \"default\" {",
      "  name        = \"backend\"",
      "  port_name   = \"http\"",
      "  protocol    = \"HTTP\"",
      "  timeout_sec = 10",
      "",
      "  health_checks = [\"${google_compute_http_health_check.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_http_health_check\" \"default\" {",
      "  name               = \"check-backend\"",
      "  request_path       = \"/\"",
      "  check_interval_sec = 1",
      "  timeout_sec        = 1",
      "}"
    ]
  },
  "google-beta-resource-compute_ha_vpn_gateway": {
    "description": "Defines compute_ha_vpn_gateway",
    "prefix": "tf-google-beta-resource-compute_ha_vpn_gateway",
    "body": [
      "resource \"google_compute_ha_vpn_gateway\" \"ha_gateway1\" {",
      "  provider = \"google-beta\"",
      "  region   = \"us-central1\"",
      "  name     = \"ha-vpn-1\"",
      "  network  = \"${google_compute_network.network1.self_link}\"",
      "}",
      "",
      "resource \"google_compute_network\" \"network1\" {",
      "  provider                = \"google-beta\"",
      "  name                    = \"network1\"",
      "  auto_create_subnetworks = false",
      "}"
    ]
  },
  "google-beta-resource-compute_health_check": {
    "description": "Defines compute_health_check",
    "prefix": "tf-google-beta-resource-compute_health_check",
    "body": [
      "resource \"google_compute_health_check\" \"internal-health-check\" {",
      " name = \"internal-service-health-check\"",
      "",
      " timeout_sec        = 1",
      " check_interval_sec = 1",
      "",
      " tcp_health_check {",
      "   port = \"80\"",
      " }",
      "}"
    ]
  },
  "google-beta-resource-compute_http_health_check": {
    "description": "Defines compute_http_health_check",
    "prefix": "tf-google-beta-resource-compute_http_health_check",
    "body": [
      "resource \"google_compute_http_health_check\" \"default\" {",
      "  name         = \"authentication-health-check\"",
      "  request_path = \"/health_check\"",
      "",
      "  timeout_sec        = 1",
      "  check_interval_sec = 1",
      "}"
    ]
  },
  "google-beta-resource-compute_https_health_check": {
    "description": "Defines compute_https_health_check",
    "prefix": "tf-google-beta-resource-compute_https_health_check",
    "body": [
      "resource \"google_compute_https_health_check\" \"default\" {",
      "  name         = \"authentication-health-check\"",
      "  request_path = \"/health_check\"",
      "",
      "  timeout_sec        = 1",
      "  check_interval_sec = 1",
      "}"
    ]
  },
  "google-beta-resource-compute_image": {
    "description": "Defines compute_image",
    "prefix": "tf-google-beta-resource-compute_image",
    "body": [
      "resource \"google_compute_image\" \"example\" {",
      "  name = \"example-image\"",
      "",
      "  raw_disk {",
      "    source = \"https://storage.googleapis.com/bosh-cpi-artifacts/bosh-stemcell-3262.4-google-kvm-ubuntu-trusty-go_agent-raw.tar.gz\"",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-compute_instance": {
    "description": "Defines compute_instance",
    "prefix": "tf-google-beta-resource-compute_instance",
    "body": [
      "resource \"google_compute_instance\" \"default\" {",
      "  name         = \"test\"",
      "  machine_type = \"n1-standard-1\"",
      "  zone         = \"us-central1-a\"",
      "",
      "  tags = [\"foo\", \"bar\"]",
      "",
      "  boot_disk {",
      "    initialize_params {",
      "      image = \"debian-cloud/debian-9\"",
      "    }",
      "  }",
      "",
      "  // Local SSD disk",
      "  scratch_disk {",
      "  }",
      "",
      "  network_interface {",
      "    network = \"default\"",
      "",
      "    access_config {",
      "      // Ephemeral IP",
      "    }",
      "  }",
      "",
      "  metadata = {",
      "    foo = \"bar\"",
      "  }",
      "",
      "  metadata_startup_script = \"echo hi > /test.txt\"",
      "",
      "  service_account {",
      "    scopes = [\"userinfo-email\", \"compute-ro\", \"storage-ro\"]",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-compute_instance_from_template": {
    "description": "Defines compute_instance_from_template",
    "prefix": "tf-google-beta-resource-compute_instance_from_template",
    "body": [
      "resource \"google_compute_instance_template\" \"tpl\" {",
      "  name = \"template\"",
      "  machine_type = \"n1-standard-1\"",
      "",
      "  disk {",
      "    source_image = \"debian-cloud/debian-9\"",
      "    auto_delete = true",
      "    disk_size_gb = 100",
      "    boot = true",
      "  }",
      "",
      "  network_interface {",
      "    network = \"default\"",
      "  }",
      "",
      "  metadata = {",
      "    foo = \"bar\"",
      "  }",
      "",
      "  can_ip_forward = true",
      "}",
      "",
      "resource \"google_compute_instance_from_template\" \"tpl\" {",
      "  name           = \"instance-from-template\"",
      "  zone           = \"us-central1-a\"",
      "",
      "  source_instance_template = \"${google_compute_instance_template.tpl.self_link}\"",
      "",
      "  // Override fields from instance template",
      "  can_ip_forward = false",
      "  labels = {",
      "    my_key       = \"my_value\"",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-compute_instance_group": {
    "description": "Defines compute_instance_group",
    "prefix": "tf-google-beta-resource-compute_instance_group",
    "body": [
      "resource \"google_compute_instance_group\" \"test\" {",
      "  name        = \"terraform-test\"",
      "  description = \"Terraform test instance group\"",
      "  zone        = \"us-central1-a\"",
      "  network     = \"${google_compute_network.default.self_link}\"",
      "}"
    ]
  },
  "google-beta-resource-compute_instance_group_manager": {
    "description": "Defines compute_instance_group_manager",
    "prefix": "tf-google-beta-resource-compute_instance_group_manager",
    "body": [
      "resource \"google_compute_health_check\" \"autohealing\" {",
      "  name                = \"autohealing-health-check\"",
      "  check_interval_sec  = 5",
      "  timeout_sec         = 5",
      "  healthy_threshold   = 2",
      "  unhealthy_threshold = 10                         # 50 seconds",
      "",
      "  http_health_check {",
      "    request_path = \"/healthz\"",
      "    port         = \"8080\"",
      "  }",
      "}",
      "",
      "resource \"google_compute_instance_group_manager\" \"appserver\" {",
      "  name = \"appserver-igm\"",
      "",
      "  base_instance_name = \"app\"",
      "  instance_template  = \"${google_compute_instance_template.appserver.self_link}\"",
      "  update_strategy    = \"NONE\"",
      "  zone               = \"us-central1-a\"",
      "",
      "  target_pools = [\"${google_compute_target_pool.appserver.self_link}\"]",
      "  target_size  = 2",
      "",
      "  named_port {",
      "    name = \"customHTTP\"",
      "    port = 8888",
      "  }",
      "",
      "  auto_healing_policies {",
      "    health_check      = \"${google_compute_health_check.autohealing.self_link}\"",
      "    initial_delay_sec = 300",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-compute_instance_iam": {
    "description": "Defines compute_instance_iam",
    "prefix": "tf-google-beta-resource-compute_instance_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/compute.osLogin\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_compute_instance_iam_policy\" \"instance\" {",
      "  instance_name  = \"your-instance-name\"",
      "  policy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-beta-resource-compute_instance_template": {
    "description": "Defines compute_instance_template",
    "prefix": "tf-google-beta-resource-compute_instance_template",
    "body": [
      "resource \"google_compute_instance_template\" \"default\" {",
      "  name        = \"appserver-template\"",
      "  description = \"This template is used to create app server instances.\"",
      "",
      "  tags = [\"foo\", \"bar\"]",
      "",
      "  labels = {",
      "    environment = \"dev\"",
      "  }",
      "",
      "  instance_description = \"description assigned to instances\"",
      "  machine_type         = \"n1-standard-1\"",
      "  can_ip_forward       = false",
      "",
      "  scheduling {",
      "    automatic_restart   = true",
      "    on_host_maintenance = \"MIGRATE\"",
      "  }",
      "",
      "  // Create a new boot disk from an image",
      "  disk {",
      "    source_image = \"debian-cloud/debian-9\"",
      "    auto_delete  = true",
      "    boot         = true",
      "  }",
      "",
      "  // Use an existing disk resource",
      "  disk {",
      "    // Instance Templates reference disks by name, not self link",
      "    source      = \"${google_compute_disk.foobar.name}\"",
      "    auto_delete = false",
      "    boot        = false",
      "  }",
      "",
      "  network_interface {",
      "    network = \"default\"",
      "  }",
      "",
      "  metadata = {",
      "    foo = \"bar\"",
      "  }",
      "",
      "  service_account {",
      "    scopes = [\"userinfo-email\", \"compute-ro\", \"storage-ro\"]",
      "  }",
      "}",
      "",
      "data \"google_compute_image\" \"my_image\" {",
      "  family  = \"debian-9\"",
      "  project = \"debian-cloud\"",
      "}",
      "",
      "resource \"google_compute_disk\" \"foobar\" {",
      "  name  = \"existing-disk\"",
      "  image = \"${data.google_compute_image.my_image.self_link}\"",
      "  size  = 10",
      "  type  = \"pd-ssd\"",
      "  zone  = \"us-central1-a\"",
      "}"
    ]
  },
  "google-beta-resource-compute_interconnect_attachment": {
    "description": "Defines compute_interconnect_attachment",
    "prefix": "tf-google-beta-resource-compute_interconnect_attachment",
    "body": [
      "resource \"google_compute_interconnect_attachment\" \"on_prem\" {",
      "  name         = \"on-prem-attachment\"",
      "  interconnect = \"my-interconnect-id\"",
      "  router       = \"${google_compute_router.foobar.self_link}\"",
      "}",
      "",
      "resource \"google_compute_router\" \"foobar\" {",
      "  name    = \"router\"",
      "  network = \"${google_compute_network.foobar.name}\"",
      "}"
    ]
  },
  "google-beta-resource-compute_managed_ssl_certificate": {
    "description": "Defines compute_managed_ssl_certificate",
    "prefix": "tf-google-beta-resource-compute_managed_ssl_certificate",
    "body": [
      "resource \"google_compute_managed_ssl_certificate\" \"default\" {",
      "  provider = \"google-beta\"",
      "",
      "  name = \"test-cert\"",
      "",
      "  managed {",
      "    domains = [\"sslcert.tf-test.club.\"]",
      "  }",
      "}",
      "",
      "resource \"google_compute_target_https_proxy\" \"default\" {",
      "  provider = \"google-beta\"",
      "",
      "  name             = \"test-proxy\"",
      "  url_map          = \"${google_compute_url_map.default.self_link}\"",
      "  ssl_certificates = [\"${google_compute_managed_ssl_certificate.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_url_map\" \"default\" {",
      "  provider = \"google-beta\"",
      "",
      "  name        = \"url-map\"",
      "  description = \"a description\"",
      "",
      "  default_service = \"${google_compute_backend_service.default.self_link}\"",
      "",
      "  host_rule {",
      "    hosts        = [\"sslcert.tf-test.club\"]",
      "    path_matcher = \"allpaths\"",
      "  }",
      "",
      "  path_matcher {",
      "    name            = \"allpaths\"",
      "    default_service = \"${google_compute_backend_service.default.self_link}\"",
      "",
      "    path_rule {",
      "      paths   = [\"/*\"]",
      "      service = \"${google_compute_backend_service.default.self_link}\"",
      "    }",
      "  }",
      "}",
      "",
      "resource \"google_compute_backend_service\" \"default\" {",
      "  provider = \"google-beta\"",
      "",
      "  name        = \"backend-service\"",
      "  port_name   = \"http\"",
      "  protocol    = \"HTTP\"",
      "  timeout_sec = 10",
      "",
      "  health_checks = [\"${google_compute_http_health_check.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_http_health_check\" \"default\" {",
      "  provider = \"google-beta\"",
      "",
      "  name               = \"http-health-check\"",
      "  request_path       = \"/\"",
      "  check_interval_sec = 1",
      "  timeout_sec        = 1",
      "}",
      "",
      "resource \"google_dns_managed_zone\" \"zone\" {",
      "  provider = \"google-beta\"",
      "",
      "  name     = \"dnszone\"",
      "  dns_name = \"sslcert.tf-test.club.\"",
      "}",
      "",
      "resource \"google_compute_global_forwarding_rule\" \"default\" {",
      "  provider = \"google-beta\"",
      "",
      "  name       = \"forwarding-rule\"",
      "  target     = \"${google_compute_target_https_proxy.default.self_link}\"",
      "  port_range = 443",
      "}",
      "",
      "resource \"google_dns_record_set\" \"set\" {",
      "  provider = \"google-beta\"",
      "",
      "  name         = \"sslcert.tf-test.club.\"",
      "  type         = \"A\"",
      "  ttl          = 3600",
      "  managed_zone = \"${google_dns_managed_zone.zone.name}\"",
      "  rrdatas      = [\"${google_compute_global_forwarding_rule.default.ip_address}\"]",
      "}",
      "",
      "provider \"google-beta\"{",
      "  region = \"us-central1\"",
      "  zone   = \"us-central1-a\"",
      "}"
    ]
  },
  "google-beta-resource-compute_network": {
    "description": "Defines compute_network",
    "prefix": "tf-google-beta-resource-compute_network",
    "body": [
      "resource \"google_compute_network\" \"vpc_network\" {",
      "  name = \"vpc-network\"",
      "}"
    ]
  },
  "google-beta-resource-compute_network_endpoint": {
    "description": "Defines compute_network_endpoint",
    "prefix": "tf-google-beta-resource-compute_network_endpoint",
    "body": [
      "resource \"google_compute_network_endpoint\" \"default-endpoint {",
      "  network_endpoint_group = \"${google_compute_network_endpoint_group.neg.name}\"",
      "",
      "  instance    = \"${google_compute_instance.endpoint-instance.name}\"",
      "  port        = \"${google_compute_network_endpoint_group.neg.default_port}\"",
      "  ip_address  = \"${google_compute_instance.endpoint-instance.network_interface.0.network_ip}\"",
      "}",
      "",
      "data \"google_compute_image\" \"my_image\" {",
      "  family  = \"debian-9\"",
      "  project = \"debian-cloud\"",
      "}",
      "",
      "resource \"google_compute_instance\" \"endpoint-instance\" {",
      "  name         =  \"endpoint-instance\"",
      "  machine_type = \"n1-standard-1\"",
      "",
      "  boot_disk {",
      "    initialize_params{",
      "      image = \"${data.google_compute_image.my_image.self_link}\"",
      "    }",
      "  }",
      "",
      "  network_interface {",
      "    subnetwork = \"${google_compute_subnetwork.default.self_link}\"",
      "    access_config { }",
      "  }",
      "}",
      "",
      "resource \"google_compute_network_endpoint_group\" \"group\" {",
      "  name         = \"my-lb-neg\"",
      "  network      = \"${google_compute_network.default.self_link}\"",
      "  subnetwork   = \"${google_compute_subnetwork.default.self_link}\"",
      "  default_port = \"90\"",
      "  zone         = \"us-central1-a\"",
      "}",
      "",
      "resource \"google_compute_network\" \"default\" {",
      "  name = \"neg-network\"",
      "  auto_create_subnetworks = false",
      "}",
      "",
      "resource \"google_compute_subnetwork\" \"default\" {",
      "  name          = \"neg-subnetwork\"",
      "  ip_cidr_range = \"10.0.0.1/16\"",
      "  region        = \"us-central1\"",
      "  network       = \"${google_compute_network.default.self_link}\"",
      "}"
    ]
  },
  "google-beta-resource-compute_network_endpoint_group": {
    "description": "Defines compute_network_endpoint_group",
    "prefix": "tf-google-beta-resource-compute_network_endpoint_group",
    "body": [
      "resource \"google_compute_network_endpoint_group\" \"neg\" {",
      "  name         = \"my-lb-neg\"",
      "  network      = \"${google_compute_network.default.self_link}\"",
      "  subnetwork   = \"${google_compute_subnetwork.default.self_link}\"",
      "  default_port = \"90\"",
      "  zone         = \"us-central1-a\"",
      "}",
      "",
      "resource \"google_compute_network\" \"default\" {",
      "  name = \"neg-network\"",
      "  auto_create_subnetworks = false",
      "}",
      "",
      "resource \"google_compute_subnetwork\" \"default\" {",
      "  name          = \"neg-subnetwork\"",
      "  ip_cidr_range = \"10.0.0.0/16\"",
      "  region        = \"us-central1\"",
      "  network       = \"${google_compute_network.default.self_link}\"",
      "}"
    ]
  },
  "google-beta-resource-compute_network_peering": {
    "description": "Defines compute_network_peering",
    "prefix": "tf-google-beta-resource-compute_network_peering",
    "body": [
      "resource \"google_compute_network_peering\" \"peering1\" {",
      "  name = \"peering1\"",
      "  network = \"${google_compute_network.default.self_link}\"",
      "  peer_network = \"${google_compute_network.other.self_link}\"",
      "}",
      "",
      "resource \"google_compute_network_peering\" \"peering2\" {",
      "  name = \"peering2\"",
      "  network = \"${google_compute_network.other.self_link}\"",
      "  peer_network = \"${google_compute_network.default.self_link}\"",
      "}",
      "",
      "resource \"google_compute_network\" \"default\" {",
      "  name                    = \"foobar\"",
      "  auto_create_subnetworks = \"false\"",
      "}",
      "",
      "resource \"google_compute_network\" \"other\" {",
      "  name                    = \"other\"",
      "  auto_create_subnetworks = \"false\"",
      "}"
    ]
  },
  "google-beta-resource-compute_node_group": {
    "description": "Defines compute_node_group",
    "prefix": "tf-google-beta-resource-compute_node_group",
    "body": [
      "data \"google_compute_node_types\" \"central1a\" {",
      "  zone = \"us-central1-a\"",
      "}",
      "",
      "resource \"google_compute_node_template\" \"soletenant-tmpl\" {",
      "  name = \"soletenant-tmpl\"",
      "  region = \"us-central1\"",
      "  node_type = \"${data.google_compute_node_types.central1a.names[0]}\"",
      "}",
      "",
      "resource \"google_compute_node_group\" \"nodes\" {",
      "  name = \"soletenant-group\"",
      "  zone = \"us-central1-a\"",
      "  description = \"example google_compute_node_group for Terraform Google Provider\"",
      "",
      "  size = 1",
      "  node_template = \"${google_compute_node_template.soletenant-tmpl.self_link}\"",
      "}"
    ]
  },
  "google-beta-resource-compute_node_template": {
    "description": "Defines compute_node_template",
    "prefix": "tf-google-beta-resource-compute_node_template",
    "body": [
      "data \"google_compute_node_types\" \"central1a\" {",
      "  zone = \"us-central1-a\"",
      "}",
      "",
      "resource \"google_compute_node_template\" \"template\" {",
      "  name = \"soletenant-tmpl\"",
      "  region = \"us-central1\"",
      "  node_type = \"${data.google_compute_node_types.central1a.names[0]}\"",
      "}"
    ]
  },
  "google-beta-resource-compute_project_default_network_tier": {
    "description": "Defines compute_project_default_network_tier",
    "prefix": "tf-google-beta-resource-compute_project_default_network_tier",
    "body": [
      "resource \"google_compute_project_default_network_tier\" \"default\" {",
      "  network_tier = \"PREMIUM\"",
      "}"
    ]
  },
  "google-beta-resource-compute_project_metadata": {
    "description": "Defines compute_project_metadata",
    "prefix": "tf-google-beta-resource-compute_project_metadata",
    "body": [
      "resource \"google_compute_project_metadata\" \"default\" {",
      "  metadata = {",
      "    foo  = \"bar\"",
      "    fizz = \"buzz\"",
      "    \"13\" = \"42\"",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-compute_project_metadata_item": {
    "description": "Defines compute_project_metadata_item",
    "prefix": "tf-google-beta-resource-compute_project_metadata_item",
    "body": [
      "resource \"google_compute_project_metadata_item\" \"default\" {",
      "  key = \"my_metadata\"",
      "  value = \"my_value\"",
      "}"
    ]
  },
  "google-beta-resource-compute_region_autoscaler": {
    "description": "Defines compute_region_autoscaler",
    "prefix": "tf-google-beta-resource-compute_region_autoscaler",
    "body": [
      "resource \"google_compute_region_autoscaler\" \"foobar\" {",
      "  provider = \"google-beta\"",
      "",
      "  name   = \"my-region-autoscaler\"",
      "  region = \"us-central1\"",
      "  target = \"${google_compute_region_instance_group_manager.foobar.self_link}\"",
      "",
      "  autoscaling_policy {",
      "    max_replicas    = 5",
      "    min_replicas    = 1",
      "    cooldown_period = 60",
      "",
      "    cpu_utilization {",
      "      target = 0.5",
      "    }",
      "  }",
      "}",
      "",
      "resource \"google_compute_instance_template\" \"foobar\" {",
      "  provider = \"google-beta\"",
      "",
      "  name           = \"my-instance-template\"",
      "  machine_type   = \"n1-standard-1\"",
      "  can_ip_forward = false",
      "",
      "  tags = [\"foo\", \"bar\"]",
      "",
      "  disk {",
      "    source_image = \"${data.google_compute_image.debian_9.self_link}\"",
      "  }",
      "",
      "  network_interface {",
      "    network = \"default\"",
      "  }",
      "",
      "  metadata = {",
      "    foo = \"bar\"",
      "  }",
      "",
      "  service_account {",
      "    scopes = [\"userinfo-email\", \"compute-ro\", \"storage-ro\"]",
      "  }",
      "}",
      "",
      "resource \"google_compute_target_pool\" \"foobar\" {",
      "  provider = \"google-beta\"",
      "",
      "  name = \"my-target-pool\"",
      "}",
      "",
      "resource \"google_compute_region_instance_group_manager\" \"foobar\" {",
      "  provider = \"google-beta\"",
      "",
      "  name   = \"my-region-igm\"",
      "  region = \"us-central1\"",
      "",
      "  version {",
      "    instance_template  = \"${google_compute_instance_template.foobar.self_link}\"",
      "    name               = \"primary\"",
      "  }",
      "",
      "  target_pools       = [\"${google_compute_target_pool.foobar.self_link}\"]",
      "  base_instance_name = \"foobar\"",
      "}",
      "",
      "data \"google_compute_image\" \"debian_9\" {",
      "  provider = \"google-beta\"",
      "",
      "\tfamily  = \"debian-9\"",
      "\tproject = \"debian-cloud\"",
      "}",
      "",
      "provider \"google-beta\"{",
      "  region = \"us-central1\"",
      "  zone   = \"us-central1-a\"",
      "}"
    ]
  },
  "google-beta-resource-compute_region_backend_service": {
    "description": "Defines compute_region_backend_service",
    "prefix": "tf-google-beta-resource-compute_region_backend_service",
    "body": [
      "resource \"google_compute_region_backend_service\" \"default\" {",
      "  name                            = \"region-backend-service\"",
      "  region                          = \"us-central1\"",
      "  health_checks                   = [\"${google_compute_health_check.default.self_link}\"]",
      "  connection_draining_timeout_sec = 10",
      "  session_affinity                = \"CLIENT_IP\"",
      "}",
      "",
      "resource \"google_compute_health_check\" \"default\" {",
      "  name               = \"health-check\"",
      "  check_interval_sec = 1",
      "  timeout_sec        = 1",
      "",
      "  tcp_health_check {",
      "    port = \"80\"",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-compute_region_disk": {
    "description": "Defines compute_region_disk",
    "prefix": "tf-google-beta-resource-compute_region_disk",
    "body": [
      "resource \"google_compute_region_disk\" \"regiondisk\" {",
      "  name = \"my-region-disk\"",
      "  snapshot = \"${google_compute_snapshot.snapdisk.self_link}\"",
      "  type = \"pd-ssd\"",
      "  region = \"us-central1\"",
      "  physical_block_size_bytes = 4096",
      "",
      "  replica_zones = [\"us-central1-a\", \"us-central1-f\"]",
      "}",
      "",
      "resource \"google_compute_disk\" \"disk\" {",
      "  name = \"my-disk\"",
      "  image = \"debian-cloud/debian-9\"",
      "  size = 50",
      "  type = \"pd-ssd\"",
      "  zone = \"us-central1-a\"",
      "}",
      "",
      "resource \"google_compute_snapshot\" \"snapdisk\" {",
      "  name = \"my-snapshot\"",
      "  source_disk = \"${google_compute_disk.disk.name}\"",
      "  zone = \"us-central1-a\"",
      "}"
    ]
  },
  "google-beta-resource-compute_region_instance_group_manager": {
    "description": "Defines compute_region_instance_group_manager",
    "prefix": "tf-google-beta-resource-compute_region_instance_group_manager",
    "body": [
      "resource \"google_compute_health_check\" \"autohealing\" {",
      "  name                = \"autohealing-health-check\"",
      "  check_interval_sec  = 5",
      "  timeout_sec         = 5",
      "  healthy_threshold   = 2",
      "  unhealthy_threshold = 10                         # 50 seconds",
      "",
      "  http_health_check {",
      "    request_path = \"/healthz\"",
      "    port         = \"8080\"",
      "  }",
      "}",
      "",
      "resource \"google_compute_region_instance_group_manager\" \"appserver\" {",
      "  name = \"appserver-igm\"",
      "",
      "  base_instance_name         = \"app\"",
      "  instance_template          = \"${google_compute_instance_template.appserver.self_link}\"",
      "  region                     = \"us-central1\"",
      "  distribution_policy_zones  = [\"us-central1-a\", \"us-central1-f\"]",
      "",
      "  target_pools = [\"${google_compute_target_pool.appserver.self_link}\"]",
      "  target_size  = 2",
      "",
      "  named_port {",
      "    name = \"custom\"",
      "    port = 8888",
      "  }",
      "",
      "  auto_healing_policies {",
      "    health_check      = \"${google_compute_health_check.autohealing.self_link}\"",
      "    initial_delay_sec = 300",
      "  }",
      "}",
      ""
    ]
  },
  "google-beta-resource-compute_resource_policy": {
    "description": "Defines compute_resource_policy",
    "prefix": "tf-google-beta-resource-compute_resource_policy",
    "body": [
      "provider \"google-beta\" {",
      "  region = \"us-central1\"",
      "  zone   = \"us-central1-a\"",
      "}",
      "",
      "resource \"google_compute_resource_policy\" \"foo\" {",
      "  provider = \"google-beta\"",
      "  name = \"policy\"",
      "  region = \"us-central1\"",
      "  snapshot_schedule_policy {",
      "    schedule {",
      "      daily_schedule {",
      "        days_in_cycle = 1",
      "        start_time = \"04:00\"",
      "      }",
      "    }",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-compute_route": {
    "description": "Defines compute_route",
    "prefix": "tf-google-beta-resource-compute_route",
    "body": [
      "resource \"google_compute_route\" \"default\" {",
      "  name        = \"network-route\"",
      "  dest_range  = \"15.0.0.0/24\"",
      "  network     = \"${google_compute_network.default.name}\"",
      "  next_hop_ip = \"10.132.1.5\"",
      "  priority    = 100",
      "}",
      "",
      "resource \"google_compute_network\" \"default\" {",
      "  name = \"compute-network\"",
      "}"
    ]
  },
  "google-beta-resource-compute_router": {
    "description": "Defines compute_router",
    "prefix": "tf-google-beta-resource-compute_router",
    "body": [
      "resource \"google_compute_router\" \"foobar\" {",
      "  name    = \"my-router\"",
      "  network = \"${google_compute_network.foobar.name}\"",
      "  bgp {",
      "    asn               = 64514",
      "    advertise_mode    = \"CUSTOM\"",
      "    advertised_groups = [\"ALL_SUBNETS\"]",
      "    advertised_ip_ranges {",
      "      range = \"1.2.3.4\"",
      "    }",
      "    advertised_ip_ranges {",
      "      range = \"6.7.0.0/16\"",
      "    }",
      "  }",
      "}",
      "",
      "resource \"google_compute_network\" \"foobar\" {",
      "  name = \"my-network\"",
      "  auto_create_subnetworks = false",
      "}"
    ]
  },
  "google-beta-resource-compute_router_interface": {
    "description": "Defines compute_router_interface",
    "prefix": "tf-google-beta-resource-compute_router_interface",
    "body": [
      "resource \"google_compute_router_interface\" \"foobar\" {",
      "  name       = \"interface-1\"",
      "  router     = \"router-1\"",
      "  region     = \"us-central1\"",
      "  ip_range   = \"169.254.1.1/30\"",
      "  vpn_tunnel = \"tunnel-1\"",
      "}"
    ]
  },
  "google-beta-resource-compute_router_nat": {
    "description": "Defines compute_router_nat",
    "prefix": "tf-google-beta-resource-compute_router_nat",
    "body": [
      "resource \"google_compute_network\" \"default\" {",
      "  name = \"my-network\"",
      "}",
      "",
      "resource \"google_compute_subnetwork\" \"default\" {",
      "  name          = \"my-subnet\"",
      "  network       = \"${google_compute_network.default.self_link}\"",
      "  ip_cidr_range = \"10.0.0.0/16\"",
      "  region        = \"us-central1\"",
      "}",
      "",
      "resource \"google_compute_router\" \"router\" {",
      "  name    = \"router\"",
      "  region  = \"${google_compute_subnetwork.default.region}\"",
      "  network = \"${google_compute_network.default.self_link}\"",
      "  bgp {",
      "    asn = 64514",
      "  }",
      "}",
      "",
      "resource \"google_compute_router_nat\" \"simple-nat\" {",
      "  name                               = \"nat-1\"",
      "  router                             = \"${google_compute_router.router.name}\"",
      "  region                             = \"us-central1\"",
      "  nat_ip_allocate_option             = \"AUTO_ONLY\"",
      "  source_subnetwork_ip_ranges_to_nat = \"ALL_SUBNETWORKS_ALL_IP_RANGES\"",
      "}"
    ]
  },
  "google-beta-resource-compute_router_peer": {
    "description": "Defines compute_router_peer",
    "prefix": "tf-google-beta-resource-compute_router_peer",
    "body": [
      "resource \"google_compute_router_peer\" \"foobar\" {",
      "  name                      = \"peer-1\"",
      "  router                    = \"router-1\"",
      "  region                    = \"us-central1\"",
      "  peer_ip_address           = \"169.254.1.2\"",
      "  peer_asn                  = 65513",
      "  advertised_route_priority = 100",
      "  interface                 = \"interface-1\"",
      "}"
    ]
  },
  "google-beta-resource-compute_security_policy": {
    "description": "Defines compute_security_policy",
    "prefix": "tf-google-beta-resource-compute_security_policy",
    "body": [
      "resource \"google_compute_security_policy\" \"policy\" {",
      "  name = \"my-policy\"",
      "",
      "  rule {",
      "    action   = \"deny(403)\"",
      "    priority = \"1000\"",
      "    match {",
      "      versioned_expr = \"SRC_IPS_V1\"",
      "      config {",
      "        src_ip_ranges = [\"9.9.9.0/24\"]",
      "      }",
      "    }",
      "    description = \"Deny access to IPs in 9.9.9.0/24\"",
      "  }",
      "",
      "  rule {",
      "    action   = \"allow\"",
      "    priority = \"2147483647\"",
      "    match {",
      "      versioned_expr = \"SRC_IPS_V1\"",
      "      config {",
      "        src_ip_ranges = [\"*\"]",
      "      }",
      "    }",
      "    description = \"default rule\"",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-compute_shared_vpc_host_project": {
    "description": "Defines compute_shared_vpc_host_project",
    "prefix": "tf-google-beta-resource-compute_shared_vpc_host_project",
    "body": [
      "# A host project provides network resources to associated service projects.",
      "resource \"google_compute_shared_vpc_host_project\" \"host\" {",
      "  project = \"host-project-id\"",
      "}",
      "",
      "# A service project gains access to network resources provided by its",
      "# associated host project.",
      "resource \"google_compute_shared_vpc_service_project\" \"service1\" {",
      "  host_project    = \"${google_compute_shared_vpc_host_project.host.project}\"",
      "  service_project = \"service-project-id-1\"",
      "}",
      "resource \"google_compute_shared_vpc_service_project\" \"service2\" {",
      "  host_project    = \"${google_compute_shared_vpc_host_project.host.project}\"",
      "  service_project = \"service-project-id-2\"",
      "}"
    ]
  },
  "google-beta-resource-compute_shared_vpc_service_project": {
    "description": "Defines compute_shared_vpc_service_project",
    "prefix": "tf-google-beta-resource-compute_shared_vpc_service_project",
    "body": [
      "resource \"google_compute_shared_vpc_service_project\" \"service1\" {",
      "  host_project    = \"host-project-id\"",
      "  service_project = \"service-project-id-1\"",
      "}"
    ]
  },
  "google-beta-resource-compute_snapshot": {
    "description": "Defines compute_snapshot",
    "prefix": "tf-google-beta-resource-compute_snapshot",
    "body": [
      "resource \"google_compute_snapshot\" \"snapshot\" {",
      "\tname = \"my-snapshot\"",
      "\tsource_disk = \"${google_compute_disk.persistent.name}\"",
      "\tzone = \"us-central1-a\"",
      "\tlabels = {",
      "\t\tmy_label = \"value\"",
      "\t}",
      "}",
      "",
      "data \"google_compute_image\" \"debian\" {",
      "\tfamily  = \"debian-9\"",
      "\tproject = \"debian-cloud\"",
      "}",
      "",
      "resource \"google_compute_disk\" \"persistent\" {",
      "\tname = \"debian-disk\"",
      "\timage = \"${data.google_compute_image.debian.self_link}\"",
      "\tsize = 10",
      "\ttype = \"pd-ssd\"",
      "\tzone = \"us-central1-a\"",
      "}"
    ]
  },
  "google-beta-resource-compute_ssl_certificate": {
    "description": "Defines compute_ssl_certificate",
    "prefix": "tf-google-beta-resource-compute_ssl_certificate",
    "body": [
      "resource \"google_compute_ssl_certificate\" \"default\" {",
      "  name_prefix = \"my-certificate-\"",
      "  description = \"a description\"",
      "  private_key = \"${file(\"path/to/private.key\")}\"",
      "  certificate = \"${file(\"path/to/certificate.crt\")}\"",
      "",
      "  lifecycle {",
      "    create_before_destroy = true",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-compute_ssl_policy": {
    "description": "Defines compute_ssl_policy",
    "prefix": "tf-google-beta-resource-compute_ssl_policy",
    "body": [
      "resource \"google_compute_ssl_policy\" \"prod-ssl-policy\" {",
      "  name    = \"production-ssl-policy\"",
      "  profile = \"MODERN\"",
      "}",
      "",
      "resource \"google_compute_ssl_policy\" \"nonprod-ssl-policy\" {",
      "  name            = \"nonprod-ssl-policy\"",
      "  profile         = \"MODERN\"",
      "  min_tls_version = \"TLS_1_2\"",
      "}",
      "",
      "resource \"google_compute_ssl_policy\" \"custom-ssl-policy\" {",
      "  name            = \"custom-ssl-policy\"",
      "  min_tls_version = \"TLS_1_2\"",
      "  profile         = \"CUSTOM\"",
      "  custom_features = [\"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\", \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\"]",
      "}"
    ]
  },
  "google-beta-resource-compute_subnetwork": {
    "description": "Defines compute_subnetwork",
    "prefix": "tf-google-beta-resource-compute_subnetwork",
    "body": [
      "resource \"google_compute_subnetwork\" \"network-with-private-secondary-ip-ranges\" {",
      "  name          = \"test-subnetwork\"",
      "  ip_cidr_range = \"10.2.0.0/16\"",
      "  region        = \"us-central1\"",
      "  network       = \"${google_compute_network.custom-test.self_link}\"",
      "  secondary_ip_range {",
      "    range_name    = \"tf-test-secondary-range-update1\"",
      "    ip_cidr_range = \"192.168.10.0/24\"",
      "  }",
      "}",
      "",
      "resource \"google_compute_network\" \"custom-test\" {",
      "  name                    = \"test-network\"",
      "  auto_create_subnetworks = false",
      "}"
    ]
  },
  "google-beta-resource-compute_subnetwork_iam": {
    "description": "Defines compute_subnetwork_iam",
    "prefix": "tf-google-beta-resource-compute_subnetwork_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_compute_subnetwork_iam_policy\" \"subnet\" {",
      "\tsubnetwork  = \"your-subnetwork-id\"",
      "\tpolicy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-beta-resource-compute_target_http_proxy": {
    "description": "Defines compute_target_http_proxy",
    "prefix": "tf-google-beta-resource-compute_target_http_proxy",
    "body": [
      "resource \"google_compute_target_http_proxy\" \"default\" {",
      "  name        = \"test-proxy\"",
      "  url_map     = \"${google_compute_url_map.default.self_link}\"",
      "}",
      "",
      "resource \"google_compute_url_map\" \"default\" {",
      "  name        = \"url-map\"",
      "  default_service = \"${google_compute_backend_service.default.self_link}\"",
      "",
      "  host_rule {",
      "    hosts        = [\"mysite.com\"]",
      "    path_matcher = \"allpaths\"",
      "  }",
      "",
      "  path_matcher {",
      "    name            = \"allpaths\"",
      "    default_service = \"${google_compute_backend_service.default.self_link}\"",
      "",
      "    path_rule {",
      "      paths   = [\"/*\"]",
      "      service = \"${google_compute_backend_service.default.self_link}\"",
      "    }",
      "  }",
      "}",
      "",
      "resource \"google_compute_backend_service\" \"default\" {",
      "  name        = \"backend-service\"",
      "  port_name   = \"http\"",
      "  protocol    = \"HTTP\"",
      "  timeout_sec = 10",
      "",
      "  health_checks = [\"${google_compute_http_health_check.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_http_health_check\" \"default\" {",
      "  name               = \"http-health-check\"",
      "  request_path       = \"/\"",
      "  check_interval_sec = 1",
      "  timeout_sec        = 1",
      "}"
    ]
  },
  "google-beta-resource-compute_target_https_proxy": {
    "description": "Defines compute_target_https_proxy",
    "prefix": "tf-google-beta-resource-compute_target_https_proxy",
    "body": [
      "resource \"google_compute_target_https_proxy\" \"default\" {",
      "  name             = \"test-proxy\"",
      "  url_map          = \"${google_compute_url_map.default.self_link}\"",
      "  ssl_certificates = [\"${google_compute_ssl_certificate.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_ssl_certificate\" \"default\" {",
      "  name        = \"my-certificate\"",
      "  private_key = \"${file(\"path/to/private.key\")}\"",
      "  certificate = \"${file(\"path/to/certificate.crt\")}\"",
      "}",
      "",
      "resource \"google_compute_url_map\" \"default\" {",
      "  name        = \"url-map\"",
      "  description = \"a description\"",
      "",
      "  default_service = \"${google_compute_backend_service.default.self_link}\"",
      "",
      "  host_rule {",
      "    hosts        = [\"mysite.com\"]",
      "    path_matcher = \"allpaths\"",
      "  }",
      "",
      "  path_matcher {",
      "    name            = \"allpaths\"",
      "    default_service = \"${google_compute_backend_service.default.self_link}\"",
      "",
      "    path_rule {",
      "      paths   = [\"/*\"]",
      "      service = \"${google_compute_backend_service.default.self_link}\"",
      "    }",
      "  }",
      "}",
      "",
      "resource \"google_compute_backend_service\" \"default\" {",
      "  name        = \"backend-service\"",
      "  port_name   = \"http\"",
      "  protocol    = \"HTTP\"",
      "  timeout_sec = 10",
      "",
      "  health_checks = [\"${google_compute_http_health_check.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_http_health_check\" \"default\" {",
      "  name               = \"http-health-check\"",
      "  request_path       = \"/\"",
      "  check_interval_sec = 1",
      "  timeout_sec        = 1",
      "}"
    ]
  },
  "google-beta-resource-compute_target_instance": {
    "description": "Defines compute_target_instance",
    "prefix": "tf-google-beta-resource-compute_target_instance",
    "body": [
      "resource \"google_compute_target_instance\" \"default\" {",
      "  name        = \"target\"",
      "  instance    = \"${google_compute_instance.target-vm.self_link}\"",
      "}",
      "",
      "data \"google_compute_image\" \"vmimage\" {",
      "  family  = \"debian-9\"",
      "  project = \"debian-cloud\"",
      "}",
      "",
      "resource \"google_compute_instance\" \"target-vm\" {",
      "  name         = \"target-vm\"",
      "  machine_type = \"n1-standard-1\"",
      "  zone         = \"us-central1-a\"",
      "",
      "  boot_disk {",
      "    initialize_params{",
      "      image = \"${data.google_compute_image.vmimage.self_link}\"",
      "    }",
      "  }",
      "",
      "  network_interface {",
      "    network = \"default\"",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-compute_target_pool": {
    "description": "Defines compute_target_pool",
    "prefix": "tf-google-beta-resource-compute_target_pool",
    "body": [
      "resource \"google_compute_target_pool\" \"default\" {",
      "  name = \"instance-pool\"",
      "",
      "  instances = [",
      "    \"us-central1-a/myinstance1\",",
      "    \"us-central1-b/myinstance2\",",
      "  ]",
      "",
      "  health_checks = [",
      "    \"${google_compute_http_health_check.default.name}\",",
      "  ]",
      "}",
      "",
      "resource \"google_compute_http_health_check\" \"default\" {",
      "  name               = \"default\"",
      "  request_path       = \"/\"",
      "  check_interval_sec = 1",
      "  timeout_sec        = 1",
      "}"
    ]
  },
  "google-beta-resource-compute_target_ssl_proxy": {
    "description": "Defines compute_target_ssl_proxy",
    "prefix": "tf-google-beta-resource-compute_target_ssl_proxy",
    "body": [
      "resource \"google_compute_target_ssl_proxy\" \"default\" {",
      "  name             = \"test-proxy\"",
      "  backend_service  = \"${google_compute_backend_service.default.self_link}\"",
      "  ssl_certificates = [\"${google_compute_ssl_certificate.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_ssl_certificate\" \"default\" {",
      "  name        = \"default-cert\"",
      "  private_key = \"${file(\"path/to/private.key\")}\"",
      "  certificate = \"${file(\"path/to/certificate.crt\")}\"",
      "}",
      "",
      "resource \"google_compute_backend_service\" \"default\" {",
      "  name          = \"backend-service\"",
      "  protocol      = \"SSL\"",
      "  health_checks = [\"${google_compute_health_check.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_health_check\" \"default\" {",
      "  name               = \"health-check\"",
      "  check_interval_sec = 1",
      "  timeout_sec        = 1",
      "  tcp_health_check {",
      "    port = \"443\"",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-compute_target_tcp_proxy": {
    "description": "Defines compute_target_tcp_proxy",
    "prefix": "tf-google-beta-resource-compute_target_tcp_proxy",
    "body": [
      "resource \"google_compute_target_tcp_proxy\" \"default\" {",
      "  name            = \"test-proxy\"",
      "  backend_service = \"${google_compute_backend_service.default.self_link}\"",
      "}",
      "",
      "resource \"google_compute_backend_service\" \"default\" {",
      "  name          = \"backend-service\"",
      "  protocol      = \"TCP\"",
      "  timeout_sec   = 10",
      "",
      "  health_checks = [\"${google_compute_health_check.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_health_check\" \"default\" {",
      "  name               = \"health-check\"",
      "  timeout_sec        = 1",
      "  check_interval_sec = 1",
      "",
      "  tcp_health_check {",
      "    port = \"443\"",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-compute_url_map": {
    "description": "Defines compute_url_map",
    "prefix": "tf-google-beta-resource-compute_url_map",
    "body": [
      "resource \"google_compute_url_map\" \"urlmap\" {",
      "  name        = \"urlmap\"",
      "  description = \"a description\"",
      "",
      "  default_service = \"${google_compute_backend_service.home.self_link}\"",
      "",
      "  host_rule {",
      "    hosts        = [\"mysite.com\"]",
      "    path_matcher = \"allpaths\"",
      "  }",
      "",
      "  path_matcher {",
      "    name            = \"allpaths\"",
      "    default_service = \"${google_compute_backend_service.home.self_link}\"",
      "",
      "    path_rule {",
      "      paths   = [\"/home\"]",
      "      service = \"${google_compute_backend_service.home.self_link}\"",
      "    }",
      "",
      "    path_rule {",
      "      paths   = [\"/login\"]",
      "      service = \"${google_compute_backend_service.login.self_link}\"",
      "    }",
      "",
      "    path_rule {",
      "      paths   = [\"/static\"]",
      "      service = \"${google_compute_backend_bucket.static.self_link}\"",
      "    }",
      "  }",
      "",
      "  test {",
      "    service = \"${google_compute_backend_service.home.self_link}\"",
      "    host    = \"hi.com\"",
      "    path    = \"/home\"",
      "  }",
      "}",
      "",
      "resource \"google_compute_backend_service\" \"login\" {",
      "  name        = \"login\"",
      "  port_name   = \"http\"",
      "  protocol    = \"HTTP\"",
      "  timeout_sec = 10",
      "",
      "  health_checks = [\"${google_compute_http_health_check.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_backend_service\" \"home\" {",
      "  name        = \"home\"",
      "  port_name   = \"http\"",
      "  protocol    = \"HTTP\"",
      "  timeout_sec = 10",
      "",
      "  health_checks = [\"${google_compute_http_health_check.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_http_health_check\" \"default\" {",
      "  name               = \"health-check\"",
      "  request_path       = \"/\"",
      "  check_interval_sec = 1",
      "  timeout_sec        = 1",
      "}",
      "",
      "resource \"google_compute_backend_bucket\" \"static\" {",
      "  name        = \"static-asset-backend-bucket\"",
      "  bucket_name = \"${google_storage_bucket.static.name}\"",
      "  enable_cdn  = true",
      "}",
      "",
      "resource \"google_storage_bucket\" \"static\" {",
      "  name     = \"static-asset-bucket\"",
      "  location = \"US\"",
      "}"
    ]
  },
  "google-beta-resource-compute_vpn_gateway": {
    "description": "Defines compute_vpn_gateway",
    "prefix": "tf-google-beta-resource-compute_vpn_gateway",
    "body": [
      "resource \"google_compute_vpn_gateway\" \"target_gateway\" {",
      "  name    = \"vpn1\"",
      "  network = \"${google_compute_network.network1.self_link}\"",
      "}",
      "",
      "resource \"google_compute_network\" \"network1\" {",
      "  name       = \"network1\"",
      "}",
      "",
      "resource \"google_compute_address\" \"vpn_static_ip\" {",
      "  name   = \"vpn-static-ip\"",
      "}",
      "",
      "resource \"google_compute_forwarding_rule\" \"fr_esp\" {",
      "  name        = \"fr-esp\"",
      "  ip_protocol = \"ESP\"",
      "  ip_address  = \"${google_compute_address.vpn_static_ip.address}\"",
      "  target      = \"${google_compute_vpn_gateway.target_gateway.self_link}\"",
      "}",
      "",
      "resource \"google_compute_forwarding_rule\" \"fr_udp500\" {",
      "  name        = \"fr-udp500\"",
      "  ip_protocol = \"UDP\"",
      "  port_range  = \"500\"",
      "  ip_address  = \"${google_compute_address.vpn_static_ip.address}\"",
      "  target      = \"${google_compute_vpn_gateway.target_gateway.self_link}\"",
      "}",
      "",
      "resource \"google_compute_forwarding_rule\" \"fr_udp4500\" {",
      "  name        = \"fr-udp4500\"",
      "  ip_protocol = \"UDP\"",
      "  port_range  = \"4500\"",
      "  ip_address  = \"${google_compute_address.vpn_static_ip.address}\"",
      "  target      = \"${google_compute_vpn_gateway.target_gateway.self_link}\"",
      "}",
      "",
      "resource \"google_compute_vpn_tunnel\" \"tunnel1\" {",
      "  name          = \"tunnel1\"",
      "  peer_ip       = \"15.0.0.120\"",
      "  shared_secret = \"a secret message\"",
      "",
      "  target_vpn_gateway = \"${google_compute_vpn_gateway.target_gateway.self_link}\"",
      "",
      "  depends_on = [",
      "    \"google_compute_forwarding_rule.fr_esp\",",
      "    \"google_compute_forwarding_rule.fr_udp500\",",
      "    \"google_compute_forwarding_rule.fr_udp4500\",",
      "  ]",
      "}",
      "",
      "resource \"google_compute_route\" \"route1\" {",
      "  name       = \"route1\"",
      "  network    = \"${google_compute_network.network1.name}\"",
      "  dest_range = \"15.0.0.0/24\"",
      "  priority   = 1000",
      "",
      "  next_hop_vpn_tunnel = \"${google_compute_vpn_tunnel.tunnel1.self_link}\"",
      "}"
    ]
  },
  "google-beta-resource-compute_vpn_tunnel": {
    "description": "Defines compute_vpn_tunnel",
    "prefix": "tf-google-beta-resource-compute_vpn_tunnel",
    "body": [
      "resource \"google_compute_vpn_tunnel\" \"tunnel1\" {",
      "  name          = \"tunnel1\"",
      "  peer_ip       = \"15.0.0.120\"",
      "  shared_secret = \"a secret message\"",
      "",
      "  target_vpn_gateway = \"${google_compute_vpn_gateway.target_gateway.self_link}\"",
      "",
      "  depends_on = [",
      "    \"google_compute_forwarding_rule.fr_esp\",",
      "    \"google_compute_forwarding_rule.fr_udp500\",",
      "    \"google_compute_forwarding_rule.fr_udp4500\",",
      "  ]",
      "}",
      "",
      "resource \"google_compute_vpn_gateway\" \"target_gateway\" {",
      "  name    = \"vpn1\"",
      "  network = \"${google_compute_network.network1.self_link}\"",
      "}",
      "",
      "resource \"google_compute_network\" \"network1\" {",
      "  name       = \"network1\"",
      "}",
      "",
      "resource \"google_compute_address\" \"vpn_static_ip\" {",
      "  name   = \"vpn-static-ip\"",
      "}",
      "",
      "resource \"google_compute_forwarding_rule\" \"fr_esp\" {",
      "  name        = \"fr-esp\"",
      "  ip_protocol = \"ESP\"",
      "  ip_address  = \"${google_compute_address.vpn_static_ip.address}\"",
      "  target      = \"${google_compute_vpn_gateway.target_gateway.self_link}\"",
      "}",
      "",
      "resource \"google_compute_forwarding_rule\" \"fr_udp500\" {",
      "  name        = \"fr-udp500\"",
      "  ip_protocol = \"UDP\"",
      "  port_range  = \"500\"",
      "  ip_address  = \"${google_compute_address.vpn_static_ip.address}\"",
      "  target      = \"${google_compute_vpn_gateway.target_gateway.self_link}\"",
      "}",
      "",
      "resource \"google_compute_forwarding_rule\" \"fr_udp4500\" {",
      "  name        = \"fr-udp4500\"",
      "  ip_protocol = \"UDP\"",
      "  port_range  = \"4500\"",
      "  ip_address  = \"${google_compute_address.vpn_static_ip.address}\"",
      "  target      = \"${google_compute_vpn_gateway.target_gateway.self_link}\"",
      "}",
      "",
      "resource \"google_compute_route\" \"route1\" {",
      "  name       = \"route1\"",
      "  network    = \"${google_compute_network.network1.name}\"",
      "  dest_range = \"15.0.0.0/24\"",
      "  priority   = 1000",
      "",
      "  next_hop_vpn_tunnel = \"${google_compute_vpn_tunnel.tunnel1.self_link}\"",
      "}"
    ]
  },
  "google-beta-resource-container_analysis_note": {
    "description": "Defines container_analysis_note",
    "prefix": "tf-google-beta-resource-container_analysis_note",
    "body": [
      "resource \"google_container_analysis_note\" \"note\" {",
      "  provider = \"google-beta\"",
      "",
      "  name = \"test-attestor-note\"",
      "  attestation_authority {",
      "    hint {",
      "      human_readable_name = \"Attestor Note\"",
      "    }",
      "  }",
      "}",
      "",
      "provider \"google-beta\"{",
      "  region = \"us-central1\"",
      "  zone   = \"us-central1-a\"",
      "}"
    ]
  },
  "google-beta-resource-container_cluster": {
    "description": "Defines container_cluster",
    "prefix": "tf-google-beta-resource-container_cluster",
    "body": [
      "resource \"google_container_cluster\" \"primary\" {",
      "  name     = \"my-gke-cluster\"",
      "  location = \"us-central1\"",
      "",
      "  # We can't create a cluster with no node pool defined, but we want to only use",
      "  # separately managed node pools. So we create the smallest possible default",
      "  # node pool and immediately delete it.",
      "  remove_default_node_pool = true",
      "  initial_node_count = 1",
      "",
      "  master_auth {",
      "    username = \"\"",
      "    password = \"\"",
      "",
      "    client_certificate_config {",
      "      issue_client_certificate = false",
      "    }",
      "  }",
      "}",
      "",
      "resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {",
      "  name       = \"my-node-pool\"",
      "  location   = \"us-central1\"",
      "  cluster    = \"${google_container_cluster.primary.name}\"",
      "  node_count = 1",
      "",
      "  node_config {",
      "    preemptible  = true",
      "    machine_type = \"n1-standard-1\"",
      "",
      "    metadata = {",
      "      disable-legacy-endpoints = \"true\"",
      "    }",
      "",
      "    oauth_scopes = [",
      "      \"https://www.googleapis.com/auth/logging.write\",",
      "      \"https://www.googleapis.com/auth/monitoring\",",
      "    ]",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-container_node_pool": {
    "description": "Defines container_node_pool",
    "prefix": "tf-google-beta-resource-container_node_pool",
    "body": [
      "resource \"google_container_cluster\" \"primary\" {",
      "  name     = \"my-gke-cluster\"",
      "  location = \"us-central1\"",
      "  ",
      "  # We can't create a cluster with no node pool defined, but we want to only use",
      "  # separately managed node pools. So we create the smallest possible default",
      "  # node pool and immediately delete it.",
      "  remove_default_node_pool = true",
      "  initial_node_count = 1",
      "}",
      "",
      "resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {",
      "  name       = \"my-node-pool\"",
      "  location   = \"us-central1\"",
      "  cluster    = \"${google_container_cluster.primary.name}\"",
      "  node_count = 1",
      "",
      "  node_config {",
      "    preemptible  = true",
      "    machine_type = \"n1-standard-1\"",
      "",
      "    oauth_scopes = [",
      "      \"https://www.googleapis.com/auth/logging.write\",",
      "      \"https://www.googleapis.com/auth/monitoring\",",
      "    ]",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-dataflow_job": {
    "description": "Defines dataflow_job",
    "prefix": "tf-google-beta-resource-dataflow_job",
    "body": [
      "resource \"google_dataflow_job\" \"big_data_job\" {",
      "    name = \"dataflow-job\"",
      "    template_gcs_path = \"gs://my-bucket/templates/template_file\"",
      "    temp_gcs_location = \"gs://my-bucket/tmp_dir\"",
      "    parameters = {",
      "        foo = \"bar\"",
      "        baz = \"qux\"",
      "    }",
      "}"
    ]
  },
  "google-beta-resource-dataproc_cluster": {
    "description": "Defines dataproc_cluster",
    "prefix": "tf-google-beta-resource-dataproc_cluster",
    "body": [
      "resource \"google_dataproc_cluster\" \"simplecluster\" {",
      "    name       = \"simplecluster\"",
      "    region     = \"us-central1\"",
      "}"
    ]
  },
  "google-beta-resource-dataproc_cluster_iam": {
    "description": "Defines dataproc_cluster_iam",
    "prefix": "tf-google-beta-resource-dataproc_cluster_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role    = \"roles/editor\"",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_dataproc_cluster_iam_policy\" \"editor\" {",
      "  project      = \"your-project\"",
      "  region       = \"your-region\"",
      "  cluster      = \"your-dataproc-cluster\"",
      "  policy_data  = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-beta-resource-dataproc_job": {
    "description": "Defines dataproc_job",
    "prefix": "tf-google-beta-resource-dataproc_job",
    "body": [
      "resource \"google_dataproc_cluster\" \"mycluster\" {",
      "    name   = \"dproc-cluster-unique-name\"",
      "    region = \"us-central1\"",
      "}",
      "",
      "# Submit an example spark job to a dataproc cluster",
      "resource \"google_dataproc_job\" \"spark\" {",
      "    region       = \"${google_dataproc_cluster.mycluster.region}\"",
      "    force_delete = true",
      "    placement {",
      "        cluster_name = \"${google_dataproc_cluster.mycluster.name}\"",
      "    }",
      "",
      "    spark_config {",
      "        main_class    = \"org.apache.spark.examples.SparkPi\"",
      "        jar_file_uris = [\"file:///usr/lib/spark/examples/jars/spark-examples.jar\"]",
      "        args          = [\"1000\"]",
      "        ",
      "        properties    = {",
      "            \"spark.logConf\" = \"true\"",
      "        }",
      "        ",
      "        logging_config {",
      "            driver_log_levels = {",
      "                \"root\" = \"INFO\"",
      "            }",
      "        }",
      "    }",
      "}",
      "",
      "# Submit an example pyspark job to a dataproc cluster",
      "resource \"google_dataproc_job\" \"pyspark\" {",
      "    region       = \"${google_dataproc_cluster.mycluster.region}\"",
      "    force_delete = true",
      "    placement {",
      "        cluster_name = \"${google_dataproc_cluster.mycluster.name}\"",
      "    }",
      "",
      "    pyspark_config {",
      "        main_python_file_uri = \"gs://dataproc-examples-2f10d78d114f6aaec76462e3c310f31f/src/pyspark/hello-world/hello-world.py\"",
      "        properties = {",
      "            \"spark.logConf\" = \"true\"",
      "        }",
      "    }",
      "}",
      "",
      "# Check out current state of the jobs",
      "output \"spark_status\" {",
      "    value = \"${google_dataproc_job.spark.status.0.state}\"",
      "}",
      "",
      "output \"pyspark_status\" {",
      "    value = \"${google_dataproc_job.pyspark.status.0.state}\"",
      "}"
    ]
  },
  "google-beta-resource-dataproc_job_iam": {
    "description": "Defines dataproc_job_iam",
    "prefix": "tf-google-beta-resource-dataproc_job_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role    = \"roles/editor\"",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_dataproc_job_iam_policy\" \"editor\" {",
      "  project      = \"your-project\"",
      "  region       = \"your-region\"",
      "  job_id       = \"your-dataproc-job\"",
      "  policy_data  = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-beta-resource-dns_managed_zone": {
    "description": "Defines dns_managed_zone",
    "prefix": "tf-google-beta-resource-dns_managed_zone",
    "body": [
      "resource \"google_dns_managed_zone\" \"example-zone\" {",
      "  name = \"example-zone\"",
      "  dns_name = \"example-${random_id.rnd.hex}.com.\"",
      "  description = \"Example DNS zone\"",
      "  labels = {",
      "    foo = \"bar\"",
      "  }",
      "}",
      "",
      "resource \"random_id\" \"rnd\" {",
      "  byte_length = 4",
      "}"
    ]
  },
  "google-beta-resource-dns_policy": {
    "description": "Defines dns_policy",
    "prefix": "tf-google-beta-resource-dns_policy",
    "body": [
      "resource \"google_dns_policy\" \"example-policy\" {",
      "  provider = \"google-beta\"",
      "",
      "  name = \"example-policy\"",
      "  enable_inbound_forwarding = true",
      "",
      "  enable_logging = true",
      "",
      "  alternative_name_server_config {",
      "    target_name_servers {",
      "      ipv4_address = \"172.16.1.10\"",
      "    }",
      "    target_name_servers {",
      "      ipv4_address = \"172.16.1.20\"",
      "    }",
      "  }",
      "",
      "  networks {",
      "    network_url =  \"${google_compute_network.network-1.self_link}\"",
      "  }",
      "  networks {",
      "    network_url =  \"${google_compute_network.network-2.self_link}\"",
      "  }",
      "}",
      "",
      "resource \"google_compute_network\" \"network-1\" {",
      "  provider = \"google-beta\"",
      "",
      "  name = \"network-1\"",
      "  auto_create_subnetworks = false",
      "}",
      "",
      "resource \"google_compute_network\" \"network-2\" {",
      "  provider = \"google-beta\"",
      "",
      "  name = \"network-2\"",
      "  auto_create_subnetworks = false",
      "}",
      "",
      "provider \"google-beta\"{",
      "  region = \"us-central1\"",
      "  zone   = \"us-central1-a\"",
      "}"
    ]
  },
  "google-beta-resource-dns_record_set": {
    "description": "Defines dns_record_set",
    "prefix": "tf-google-beta-resource-dns_record_set",
    "body": [
      "resource \"google_dns_record_set\" \"frontend\" {",
      "  name = \"frontend.${google_dns_managed_zone.prod.dns_name}\"",
      "  type = \"A\"",
      "  ttl  = 300",
      "",
      "  managed_zone = \"${google_dns_managed_zone.prod.name}\"",
      "",
      "  rrdatas = [\"${google_compute_instance.frontend.network_interface.0.access_config.0.nat_ip}\"]",
      "}",
      "",
      "resource \"google_compute_instance\" \"frontend\" {",
      "  name         = \"frontend\"",
      "  machine_type = \"g1-small\"",
      "  zone         = \"us-central1-b\"",
      "",
      "  boot_disk {",
      "    initialize_params {",
      "      image = \"debian-cloud/debian-9\"",
      "    }",
      "  }",
      "",
      "  network_interface {",
      "    network       = \"default\"",
      "    access_config = {}",
      "  }",
      "}",
      "",
      "resource \"google_dns_managed_zone\" \"prod\" {",
      "  name     = \"prod-zone\"",
      "  dns_name = \"prod.mydomain.com.\"",
      "}"
    ]
  },
  "google-beta-resource-endpoints_service": {
    "description": "Defines endpoints_service",
    "prefix": "tf-google-beta-resource-endpoints_service",
    "body": [
      "resource \"google_endpoints_service\" \"openapi_service\" {",
      "  service_name   = \"api-name.endpoints.project-id.cloud.goog\"",
      "  project        = \"project-id\"",
      "  openapi_config = \"${file(\"openapi_spec.yml\")}\"",
      "}",
      "",
      "resource \"google_endpoints_service\" \"grpc_service\" {",
      "  service_name         = \"api-name.endpoints.project-id.cloud.goog\"",
      "  project              = \"project-id\"",
      "  grpc_config          = \"${file(\"service_spec.yml\")}\"",
      "  protoc_output_base64 = \"${base64encode(file(\"compiled_descriptor_file.pb\"))}\"",
      "}"
    ]
  },
  "google-beta-resource-filestore_instance": {
    "description": "Defines filestore_instance",
    "prefix": "tf-google-beta-resource-filestore_instance",
    "body": [
      "resource \"google_filestore_instance\" \"instance\" {",
      "  name = \"test-instance\"",
      "  zone = \"us-central1-b\"",
      "  tier = \"PREMIUM\"",
      "",
      "  file_shares {",
      "    capacity_gb = 2660",
      "    name        = \"share1\"",
      "  }",
      "",
      "  networks {",
      "    network = \"default\"",
      "    modes   = [\"MODE_IPV4\"]",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-firestore_index": {
    "description": "Defines firestore_index",
    "prefix": "tf-google-beta-resource-firestore_index",
    "body": [
      "resource \"google_firestore_index\" \"my-index\" {",
      "  project    = \"my-project-name\"",
      "",
      "  collection = \"chatrooms\"",
      "",
      "  fields {",
      "    field_path = \"name\"",
      "    order      = \"ASCENDING\"",
      "  }",
      "",
      "  fields {",
      "    field_path = \"description\"",
      "    order      = \"DESCENDING\"",
      "  }",
      "",
      "  fields {",
      "    field_path = \"__name__\"",
      "    order      = \"DESCENDING\"",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-google_billing_account_iam_binding": {
    "description": "Defines google_billing_account_iam_binding",
    "prefix": "tf-google-beta-resource-google_billing_account_iam_binding",
    "body": [
      "resource \"google_billing_account_iam_binding\" \"binding\" {",
      "  billing_account_id = \"00AA00-000AAA-00AA0A\"",
      "  role               = \"roles/billing.viewer\"",
      "",
      "  members = [",
      "    \"user:alice@gmail.com\",",
      "  ]",
      "}"
    ]
  },
  "google-beta-resource-google_billing_account_iam_member": {
    "description": "Defines google_billing_account_iam_member",
    "prefix": "tf-google-beta-resource-google_billing_account_iam_member",
    "body": [
      "resource \"google_billing_account_iam_member\" \"binding\" {",
      "  billing_account_id = \"00AA00-000AAA-00AA0A\"",
      "  role               = \"roles/billing.viewer\"",
      "  member             = \"user:alice@gmail.com\"",
      "}"
    ]
  },
  "google-beta-resource-google_billing_account_iam_policy": {
    "description": "Defines google_billing_account_iam_policy",
    "prefix": "tf-google-beta-resource-google_billing_account_iam_policy",
    "body": [
      "resource \"google_billing_account_iam_policy\" \"policy\" {",
      "  billing_account_id    = \"00AA00-000AAA-00AA0A\"",
      "  policy_data           = \"${data.google_iam_policy.admin.policy_data}\"",
      "}",
      "",
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/billing.viewer\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-google_folder": {
    "description": "Defines google_folder",
    "prefix": "tf-google-beta-resource-google_folder",
    "body": [
      "# Top-level folder under an organization.",
      "resource \"google_folder\" \"department1\" {",
      "  display_name = \"Department 1\"",
      "  parent     = \"organizations/1234567\"",
      "}",
      "",
      "# Folder nested under another folder.",
      "resource \"google_folder\" \"team-abc\" {",
      "  display_name = \"Team ABC\"",
      "  parent     = \"${google_folder.department1.name}\"",
      "}"
    ]
  },
  "google-beta-resource-google_folder_iam_binding": {
    "description": "Defines google_folder_iam_binding",
    "prefix": "tf-google-beta-resource-google_folder_iam_binding",
    "body": [
      "resource \"google_folder\" \"department1\" {",
      "  display_name = \"Department 1\"",
      "  parent       = \"organizations/1234567\"",
      "}",
      "",
      "resource \"google_folder_iam_binding\" \"admin\" {",
      "  folder  = \"${google_folder.department1.name}\"",
      "  role    = \"roles/editor\"",
      "",
      "  members = [",
      "    \"user:alice@gmail.com\",",
      "  ]",
      "}"
    ]
  },
  "google-beta-resource-google_folder_iam_member": {
    "description": "Defines google_folder_iam_member",
    "prefix": "tf-google-beta-resource-google_folder_iam_member",
    "body": [
      "resource \"google_folder\" \"department1\" {",
      "  display_name = \"Department 1\"",
      "  parent       = \"organizations/1234567\"",
      "}",
      "",
      "resource \"google_folder_iam_member\" \"admin\" {",
      "  folder  = \"${google_folder.department1.name}\"",
      "  role    = \"roles/editor\"",
      "  member  = \"user:alice@gmail.com\"",
      "}"
    ]
  },
  "google-beta-resource-google_folder_iam_policy": {
    "description": "Defines google_folder_iam_policy",
    "prefix": "tf-google-beta-resource-google_folder_iam_policy",
    "body": [
      "resource \"google_folder_iam_policy\" \"folder_admin_policy\" {",
      "  folder     = \"${google_folder.department1.name}\"",
      "  policy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}",
      "",
      "resource \"google_folder\" \"department1\" {",
      "  display_name = \"Department 1\"",
      "  parent     = \"organizations/1234567\"",
      "}",
      "",
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-google_folder_organization_policy": {
    "description": "Defines google_folder_organization_policy",
    "prefix": "tf-google-beta-resource-google_folder_organization_policy",
    "body": [
      "resource \"google_folder_organization_policy\" \"serial_port_policy\" {",
      "  folder     = \"folders/123456789\"",
      "  constraint = \"compute.disableSerialPortAccess\"",
      "",
      "  boolean_policy {",
      "    enforced = true",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-google_iap_tunnel_instance_iam": {
    "description": "Defines google_iap_tunnel_instance_iam",
    "prefix": "tf-google-beta-resource-google_iap_tunnel_instance_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_iap_tunnel_instance_iam_policy\" \"instance\" {",
      "\tinstance  = \"your-instance-name\"",
      "\tpolicy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-beta-resource-google_kms_crypto_key_iam_binding": {
    "description": "Defines google_kms_crypto_key_iam_binding",
    "prefix": "tf-google-beta-resource-google_kms_crypto_key_iam_binding",
    "body": [
      "resource \"google_kms_crypto_key_iam_binding\" \"crypto_key\" {",
      "  crypto_key_id = \"my-gcp-project/us-central1/my-key-ring/my-crypto-key\"",
      "  role          = \"roles/editor\"",
      "",
      "  members = [",
      "    \"user:alice@gmail.com\",",
      "  ]",
      "}"
    ]
  },
  "google-beta-resource-google_kms_crypto_key_iam_member": {
    "description": "Defines google_kms_crypto_key_iam_member",
    "prefix": "tf-google-beta-resource-google_kms_crypto_key_iam_member",
    "body": [
      "resource \"google_kms_crypto_key_iam_member\" \"crypto_key\" {",
      "  crypto_key_id = \"your-crypto-key-id\"",
      "  role          = \"roles/editor\"",
      "  member        = \"user:alice@gmail.com\"",
      "}"
    ]
  },
  "google-beta-resource-google_kms_key_ring_iam": {
    "description": "Defines google_kms_key_ring_iam",
    "prefix": "tf-google-beta-resource-google_kms_key_ring_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_kms_key_ring_iam_policy\" \"key_ring\" {",
      "\tkey_ring_id = \"your-key-ring-id\"",
      "\tpolicy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-beta-resource-google_organization_iam_binding": {
    "description": "Defines google_organization_iam_binding",
    "prefix": "tf-google-beta-resource-google_organization_iam_binding",
    "body": [
      "resource \"google_organization_iam_binding\" \"binding\" {",
      "  org_id = \"123456789\"",
      "  role    = \"roles/browser\"",
      "",
      "  members = [",
      "    \"user:alice@gmail.com\",",
      "  ]",
      "}"
    ]
  },
  "google-beta-resource-google_organization_iam_custom_role": {
    "description": "Defines google_organization_iam_custom_role",
    "prefix": "tf-google-beta-resource-google_organization_iam_custom_role",
    "body": [
      "resource \"google_organization_iam_custom_role\" \"my-custom-role\" {",
      "  role_id     = \"myCustomRole\"",
      "  org_id      = \"123456789\"",
      "  title       = \"My Custom Role\"",
      "  description = \"A description\"",
      "  permissions = [\"iam.roles.list\", \"iam.roles.create\", \"iam.roles.delete\"]",
      "}"
    ]
  },
  "google-beta-resource-google_organization_iam_member": {
    "description": "Defines google_organization_iam_member",
    "prefix": "tf-google-beta-resource-google_organization_iam_member",
    "body": [
      "resource \"google_organization_iam_member\" \"binding\" {",
      "  org_id = \"0123456789\"",
      "  role    = \"roles/editor\"",
      "  member  = \"user:alice@gmail.com\"",
      "}"
    ]
  },
  "google-beta-resource-google_organization_iam_policy": {
    "description": "Defines google_organization_iam_policy",
    "prefix": "tf-google-beta-resource-google_organization_iam_policy",
    "body": [
      "resource \"google_organization_iam_policy\" \"policy\" {",
      "  org_id = \"123456789\"",
      "  policy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}",
      "",
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-google_organization_policy": {
    "description": "Defines google_organization_policy",
    "prefix": "tf-google-beta-resource-google_organization_policy",
    "body": [
      "resource \"google_organization_policy\" \"serial_port_policy\" {",
      "  org_id     = \"123456789\"",
      "  constraint = \"compute.disableSerialPortAccess\"",
      "",
      "  boolean_policy {",
      "    enforced = true",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-google_project": {
    "description": "Defines google_project",
    "prefix": "tf-google-beta-resource-google_project",
    "body": [
      "resource \"google_project\" \"my_project\" {",
      "  name = \"My Project\"",
      "  project_id = \"your-project-id\"",
      "  org_id     = \"1234567\"",
      "}"
    ]
  },
  "google-beta-resource-google_project_iam": {
    "description": "Defines google_project_iam",
    "prefix": "tf-google-beta-resource-google_project_iam",
    "body": [
      "resource \"google_project_iam_policy\" \"project\" {",
      "  project     = \"your-project-id\"",
      "  policy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}",
      "",
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-google_project_iam_custom_role": {
    "description": "Defines google_project_iam_custom_role",
    "prefix": "tf-google-beta-resource-google_project_iam_custom_role",
    "body": [
      "resource \"google_project_iam_custom_role\" \"my-custom-role\" {",
      "  role_id     = \"myCustomRole\"",
      "  title       = \"My Custom Role\"",
      "  description = \"A description\"",
      "  permissions = [\"iam.roles.list\", \"iam.roles.create\", \"iam.roles.delete\"]",
      "}"
    ]
  },
  "google-beta-resource-google_project_organization_policy": {
    "description": "Defines google_project_organization_policy",
    "prefix": "tf-google-beta-resource-google_project_organization_policy",
    "body": [
      "resource \"google_project_organization_policy\" \"serial_port_policy\" {",
      "  project    = \"your-project-id\"",
      "  constraint = \"compute.disableSerialPortAccess\"",
      "",
      "  boolean_policy {",
      "    enforced = true",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-google_project_service": {
    "description": "Defines google_project_service",
    "prefix": "tf-google-beta-resource-google_project_service",
    "body": [
      "resource \"google_project_service\" \"project\" {",
      "  project = \"your-project-id\"",
      "  service = \"iam.googleapis.com\"",
      "",
      "  disable_dependent_services = true",
      "}"
    ]
  },
  "google-beta-resource-google_project_services": {
    "description": "Defines google_project_services",
    "prefix": "tf-google-beta-resource-google_project_services",
    "body": [
      "resource \"google_project_services\" \"project\" {",
      "  project = \"your-project-id\"",
      "  services   = [\"iam.googleapis.com\", \"cloudresourcemanager.googleapis.com\"]",
      "}"
    ]
  },
  "google-beta-resource-google_service_account": {
    "description": "Defines google_service_account",
    "prefix": "tf-google-beta-resource-google_service_account",
    "body": [
      "resource \"google_service_account\" \"object_viewer\" {",
      "  account_id   = \"object-viewer\"",
      "  display_name = \"Object viewer\"",
      "}"
    ]
  },
  "google-beta-resource-google_service_account_iam": {
    "description": "Defines google_service_account_iam",
    "prefix": "tf-google-beta-resource-google_service_account_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/iam.serviceAccountUser\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_service_account\" \"sa\" {",
      "  account_id   = \"my-service-account\"",
      "  display_name = \"A service account that only Jane can interact with\"",
      "}",
      "",
      "resource \"google_service_account_iam_policy\" \"admin-account-iam\" {",
      "  service_account_id = \"${google_service_account.sa.name}\"",
      "  policy_data        = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-beta-resource-google_service_account_key": {
    "description": "Defines google_service_account_key",
    "prefix": "tf-google-beta-resource-google_service_account_key",
    "body": [
      "resource \"google_service_account\" \"myaccount\" {",
      "  account_id = \"myaccount\"",
      "  display_name = \"My Service Account\"",
      "}",
      "",
      "resource \"google_service_account_key\" \"mykey\" {",
      "  service_account_id = \"${google_service_account.myaccount.name}\"",
      "  public_key_type = \"TYPE_X509_PEM_FILE\"",
      "}"
    ]
  },
  "google-beta-resource-healthcare_dataset": {
    "description": "Defines healthcare_dataset",
    "prefix": "tf-google-beta-resource-healthcare_dataset",
    "body": [
      "resource \"google_healthcare_dataset\" \"default\" {",
      "  name         = \"example-dataset\"",
      "  location     = \"us-central1\"",
      "  time_zone    = \"UTC\"",
      "  provider     = \"google-beta\"",
      "}"
    ]
  },
  "google-beta-resource-healthcare_dataset_iam": {
    "description": "Defines healthcare_dataset_iam",
    "prefix": "tf-google-beta-resource-healthcare_dataset_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_healthcare_dataset_iam_policy\" \"dataset\" {",
      "\tdataset_id = \"your-dataset-id\"",
      "\tpolicy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-beta-resource-healthcare_dicom_store": {
    "description": "Defines healthcare_dicom_store",
    "prefix": "tf-google-beta-resource-healthcare_dicom_store",
    "body": [
      "resource \"google_healthcare_dicom_store\" \"default\" {",
      "  name           = \"example-dicom-store\"",
      "  dataset        = \"${google_healthcare_dataset.dataset.id}\"",
      "",
      "  notification_config {",
      "    pubsub_topic = \"${google_pubsub_topic.topic.id}\"",
      "  }",
      "",
      "  labels = {",
      "    label1 = \"labelvalue1\"",
      "  }",
      "  provider     = \"google-beta\"",
      "}",
      "",
      "resource \"google_pubsub_topic\" \"topic\" {",
      "  name         = \"dicom-notifications\"",
      "  provider     = \"google-beta\"",
      "}",
      "",
      "resource \"google_healthcare_dataset\" \"dataset\" {",
      "  name         = \"example-dataset\"",
      "  location     = \"us-central1\"",
      "  provider     = \"google-beta\"",
      "}"
    ]
  },
  "google-beta-resource-healthcare_dicom_store_iam": {
    "description": "Defines healthcare_dicom_store_iam",
    "prefix": "tf-google-beta-resource-healthcare_dicom_store_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_healthcare_dicom_store_iam_policy\" \"dicom_store\" {",
      "\tdicom_store_id = \"your-dicom-store-id\"",
      "\tpolicy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-beta-resource-healthcare_fhir_store": {
    "description": "Defines healthcare_fhir_store",
    "prefix": "tf-google-beta-resource-healthcare_fhir_store",
    "body": [
      "resource \"google_healthcare_fhir_store\" \"default\" {",
      "  name                          = \"example-fhir-store\"",
      "  dataset                       = \"${google_healthcare_dataset.dataset.id}\"",
      "",
      "  enable_update_create          = false",
      "  disable_referential_integrity = false",
      "  disable_resource_versioning   = false",
      "  enable_history_import         = false",
      "",
      "  notification_config {",
      "    pubsub_topic = \"${google_pubsub_topic.topic.id}\"",
      "  }",
      "",
      "  labels = {",
      "    label1 = \"labelvalue1\"",
      "  }",
      "  provider     = \"google-beta\"",
      "}",
      "",
      "resource \"google_pubsub_topic\" \"topic\" {",
      "  name         = \"fhir-notifications\"",
      "  provider     = \"google-beta\"",
      "}",
      "",
      "resource \"google_healthcare_dataset\" \"dataset\" {",
      "  name         = \"example-dataset\"",
      "  location     = \"us-central1\"",
      "  provider     = \"google-beta\"",
      "}"
    ]
  },
  "google-beta-resource-healthcare_fhir_store_iam": {
    "description": "Defines healthcare_fhir_store_iam",
    "prefix": "tf-google-beta-resource-healthcare_fhir_store_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_healthcare_fhir_store_iam_policy\" \"fhir_store\" {",
      "\tfhir_store_id = \"your-fhir-store-id\"",
      "\tpolicy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-beta-resource-healthcare_hl7_v2_store": {
    "description": "Defines healthcare_hl7_v2_store",
    "prefix": "tf-google-beta-resource-healthcare_hl7_v2_store",
    "body": [
      "resource \"google_healthcare_hl7_v2_store\" \"default\" {",
      "  name                          = \"example-hl7-v2-store\"",
      "  dataset                       = \"${google_healthcare_dataset.dataset.id}\"",
      "",
      "  parser_config {",
      "    allow_null_header = false",
      "    segment_terminator = \"Jw==\"",
      "  }",
      "",
      "  notification_config {",
      "    pubsub_topic = \"${google_pubsub_topic.topic.id}\"",
      "  }",
      "",
      "  labels = {",
      "    label1 = \"labelvalue1\"",
      "  }",
      "  provider     = \"google-beta\"",
      "}",
      "",
      "resource \"google_pubsub_topic\" \"topic\" {",
      "  name         = \"hl7-v2-notifications\"",
      "  provider     = \"google-beta\"",
      "}",
      "",
      "resource \"google_healthcare_dataset\" \"dataset\" {",
      "  name         = \"example-dataset\"",
      "  location     = \"us-central1\"",
      "  provider     = \"google-beta\"",
      "}"
    ]
  },
  "google-beta-resource-healthcare_hl7_v2_store_iam": {
    "description": "Defines healthcare_hl7_v2_store_iam",
    "prefix": "tf-google-beta-resource-healthcare_hl7_v2_store_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_healthcare_hl7_v2_store_iam_policy\" \"hl7_v2_store\" {",
      "\thl7_v2_store_id = \"your-hl7-v2-store-id\"",
      "\tpolicy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-beta-resource-kms_crypto_key": {
    "description": "Defines kms_crypto_key",
    "prefix": "tf-google-beta-resource-kms_crypto_key",
    "body": [
      "resource \"google_kms_key_ring\" \"keyring\" {",
      "  name = \"keyring-example\"",
      "  location = \"global\"",
      "}",
      "",
      "resource \"google_kms_crypto_key\" \"example-key\" {",
      "  name            = \"crypto-key-example\"",
      "  key_ring        = \"${google_kms_key_ring.keyring.self_link}\"",
      "  rotation_period = \"100000s\"",
      "",
      "  lifecycle {",
      "    prevent_destroy = true",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-kms_key_ring": {
    "description": "Defines kms_key_ring",
    "prefix": "tf-google-beta-resource-kms_key_ring",
    "body": [
      "resource \"google_kms_key_ring\" \"example-keyring\" {",
      "  name = \"keyring-example\"",
      "  location = \"global\"",
      "}"
    ]
  },
  "google-beta-resource-logging_billing_account_exclusion": {
    "description": "Defines logging_billing_account_exclusion",
    "prefix": "tf-google-beta-resource-logging_billing_account_exclusion",
    "body": [
      "resource \"google_logging_billing_account_exclusion\" \"my-exclusion\" {",
      "    name            = \"my-instance-debug-exclusion\"",
      "    billing_account = \"ABCDEF-012345-GHIJKL\"",
      "",
      "    description     = \"Exclude GCE instance debug logs\"",
      "",
      "    # Exclude all DEBUG or lower severity messages relating to instances",
      "    filter          = \"resource.type = gce_instance AND severity <= DEBUG\"",
      "}"
    ]
  },
  "google-beta-resource-logging_billing_account_sink": {
    "description": "Defines logging_billing_account_sink",
    "prefix": "tf-google-beta-resource-logging_billing_account_sink",
    "body": [
      "resource \"google_logging_billing_account_sink\" \"my-sink\" {",
      "    name = \"my-sink\"",
      "    billing_account = \"ABCDEF-012345-GHIJKL\"",
      "",
      "    # Can export to pubsub, cloud storage, or bigquery",
      "    destination = \"storage.googleapis.com/${google_storage_bucket.log-bucket.name}\"",
      "}",
      "",
      "resource \"google_storage_bucket\" \"log-bucket\" {",
      "    name     = \"billing-logging-bucket\"",
      "}",
      "",
      "resource \"google_project_iam_binding\" \"log-writer\" {",
      "    role = \"roles/storage.objectCreator\"",
      "",
      "    members = [",
      "        \"${google_logging_billing_account_sink.my-sink.writer_identity}\",",
      "    ]",
      "}"
    ]
  },
  "google-beta-resource-logging_folder_exclusion": {
    "description": "Defines logging_folder_exclusion",
    "prefix": "tf-google-beta-resource-logging_folder_exclusion",
    "body": [
      "resource \"google_logging_folder_exclusion\" \"my-exclusion\" {",
      "    name        = \"my-instance-debug-exclusion\"",
      "    folder      = \"${google_folder.my-folder.name}\"",
      "",
      "    description = \"Exclude GCE instance debug logs\"",
      "",
      "    # Exclude all DEBUG or lower severity messages relating to instances",
      "    filter      = \"resource.type = gce_instance AND severity <= DEBUG\"",
      "}",
      "",
      "resource \"google_folder\" \"my-folder\" {",
      "    display_name = \"My folder\"",
      "    parent       = \"organizations/123456\"",
      "}"
    ]
  },
  "google-beta-resource-logging_folder_sink": {
    "description": "Defines logging_folder_sink",
    "prefix": "tf-google-beta-resource-logging_folder_sink",
    "body": [
      "resource \"google_logging_folder_sink\" \"my-sink\" {",
      "    name        = \"my-sink\"",
      "    folder      = \"${google_folder.my-folder.name}\"",
      "",
      "    # Can export to pubsub, cloud storage, or bigquery",
      "    destination = \"storage.googleapis.com/${google_storage_bucket.log-bucket.name}\"",
      "",
      "    # Log all WARN or higher severity messages relating to instances",
      "    filter      = \"resource.type = gce_instance AND severity >= WARN\"",
      "}",
      "",
      "resource \"google_storage_bucket\" \"log-bucket\" {",
      "    name = \"folder-logging-bucket\"",
      "}",
      "",
      "resource \"google_project_iam_binding\" \"log-writer\" {",
      "    role    = \"roles/storage.objectCreator\"",
      "",
      "    members = [",
      "        \"${google_logging_folder_sink.my-sink.writer_identity}\",",
      "    ]",
      "}",
      "",
      "resource \"google_folder\" \"my-folder\" {",
      "\tdisplay_name = \"My folder\"",
      "    parent       = \"organizations/123456\"",
      "}"
    ]
  },
  "google-beta-resource-logging_metric": {
    "description": "Defines logging_metric",
    "prefix": "tf-google-beta-resource-logging_metric",
    "body": [
      "resource \"google_logging_metric\" \"logging_metric\" {",
      "  name = \"my-(custom)/metric\"",
      "  filter = \"resource.type=gae_app AND severity>=ERROR\"",
      "  metric_descriptor {",
      "    metric_kind = \"DELTA\"",
      "    value_type = \"DISTRIBUTION\"",
      "    labels {",
      "        key = \"mass\"",
      "        value_type = \"STRING\"",
      "        description = \"amount of matter\"",
      "    }",
      "  }",
      "  value_extractor = \"EXTRACT(jsonPayload.request)\"",
      "  label_extractors = { \"mass\": \"EXTRACT(jsonPayload.request)\" }",
      "  bucket_options {",
      "    linear_buckets {",
      "      num_finite_buckets = 3",
      "      width = 1",
      "      offset = 1",
      "    }",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-logging_organization_exclusion": {
    "description": "Defines logging_organization_exclusion",
    "prefix": "tf-google-beta-resource-logging_organization_exclusion",
    "body": [
      "resource \"google_logging_organization_exclusion\" \"my-exclusion\" {",
      "    name        = \"my-instance-debug-exclusion\"",
      "    org_id      = \"123456789\"",
      "",
      "    description = \"Exclude GCE instance debug logs\"",
      "",
      "    # Exclude all DEBUG or lower severity messages relating to instances",
      "    filter      = \"resource.type = gce_instance AND severity <= DEBUG\"",
      "}"
    ]
  },
  "google-beta-resource-logging_organization_sink": {
    "description": "Defines logging_organization_sink",
    "prefix": "tf-google-beta-resource-logging_organization_sink",
    "body": [
      "resource \"google_logging_organization_sink\" \"my-sink\" {",
      "    name        = \"my-sink\"",
      "    org_id      = \"123456789\"",
      "",
      "    # Can export to pubsub, cloud storage, or bigquery",
      "    destination = \"storage.googleapis.com/${google_storage_bucket.log-bucket.name}\"",
      "",
      "    # Log all WARN or higher severity messages relating to instances",
      "    filter      = \"resource.type = gce_instance AND severity >= WARN\"",
      "}",
      "",
      "resource \"google_storage_bucket\" \"log-bucket\" {",
      "    name = \"organization-logging-bucket\"",
      "}",
      "",
      "resource \"google_project_iam_member\" \"log-writer\" {",
      "    role    = \"roles/storage.objectCreator\"",
      "",
      "    member = \"${google_logging_organization_sink.my-sink.writer_identity}\"",
      "}"
    ]
  },
  "google-beta-resource-logging_project_exclusion": {
    "description": "Defines logging_project_exclusion",
    "prefix": "tf-google-beta-resource-logging_project_exclusion",
    "body": [
      "resource \"google_logging_project_exclusion\" \"my-exclusion\" {",
      "    name = \"my-instance-debug-exclusion\"",
      "",
      "    description = \"Exclude GCE instance debug logs\"",
      "",
      "    # Exclude all DEBUG or lower severity messages relating to instances",
      "    filter = \"resource.type = gce_instance AND severity <= DEBUG\"",
      "}"
    ]
  },
  "google-beta-resource-logging_project_sink": {
    "description": "Defines logging_project_sink",
    "prefix": "tf-google-beta-resource-logging_project_sink",
    "body": [
      "resource \"google_logging_project_sink\" \"my-sink\" {",
      "    name = \"my-pubsub-instance-sink\"",
      "",
      "    # Can export to pubsub, cloud storage, or bigquery",
      "    destination = \"pubsub.googleapis.com/projects/my-project/topics/instance-activity\"",
      "",
      "    # Log all WARN or higher severity messages relating to instances",
      "    filter = \"resource.type = gce_instance AND severity >= WARN\"",
      "",
      "    # Use a unique writer (creates a unique service account used for writing)",
      "    unique_writer_identity = true",
      "}"
    ]
  },
  "google-beta-resource-monitoring_alert_policy": {
    "description": "Defines monitoring_alert_policy",
    "prefix": "tf-google-beta-resource-monitoring_alert_policy",
    "body": [
      "resource \"google_monitoring_alert_policy\" \"alert_policy\" {",
      "  display_name = \"My Alert Policy\"",
      "  combiner = \"OR\"",
      "  conditions {",
      "    display_name = \"test condition\"",
      "    condition_threshold {",
      "      filter = \"metric.type=\\\"compute.googleapis.com/instance/disk/write_bytes_count\\\" AND resource.type=\\\"gce_instance\\\"\"",
      "      duration = \"60s\"",
      "      comparison = \"COMPARISON_GT\"",
      "      aggregations {",
      "        alignment_period = \"60s\"",
      "        per_series_aligner = \"ALIGN_RATE\"",
      "      }",
      "    }",
      "  }",
      "",
      "  user_labels = {",
      "    foo = \"bar\"",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-monitoring_group": {
    "description": "Defines monitoring_group",
    "prefix": "tf-google-beta-resource-monitoring_group",
    "body": [
      "resource \"google_monitoring_group\" \"basic\" {",
      "  display_name = \"New Test Group\"",
      "",
      "  filter = \"resource.metadata.region=\\\"europe-west2\\\"\"",
      "}"
    ]
  },
  "google-beta-resource-monitoring_notification_channel": {
    "description": "Defines monitoring_notification_channel",
    "prefix": "tf-google-beta-resource-monitoring_notification_channel",
    "body": [
      "resource \"google_monitoring_notification_channel\" \"basic\" {",
      "  display_name = \"Test Notification Channel\"",
      "  type = \"email\"",
      "  labels = {",
      "    email_address = \"fake_email@blahblah.com\"",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-monitoring_uptime_check_config": {
    "description": "Defines monitoring_uptime_check_config",
    "prefix": "tf-google-beta-resource-monitoring_uptime_check_config",
    "body": [
      "resource \"google_monitoring_uptime_check_config\" \"http\" {",
      "  display_name = \"http-uptime-check\"",
      "  timeout = \"60s\"",
      "",
      "  http_check {",
      "    path = \"/some-path\"",
      "    port = \"8010\"",
      "  }",
      "",
      "  monitored_resource {",
      "    type = \"uptime_url\"",
      "    labels = {",
      "      project_id = \"example\"",
      "      host = \"192.168.1.1\"",
      "    }",
      "  }",
      "",
      "  content_matchers {",
      "    content = \"example\"",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-pubsub_subscription": {
    "description": "Defines pubsub_subscription",
    "prefix": "tf-google-beta-resource-pubsub_subscription",
    "body": [
      "resource \"google_pubsub_topic\" \"example\" {",
      "  name = \"example-topic\"",
      "}",
      "",
      "resource \"google_pubsub_subscription\" \"example\" {",
      "  name  = \"example-subscription\"",
      "  topic = \"${google_pubsub_topic.example.name}\"",
      "",
      "  ack_deadline_seconds = 20",
      "",
      "  labels = {",
      "    foo = \"bar\"",
      "  }",
      "",
      "  push_config {",
      "    push_endpoint = \"https://example.com/push\"",
      "",
      "    attributes {",
      "      x-goog-version = \"v1\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-pubsub_subscription_iam": {
    "description": "Defines pubsub_subscription_iam",
    "prefix": "tf-google-beta-resource-pubsub_subscription_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role    = \"roles/editor\"",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_pubsub_subscription_iam_policy\" \"editor\" {",
      "  subscription = \"your-subscription-name\"",
      "  policy_data  = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-beta-resource-pubsub_topic": {
    "description": "Defines pubsub_topic",
    "prefix": "tf-google-beta-resource-pubsub_topic",
    "body": [
      "resource \"google_pubsub_topic\" \"example\" {",
      "  name = \"example-topic\"",
      "",
      "  labels = {",
      "    foo = \"bar\"",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-pubsub_topic_iam": {
    "description": "Defines pubsub_topic_iam",
    "prefix": "tf-google-beta-resource-pubsub_topic_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role    = \"roles/editor\"",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_pubsub_topic_iam_policy\" \"editor\" {",
      "  topic       = \"projects/{{project}}/topics/{{topic}}\"",
      "  policy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-beta-resource-redis_instance": {
    "description": "Defines redis_instance",
    "prefix": "tf-google-beta-resource-redis_instance",
    "body": [
      "resource \"google_redis_instance\" \"cache\" {",
      "  name           = \"memory-cache\"",
      "  memory_size_gb = 1",
      "}"
    ]
  },
  "google-beta-resource-resource_manager_lien": {
    "description": "Defines resource_manager_lien",
    "prefix": "tf-google-beta-resource-resource_manager_lien",
    "body": [
      "resource \"google_resource_manager_lien\" \"lien\" {",
      "  parent = \"projects/${google_project.project.number}\"",
      "  restrictions = [\"resourcemanager.projects.delete\"]",
      "  origin = \"machine-readable-explanation\"",
      "  reason = \"This project is an important environment\"",
      "}",
      "",
      "resource \"google_project\" \"project\" {",
      "  project_id = \"staging-project\"",
      "  name = \"A very important project!\"",
      "}"
    ]
  },
  "google-beta-resource-runtimeconfig_config": {
    "description": "Defines runtimeconfig_config",
    "prefix": "tf-google-beta-resource-runtimeconfig_config",
    "body": [
      "resource \"google_runtimeconfig_config\" \"my-runtime-config\" {",
      " \tname = \"my-service-runtime-config\"",
      " \tdescription = \"Runtime configuration values for my service\"",
      "}"
    ]
  },
  "google-beta-resource-runtimeconfig_variable": {
    "description": "Defines runtimeconfig_variable",
    "prefix": "tf-google-beta-resource-runtimeconfig_variable",
    "body": [
      "resource \"google_runtimeconfig_config\" \"my-runtime-config\" {",
      " \tname = \"my-service-runtime-config\"",
      " \tdescription = \"Runtime configuration values for my service\"",
      "}",
      "",
      "resource \"google_runtimeconfig_variable\" \"environment\" {",
      "\tparent = \"${google_runtimeconfig_config.my-runtime-config.name}\"",
      "\tname = \"prod-variables/hostname\"",
      "\ttext = \"example.com\"",
      "}"
    ]
  },
  "google-beta-resource-security_scanner_scan_config": {
    "description": "Defines security_scanner_scan_config",
    "prefix": "tf-google-beta-resource-security_scanner_scan_config",
    "body": [
      "resource \"google_compute_address\" \"scanner_static_ip\" {",
      "  provider = \"google-beta\"",
      "  name     = \"scan-basic-static-ip\"",
      "}",
      "",
      "resource \"google_security_scanner_scan_config\" \"scan-config\" {",
      "  provider         = \"google-beta\"",
      "  display_name     = \"terraform-scan-config\"",
      "  starting_urls    = [\"http://${google_compute_address.scanner_static_ip.address}\"]",
      "  target_platforms = [\"COMPUTE\"]",
      "}",
      "",
      "provider \"google-beta\" {",
      "  region = \"us-central1\"",
      "  zone   = \"us-central1-a\"",
      "}"
    ]
  },
  "google-beta-resource-service_networking_connection": {
    "description": "Defines service_networking_connection",
    "prefix": "tf-google-beta-resource-service_networking_connection",
    "body": [
      "resource \"google_compute_network\" \"peering_network\" {",
      "  name = \"peering-network\"",
      "}",
      "",
      "resource \"google_compute_global_address\" \"private_ip_alloc\" {",
      "  name          = \"private-ip-alloc\"",
      "  purpose       = \"VPC_PEERING\"",
      "  address_type  = \"INTERNAL\"",
      "  prefix_length = 16",
      "  network       = \"${google_compute_network.peering_network.self_link}\"",
      "}",
      "",
      "resource \"google_service_networking_connection\" \"foobar\" {",
      "  network                 = \"${google_compute_network.peering_network.self_link}\"",
      "  service                 = \"servicenetworking.googleapis.com\"",
      "  reserved_peering_ranges = [\"${google_compute_global_address.private_ip_alloc.name}\"]",
      "}"
    ]
  },
  "google-beta-resource-source_repo_repository": {
    "description": "Defines source_repo_repository",
    "prefix": "tf-google-beta-resource-source_repo_repository",
    "body": [
      "resource \"google_sourcerepo_repository\" \"my-repo\" {",
      "  name = \"my-repository\"",
      "}"
    ]
  },
  "google-beta-resource-source_repo_repository_iam": {
    "description": "Defines source_repo_repository_iam",
    "prefix": "tf-google-beta-resource-source_repo_repository_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role    = \"roles/editor\"",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_sourcerepo_repository_iam_policy\" \"editor\" {",
      "  repository       = \"{{project}}/{{repository}}\"",
      "  policy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-beta-resource-spanner_database": {
    "description": "Defines spanner_database",
    "prefix": "tf-google-beta-resource-spanner_database",
    "body": [
      "resource \"google_spanner_instance\" \"main\" {",
      "  config       = \"regional-europe-west1\"",
      "  display_name = \"main-instance\"",
      "}",
      "",
      "resource \"google_spanner_database\" \"database\" {",
      "  instance  = \"${google_spanner_instance.main.name}\"",
      "  name      = \"my-database\"",
      "  ddl       =  [",
      "    \"CREATE TABLE t1 (t1 INT64 NOT NULL,) PRIMARY KEY(t1)\",",
      "    \"CREATE TABLE t2 (t2 INT64 NOT NULL,) PRIMARY KEY(t2)\"",
      "  ]",
      "}"
    ]
  },
  "google-beta-resource-spanner_database_iam": {
    "description": "Defines spanner_database_iam",
    "prefix": "tf-google-beta-resource-spanner_database_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_spanner_database_iam_policy\" \"database\" {",
      "  instance    = \"your-instance-name\"",
      "  database    = \"your-database-name\"",
      "  policy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-beta-resource-spanner_instance": {
    "description": "Defines spanner_instance",
    "prefix": "tf-google-beta-resource-spanner_instance",
    "body": [
      "resource \"google_spanner_instance\" \"example\" {",
      "  config        = \"regional-us-central1\"",
      "  display_name  = \"Test Spanner Instance\"",
      "  num_nodes     = 2",
      "  labels = {",
      "    \"foo\" = \"bar\"",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-spanner_instance_iam": {
    "description": "Defines spanner_instance_iam",
    "prefix": "tf-google-beta-resource-spanner_instance_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_spanner_instance_iam_policy\" \"instance\" {",
      "  instance    = \"your-instance-name\"",
      "  policy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-beta-resource-sql_database": {
    "description": "Defines sql_database",
    "prefix": "tf-google-beta-resource-sql_database",
    "body": [
      "resource \"random_id\" \"db_name_suffix\" {",
      "  byte_length = 4",
      "}",
      "",
      "resource \"google_sql_database_instance\" \"master\" {",
      "  name = \"master-instance-${random_id.db_name_suffix.hex}\"",
      "",
      "  settings {",
      "    tier = \"D0\"",
      "  }",
      "}",
      "",
      "resource \"google_sql_database\" \"users\" {",
      "  name      = \"users-db\"",
      "  instance  = \"${google_sql_database_instance.master.name}\"",
      "  charset   = \"latin1\"",
      "  collation = \"latin1_swedish_ci\"",
      "}"
    ]
  },
  "google-beta-resource-sql_database_instance": {
    "description": "Defines sql_database_instance",
    "prefix": "tf-google-beta-resource-sql_database_instance",
    "body": [
      "resource \"random_id\" \"db_name_suffix\" {",
      "  byte_length = 4",
      "}",
      "",
      "resource \"google_sql_database_instance\" \"master\" {",
      "  name = \"master-instance-${random_id.db_name_suffix.hex}\"",
      "  database_version = \"MYSQL_5_6\"",
      "  # First-generation instance regions are not the conventional",
      "  # Google Compute Engine regions. See argument reference below.",
      "  region = \"us-central\"",
      "",
      "  settings {",
      "    tier = \"D0\"",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-sql_ssl_cert": {
    "description": "Defines sql_ssl_cert",
    "prefix": "tf-google-beta-resource-sql_ssl_cert",
    "body": [
      "resource \"random_id\" \"db_name_suffix\" {",
      "  byte_length = 4",
      "}",
      "",
      "resource \"google_sql_database_instance\" \"master\" {",
      "  name = \"master-instance-${random_id.db_name_suffix.hex}\"",
      "",
      "  settings {",
      "    tier = \"D0\"",
      "  }",
      "}",
      "",
      "resource \"google_sql_ssl_cert\" \"client_cert\" {",
      "  common_name = \"client-name\"",
      "  instance    = \"${google_sql_database_instance.master.name}\"",
      "}"
    ]
  },
  "google-beta-resource-sql_user": {
    "description": "Defines sql_user",
    "prefix": "tf-google-beta-resource-sql_user",
    "body": [
      "resource \"random_id\" \"db_name_suffix\" {",
      "  byte_length = 4",
      "}",
      "",
      "resource \"google_sql_database_instance\" \"master\" {",
      "  name = \"master-instance-${random_id.db_name_suffix.hex}\"",
      "",
      "  settings {",
      "    tier = \"D0\"",
      "  }",
      "}",
      "",
      "resource \"google_sql_user\" \"users\" {",
      "  name     = \"me\"",
      "  instance = \"${google_sql_database_instance.master.name}\"",
      "  host     = \"me.com\"",
      "  password = \"changeme\"",
      "}"
    ]
  },
  "google-beta-resource-storage_bucket": {
    "description": "Defines storage_bucket",
    "prefix": "tf-google-beta-resource-storage_bucket",
    "body": [
      "resource \"google_storage_bucket\" \"image-store\" {",
      "  name     = \"image-store-bucket\"",
      "  location = \"EU\"",
      "",
      "  website {",
      "    main_page_suffix = \"index.html\"",
      "    not_found_page   = \"404.html\"",
      "  }",
      "}"
    ]
  },
  "google-beta-resource-storage_bucket_acl": {
    "description": "Defines storage_bucket_acl",
    "prefix": "tf-google-beta-resource-storage_bucket_acl",
    "body": [
      "resource \"google_storage_bucket\" \"image-store\" {",
      "  name     = \"image-store-bucket\"",
      "  location = \"EU\"",
      "}",
      "",
      "resource \"google_storage_bucket_acl\" \"image-store-acl\" {",
      "  bucket = \"${google_storage_bucket.image-store.name}\"",
      "",
      "  role_entity = [",
      "    \"OWNER:user-my.email@gmail.com\",",
      "    \"READER:group-mygroup\",",
      "  ]",
      "}"
    ]
  },
  "google-beta-resource-storage_bucket_iam": {
    "description": "Defines storage_bucket_iam",
    "prefix": "tf-google-beta-resource-storage_bucket_iam",
    "body": [
      "resource \"google_storage_bucket_iam_binding\" \"binding\" {",
      "  bucket = \"your-bucket-name\"",
      "  role        = \"roles/storage.objectViewer\"",
      "",
      "  members = [",
      "    \"user:jane@example.com\",",
      "  ]",
      "}"
    ]
  },
  "google-beta-resource-storage_bucket_object": {
    "description": "Defines storage_bucket_object",
    "prefix": "tf-google-beta-resource-storage_bucket_object",
    "body": [
      "resource \"google_storage_bucket_object\" \"picture\" {",
      "  name   = \"butterfly01\"",
      "  source = \"/images/nature/garden-tiger-moth.jpg\"",
      "  bucket = \"image-store\"",
      "}"
    ]
  },
  "google-beta-resource-storage_default_object_access_control": {
    "description": "Defines storage_default_object_access_control",
    "prefix": "tf-google-beta-resource-storage_default_object_access_control",
    "body": [
      "resource \"google_storage_default_object_access_control\" \"public_rule\" {",
      "  bucket = \"${google_storage_bucket.bucket.name}\"",
      "  role   = \"READER\"",
      "  entity = \"allUsers\"",
      "}",
      "",
      "resource \"google_storage_bucket\" \"bucket\" {",
      "\tname = \"static-content-bucket\"",
      "}"
    ]
  },
  "google-beta-resource-storage_default_object_acl": {
    "description": "Defines storage_default_object_acl",
    "prefix": "tf-google-beta-resource-storage_default_object_acl",
    "body": [
      "resource \"google_storage_bucket\" \"image-store\" {",
      "  name     = \"image-store-bucket\"",
      "  location = \"EU\"",
      "}",
      "",
      "resource \"google_storage_default_object_acl\" \"image-store-default-acl\" {",
      "  bucket = \"${google_storage_bucket.image-store.name}\"",
      "  role_entity = [",
      "    \"OWNER:user-my.email@gmail.com\",",
      "    \"READER:group-mygroup\",",
      "  ]",
      "}"
    ]
  },
  "google-beta-resource-storage_notification": {
    "description": "Defines storage_notification",
    "prefix": "tf-google-beta-resource-storage_notification",
    "body": [
      "resource \"google_storage_notification\" \"notification\" {",
      "\tbucket            = \"${google_storage_bucket.bucket.name}\"",
      "\tpayload_format    = \"JSON_API_V1\"",
      "\ttopic             = \"${google_pubsub_topic.topic.id}\"",
      "\tevent_types       = [\"OBJECT_FINALIZE\", \"OBJECT_METADATA_UPDATE\"]",
      "\tcustom_attributes = {",
      "\t\tnew-attribute = \"new-attribute-value\"",
      "\t}",
      "\tdepends_on        = [\"google_pubsub_topic_iam_binding.binding\"]",
      "}",
      "",
      "// Enable notifications by giving the correct IAM permission to the unique service account.",
      "",
      "data \"google_storage_project_service_account\" \"gcs_account\" {}",
      "",
      "resource \"google_pubsub_topic_iam_binding\" \"binding\" {",
      "\ttopic       = \"${google_pubsub_topic.topic.name}\"",
      "\trole        = \"roles/pubsub.publisher\"",
      "\tmembers     = [\"serviceAccount:${data.google_storage_project_service_account.gcs_account.email_address}\"]",
      "}",
      "",
      "// End enabling notifications",
      "",
      "",
      "resource \"google_storage_bucket\" \"bucket\" {",
      "\tname = \"default_bucket\"",
      "}",
      "",
      "resource \"google_pubsub_topic\" \"topic\" {",
      "\tname = \"default_topic\"",
      "}"
    ]
  },
  "google-beta-resource-storage_object_access_control": {
    "description": "Defines storage_object_access_control",
    "prefix": "tf-google-beta-resource-storage_object_access_control",
    "body": [
      "resource \"google_storage_object_access_control\" \"public_rule\" {",
      "  object = \"${google_storage_bucket_object.object.output_name}\"",
      "  bucket = \"${google_storage_bucket.bucket.name}\"",
      "  role   = \"READER\"",
      "  entity = \"allUsers\"",
      "}",
      "",
      "resource \"google_storage_bucket\" \"bucket\" {",
      "\tname = \"static-content-bucket\"",
      "}",
      "",
      " resource \"google_storage_bucket_object\" \"object\" {",
      "\tname   = \"public-object\"",
      "\tbucket = \"${google_storage_bucket.bucket.name}\"",
      "\tsource = \"../static/img/header-logo.png\"",
      "}"
    ]
  },
  "google-beta-resource-storage_object_acl": {
    "description": "Defines storage_object_acl",
    "prefix": "tf-google-beta-resource-storage_object_acl",
    "body": [
      "resource \"google_storage_bucket\" \"image-store\" {",
      "  name     = \"image-store-bucket\"",
      "  location = \"EU\"",
      "}",
      "",
      "resource \"google_storage_bucket_object\" \"image\" {",
      "  name   = \"image1\"",
      "  bucket = \"${google_storage_bucket.image-store.name}\"",
      "  source = \"image1.jpg\"",
      "}",
      "",
      "resource \"google_storage_object_acl\" \"image-store-acl\" {",
      "  bucket = \"${google_storage_bucket.image-store.name}\"",
      "  object = \"${google_storage_bucket_object.image.output_name}\"",
      "",
      "  role_entity = [",
      "    \"OWNER:user-my.email@gmail.com\",",
      "    \"READER:group-mygroup\",",
      "  ]",
      "}"
    ]
  },
  "google-beta-resource-storage_transfer_job": {
    "description": "Defines storage_transfer_job",
    "prefix": "tf-google-beta-resource-storage_transfer_job",
    "body": [
      "",
      "data \"google_storage_transfer_project_service_account\" \"default\" {",
      "  project       = \"${var.project}\"",
      "}",
      "",
      "resource \"google_storage_bucket\" \"s3-backup-bucket\" {",
      "  name          = \"${var.aws_s3_bucket}-backup\"",
      "  storage_class = \"NEARLINE\"",
      "  project       = \"${var.project}\"",
      "}",
      "",
      "resource \"google_storage_bucket_iam_member\" \"s3-backup-bucket\" {",
      "  bucket        = \"${google_storage_bucket.s3-backup-bucket.name}\"",
      "  role          = \"roles/storage.admin\"",
      "  member        = \"serviceAccount:${data.google_storage_transfer_project_service_account.default.email}\"",
      "  depends_on    = [",
      "    \"google_storage_bucket.s3-backup-bucket\"",
      "  ]",
      "}",
      "",
      "resource \"google_storage_transfer_job\" \"s3-bucket-nightly-backup\" {",
      "\tdescription\t= \"Nightly backup of S3 bucket\"",
      "\tproject     = \"${var.project}\"",
      "",
      "\ttransfer_spec {",
      "\t\tobject_conditions {",
      "\t\t\tmax_time_elapsed_since_last_modification = \"600s\"",
      "\t\t\texclude_prefixes = [",
      "\t\t\t\t\"requests.gz\"",
      "\t\t\t]",
      "\t\t}",
      "\t\ttransfer_options {",
      "\t\t\tdelete_objects_unique_in_sink = false",
      "\t\t}",
      "\t\taws_s3_data_source {",
      "\t\t\tbucket_name = \"${var.aws_s3_bucket}\"",
      "\t\t\taws_access_key {",
      "\t\t\t\taccess_key_id \t\t= \"${var.aws_access_key}\"",
      "\t\t\t\tsecret_access_key \t= \"${var.aws_secret_key}\"",
      "\t\t\t}",
      "\t\t}",
      "\t\tgcs_data_sink {",
      "\t\t\tbucket_name = \"${google_storage_bucket.s3-backup-bucket.name}\"",
      "\t\t}",
      "\t}",
      "",
      "\tschedule {",
      "\t\tschedule_start_date {",
      "\t\t\tyear\t= 2018",
      "\t\t\tmonth\t= 10",
      "\t\t\tday\t\t= 1",
      "\t\t}",
      "\t\tschedule_end_date {",
      "\t\t\tyear\t= 2019",
      "\t\t\tmonth\t= 1",
      "\t\t\tday\t\t= 15",
      "\t\t}",
      "\t\tstart_time_of_day {",
      "\t\t\thours\t= 23",
      "\t\t\tminutes\t= 30",
      "\t\t\tseconds\t= 0",
      "\t\t\tnanos\t= 0",
      "\t\t}",
      "\t}",
      "",
      "\tdepends_on = [",
      "\t    \"google_storage_bucket_iam_member.s3-backup-bucket\"",
      "\t]",
      "}"
    ]
  },
  "google-beta-resource-tpu_node": {
    "description": "Defines tpu_node",
    "prefix": "tf-google-beta-resource-tpu_node",
    "body": [
      "data \"google_tpu_tensorflow_versions\" \"available\" { }",
      "",
      "resource \"google_tpu_node\" \"tpu\" {",
      "\tname           = \"test-tpu\"",
      "\tzone           = \"us-central1-b\"",
      "",
      "\taccelerator_type   = \"v3-8\"",
      "\ttensorflow_version = \"${data.google_tpu_tensorflow_versions.available.versions[0]}\"",
      "\tcidr_block         = \"10.2.0.0/29\"",
      "}"
    ]
  },
  "google-beta-resource-usage_export_bucket": {
    "description": "Defines usage_export_bucket",
    "prefix": "tf-google-beta-resource-usage_export_bucket",
    "body": [
      "resource \"google_project_usage_export_bucket\" \"usage_export\" {",
      "  project      = \"development-project\"",
      "  bucket_name  = \"usage-tracking-bucket\"",
      "}"
    ]
  },
  "google-data-datasource_client_config": {
    "description": "Defines datasource_client_config",
    "prefix": "tf-google-data-datasource_client_config",
    "body": [
      "data \"google_client_config\" \"current\" {}",
      "",
      "output \"project\" {",
      "  value = \"${data.google_client_config.current.project}\"",
      "}"
    ]
  },
  "google-data-datasource_cloudfunctions_function": {
    "description": "Defines datasource_cloudfunctions_function",
    "prefix": "tf-google-data-datasource_cloudfunctions_function",
    "body": [
      "data \"google_cloudfunctions_function\" \"my-function\" {",
      "  name = \"function\"",
      "}"
    ]
  },
  "google-data-datasource_compute_address": {
    "description": "Defines datasource_compute_address",
    "prefix": "tf-google-data-datasource_compute_address",
    "body": [
      "data \"google_compute_address\" \"my_address\" {",
      "  name = \"foobar\"",
      "}",
      "",
      "resource \"google_dns_record_set\" \"frontend\" {",
      "  name = \"frontend.${google_dns_managed_zone.prod.dns_name}\"",
      "  type = \"A\"",
      "  ttl  = 300",
      "",
      "  managed_zone = \"${google_dns_managed_zone.prod.name}\"",
      "",
      "  rrdatas = [\"${data.google_compute_address.my_address.address}\"]",
      "}",
      "",
      "resource \"google_dns_managed_zone\" \"prod\" {",
      "  name     = \"prod-zone\"",
      "  dns_name = \"prod.mydomain.com.\"",
      "}"
    ]
  },
  "google-data-datasource_compute_forwarding_rule": {
    "description": "Defines datasource_compute_forwarding_rule",
    "prefix": "tf-google-data-datasource_compute_forwarding_rule",
    "body": [
      "data \"google_compute_forwarding_rule\" \"my-forwarding-rule\" {",
      "  name = \"forwarding-rule-us-east1\"",
      "}"
    ]
  },
  "google-data-datasource_compute_global_address": {
    "description": "Defines datasource_compute_global_address",
    "prefix": "tf-google-data-datasource_compute_global_address",
    "body": [
      "data \"google_compute_global_address\" \"my_address\" {",
      "  name = \"foobar\"",
      "}",
      "",
      "resource \"google_dns_record_set\" \"frontend\" {",
      "  name = \"lb.${google_dns_managed_zone.prod.dns_name}\"",
      "  type = \"A\"",
      "  ttl  = 300",
      "",
      "  managed_zone = \"${google_dns_managed_zone.prod.name}\"",
      "",
      "  rrdatas = [\"${data.google_compute_global_address.my_address.address}\"]",
      "}",
      "",
      "resource \"google_dns_managed_zone\" \"prod\" {",
      "  name     = \"prod-zone\"",
      "  dns_name = \"prod.mydomain.com.\"",
      "}"
    ]
  },
  "google-data-datasource_compute_image": {
    "description": "Defines datasource_compute_image",
    "prefix": "tf-google-data-datasource_compute_image",
    "body": [
      "data \"google_compute_image\" \"my_image\" {",
      "  family  = \"debian-9\"",
      "  project = \"debian-cloud\"",
      "}",
      "",
      "resource \"google_compute_instance\" \"default\" {",
      "  # ...",
      "",
      "  boot_disk {",
      "    initialize_params {",
      "      image = \"${data.google_compute_image.my_image.self_link}\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "google-data-datasource_compute_instance": {
    "description": "Defines datasource_compute_instance",
    "prefix": "tf-google-data-datasource_compute_instance",
    "body": [
      "data \"google_compute_instance\" \"appserver\" {",
      "\tname = \"primary-application-server\"",
      "\tzone = \"us-central1-a\"",
      "}"
    ]
  },
  "google-data-datasource_compute_lb_ip_ranges": {
    "description": "Defines datasource_compute_lb_ip_ranges",
    "prefix": "tf-google-data-datasource_compute_lb_ip_ranges",
    "body": [
      "data \"google_compute_lb_ip_ranges\" \"ranges\" {}",
      "",
      "resource \"google_compute_firewall\" \"lb\" {",
      "  name    = \"lb-firewall\"",
      "  network = \"${google_compute_network.main.name}\"",
      "",
      "  allow {",
      "    protocol = \"tcp\"",
      "    ports    = [\"80\"]",
      "  }",
      "",
      "  source_ranges = [\"${data.google_compute_lb_ip_ranges.ranges.network}\"]",
      "  target_tags = [",
      "    \"InstanceBehindLoadBalancer\"",
      "  ]",
      "}"
    ]
  },
  "google-data-datasource_compute_network": {
    "description": "Defines datasource_compute_network",
    "prefix": "tf-google-data-datasource_compute_network",
    "body": [
      "data \"google_compute_network\" \"my-network\" {",
      "  name = \"default-us-east1\"",
      "}"
    ]
  },
  "google-data-datasource_compute_region_instance_group": {
    "description": "Defines datasource_compute_region_instance_group",
    "prefix": "tf-google-data-datasource_compute_region_instance_group",
    "body": [
      "data \"google_compute_region_instance_group\" \"group\" {",
      "\tname = \"instance-group-name\"",
      "}"
    ]
  },
  "google-data-datasource_compute_ssl_certificate": {
    "description": "Defines datasource_compute_ssl_certificate",
    "prefix": "tf-google-data-datasource_compute_ssl_certificate",
    "body": [
      "data \"google_compute_ssl_certificate\" \"my_cert\" {",
      "  name       = \"my-cert\"",
      "  location   = \"us-east1-a\"",
      "}",
      "",
      "output \"certificate\" {",
      "  value = \"${data.google_compute_ssl_certificate.my_cert.certificate}\"",
      "}",
      "",
      "output \"certificate_id\" {",
      "  value = \"${data.google_compute_ssl_certificate.my_cert.certificate_id}\"",
      "}",
      "",
      "output \"self_link\" {",
      "  value = \"${data.google_compute_ssl_certificate.my_cert.self_link}\"",
      "}"
    ]
  },
  "google-data-datasource_compute_ssl_policy": {
    "description": "Defines datasource_compute_ssl_policy",
    "prefix": "tf-google-data-datasource_compute_ssl_policy",
    "body": [
      "data \"google_compute_ssl_policy\" \"my-ssl-policy\" {",
      "  name = \"production-ssl-policy\"",
      "}"
    ]
  },
  "google-data-datasource_compute_subnetwork": {
    "description": "Defines datasource_compute_subnetwork",
    "prefix": "tf-google-data-datasource_compute_subnetwork",
    "body": [
      "data \"google_compute_subnetwork\" \"my-subnetwork\" {",
      "  name   = \"default-us-east1\"",
      "  region = \"us-east1\"",
      "}"
    ]
  },
  "google-data-datasource_compute_vpn_gateway": {
    "description": "Defines datasource_compute_vpn_gateway",
    "prefix": "tf-google-data-datasource_compute_vpn_gateway",
    "body": [
      "data \"google_compute_vpn_gateway\" \"my-vpn-gateway\" {",
      "  name = \"vpn-gateway-us-east1\"",
      "}"
    ]
  },
  "google-data-datasource_google_client_openid_userinfo": {
    "description": "Defines datasource_google_client_openid_userinfo",
    "prefix": "tf-google-data-datasource_google_client_openid_userinfo",
    "body": [
      "provider \"google\" {",
      "  scopes = [",
      "    \"https://www.googleapis.com/auth/compute\",",
      "    \"https://www.googleapis.com/auth/cloud-platform\",",
      "    \"https://www.googleapis.com/auth/ndev.clouddns.readwrite\",",
      "    \"https://www.googleapis.com/auth/devstorage.full_control\",",
      "    \"https://www.googleapis.com/auth/userinfo.email\",",
      "  ]",
      "}",
      "",
      "data \"google_client_openid_userinfo\" \"me\" {}",
      "",
      "output \"my-email\" {",
      "  value = \"${data.google_client_openid_userinfo.me.email}\"",
      "}"
    ]
  },
  "google-data-datasource_google_composer_image_versions": {
    "description": "Defines datasource_google_composer_image_versions",
    "prefix": "tf-google-data-datasource_google_composer_image_versions",
    "body": [
      "data \"google_composer_image_versions\" \"all\" {",
      "}",
      "",
      "resource \"google_composer_environment\" \"test\" {",
      "  name           = \"test-env\"",
      "  region         = \"us-central1\"",
      "  config {",
      "    software_config {",
      "      image_version  = \"${data.google_composer_image_versions.all.image_versions.0.image_version_id}\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "google-data-datasource_google_compute_backend_service": {
    "description": "Defines datasource_google_compute_backend_service",
    "prefix": "tf-google-data-datasource_google_compute_backend_service",
    "body": [
      "data \"google_compute_backend_service\" \"baz\" {",
      "  name = \"foobar\"",
      "}",
      "",
      "resource \"google_compute_backend_service\" \"default\" {",
      "  name          = \"backend-service\"",
      "  health_checks = [\"${tolist(data.google_compute_backend_service.baz.health_checks)[0]}\"]",
      "}"
    ]
  },
  "google-data-datasource_google_folder_organization_policy": {
    "description": "Defines datasource_google_folder_organization_policy",
    "prefix": "tf-google-data-datasource_google_folder_organization_policy",
    "body": [
      "data \"google_folder_organization_policy\" \"policy\" {",
      "  folder     = \"folders/folderid\"",
      "  constraint = \"constraints/compute.trustedImageProjects\"",
      "}",
      "",
      "output \"version\" {",
      "  value = \"${data.google_folder_organization_policy.policy.version}\"",
      "}"
    ]
  },
  "google-data-datasource_google_iam_role": {
    "description": "Defines datasource_google_iam_role",
    "prefix": "tf-google-data-datasource_google_iam_role",
    "body": [
      "data \"google_iam_role\" \"roleinfo\" {",
      "  name = \"roles/compute.viewer\"",
      "}",
      "",
      "output \"the_role_permissions\" {",
      "  value = \"${data.google_iam_role.roleinfo.included_permissions}\"",
      "}",
      ""
    ]
  },
  "google-data-datasource_google_netblock_ip_ranges": {
    "description": "Defines datasource_google_netblock_ip_ranges",
    "prefix": "tf-google-data-datasource_google_netblock_ip_ranges",
    "body": [
      "data \"google_netblock_ip_ranges\" \"netblock\" {}",
      "",
      "output \"cidr_blocks\" {",
      "  value = \"${data.google_netblock_ip_ranges.netblock.cidr_blocks}\"",
      "}",
      "",
      "output \"cidr_blocks_ipv4\" {",
      "  value = \"${data.google_netblock_ip_ranges.netblock.cidr_blocks_ipv4}\"",
      "}",
      "",
      "output \"cidr_blocks_ipv6\" {",
      "  value = \"${data.google_netblock_ip_ranges.netblock.cidr_blocks_ipv6}\"",
      "}"
    ]
  },
  "google-data-datasource_google_project_organization_policy": {
    "description": "Defines datasource_google_project_organization_policy",
    "prefix": "tf-google-data-datasource_google_project_organization_policy",
    "body": [
      "data \"google_project_organization_policy\" \"policy\" {",
      "  project    = \"project-id\"",
      "  constraint = \"constraints/serviceuser.services\"",
      "}",
      "",
      "output \"version\" {",
      "  value = \"${data.google_project_organization_policy.policy.version}\"",
      "}"
    ]
  },
  "google-data-datasource_google_service_account": {
    "description": "Defines datasource_google_service_account",
    "prefix": "tf-google-data-datasource_google_service_account",
    "body": [
      "data \"google_service_account\" \"object_viewer\" {",
      "  account_id = \"object-viewer\"",
      "}"
    ]
  },
  "google-data-datasource_google_service_account_access_token": {
    "description": "Defines datasource_google_service_account_access_token",
    "prefix": "tf-google-data-datasource_google_service_account_access_token",
    "body": [
      "resource \"google_service_account_iam_binding\" \"token-creator-iam\" {",
      "\tservice_account_id = \"projects/-/serviceAccounts/service_B@projectB.iam.gserviceaccount.com\"",
      "\trole               = \"roles/iam.serviceAccountTokenCreator\"",
      "\tmembers = [",
      "\t\t\"serviceAccount:service_A@projectA.iam.gserviceaccount.com\",",
      "\t]",
      "}"
    ]
  },
  "google-data-datasource_google_service_account_key": {
    "description": "Defines datasource_google_service_account_key",
    "prefix": "tf-google-data-datasource_google_service_account_key",
    "body": [
      "resource \"google_service_account\" \"myaccount\" {",
      "  account_id = \"dev-foo-account\"",
      "}",
      "",
      "resource \"google_service_account_key\" \"mykey\" {",
      "  service_account_id = \"${google_service_account.myaccount.name}\"",
      "}",
      "",
      "data \"google_service_account_key\" \"mykey\" {",
      "  name = \"${google_service_account_key.mykey.name}\"",
      "  public_key_type = \"TYPE_X509_PEM_FILE\"",
      "}"
    ]
  },
  "google-data-dns_managed_zone": {
    "description": "Defines dns_managed_zone",
    "prefix": "tf-google-data-dns_managed_zone",
    "body": [
      "data \"google_dns_managed_zone\" \"env_dns_zone\" {",
      "  name        = \"qa-zone\"",
      "}",
      "",
      "resource \"google_dns_record_set\" \"dns\" {",
      "  name = \"my-address.${data.google_dns_managed_zone.env_dns_zone.dns_name}\"",
      "  type = \"TXT\"",
      "  ttl  = 300",
      "",
      "  managed_zone = \"${data.google_dns_managed_zone.env_dns_zone.name}\"",
      "",
      "  rrdatas = [\"test\"]",
      "}"
    ]
  },
  "google-data-google_active_folder": {
    "description": "Defines google_active_folder",
    "prefix": "tf-google-data-google_active_folder",
    "body": [
      "data \"google_active_folder\" \"department1\" {",
      "  display_name = \"Department 1\"",
      "  parent = \"organizations/1234567\"",
      "}"
    ]
  },
  "google-data-google_billing_account": {
    "description": "Defines google_billing_account",
    "prefix": "tf-google-data-google_billing_account",
    "body": [
      "data \"google_billing_account\" \"acct\" {",
      "  display_name = \"My Billing Account\"",
      "  open         = true",
      "}",
      "",
      "resource \"google_project\" \"my_project\" {",
      "  name       = \"My Project\"",
      "  project_id = \"your-project-id\"",
      "  org_id     = \"1234567\"",
      "",
      "  billing_account = \"${data.google_billing_account.acct.id}\"",
      "}"
    ]
  },
  "google-data-google_compute_default_service_account": {
    "description": "Defines google_compute_default_service_account",
    "prefix": "tf-google-data-google_compute_default_service_account",
    "body": [
      "data \"google_compute_default_service_account\" \"default\" { }",
      "",
      "output \"default_account\" {",
      "  value = \"${data.google_compute_default_service_account.default.email}\"",
      "} "
    ]
  },
  "google-data-google_compute_instance_group": {
    "description": "Defines google_compute_instance_group",
    "prefix": "tf-google-data-google_compute_instance_group",
    "body": [
      "data \"google_compute_instance_group\" \"all\" {",
      "\tname = \"instance-group-name\"",
      "\tzone = \"us-central1-a\"",
      "}"
    ]
  },
  "google-data-google_compute_node_types": {
    "description": "Defines google_compute_node_types",
    "prefix": "tf-google-data-google_compute_node_types",
    "body": [
      "data \"google_compute_node_types\" \"central1b\" {",
      "  zone = \"us-central1-b\"",
      "}",
      "",
      "resource \"google_compute_node_template\" \"tmpl\" {",
      "  name      = \"terraform-test-tmpl\"",
      "  region    = \"us-central1\"",
      "  node_type = \"${data.google_compute_node_types.types.names[0]}\"",
      "}"
    ]
  },
  "google-data-google_compute_regions": {
    "description": "Defines google_compute_regions",
    "prefix": "tf-google-data-google_compute_regions",
    "body": [
      "data \"google_compute_regions\" \"available\" {}",
      "",
      "resource \"google_compute_subnetwork\" \"cluster\" {",
      "  count = \"${length(data.google_compute_regions.available.names)}\"",
      "  name          = \"my-network\"",
      "  ip_cidr_range = \"10.36.${count.index}.0/24\"",
      "  network       = \"my-network\"",
      "  region        = \"${data.google_compute_regions.available.names[count.index]}\"",
      "}"
    ]
  },
  "google-data-google_compute_zones": {
    "description": "Defines google_compute_zones",
    "prefix": "tf-google-data-google_compute_zones",
    "body": [
      "data \"google_compute_zones\" \"available\" {}",
      "",
      "resource \"google_compute_instance_group_manager\" \"foo\" {",
      "  count = \"${length(data.google_compute_zones.available.names)}\"",
      "",
      "  name               = \"terraform-test-${count.index}\"",
      "  instance_template  = \"${google_compute_instance_template.foobar.self_link}\"",
      "  base_instance_name = \"foobar-${count.index}\"",
      "  zone               = \"${data.google_compute_zones.available.names[count.index]}\"",
      "  target_size        = 1",
      "}"
    ]
  },
  "google-data-google_container_cluster": {
    "description": "Defines google_container_cluster",
    "prefix": "tf-google-data-google_container_cluster",
    "body": [
      "data \"google_container_cluster\" \"my_cluster\" {",
      "  name       = \"my-cluster\"",
      "  location   = \"us-east1-a\"",
      "}",
      "",
      "output \"cluster_username\" {",
      "  value = \"${data.google_container_cluster.my_cluster.master_auth.0.username}\"",
      "}",
      "",
      "output \"cluster_password\" {",
      "  value = \"${data.google_container_cluster.my_cluster.master_auth.0.password}\"",
      "}",
      "",
      "output \"endpoint\" {",
      "  value = \"${data.google_container_cluster.my_cluster.endpoint}\"",
      "}",
      "",
      "output \"instance_group_urls\" {",
      "  value = \"${data.google_container_cluster.my_cluster.instance_group_urls}\"",
      "}",
      "",
      "output \"node_config\" {",
      "  value = \"${data.google_container_cluster.my_cluster.node_config}\"",
      "}",
      "",
      "output \"node_pools\" {",
      "  value = \"${data.google_container_cluster.my_cluster.node_pool}\"",
      "}"
    ]
  },
  "google-data-google_container_engine_versions": {
    "description": "Defines google_container_engine_versions",
    "prefix": "tf-google-data-google_container_engine_versions",
    "body": [
      "data \"google_container_engine_versions\" \"central1b\" {",
      "  location           = \"us-central1-b\"",
      "  version_prefix = \"1.12.\"",
      "}",
      "",
      "resource \"google_container_cluster\" \"foo\" {",
      "  name               = \"terraform-test-cluster\"",
      "  location               = \"us-central1-b\"",
      "  node_version       = \"${data.google_container_engine_versions.central1b.latest_node_version}\"",
      "  initial_node_count = 1",
      "",
      "  master_auth {",
      "    username = \"mr.yoda\"",
      "    password = \"adoy.rm\"",
      "  }",
      "}"
    ]
  },
  "google-data-google_container_registry_image": {
    "description": "Defines google_container_registry_image",
    "prefix": "tf-google-data-google_container_registry_image",
    "body": [
      "data \"google_container_registry_image\" \"debian\" {",
      "    name = \"debian\"",
      "}",
      "",
      "output \"gcr_location\" {",
      "    value = \"${data.google_container_registry_image.debian.image_url}\"",
      "}"
    ]
  },
  "google-data-google_container_registry_repository": {
    "description": "Defines google_container_registry_repository",
    "prefix": "tf-google-data-google_container_registry_repository",
    "body": [
      "data \"google_container_registry_repository\" \"foo\" {}",
      "",
      "output \"gcr_location\" {",
      "    value = \"${data.google_container_registry_repository.foo.repository_url}\"",
      "}"
    ]
  },
  "google-data-google_folder": {
    "description": "Defines google_folder",
    "prefix": "tf-google-data-google_folder",
    "body": [
      "# Get folder by id",
      "data \"google_folder\" \"my_folder_1\" {",
      "  folder = \"folders/12345\"",
      "  lookup_organization = true",
      "}",
      "",
      "# Search by fields",
      "data \"google_folder\" \"my_folder_2\" {",
      "  folder = \"folders/23456\"",
      "}",
      "",
      "output \"my_folder_1_organization\" {",
      "  value = \"${data.google_folder.my_folder_1.organization}\"",
      "}",
      "",
      "output \"my_folder_2_parent\" {",
      "  value = \"${data.google_folder.my_folder_2.parent}\"",
      "}",
      ""
    ]
  },
  "google-data-google_iam_policy": {
    "description": "Defines google_iam_policy",
    "prefix": "tf-google-data-google_iam_policy",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/compute.instanceAdmin\"",
      "",
      "    members = [",
      "      \"serviceAccount:your-custom-sa@your-project.iam.gserviceaccount.com\",",
      "    ]",
      "  }",
      "",
      "  binding {",
      "    role = \"roles/storage.objectViewer\"",
      "",
      "    members = [",
      "      \"user:alice@gmail.com\",",
      "    ]",
      "  }",
      "",
      "  audit_config {",
      "    service = \"cloudkms.googleapis.com\"",
      "    audit_log_configs {",
      "      log_type = \"DATA_READ\",",
      "      exempted_members = [\"user:you@domain.com\"]",
      "    }",
      "",
      "    audit_log_configs {",
      "      log_type = \"DATA_WRITE\",",
      "    }",
      "",
      "    audit_log_configs {",
      "      log_type = \"ADMIN_READ\",",
      "    }",
      "  }",
      "}"
    ]
  },
  "google-data-google_kms_crypto_key": {
    "description": "Defines google_kms_crypto_key",
    "prefix": "tf-google-data-google_kms_crypto_key",
    "body": [
      "data \"google_kms_key_ring\" \"my_key_ring\" {",
      "  name     = \"my-key-ring\"",
      "  location = \"us-central1\"",
      "}",
      "",
      "data \"google_kms_crypto_key\" \"my_crypto_key\" {",
      "  name            = \"my-crypto-key\"",
      "  key_ring        = \"${data.google_kms_key_ring.my_key_ring.self_link}\"",
      "}"
    ]
  },
  "google-data-google_kms_crypto_key_version": {
    "description": "Defines google_kms_crypto_key_version",
    "prefix": "tf-google-data-google_kms_crypto_key_version",
    "body": [
      "data \"google_kms_key_ring\" \"my_key_ring\" {",
      "  name     = \"my-key-ring\"",
      "  location = \"us-central1\"",
      "}",
      "",
      "data \"google_kms_crypto_key\" \"my_crypto_key\" {",
      "  name     = \"my-crypto-key\"",
      "  key_ring = \"${data.google_kms_key_ring.my_key_ring.self_link}\"",
      "}",
      "",
      "data \"google_kms_crypto_key_version\" \"my_crypto_key_version\" {",
      "  crypto_key = \"${data.google_kms_key.my_key.self_link}\"",
      "}"
    ]
  },
  "google-data-google_kms_key_ring": {
    "description": "Defines google_kms_key_ring",
    "prefix": "tf-google-data-google_kms_key_ring",
    "body": [
      "data \"google_kms_key_ring\" \"my_key_ring\" {",
      "  name     = \"my-key-ring\"",
      "  location = \"us-central1\"",
      "}"
    ]
  },
  "google-data-google_kms_secret": {
    "description": "Defines google_kms_secret",
    "prefix": "tf-google-data-google_kms_secret",
    "body": [
      "resource \"google_kms_key_ring\" \"my_key_ring\" {",
      "  project  = \"my-project\"",
      "  name     = \"my-key-ring\"",
      "  location = \"us-central1\"",
      "}",
      "",
      "resource \"google_kms_crypto_key\" \"my_crypto_key\" {",
      "  name     = \"my-crypto-key\"",
      "  key_ring = \"${google_kms_key_ring.my_key_ring.id}\"",
      "}"
    ]
  },
  "google-data-google_organization": {
    "description": "Defines google_organization",
    "prefix": "tf-google-data-google_organization",
    "body": [
      "data \"google_organization\" \"org\" {",
      "  domain = \"example.com\"",
      "}",
      "",
      "resource \"google_folder\" \"sales\" {",
      "  display_name = \"Sales\"",
      "  parent       = \"${data.google_organization.org.name}\"",
      "}"
    ]
  },
  "google-data-google_project": {
    "description": "Defines google_project",
    "prefix": "tf-google-data-google_project",
    "body": [
      "data \"google_project\" \"project\" {}",
      "",
      "output \"project_number\" {",
      "  value = \"${data.google_project.project.number}\"",
      "} "
    ]
  },
  "google-data-google_project_services": {
    "description": "Defines google_project_services",
    "prefix": "tf-google-data-google_project_services",
    "body": [
      "data \"google_project_services\" \"project\" {",
      "  project = \"your-project-id\"",
      "}",
      "",
      "output \"project_services\" {",
      "  value = \"${join(\",\", data.google_project_services.project.services)}\"",
      "}"
    ]
  },
  "google-data-google_projects": {
    "description": "Defines google_projects",
    "prefix": "tf-google-data-google_projects",
    "body": [
      "data \"google_projects\" \"my-org-projects\" {",
      "  filter = \"parent.id:012345678910 lifecycleState:DELETE_REQUESTED\"",
      "}",
      "",
      "data \"google_project\" \"deletion-candidate\" {",
      "   project_id = \"${data.google_projects.my-org-projects.projects.0.project_id}\"",
      "}"
    ]
  },
  "google-data-google_storage_project_service_account": {
    "description": "Defines google_storage_project_service_account",
    "prefix": "tf-google-data-google_storage_project_service_account",
    "body": [
      "data \"google_storage_project_service_account\" \"gcs_account\" {}",
      "",
      "resource \"google_pubsub_topic_iam_binding\" \"binding\" {",
      "\ttopic       = \"${google_pubsub_topic.topic.name}\"",
      "\trole        = \"roles/pubsub.publisher\"",
      "\t\t  ",
      "\tmembers     = [\"serviceAccount:${data.google_storage_project_service_account.gcs_account.email_address}\"]",
      "}"
    ]
  },
  "google-data-google_storage_transfer_project_service_account": {
    "description": "Defines google_storage_transfer_project_service_account",
    "prefix": "tf-google-data-google_storage_transfer_project_service_account",
    "body": [
      "data \"google_storage_transfer_project_service_account\" \"default\" { }",
      "",
      "output \"default_account\" {",
      "  value = \"${data.google_storage_transfer_project_service_account.default.email}\"",
      "}"
    ]
  },
  "google-data-signed_url": {
    "description": "Defines signed_url",
    "prefix": "tf-google-data-signed_url",
    "body": [
      "data \"google_storage_object_signed_url\" \"artifact\" {",
      "  bucket = \"install_binaries\"",
      "  path   = \"path/to/install_file.bin\"",
      "",
      "}",
      "",
      "resource \"google_compute_instance\" \"vm\" {",
      "    name = \"vm\"",
      "    ...",
      "    ",
      "    provisioner \"remote-exec\" {",
      "        inline = [",
      "                \"wget '${data.google_storage_object_signed_url.artifact.signed_url}' -O install_file.bin\",",
      "                \"chmod +x install_file.bin\",",
      "                \"./install_file.bin\"",
      "                ]",
      "     }",
      "}"
    ]
  },
  "google-data-storage_bucket_object": {
    "description": "Defines storage_bucket_object",
    "prefix": "tf-google-data-storage_bucket_object",
    "body": [
      "data \"google_storage_bucket_object\" \"picture\" {",
      "  name   = \"folder/butterfly01.jpg\"",
      "  bucket = \"image-store\"",
      "}"
    ]
  },
  "google-resource-access_context_manager_access_level": {
    "description": "Defines access_context_manager_access_level",
    "prefix": "tf-google-resource-access_context_manager_access_level",
    "body": [
      "resource \"google_access_context_manager_access_level\" \"access-level\" {",
      "  parent      = \"accessPolicies/${google_access_context_manager_access_policy.test-access.name}\"",
      "  name        = \"accessPolicies/${google_access_context_manager_access_policy.test-access.name}/accessLevels/chromeos_no_lock\"",
      "  title       = \"chromeos_no_lock\"",
      "  basic {",
      "    conditions {",
      "      device_policy {",
      "        require_screen_lock = false",
      "        os_constraints {",
      "          os_type = \"DESKTOP_CHROME_OS\"",
      "        }",
      "      }",
      "    }",
      "  }",
      "}",
      "",
      "resource \"google_access_context_manager_access_policy\" \"access-policy\" {",
      "  parent = \"organizations/123456789\"",
      "  title  = \"my policy\"",
      "}"
    ]
  },
  "google-resource-access_context_manager_access_policy": {
    "description": "Defines access_context_manager_access_policy",
    "prefix": "tf-google-resource-access_context_manager_access_policy",
    "body": [
      "resource \"google_access_context_manager_access_policy\" \"access-policy\" {",
      "  parent = \"organizations/123456789\"",
      "  title  = \"my policy\"",
      "}"
    ]
  },
  "google-resource-access_context_manager_service_perimeter": {
    "description": "Defines access_context_manager_service_perimeter",
    "prefix": "tf-google-resource-access_context_manager_service_perimeter",
    "body": [
      "resource \"google_access_context_manager_service_perimeter\" \"service-perimeter\" {",
      "  parent      = \"accessPolicies/${google_access_context_manager_access_policy.test-access.name}\"",
      "  name        = \"accessPolicies/${google_access_context_manager_access_policy.test-access.name}/servicePerimeters/restrict_all\"",
      "  title       = \"restrict_all\"",
      "  status {",
      "    restricted_services = [\"storage.googleapis.com\"]",
      "  }",
      "}",
      "",
      "resource \"google_access_context_manager_access_level\" \"access-level\" {",
      "  parent      = \"accessPolicies/${google_access_context_manager_access_policy.test-access.name}\"",
      "  name        = \"accessPolicies/${google_access_context_manager_access_policy.test-access.name}/accessLevels/chromeos_no_lock\"",
      "  title       = \"chromeos_no_lock\"",
      "  basic {",
      "    conditions {",
      "      device_policy {",
      "        require_screen_lock = false",
      "        os_constraints {",
      "          os_type = \"DESKTOP_CHROME_OS\"",
      "        }",
      "      }",
      "    }",
      "  }",
      "}",
      "",
      "resource \"google_access_context_manager_access_policy\" \"access-policy\" {",
      "  parent = \"organizations/123456789\"",
      "  title  = \"my policy\"",
      "}"
    ]
  },
  "google-resource-app_engine_application": {
    "description": "Defines app_engine_application",
    "prefix": "tf-google-resource-app_engine_application",
    "body": [
      "resource \"google_project\" \"my_project\" {",
      "  name       = \"My Project\"",
      "  project_id = \"your-project-id\"",
      "  org_id     = \"1234567\"",
      "}",
      "",
      "resource \"google_app_engine_application\" \"app\" {",
      "  project     = \"${google_project.my_project.project_id}\"",
      "  location_id = \"us-central\"",
      "}"
    ]
  },
  "google-resource-app_engine_firewall_rule": {
    "description": "Defines app_engine_firewall_rule",
    "prefix": "tf-google-resource-app_engine_firewall_rule",
    "body": [
      "resource \"google_project\" \"my_project\" {",
      "  name       = \"tf-test-project\"",
      "  project_id = \"test-project\"",
      "  org_id     = \"123456789\"",
      "}",
      "",
      "resource \"google_app_engine_application\" \"app\" {",
      "  project     = \"${google_project.my_project.project_id}\"",
      "  location_id = \"us-central\"",
      "}",
      "",
      "resource \"google_app_engine_firewall_rule\" \"rule\" {",
      "  project = \"${google_app_engine_application.app.project}\"",
      "  priority = 1000",
      "  action = \"ALLOW\"",
      "  source_range = \"*\"",
      "}"
    ]
  },
  "google-resource-bigquery_dataset": {
    "description": "Defines bigquery_dataset",
    "prefix": "tf-google-resource-bigquery_dataset",
    "body": [
      "resource \"google_bigquery_dataset\" \"default\" {",
      "  dataset_id                  = \"foo\"",
      "  friendly_name               = \"test\"",
      "  description                 = \"This is a test description\"",
      "  location                    = \"EU\"",
      "  default_table_expiration_ms = 3600000",
      "",
      "  labels = {",
      "    env = \"default\"",
      "  }",
      "",
      "  access {",
      "    role   = \"READER\"",
      "    domain = \"example.com\"",
      "  }",
      "  access {",
      "    role           = \"WRITER\"",
      "    group_by_email = \"writers@example.com\"",
      "  }",
      "}"
    ]
  },
  "google-resource-bigquery_table": {
    "description": "Defines bigquery_table",
    "prefix": "tf-google-resource-bigquery_table",
    "body": [
      "resource \"google_bigquery_dataset\" \"default\" {",
      "  dataset_id                  = \"foo\"",
      "  friendly_name               = \"test\"",
      "  description                 = \"This is a test description\"",
      "  location                    = \"EU\"",
      "  default_table_expiration_ms = 3600000",
      "",
      "  labels = {",
      "    env = \"default\"",
      "  }",
      "}",
      "",
      "resource \"google_bigquery_table\" \"default\" {",
      "  dataset_id = \"${google_bigquery_dataset.default.dataset_id}\"",
      "  table_id   = \"bar\"",
      "",
      "  time_partitioning {",
      "    type = \"DAY\"",
      "  }",
      "",
      "  labels = {",
      "    env = \"default\"",
      "  }",
      "",
      "  schema = <<EOF",
      "[",
      "  {",
      "    \"name\": \"permalink\",",
      "    \"type\": \"STRING\",",
      "    \"mode\": \"NULLABLE\",",
      "    \"description\": \"The Permalink\"",
      "  },",
      "  {",
      "    \"name\": \"state\",",
      "    \"type\": \"STRING\",",
      "    \"mode\": \"NULLABLE\",",
      "    \"description\": \"State where the head office is located\"",
      "  }",
      "]",
      "EOF",
      "}",
      "",
      "resource \"google_bigquery_table\" \"sheet\" {",
      "  dataset_id = \"${google_bigquery_dataset.default.dataset_id}\"",
      "  table_id   = \"scheet\"",
      "",
      "  external_data_configuration {",
      "    autodetect    = true",
      "    source_format = \"GOOGLE_SHEETS\"",
      "",
      "    google_sheets_options {",
      "      skip_leading_rows = 1",
      "    }",
      "",
      "    source_uris = [",
      "      \"https://docs.google.com/spreadsheets/d/123456789012345\",",
      "    ]",
      "  }",
      "}"
    ]
  },
  "google-resource-bigtable_instance": {
    "description": "Defines bigtable_instance",
    "prefix": "tf-google-resource-bigtable_instance",
    "body": [
      "resource \"google_bigtable_instance\" \"production-instance\" {",
      "  name         = \"tf-instance\"",
      "",
      "  cluster {",
      "    cluster_id   = \"tf-instance-cluster\"",
      "    zone         = \"us-central1-b\"",
      "    num_nodes    = 3",
      "    storage_type = \"HDD\"",
      "  }",
      "}"
    ]
  },
  "google-resource-bigtable_instance_iam": {
    "description": "Defines bigtable_instance_iam",
    "prefix": "tf-google-resource-bigtable_instance_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role    = \"roles/editor\"",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_bigtable_instance_iam_policy\" \"editor\" {",
      "  project      = \"your-project\"",
      "  instance      = \"your-bigtable-instance\"",
      "  policy_data  = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-resource-bigtable_table": {
    "description": "Defines bigtable_table",
    "prefix": "tf-google-resource-bigtable_table",
    "body": [
      "resource \"google_bigtable_instance\" \"instance\" {",
      "  name         = \"tf-instance\"",
      "  cluster_id   = \"tf-instance-cluster\"",
      "  zone         = \"us-central1-b\"",
      "  num_nodes    = 3",
      "  storage_type = \"HDD\"",
      "}",
      "",
      "resource \"google_bigtable_table\" \"table\" {",
      "  name          = \"tf-table\"",
      "  instance_name = \"${google_bigtable_instance.instance.name}\"",
      "  split_keys    = [\"a\", \"b\", \"c\"]",
      "}"
    ]
  },
  "google-resource-binary_authorization_attestor": {
    "description": "Defines binary_authorization_attestor",
    "prefix": "tf-google-resource-binary_authorization_attestor",
    "body": [
      "resource \"google_binary_authorization_attestor\" \"attestor\" {",
      "  name = \"test-attestor\"",
      "  attestation_authority_note {",
      "    note_reference = \"${google_container_analysis_note.note.name}\"",
      "    public_keys {",
      "      ascii_armored_pgp_public_key = <<EOF",
      "mQENBFtP0doBCADF+joTiXWKVuP8kJt3fgpBSjT9h8ezMfKA4aXZctYLx5wslWQl",
      "bB7Iu2ezkECNzoEeU7WxUe8a61pMCh9cisS9H5mB2K2uM4Jnf8tgFeXn3akJDVo0",
      "oR1IC+Dp9mXbRSK3MAvKkOwWlG99sx3uEdvmeBRHBOO+grchLx24EThXFOyP9Fk6",
      "V39j6xMjw4aggLD15B4V0v9JqBDdJiIYFzszZDL6pJwZrzcP0z8JO4rTZd+f64bD",
      "Mpj52j/pQfA8lZHOaAgb1OrthLdMrBAjoDjArV4Ek7vSbrcgYWcI6BhsQrFoxKdX",
      "83TZKai55ZCfCLIskwUIzA1NLVwyzCS+fSN/ABEBAAG0KCJUZXN0IEF0dGVzdG9y",
      "IiA8ZGFuYWhvZmZtYW5AZ29vZ2xlLmNvbT6JAU4EEwEIADgWIQRfWkqHt6hpTA1L",
      "uY060eeM4dc66AUCW0/R2gIbLwULCQgHAgYVCgkICwIEFgIDAQIeAQIXgAAKCRA6",
      "0eeM4dc66HdpCAC4ot3b0OyxPb0Ip+WT2U0PbpTBPJklesuwpIrM4Lh0N+1nVRLC",
      "51WSmVbM8BiAFhLbN9LpdHhds1kUrHF7+wWAjdR8sqAj9otc6HGRM/3qfa2qgh+U",
      "WTEk/3us/rYSi7T7TkMuutRMIa1IkR13uKiW56csEMnbOQpn9rDqwIr5R8nlZP5h",
      "MAU9vdm1DIv567meMqTaVZgR3w7bck2P49AO8lO5ERFpVkErtu/98y+rUy9d789l",
      "+OPuS1NGnxI1YKsNaWJF4uJVuvQuZ1twrhCbGNtVorO2U12+cEq+YtUxj7kmdOC1",
      "qoIRW6y0+UlAc+MbqfL0ziHDOAmcqz1GnROg",
      "=6Bvm",
      "EOF",
      "    }",
      "  }",
      "}",
      "",
      "resource \"google_container_analysis_note\" \"note\" {",
      "  name = \"test-attestor-note\"",
      "  attestation_authority {",
      "    hint {",
      "      human_readable_name = \"Attestor Note\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "google-resource-binary_authorization_policy": {
    "description": "Defines binary_authorization_policy",
    "prefix": "tf-google-resource-binary_authorization_policy",
    "body": [
      "resource \"google_binary_authorization_policy\" \"policy\" {",
      "  admission_whitelist_patterns {",
      "    name_pattern= \"gcr.io/google_containers/*\"",
      "  }",
      "",
      "  default_admission_rule {",
      "    evaluation_mode = \"ALWAYS_ALLOW\"",
      "    enforcement_mode = \"ENFORCED_BLOCK_AND_AUDIT_LOG\"",
      "  }",
      "",
      "  cluster_admission_rules {",
      "    cluster = \"us-central1-a.prod-cluster\"",
      "    evaluation_mode = \"REQUIRE_ATTESTATION\"",
      "    enforcement_mode = \"ENFORCED_BLOCK_AND_AUDIT_LOG\"",
      "    require_attestations_by = [\"${google_binary_authorization_attestor.attestor.name}\"]",
      "  }",
      "}",
      "",
      "resource \"google_container_analysis_note\" \"note\" {",
      "  name = \"test-attestor-note\"",
      "  attestation_authority {",
      "    hint {",
      "      human_readable_name = \"My attestor\"",
      "    }",
      "  }",
      "}",
      "",
      "resource \"google_binary_authorization_attestor\" \"attestor\" {",
      "  name = \"test-attestor\"",
      "  attestation_authority_note {",
      "    note_reference = \"${google_container_analysis_note.note.name}\"",
      "  }",
      "}"
    ]
  },
  "google-resource-cloud_build_trigger": {
    "description": "Defines cloud_build_trigger",
    "prefix": "tf-google-resource-cloud_build_trigger",
    "body": [
      "resource \"google_cloudbuild_trigger\" \"filename-trigger\" {",
      "  trigger_template {",
      "    branch_name = \"master\"",
      "    repo_name   = \"my-repo\"",
      "  }",
      "",
      "  substitutions = {",
      "    _FOO = \"bar\"",
      "    _BAZ = \"qux\"",
      "  }",
      "",
      "  filename = \"cloudbuild.yaml\"",
      "}"
    ]
  },
  "google-resource-cloud_scheduler_job": {
    "description": "Defines cloud_scheduler_job",
    "prefix": "tf-google-resource-cloud_scheduler_job",
    "body": [
      "resource \"google_pubsub_topic\" \"topic\" {",
      "  name = \"job-topic\"",
      "}",
      "",
      "resource \"google_cloud_scheduler_job\" \"job\" {",
      "  name     = \"test-job\"",
      "  description = \"test job\"",
      "  schedule = \"*/2 * * * *\"",
      "",
      "  pubsub_target {",
      "    topic_name = \"${google_pubsub_topic.topic.id}\"",
      "    data = \"${base64encode(\"test\")}\"",
      "  }",
      "}"
    ]
  },
  "google-resource-cloudfunctions_function": {
    "description": "Defines cloudfunctions_function",
    "prefix": "tf-google-resource-cloudfunctions_function",
    "body": [
      "resource \"google_storage_bucket\" \"bucket\" {",
      "  name = \"test-bucket\"",
      "}",
      "",
      "resource \"google_storage_bucket_object\" \"archive\" {",
      "  name   = \"index.zip\"",
      "  bucket = \"${google_storage_bucket.bucket.name}\"",
      "  source = \"./path/to/zip/file/which/contains/code\"",
      "}",
      "",
      "resource \"google_cloudfunctions_function\" \"function\" {",
      "  name                  = \"function-test\"",
      "  description           = \"My function\"",
      "  runtime               = \"nodejs10\"",
      "",
      "  available_memory_mb   = 128",
      "  source_archive_bucket = \"${google_storage_bucket.bucket.name}\"",
      "  source_archive_object = \"${google_storage_bucket_object.archive.name}\"",
      "  trigger_http          = true",
      "  timeout               = 60",
      "  entry_point           = \"helloGET\"",
      "  labels = {",
      "    my-label = \"my-label-value\"",
      "  }",
      "  ",
      "  environment_variables = {",
      "    MY_ENV_VAR = \"my-env-var-value\"",
      "  }",
      "}"
    ]
  },
  "google-resource-cloudiot_registry": {
    "description": "Defines cloudiot_registry",
    "prefix": "tf-google-resource-cloudiot_registry",
    "body": [
      "resource \"google_pubsub_topic\" \"default-devicestatus\" {",
      "  name = \"default-devicestatus\"",
      "}",
      "",
      "resource \"google_pubsub_topic\" \"default-telemetry\" {",
      "  name = \"default-telemetry\"",
      "}",
      "",
      "resource \"google_cloudiot_registry\" \"default-registry\" {",
      "  name = \"default-registry\"",
      "",
      "  event_notification_config = {",
      "    pubsub_topic_name = \"${google_pubsub_topic.default-telemetry.id}\"",
      "  }",
      "",
      "  state_notification_config = {",
      "    pubsub_topic_name = \"${google_pubsub_topic.default-devicestatus.id}\"",
      "  }",
      "",
      "  http_config = {",
      "    http_enabled_state = \"HTTP_ENABLED\"",
      "  }",
      "",
      "  mqtt_config = {",
      "    mqtt_enabled_state = \"MQTT_ENABLED\"",
      "  }",
      "",
      "  credentials = [",
      "    {",
      "      public_key_certificate = {",
      "        format      = \"X509_CERTIFICATE_PEM\"",
      "        certificate = \"${file(\"rsa_cert.pem\")}\"",
      "      }",
      "    },",
      "  ]",
      "}"
    ]
  },
  "google-resource-composer_environment": {
    "description": "Defines composer_environment",
    "prefix": "tf-google-resource-composer_environment",
    "body": [
      "resource \"google_composer_environment\" \"test\" {",
      "  name   = \"my-composer-env\"",
      "  region = \"us-central1\"",
      "}"
    ]
  },
  "google-resource-compute_address": {
    "description": "Defines compute_address",
    "prefix": "tf-google-resource-compute_address",
    "body": [
      "resource \"google_compute_address\" \"ip_address\" {",
      "  name = \"my-address\"",
      "}"
    ]
  },
  "google-resource-compute_attached_disk": {
    "description": "Defines compute_attached_disk",
    "prefix": "tf-google-resource-compute_attached_disk",
    "body": [
      "resource \"google_compute_attached_disk\" \"default\" {",
      "  disk = \"${google_compute_disk.default.self_link}\"",
      "  instance = \"${google_compute_instance.default.self_link}\"",
      "}",
      "",
      "resource \"google_compute_instance\" \"default\" {",
      "  name         = \"attached-disk-instance\"",
      "  machine_type = \"n1-standard-1\"",
      "  zone         = \"us-west1-a\"",
      "",
      "",
      "  boot_disk {",
      "    initialize_params {",
      "      image = \"debian-cloud/debian-9\"",
      "    }",
      "  }",
      "",
      "  network_interface {",
      "    network = \"default\"",
      "  }",
      "",
      "  lifecycle {",
      "    ignore_changes = [\"attached_disk\"]",
      "  }",
      "}"
    ]
  },
  "google-resource-compute_autoscaler": {
    "description": "Defines compute_autoscaler",
    "prefix": "tf-google-resource-compute_autoscaler",
    "body": [
      "resource \"google_compute_autoscaler\" \"default\" {",
      "  provider = \"google-beta\"",
      "",
      "  name   = \"my-autoscaler\"",
      "  zone   = \"us-central1-f\"",
      "  target = \"${google_compute_instance_group_manager.default.self_link}\"",
      "",
      "  autoscaling_policy {",
      "    max_replicas    = 5",
      "    min_replicas    = 1",
      "    cooldown_period = 60",
      "",
      "    metric {",
      "      name                       = \"pubsub.googleapis.com/subscription/num_undelivered_messages\"",
      "      filter                     = \"resource.type = pubsub_subscription AND resource.label.subscription_id = our-subscription\"",
      "      single_instance_assignment = 65535",
      "    }",
      "  }",
      "}",
      "",
      "resource \"google_compute_instance_template\" \"default\" {",
      "  provider = \"google-beta\"",
      "",
      "  name           = \"my-instance-template\"",
      "  machine_type   = \"n1-standard-1\"",
      "  can_ip_forward = false",
      "",
      "  tags = [\"foo\", \"bar\"]",
      "",
      "  disk {",
      "    source_image = \"${data.google_compute_image.debian_9.self_link}\"",
      "  }",
      "",
      "  network_interface {",
      "    network = \"default\"",
      "  }",
      "",
      "  metadata = {",
      "    foo = \"bar\"",
      "  }",
      "",
      "  service_account {",
      "    scopes = [\"userinfo-email\", \"compute-ro\", \"storage-ro\"]",
      "  }",
      "}",
      "",
      "resource \"google_compute_target_pool\" \"default\" {",
      "  provider = \"google-beta\"",
      "",
      "  name = \"my-target-pool\"",
      "}",
      "",
      "resource \"google_compute_instance_group_manager\" \"default\" {",
      "  provider = \"google-beta\"",
      "",
      "  name = \"my-igm\"",
      "  zone = \"us-central1-f\"",
      "",
      "  version {",
      "    instance_template  = \"${google_compute_instance_template.default.self_link}\"",
      "    name               = \"primary\"",
      "  }",
      "",
      "  target_pools       = [\"${google_compute_target_pool.default.self_link}\"]",
      "  base_instance_name = \"autoscaler-sample\"",
      "}",
      "",
      "data \"google_compute_image\" \"debian_9\" {",
      "  provider = \"google-beta\"",
      "",
      "  family  = \"debian-9\"",
      "  project = \"debian-cloud\"",
      "}",
      "",
      "provider \"google-beta\"{",
      "  region = \"us-central1\"",
      "  zone   = \"us-central1-a\"",
      "}"
    ]
  },
  "google-resource-compute_backend_bucket": {
    "description": "Defines compute_backend_bucket",
    "prefix": "tf-google-resource-compute_backend_bucket",
    "body": [
      "resource \"google_compute_backend_bucket\" \"image_backend\" {",
      "  name        = \"image-backend-bucket\"",
      "  description = \"Contains beautiful images\"",
      "  bucket_name = \"${google_storage_bucket.image_bucket.name}\"",
      "  enable_cdn  = true",
      "}",
      "",
      "resource \"google_storage_bucket\" \"image_bucket\" {",
      "  name     = \"image-store-bucket\"",
      "  location = \"EU\"",
      "}"
    ]
  },
  "google-resource-compute_backend_bucket_signed_url_key": {
    "description": "Defines compute_backend_bucket_signed_url_key",
    "prefix": "tf-google-resource-compute_backend_bucket_signed_url_key",
    "body": [
      "resource \"google_compute_backend_bucket_signed_url_key\" \"backend_key\" {",
      "  name           = \"test-key\"",
      "  key_value      = \"pPsVemX8GM46QVeezid6Rw==\"",
      "  backend_bucket = \"${google_compute_backend_bucket.test_backend.name}\"",
      "}",
      "",
      "resource \"google_compute_backend_bucket\" \"test_backend\" {",
      "  name        = \"test-signed-backend-bucket\"",
      "  description = \"Contains beautiful images\"",
      "  bucket_name = \"${google_storage_bucket.bucket.name}\"",
      "  enable_cdn  = true",
      "}",
      "",
      "resource \"google_storage_bucket\" \"bucket\" {",
      "  name     = \"test-storage-bucket\"",
      "  location = \"EU\"",
      "}"
    ]
  },
  "google-resource-compute_backend_service": {
    "description": "Defines compute_backend_service",
    "prefix": "tf-google-resource-compute_backend_service",
    "body": [
      "resource \"google_compute_backend_service\" \"default\" {",
      "  name          = \"backend-service\"",
      "  health_checks = [\"${google_compute_http_health_check.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_http_health_check\" \"default\" {",
      "  name               = \"health-check\"",
      "  request_path       = \"/\"",
      "  check_interval_sec = 1",
      "  timeout_sec        = 1",
      "}"
    ]
  },
  "google-resource-compute_backend_service_signed_url_key": {
    "description": "Defines compute_backend_service_signed_url_key",
    "prefix": "tf-google-resource-compute_backend_service_signed_url_key",
    "body": [
      "resource \"google_compute_backend_service_signed_url_key\" \"backend_key\" {",
      "  name           = \"test-key\"",
      "  key_value      = \"pPsVemX8GM46QVeezid6Rw==\"",
      "  backend_service = \"${google_compute_backend_service.example_backend.name}\"",
      "}",
      "",
      "resource \"google_compute_backend_service\" \"example_backend\" {",
      "  name        = \"my-backend-service\"",
      "  description = \"Our company website\"",
      "  port_name   = \"http\"",
      "  protocol    = \"HTTP\"",
      "  timeout_sec = 10",
      "  enable_cdn  = true",
      "",
      "  backend {",
      "    group = \"${google_compute_instance_group_manager.webservers.instance_group}\"",
      "  }",
      "",
      "  health_checks = [\"${google_compute_http_health_check.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_instance_group_manager\" \"webservers\" {",
      "  name               = \"my-webservers\"",
      "  instance_template  = \"${google_compute_instance_template.webserver.self_link}\"",
      "  base_instance_name = \"webserver\"",
      "  zone               = \"us-central1-f\"",
      "  target_size        = 1",
      "}",
      "",
      "resource \"google_compute_instance_template\" \"webserver\" {",
      "  name         = \"standard-webserver\"",
      "  machine_type = \"n1-standard-1\"",
      "",
      "  network_interface {",
      "    network = \"default\"",
      "  }",
      "",
      "  disk {",
      "    source_image = \"debian-cloud/debian-9\"",
      "    auto_delete  = true",
      "    boot         = true",
      "  }",
      "}",
      "",
      "resource \"google_compute_http_health_check\" \"default\" {",
      "  name               = \"test\"",
      "  request_path       = \"/\"",
      "  check_interval_sec = 1",
      "  timeout_sec        = 1",
      "}"
    ]
  },
  "google-resource-compute_disk": {
    "description": "Defines compute_disk",
    "prefix": "tf-google-resource-compute_disk",
    "body": [
      "resource \"google_compute_disk\" \"default\" {",
      "  name  = \"test-disk\"",
      "  type  = \"pd-ssd\"",
      "  zone  = \"us-central1-a\"",
      "  image = \"debian-8-jessie-v20170523\"",
      "  labels = {",
      "    environment = \"dev\"",
      "  }",
      "  physical_block_size_bytes = 4096",
      "}"
    ]
  },
  "google-resource-compute_firewall": {
    "description": "Defines compute_firewall",
    "prefix": "tf-google-resource-compute_firewall",
    "body": [
      "resource \"google_compute_firewall\" \"default\" {",
      "  name    = \"test-firewall\"",
      "  network = \"${google_compute_network.default.name}\"",
      "",
      "  allow {",
      "    protocol = \"icmp\"",
      "  }",
      "",
      "  allow {",
      "    protocol = \"tcp\"",
      "    ports    = [\"80\", \"8080\", \"1000-2000\"]",
      "  }",
      "",
      "  source_tags = [\"web\"]",
      "}",
      "",
      "resource \"google_compute_network\" \"default\" {",
      "  name = \"test-network\"",
      "}"
    ]
  },
  "google-resource-compute_forwarding_rule": {
    "description": "Defines compute_forwarding_rule",
    "prefix": "tf-google-resource-compute_forwarding_rule",
    "body": [
      "resource \"google_compute_forwarding_rule\" \"default\" {",
      "  name       = \"website-forwarding-rule\"",
      "  target     = \"${google_compute_target_pool.default.self_link}\"",
      "  port_range = \"80\"",
      "}",
      "",
      "resource \"google_compute_target_pool\" \"default\" {",
      "  name = \"website-target-pool\"",
      "}"
    ]
  },
  "google-resource-compute_global_address": {
    "description": "Defines compute_global_address",
    "prefix": "tf-google-resource-compute_global_address",
    "body": [
      "resource \"google_compute_global_address\" \"default\" {",
      "  name = \"global-appserver-ip\"",
      "}"
    ]
  },
  "google-resource-compute_global_forwarding_rule": {
    "description": "Defines compute_global_forwarding_rule",
    "prefix": "tf-google-resource-compute_global_forwarding_rule",
    "body": [
      "resource \"google_compute_global_forwarding_rule\" \"default\" {",
      "  name       = \"global-rule\"",
      "  target     = \"${google_compute_target_http_proxy.default.self_link}\"",
      "  port_range = \"80\"",
      "}",
      "",
      "resource \"google_compute_target_http_proxy\" \"default\" {",
      "  name        = \"target-proxy\"",
      "  description = \"a description\"",
      "  url_map     = \"${google_compute_url_map.default.self_link}\"",
      "}",
      "",
      "resource \"google_compute_url_map\" \"default\" {",
      "  name            = \"url-map-target-proxy\"",
      "  description     = \"a description\"",
      "  default_service = \"${google_compute_backend_service.default.self_link}\"",
      "",
      "  host_rule {",
      "    hosts        = [\"mysite.com\"]",
      "    path_matcher = \"allpaths\"",
      "  }",
      "",
      "  path_matcher {",
      "    name            = \"allpaths\"",
      "    default_service = \"${google_compute_backend_service.default.self_link}\"",
      "",
      "    path_rule {",
      "      paths   = [\"/*\"]",
      "      service = \"${google_compute_backend_service.default.self_link}\"",
      "    }",
      "  }",
      "}",
      "",
      "resource \"google_compute_backend_service\" \"default\" {",
      "  name        = \"backend\"",
      "  port_name   = \"http\"",
      "  protocol    = \"HTTP\"",
      "  timeout_sec = 10",
      "",
      "  health_checks = [\"${google_compute_http_health_check.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_http_health_check\" \"default\" {",
      "  name               = \"check-backend\"",
      "  request_path       = \"/\"",
      "  check_interval_sec = 1",
      "  timeout_sec        = 1",
      "}"
    ]
  },
  "google-resource-compute_health_check": {
    "description": "Defines compute_health_check",
    "prefix": "tf-google-resource-compute_health_check",
    "body": [
      "resource \"google_compute_health_check\" \"internal-health-check\" {",
      " name = \"internal-service-health-check\"",
      "",
      " timeout_sec        = 1",
      " check_interval_sec = 1",
      "",
      " tcp_health_check {",
      "   port = \"80\"",
      " }",
      "}"
    ]
  },
  "google-resource-compute_http_health_check": {
    "description": "Defines compute_http_health_check",
    "prefix": "tf-google-resource-compute_http_health_check",
    "body": [
      "resource \"google_compute_http_health_check\" \"default\" {",
      "  name         = \"authentication-health-check\"",
      "  request_path = \"/health_check\"",
      "",
      "  timeout_sec        = 1",
      "  check_interval_sec = 1",
      "}"
    ]
  },
  "google-resource-compute_https_health_check": {
    "description": "Defines compute_https_health_check",
    "prefix": "tf-google-resource-compute_https_health_check",
    "body": [
      "resource \"google_compute_https_health_check\" \"default\" {",
      "  name         = \"authentication-health-check\"",
      "  request_path = \"/health_check\"",
      "",
      "  timeout_sec        = 1",
      "  check_interval_sec = 1",
      "}"
    ]
  },
  "google-resource-compute_image": {
    "description": "Defines compute_image",
    "prefix": "tf-google-resource-compute_image",
    "body": [
      "resource \"google_compute_image\" \"example\" {",
      "  name = \"example-image\"",
      "",
      "  raw_disk {",
      "    source = \"https://storage.googleapis.com/bosh-cpi-artifacts/bosh-stemcell-3262.4-google-kvm-ubuntu-trusty-go_agent-raw.tar.gz\"",
      "  }",
      "}"
    ]
  },
  "google-resource-compute_instance": {
    "description": "Defines compute_instance",
    "prefix": "tf-google-resource-compute_instance",
    "body": [
      "resource \"google_compute_instance\" \"default\" {",
      "  name         = \"test\"",
      "  machine_type = \"n1-standard-1\"",
      "  zone         = \"us-central1-a\"",
      "",
      "  tags = [\"foo\", \"bar\"]",
      "",
      "  boot_disk {",
      "    initialize_params {",
      "      image = \"debian-cloud/debian-9\"",
      "    }",
      "  }",
      "",
      "  // Local SSD disk",
      "  scratch_disk {",
      "  }",
      "",
      "  network_interface {",
      "    network = \"default\"",
      "",
      "    access_config {",
      "      // Ephemeral IP",
      "    }",
      "  }",
      "",
      "  metadata = {",
      "    foo = \"bar\"",
      "  }",
      "",
      "  metadata_startup_script = \"echo hi > /test.txt\"",
      "",
      "  service_account {",
      "    scopes = [\"userinfo-email\", \"compute-ro\", \"storage-ro\"]",
      "  }",
      "}"
    ]
  },
  "google-resource-compute_instance_from_template": {
    "description": "Defines compute_instance_from_template",
    "prefix": "tf-google-resource-compute_instance_from_template",
    "body": [
      "resource \"google_compute_instance_template\" \"tpl\" {",
      "  name = \"template\"",
      "  machine_type = \"n1-standard-1\"",
      "",
      "  disk {",
      "    source_image = \"debian-cloud/debian-9\"",
      "    auto_delete = true",
      "    disk_size_gb = 100",
      "    boot = true",
      "  }",
      "",
      "  network_interface {",
      "    network = \"default\"",
      "  }",
      "",
      "  metadata = {",
      "    foo = \"bar\"",
      "  }",
      "",
      "  can_ip_forward = true",
      "}",
      "",
      "resource \"google_compute_instance_from_template\" \"tpl\" {",
      "  name           = \"instance-from-template\"",
      "  zone           = \"us-central1-a\"",
      "",
      "  source_instance_template = \"${google_compute_instance_template.tpl.self_link}\"",
      "",
      "  // Override fields from instance template",
      "  can_ip_forward = false",
      "  labels = {",
      "    my_key       = \"my_value\"",
      "  }",
      "}"
    ]
  },
  "google-resource-compute_instance_group": {
    "description": "Defines compute_instance_group",
    "prefix": "tf-google-resource-compute_instance_group",
    "body": [
      "resource \"google_compute_instance_group\" \"test\" {",
      "  name        = \"terraform-test\"",
      "  description = \"Terraform test instance group\"",
      "  zone        = \"us-central1-a\"",
      "  network     = \"${google_compute_network.default.self_link}\"",
      "}"
    ]
  },
  "google-resource-compute_instance_group_manager": {
    "description": "Defines compute_instance_group_manager",
    "prefix": "tf-google-resource-compute_instance_group_manager",
    "body": [
      "resource \"google_compute_health_check\" \"autohealing\" {",
      "  name                = \"autohealing-health-check\"",
      "  check_interval_sec  = 5",
      "  timeout_sec         = 5",
      "  healthy_threshold   = 2",
      "  unhealthy_threshold = 10                         # 50 seconds",
      "",
      "  http_health_check {",
      "    request_path = \"/healthz\"",
      "    port         = \"8080\"",
      "  }",
      "}",
      "",
      "resource \"google_compute_instance_group_manager\" \"appserver\" {",
      "  name = \"appserver-igm\"",
      "",
      "  base_instance_name = \"app\"",
      "  instance_template  = \"${google_compute_instance_template.appserver.self_link}\"",
      "  update_strategy    = \"NONE\"",
      "  zone               = \"us-central1-a\"",
      "",
      "  target_pools = [\"${google_compute_target_pool.appserver.self_link}\"]",
      "  target_size  = 2",
      "",
      "  named_port {",
      "    name = \"customHTTP\"",
      "    port = 8888",
      "  }",
      "",
      "  auto_healing_policies {",
      "    health_check      = \"${google_compute_health_check.autohealing.self_link}\"",
      "    initial_delay_sec = 300",
      "  }",
      "}"
    ]
  },
  "google-resource-compute_instance_iam": {
    "description": "Defines compute_instance_iam",
    "prefix": "tf-google-resource-compute_instance_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/compute.osLogin\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_compute_instance_iam_policy\" \"instance\" {",
      "  instance_name  = \"your-instance-name\"",
      "  policy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-resource-compute_instance_template": {
    "description": "Defines compute_instance_template",
    "prefix": "tf-google-resource-compute_instance_template",
    "body": [
      "resource \"google_compute_instance_template\" \"default\" {",
      "  name        = \"appserver-template\"",
      "  description = \"This template is used to create app server instances.\"",
      "",
      "  tags = [\"foo\", \"bar\"]",
      "",
      "  labels = {",
      "    environment = \"dev\"",
      "  }",
      "",
      "  instance_description = \"description assigned to instances\"",
      "  machine_type         = \"n1-standard-1\"",
      "  can_ip_forward       = false",
      "",
      "  scheduling {",
      "    automatic_restart   = true",
      "    on_host_maintenance = \"MIGRATE\"",
      "  }",
      "",
      "  // Create a new boot disk from an image",
      "  disk {",
      "    source_image = \"debian-cloud/debian-9\"",
      "    auto_delete  = true",
      "    boot         = true",
      "  }",
      "",
      "  // Use an existing disk resource",
      "  disk {",
      "    // Instance Templates reference disks by name, not self link",
      "    source      = \"${google_compute_disk.foobar.name}\"",
      "    auto_delete = false",
      "    boot        = false",
      "  }",
      "",
      "  network_interface {",
      "    network = \"default\"",
      "  }",
      "",
      "  metadata = {",
      "    foo = \"bar\"",
      "  }",
      "",
      "  service_account {",
      "    scopes = [\"userinfo-email\", \"compute-ro\", \"storage-ro\"]",
      "  }",
      "}",
      "",
      "data \"google_compute_image\" \"my_image\" {",
      "  family  = \"debian-9\"",
      "  project = \"debian-cloud\"",
      "}",
      "",
      "resource \"google_compute_disk\" \"foobar\" {",
      "  name  = \"existing-disk\"",
      "  image = \"${data.google_compute_image.my_image.self_link}\"",
      "  size  = 10",
      "  type  = \"pd-ssd\"",
      "  zone  = \"us-central1-a\"",
      "}"
    ]
  },
  "google-resource-compute_interconnect_attachment": {
    "description": "Defines compute_interconnect_attachment",
    "prefix": "tf-google-resource-compute_interconnect_attachment",
    "body": [
      "resource \"google_compute_interconnect_attachment\" \"on_prem\" {",
      "  name         = \"on-prem-attachment\"",
      "  interconnect = \"my-interconnect-id\"",
      "  router       = \"${google_compute_router.foobar.self_link}\"",
      "}",
      "",
      "resource \"google_compute_router\" \"foobar\" {",
      "  name    = \"router\"",
      "  network = \"${google_compute_network.foobar.name}\"",
      "}"
    ]
  },
  "google-resource-compute_network": {
    "description": "Defines compute_network",
    "prefix": "tf-google-resource-compute_network",
    "body": [
      "resource \"google_compute_network\" \"vpc_network\" {",
      "  name = \"vpc-network\"",
      "}"
    ]
  },
  "google-resource-compute_network_endpoint": {
    "description": "Defines compute_network_endpoint",
    "prefix": "tf-google-resource-compute_network_endpoint",
    "body": [
      "resource \"google_compute_network_endpoint\" \"default-endpoint {",
      "  network_endpoint_group = \"${google_compute_network_endpoint_group.neg.name}\"",
      "",
      "  instance    = \"${google_compute_instance.endpoint-instance.name}\"",
      "  port        = \"${google_compute_network_endpoint_group.neg.default_port}\"",
      "  ip_address  = \"${google_compute_instance.endpoint-instance.network_interface.0.network_ip}\"",
      "}",
      "",
      "data \"google_compute_image\" \"my_image\" {",
      "  family  = \"debian-9\"",
      "  project = \"debian-cloud\"",
      "}",
      "",
      "resource \"google_compute_instance\" \"endpoint-instance\" {",
      "  name         =  \"endpoint-instance\"",
      "  machine_type = \"n1-standard-1\"",
      "",
      "  boot_disk {",
      "    initialize_params{",
      "      image = \"${data.google_compute_image.my_image.self_link}\"",
      "    }",
      "  }",
      "",
      "  network_interface {",
      "    subnetwork = \"${google_compute_subnetwork.default.self_link}\"",
      "    access_config { }",
      "  }",
      "}",
      "",
      "resource \"google_compute_network_endpoint_group\" \"group\" {",
      "  name         = \"my-lb-neg\"",
      "  network      = \"${google_compute_network.default.self_link}\"",
      "  subnetwork   = \"${google_compute_subnetwork.default.self_link}\"",
      "  default_port = \"90\"",
      "  zone         = \"us-central1-a\"",
      "}",
      "",
      "resource \"google_compute_network\" \"default\" {",
      "  name = \"neg-network\"",
      "  auto_create_subnetworks = false",
      "}",
      "",
      "resource \"google_compute_subnetwork\" \"default\" {",
      "  name          = \"neg-subnetwork\"",
      "  ip_cidr_range = \"10.0.0.1/16\"",
      "  region        = \"us-central1\"",
      "  network       = \"${google_compute_network.default.self_link}\"",
      "}"
    ]
  },
  "google-resource-compute_network_endpoint_group": {
    "description": "Defines compute_network_endpoint_group",
    "prefix": "tf-google-resource-compute_network_endpoint_group",
    "body": [
      "resource \"google_compute_network_endpoint_group\" \"neg\" {",
      "  name         = \"my-lb-neg\"",
      "  network      = \"${google_compute_network.default.self_link}\"",
      "  subnetwork   = \"${google_compute_subnetwork.default.self_link}\"",
      "  default_port = \"90\"",
      "  zone         = \"us-central1-a\"",
      "}",
      "",
      "resource \"google_compute_network\" \"default\" {",
      "  name = \"neg-network\"",
      "  auto_create_subnetworks = false",
      "}",
      "",
      "resource \"google_compute_subnetwork\" \"default\" {",
      "  name          = \"neg-subnetwork\"",
      "  ip_cidr_range = \"10.0.0.0/16\"",
      "  region        = \"us-central1\"",
      "  network       = \"${google_compute_network.default.self_link}\"",
      "}"
    ]
  },
  "google-resource-compute_network_peering": {
    "description": "Defines compute_network_peering",
    "prefix": "tf-google-resource-compute_network_peering",
    "body": [
      "resource \"google_compute_network_peering\" \"peering1\" {",
      "  name = \"peering1\"",
      "  network = \"${google_compute_network.default.self_link}\"",
      "  peer_network = \"${google_compute_network.other.self_link}\"",
      "}",
      "",
      "resource \"google_compute_network_peering\" \"peering2\" {",
      "  name = \"peering2\"",
      "  network = \"${google_compute_network.other.self_link}\"",
      "  peer_network = \"${google_compute_network.default.self_link}\"",
      "}",
      "",
      "resource \"google_compute_network\" \"default\" {",
      "  name                    = \"foobar\"",
      "  auto_create_subnetworks = \"false\"",
      "}",
      "",
      "resource \"google_compute_network\" \"other\" {",
      "  name                    = \"other\"",
      "  auto_create_subnetworks = \"false\"",
      "}"
    ]
  },
  "google-resource-compute_node_group": {
    "description": "Defines compute_node_group",
    "prefix": "tf-google-resource-compute_node_group",
    "body": [
      "data \"google_compute_node_types\" \"central1a\" {",
      "  zone = \"us-central1-a\"",
      "}",
      "",
      "resource \"google_compute_node_template\" \"soletenant-tmpl\" {",
      "  name = \"soletenant-tmpl\"",
      "  region = \"us-central1\"",
      "  node_type = \"${data.google_compute_node_types.central1a.names[0]}\"",
      "}",
      "",
      "resource \"google_compute_node_group\" \"nodes\" {",
      "  name = \"soletenant-group\"",
      "  zone = \"us-central1-a\"",
      "  description = \"example google_compute_node_group for Terraform Google Provider\"",
      "",
      "  size = 1",
      "  node_template = \"${google_compute_node_template.soletenant-tmpl.self_link}\"",
      "}"
    ]
  },
  "google-resource-compute_node_template": {
    "description": "Defines compute_node_template",
    "prefix": "tf-google-resource-compute_node_template",
    "body": [
      "data \"google_compute_node_types\" \"central1a\" {",
      "  zone = \"us-central1-a\"",
      "}",
      "",
      "resource \"google_compute_node_template\" \"template\" {",
      "  name = \"soletenant-tmpl\"",
      "  region = \"us-central1\"",
      "  node_type = \"${data.google_compute_node_types.central1a.names[0]}\"",
      "}"
    ]
  },
  "google-resource-compute_project_default_network_tier": {
    "description": "Defines compute_project_default_network_tier",
    "prefix": "tf-google-resource-compute_project_default_network_tier",
    "body": [
      "resource \"google_compute_project_default_network_tier\" \"default\" {",
      "  network_tier = \"PREMIUM\"",
      "}"
    ]
  },
  "google-resource-compute_project_metadata": {
    "description": "Defines compute_project_metadata",
    "prefix": "tf-google-resource-compute_project_metadata",
    "body": [
      "resource \"google_compute_project_metadata\" \"default\" {",
      "  metadata = {",
      "    foo  = \"bar\"",
      "    fizz = \"buzz\"",
      "    \"13\" = \"42\"",
      "  }",
      "}"
    ]
  },
  "google-resource-compute_project_metadata_item": {
    "description": "Defines compute_project_metadata_item",
    "prefix": "tf-google-resource-compute_project_metadata_item",
    "body": [
      "resource \"google_compute_project_metadata_item\" \"default\" {",
      "  key = \"my_metadata\"",
      "  value = \"my_value\"",
      "}"
    ]
  },
  "google-resource-compute_region_autoscaler": {
    "description": "Defines compute_region_autoscaler",
    "prefix": "tf-google-resource-compute_region_autoscaler",
    "body": [
      "resource \"google_compute_region_autoscaler\" \"foobar\" {",
      "  provider = \"google-beta\"",
      "",
      "  name   = \"my-region-autoscaler\"",
      "  region = \"us-central1\"",
      "  target = \"${google_compute_region_instance_group_manager.foobar.self_link}\"",
      "",
      "  autoscaling_policy {",
      "    max_replicas    = 5",
      "    min_replicas    = 1",
      "    cooldown_period = 60",
      "",
      "    cpu_utilization {",
      "      target = 0.5",
      "    }",
      "  }",
      "}",
      "",
      "resource \"google_compute_instance_template\" \"foobar\" {",
      "  provider = \"google-beta\"",
      "",
      "  name           = \"my-instance-template\"",
      "  machine_type   = \"n1-standard-1\"",
      "  can_ip_forward = false",
      "",
      "  tags = [\"foo\", \"bar\"]",
      "",
      "  disk {",
      "    source_image = \"${data.google_compute_image.debian_9.self_link}\"",
      "  }",
      "",
      "  network_interface {",
      "    network = \"default\"",
      "  }",
      "",
      "  metadata = {",
      "    foo = \"bar\"",
      "  }",
      "",
      "  service_account {",
      "    scopes = [\"userinfo-email\", \"compute-ro\", \"storage-ro\"]",
      "  }",
      "}",
      "",
      "resource \"google_compute_target_pool\" \"foobar\" {",
      "  provider = \"google-beta\"",
      "",
      "  name = \"my-target-pool\"",
      "}",
      "",
      "resource \"google_compute_region_instance_group_manager\" \"foobar\" {",
      "  provider = \"google-beta\"",
      "",
      "  name   = \"my-region-igm\"",
      "  region = \"us-central1\"",
      "",
      "  version {",
      "    instance_template  = \"${google_compute_instance_template.foobar.self_link}\"",
      "    name               = \"primary\"",
      "  }",
      "",
      "  target_pools       = [\"${google_compute_target_pool.foobar.self_link}\"]",
      "  base_instance_name = \"foobar\"",
      "}",
      "",
      "data \"google_compute_image\" \"debian_9\" {",
      "  provider = \"google-beta\"",
      "",
      "\tfamily  = \"debian-9\"",
      "\tproject = \"debian-cloud\"",
      "}",
      "",
      "provider \"google-beta\"{",
      "  region = \"us-central1\"",
      "  zone   = \"us-central1-a\"",
      "}"
    ]
  },
  "google-resource-compute_region_backend_service": {
    "description": "Defines compute_region_backend_service",
    "prefix": "tf-google-resource-compute_region_backend_service",
    "body": [
      "resource \"google_compute_region_backend_service\" \"default\" {",
      "  name                            = \"region-backend-service\"",
      "  region                          = \"us-central1\"",
      "  health_checks                   = [\"${google_compute_health_check.default.self_link}\"]",
      "  connection_draining_timeout_sec = 10",
      "  session_affinity                = \"CLIENT_IP\"",
      "}",
      "",
      "resource \"google_compute_health_check\" \"default\" {",
      "  name               = \"health-check\"",
      "  check_interval_sec = 1",
      "  timeout_sec        = 1",
      "",
      "  tcp_health_check {",
      "    port = \"80\"",
      "  }",
      "}"
    ]
  },
  "google-resource-compute_region_disk": {
    "description": "Defines compute_region_disk",
    "prefix": "tf-google-resource-compute_region_disk",
    "body": [
      "resource \"google_compute_region_disk\" \"regiondisk\" {",
      "  name = \"my-region-disk\"",
      "  snapshot = \"${google_compute_snapshot.snapdisk.self_link}\"",
      "  type = \"pd-ssd\"",
      "  region = \"us-central1\"",
      "  physical_block_size_bytes = 4096",
      "",
      "  replica_zones = [\"us-central1-a\", \"us-central1-f\"]",
      "}",
      "",
      "resource \"google_compute_disk\" \"disk\" {",
      "  name = \"my-disk\"",
      "  image = \"debian-cloud/debian-9\"",
      "  size = 50",
      "  type = \"pd-ssd\"",
      "  zone = \"us-central1-a\"",
      "}",
      "",
      "resource \"google_compute_snapshot\" \"snapdisk\" {",
      "  name = \"my-snapshot\"",
      "  source_disk = \"${google_compute_disk.disk.name}\"",
      "  zone = \"us-central1-a\"",
      "}"
    ]
  },
  "google-resource-compute_region_instance_group_manager": {
    "description": "Defines compute_region_instance_group_manager",
    "prefix": "tf-google-resource-compute_region_instance_group_manager",
    "body": [
      "resource \"google_compute_health_check\" \"autohealing\" {",
      "  name                = \"autohealing-health-check\"",
      "  check_interval_sec  = 5",
      "  timeout_sec         = 5",
      "  healthy_threshold   = 2",
      "  unhealthy_threshold = 10                         # 50 seconds",
      "",
      "  http_health_check {",
      "    request_path = \"/healthz\"",
      "    port         = \"8080\"",
      "  }",
      "}",
      "",
      "resource \"google_compute_region_instance_group_manager\" \"appserver\" {",
      "  name = \"appserver-igm\"",
      "",
      "  base_instance_name         = \"app\"",
      "  instance_template          = \"${google_compute_instance_template.appserver.self_link}\"",
      "  region                     = \"us-central1\"",
      "  distribution_policy_zones  = [\"us-central1-a\", \"us-central1-f\"]",
      "",
      "  target_pools = [\"${google_compute_target_pool.appserver.self_link}\"]",
      "  target_size  = 2",
      "",
      "  named_port {",
      "    name = \"custom\"",
      "    port = 8888",
      "  }",
      "",
      "  auto_healing_policies {",
      "    health_check      = \"${google_compute_health_check.autohealing.self_link}\"",
      "    initial_delay_sec = 300",
      "  }",
      "}",
      ""
    ]
  },
  "google-resource-compute_route": {
    "description": "Defines compute_route",
    "prefix": "tf-google-resource-compute_route",
    "body": [
      "resource \"google_compute_route\" \"default\" {",
      "  name        = \"network-route\"",
      "  dest_range  = \"15.0.0.0/24\"",
      "  network     = \"${google_compute_network.default.name}\"",
      "  next_hop_ip = \"10.132.1.5\"",
      "  priority    = 100",
      "}",
      "",
      "resource \"google_compute_network\" \"default\" {",
      "  name = \"compute-network\"",
      "}"
    ]
  },
  "google-resource-compute_router": {
    "description": "Defines compute_router",
    "prefix": "tf-google-resource-compute_router",
    "body": [
      "resource \"google_compute_router\" \"foobar\" {",
      "  name    = \"my-router\"",
      "  network = \"${google_compute_network.foobar.name}\"",
      "  bgp {",
      "    asn               = 64514",
      "    advertise_mode    = \"CUSTOM\"",
      "    advertised_groups = [\"ALL_SUBNETS\"]",
      "    advertised_ip_ranges {",
      "      range = \"1.2.3.4\"",
      "    }",
      "    advertised_ip_ranges {",
      "      range = \"6.7.0.0/16\"",
      "    }",
      "  }",
      "}",
      "",
      "resource \"google_compute_network\" \"foobar\" {",
      "  name = \"my-network\"",
      "  auto_create_subnetworks = false",
      "}"
    ]
  },
  "google-resource-compute_router_interface": {
    "description": "Defines compute_router_interface",
    "prefix": "tf-google-resource-compute_router_interface",
    "body": [
      "resource \"google_compute_router_interface\" \"foobar\" {",
      "  name       = \"interface-1\"",
      "  router     = \"router-1\"",
      "  region     = \"us-central1\"",
      "  ip_range   = \"169.254.1.1/30\"",
      "  vpn_tunnel = \"tunnel-1\"",
      "}"
    ]
  },
  "google-resource-compute_router_nat": {
    "description": "Defines compute_router_nat",
    "prefix": "tf-google-resource-compute_router_nat",
    "body": [
      "resource \"google_compute_network\" \"default\" {",
      "  name = \"my-network\"",
      "}",
      "",
      "resource \"google_compute_subnetwork\" \"default\" {",
      "  name          = \"my-subnet\"",
      "  network       = \"${google_compute_network.default.self_link}\"",
      "  ip_cidr_range = \"10.0.0.0/16\"",
      "  region        = \"us-central1\"",
      "}",
      "",
      "resource \"google_compute_router\" \"router\" {",
      "  name    = \"router\"",
      "  region  = \"${google_compute_subnetwork.default.region}\"",
      "  network = \"${google_compute_network.default.self_link}\"",
      "  bgp {",
      "    asn = 64514",
      "  }",
      "}",
      "",
      "resource \"google_compute_router_nat\" \"simple-nat\" {",
      "  name                               = \"nat-1\"",
      "  router                             = \"${google_compute_router.router.name}\"",
      "  region                             = \"us-central1\"",
      "  nat_ip_allocate_option             = \"AUTO_ONLY\"",
      "  source_subnetwork_ip_ranges_to_nat = \"ALL_SUBNETWORKS_ALL_IP_RANGES\"",
      "}"
    ]
  },
  "google-resource-compute_router_peer": {
    "description": "Defines compute_router_peer",
    "prefix": "tf-google-resource-compute_router_peer",
    "body": [
      "resource \"google_compute_router_peer\" \"foobar\" {",
      "  name                      = \"peer-1\"",
      "  router                    = \"router-1\"",
      "  region                    = \"us-central1\"",
      "  peer_ip_address           = \"169.254.1.2\"",
      "  peer_asn                  = 65513",
      "  advertised_route_priority = 100",
      "  interface                 = \"interface-1\"",
      "}"
    ]
  },
  "google-resource-compute_security_policy": {
    "description": "Defines compute_security_policy",
    "prefix": "tf-google-resource-compute_security_policy",
    "body": [
      "resource \"google_compute_security_policy\" \"policy\" {",
      "  name = \"my-policy\"",
      "",
      "  rule {",
      "    action   = \"deny(403)\"",
      "    priority = \"1000\"",
      "    match {",
      "      versioned_expr = \"SRC_IPS_V1\"",
      "      config {",
      "        src_ip_ranges = [\"9.9.9.0/24\"]",
      "      }",
      "    }",
      "    description = \"Deny access to IPs in 9.9.9.0/24\"",
      "  }",
      "",
      "  rule {",
      "    action   = \"allow\"",
      "    priority = \"2147483647\"",
      "    match {",
      "      versioned_expr = \"SRC_IPS_V1\"",
      "      config {",
      "        src_ip_ranges = [\"*\"]",
      "      }",
      "    }",
      "    description = \"default rule\"",
      "  }",
      "}"
    ]
  },
  "google-resource-compute_shared_vpc_host_project": {
    "description": "Defines compute_shared_vpc_host_project",
    "prefix": "tf-google-resource-compute_shared_vpc_host_project",
    "body": [
      "# A host project provides network resources to associated service projects.",
      "resource \"google_compute_shared_vpc_host_project\" \"host\" {",
      "  project = \"host-project-id\"",
      "}",
      "",
      "# A service project gains access to network resources provided by its",
      "# associated host project.",
      "resource \"google_compute_shared_vpc_service_project\" \"service1\" {",
      "  host_project    = \"${google_compute_shared_vpc_host_project.host.project}\"",
      "  service_project = \"service-project-id-1\"",
      "}",
      "resource \"google_compute_shared_vpc_service_project\" \"service2\" {",
      "  host_project    = \"${google_compute_shared_vpc_host_project.host.project}\"",
      "  service_project = \"service-project-id-2\"",
      "}"
    ]
  },
  "google-resource-compute_shared_vpc_service_project": {
    "description": "Defines compute_shared_vpc_service_project",
    "prefix": "tf-google-resource-compute_shared_vpc_service_project",
    "body": [
      "resource \"google_compute_shared_vpc_service_project\" \"service1\" {",
      "  host_project    = \"host-project-id\"",
      "  service_project = \"service-project-id-1\"",
      "}"
    ]
  },
  "google-resource-compute_snapshot": {
    "description": "Defines compute_snapshot",
    "prefix": "tf-google-resource-compute_snapshot",
    "body": [
      "resource \"google_compute_snapshot\" \"snapshot\" {",
      "\tname = \"my-snapshot\"",
      "\tsource_disk = \"${google_compute_disk.persistent.name}\"",
      "\tzone = \"us-central1-a\"",
      "\tlabels = {",
      "\t\tmy_label = \"value\"",
      "\t}",
      "}",
      "",
      "data \"google_compute_image\" \"debian\" {",
      "\tfamily  = \"debian-9\"",
      "\tproject = \"debian-cloud\"",
      "}",
      "",
      "resource \"google_compute_disk\" \"persistent\" {",
      "\tname = \"debian-disk\"",
      "\timage = \"${data.google_compute_image.debian.self_link}\"",
      "\tsize = 10",
      "\ttype = \"pd-ssd\"",
      "\tzone = \"us-central1-a\"",
      "}"
    ]
  },
  "google-resource-compute_ssl_certificate": {
    "description": "Defines compute_ssl_certificate",
    "prefix": "tf-google-resource-compute_ssl_certificate",
    "body": [
      "resource \"google_compute_ssl_certificate\" \"default\" {",
      "  name_prefix = \"my-certificate-\"",
      "  description = \"a description\"",
      "  private_key = \"${file(\"path/to/private.key\")}\"",
      "  certificate = \"${file(\"path/to/certificate.crt\")}\"",
      "",
      "  lifecycle {",
      "    create_before_destroy = true",
      "  }",
      "}"
    ]
  },
  "google-resource-compute_ssl_policy": {
    "description": "Defines compute_ssl_policy",
    "prefix": "tf-google-resource-compute_ssl_policy",
    "body": [
      "resource \"google_compute_ssl_policy\" \"prod-ssl-policy\" {",
      "  name    = \"production-ssl-policy\"",
      "  profile = \"MODERN\"",
      "}",
      "",
      "resource \"google_compute_ssl_policy\" \"nonprod-ssl-policy\" {",
      "  name            = \"nonprod-ssl-policy\"",
      "  profile         = \"MODERN\"",
      "  min_tls_version = \"TLS_1_2\"",
      "}",
      "",
      "resource \"google_compute_ssl_policy\" \"custom-ssl-policy\" {",
      "  name            = \"custom-ssl-policy\"",
      "  min_tls_version = \"TLS_1_2\"",
      "  profile         = \"CUSTOM\"",
      "  custom_features = [\"TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\", \"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384\"]",
      "}"
    ]
  },
  "google-resource-compute_subnetwork": {
    "description": "Defines compute_subnetwork",
    "prefix": "tf-google-resource-compute_subnetwork",
    "body": [
      "resource \"google_compute_subnetwork\" \"network-with-private-secondary-ip-ranges\" {",
      "  name          = \"test-subnetwork\"",
      "  ip_cidr_range = \"10.2.0.0/16\"",
      "  region        = \"us-central1\"",
      "  network       = \"${google_compute_network.custom-test.self_link}\"",
      "  secondary_ip_range {",
      "    range_name    = \"tf-test-secondary-range-update1\"",
      "    ip_cidr_range = \"192.168.10.0/24\"",
      "  }",
      "}",
      "",
      "resource \"google_compute_network\" \"custom-test\" {",
      "  name                    = \"test-network\"",
      "  auto_create_subnetworks = false",
      "}"
    ]
  },
  "google-resource-compute_subnetwork_iam": {
    "description": "Defines compute_subnetwork_iam",
    "prefix": "tf-google-resource-compute_subnetwork_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_compute_subnetwork_iam_policy\" \"subnet\" {",
      "\tsubnetwork  = \"your-subnetwork-id\"",
      "\tpolicy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-resource-compute_target_http_proxy": {
    "description": "Defines compute_target_http_proxy",
    "prefix": "tf-google-resource-compute_target_http_proxy",
    "body": [
      "resource \"google_compute_target_http_proxy\" \"default\" {",
      "  name        = \"test-proxy\"",
      "  url_map     = \"${google_compute_url_map.default.self_link}\"",
      "}",
      "",
      "resource \"google_compute_url_map\" \"default\" {",
      "  name        = \"url-map\"",
      "  default_service = \"${google_compute_backend_service.default.self_link}\"",
      "",
      "  host_rule {",
      "    hosts        = [\"mysite.com\"]",
      "    path_matcher = \"allpaths\"",
      "  }",
      "",
      "  path_matcher {",
      "    name            = \"allpaths\"",
      "    default_service = \"${google_compute_backend_service.default.self_link}\"",
      "",
      "    path_rule {",
      "      paths   = [\"/*\"]",
      "      service = \"${google_compute_backend_service.default.self_link}\"",
      "    }",
      "  }",
      "}",
      "",
      "resource \"google_compute_backend_service\" \"default\" {",
      "  name        = \"backend-service\"",
      "  port_name   = \"http\"",
      "  protocol    = \"HTTP\"",
      "  timeout_sec = 10",
      "",
      "  health_checks = [\"${google_compute_http_health_check.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_http_health_check\" \"default\" {",
      "  name               = \"http-health-check\"",
      "  request_path       = \"/\"",
      "  check_interval_sec = 1",
      "  timeout_sec        = 1",
      "}"
    ]
  },
  "google-resource-compute_target_https_proxy": {
    "description": "Defines compute_target_https_proxy",
    "prefix": "tf-google-resource-compute_target_https_proxy",
    "body": [
      "resource \"google_compute_target_https_proxy\" \"default\" {",
      "  name             = \"test-proxy\"",
      "  url_map          = \"${google_compute_url_map.default.self_link}\"",
      "  ssl_certificates = [\"${google_compute_ssl_certificate.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_ssl_certificate\" \"default\" {",
      "  name        = \"my-certificate\"",
      "  private_key = \"${file(\"path/to/private.key\")}\"",
      "  certificate = \"${file(\"path/to/certificate.crt\")}\"",
      "}",
      "",
      "resource \"google_compute_url_map\" \"default\" {",
      "  name        = \"url-map\"",
      "  description = \"a description\"",
      "",
      "  default_service = \"${google_compute_backend_service.default.self_link}\"",
      "",
      "  host_rule {",
      "    hosts        = [\"mysite.com\"]",
      "    path_matcher = \"allpaths\"",
      "  }",
      "",
      "  path_matcher {",
      "    name            = \"allpaths\"",
      "    default_service = \"${google_compute_backend_service.default.self_link}\"",
      "",
      "    path_rule {",
      "      paths   = [\"/*\"]",
      "      service = \"${google_compute_backend_service.default.self_link}\"",
      "    }",
      "  }",
      "}",
      "",
      "resource \"google_compute_backend_service\" \"default\" {",
      "  name        = \"backend-service\"",
      "  port_name   = \"http\"",
      "  protocol    = \"HTTP\"",
      "  timeout_sec = 10",
      "",
      "  health_checks = [\"${google_compute_http_health_check.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_http_health_check\" \"default\" {",
      "  name               = \"http-health-check\"",
      "  request_path       = \"/\"",
      "  check_interval_sec = 1",
      "  timeout_sec        = 1",
      "}"
    ]
  },
  "google-resource-compute_target_instance": {
    "description": "Defines compute_target_instance",
    "prefix": "tf-google-resource-compute_target_instance",
    "body": [
      "resource \"google_compute_target_instance\" \"default\" {",
      "  name        = \"target\"",
      "  instance    = \"${google_compute_instance.target-vm.self_link}\"",
      "}",
      "",
      "data \"google_compute_image\" \"vmimage\" {",
      "  family  = \"debian-9\"",
      "  project = \"debian-cloud\"",
      "}",
      "",
      "resource \"google_compute_instance\" \"target-vm\" {",
      "  name         = \"target-vm\"",
      "  machine_type = \"n1-standard-1\"",
      "  zone         = \"us-central1-a\"",
      "",
      "  boot_disk {",
      "    initialize_params{",
      "      image = \"${data.google_compute_image.vmimage.self_link}\"",
      "    }",
      "  }",
      "",
      "  network_interface {",
      "    network = \"default\"",
      "  }",
      "}"
    ]
  },
  "google-resource-compute_target_pool": {
    "description": "Defines compute_target_pool",
    "prefix": "tf-google-resource-compute_target_pool",
    "body": [
      "resource \"google_compute_target_pool\" \"default\" {",
      "  name = \"instance-pool\"",
      "",
      "  instances = [",
      "    \"us-central1-a/myinstance1\",",
      "    \"us-central1-b/myinstance2\",",
      "  ]",
      "",
      "  health_checks = [",
      "    \"${google_compute_http_health_check.default.name}\",",
      "  ]",
      "}",
      "",
      "resource \"google_compute_http_health_check\" \"default\" {",
      "  name               = \"default\"",
      "  request_path       = \"/\"",
      "  check_interval_sec = 1",
      "  timeout_sec        = 1",
      "}"
    ]
  },
  "google-resource-compute_target_ssl_proxy": {
    "description": "Defines compute_target_ssl_proxy",
    "prefix": "tf-google-resource-compute_target_ssl_proxy",
    "body": [
      "resource \"google_compute_target_ssl_proxy\" \"default\" {",
      "  name             = \"test-proxy\"",
      "  backend_service  = \"${google_compute_backend_service.default.self_link}\"",
      "  ssl_certificates = [\"${google_compute_ssl_certificate.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_ssl_certificate\" \"default\" {",
      "  name        = \"default-cert\"",
      "  private_key = \"${file(\"path/to/private.key\")}\"",
      "  certificate = \"${file(\"path/to/certificate.crt\")}\"",
      "}",
      "",
      "resource \"google_compute_backend_service\" \"default\" {",
      "  name          = \"backend-service\"",
      "  protocol      = \"SSL\"",
      "  health_checks = [\"${google_compute_health_check.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_health_check\" \"default\" {",
      "  name               = \"health-check\"",
      "  check_interval_sec = 1",
      "  timeout_sec        = 1",
      "  tcp_health_check {",
      "    port = \"443\"",
      "  }",
      "}"
    ]
  },
  "google-resource-compute_target_tcp_proxy": {
    "description": "Defines compute_target_tcp_proxy",
    "prefix": "tf-google-resource-compute_target_tcp_proxy",
    "body": [
      "resource \"google_compute_target_tcp_proxy\" \"default\" {",
      "  name            = \"test-proxy\"",
      "  backend_service = \"${google_compute_backend_service.default.self_link}\"",
      "}",
      "",
      "resource \"google_compute_backend_service\" \"default\" {",
      "  name          = \"backend-service\"",
      "  protocol      = \"TCP\"",
      "  timeout_sec   = 10",
      "",
      "  health_checks = [\"${google_compute_health_check.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_health_check\" \"default\" {",
      "  name               = \"health-check\"",
      "  timeout_sec        = 1",
      "  check_interval_sec = 1",
      "",
      "  tcp_health_check {",
      "    port = \"443\"",
      "  }",
      "}"
    ]
  },
  "google-resource-compute_url_map": {
    "description": "Defines compute_url_map",
    "prefix": "tf-google-resource-compute_url_map",
    "body": [
      "resource \"google_compute_url_map\" \"urlmap\" {",
      "  name        = \"urlmap\"",
      "  description = \"a description\"",
      "",
      "  default_service = \"${google_compute_backend_service.home.self_link}\"",
      "",
      "  host_rule {",
      "    hosts        = [\"mysite.com\"]",
      "    path_matcher = \"allpaths\"",
      "  }",
      "",
      "  path_matcher {",
      "    name            = \"allpaths\"",
      "    default_service = \"${google_compute_backend_service.home.self_link}\"",
      "",
      "    path_rule {",
      "      paths   = [\"/home\"]",
      "      service = \"${google_compute_backend_service.home.self_link}\"",
      "    }",
      "",
      "    path_rule {",
      "      paths   = [\"/login\"]",
      "      service = \"${google_compute_backend_service.login.self_link}\"",
      "    }",
      "",
      "    path_rule {",
      "      paths   = [\"/static\"]",
      "      service = \"${google_compute_backend_bucket.static.self_link}\"",
      "    }",
      "  }",
      "",
      "  test {",
      "    service = \"${google_compute_backend_service.home.self_link}\"",
      "    host    = \"hi.com\"",
      "    path    = \"/home\"",
      "  }",
      "}",
      "",
      "resource \"google_compute_backend_service\" \"login\" {",
      "  name        = \"login\"",
      "  port_name   = \"http\"",
      "  protocol    = \"HTTP\"",
      "  timeout_sec = 10",
      "",
      "  health_checks = [\"${google_compute_http_health_check.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_backend_service\" \"home\" {",
      "  name        = \"home\"",
      "  port_name   = \"http\"",
      "  protocol    = \"HTTP\"",
      "  timeout_sec = 10",
      "",
      "  health_checks = [\"${google_compute_http_health_check.default.self_link}\"]",
      "}",
      "",
      "resource \"google_compute_http_health_check\" \"default\" {",
      "  name               = \"health-check\"",
      "  request_path       = \"/\"",
      "  check_interval_sec = 1",
      "  timeout_sec        = 1",
      "}",
      "",
      "resource \"google_compute_backend_bucket\" \"static\" {",
      "  name        = \"static-asset-backend-bucket\"",
      "  bucket_name = \"${google_storage_bucket.static.name}\"",
      "  enable_cdn  = true",
      "}",
      "",
      "resource \"google_storage_bucket\" \"static\" {",
      "  name     = \"static-asset-bucket\"",
      "  location = \"US\"",
      "}"
    ]
  },
  "google-resource-compute_vpn_gateway": {
    "description": "Defines compute_vpn_gateway",
    "prefix": "tf-google-resource-compute_vpn_gateway",
    "body": [
      "resource \"google_compute_vpn_gateway\" \"target_gateway\" {",
      "  name    = \"vpn1\"",
      "  network = \"${google_compute_network.network1.self_link}\"",
      "}",
      "",
      "resource \"google_compute_network\" \"network1\" {",
      "  name       = \"network1\"",
      "}",
      "",
      "resource \"google_compute_address\" \"vpn_static_ip\" {",
      "  name   = \"vpn-static-ip\"",
      "}",
      "",
      "resource \"google_compute_forwarding_rule\" \"fr_esp\" {",
      "  name        = \"fr-esp\"",
      "  ip_protocol = \"ESP\"",
      "  ip_address  = \"${google_compute_address.vpn_static_ip.address}\"",
      "  target      = \"${google_compute_vpn_gateway.target_gateway.self_link}\"",
      "}",
      "",
      "resource \"google_compute_forwarding_rule\" \"fr_udp500\" {",
      "  name        = \"fr-udp500\"",
      "  ip_protocol = \"UDP\"",
      "  port_range  = \"500\"",
      "  ip_address  = \"${google_compute_address.vpn_static_ip.address}\"",
      "  target      = \"${google_compute_vpn_gateway.target_gateway.self_link}\"",
      "}",
      "",
      "resource \"google_compute_forwarding_rule\" \"fr_udp4500\" {",
      "  name        = \"fr-udp4500\"",
      "  ip_protocol = \"UDP\"",
      "  port_range  = \"4500\"",
      "  ip_address  = \"${google_compute_address.vpn_static_ip.address}\"",
      "  target      = \"${google_compute_vpn_gateway.target_gateway.self_link}\"",
      "}",
      "",
      "resource \"google_compute_vpn_tunnel\" \"tunnel1\" {",
      "  name          = \"tunnel1\"",
      "  peer_ip       = \"15.0.0.120\"",
      "  shared_secret = \"a secret message\"",
      "",
      "  target_vpn_gateway = \"${google_compute_vpn_gateway.target_gateway.self_link}\"",
      "",
      "  depends_on = [",
      "    \"google_compute_forwarding_rule.fr_esp\",",
      "    \"google_compute_forwarding_rule.fr_udp500\",",
      "    \"google_compute_forwarding_rule.fr_udp4500\",",
      "  ]",
      "}",
      "",
      "resource \"google_compute_route\" \"route1\" {",
      "  name       = \"route1\"",
      "  network    = \"${google_compute_network.network1.name}\"",
      "  dest_range = \"15.0.0.0/24\"",
      "  priority   = 1000",
      "",
      "  next_hop_vpn_tunnel = \"${google_compute_vpn_tunnel.tunnel1.self_link}\"",
      "}"
    ]
  },
  "google-resource-compute_vpn_tunnel": {
    "description": "Defines compute_vpn_tunnel",
    "prefix": "tf-google-resource-compute_vpn_tunnel",
    "body": [
      "resource \"google_compute_vpn_tunnel\" \"tunnel1\" {",
      "  name          = \"tunnel1\"",
      "  peer_ip       = \"15.0.0.120\"",
      "  shared_secret = \"a secret message\"",
      "",
      "  target_vpn_gateway = \"${google_compute_vpn_gateway.target_gateway.self_link}\"",
      "",
      "  depends_on = [",
      "    \"google_compute_forwarding_rule.fr_esp\",",
      "    \"google_compute_forwarding_rule.fr_udp500\",",
      "    \"google_compute_forwarding_rule.fr_udp4500\",",
      "  ]",
      "}",
      "",
      "resource \"google_compute_vpn_gateway\" \"target_gateway\" {",
      "  name    = \"vpn1\"",
      "  network = \"${google_compute_network.network1.self_link}\"",
      "}",
      "",
      "resource \"google_compute_network\" \"network1\" {",
      "  name       = \"network1\"",
      "}",
      "",
      "resource \"google_compute_address\" \"vpn_static_ip\" {",
      "  name   = \"vpn-static-ip\"",
      "}",
      "",
      "resource \"google_compute_forwarding_rule\" \"fr_esp\" {",
      "  name        = \"fr-esp\"",
      "  ip_protocol = \"ESP\"",
      "  ip_address  = \"${google_compute_address.vpn_static_ip.address}\"",
      "  target      = \"${google_compute_vpn_gateway.target_gateway.self_link}\"",
      "}",
      "",
      "resource \"google_compute_forwarding_rule\" \"fr_udp500\" {",
      "  name        = \"fr-udp500\"",
      "  ip_protocol = \"UDP\"",
      "  port_range  = \"500\"",
      "  ip_address  = \"${google_compute_address.vpn_static_ip.address}\"",
      "  target      = \"${google_compute_vpn_gateway.target_gateway.self_link}\"",
      "}",
      "",
      "resource \"google_compute_forwarding_rule\" \"fr_udp4500\" {",
      "  name        = \"fr-udp4500\"",
      "  ip_protocol = \"UDP\"",
      "  port_range  = \"4500\"",
      "  ip_address  = \"${google_compute_address.vpn_static_ip.address}\"",
      "  target      = \"${google_compute_vpn_gateway.target_gateway.self_link}\"",
      "}",
      "",
      "resource \"google_compute_route\" \"route1\" {",
      "  name       = \"route1\"",
      "  network    = \"${google_compute_network.network1.name}\"",
      "  dest_range = \"15.0.0.0/24\"",
      "  priority   = 1000",
      "",
      "  next_hop_vpn_tunnel = \"${google_compute_vpn_tunnel.tunnel1.self_link}\"",
      "}"
    ]
  },
  "google-resource-container_cluster": {
    "description": "Defines container_cluster",
    "prefix": "tf-google-resource-container_cluster",
    "body": [
      "resource \"google_container_cluster\" \"primary\" {",
      "  name     = \"my-gke-cluster\"",
      "  location = \"us-central1\"",
      "",
      "  # We can't create a cluster with no node pool defined, but we want to only use",
      "  # separately managed node pools. So we create the smallest possible default",
      "  # node pool and immediately delete it.",
      "  remove_default_node_pool = true",
      "  initial_node_count = 1",
      "",
      "  master_auth {",
      "    username = \"\"",
      "    password = \"\"",
      "",
      "    client_certificate_config {",
      "      issue_client_certificate = false",
      "    }",
      "  }",
      "}",
      "",
      "resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {",
      "  name       = \"my-node-pool\"",
      "  location   = \"us-central1\"",
      "  cluster    = \"${google_container_cluster.primary.name}\"",
      "  node_count = 1",
      "",
      "  node_config {",
      "    preemptible  = true",
      "    machine_type = \"n1-standard-1\"",
      "",
      "    metadata = {",
      "      disable-legacy-endpoints = \"true\"",
      "    }",
      "",
      "    oauth_scopes = [",
      "      \"https://www.googleapis.com/auth/logging.write\",",
      "      \"https://www.googleapis.com/auth/monitoring\",",
      "    ]",
      "  }",
      "}"
    ]
  },
  "google-resource-container_node_pool": {
    "description": "Defines container_node_pool",
    "prefix": "tf-google-resource-container_node_pool",
    "body": [
      "resource \"google_container_cluster\" \"primary\" {",
      "  name     = \"my-gke-cluster\"",
      "  location = \"us-central1\"",
      "  ",
      "  # We can't create a cluster with no node pool defined, but we want to only use",
      "  # separately managed node pools. So we create the smallest possible default",
      "  # node pool and immediately delete it.",
      "  remove_default_node_pool = true",
      "  initial_node_count = 1",
      "}",
      "",
      "resource \"google_container_node_pool\" \"primary_preemptible_nodes\" {",
      "  name       = \"my-node-pool\"",
      "  location   = \"us-central1\"",
      "  cluster    = \"${google_container_cluster.primary.name}\"",
      "  node_count = 1",
      "",
      "  node_config {",
      "    preemptible  = true",
      "    machine_type = \"n1-standard-1\"",
      "",
      "    oauth_scopes = [",
      "      \"https://www.googleapis.com/auth/logging.write\",",
      "      \"https://www.googleapis.com/auth/monitoring\",",
      "    ]",
      "  }",
      "}"
    ]
  },
  "google-resource-dataflow_job": {
    "description": "Defines dataflow_job",
    "prefix": "tf-google-resource-dataflow_job",
    "body": [
      "resource \"google_dataflow_job\" \"big_data_job\" {",
      "    name = \"dataflow-job\"",
      "    template_gcs_path = \"gs://my-bucket/templates/template_file\"",
      "    temp_gcs_location = \"gs://my-bucket/tmp_dir\"",
      "    parameters = {",
      "        foo = \"bar\"",
      "        baz = \"qux\"",
      "    }",
      "}"
    ]
  },
  "google-resource-dataproc_cluster": {
    "description": "Defines dataproc_cluster",
    "prefix": "tf-google-resource-dataproc_cluster",
    "body": [
      "resource \"google_dataproc_cluster\" \"simplecluster\" {",
      "    name       = \"simplecluster\"",
      "    region     = \"us-central1\"",
      "}"
    ]
  },
  "google-resource-dataproc_cluster_iam": {
    "description": "Defines dataproc_cluster_iam",
    "prefix": "tf-google-resource-dataproc_cluster_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role    = \"roles/editor\"",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_dataproc_cluster_iam_policy\" \"editor\" {",
      "  project      = \"your-project\"",
      "  region       = \"your-region\"",
      "  cluster      = \"your-dataproc-cluster\"",
      "  policy_data  = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-resource-dataproc_job": {
    "description": "Defines dataproc_job",
    "prefix": "tf-google-resource-dataproc_job",
    "body": [
      "resource \"google_dataproc_cluster\" \"mycluster\" {",
      "    name   = \"dproc-cluster-unique-name\"",
      "    region = \"us-central1\"",
      "}",
      "",
      "# Submit an example spark job to a dataproc cluster",
      "resource \"google_dataproc_job\" \"spark\" {",
      "    region       = \"${google_dataproc_cluster.mycluster.region}\"",
      "    force_delete = true",
      "    placement {",
      "        cluster_name = \"${google_dataproc_cluster.mycluster.name}\"",
      "    }",
      "",
      "    spark_config {",
      "        main_class    = \"org.apache.spark.examples.SparkPi\"",
      "        jar_file_uris = [\"file:///usr/lib/spark/examples/jars/spark-examples.jar\"]",
      "        args          = [\"1000\"]",
      "        ",
      "        properties    = {",
      "            \"spark.logConf\" = \"true\"",
      "        }",
      "        ",
      "        logging_config {",
      "            driver_log_levels = {",
      "                \"root\" = \"INFO\"",
      "            }",
      "        }",
      "    }",
      "}",
      "",
      "# Submit an example pyspark job to a dataproc cluster",
      "resource \"google_dataproc_job\" \"pyspark\" {",
      "    region       = \"${google_dataproc_cluster.mycluster.region}\"",
      "    force_delete = true",
      "    placement {",
      "        cluster_name = \"${google_dataproc_cluster.mycluster.name}\"",
      "    }",
      "",
      "    pyspark_config {",
      "        main_python_file_uri = \"gs://dataproc-examples-2f10d78d114f6aaec76462e3c310f31f/src/pyspark/hello-world/hello-world.py\"",
      "        properties = {",
      "            \"spark.logConf\" = \"true\"",
      "        }",
      "    }",
      "}",
      "",
      "# Check out current state of the jobs",
      "output \"spark_status\" {",
      "    value = \"${google_dataproc_job.spark.status.0.state}\"",
      "}",
      "",
      "output \"pyspark_status\" {",
      "    value = \"${google_dataproc_job.pyspark.status.0.state}\"",
      "}"
    ]
  },
  "google-resource-dataproc_job_iam": {
    "description": "Defines dataproc_job_iam",
    "prefix": "tf-google-resource-dataproc_job_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role    = \"roles/editor\"",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_dataproc_job_iam_policy\" \"editor\" {",
      "  project      = \"your-project\"",
      "  region       = \"your-region\"",
      "  job_id       = \"your-dataproc-job\"",
      "  policy_data  = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-resource-dns_managed_zone": {
    "description": "Defines dns_managed_zone",
    "prefix": "tf-google-resource-dns_managed_zone",
    "body": [
      "resource \"google_dns_managed_zone\" \"example-zone\" {",
      "  name = \"example-zone\"",
      "  dns_name = \"example-${random_id.rnd.hex}.com.\"",
      "  description = \"Example DNS zone\"",
      "  labels = {",
      "    foo = \"bar\"",
      "  }",
      "}",
      "",
      "resource \"random_id\" \"rnd\" {",
      "  byte_length = 4",
      "}"
    ]
  },
  "google-resource-dns_record_set": {
    "description": "Defines dns_record_set",
    "prefix": "tf-google-resource-dns_record_set",
    "body": [
      "resource \"google_dns_record_set\" \"frontend\" {",
      "  name = \"frontend.${google_dns_managed_zone.prod.dns_name}\"",
      "  type = \"A\"",
      "  ttl  = 300",
      "",
      "  managed_zone = \"${google_dns_managed_zone.prod.name}\"",
      "",
      "  rrdatas = [\"${google_compute_instance.frontend.network_interface.0.access_config.0.nat_ip}\"]",
      "}",
      "",
      "resource \"google_compute_instance\" \"frontend\" {",
      "  name         = \"frontend\"",
      "  machine_type = \"g1-small\"",
      "  zone         = \"us-central1-b\"",
      "",
      "  boot_disk {",
      "    initialize_params {",
      "      image = \"debian-cloud/debian-9\"",
      "    }",
      "  }",
      "",
      "  network_interface {",
      "    network       = \"default\"",
      "    access_config = {}",
      "  }",
      "}",
      "",
      "resource \"google_dns_managed_zone\" \"prod\" {",
      "  name     = \"prod-zone\"",
      "  dns_name = \"prod.mydomain.com.\"",
      "}"
    ]
  },
  "google-resource-endpoints_service": {
    "description": "Defines endpoints_service",
    "prefix": "tf-google-resource-endpoints_service",
    "body": [
      "resource \"google_endpoints_service\" \"openapi_service\" {",
      "  service_name   = \"api-name.endpoints.project-id.cloud.goog\"",
      "  project        = \"project-id\"",
      "  openapi_config = \"${file(\"openapi_spec.yml\")}\"",
      "}",
      "",
      "resource \"google_endpoints_service\" \"grpc_service\" {",
      "  service_name         = \"api-name.endpoints.project-id.cloud.goog\"",
      "  project              = \"project-id\"",
      "  grpc_config          = \"${file(\"service_spec.yml\")}\"",
      "  protoc_output_base64 = \"${base64encode(file(\"compiled_descriptor_file.pb\"))}\"",
      "}"
    ]
  },
  "google-resource-filestore_instance": {
    "description": "Defines filestore_instance",
    "prefix": "tf-google-resource-filestore_instance",
    "body": [
      "resource \"google_filestore_instance\" \"instance\" {",
      "  name = \"test-instance\"",
      "  zone = \"us-central1-b\"",
      "  tier = \"PREMIUM\"",
      "",
      "  file_shares {",
      "    capacity_gb = 2660",
      "    name        = \"share1\"",
      "  }",
      "",
      "  networks {",
      "    network = \"default\"",
      "    modes   = [\"MODE_IPV4\"]",
      "  }",
      "}"
    ]
  },
  "google-resource-firestore_index": {
    "description": "Defines firestore_index",
    "prefix": "tf-google-resource-firestore_index",
    "body": [
      "resource \"google_firestore_index\" \"my-index\" {",
      "  project    = \"my-project-name\"",
      "",
      "  collection = \"chatrooms\"",
      "",
      "  fields {",
      "    field_path = \"name\"",
      "    order      = \"ASCENDING\"",
      "  }",
      "",
      "  fields {",
      "    field_path = \"description\"",
      "    order      = \"DESCENDING\"",
      "  }",
      "",
      "  fields {",
      "    field_path = \"__name__\"",
      "    order      = \"DESCENDING\"",
      "  }",
      "}"
    ]
  },
  "google-resource-google_billing_account_iam_binding": {
    "description": "Defines google_billing_account_iam_binding",
    "prefix": "tf-google-resource-google_billing_account_iam_binding",
    "body": [
      "resource \"google_billing_account_iam_binding\" \"binding\" {",
      "  billing_account_id = \"00AA00-000AAA-00AA0A\"",
      "  role               = \"roles/billing.viewer\"",
      "",
      "  members = [",
      "    \"user:alice@gmail.com\",",
      "  ]",
      "}"
    ]
  },
  "google-resource-google_billing_account_iam_member": {
    "description": "Defines google_billing_account_iam_member",
    "prefix": "tf-google-resource-google_billing_account_iam_member",
    "body": [
      "resource \"google_billing_account_iam_member\" \"binding\" {",
      "  billing_account_id = \"00AA00-000AAA-00AA0A\"",
      "  role               = \"roles/billing.viewer\"",
      "  member             = \"user:alice@gmail.com\"",
      "}"
    ]
  },
  "google-resource-google_billing_account_iam_policy": {
    "description": "Defines google_billing_account_iam_policy",
    "prefix": "tf-google-resource-google_billing_account_iam_policy",
    "body": [
      "resource \"google_billing_account_iam_policy\" \"policy\" {",
      "  billing_account_id    = \"00AA00-000AAA-00AA0A\"",
      "  policy_data           = \"${data.google_iam_policy.admin.policy_data}\"",
      "}",
      "",
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/billing.viewer\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}"
    ]
  },
  "google-resource-google_folder": {
    "description": "Defines google_folder",
    "prefix": "tf-google-resource-google_folder",
    "body": [
      "# Top-level folder under an organization.",
      "resource \"google_folder\" \"department1\" {",
      "  display_name = \"Department 1\"",
      "  parent     = \"organizations/1234567\"",
      "}",
      "",
      "# Folder nested under another folder.",
      "resource \"google_folder\" \"team-abc\" {",
      "  display_name = \"Team ABC\"",
      "  parent     = \"${google_folder.department1.name}\"",
      "}"
    ]
  },
  "google-resource-google_folder_iam_binding": {
    "description": "Defines google_folder_iam_binding",
    "prefix": "tf-google-resource-google_folder_iam_binding",
    "body": [
      "resource \"google_folder\" \"department1\" {",
      "  display_name = \"Department 1\"",
      "  parent       = \"organizations/1234567\"",
      "}",
      "",
      "resource \"google_folder_iam_binding\" \"admin\" {",
      "  folder  = \"${google_folder.department1.name}\"",
      "  role    = \"roles/editor\"",
      "",
      "  members = [",
      "    \"user:alice@gmail.com\",",
      "  ]",
      "}"
    ]
  },
  "google-resource-google_folder_iam_member": {
    "description": "Defines google_folder_iam_member",
    "prefix": "tf-google-resource-google_folder_iam_member",
    "body": [
      "resource \"google_folder\" \"department1\" {",
      "  display_name = \"Department 1\"",
      "  parent       = \"organizations/1234567\"",
      "}",
      "",
      "resource \"google_folder_iam_member\" \"admin\" {",
      "  folder  = \"${google_folder.department1.name}\"",
      "  role    = \"roles/editor\"",
      "  member  = \"user:alice@gmail.com\"",
      "}"
    ]
  },
  "google-resource-google_folder_iam_policy": {
    "description": "Defines google_folder_iam_policy",
    "prefix": "tf-google-resource-google_folder_iam_policy",
    "body": [
      "resource \"google_folder_iam_policy\" \"folder_admin_policy\" {",
      "  folder     = \"${google_folder.department1.name}\"",
      "  policy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}",
      "",
      "resource \"google_folder\" \"department1\" {",
      "  display_name = \"Department 1\"",
      "  parent     = \"organizations/1234567\"",
      "}",
      "",
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}"
    ]
  },
  "google-resource-google_folder_organization_policy": {
    "description": "Defines google_folder_organization_policy",
    "prefix": "tf-google-resource-google_folder_organization_policy",
    "body": [
      "resource \"google_folder_organization_policy\" \"serial_port_policy\" {",
      "  folder     = \"folders/123456789\"",
      "  constraint = \"compute.disableSerialPortAccess\"",
      "",
      "  boolean_policy {",
      "    enforced = true",
      "  }",
      "}"
    ]
  },
  "google-resource-google_iap_tunnel_instance_iam": {
    "description": "Defines google_iap_tunnel_instance_iam",
    "prefix": "tf-google-resource-google_iap_tunnel_instance_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_iap_tunnel_instance_iam_policy\" \"instance\" {",
      "\tinstance  = \"your-instance-name\"",
      "\tpolicy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-resource-google_kms_crypto_key_iam_binding": {
    "description": "Defines google_kms_crypto_key_iam_binding",
    "prefix": "tf-google-resource-google_kms_crypto_key_iam_binding",
    "body": [
      "resource \"google_kms_crypto_key_iam_binding\" \"crypto_key\" {",
      "  crypto_key_id = \"my-gcp-project/us-central1/my-key-ring/my-crypto-key\"",
      "  role          = \"roles/editor\"",
      "",
      "  members = [",
      "    \"user:alice@gmail.com\",",
      "  ]",
      "}"
    ]
  },
  "google-resource-google_kms_crypto_key_iam_member": {
    "description": "Defines google_kms_crypto_key_iam_member",
    "prefix": "tf-google-resource-google_kms_crypto_key_iam_member",
    "body": [
      "resource \"google_kms_crypto_key_iam_member\" \"crypto_key\" {",
      "  crypto_key_id = \"your-crypto-key-id\"",
      "  role          = \"roles/editor\"",
      "  member        = \"user:alice@gmail.com\"",
      "}"
    ]
  },
  "google-resource-google_kms_key_ring_iam": {
    "description": "Defines google_kms_key_ring_iam",
    "prefix": "tf-google-resource-google_kms_key_ring_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_kms_key_ring_iam_policy\" \"key_ring\" {",
      "\tkey_ring_id = \"your-key-ring-id\"",
      "\tpolicy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-resource-google_organization_iam_binding": {
    "description": "Defines google_organization_iam_binding",
    "prefix": "tf-google-resource-google_organization_iam_binding",
    "body": [
      "resource \"google_organization_iam_binding\" \"binding\" {",
      "  org_id = \"123456789\"",
      "  role    = \"roles/browser\"",
      "",
      "  members = [",
      "    \"user:alice@gmail.com\",",
      "  ]",
      "}"
    ]
  },
  "google-resource-google_organization_iam_custom_role": {
    "description": "Defines google_organization_iam_custom_role",
    "prefix": "tf-google-resource-google_organization_iam_custom_role",
    "body": [
      "resource \"google_organization_iam_custom_role\" \"my-custom-role\" {",
      "  role_id     = \"myCustomRole\"",
      "  org_id      = \"123456789\"",
      "  title       = \"My Custom Role\"",
      "  description = \"A description\"",
      "  permissions = [\"iam.roles.list\", \"iam.roles.create\", \"iam.roles.delete\"]",
      "}"
    ]
  },
  "google-resource-google_organization_iam_member": {
    "description": "Defines google_organization_iam_member",
    "prefix": "tf-google-resource-google_organization_iam_member",
    "body": [
      "resource \"google_organization_iam_member\" \"binding\" {",
      "  org_id = \"0123456789\"",
      "  role    = \"roles/editor\"",
      "  member  = \"user:alice@gmail.com\"",
      "}"
    ]
  },
  "google-resource-google_organization_iam_policy": {
    "description": "Defines google_organization_iam_policy",
    "prefix": "tf-google-resource-google_organization_iam_policy",
    "body": [
      "resource \"google_organization_iam_policy\" \"policy\" {",
      "  org_id = \"123456789\"",
      "  policy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}",
      "",
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}"
    ]
  },
  "google-resource-google_organization_policy": {
    "description": "Defines google_organization_policy",
    "prefix": "tf-google-resource-google_organization_policy",
    "body": [
      "resource \"google_organization_policy\" \"serial_port_policy\" {",
      "  org_id     = \"123456789\"",
      "  constraint = \"compute.disableSerialPortAccess\"",
      "",
      "  boolean_policy {",
      "    enforced = true",
      "  }",
      "}"
    ]
  },
  "google-resource-google_project": {
    "description": "Defines google_project",
    "prefix": "tf-google-resource-google_project",
    "body": [
      "resource \"google_project\" \"my_project\" {",
      "  name = \"My Project\"",
      "  project_id = \"your-project-id\"",
      "  org_id     = \"1234567\"",
      "}"
    ]
  },
  "google-resource-google_project_iam": {
    "description": "Defines google_project_iam",
    "prefix": "tf-google-resource-google_project_iam",
    "body": [
      "resource \"google_project_iam_policy\" \"project\" {",
      "  project     = \"your-project-id\"",
      "  policy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}",
      "",
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}"
    ]
  },
  "google-resource-google_project_iam_custom_role": {
    "description": "Defines google_project_iam_custom_role",
    "prefix": "tf-google-resource-google_project_iam_custom_role",
    "body": [
      "resource \"google_project_iam_custom_role\" \"my-custom-role\" {",
      "  role_id     = \"myCustomRole\"",
      "  title       = \"My Custom Role\"",
      "  description = \"A description\"",
      "  permissions = [\"iam.roles.list\", \"iam.roles.create\", \"iam.roles.delete\"]",
      "}"
    ]
  },
  "google-resource-google_project_organization_policy": {
    "description": "Defines google_project_organization_policy",
    "prefix": "tf-google-resource-google_project_organization_policy",
    "body": [
      "resource \"google_project_organization_policy\" \"serial_port_policy\" {",
      "  project    = \"your-project-id\"",
      "  constraint = \"compute.disableSerialPortAccess\"",
      "",
      "  boolean_policy {",
      "    enforced = true",
      "  }",
      "}"
    ]
  },
  "google-resource-google_project_service": {
    "description": "Defines google_project_service",
    "prefix": "tf-google-resource-google_project_service",
    "body": [
      "resource \"google_project_service\" \"project\" {",
      "  project = \"your-project-id\"",
      "  service = \"iam.googleapis.com\"",
      "",
      "  disable_dependent_services = true",
      "}"
    ]
  },
  "google-resource-google_project_services": {
    "description": "Defines google_project_services",
    "prefix": "tf-google-resource-google_project_services",
    "body": [
      "resource \"google_project_services\" \"project\" {",
      "  project = \"your-project-id\"",
      "  services   = [\"iam.googleapis.com\", \"cloudresourcemanager.googleapis.com\"]",
      "}"
    ]
  },
  "google-resource-google_service_account": {
    "description": "Defines google_service_account",
    "prefix": "tf-google-resource-google_service_account",
    "body": [
      "resource \"google_service_account\" \"object_viewer\" {",
      "  account_id   = \"object-viewer\"",
      "  display_name = \"Object viewer\"",
      "}"
    ]
  },
  "google-resource-google_service_account_iam": {
    "description": "Defines google_service_account_iam",
    "prefix": "tf-google-resource-google_service_account_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/iam.serviceAccountUser\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_service_account\" \"sa\" {",
      "  account_id   = \"my-service-account\"",
      "  display_name = \"A service account that only Jane can interact with\"",
      "}",
      "",
      "resource \"google_service_account_iam_policy\" \"admin-account-iam\" {",
      "  service_account_id = \"${google_service_account.sa.name}\"",
      "  policy_data        = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-resource-google_service_account_key": {
    "description": "Defines google_service_account_key",
    "prefix": "tf-google-resource-google_service_account_key",
    "body": [
      "resource \"google_service_account\" \"myaccount\" {",
      "  account_id = \"myaccount\"",
      "  display_name = \"My Service Account\"",
      "}",
      "",
      "resource \"google_service_account_key\" \"mykey\" {",
      "  service_account_id = \"${google_service_account.myaccount.name}\"",
      "  public_key_type = \"TYPE_X509_PEM_FILE\"",
      "}"
    ]
  },
  "google-resource-healthcare_dataset_iam": {
    "description": "Defines healthcare_dataset_iam",
    "prefix": "tf-google-resource-healthcare_dataset_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_healthcare_dataset_iam_policy\" \"dataset\" {",
      "\tdataset_id = \"your-dataset-id\"",
      "\tpolicy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-resource-healthcare_dicom_store_iam": {
    "description": "Defines healthcare_dicom_store_iam",
    "prefix": "tf-google-resource-healthcare_dicom_store_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_healthcare_dicom_store_iam_policy\" \"dicom_store\" {",
      "\tdicom_store_id = \"your-dicom-store-id\"",
      "\tpolicy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-resource-healthcare_fhir_store_iam": {
    "description": "Defines healthcare_fhir_store_iam",
    "prefix": "tf-google-resource-healthcare_fhir_store_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_healthcare_fhir_store_iam_policy\" \"fhir_store\" {",
      "\tfhir_store_id = \"your-fhir-store-id\"",
      "\tpolicy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-resource-healthcare_hl7_v2_store_iam": {
    "description": "Defines healthcare_hl7_v2_store_iam",
    "prefix": "tf-google-resource-healthcare_hl7_v2_store_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_healthcare_hl7_v2_store_iam_policy\" \"hl7_v2_store\" {",
      "\thl7_v2_store_id = \"your-hl7-v2-store-id\"",
      "\tpolicy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-resource-kms_crypto_key": {
    "description": "Defines kms_crypto_key",
    "prefix": "tf-google-resource-kms_crypto_key",
    "body": [
      "resource \"google_kms_key_ring\" \"keyring\" {",
      "  name = \"keyring-example\"",
      "  location = \"global\"",
      "}",
      "",
      "resource \"google_kms_crypto_key\" \"example-key\" {",
      "  name            = \"crypto-key-example\"",
      "  key_ring        = \"${google_kms_key_ring.keyring.self_link}\"",
      "  rotation_period = \"100000s\"",
      "",
      "  lifecycle {",
      "    prevent_destroy = true",
      "  }",
      "}"
    ]
  },
  "google-resource-kms_key_ring": {
    "description": "Defines kms_key_ring",
    "prefix": "tf-google-resource-kms_key_ring",
    "body": [
      "resource \"google_kms_key_ring\" \"example-keyring\" {",
      "  name = \"keyring-example\"",
      "  location = \"global\"",
      "}"
    ]
  },
  "google-resource-logging_billing_account_exclusion": {
    "description": "Defines logging_billing_account_exclusion",
    "prefix": "tf-google-resource-logging_billing_account_exclusion",
    "body": [
      "resource \"google_logging_billing_account_exclusion\" \"my-exclusion\" {",
      "    name            = \"my-instance-debug-exclusion\"",
      "    billing_account = \"ABCDEF-012345-GHIJKL\"",
      "",
      "    description     = \"Exclude GCE instance debug logs\"",
      "",
      "    # Exclude all DEBUG or lower severity messages relating to instances",
      "    filter          = \"resource.type = gce_instance AND severity <= DEBUG\"",
      "}"
    ]
  },
  "google-resource-logging_billing_account_sink": {
    "description": "Defines logging_billing_account_sink",
    "prefix": "tf-google-resource-logging_billing_account_sink",
    "body": [
      "resource \"google_logging_billing_account_sink\" \"my-sink\" {",
      "    name = \"my-sink\"",
      "    billing_account = \"ABCDEF-012345-GHIJKL\"",
      "",
      "    # Can export to pubsub, cloud storage, or bigquery",
      "    destination = \"storage.googleapis.com/${google_storage_bucket.log-bucket.name}\"",
      "}",
      "",
      "resource \"google_storage_bucket\" \"log-bucket\" {",
      "    name     = \"billing-logging-bucket\"",
      "}",
      "",
      "resource \"google_project_iam_binding\" \"log-writer\" {",
      "    role = \"roles/storage.objectCreator\"",
      "",
      "    members = [",
      "        \"${google_logging_billing_account_sink.my-sink.writer_identity}\",",
      "    ]",
      "}"
    ]
  },
  "google-resource-logging_folder_exclusion": {
    "description": "Defines logging_folder_exclusion",
    "prefix": "tf-google-resource-logging_folder_exclusion",
    "body": [
      "resource \"google_logging_folder_exclusion\" \"my-exclusion\" {",
      "    name        = \"my-instance-debug-exclusion\"",
      "    folder      = \"${google_folder.my-folder.name}\"",
      "",
      "    description = \"Exclude GCE instance debug logs\"",
      "",
      "    # Exclude all DEBUG or lower severity messages relating to instances",
      "    filter      = \"resource.type = gce_instance AND severity <= DEBUG\"",
      "}",
      "",
      "resource \"google_folder\" \"my-folder\" {",
      "    display_name = \"My folder\"",
      "    parent       = \"organizations/123456\"",
      "}"
    ]
  },
  "google-resource-logging_folder_sink": {
    "description": "Defines logging_folder_sink",
    "prefix": "tf-google-resource-logging_folder_sink",
    "body": [
      "resource \"google_logging_folder_sink\" \"my-sink\" {",
      "    name        = \"my-sink\"",
      "    folder      = \"${google_folder.my-folder.name}\"",
      "",
      "    # Can export to pubsub, cloud storage, or bigquery",
      "    destination = \"storage.googleapis.com/${google_storage_bucket.log-bucket.name}\"",
      "",
      "    # Log all WARN or higher severity messages relating to instances",
      "    filter      = \"resource.type = gce_instance AND severity >= WARN\"",
      "}",
      "",
      "resource \"google_storage_bucket\" \"log-bucket\" {",
      "    name = \"folder-logging-bucket\"",
      "}",
      "",
      "resource \"google_project_iam_binding\" \"log-writer\" {",
      "    role    = \"roles/storage.objectCreator\"",
      "",
      "    members = [",
      "        \"${google_logging_folder_sink.my-sink.writer_identity}\",",
      "    ]",
      "}",
      "",
      "resource \"google_folder\" \"my-folder\" {",
      "\tdisplay_name = \"My folder\"",
      "    parent       = \"organizations/123456\"",
      "}"
    ]
  },
  "google-resource-logging_metric": {
    "description": "Defines logging_metric",
    "prefix": "tf-google-resource-logging_metric",
    "body": [
      "resource \"google_logging_metric\" \"logging_metric\" {",
      "  name = \"my-(custom)/metric\"",
      "  filter = \"resource.type=gae_app AND severity>=ERROR\"",
      "  metric_descriptor {",
      "    metric_kind = \"DELTA\"",
      "    value_type = \"DISTRIBUTION\"",
      "    labels {",
      "        key = \"mass\"",
      "        value_type = \"STRING\"",
      "        description = \"amount of matter\"",
      "    }",
      "  }",
      "  value_extractor = \"EXTRACT(jsonPayload.request)\"",
      "  label_extractors = { \"mass\": \"EXTRACT(jsonPayload.request)\" }",
      "  bucket_options {",
      "    linear_buckets {",
      "      num_finite_buckets = 3",
      "      width = 1",
      "      offset = 1",
      "    }",
      "  }",
      "}"
    ]
  },
  "google-resource-logging_organization_exclusion": {
    "description": "Defines logging_organization_exclusion",
    "prefix": "tf-google-resource-logging_organization_exclusion",
    "body": [
      "resource \"google_logging_organization_exclusion\" \"my-exclusion\" {",
      "    name        = \"my-instance-debug-exclusion\"",
      "    org_id      = \"123456789\"",
      "",
      "    description = \"Exclude GCE instance debug logs\"",
      "",
      "    # Exclude all DEBUG or lower severity messages relating to instances",
      "    filter      = \"resource.type = gce_instance AND severity <= DEBUG\"",
      "}"
    ]
  },
  "google-resource-logging_organization_sink": {
    "description": "Defines logging_organization_sink",
    "prefix": "tf-google-resource-logging_organization_sink",
    "body": [
      "resource \"google_logging_organization_sink\" \"my-sink\" {",
      "    name        = \"my-sink\"",
      "    org_id      = \"123456789\"",
      "",
      "    # Can export to pubsub, cloud storage, or bigquery",
      "    destination = \"storage.googleapis.com/${google_storage_bucket.log-bucket.name}\"",
      "",
      "    # Log all WARN or higher severity messages relating to instances",
      "    filter      = \"resource.type = gce_instance AND severity >= WARN\"",
      "}",
      "",
      "resource \"google_storage_bucket\" \"log-bucket\" {",
      "    name = \"organization-logging-bucket\"",
      "}",
      "",
      "resource \"google_project_iam_member\" \"log-writer\" {",
      "    role    = \"roles/storage.objectCreator\"",
      "",
      "    member = \"${google_logging_organization_sink.my-sink.writer_identity}\"",
      "}"
    ]
  },
  "google-resource-logging_project_exclusion": {
    "description": "Defines logging_project_exclusion",
    "prefix": "tf-google-resource-logging_project_exclusion",
    "body": [
      "resource \"google_logging_project_exclusion\" \"my-exclusion\" {",
      "    name = \"my-instance-debug-exclusion\"",
      "",
      "    description = \"Exclude GCE instance debug logs\"",
      "",
      "    # Exclude all DEBUG or lower severity messages relating to instances",
      "    filter = \"resource.type = gce_instance AND severity <= DEBUG\"",
      "}"
    ]
  },
  "google-resource-logging_project_sink": {
    "description": "Defines logging_project_sink",
    "prefix": "tf-google-resource-logging_project_sink",
    "body": [
      "resource \"google_logging_project_sink\" \"my-sink\" {",
      "    name = \"my-pubsub-instance-sink\"",
      "",
      "    # Can export to pubsub, cloud storage, or bigquery",
      "    destination = \"pubsub.googleapis.com/projects/my-project/topics/instance-activity\"",
      "",
      "    # Log all WARN or higher severity messages relating to instances",
      "    filter = \"resource.type = gce_instance AND severity >= WARN\"",
      "",
      "    # Use a unique writer (creates a unique service account used for writing)",
      "    unique_writer_identity = true",
      "}"
    ]
  },
  "google-resource-monitoring_alert_policy": {
    "description": "Defines monitoring_alert_policy",
    "prefix": "tf-google-resource-monitoring_alert_policy",
    "body": [
      "resource \"google_monitoring_alert_policy\" \"alert_policy\" {",
      "  display_name = \"My Alert Policy\"",
      "  combiner = \"OR\"",
      "  conditions {",
      "    display_name = \"test condition\"",
      "    condition_threshold {",
      "      filter = \"metric.type=\\\"compute.googleapis.com/instance/disk/write_bytes_count\\\" AND resource.type=\\\"gce_instance\\\"\"",
      "      duration = \"60s\"",
      "      comparison = \"COMPARISON_GT\"",
      "      aggregations {",
      "        alignment_period = \"60s\"",
      "        per_series_aligner = \"ALIGN_RATE\"",
      "      }",
      "    }",
      "  }",
      "",
      "  user_labels = {",
      "    foo = \"bar\"",
      "  }",
      "}"
    ]
  },
  "google-resource-monitoring_group": {
    "description": "Defines monitoring_group",
    "prefix": "tf-google-resource-monitoring_group",
    "body": [
      "resource \"google_monitoring_group\" \"basic\" {",
      "  display_name = \"New Test Group\"",
      "",
      "  filter = \"resource.metadata.region=\\\"europe-west2\\\"\"",
      "}"
    ]
  },
  "google-resource-monitoring_notification_channel": {
    "description": "Defines monitoring_notification_channel",
    "prefix": "tf-google-resource-monitoring_notification_channel",
    "body": [
      "resource \"google_monitoring_notification_channel\" \"basic\" {",
      "  display_name = \"Test Notification Channel\"",
      "  type = \"email\"",
      "  labels = {",
      "    email_address = \"fake_email@blahblah.com\"",
      "  }",
      "}"
    ]
  },
  "google-resource-monitoring_uptime_check_config": {
    "description": "Defines monitoring_uptime_check_config",
    "prefix": "tf-google-resource-monitoring_uptime_check_config",
    "body": [
      "resource \"google_monitoring_uptime_check_config\" \"http\" {",
      "  display_name = \"http-uptime-check\"",
      "  timeout = \"60s\"",
      "",
      "  http_check {",
      "    path = \"/some-path\"",
      "    port = \"8010\"",
      "  }",
      "",
      "  monitored_resource {",
      "    type = \"uptime_url\"",
      "    labels = {",
      "      project_id = \"example\"",
      "      host = \"192.168.1.1\"",
      "    }",
      "  }",
      "",
      "  content_matchers {",
      "    content = \"example\"",
      "  }",
      "}"
    ]
  },
  "google-resource-pubsub_subscription": {
    "description": "Defines pubsub_subscription",
    "prefix": "tf-google-resource-pubsub_subscription",
    "body": [
      "resource \"google_pubsub_topic\" \"example\" {",
      "  name = \"example-topic\"",
      "}",
      "",
      "resource \"google_pubsub_subscription\" \"example\" {",
      "  name  = \"example-subscription\"",
      "  topic = \"${google_pubsub_topic.example.name}\"",
      "",
      "  ack_deadline_seconds = 20",
      "",
      "  labels = {",
      "    foo = \"bar\"",
      "  }",
      "",
      "  push_config {",
      "    push_endpoint = \"https://example.com/push\"",
      "",
      "    attributes {",
      "      x-goog-version = \"v1\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "google-resource-pubsub_subscription_iam": {
    "description": "Defines pubsub_subscription_iam",
    "prefix": "tf-google-resource-pubsub_subscription_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role    = \"roles/editor\"",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_pubsub_subscription_iam_policy\" \"editor\" {",
      "  subscription = \"your-subscription-name\"",
      "  policy_data  = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-resource-pubsub_topic": {
    "description": "Defines pubsub_topic",
    "prefix": "tf-google-resource-pubsub_topic",
    "body": [
      "resource \"google_pubsub_topic\" \"example\" {",
      "  name = \"example-topic\"",
      "",
      "  labels = {",
      "    foo = \"bar\"",
      "  }",
      "}"
    ]
  },
  "google-resource-pubsub_topic_iam": {
    "description": "Defines pubsub_topic_iam",
    "prefix": "tf-google-resource-pubsub_topic_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role    = \"roles/editor\"",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_pubsub_topic_iam_policy\" \"editor\" {",
      "  topic       = \"projects/{{project}}/topics/{{topic}}\"",
      "  policy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-resource-redis_instance": {
    "description": "Defines redis_instance",
    "prefix": "tf-google-resource-redis_instance",
    "body": [
      "resource \"google_redis_instance\" \"cache\" {",
      "  name           = \"memory-cache\"",
      "  memory_size_gb = 1",
      "}"
    ]
  },
  "google-resource-resource_manager_lien": {
    "description": "Defines resource_manager_lien",
    "prefix": "tf-google-resource-resource_manager_lien",
    "body": [
      "resource \"google_resource_manager_lien\" \"lien\" {",
      "  parent = \"projects/${google_project.project.number}\"",
      "  restrictions = [\"resourcemanager.projects.delete\"]",
      "  origin = \"machine-readable-explanation\"",
      "  reason = \"This project is an important environment\"",
      "}",
      "",
      "resource \"google_project\" \"project\" {",
      "  project_id = \"staging-project\"",
      "  name = \"A very important project!\"",
      "}"
    ]
  },
  "google-resource-runtimeconfig_config": {
    "description": "Defines runtimeconfig_config",
    "prefix": "tf-google-resource-runtimeconfig_config",
    "body": [
      "resource \"google_runtimeconfig_config\" \"my-runtime-config\" {",
      " \tname = \"my-service-runtime-config\"",
      " \tdescription = \"Runtime configuration values for my service\"",
      "}"
    ]
  },
  "google-resource-runtimeconfig_variable": {
    "description": "Defines runtimeconfig_variable",
    "prefix": "tf-google-resource-runtimeconfig_variable",
    "body": [
      "resource \"google_runtimeconfig_config\" \"my-runtime-config\" {",
      " \tname = \"my-service-runtime-config\"",
      " \tdescription = \"Runtime configuration values for my service\"",
      "}",
      "",
      "resource \"google_runtimeconfig_variable\" \"environment\" {",
      "\tparent = \"${google_runtimeconfig_config.my-runtime-config.name}\"",
      "\tname = \"prod-variables/hostname\"",
      "\ttext = \"example.com\"",
      "}"
    ]
  },
  "google-resource-service_networking_connection": {
    "description": "Defines service_networking_connection",
    "prefix": "tf-google-resource-service_networking_connection",
    "body": [
      "resource \"google_compute_network\" \"peering_network\" {",
      "  name = \"peering-network\"",
      "}",
      "",
      "resource \"google_compute_global_address\" \"private_ip_alloc\" {",
      "  name          = \"private-ip-alloc\"",
      "  purpose       = \"VPC_PEERING\"",
      "  address_type  = \"INTERNAL\"",
      "  prefix_length = 16",
      "  network       = \"${google_compute_network.peering_network.self_link}\"",
      "}",
      "",
      "resource \"google_service_networking_connection\" \"foobar\" {",
      "  network                 = \"${google_compute_network.peering_network.self_link}\"",
      "  service                 = \"servicenetworking.googleapis.com\"",
      "  reserved_peering_ranges = [\"${google_compute_global_address.private_ip_alloc.name}\"]",
      "}"
    ]
  },
  "google-resource-source_repo_repository": {
    "description": "Defines source_repo_repository",
    "prefix": "tf-google-resource-source_repo_repository",
    "body": [
      "resource \"google_sourcerepo_repository\" \"my-repo\" {",
      "  name = \"my-repository\"",
      "}"
    ]
  },
  "google-resource-source_repo_repository_iam": {
    "description": "Defines source_repo_repository_iam",
    "prefix": "tf-google-resource-source_repo_repository_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role    = \"roles/editor\"",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_sourcerepo_repository_iam_policy\" \"editor\" {",
      "  repository       = \"{{project}}/{{repository}}\"",
      "  policy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-resource-spanner_database": {
    "description": "Defines spanner_database",
    "prefix": "tf-google-resource-spanner_database",
    "body": [
      "resource \"google_spanner_instance\" \"main\" {",
      "  config       = \"regional-europe-west1\"",
      "  display_name = \"main-instance\"",
      "}",
      "",
      "resource \"google_spanner_database\" \"database\" {",
      "  instance  = \"${google_spanner_instance.main.name}\"",
      "  name      = \"my-database\"",
      "  ddl       =  [",
      "    \"CREATE TABLE t1 (t1 INT64 NOT NULL,) PRIMARY KEY(t1)\",",
      "    \"CREATE TABLE t2 (t2 INT64 NOT NULL,) PRIMARY KEY(t2)\"",
      "  ]",
      "}"
    ]
  },
  "google-resource-spanner_database_iam": {
    "description": "Defines spanner_database_iam",
    "prefix": "tf-google-resource-spanner_database_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_spanner_database_iam_policy\" \"database\" {",
      "  instance    = \"your-instance-name\"",
      "  database    = \"your-database-name\"",
      "  policy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-resource-spanner_instance": {
    "description": "Defines spanner_instance",
    "prefix": "tf-google-resource-spanner_instance",
    "body": [
      "resource \"google_spanner_instance\" \"example\" {",
      "  config        = \"regional-us-central1\"",
      "  display_name  = \"Test Spanner Instance\"",
      "  num_nodes     = 2",
      "  labels = {",
      "    \"foo\" = \"bar\"",
      "  }",
      "}"
    ]
  },
  "google-resource-spanner_instance_iam": {
    "description": "Defines spanner_instance_iam",
    "prefix": "tf-google-resource-spanner_instance_iam",
    "body": [
      "data \"google_iam_policy\" \"admin\" {",
      "  binding {",
      "    role = \"roles/editor\"",
      "",
      "    members = [",
      "      \"user:jane@example.com\",",
      "    ]",
      "  }",
      "}",
      "",
      "resource \"google_spanner_instance_iam_policy\" \"instance\" {",
      "  instance    = \"your-instance-name\"",
      "  policy_data = \"${data.google_iam_policy.admin.policy_data}\"",
      "}"
    ]
  },
  "google-resource-sql_database": {
    "description": "Defines sql_database",
    "prefix": "tf-google-resource-sql_database",
    "body": [
      "resource \"random_id\" \"db_name_suffix\" {",
      "  byte_length = 4",
      "}",
      "",
      "resource \"google_sql_database_instance\" \"master\" {",
      "  name = \"master-instance-${random_id.db_name_suffix.hex}\"",
      "",
      "  settings {",
      "    tier = \"D0\"",
      "  }",
      "}",
      "",
      "resource \"google_sql_database\" \"users\" {",
      "  name      = \"users-db\"",
      "  instance  = \"${google_sql_database_instance.master.name}\"",
      "  charset   = \"latin1\"",
      "  collation = \"latin1_swedish_ci\"",
      "}"
    ]
  },
  "google-resource-sql_database_instance": {
    "description": "Defines sql_database_instance",
    "prefix": "tf-google-resource-sql_database_instance",
    "body": [
      "resource \"random_id\" \"db_name_suffix\" {",
      "  byte_length = 4",
      "}",
      "",
      "resource \"google_sql_database_instance\" \"master\" {",
      "  name = \"master-instance-${random_id.db_name_suffix.hex}\"",
      "  database_version = \"MYSQL_5_6\"",
      "  # First-generation instance regions are not the conventional",
      "  # Google Compute Engine regions. See argument reference below.",
      "  region = \"us-central\"",
      "",
      "  settings {",
      "    tier = \"D0\"",
      "  }",
      "}"
    ]
  },
  "google-resource-sql_ssl_cert": {
    "description": "Defines sql_ssl_cert",
    "prefix": "tf-google-resource-sql_ssl_cert",
    "body": [
      "resource \"random_id\" \"db_name_suffix\" {",
      "  byte_length = 4",
      "}",
      "",
      "resource \"google_sql_database_instance\" \"master\" {",
      "  name = \"master-instance-${random_id.db_name_suffix.hex}\"",
      "",
      "  settings {",
      "    tier = \"D0\"",
      "  }",
      "}",
      "",
      "resource \"google_sql_ssl_cert\" \"client_cert\" {",
      "  common_name = \"client-name\"",
      "  instance    = \"${google_sql_database_instance.master.name}\"",
      "}"
    ]
  },
  "google-resource-sql_user": {
    "description": "Defines sql_user",
    "prefix": "tf-google-resource-sql_user",
    "body": [
      "resource \"random_id\" \"db_name_suffix\" {",
      "  byte_length = 4",
      "}",
      "",
      "resource \"google_sql_database_instance\" \"master\" {",
      "  name = \"master-instance-${random_id.db_name_suffix.hex}\"",
      "",
      "  settings {",
      "    tier = \"D0\"",
      "  }",
      "}",
      "",
      "resource \"google_sql_user\" \"users\" {",
      "  name     = \"me\"",
      "  instance = \"${google_sql_database_instance.master.name}\"",
      "  host     = \"me.com\"",
      "  password = \"changeme\"",
      "}"
    ]
  },
  "google-resource-storage_bucket": {
    "description": "Defines storage_bucket",
    "prefix": "tf-google-resource-storage_bucket",
    "body": [
      "resource \"google_storage_bucket\" \"image-store\" {",
      "  name     = \"image-store-bucket\"",
      "  location = \"EU\"",
      "",
      "  website {",
      "    main_page_suffix = \"index.html\"",
      "    not_found_page   = \"404.html\"",
      "  }",
      "}"
    ]
  },
  "google-resource-storage_bucket_acl": {
    "description": "Defines storage_bucket_acl",
    "prefix": "tf-google-resource-storage_bucket_acl",
    "body": [
      "resource \"google_storage_bucket\" \"image-store\" {",
      "  name     = \"image-store-bucket\"",
      "  location = \"EU\"",
      "}",
      "",
      "resource \"google_storage_bucket_acl\" \"image-store-acl\" {",
      "  bucket = \"${google_storage_bucket.image-store.name}\"",
      "",
      "  role_entity = [",
      "    \"OWNER:user-my.email@gmail.com\",",
      "    \"READER:group-mygroup\",",
      "  ]",
      "}"
    ]
  },
  "google-resource-storage_bucket_iam": {
    "description": "Defines storage_bucket_iam",
    "prefix": "tf-google-resource-storage_bucket_iam",
    "body": [
      "resource \"google_storage_bucket_iam_binding\" \"binding\" {",
      "  bucket = \"your-bucket-name\"",
      "  role        = \"roles/storage.objectViewer\"",
      "",
      "  members = [",
      "    \"user:jane@example.com\",",
      "  ]",
      "}"
    ]
  },
  "google-resource-storage_bucket_object": {
    "description": "Defines storage_bucket_object",
    "prefix": "tf-google-resource-storage_bucket_object",
    "body": [
      "resource \"google_storage_bucket_object\" \"picture\" {",
      "  name   = \"butterfly01\"",
      "  source = \"/images/nature/garden-tiger-moth.jpg\"",
      "  bucket = \"image-store\"",
      "}"
    ]
  },
  "google-resource-storage_default_object_access_control": {
    "description": "Defines storage_default_object_access_control",
    "prefix": "tf-google-resource-storage_default_object_access_control",
    "body": [
      "resource \"google_storage_default_object_access_control\" \"public_rule\" {",
      "  bucket = \"${google_storage_bucket.bucket.name}\"",
      "  role   = \"READER\"",
      "  entity = \"allUsers\"",
      "}",
      "",
      "resource \"google_storage_bucket\" \"bucket\" {",
      "\tname = \"static-content-bucket\"",
      "}"
    ]
  },
  "google-resource-storage_default_object_acl": {
    "description": "Defines storage_default_object_acl",
    "prefix": "tf-google-resource-storage_default_object_acl",
    "body": [
      "resource \"google_storage_bucket\" \"image-store\" {",
      "  name     = \"image-store-bucket\"",
      "  location = \"EU\"",
      "}",
      "",
      "resource \"google_storage_default_object_acl\" \"image-store-default-acl\" {",
      "  bucket = \"${google_storage_bucket.image-store.name}\"",
      "  role_entity = [",
      "    \"OWNER:user-my.email@gmail.com\",",
      "    \"READER:group-mygroup\",",
      "  ]",
      "}"
    ]
  },
  "google-resource-storage_notification": {
    "description": "Defines storage_notification",
    "prefix": "tf-google-resource-storage_notification",
    "body": [
      "resource \"google_storage_notification\" \"notification\" {",
      "\tbucket            = \"${google_storage_bucket.bucket.name}\"",
      "\tpayload_format    = \"JSON_API_V1\"",
      "\ttopic             = \"${google_pubsub_topic.topic.id}\"",
      "\tevent_types       = [\"OBJECT_FINALIZE\", \"OBJECT_METADATA_UPDATE\"]",
      "\tcustom_attributes = {",
      "\t\tnew-attribute = \"new-attribute-value\"",
      "\t}",
      "\tdepends_on        = [\"google_pubsub_topic_iam_binding.binding\"]",
      "}",
      "",
      "// Enable notifications by giving the correct IAM permission to the unique service account.",
      "",
      "data \"google_storage_project_service_account\" \"gcs_account\" {}",
      "",
      "resource \"google_pubsub_topic_iam_binding\" \"binding\" {",
      "\ttopic       = \"${google_pubsub_topic.topic.name}\"",
      "\trole        = \"roles/pubsub.publisher\"",
      "\tmembers     = [\"serviceAccount:${data.google_storage_project_service_account.gcs_account.email_address}\"]",
      "}",
      "",
      "// End enabling notifications",
      "",
      "",
      "resource \"google_storage_bucket\" \"bucket\" {",
      "\tname = \"default_bucket\"",
      "}",
      "",
      "resource \"google_pubsub_topic\" \"topic\" {",
      "\tname = \"default_topic\"",
      "}"
    ]
  },
  "google-resource-storage_object_access_control": {
    "description": "Defines storage_object_access_control",
    "prefix": "tf-google-resource-storage_object_access_control",
    "body": [
      "resource \"google_storage_object_access_control\" \"public_rule\" {",
      "  object = \"${google_storage_bucket_object.object.output_name}\"",
      "  bucket = \"${google_storage_bucket.bucket.name}\"",
      "  role   = \"READER\"",
      "  entity = \"allUsers\"",
      "}",
      "",
      "resource \"google_storage_bucket\" \"bucket\" {",
      "\tname = \"static-content-bucket\"",
      "}",
      "",
      " resource \"google_storage_bucket_object\" \"object\" {",
      "\tname   = \"public-object\"",
      "\tbucket = \"${google_storage_bucket.bucket.name}\"",
      "\tsource = \"../static/img/header-logo.png\"",
      "}"
    ]
  },
  "google-resource-storage_object_acl": {
    "description": "Defines storage_object_acl",
    "prefix": "tf-google-resource-storage_object_acl",
    "body": [
      "resource \"google_storage_bucket\" \"image-store\" {",
      "  name     = \"image-store-bucket\"",
      "  location = \"EU\"",
      "}",
      "",
      "resource \"google_storage_bucket_object\" \"image\" {",
      "  name   = \"image1\"",
      "  bucket = \"${google_storage_bucket.image-store.name}\"",
      "  source = \"image1.jpg\"",
      "}",
      "",
      "resource \"google_storage_object_acl\" \"image-store-acl\" {",
      "  bucket = \"${google_storage_bucket.image-store.name}\"",
      "  object = \"${google_storage_bucket_object.image.output_name}\"",
      "",
      "  role_entity = [",
      "    \"OWNER:user-my.email@gmail.com\",",
      "    \"READER:group-mygroup\",",
      "  ]",
      "}"
    ]
  },
  "google-resource-storage_transfer_job": {
    "description": "Defines storage_transfer_job",
    "prefix": "tf-google-resource-storage_transfer_job",
    "body": [
      "",
      "data \"google_storage_transfer_project_service_account\" \"default\" {",
      "  project       = \"${var.project}\"",
      "}",
      "",
      "resource \"google_storage_bucket\" \"s3-backup-bucket\" {",
      "  name          = \"${var.aws_s3_bucket}-backup\"",
      "  storage_class = \"NEARLINE\"",
      "  project       = \"${var.project}\"",
      "}",
      "",
      "resource \"google_storage_bucket_iam_member\" \"s3-backup-bucket\" {",
      "  bucket        = \"${google_storage_bucket.s3-backup-bucket.name}\"",
      "  role          = \"roles/storage.admin\"",
      "  member        = \"serviceAccount:${data.google_storage_transfer_project_service_account.default.email}\"",
      "  depends_on    = [",
      "    \"google_storage_bucket.s3-backup-bucket\"",
      "  ]",
      "}",
      "",
      "resource \"google_storage_transfer_job\" \"s3-bucket-nightly-backup\" {",
      "\tdescription\t= \"Nightly backup of S3 bucket\"",
      "\tproject     = \"${var.project}\"",
      "",
      "\ttransfer_spec {",
      "\t\tobject_conditions {",
      "\t\t\tmax_time_elapsed_since_last_modification = \"600s\"",
      "\t\t\texclude_prefixes = [",
      "\t\t\t\t\"requests.gz\"",
      "\t\t\t]",
      "\t\t}",
      "\t\ttransfer_options {",
      "\t\t\tdelete_objects_unique_in_sink = false",
      "\t\t}",
      "\t\taws_s3_data_source {",
      "\t\t\tbucket_name = \"${var.aws_s3_bucket}\"",
      "\t\t\taws_access_key {",
      "\t\t\t\taccess_key_id \t\t= \"${var.aws_access_key}\"",
      "\t\t\t\tsecret_access_key \t= \"${var.aws_secret_key}\"",
      "\t\t\t}",
      "\t\t}",
      "\t\tgcs_data_sink {",
      "\t\t\tbucket_name = \"${google_storage_bucket.s3-backup-bucket.name}\"",
      "\t\t}",
      "\t}",
      "",
      "\tschedule {",
      "\t\tschedule_start_date {",
      "\t\t\tyear\t= 2018",
      "\t\t\tmonth\t= 10",
      "\t\t\tday\t\t= 1",
      "\t\t}",
      "\t\tschedule_end_date {",
      "\t\t\tyear\t= 2019",
      "\t\t\tmonth\t= 1",
      "\t\t\tday\t\t= 15",
      "\t\t}",
      "\t\tstart_time_of_day {",
      "\t\t\thours\t= 23",
      "\t\t\tminutes\t= 30",
      "\t\t\tseconds\t= 0",
      "\t\t\tnanos\t= 0",
      "\t\t}",
      "\t}",
      "",
      "\tdepends_on = [",
      "\t    \"google_storage_bucket_iam_member.s3-backup-bucket\"",
      "\t]",
      "}"
    ]
  },
  "google-resource-tpu_node": {
    "description": "Defines tpu_node",
    "prefix": "tf-google-resource-tpu_node",
    "body": [
      "data \"google_tpu_tensorflow_versions\" \"available\" { }",
      "",
      "resource \"google_tpu_node\" \"tpu\" {",
      "\tname           = \"test-tpu\"",
      "\tzone           = \"us-central1-b\"",
      "",
      "\taccelerator_type   = \"v3-8\"",
      "\ttensorflow_version = \"${data.google_tpu_tensorflow_versions.available.versions[0]}\"",
      "\tcidr_block         = \"10.2.0.0/29\"",
      "}"
    ]
  },
  "google-resource-usage_export_bucket": {
    "description": "Defines usage_export_bucket",
    "prefix": "tf-google-resource-usage_export_bucket",
    "body": [
      "resource \"google_project_usage_export_bucket\" \"usage_export\" {",
      "  project      = \"development-project\"",
      "  bucket_name  = \"usage-tracking-bucket\"",
      "}"
    ]
  },
  "grafana-resource-alert_notification": {
    "description": "Defines alert_notification",
    "prefix": "tf-grafana-resource-alert_notification",
    "body": [
      "resource \"grafana_alert_notification\" \"email_someteam\" {",
      "  name = \"Email that team\"",
      "  type = \"email\"",
      "  is_default = false",
      "",
      "  settings {",
      "    \"addresses\" = \"foo@example.net;bar@example.net\"",
      "    \"uploadImage\" = \"false\"",
      "  }",
      "}"
    ]
  },
  "grafana-resource-dashboard": {
    "description": "Defines dashboard",
    "prefix": "tf-grafana-resource-dashboard",
    "body": [
      "resource \"grafana_dashboard\" \"metrics\" {",
      "  config_json = \"${file(\"grafana-dashboard.json\")}\"",
      "}"
    ]
  },
  "grafana-resource-data_source": {
    "description": "Defines data_source",
    "prefix": "tf-grafana-resource-data_source",
    "body": [
      "resource \"grafana_data_source\" \"metrics\" {",
      "  type          = \"influxdb\"",
      "  name          = \"myapp-metrics\"",
      "  url           = \"http://influxdb.example.net:8086/\"",
      "  username      = \"myapp\"",
      "  password      = \"foobarbaz\"",
      "  database_name = \"${influxdb_database.metrics.name}\"",
      "}"
    ]
  },
  "grafana-resource-folder": {
    "description": "Defines folder",
    "prefix": "tf-grafana-resource-folder",
    "body": [
      "resource \"grafana_folder\" \"collection\" {",
      "  title = \"Folder Title\"",
      "}",
      "",
      "resource \"grafana_dashboard\" \"dashboard_in_folder\" {",
      "  folder = \"${grafana_folder.collection.id}\"",
      "  ...",
      "}"
    ]
  },
  "grafana-resource-organization": {
    "description": "Defines organization",
    "prefix": "tf-grafana-resource-organization",
    "body": [
      "# Create a Grafana organization with defined membership, creating placeholder",
      "# accounts for users that don't exist.",
      "resource \"grafana_organization\" \"test-org\" {",
      "    name         = \"Test Organization\"",
      "    admin_user   = \"admin\"",
      "    create_users = true",
      "    admins       = [",
      "        \"admin@example.com\"",
      "    ]",
      "    editors      = [",
      "        \"editor-01@example.com\",",
      "        \"editor-02@example.com\"",
      "    ]",
      "    viewers      = [",
      "        \"viewer-01@example.com\",",
      "        \"viewer-02@example.com\"",
      "    ]",
      "}"
    ]
  },
  "gridscale-data-ip": {
    "description": "Defines ip",
    "prefix": "tf-gridscale-data-ip",
    "body": [
      "resource \"gridscale_ipv4\" \"ipv4name\"{",
      "\tname = \"terraform-ipv4\"",
      "}",
      "",
      "resource \"gridscale_ipv6\" \"ipv6name\"{",
      "\tname = \"terraform-ipv6\"",
      "}",
      "",
      "resource \"gridscale_server\" \"servername\"{",
      "\tname = \"terra-server\"",
      "\tcores = 2",
      "\tmemory = 4",
      "\tipv4 = \"${gridscale_ipv4.ipv4name.id}\"",
      "\tipv6 = \"${gridscale_ipv6.ipv6name.id}\"",
      "}"
    ]
  },
  "gridscale-data-network": {
    "description": "Defines network",
    "prefix": "tf-gridscale-data-network",
    "body": [
      "resource \"gridscale_network\" \"networkname\"{",
      "\tname = \"terraform-network\"",
      "}",
      "",
      "resource \"gridscale_server\" \"servername\"{",
      "\tname = \"terra-server\"",
      "\tcores = 2",
      "\tmemory = 4",
      "\tnetwork {",
      "\t\tobject_uuid = \"${gridscale_network.networkname.id}\"",
      "\t\tbootdevice = true",
      "\t}",
      "}"
    ]
  },
  "gridscale-data-sshkey": {
    "description": "Defines sshkey",
    "prefix": "tf-gridscale-data-sshkey",
    "body": [
      "resource \"gridscale_sshkey\" \"sshkey-john\"{",
      "\tname = \"john's computer\"",
      "\tsshkey = \"an ssh public key\"",
      "}",
      "",
      "resource \"gridscale_sshkey\" \"sshkey-jane\"{",
      "\tname = \"jane's computer\"",
      "\tsshkey = \"an ssh public key\"",
      "}",
      "",
      "resource \"gridscale_storage\" \"storagename\"{",
      "\tname = \"terraform-storage\"",
      "\tcapacity = 10",
      "\ttemplate {",
      "\t\tsshkeys = [",
      "\t\t    \"${gridscale_sshkey.sshkey-john.id}\",",
      "\t\t    \"${gridscale_sshkey.sshkey-jane.id}\"",
      "\t\t]",
      "\t\ttemplate_uuid = \"4db64bfc-9fb2-4976-80b5-94ff43b1233a\"",
      "\t}",
      "}"
    ]
  },
  "gridscale-data-storage": {
    "description": "Defines storage",
    "prefix": "tf-gridscale-data-storage",
    "body": [
      "resource \"gridscale_storage\" \"storagename\"{",
      "\tname = \"terraform-storage\"",
      "\tcapacity = 10",
      "}",
      "",
      "resource \"gridscale_server\" \"servername\"{",
      "\tname = \"terra-server\"",
      "\tcores = 2",
      "\tmemory = 4",
      "\tstorage {",
      "\t\tobject_uuid = \"${gridscale_storage.storagename.id}\"",
      "\t\tbootdevice = true",
      "\t}",
      "}"
    ]
  },
  "gridscale-data-template": {
    "description": "Defines template",
    "prefix": "tf-gridscale-data-template",
    "body": [
      "   data \"gridscale_template\" \"ubuntu\" {",
      "     name = \"Ubuntu 18.04 LTS\"",
      "   }"
    ]
  },
  "gridscale-resource-ipv4": {
    "description": "Defines ipv4",
    "prefix": "tf-gridscale-resource-ipv4",
    "body": [
      "resource \"gridscale_ipv4\" \"terra-ipv4-test\" {",
      "\tname = \"terra-test\"",
      "}"
    ]
  },
  "gridscale-resource-ipv6": {
    "description": "Defines ipv6",
    "prefix": "tf-gridscale-resource-ipv6",
    "body": [
      "resource \"gridscale_ipv6\" \"terra-ipv6-test\" {",
      "\tname = \"terra-test\"",
      "}"
    ]
  },
  "gridscale-resource-network": {
    "description": "Defines network",
    "prefix": "tf-gridscale-resource-network",
    "body": [
      "resource \"gridscale_network\" \"networkname\"{",
      "\tname = \"terraform-network\"",
      "}"
    ]
  },
  "gridscale-resource-server": {
    "description": "Defines server",
    "prefix": "tf-gridscale-resource-server",
    "body": [
      "resource \"gridscale_server\" \"terra-server-test\"{",
      "\tname = \"terra-server-test\"",
      "\tcores = 2",
      "\tmemory = 1",
      "\tstorage {",
      "\t\tobject_uuid = \"${gridscale_storage.terra-storage-test.id}\"",
      "\t\tbootdevice = true",
      "\t}",
      "\tstorage {",
      "    \t\tobject_uuid = \"UUID of storage 2\",",
      "    \t}",
      "\tnetwork {",
      "\t\tobject_uuid = \"${gridscale_network.terra-network-test.id}\"",
      "\t\tbootdevice = true",
      "\t}",
      "\tnetwork {",
      "    \t\tobject_uuid = \"UUID of network 2\"",
      "    }",
      "\tipv4 = \"${gridscale_ipv4.terra-ipv4-test.id}\"",
      "\tipv6 = \"UUID of ipv6 address\"",
      "\tisoimage = \"9be3e0a3-42ac-4207-8887-3383c405724d\"",
      "}"
    ]
  },
  "gridscale-resource-sshkey": {
    "description": "Defines sshkey",
    "prefix": "tf-gridscale-resource-sshkey",
    "body": [
      "resource \"gridscale_sshkey\" \"sshkey-john\"{",
      "\tname = \"john's computer\"",
      "\tsshkey = \"an ssh public key\"",
      "}"
    ]
  },
  "gridscale-resource-storage": {
    "description": "Defines storage",
    "prefix": "tf-gridscale-resource-storage",
    "body": [
      "resource \"gridscale_storage\" \"storage-john\"{",
      "\tname = \"john's storage\"",
      "\tcapacity = 10",
      "\tstorage = \"storage_high\"",
      "\ttemplate {",
      "\t    template_uuid = \"4db64bfc-9fb2-4976-80b5-94ff43b1233a\"",
      "\t    password = \"${var.gridscale_password-john}\"",
      "\t    password_type = \"plain\"",
      "\t    hostname = \"Ubuntu\"",
      "\t}",
      "}"
    ]
  },
  "hcloud-data-datacenter": {
    "description": "Defines datacenter",
    "prefix": "tf-hcloud-data-datacenter",
    "body": [
      "data \"hcloud_datacenter\" \"ds_1\" {",
      "  name = \"fsn1-dc8\"",
      "}",
      "data \"hcloud_datacenter\" \"ds_2\" {",
      "  id = 4",
      "}"
    ]
  },
  "hcloud-data-datacenters": {
    "description": "Defines datacenters",
    "prefix": "tf-hcloud-data-datacenters",
    "body": [
      "data \"hcloud_datacenters\" \"ds\" {",
      "}",
      "",
      "resource \"hcloud_server\" \"workers\" {",
      "  name = \"node1\"",
      "  image = \"debian-9\"",
      "  server_type = \"cx31\"",
      "  datacenter = \"${element(data.hcloud_datacenters.ds.names, count.index)}\"",
      "",
      "  count = 3",
      "}"
    ]
  },
  "hcloud-data-floating_ip": {
    "description": "Defines floating_ip",
    "prefix": "tf-hcloud-data-floating_ip",
    "body": [
      "data \"hcloud_floating_ip\" \"ip_1\" {",
      "  ip_address = \"1.2.3.4\"",
      "}",
      "data \"hcloud_floating_ip\" \"image_2\" {",
      "  with_selector = \"key=value\"",
      "}",
      "resource \"hcloud_floating_ip_assignment\" \"main\" {",
      "  count          = \"${var.counter}\"",
      "  floating_ip_id = \"${data.hcloud_floating_ip.ip_1.id}\"",
      "  server_id      = \"${hcloud_server.main.id}\"",
      "}"
    ]
  },
  "hcloud-data-image": {
    "description": "Defines image",
    "prefix": "tf-hcloud-data-image",
    "body": [
      "data \"hcloud_image\" \"image_1\" {",
      "  id = \"1234\"",
      "}",
      "data \"hcloud_image\" \"image_2\" {",
      "  name = \"ubuntu-18.04\"",
      "}",
      "data \"hcloud_image\" \"image_3\" {",
      "  with_selector = \"key=value\"",
      "}",
      "",
      "resource \"hcloud_server\" \"main\" {",
      "  image  = \"${data.hcloud_image.image_1.name}\"",
      "}"
    ]
  },
  "hcloud-data-location": {
    "description": "Defines location",
    "prefix": "tf-hcloud-data-location",
    "body": [
      "data \"hcloud_location\" \"l_1\" {",
      "  name = \"fsn1\"",
      "}",
      "data \"hcloud_location\" \"l_2\" {",
      "  id = 1",
      "}"
    ]
  },
  "hcloud-data-locations": {
    "description": "Defines locations",
    "prefix": "tf-hcloud-data-locations",
    "body": [
      "data \"hcloud_locations\" \"ds\" {",
      "}",
      "",
      "resource \"hcloud_server\" \"workers\" {",
      "  name = \"node1\"",
      "  image = \"debian-9\"",
      "  server_type = \"cx31\"",
      "  location = \"${element(data.hcloud_locations.ds.names, count.index)}\"",
      "",
      "  count = 3",
      "}"
    ]
  },
  "hcloud-data-network": {
    "description": "Defines network",
    "prefix": "tf-hcloud-data-network",
    "body": [
      "data \"hcloud_network\" \"network_1\" {",
      "  id = \"1234\"",
      "}",
      "data \"hcloud_network\" \"network_2\" {",
      "  name = \"my-network\"",
      "}",
      "data \"hcloud_network\" \"network_3\" {",
      "  with_selector = \"key=value\"",
      "}"
    ]
  },
  "hcloud-data-server": {
    "description": "Defines server",
    "prefix": "tf-hcloud-data-server",
    "body": [
      "data \"hcloud_server\" \"s_1\" {",
      "  name = \"my-server\"",
      "}",
      "data \"hcloud_server\" \"s_2\" {",
      "  id = \"123\"",
      "}",
      "data \"hcloud_server\" \"s_3\" {",
      "  with_selector =  \"key=value\"",
      "}"
    ]
  },
  "hcloud-data-ssh_key": {
    "description": "Defines ssh_key",
    "prefix": "tf-hcloud-data-ssh_key",
    "body": [
      "data \"hcloud_ssh_key\" \"ssh_key_1\" {",
      "  id = \"1234\"",
      "}",
      "data \"hcloud_ssh_key\" \"ssh_key_2\" {",
      "  name = \"my-ssh-key\"",
      "}",
      "data \"hcloud_ssh_key\" \"ssh_key_3\" {",
      "  fingerprint = \"43:51:43:a1:b5:fc:8b:b7:0a:3a:a9:b1:0f:66:73:a8\"",
      "}",
      "data \"hcloud_ssh_key\" \"ssh_key_4\" {",
      "  with_selector = \"key=value\"",
      "}",
      "resource \"hcloud_server\" \"main\" {",
      "  ssh_keys  = [\"${data.hcloud_ssh_key.ssh_key_1.id}\",\"${data.hcloud_ssh_key.ssh_key_2.id}\",\"${data.hcloud_ssh_key.ssh_key_3.id}\"]",
      "}"
    ]
  },
  "hcloud-data-ssh_keys": {
    "description": "Defines ssh_keys",
    "prefix": "tf-hcloud-data-ssh_keys",
    "body": [
      "data \"hcloud_ssh_keys\" \"all_keys\" {",
      "}",
      "data \"hcloud_ssh_keys\" \"keys_by_selector\" {",
      "  with_selector = \"foo=bar\"",
      "}",
      "resource \"hcloud_server\" \"main\" {",
      "  ssh_keys  = \"${data.hcloud_ssh_keys.all_keys.ssh_keys.*.name}\"",
      "}"
    ]
  },
  "hcloud-data-volume": {
    "description": "Defines volume",
    "prefix": "tf-hcloud-data-volume",
    "body": [
      "data \"hcloud_volume\" \"volume_1\" {",
      "  id = \"1234\"",
      "}",
      "data \"hcloud_volume\" \"volume_2\" {",
      "  name = \"my-volume\"",
      "}",
      "data \"hcloud_volume\" \"volume_3\" {",
      "  with_selector = \"key=value\"",
      "}"
    ]
  },
  "hcloud-resource-floating_ip": {
    "description": "Defines floating_ip",
    "prefix": "tf-hcloud-resource-floating_ip",
    "body": [
      "resource \"hcloud_server\" \"node1\" {",
      "  name = \"node1\"",
      "  image = \"debian-9\"",
      "  server_type = \"cx11\"",
      "}",
      "",
      "resource \"hcloud_floating_ip\" \"master\" {",
      "  type = \"ipv4\"",
      "  server_id = \"${hcloud_server.node1.id}\"",
      "}"
    ]
  },
  "hcloud-resource-floating_ip_assignment": {
    "description": "Defines floating_ip_assignment",
    "prefix": "tf-hcloud-resource-floating_ip_assignment",
    "body": [
      "resource \"hcloud_floating_ip_assignment\" \"main\" {",
      "  floating_ip_id = \"${hcloud_floating_ip.master.id}\"",
      "  server_id = \"${hcloud_server.node1.id}\"",
      "}",
      "",
      "resource \"hcloud_server\" \"node1\" {",
      "  name = \"node1\"",
      "  image = \"debian-9\"",
      "  server_type = \"cx11\"",
      "  datacenter = \"fsn1-dc8\"",
      "}",
      "",
      "resource \"hcloud_floating_ip\" \"master\" {",
      "  type = \"ipv4\"",
      "  home_location = \"nbg1\"",
      "}"
    ]
  },
  "hcloud-resource-network": {
    "description": "Defines network",
    "prefix": "tf-hcloud-resource-network",
    "body": [
      "resource \"hcloud_network\" \"privNet\" {",
      "  name = \"my-net\"",
      "  ip_range = \"10.0.1.0/24\"",
      "}"
    ]
  },
  "hcloud-resource-network_route": {
    "description": "Defines network_route",
    "prefix": "tf-hcloud-resource-network_route",
    "body": [
      "resource \"hcloud_network\" \"mynet\" {",
      "  name = \"my-net\"",
      "  ip_range = \"10.0.0.0/8\"",
      "}",
      "resource \"hcloud_network_route\" \"privNet\" {",
      "  network_id = \"${hcloud_network.mynet.id}\"",
      "  destination = \"10.100.1.0/24\"",
      "  gateway = \"10.0.1.1\"",
      "}",
      ""
    ]
  },
  "hcloud-resource-network_subnet": {
    "description": "Defines network_subnet",
    "prefix": "tf-hcloud-resource-network_subnet",
    "body": [
      "resource \"hcloud_network\" \"mynet\" {",
      "  name = \"my-net\"",
      "  ip_range = \"10.0.0.0/8\"",
      "}",
      "resource \"hcloud_network_subnet\" \"foonet\" {",
      "  network_id = \"${hcloud_network.mynet.id}\"",
      "  type = \"server\"",
      "  network_zone = \"eu-central\"",
      "  ip_range   = \"10.0.1.0/24\"",
      "}",
      ""
    ]
  },
  "hcloud-resource-rdns": {
    "description": "Defines rdns",
    "prefix": "tf-hcloud-resource-rdns",
    "body": [
      "resource \"hcloud_server\" \"node1\" {",
      "  name = \"node1\"",
      "  image = \"debian-9\"",
      "  server_type = \"cx11\"",
      "}",
      "",
      "resource \"hcloud_rdns\" \"master\" {",
      "  server_id = \"${hcloud_server.node1.id}\"",
      "  ip_address = \"${hcloud_server.node1.ipv4_address}\"",
      "  dns_ptr = \"example.com\"",
      "}"
    ]
  },
  "hcloud-resource-server": {
    "description": "Defines server",
    "prefix": "tf-hcloud-resource-server",
    "body": [
      "# Create a new server running debian",
      "resource \"hcloud_server\" \"node1\" {",
      "  name = \"node1\"",
      "  image = \"debian-9\"",
      "  server_type = \"cx11\"",
      "}"
    ]
  },
  "hcloud-resource-server_network": {
    "description": "Defines server_network",
    "prefix": "tf-hcloud-resource-server_network",
    "body": [
      "resource \"hcloud_server\" \"node1\" {",
      "  name = \"node1\"",
      "  image = \"debian-9\"",
      "  server_type = \"cx11\"",
      "}",
      "resource \"hcloud_network\" \"mynet\" {",
      "  name = \"my-net\"",
      "  ip_range = \"10.0.0.0/8\"",
      "}",
      "resource \"hcloud_network_subnet\" \"foonet\" {",
      "  network_id = \"${hcloud_network.mynet.id}\"",
      "  type = \"server\"",
      "  network_zone = \"eu-central\"",
      "  ip_range   = \"10.0.1.0/24\"",
      "}",
      "",
      "resource \"hcloud_server_network\" \"srvnetwork\" {",
      "  server_id = \"${hcloud_server.node1.id}\"",
      "  network_id = \"${hcloud_network.mynet.id}\"",
      "  ip = \"10.0.1.5\"",
      "}"
    ]
  },
  "hcloud-resource-ssh_key": {
    "description": "Defines ssh_key",
    "prefix": "tf-hcloud-resource-ssh_key",
    "body": [
      "# Create a new SSH key",
      "resource \"hcloud_ssh_key\" \"default\" {",
      "  name = \"Terraform Example\"",
      "  public_key = \"${file(\"~/.ssh/id_rsa.pub\")}\"",
      "}"
    ]
  },
  "hcloud-resource-volume": {
    "description": "Defines volume",
    "prefix": "tf-hcloud-resource-volume",
    "body": [
      "resource \"hcloud_server\" \"node1\" {",
      "  name = \"node1\"",
      "  image = \"debian-9\"",
      "  server_type = \"cx11\"",
      "}",
      "",
      "resource \"hcloud_volume\" \"master\" {",
      "  name = \"volume1\"",
      "  size = 50",
      "  server_id = \"${hcloud_server.node1.id}\"",
      "  automount = true",
      "}"
    ]
  },
  "hcloud-resource-volume_attachment": {
    "description": "Defines volume_attachment",
    "prefix": "tf-hcloud-resource-volume_attachment",
    "body": [
      "resource \"hcloud_volume_attachment\" \"main\" {",
      "  volume_id = \"${hcloud_volume.master.id}\"",
      "  server_id = \"${hcloud_server.node1.id}\"",
      "  automount = true",
      "}",
      "",
      "resource \"hcloud_server\" \"node1\" {",
      "  name = \"node1\"",
      "  image = \"debian-9\"",
      "  server_type = \"cx11\"",
      "  datacenter = \"nbg1-dc3\"",
      "}",
      "",
      "resource \"hcloud_volume\" \"master\" {",
      "  location = \"nbg1\"",
      "  size     = 10",
      "}"
    ]
  },
  "hedvig-resource-access": {
    "description": "Defines access",
    "prefix": "tf-hedvig-resource-access",
    "body": [
      "resource \"hedvig_access\" \"example-access\" {",
      "  vdisk = \"${hedvig_vdisk.example-vdisk.name}\"",
      "  host = \"${hedvig_lun.example-lun.controller}\"",
      "  address = \"172.26.53.99\"",
      "  type = \"host\"",
      "}"
    ]
  },
  "hedvig-resource-lun": {
    "description": "Defines lun",
    "prefix": "tf-hedvig-resource-lun",
    "body": [
      "resource \"hedvig_lun\" \"example-lun\" {",
      "  vdisk = \"${hedvig_vdisk.example-vdisk.name}\"",
      "  controller = \"examplevip1.hedviginc.com\"",
      "}"
    ]
  },
  "hedvig-resource-mount": {
    "description": "Defines mount",
    "prefix": "tf-hedvig-resource-mount",
    "body": [
      "resource \"hedvig_mount\" \"example-mount\" {",
      "  vdisk = \"${hedvig_vdisk.example-vdisk.name}\"",
      "  controller = \"examplevip1.hedviginc.com\"",
      "}"
    ]
  },
  "hedvig-resource-vdisk": {
    "description": "Defines vdisk",
    "prefix": "tf-hedvig-resource-vdisk",
    "body": [
      "resource \"hedvig_vdisk\" \"example-vdisk\" {",
      "  name = \"HedvigVdisk01\"",
      "  size = 20",
      "  type = \"NFS\"",
      "}"
    ]
  },
  "heroku-data-addon": {
    "description": "Defines addon",
    "prefix": "tf-heroku-data-addon",
    "body": [
      "data \"heroku_addon\" \"from_another_app\" {",
      "  name = \"addon-from-another-app\"",
      "}",
      "",
      "output \"heroku_addon_data_basic\" {",
      "  value = [",
      "    \"Addon from another app\",",
      "    \"id: ${data.heroku_addon.from_another_app.id}\",",
      "    \"name: ${data.heroku_addon.from_another_app.name}\",",
      "    \"app: ${data.heroku_addon.from_another_app.app}\",",
      "    \"plan: ${data.heroku_addon.from_another_app.plan}\",",
      "    \"provider_id: ${data.heroku_addon.from_another_app.provider_id}\",",
      "    \"config_vars: ${join(\", \", data.heroku_addon.from_another_app.config_vars)}\",",
      "  ]",
      "}"
    ]
  },
  "heroku-data-app": {
    "description": "Defines app",
    "prefix": "tf-heroku-data-app",
    "body": [
      "# Create a new Heroku app",
      "data \"heroku_app\" \"default\" {",
      "  name   = \"my-cool-app\"",
      "}"
    ]
  },
  "heroku-data-space": {
    "description": "Defines space",
    "prefix": "tf-heroku-data-space",
    "body": [
      "# Look up a Heroku Private Space",
      "data \"heroku_space\" \"default\" {",
      "  name   = \"my-secret-space\"",
      "}"
    ]
  },
  "heroku-data-space_peering_info": {
    "description": "Defines space_peering_info",
    "prefix": "tf-heroku-data-space_peering_info",
    "body": [
      "# Look up a Heroku Private Space's peering info. ",
      "data \"heroku_space_peering_info\" \"default\" {",
      "  name   = \"my-secret-space\"",
      "}",
      "",
      "# Initiate a VPC peering connection request.",
      "resource \"aws_vpc_peering_connection\" \"foo\" {",
      "  peer_owner_id = \"${data.heroku_space_peering_info.default.aws_account_id}\"",
      "  peer_vpc_id   = \"${data.heroku_space_peering_info.default.vpc_id}\"",
      "  vpc_id        = \"${aws_vpc.foo.id}\"",
      "}"
    ]
  },
  "heroku-data-team": {
    "description": "Defines team",
    "prefix": "tf-heroku-data-team",
    "body": [
      "data \"heroku_team\" \"my_heroku_team\" {",
      "  name = \"name_of_my_heroku_team\"",
      "}",
      "",
      "output \"heroku_team_data_basic\" {",
      "  value = [",
      "    \"Heroku team\",",
      "    \"id: ${data.heroku_team.my_heroku_team.id}\",",
      "    \"default: ${data.heroku_team.my_heroku_team.default}\",",
      "    \"membership_limit: ${data.heroku_team.my_heroku_team.membership_limit}\",",
      "    \"provisioned_licenses: ${data.heroku_team.my_heroku_team.provisioned_licenses}\",",
      "    \"type: ${data.heroku_team.my_heroku_team.type}\",",
      "  ]",
      "}"
    ]
  },
  "heroku-resource-account_feature": {
    "description": "Defines account_feature",
    "prefix": "tf-heroku-resource-account_feature",
    "body": [
      "heroku labs"
    ]
  },
  "heroku-resource-addon": {
    "description": "Defines addon",
    "prefix": "tf-heroku-resource-addon",
    "body": [
      "# Create a new Heroku app",
      "resource \"heroku_app\" \"default\" {",
      "  name = \"test-app\"",
      "}",
      "",
      "# Create a database, and configure the app to use it",
      "resource \"heroku_addon\" \"database\" {",
      "  app  = \"${heroku_app.default.name}\"",
      "  plan = \"heroku-postgresql:hobby-basic\"",
      "}",
      "",
      "# Add a web-hook addon for the app",
      "resource \"heroku_addon\" \"webhook\" {",
      "  app  = \"${heroku_app.default.name}\"",
      "  plan = \"deployhooks:http\"",
      "",
      "  config = {",
      "    url = \"http://google.com\"",
      "  }",
      "}"
    ]
  },
  "heroku-resource-addon_attachment": {
    "description": "Defines addon_attachment",
    "prefix": "tf-heroku-resource-addon_attachment",
    "body": [
      "resource \"heroku_addon_attachment\" \"database\" {",
      "  app_id  = \"${heroku_app.default.id}\"",
      "  addon_id = \"${heroku_addon.database.id}\"",
      "}"
    ]
  },
  "heroku-resource-app": {
    "description": "Defines app",
    "prefix": "tf-heroku-resource-app",
    "body": [
      "resource \"heroku_app\" \"default\" {",
      "  name   = \"my-cool-app\"",
      "  region = \"us\"",
      "",
      "  config_vars = {",
      "    FOOBAR = \"baz\"",
      "  }",
      "",
      "  buildpacks = [",
      "    \"heroku/go\"",
      "  ]",
      "}"
    ]
  },
  "heroku-resource-app_config_association": {
    "description": "Defines app_config_association",
    "prefix": "tf-heroku-resource-app_config_association",
    "body": [
      "resource \"heroku_config\" \"common\" {",
      "    name = \"common-vars\"",
      "",
      "    vars = {",
      "        LOG_LEVEL = \"info\"",
      "    }",
      "",
      "    sensitive_vars = {",
      "        PRIVATE_KEY = \"some_private_key\"",
      "    }",
      "}",
      "",
      "resource \"heroku_app\" \"foobar\" {",
      "  name   = \"my-cool-app\"",
      "  region = \"us\"",
      "}",
      "",
      "resource \"heroku_app\" \"foobar2\" {",
      "  name   = \"my-cool-app2\"",
      "  region = \"us\"",
      "}",
      "",
      "resource \"heroku_app_config_association\" \"foobar\" {",
      "  app_id = \"${heroku_app.foobar.id}\"",
      "",
      "  vars = \"${heroku_config.common.vars}\"",
      "  sensitive_vars = \"${heroku_config.common.sensitive_vars}\"",
      "}",
      "",
      "resource \"heroku_app_config_association\" \"foobar2\" {",
      "  app_id = \"${heroku_app.foobar2.id}\"",
      "",
      "  vars = \"${heroku_config.common.vars}\"",
      "  sensitive_vars = {",
      "    DATABASE_URL = \"some_db_url_that_has_auth_info\"",
      "  }",
      "}"
    ]
  },
  "heroku-resource-app_feature": {
    "description": "Defines app_feature",
    "prefix": "tf-heroku-resource-app_feature",
    "body": [
      "heroku labs --app foobar"
    ]
  },
  "heroku-resource-app_release": {
    "description": "Defines app_release",
    "prefix": "tf-heroku-resource-app_release",
    "body": [
      "resource \"heroku_app\" \"foobar\" {",
      "    name = \"foobar\"",
      "    region = \"us\"",
      "}",
      "",
      "# Upload your slug",
      "",
      "resource \"heroku_app_release\" \"foobar-release\" {",
      "    app = \"${heroku_app.foobar.name}\"",
      "    slug_id = \"01234567-89ab-cdef-0123-456789abcdef\"",
      "}"
    ]
  },
  "heroku-resource-build": {
    "description": "Defines build",
    "prefix": "tf-heroku-resource-build",
    "body": [
      "https://github.com/username/example/archive/v1.0.0.tar.gz"
    ]
  },
  "heroku-resource-cert": {
    "description": "Defines cert",
    "prefix": "tf-heroku-resource-cert",
    "body": [
      "# Create a new Heroku app",
      "resource \"heroku_app\" \"default\" {",
      "  name = \"test-app\"",
      "}",
      "",
      "# Add-on SSL to application",
      "resource \"heroku_addon\" \"ssl\" {",
      "  app  = \"${heroku_app.default.name}\"",
      "  plan = \"ssl\"",
      "}",
      "",
      "# Establish certificate for a given application",
      "resource \"heroku_cert\" \"ssl_certificate\" {",
      "  app               = \"${heroku_app.default.name}\"",
      "  certificate_chain = \"${file(\"server.crt\")}\"",
      "  private_key       = \"${file(\"server.key\")}\"",
      "  depends_on        = [\"heroku_addon.ssl\"]",
      "}"
    ]
  },
  "heroku-resource-config": {
    "description": "Defines config",
    "prefix": "tf-heroku-resource-config",
    "body": [
      "resource \"heroku_config\" \"endpoints\" {",
      "    vars = {",
      "        x = \"https://...\"",
      "        y = \"https://...\"",
      "        z = \"https://...\"",
      "    }",
      "",
      "    sensitive_vars = {",
      "        PRIVATE_KEY = \"some_private_key\"",
      "    }",
      "}"
    ]
  },
  "heroku-resource-domain": {
    "description": "Defines domain",
    "prefix": "tf-heroku-resource-domain",
    "body": [
      "# Create a new Heroku app",
      "resource \"heroku_app\" \"default\" {",
      "  name = \"test-app\"",
      "}",
      "",
      "# Associate a custom domain",
      "resource \"heroku_domain\" \"default\" {",
      "  app      = \"${heroku_app.default.name}\"",
      "  hostname = \"terraform.example.com\"",
      "}"
    ]
  },
  "heroku-resource-drain": {
    "description": "Defines drain",
    "prefix": "tf-heroku-resource-drain",
    "body": [
      "resource \"heroku_drain\" \"default\" {",
      "  app = \"test-app\"",
      "  url = \"syslog://terraform.example.com:1234\"",
      "}"
    ]
  },
  "heroku-resource-formation": {
    "description": "Defines formation",
    "prefix": "tf-heroku-resource-formation",
    "body": [
      "# Creates a new application called foobar",
      "resource \"heroku_app\" \"foobar\" {",
      "    name = \"foobar\"",
      "    region = \"us\"",
      "}",
      "",
      "# Creates a new release for application foobar using a slug id",
      "resource \"heroku_app_release\" \"foobar-release\" {",
      "    app = \"${heroku_app.foobar.name}\"",
      "    slug_id = \"01234567-89ab-cdef-0123-456789abcdef\"",
      "}",
      "",
      "# Update the web formation for the foobar application's web",
      "resource \"heroku_formation\" \"foobar-web\" {",
      "    app = \"${heroku_app.foobar.name}\"",
      "    type = \"web\"",
      "    quantity = 2",
      "    size = \"standard-2x\"",
      "",
      "    # Tells Terraform that this formation must be created/updated only after the app release has been created",
      "    depends_on = [\"heroku_app_release.foobar-release\"]",
      "}"
    ]
  },
  "heroku-resource-pipeline": {
    "description": "Defines pipeline",
    "prefix": "tf-heroku-resource-pipeline",
    "body": [
      "# Create Heroku apps for staging and production",
      "resource \"heroku_app\" \"staging\" {",
      "  name = \"test-app-staging\"",
      "}",
      "",
      "resource \"heroku_app\" \"production\" {",
      "  name = \"test-app-production\"",
      "}",
      "",
      "# Create a Heroku pipeline",
      "resource \"heroku_pipeline\" \"test-app\" {",
      "  name = \"test-app\"",
      "}",
      "",
      "# Couple apps to different pipeline stages",
      "resource \"heroku_pipeline_coupling\" \"staging\" {",
      "  app      = \"${heroku_app.staging.name}\"",
      "  pipeline = \"${heroku_pipeline.test-app.id}\"",
      "  stage    = \"staging\"",
      "}",
      "",
      "resource \"heroku_pipeline_coupling\" \"production\" {",
      "  app      = \"${heroku_app.production.name}\"",
      "  pipeline = \"${heroku_pipeline.test-app.id}\"",
      "  stage    = \"production\"",
      "}"
    ]
  },
  "heroku-resource-pipeline_coupling": {
    "description": "Defines pipeline_coupling",
    "prefix": "tf-heroku-resource-pipeline_coupling",
    "body": [
      "# Create Heroku apps for staging and production",
      "resource \"heroku_app\" \"staging\" {",
      "  name = \"test-app-staging\"",
      "}",
      "",
      "resource \"heroku_app\" \"production\" {",
      "  name = \"test-app-production\"",
      "}",
      "",
      "# Create a Heroku pipeline",
      "resource \"heroku_pipeline\" \"test-app\" {",
      "  name = \"test-app\"",
      "}",
      "",
      "# Couple apps to different pipeline stages",
      "resource \"heroku_pipeline_coupling\" \"staging\" {",
      "  app      = \"${heroku_app.staging.name}\"",
      "  pipeline = \"${heroku_pipeline.test-app.id}\"",
      "  stage    = \"staging\"",
      "}",
      "",
      "resource \"heroku_pipeline_coupling\" \"production\" {",
      "  app      = \"${heroku_app.production.name}\"",
      "  pipeline = \"${heroku_pipeline.test-app.id}\"",
      "  stage    = \"production\"",
      "}"
    ]
  },
  "heroku-resource-slug": {
    "description": "Defines slug",
    "prefix": "tf-heroku-resource-slug",
    "body": [
      "resource \"heroku_slug\" \"foobar\" {",
      "  app      = \"${heroku_app.foobar.id}\"",
      "  file_url = \"https://github.com/terraform-providers/terraform-provider-heroku/raw/master/heroku/test-fixtures/slug.tgz\"",
      "",
      "  process_types = {",
      "    web = \"ruby server.rb\"",
      "  }",
      "}"
    ]
  },
  "heroku-resource-space": {
    "description": "Defines space",
    "prefix": "tf-heroku-resource-space",
    "body": [
      "// Create a new Heroku space",
      "resource \"heroku_space\" \"default\" {",
      "  name = \"test-space\"",
      "  organization = \"my-company\"",
      "  region = \"virginia\"",
      "}",
      "",
      "// Create a new Heroku app in test-space",
      "resource \"heroku_app\" \"default\" {",
      "  name = \"test-app\"",
      "  space = \"${heroku_space.default.name}\"",
      "  organization = {",
      "    name = \"my-company\"",
      "  }",
      "}"
    ]
  },
  "heroku-resource-space_app_access": {
    "description": "Defines space_app_access",
    "prefix": "tf-heroku-resource-space_app_access",
    "body": [
      "// Create a new Heroku Private Space",
      "resource \"heroku_space\" \"default\" {",
      "  name = \"test-space\"",
      "  organization = \"my-company\"",
      "  region = \"virginia\"",
      "}",
      "",
      "// Give an existing team member create_apps permissions to the Private Space",
      "resource \"heroku_space_app_access\" \"member1\" {",
      "  space = \"${heroku_space.default.name}\"",
      "  email = \"member1@example.com\"",
      "  permissions = [\"create_apps\"]",
      "}",
      "",
      "// Remove all permissions from an existing team member",
      "resource \"heroku_space_app_access\" \"member2\" {",
      "  space = \"${heroku_space.default.name}\"",
      "  email = \"member2@example.com\"",
      "  permissions = []",
      "}"
    ]
  },
  "heroku-resource-space_inbound_ruleset": {
    "description": "Defines space_inbound_ruleset",
    "prefix": "tf-heroku-resource-space_inbound_ruleset",
    "body": [
      "# Create a new Heroku space",
      "resource \"heroku_space\" \"default\" {",
      "  name         = \"test-space\"",
      "  organization = \"my-company\"",
      "  region       = \"virginia\"",
      "}",
      "",
      "# Allow all traffic EXCEPT 8.8.4.4 to access the HPS.",
      "resource \"heroku_space_inbound_ruleset\" \"default\" {",
      "  space = \"${heroku_space.default.name}\"",
      "",
      "  rule {",
      "    action = \"allow\"",
      "    source = \"0.0.0.0/0\"",
      "  }",
      "",
      "  rule {",
      "    action = \"deny\"",
      "    source = \"8.8.4.4/32\"",
      "  }",
      "}"
    ]
  },
  "heroku-resource-space_peering_connection_accepter": {
    "description": "Defines space_peering_connection_accepter",
    "prefix": "tf-heroku-resource-space_peering_connection_accepter",
    "body": [
      "# Fetch the peering information for the Heroku Private Space.",
      "data \"heroku_space_peering_info\" \"peer_space\" {",
      "  name = \"my-fancy-space\"",
      "}",
      "",
      "# Initiate the request.",
      "resource \"aws_vpc_peering_connection\" \"request\" {",
      "  peer_owner_id = \"${data.heroku_space_peering_info.peer_space.aws_account_id}\"",
      "  peer_vpc_id   = \"${data.heroku_space_peering_info.peer_space.vpc_id}\"",
      "  vpc_id        = \"${aws_vpc.main.id}\"",
      "}",
      "",
      "# Accept the request.",
      "resource \"heroku_space_peering_connection_accepter\" \"accept\" {",
      "  space                     = \"${heroku_space.peer_space.name}\"",
      "  vpc_peering_connection_id = \"${aws_vpc_peering_connection.request.id}\"",
      "}"
    ]
  },
  "heroku-resource-space_vpn_connection": {
    "description": "Defines space_vpn_connection",
    "prefix": "tf-heroku-resource-space_vpn_connection",
    "body": [
      "// Create a new Heroku space",
      "resource \"heroku_space\" \"default\" {",
      "  name         = \"test-space\"",
      "  organization = \"my-company\"",
      "  region       = \"virginia\"",
      "}",
      "",
      "// Connect the Heroku space to another network with a VPN",
      "resource \"heroku_space_vpn_connection\" \"office\" {",
      "  name           = \"office\"",
      "  space          = \"${heroku_space.default.name}\"",
      "  public_ip      = \"203.0.113.1\"",
      "  routable_cidrs = [\"192.168.1.0/24\"]",
      "}"
    ]
  },
  "heroku-resource-team_collaborator": {
    "description": "Defines team_collaborator",
    "prefix": "tf-heroku-resource-team_collaborator",
    "body": [
      "# Create a new team collaborator for the foobar application that has view, operate, manage permissions",
      "resource \"heroku_team_collaborator\" \"foobar-collaborator\" {",
      "\tapp = \"${heroku_app.foobar.name}\"",
      "\temail = \"collaborator@foobar.com\"",
      "\tpermissions = [\"view\", \"operate\", \"manage\"]",
      "}"
    ]
  },
  "heroku-resource-team_member": {
    "description": "Defines team_member",
    "prefix": "tf-heroku-resource-team_member",
    "body": [
      "# Adds a Heroku user to a Heroku team as a viewer.",
      "resource \"heroku_team_member\" \"foobar-member\" {",
      "  team  = \"my-team\"",
      "  email = \"some-user@example.com\"",
      "  role  = \"member\"",
      "}"
    ]
  },
  "huaweicloud-data-antiddos_v1": {
    "description": "Defines antiddos_v1",
    "prefix": "tf-huaweicloud-data-antiddos_v1",
    "body": [
      "variable \"eip_id\" {}",
      "",
      "data \"huaweicloud_antiddos_v1\" \"antiddos\" {",
      "  floating_ip_id = \"${var.eip_id}\"",
      "}",
      ""
    ]
  },
  "huaweicloud-data-cce_cluster_v3": {
    "description": "Defines cce_cluster_v3",
    "prefix": "tf-huaweicloud-data-cce_cluster_v3",
    "body": [
      "#XXX empty snippet",
      ""
    ]
  },
  "huaweicloud-data-cce_nodes_v3": {
    "description": "Defines cce_nodes_v3",
    "prefix": "tf-huaweicloud-data-cce_nodes_v3",
    "body": [
      "    variable \"cluster_id\" { }",
      "    variable \"node_id\" { }",
      "  ",
      "    data \"huaweicloud_cce_node_v3\" \"node\" {",
      "     cluster_id = \"${var.cluster_id}\"",
      "     node_id= \"${var.node_id}\"",
      "    }"
    ]
  },
  "huaweicloud-data-cdm_flavors_v1": {
    "description": "Defines cdm_flavors_v1",
    "prefix": "tf-huaweicloud-data-cdm_flavors_v1",
    "body": [
      "data \"huaweicloud_cdm_flavors_v1\" \"flavor\" {",
      "}"
    ]
  },
  "huaweicloud-data-csbs_backup_policy_v1": {
    "description": "Defines csbs_backup_policy_v1",
    "prefix": "tf-huaweicloud-data-csbs_backup_policy_v1",
    "body": [
      "variable \"policy_id\" {}",
      "",
      "data \"huaweicloud_csbs_backup_policy_v1\" \"csbs_policy\" {",
      "  id = \"${var.policy_id}\"",
      "}",
      ""
    ]
  },
  "huaweicloud-data-csbs_backup_v1": {
    "description": "Defines csbs_backup_v1",
    "prefix": "tf-huaweicloud-data-csbs_backup_v1",
    "body": [
      "variable \"backup_name\" {}",
      "",
      "data \"huaweicloud_csbs_backup_v1\" \"csbs\" {",
      "  backup_name = \"${var.backup_name}\"",
      "}"
    ]
  },
  "huaweicloud-data-cts_tracker_v1": {
    "description": "Defines cts_tracker_v1",
    "prefix": "tf-huaweicloud-data-cts_tracker_v1",
    "body": [
      "variable \"bucket_name\" {}",
      "",
      "data \"huaweicloud_cts_tracker_v1\" \"tracker_v1\" {",
      "  bucket_name = \"${var.bucket_name}\"",
      "}",
      ""
    ]
  },
  "huaweicloud-data-dcs_az_v1": {
    "description": "Defines dcs_az_v1",
    "prefix": "tf-huaweicloud-data-dcs_az_v1",
    "body": [
      "",
      "data \"huaweicloud_dcs_az_v1\" \"az1\" {",
      "  name = \"AZ1\"",
      "  port = \"8004\"",
      "  code = \"sa-chile-1a\"",
      "}"
    ]
  },
  "huaweicloud-data-dcs_maintainwindow_v1": {
    "description": "Defines dcs_maintainwindow_v1",
    "prefix": "tf-huaweicloud-data-dcs_maintainwindow_v1",
    "body": [
      "",
      "data \"huaweicloud_dcs_maintainwindow_v1\" \"maintainwindow1\" {",
      "  seq = 1",
      "}",
      ""
    ]
  },
  "huaweicloud-data-dcs_product_v1": {
    "description": "Defines dcs_product_v1",
    "prefix": "tf-huaweicloud-data-dcs_product_v1",
    "body": [
      "",
      "data \"huaweicloud_dcs_product_v1\" \"product1\" {",
      "  engine            = \"kafka\"",
      "  version           = \"1.1.0\"",
      "  instance_type     = \"cluster\"",
      "  partition_num     = 300",
      "  storage           = 600",
      "  storage_spec_code = \"dcs.physical.storage.high\"",
      "}"
    ]
  },
  "huaweicloud-data-dis_partition_v2": {
    "description": "Defines dis_partition_v2",
    "prefix": "tf-huaweicloud-data-dis_partition_v2",
    "body": [
      "",
      "data \"huaweicloud_dis_partition_v2\" \"partition\" {",
      "  stream_name = \"{{ stream_name }}\"",
      "}"
    ]
  },
  "huaweicloud-data-dms_az_v1": {
    "description": "Defines dms_az_v1",
    "prefix": "tf-huaweicloud-data-dms_az_v1",
    "body": [
      "",
      "data \"huaweicloud_dms_az_v1\" \"az1\" {",
      "  name = \"可用区1\"",
      "  port = \"8002\"",
      "  code = \"cn-north-1a\"",
      "}"
    ]
  },
  "huaweicloud-data-dms_maintainwindow_v1": {
    "description": "Defines dms_maintainwindow_v1",
    "prefix": "tf-huaweicloud-data-dms_maintainwindow_v1",
    "body": [
      "",
      "data \"huaweicloud_dms_maintainwindow_v1\" \"maintainwindow1\" {",
      "  seq = 1",
      "}",
      ""
    ]
  },
  "huaweicloud-data-dms_product_v1": {
    "description": "Defines dms_product_v1",
    "prefix": "tf-huaweicloud-data-dms_product_v1",
    "body": [
      "",
      "data \"huaweicloud_dms_product_v1\" \"product1\" {",
      "  engine            = \"kafka\"",
      "  version           = \"1.1.0\"",
      "  instance_type     = \"cluster\"",
      "  partition_num     = 300",
      "  storage           = 600",
      "  storage_spec_code = \"dms.physical.storage.high\"",
      "}"
    ]
  },
  "huaweicloud-data-iam_role_v3": {
    "description": "Defines iam_role_v3",
    "prefix": "tf-huaweicloud-data-iam_role_v3",
    "body": [
      "",
      "data \"huaweicloud_iam_role_v3\" \"roles\" {",
      "}",
      ""
    ]
  },
  "huaweicloud-data-identity_role_v3": {
    "description": "Defines identity_role_v3",
    "prefix": "tf-huaweicloud-data-identity_role_v3",
    "body": [
      "data \"huaweicloud_identity_role_v3\" \"auth_admin\" {",
      "  name = \"secu_admin\"",
      "}"
    ]
  },
  "huaweicloud-data-images_image_v2": {
    "description": "Defines images_image_v2",
    "prefix": "tf-huaweicloud-data-images_image_v2",
    "body": [
      "data \"huaweicloud_images_image_v2\" \"ubuntu\" {",
      "  name        = \"Ubuntu 16.04\"",
      "  most_recent = true",
      "",
      "  properties {",
      "    key = \"value\"",
      "  }",
      "}"
    ]
  },
  "huaweicloud-data-kms_data_key_v1": {
    "description": "Defines kms_data_key_v1",
    "prefix": "tf-huaweicloud-data-kms_data_key_v1",
    "body": [
      "",
      "resource \"huaweicloud_kms_key_v1\" \"key1\" {",
      "  key_alias       = \"key_1\"",
      "  pending_days    = \"7\"",
      "  key_description = \"first test key\"",
      "}",
      "",
      "data \"huaweicloud_kms_data_key_v1\" \"kms_datakey1\" {",
      "  key_id         = \"${huaweicloud_kms_key_v1.key1.id}\"",
      "  datakey_length = \"512\"",
      "}",
      ""
    ]
  },
  "huaweicloud-data-kms_key_v1": {
    "description": "Defines kms_key_v1",
    "prefix": "tf-huaweicloud-data-kms_key_v1",
    "body": [
      "",
      "data \"huaweicloud_kms_key_v1\" \"key_1\" {",
      "  key_alias        = \"test_key\"",
      "  key_description  = \"test key description\"",
      "  key_state        = \"2\"",
      "  key_id           = \"af650527-a0ff-4527-aef3-c493df1f3012\"",
      "  realm            = \"cn-north-1\"",
      "  default_key_flag = \"0\"",
      "  domain_id        = \"b168fe00ff56492495a7d22974df2d0b\"",
      "}"
    ]
  },
  "huaweicloud-data-networking_network_v2": {
    "description": "Defines networking_network_v2",
    "prefix": "tf-huaweicloud-data-networking_network_v2",
    "body": [
      "data \"huaweicloud_networking_network_v2\" \"network\" {",
      "  name = \"tf_test_network\"",
      "}"
    ]
  },
  "huaweicloud-data-networking_port_v2": {
    "description": "Defines networking_port_v2",
    "prefix": "tf-huaweicloud-data-networking_port_v2",
    "body": [
      "data \"huaweicloud_networking_port_v2\" \"port_1\" {",
      "  name = \"port_1\"",
      "}"
    ]
  },
  "huaweicloud-data-networking_secgroup_v2": {
    "description": "Defines networking_secgroup_v2",
    "prefix": "tf-huaweicloud-data-networking_secgroup_v2",
    "body": [
      "data \"huaweicloud_networking_secgroup_v2\" \"secgroup\" {",
      "  name = \"tf_test_secgroup\"",
      "}"
    ]
  },
  "huaweicloud-data-networking_subnet_v2": {
    "description": "Defines networking_subnet_v2",
    "prefix": "tf-huaweicloud-data-networking_subnet_v2",
    "body": [
      "data \"huaweicloud_networking_subnet_v2\" \"subnet_1\" {",
      "  name = \"subnet_1\"",
      "}"
    ]
  },
  "huaweicloud-data-rds_flavors_v1": {
    "description": "Defines rds_flavors_v1",
    "prefix": "tf-huaweicloud-data-rds_flavors_v1",
    "body": [
      "data \"huaweicloud_rds_flavors_v1\" \"flavor\" {",
      "  region            = \"eu-de\"",
      "  datastore_name    = \"PostgreSQL\"",
      "  datastore_version = \"9.5.5\"",
      "  speccode          = \"rds.pg.s1.medium\"",
      "}"
    ]
  },
  "huaweicloud-data-rts_software_config_v1": {
    "description": "Defines rts_software_config_v1",
    "prefix": "tf-huaweicloud-data-rts_software_config_v1",
    "body": [
      "variable \"config_name\" {}",
      "",
      "variable \"server_id\" {}",
      "",
      "data \"huaweicloud_rts_software_config_v1\" \"myconfig\" {",
      "  id = \"${var.config_name}\"",
      "}",
      "",
      "resource \"huaweicloud_rts_software_deployment_v1\" \"mydeployment\" {",
      "  config_id = \"${data.huaweicloud_rts_software_config_v1.myconfig.id}\"",
      "  server_id = \"${var.server_id}\"",
      "}"
    ]
  },
  "huaweicloud-data-rts_stack_resource_v1": {
    "description": "Defines rts_stack_resource_v1",
    "prefix": "tf-huaweicloud-data-rts_stack_resource_v1",
    "body": [
      "variable \"stack_name\" { }",
      "variable \"resource_name\" { }",
      "",
      "data \"huaweicloud_rts_stack_resource_v1\" \"stackresource\" {",
      "  stack_name = \"${var.stack_name}\"",
      "  resource_name = \"${var.resource_name}\"",
      "  ",
      "}"
    ]
  },
  "huaweicloud-data-rts_stack_v1": {
    "description": "Defines rts_stack_v1",
    "prefix": "tf-huaweicloud-data-rts_stack_v1",
    "body": [
      "variable \"stack_name\" { }",
      "",
      "data \"huaweicloud_rts_stack_v1\" \"stacks\" {",
      "  name = \"${var.stack_name}\"",
      "}"
    ]
  },
  "huaweicloud-data-s3_bucket_object": {
    "description": "Defines s3_bucket_object",
    "prefix": "tf-huaweicloud-data-s3_bucket_object",
    "body": [
      "#XXX empty snippet",
      ""
    ]
  },
  "huaweicloud-data-sfs_file_sharing_v2": {
    "description": "Defines sfs_file_sharing_v2",
    "prefix": "tf-huaweicloud-data-sfs_file_sharing_v2",
    "body": [
      "    variable \"share_name\" { }",
      "",
      "    variable \"share_id\" { }",
      "",
      "    data \"huaweicloud_sfs_file_sharing_v2\" \"shared_file\" ",
      "    {",
      "           name = \"${var.share_name}\"",
      "           id = \"${var.share_id}\"",
      "    }",
      ""
    ]
  },
  "huaweicloud-data-vbs_backup_policy_v2": {
    "description": "Defines vbs_backup_policy_v2",
    "prefix": "tf-huaweicloud-data-vbs_backup_policy_v2",
    "body": [
      "",
      "variable \"policy_name\" {}",
      "",
      "variable \"policy_id\" {}",
      "",
      "data \"huaweicloud_vbs_backup_policy_v2\" \"policies\" {",
      "  name = \"${var.policy_name}\"",
      "  id   = \"${var.policy_id}\"",
      "}"
    ]
  },
  "huaweicloud-data-vbs_backup_v2": {
    "description": "Defines vbs_backup_v2",
    "prefix": "tf-huaweicloud-data-vbs_backup_v2",
    "body": [
      "variable \"backup_id\" {}",
      "",
      "data \"huaweicloud_vbs_backup_v2\" \"mybackup\" {",
      "  id = \"${var.backup_id}\"",
      "}"
    ]
  },
  "huaweicloud-data-vpc_peering_v2": {
    "description": "Defines vpc_peering_v2",
    "prefix": "tf-huaweicloud-data-vpc_peering_v2",
    "body": [
      "",
      "data \"huaweicloud_vpc_peering_connection_v2\" \"peering\" {",
      "   vpc_id          = \"${huaweicloud_vpc_v1.vpc.id}\"",
      "   peer_vpc_id     = \"${huaweicloud_vpc_v1.peer_vpc.id}\"",
      " }",
      "",
      "",
      "resource \"huaweicloud_vpc_route_v2\" \"vpc_route\" {",
      "  type       = \"peering\"",
      "  nexthop    = \"${data.huaweicloud_vpc_peering_connection_v2.peering.id}\"",
      "  destination = \"192.168.0.0/16\"",
      "  vpc_id = \"${huaweicloud_vpc_v1.vpc.id}\"",
      "}"
    ]
  },
  "huaweicloud-data-vpc_route_ids_v2": {
    "description": "Defines vpc_route_ids_v2",
    "prefix": "tf-huaweicloud-data-vpc_route_ids_v2",
    "body": [
      " variable \"vpc_id\" { }",
      "",
      "data \"huaweicloud_vpc_route_ids_v2\" \"example\" {",
      "  vpc_id = \"${var.vpc_id}\"",
      "}",
      "",
      "data \"huaweicloud_vpc_route_v2\" \"vpc_route\" {",
      "  count = \"${length(data.huaweicloud_vpc_route_ids_v2.example.ids)}\"",
      "  id = \"${data.huaweicloud_vpc_route_ids_v2.example.ids[count.index]}\"",
      "}",
      "",
      "output \"route_nexthop\" {",
      "  value = [\"${data.huaweicloud_vpc_route_v2.vpc_route.*.nexthop}\"]",
      "}"
    ]
  },
  "huaweicloud-data-vpc_route_v2": {
    "description": "Defines vpc_route_v2",
    "prefix": "tf-huaweicloud-data-vpc_route_v2",
    "body": [
      " variable \"route_id\" { }",
      "",
      "data \"huaweicloud_vpc_route_v2\" \"vpc_route\" {",
      "  id = \"${var.route_id}\"",
      "}",
      "",
      "resource \"huaweicloud_vpc_subnet_v1\" \"subnet_v1\" {",
      "  name = \"test-subnet\"",
      "  cidr = \"192.168.0.0/24\"",
      "  gateway_ip = \"192.168.0.1\"",
      "  vpc_id = \"${data.huaweicloud_vpc_route_v2.vpc_route.vpc_id}\"",
      "}",
      ""
    ]
  },
  "huaweicloud-data-vpc_subnet_ids_v1": {
    "description": "Defines vpc_subnet_ids_v1",
    "prefix": "tf-huaweicloud-data-vpc_subnet_ids_v1",
    "body": [
      "data \"huaweicloud_vpc_subnet_ids_v1\" \"subnet_ids\" {",
      "  vpc_id = \"${var.vpc_id}\" ",
      "}",
      "",
      "data \"huaweicloud_vpc_subnet_v1\" \"subnet\" {",
      "  count = \"${length(data.huaweicloud_vpc_subnet_ids_v1.subnet_ids.ids)}\"",
      "  id    = \"${data.huaweicloud_vpc_subnet_ids_v1.subnet_ids.ids[count.index]}\"",
      " }",
      "",
      "output \"subnet_cidr_blocks\" {",
      "  value = \"${data.huaweicloud_vpc_subnet_v1.subnet.*.cidr}\"",
      "}"
    ]
  },
  "huaweicloud-data-vpc_subnet_v1": {
    "description": "Defines vpc_subnet_v1",
    "prefix": "tf-huaweicloud-data-vpc_subnet_v1",
    "body": [
      "data \"huaweicloud_vpc_subnet_v1\" \"subnet_v1\" {",
      "  id   = \"${var.subnet_id}\"",
      " }",
      "",
      "output \"subnet_vpc_id\" {",
      "  value = \"${data.huaweicloud_vpc_subnet_v1.subnet_v1.vpc_id}\"",
      "}"
    ]
  },
  "huaweicloud-data-vpc_v1": {
    "description": "Defines vpc_v1",
    "prefix": "tf-huaweicloud-data-vpc_v1",
    "body": [
      "",
      "variable \"vpc_name\" {}",
      "",
      "data \"huaweicloud_vpc_v1\" \"vpc\" {",
      "  name = \"${var.vpc_name}\"",
      "}",
      ""
    ]
  },
  "huaweicloud-resource-as_configuration_v1": {
    "description": "Defines as_configuration_v1",
    "prefix": "tf-huaweicloud-resource-as_configuration_v1",
    "body": [
      "resource \"huaweicloud_as_configuration_v1\" \"my_as_config\" {",
      "  scaling_configuration_name = \"my_as_config\"",
      "  instance_config {",
      "    flavor = \"${var.flavor}\"",
      "    image  = \"${var.image_id}\"",
      "    disk {",
      "      size        = 40",
      "      volume_type = \"SATA\"",
      "      disk_type   = \"SYS\"",
      "    }",
      "    key_name  = \"${var.keyname}\"",
      "    user_data = \"${file(\"userdata.txt\")}\"",
      "  }",
      "}"
    ]
  },
  "huaweicloud-resource-as_group_v1": {
    "description": "Defines as_group_v1",
    "prefix": "tf-huaweicloud-resource-as_group_v1",
    "body": [
      "resource \"huaweicloud_as_group_v1\" \"my_as_group\" {",
      "  scaling_group_name       = \"my_as_group\"",
      "  scaling_configuration_id = \"37e310f5-db9d-446e-9135-c625f9c2bbfc\"",
      "  desire_instance_number   = 2",
      "  min_instance_number      = 0",
      "  max_instance_number      = 10",
      "  networks                 = [{ id = \"ad091b52-742f-469e-8f3c-fd81cadf0743\" }]",
      "  security_groups          = [{ id = \"45e4c6de-6bf0-4843-8953-2babde3d4810\" }]",
      "  vpc_id                   = \"1d8f7e7c-fe04-4cf5-85ac-08b478c290e9\"",
      "  delete_publicip          = true",
      "  delete_instances         = \"yes\"",
      "}"
    ]
  },
  "huaweicloud-resource-as_policy_v1": {
    "description": "Defines as_policy_v1",
    "prefix": "tf-huaweicloud-resource-as_policy_v1",
    "body": [
      "resource \"huaweicloud_as_policy_v1\" \"hth_aspolicy\" {",
      "  scaling_policy_name = \"hth_aspolicy\"",
      "  scaling_group_id    = \"4579f2f5-cbe8-425a-8f32-53dcb9d9053a\"",
      "  cool_down_time      = 900",
      "  scaling_policy_type = \"RECURRENCE\"",
      "  scaling_policy_action {",
      "    operation       = \"ADD\"",
      "    instance_number = 1",
      "  }",
      "  scheduled_policy {",
      "    launch_time     = \"07:00\"",
      "    recurrence_type = \"Daily\"",
      "    start_time      = \"2017-11-30T12:00Z\"",
      "    end_time        = \"2017-12-30T12:00Z\"",
      "  }",
      "}",
      ""
    ]
  },
  "huaweicloud-resource-blockstorage_volume_v2": {
    "description": "Defines blockstorage_volume_v2",
    "prefix": "tf-huaweicloud-resource-blockstorage_volume_v2",
    "body": [
      "resource \"huaweicloud_blockstorage_volume_v2\" \"volume_1\" {",
      "  region      = \"RegionOne\"",
      "  name        = \"volume_1\"",
      "  description = \"first test volume\"",
      "  size        = 3",
      "}"
    ]
  },
  "huaweicloud-resource-cce_cluster_v3": {
    "description": "Defines cce_cluster_v3",
    "prefix": "tf-huaweicloud-resource-cce_cluster_v3",
    "body": [
      "    variable \"flavor_id\" { }",
      "    variable \"vpc_id\" { }",
      "    variable \"subnet_id\" { }",
      "\t",
      "    resource \"huaweicloud_cce_cluster_v3\" \"cluster_1\" {",
      "     name = \"cluster\"",
      "     cluster_type= \"VirtualMachine\"",
      "     flavor_id= \"${var.flavor_id}\"",
      "     vpc_id= \"${var.vpc_id}\"",
      "     subnet_id= \"${var.subnet_id}\"",
      "     container_network_type= \"overlay_l2\"",
      "     authentication_mode = \"rbac\"",
      "     description= \"Create cluster\"",
      "    }",
      "```",
      "",
      "## Argument Reference",
      "",
      "The following arguments are supported:",
      "",
      "",
      "* `name` - (Required) Cluster name. Changing this parameter will create a new cluster resource.",
      "",
      "* `labels` - (Optional) Cluster tag, key/value pair format. Changing this parameter will create a new cluster resource.",
      "",
      "* `annotations` - (Optional) Cluster annotation, key/value pair format. Changing this parameter will create a new cluster resource.",
      "",
      "* `flavor_id` - (Required) Cluster specifications. Changing this parameter will create a new cluster resource. Possible values:",
      "",
      "\t* `cce.s1.small` - small-scale single cluster (up to 50 nodes).",
      "\t* `cce.s1.medium` - medium-scale single cluster (up to 200 nodes).",
      "\t* `cce.s1.large` - large-scale single cluster (up to 1000 nodes).",
      "\t* `cce.s2.small` - small-scale HA cluster (up to 50 nodes).",
      "\t* `cce.s2.medium` - medium-scale HA cluster (up to 200 nodes).",
      "\t* `cce.s2.large` - large-scale HA cluster (up to 1000 nodes).",
      "\t* `cce.t1.small` - small-scale single physical machine cluster (up to 10 nodes).",
      "\t* `cce.t1.medium` - medium-scale single physical machine cluster (up to 100 nodes).",
      "\t* `cce.t1.large` - large-scale single physical machine cluster (up to 500 nodes).",
      "\t* `cce.t2.small` - small-scale HA physical machine cluster (up to 10 nodes).",
      "\t* `cce.t2.medium` - medium-scale HA physical machine cluster (up to 100 nodes).",
      "\t* `cce.t2.large` - large-scale HA physical machine cluster (up to 500 nodes).",
      "",
      "* `cluster_version` - (Optional) For the cluster version, possible values are v1.7.3-r10 or v1.9.2-r1.",
      "",
      "* `cluster_type` - (Required) Cluster Type, possible values are VirtualMachine and BareMetal. Changing this parameter will create a new cluster resource.",
      "",
      "* `description` - (Optional) Cluster description.",
      "",
      "* `billing_mode` - (Optional) Charging mode of the cluster, which is 0 (on demand). Changing this parameter will create a new cluster resource.",
      "",
      "* `extend_param` - (Optional) Extended parameter. Changing this parameter will create a new cluster resource.",
      "",
      "* `vpc_id` - (Required) The ID of the VPC used to create the node. Changing this parameter will create a new cluster resource.",
      "",
      "* `subnet_id` - (Required) The ID of the subnet used to create the node. Changing this parameter will create a new cluster resource.",
      "",
      "* `highway_subnet_id` - (Optional) The ID of the high speed network used to create bare metal nodes. Changing this parameter will create a new cluster resource.",
      "",
      "* `container_network_type` - (Required) Container network parameters. Possible values:",
      "",
      "\t* `overlay_l2` - An overlay_l2 network built for containers by using Open vSwitch(OVS)",
      "\t* `underlay_ipvlan` - An underlay_ipvlan network built for bare metal servers by using ipvlan.",
      "\t* `vpc-router` - An vpc-router network built for containers by using ipvlan and custom VPC routes.",
      "",
      "* `container_network_cidr` - (Optional) Container network segment. Changing this parameter will create a new cluster resource.",
      "",
      "* `authentication_mode` - (Optional) Authentication mode of the cluster, possible values are x509 and rbac. Defaults to x509.",
      "    Changing this parameter will create a new cluster resource.",
      "",
      "## Attributes Reference",
      "",
      "All above argument parameters can be exported as attribute parameters along with attribute reference.",
      "",
      "  * `id` -  Id of the cluster resource.",
      "",
      "  * `status` -  Cluster status information.",
      "",
      "## Import",
      "",
      " Cluster can be imported using the cluster id, e.g."
    ]
  },
  "huaweicloud-resource-cce_nodes_v3": {
    "description": "Defines cce_nodes_v3",
    "prefix": "tf-huaweicloud-resource-cce_nodes_v3",
    "body": [
      "   variable \"cluster_id\" { }",
      "   variable \"ssh_key\" { }",
      "   variable \"availability_zone\" { }",
      "",
      "   resource \"huaweicloud_cce_node_v3\" \"node_1\" {",
      "    cluster_id=\"${var.cluster_id}\"",
      "    name = \"node1\"",
      "    flavor_id=\"s1.medium\"",
      "    iptype=\"5_bgp\"",
      "    availability_zone= \"${var.availability_zone}\"",
      "    key_pair=\"${var.ssh_key}\"",
      "    root_volume {",
      "     size= 40",
      "     volumetype= \"SATA\"",
      "    }",
      "    sharetype= \"PER\"",
      "    bandwidth_size= 100",
      "    data_volumes {",
      "      size= 100",
      "      volumetype= \"SATA\"",
      "    }",
      "  }"
    ]
  },
  "huaweicloud-resource-cdm_cluster_v1": {
    "description": "Defines cdm_cluster_v1",
    "prefix": "tf-huaweicloud-resource-cdm_cluster_v1",
    "body": [
      "resource \"huaweicloud_networking_secgroup_v2\" \"secgroup\" {",
      "  name        = \"terraform_test_security_group\"",
      "  description = \"terraform security group acceptance test\"",
      "}",
      "",
      "resource \"huaweicloud_cdm_cluster_v1\" \"cluster\" {",
      "  availability_zone = \"{{ availability_zone }}\"",
      "  flavor_id         = \"{{ flavor_id }}\"",
      "  name              = \"terraform_test_cdm_cluster\"",
      "  security_group_id = \"${huaweicloud_networking_secgroup_v2.secgroup.id}\"",
      "  subnet_id         = \"{{ network_id }}\"",
      "  vpc_id            = \"{{ vpc_id }}\"",
      "  version           = \"{{ version }}\"",
      "}"
    ]
  },
  "huaweicloud-resource-ces_alarmrule": {
    "description": "Defines ces_alarmrule",
    "prefix": "tf-huaweicloud-resource-ces_alarmrule",
    "body": [
      "resource \"huaweicloud_ces_alarmrule\" \"alarm_rule\" {",
      "  \"alarm_name\" = \"alarm_rule\"",
      "  \"metric\" {",
      "    \"namespace\" = \"SYS.ECS\"",
      "    \"metric_name\" = \"network_outgoing_bytes_rate_inband\"",
      "    \"dimensions\" {",
      "        \"name\" = \"instance_id\"",
      "        \"value\" = \"${huaweicloud_compute_instance_v2.webserver.id}\"",
      "    }",
      "  }",
      "  \"condition\"  {",
      "    \"period\" = 300",
      "    \"filter\" = \"average\"",
      "    \"comparison_operator\" = \">\"",
      "    \"value\" = 6",
      "    \"unit\" = \"B/s\"",
      "    \"count\" = 1",
      "  }",
      "  \"alarm_actions\" {",
      "    \"type\" = \"notification\"",
      "    \"notification_list\" = [",
      "      \"${huaweicloud_smn_topic_v2.topic.id}\"",
      "    ]",
      "  }",
      "}"
    ]
  },
  "huaweicloud-resource-cloudtable_cluster_v2": {
    "description": "Defines cloudtable_cluster_v2",
    "prefix": "tf-huaweicloud-resource-cloudtable_cluster_v2",
    "body": [
      "resource \"huaweicloud_networking_secgroup_v2\" \"secgroup\" {",
      "  name        = \"terraform_test_security_group\"",
      "  description = \"terraform security group acceptance test\"",
      "}",
      "",
      "resource \"huaweicloud_cloudtable_cluster_v2\" \"cluster\" {",
      "  availability_zone = \"{{ availability_zone }}\"",
      "  name              = \"terraform-test-cluster\"",
      "  rs_num            = 2",
      "  security_group_id = \"${huaweicloud_networking_secgroup_v2.secgroup.id}\"",
      "  subnet_id         = \"{{ network_id }}\"",
      "  vpc_id            = \"{{ vpc_id }}\"",
      "  storage_type      = \"COMMON\"",
      "}"
    ]
  },
  "huaweicloud-resource-compute_floatingip_associate_v2": {
    "description": "Defines compute_floatingip_associate_v2",
    "prefix": "tf-huaweicloud-resource-compute_floatingip_associate_v2",
    "body": [
      "resource \"huaweicloud_compute_instance_v2\" \"instance_1\" {",
      "  name            = \"instance_1\"",
      "  image_id        = \"ad091b52-742f-469e-8f3c-fd81cadf0743\"",
      "  flavor_id       = 3",
      "  key_pair        = \"my_key_pair_name\"",
      "  security_groups = [\"default\"]",
      "}",
      "",
      "resource \"huaweicloud_networking_floatingip_v2\" \"fip_1\" {",
      "  pool = \"my_pool\"",
      "}",
      "",
      "resource \"huaweicloud_compute_floatingip_associate_v2\" \"fip_1\" {",
      "  floating_ip = \"${huaweicloud_networking_floatingip_v2.fip_1.address}\"",
      "  instance_id = \"${huaweicloud_compute_instance_v2.instance_1.id}\"",
      "}"
    ]
  },
  "huaweicloud-resource-compute_floatingip_v2": {
    "description": "Defines compute_floatingip_v2",
    "prefix": "tf-huaweicloud-resource-compute_floatingip_v2",
    "body": [
      "resource \"huaweicloud_compute_floatingip_v2\" \"floatip_1\" {",
      "}"
    ]
  },
  "huaweicloud-resource-compute_instance_v2": {
    "description": "Defines compute_instance_v2",
    "prefix": "tf-huaweicloud-resource-compute_instance_v2",
    "body": [
      "resource \"huaweicloud_compute_instance_v2\" \"basic\" {",
      "  name              = \"basic\"",
      "  image_id          = \"ad091b52-742f-469e-8f3c-fd81cadf0743\"",
      "  flavor_id         = \"3\"",
      "  key_pair          = \"my_key_pair_name\"",
      "  security_groups   = [\"default\"]",
      "  availability_zone = \"az\"",
      "",
      "  metadata = {",
      "    this = \"that\"",
      "  }",
      "",
      "  network {",
      "    uuid = \"55534eaa-533a-419d-9b40-ec427ea7195a\"",
      "  }",
      "}"
    ]
  },
  "huaweicloud-resource-compute_keypair_v2": {
    "description": "Defines compute_keypair_v2",
    "prefix": "tf-huaweicloud-resource-compute_keypair_v2",
    "body": [
      "resource \"huaweicloud_compute_keypair_v2\" \"test-keypair\" {",
      "  name       = \"my-keypair\"",
      "  public_key = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDAjpC1hwiOCCmKEWxJ4qzTTsJbKzndLotBCz5PcwtUnflmU+gHJtWMZKpuEGVi29h0A/+ydKek1O18k10Ff+4tyFjiHDQAnOfgWf7+b1yK+qDip3X1C0UPMbwHlTfSGWLGZqd9LvEFx9k3h/M+VtMvwR1lJ9LUyTAImnNjWG7TaIPmui30HvM2UiFEmqkr4ijq45MyX2+fLIePLRIF61p4whjHAQYufqyno3BS48icQb4p6iVEZPo4AE2o9oIyQvj2mx4dk5Y8CgSETOZTYDOR3rU2fZTRDRgPJDH9FWvQjF5tA0p3d9CoWWd2s6GKKbfoUIi8R/Db1BSPJwkqB\"",
      "}"
    ]
  },
  "huaweicloud-resource-compute_secgroup_v2": {
    "description": "Defines compute_secgroup_v2",
    "prefix": "tf-huaweicloud-resource-compute_secgroup_v2",
    "body": [
      "resource \"huaweicloud_compute_secgroup_v2\" \"secgroup_1\" {",
      "  name        = \"my_secgroup\"",
      "  description = \"my security group\"",
      "",
      "  rule {",
      "    from_port   = 22",
      "    to_port     = 22",
      "    ip_protocol = \"tcp\"",
      "    cidr        = \"0.0.0.0/0\"",
      "  }",
      "",
      "  rule {",
      "    from_port   = 80",
      "    to_port     = 80",
      "    ip_protocol = \"tcp\"",
      "    cidr        = \"0.0.0.0/0\"",
      "  }",
      "}"
    ]
  },
  "huaweicloud-resource-compute_servergroup_v2": {
    "description": "Defines compute_servergroup_v2",
    "prefix": "tf-huaweicloud-resource-compute_servergroup_v2",
    "body": [
      "resource \"huaweicloud_compute_servergroup_v2\" \"test-sg\" {",
      "  name     = \"my-sg\"",
      "  policies = [\"anti-affinity\"]",
      "}"
    ]
  },
  "huaweicloud-resource-compute_volume_attach_v2": {
    "description": "Defines compute_volume_attach_v2",
    "prefix": "tf-huaweicloud-resource-compute_volume_attach_v2",
    "body": [
      "resource \"huaweicloud_blockstorage_volume_v2\" \"volume_1\" {",
      "  name = \"volume_1\"",
      "  size = 1",
      "}",
      "",
      "resource \"huaweicloud_compute_instance_v2\" \"instance_1\" {",
      "  name            = \"instance_1\"",
      "  security_groups = [\"default\"]",
      "}",
      "",
      "resource \"huaweicloud_compute_volume_attach_v2\" \"va_1\" {",
      "  instance_id = \"${huaweicloud_compute_instance_v2.instance_1.id}\"",
      "  volume_id   = \"${huaweicloud_blockstorage_volume_v2.volume_1.id}\"",
      "}"
    ]
  },
  "huaweicloud-resource-cs_cluster_v1": {
    "description": "Defines cs_cluster_v1",
    "prefix": "tf-huaweicloud-resource-cs_cluster_v1",
    "body": [
      "resource \"huaweicloud_cs_cluster_v1\" \"cluster\" {",
      "  name = \"terraform_cs_cluster_v1_test\"",
      "}"
    ]
  },
  "huaweicloud-resource-cs_peering_connect_v1": {
    "description": "Defines cs_peering_connect_v1",
    "prefix": "tf-huaweicloud-resource-cs_peering_connect_v1",
    "body": [
      "resource \"huaweicloud_cs_cluster_v1\" \"cluster\" {",
      "  name = \"terraform_cs_cluster_v1_test\"",
      "}",
      "",
      "resource \"huaweicloud_vpc_v1\" \"vpc\" {",
      "  name = \"terraform_vpc_v1_test\"",
      "  cidr = \"192.168.0.0/16\"",
      "}",
      "",
      "resource \"huaweicloud_vpc_subnet_v1\" \"subnet\" {",
      "  name       = \"terraform_vpc_subnet_v1_test\"",
      "  cidr       = \"192.168.0.0/16\"",
      "  gateway_ip = \"192.168.0.1\"",
      "  vpc_id     = \"${huaweicloud_vpc_v1.vpc.id}\"",
      "}",
      "",
      "resource \"huaweicloud_cs_peering_connect_v1\" \"peering\" {",
      "  name = \"terraform_cs_peering_connect_v1_test\"",
      "  target_vpc_info {",
      "    vpc_id = \"${huaweicloud_vpc_v1.vpc.id}\"",
      "  }",
      "  cluster_id = \"${huaweicloud_cs_cluster_v1.cluster.id}\"",
      "}"
    ]
  },
  "huaweicloud-resource-cs_route_v1": {
    "description": "Defines cs_route_v1",
    "prefix": "tf-huaweicloud-resource-cs_route_v1",
    "body": [
      "resource \"huaweicloud_cs_cluster_v1\" \"cluster\" {",
      "  name = \"terraform_cs_cluster_v1_test\"",
      "}",
      "",
      "resource \"huaweicloud_vpc_v1\" \"vpc\" {",
      "  name = \"terraform_vpc_v1_test\"",
      "  cidr = \"192.168.0.0/16\"",
      "}",
      "",
      "resource \"huaweicloud_vpc_subnet_v1\" \"subnet\" {",
      "  name = \"terraform_vpc_subnet_v1_test\"",
      "  cidr = \"192.168.0.0/16\"",
      "  gateway_ip = \"192.168.0.1\"",
      "  vpc_id = \"${huaweicloud_vpc_v1.vpc.id}\"",
      "}",
      "",
      "resource \"huaweicloud_cs_peering_connect_v1\" \"peering\" {",
      "  name = \"terraform_cs_peering_connect_v1_test\"",
      "  target_vpc_info {",
      "    vpc_id = \"${huaweicloud_vpc_v1.vpc.id}\"",
      "  }",
      "  cluster_id = \"${huaweicloud_cs_cluster_v1.cluster.id}\"",
      "}",
      "",
      "resource \"huaweicloud_cs_route_v1\" \"route\" {",
      "  cluster_id = \"${huaweicloud_cs_cluster_v1.cluster.id}\"",
      "  peering_id = \"${huaweicloud_cs_peering_connect_v1.peering.id}\"",
      "  destination = \"${huaweicloud_vpc_subnet_v1.subnet.cidr}\"",
      "}"
    ]
  },
  "huaweicloud-resource-csbs_backup_policy_v1": {
    "description": "Defines csbs_backup_policy_v1",
    "prefix": "tf-huaweicloud-resource-csbs_backup_policy_v1",
    "body": [
      "variable \"name\" {}",
      "variable \"id\" {}",
      "variable \"resource_name\" {}",
      "",
      "resource \"huaweicloud_csbs_backup_policy_v1\" \"backup_policy_v1\" {",
      "  name = \"${var.name}\"",
      "  resource {",
      "    id   = \"${var.id}\"",
      "    type = \"OS::Nova::Server\"",
      "    name = \"${var.resource_name}\"",
      "  }",
      "  scheduled_operation {",
      "    enabled         = true",
      "    operation_type  = \"backup\"",
      "    trigger_pattern = \"BEGIN:VCALENDAR\\r\\nBEGIN:VEVENT\\r\\nRRULE:FREQ=WEEKLY;BYDAY=TH;BYHOUR=12;BYMINUTE=27\\r\\nEND:VEVENT\\r\\nEND:VCALENDAR\\r\\n\"",
      "  }",
      "}",
      ""
    ]
  },
  "huaweicloud-resource-csbs_backup_v1": {
    "description": "Defines csbs_backup_v1",
    "prefix": "tf-huaweicloud-resource-csbs_backup_v1",
    "body": [
      "variable \"backup_name\" {}",
      "variable \"resource_id\" {}",
      "",
      "resource \"huaweicloud_csbs_backup_v1\" \"backup_v1\" {",
      "  backup_name   = \"${var.backup_name}\"",
      "  resource_id   = \"${var.resource_id}\"",
      "  resource_type = \"OS::Nova::Server\"",
      "}",
      ""
    ]
  },
  "huaweicloud-resource-css_cluster_v1": {
    "description": "Defines css_cluster_v1",
    "prefix": "tf-huaweicloud-resource-css_cluster_v1",
    "body": [
      "resource \"huaweicloud_networking_secgroup_v2\" \"secgroup\" {",
      "  name        = \"terraform_test_security_group\"",
      "  description = \"terraform security group acceptance test\"",
      "}",
      "",
      "resource \"huaweicloud_css_cluster_v1\" \"cluster\" {",
      "  expect_node_num = 1",
      "  name            = \"terraform_test_cluster\"",
      "  engine_version  = \"6.2.3\"",
      "  node_config {",
      "    flavor = \"ess.spec-2u16g\"",
      "    network_info {",
      "      security_group_id = \"${huaweicloud_networking_secgroup_v2.secgroup.id}\"",
      "      subnet_id         = \"{{ network_id }}\"",
      "      vpc_id            = \"{{ vpc_id }}\"",
      "    }",
      "    volume {",
      "      volume_type = \"COMMON\"",
      "      size        = 40",
      "    }",
      "    availability_zone = \"{{ availability_zone }}\"",
      "  }",
      "}"
    ]
  },
  "huaweicloud-resource-cts_tracker_v1": {
    "description": "Defines cts_tracker_v1",
    "prefix": "tf-huaweicloud-resource-cts_tracker_v1",
    "body": [
      "variable \"bucket_name\" {}",
      "variable \"topic_id\" {}",
      "",
      "resource \"huaweicloud_cts_tracker_v1\" \"tracker_v1\" {",
      "  bucket_name               = \"${var.bucket_name}\"",
      "  file_prefix_name          = \"yO8Q\"",
      "  is_support_smn            = true",
      "  topic_id                  = \"${var.topic_id}\"",
      "  is_send_all_key_operation = false",
      "  operations                = [\"login\"]",
      "  need_notify_user_list     = [\"user1\"]",
      "}",
      ""
    ]
  },
  "huaweicloud-resource-dcs_instance_v1": {
    "description": "Defines dcs_instance_v1",
    "prefix": "tf-huaweicloud-resource-dcs_instance_v1",
    "body": [
      "resource \"huaweicloud_networking_secgroup_v2\" \"secgroup_1\" {",
      "  name        = \"secgroup_1\"",
      "  description = \"secgroup_1\"",
      "}",
      "data \"huaweicloud_dcs_az_v1\" \"az_1\" {",
      "  port = \"8002\"",
      "}",
      "data \"huaweicloud_dcs_product_v1\" \"product_1\" {",
      "  spec_code = \"dcs.master_standby\"",
      "}",
      "resource \"huaweicloud_dcs_instance_v1\" \"instance_1\" {",
      "  name              = \"test_dcs_instance\"",
      "  engine_version    = \"3.0.7\"",
      "  password          = \"Huawei_test\"",
      "  engine            = \"Redis\"",
      "  capacity          = 2",
      "  vpc_id            = \"1477393a-29c9-4de5-843f-18ef51257c7e\"",
      "  security_group_id = \"${huaweicloud_networking_secgroup_v2.secgroup_1.id}\"",
      "  subnet_id         = \"27d99e17-42f2-4751-818f-5c8c6c03ff15\"",
      "  available_zones   = [\"${data.huaweicloud_dcs_az_v1.az_1.id}\"]",
      "  product_id        = \"${data.huaweicloud_dcs_product_v1.product_1.id}\"",
      "  save_days         = 1",
      "  backup_type       = \"manual\"",
      "  begin_at          = \"00:00-01:00\"",
      "  period_type       = \"weekly\"",
      "  backup_at         = [1]",
      "  depends_on        = [\"data.huaweicloud_dcs_product_v1.product_1\", \"huaweicloud_networking_secgroup_v2.secgroup_1\"]",
      "}"
    ]
  },
  "huaweicloud-resource-dis_stream_v2": {
    "description": "Defines dis_stream_v2",
    "prefix": "tf-huaweicloud-resource-dis_stream_v2",
    "body": [
      "resource \"huaweicloud_dis_stream_v2\" \"stream\" {",
      "  stream_name     = \"terraform_test_dis_stream\"",
      "  partition_count = 1",
      "}"
    ]
  },
  "huaweicloud-resource-dli_queue_v1": {
    "description": "Defines dli_queue_v1",
    "prefix": "tf-huaweicloud-resource-dli_queue_v1",
    "body": [
      "resource \"huaweicloud_dli_queue_v1\" \"queue\" {",
      "  name = \"terraform_dli_queue_v1_test\"",
      "  cu_count = 4",
      "}"
    ]
  },
  "huaweicloud-resource-dms_group_v1": {
    "description": "Defines dms_group_v1",
    "prefix": "tf-huaweicloud-resource-dms_group_v1",
    "body": [
      "resource \"huaweicloud_dms_group_v1\" \"queue_1\" {",
      "  name              = \"queue_1\"",
      "  description       = \"test create dms queue\"",
      "  queue_mode        = \"FIFO\"",
      "  redrive_policy    = \"enable\"",
      "  max_consume_count = 80",
      "}",
      "",
      "resource \"huaweicloud_dms_group_v1\" \"group_1\" {",
      "  name     = \"group_1\"",
      "  queue_id = \"${huaweicloud_dms_queue_v1.queue_1.id}\"",
      "}"
    ]
  },
  "huaweicloud-resource-dms_instance_v1": {
    "description": "Defines dms_instance_v1",
    "prefix": "tf-huaweicloud-resource-dms_instance_v1",
    "body": [
      "resource \"huaweicloud_networking_secgroup_v2\" \"secgroup_1\" {",
      "  name        = \"secgroup_1\"",
      "  description = \"secgroup_1\"",
      "}",
      "data \"huaweicloud_dms_az_v1\" \"az_1\" {",
      "}",
      "data \"huaweicloud_dms_product_v1\" \"product_1\" {",
      "  engine        = \"rabbitmq\"",
      "  instance_type = \"single\"",
      "  version       = \"3.7.0\"",
      "}",
      "resource \"huaweicloud_dms_instance_v1\" \"instance_1\" {",
      "  name              = \"%s\"",
      "  engine            = \"rabbitmq\"",
      "  storage_space     = \"${data.huaweicloud_dms_product_v1.product_1.storage}\"",
      "  access_user       = \"user\"",
      "  password          = \"Dmstest@123\"",
      "  vpc_id            = \"%s\"",
      "  security_group_id = \"${huaweicloud_networking_secgroup_v2.secgroup_1.id}\"",
      "  subnet_id         = \"%s\"",
      "  available_zones   = [\"${data.huaweicloud_dms_az_v1.az_1.id}\"]",
      "  product_id        = \"${data.huaweicloud_dms_product_v1.product_1.id}\"",
      "  engine_version    = \"${data.huaweicloud_dms_product_v1.product_1.version}\"",
      "  depends_on        = [\"data.huaweicloud_dms_product_v1.product_1\", \"huaweicloud_networking_secgroup_v2.secgroup_1\"]",
      "}"
    ]
  },
  "huaweicloud-resource-dms_queue_v1": {
    "description": "Defines dms_queue_v1",
    "prefix": "tf-huaweicloud-resource-dms_queue_v1",
    "body": [
      "resource \"huaweicloud_dms_queue_v1\" \"queue_1\" {",
      "  name              = \"queue_1\"",
      "  description       = \"test create dms queue\"",
      "  queue_mode        = \"FIFO\"",
      "  redrive_policy    = \"enable\"",
      "  max_consume_count = 80",
      "}"
    ]
  },
  "huaweicloud-resource-dns_recordset_v2": {
    "description": "Defines dns_recordset_v2",
    "prefix": "tf-huaweicloud-resource-dns_recordset_v2",
    "body": [
      "resource \"huaweicloud_dns_zone_v2\" \"example_zone\" {",
      "  name        = \"example.com.\"",
      "  email       = \"email2@example.com\"",
      "  description = \"a zone\"",
      "  ttl         = 6000",
      "  zone_type   = \"public\"",
      "}",
      "",
      "resource \"huaweicloud_dns_recordset_v2\" \"rs_example_com\" {",
      "  zone_id     = \"${huaweicloud_dns_zone_v2.example_zone.id}\"",
      "  name        = \"rs.example.com.\"",
      "  description = \"An example record set\"",
      "  ttl         = 3000",
      "  type        = \"A\"",
      "  records     = [\"10.0.0.1\"]",
      "}"
    ]
  },
  "huaweicloud-resource-dns_zone_v2": {
    "description": "Defines dns_zone_v2",
    "prefix": "tf-huaweicloud-resource-dns_zone_v2",
    "body": [
      "resource \"huaweicloud_dns_zone_v2\" \"my_public_zone\" {",
      "  name        = \"example.com.\"",
      "  email       = \"jdoe@example.com\"",
      "  description = \"An example zone\"",
      "  ttl         = 3000",
      "  zone_type   = \"public\"",
      "}"
    ]
  },
  "huaweicloud-resource-dws_cluster": {
    "description": "Defines dws_cluster",
    "prefix": "tf-huaweicloud-resource-dws_cluster",
    "body": [
      "resource \"huaweicloud_networking_secgroup_v2\" \"secgroup\" {",
      "  name        = \"security_group_2\"",
      "  description = \"terraform security group\"",
      "}",
      "",
      "resource \"huaweicloud_dws_cluster\" \"cluster\" {",
      "  node_type         = \"dws.m3.xlarge\"",
      "  number_of_node    = 3",
      "  network_id        = \"{{ network_id }}\"",
      "  vpc_id            = \"{{ vpc_id }}\"",
      "  security_group_id = \"${huaweicloud_networking_secgroup_v2.secgroup.id}\"",
      "  availability_zone = \"{{ availability_zone }}\"",
      "  name              = \"terraform_dws_cluster_test\"",
      "  user_name         = \"test_cluster_admin\"",
      "  user_pwd          = \"cluster123@!\"",
      "",
      "  timeouts {",
      "    create = \"30m\"",
      "    delete = \"30m\"",
      "  }",
      "}"
    ]
  },
  "huaweicloud-resource-elb_backendecs": {
    "description": "Defines elb_backendecs",
    "prefix": "tf-huaweicloud-resource-elb_backendecs",
    "body": [
      "resource \"huaweicloud_elb_loadbalancer\" \"elb\" {",
      "  name           = \"elb\"",
      "  type           = \"External\"",
      "  description    = \"test elb\"",
      "  vpc_id         = \"e346dc4a-d9a6-46f4-90df-10153626076e\"",
      "  admin_state_up = 1",
      "  bandwidth      = 5",
      "}",
      "",
      "resource \"huaweicloud_elb_listener\" \"listener\" {",
      "  name             = \"test-elb-listener\"",
      "  description      = \"great listener\"",
      "  protocol         = \"TCP\"",
      "  backend_protocol = \"TCP\"",
      "  port             = 12345",
      "  backend_port     = 8080",
      "  lb_algorithm     = \"roundrobin\"",
      "  loadbalancer_id  = \"${huaweicloud_elb_loadbalancer.elb.id}\"",
      "  timeouts {",
      "    create = \"5m\"",
      "    update = \"5m\"",
      "    delete = \"5m\"",
      "  }",
      "}",
      "",
      "resource \"huaweicloud_elb_backendecs\" \"backend\" {",
      "  private_address = \"192.168.0.211\"",
      "  listener_id     = \"${huaweicloud_elb_listener.listener.id}\"",
      "  server_id       = \"8f7a32f1-f66c-4d13-9b17-3a13f9f0bb8d\"",
      "}"
    ]
  },
  "huaweicloud-resource-elb_healthcheck": {
    "description": "Defines elb_healthcheck",
    "prefix": "tf-huaweicloud-resource-elb_healthcheck",
    "body": [
      "resource \"huaweicloud_elb_loadbalancer\" \"elb\" {",
      "  name           = \"elb\"",
      "  type           = \"External\"",
      "  description    = \"test elb\"",
      "  vpc_id         = \"e346dc4a-d9a6-46f4-90df-10153626076e\"",
      "  admin_state_up = 1",
      "  bandwidth      = 5",
      "}",
      "",
      "resource \"huaweicloud_elb_listener\" \"listener\" {",
      "  name             = \"test-elb-listener\"",
      "  description      = \"great listener\"",
      "  protocol         = \"TCP\"",
      "  backend_protocol = \"TCP\"",
      "  port             = 12345",
      "  backend_port     = 8080",
      "  lb_algorithm     = \"roundrobin\"",
      "  loadbalancer_id  = \"${huaweicloud_elb_loadbalancer.elb.id}\"",
      "  timeouts {",
      "    create = \"5m\"",
      "    update = \"5m\"",
      "    delete = \"5m\"",
      "  }",
      "}",
      "",
      "resource \"huaweicloud_elb_healthcheck\" \"healthcheck\" {",
      "  listener_id               = \"${huaweicloud_elb_listener.listener.id}\"",
      "  healthcheck_protocol      = \"TCP\"",
      "  healthcheck_connect_porta = 22",
      "  healthy_threshold         = 5",
      "  healthcheck_timeout       = 25",
      "  healthcheck_interval      = 3",
      "  timeouts {",
      "    create = \"5m\"",
      "    update = \"5m\"",
      "    delete = \"5m\"",
      "  }",
      "}"
    ]
  },
  "huaweicloud-resource-elb_listener": {
    "description": "Defines elb_listener",
    "prefix": "tf-huaweicloud-resource-elb_listener",
    "body": [
      "resource \"huaweicloud_elb_loadbalancer\" \"elb\" {",
      "  name           = \"elb\"",
      "  type           = \"External\"",
      "  description    = \"test elb\"",
      "  vpc_id         = \"e346dc4a-d9a6-46f4-90df-10153626076e\"",
      "  admin_state_up = 1",
      "  bandwidth      = 5",
      "}",
      "",
      "resource \"huaweicloud_elb_listener\" \"listener\" {",
      "  name             = \"test-elb-listener\"",
      "  description      = \"great listener\"",
      "  protocol         = \"TCP\"",
      "  backend_protocol = \"TCP\"",
      "  port             = 12345",
      "  backend_port     = 8080",
      "  lb_algorithm     = \"roundrobin\"",
      "  loadbalancer_id  = \"${huaweicloud_elb_loadbalancer.elb.id}\"",
      "  timeouts {",
      "    create = \"5m\"",
      "    update = \"5m\"",
      "    delete = \"5m\"",
      "  }",
      "}"
    ]
  },
  "huaweicloud-resource-elb_loadbalancer": {
    "description": "Defines elb_loadbalancer",
    "prefix": "tf-huaweicloud-resource-elb_loadbalancer",
    "body": [
      "resource \"huaweicloud_elb_loadbalancer\" \"elb\" {",
      "  name           = \"elb\"",
      "  type           = \"External\"",
      "  description    = \"test elb\"",
      "  vpc_id         = \"e346dc4a-d9a6-46f4-90df-10153626076e\"",
      "  admin_state_up = 1",
      "  bandwidth      = 5",
      "}"
    ]
  },
  "huaweicloud-resource-fw_firewall_group_v2": {
    "description": "Defines fw_firewall_group_v2",
    "prefix": "tf-huaweicloud-resource-fw_firewall_group_v2",
    "body": [
      "resource \"huaweicloud_fw_rule_v2\" \"rule_1\" {",
      "  name             = \"my-rule-1\"",
      "  description      = \"drop TELNET traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"tcp\"",
      "  destination_port = \"23\"",
      "  enabled          = \"true\"",
      "}",
      "",
      "resource \"huaweicloud_fw_rule_v2\" \"rule_2\" {",
      "  name             = \"my-rule-2\"",
      "  description      = \"drop NTP traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"udp\"",
      "  destination_port = \"123\"",
      "  enabled          = \"false\"",
      "}",
      "",
      "resource \"huaweicloud_fw_policy_v2\" \"policy_1\" {",
      "  name = \"my-policy\"",
      "",
      "  rules = [\"${huaweicloud_fw_rule_v2.rule_1.id}\",",
      "    \"${huaweicloud_fw_rule_v2.rule_2.id}\",",
      "  ]",
      "}",
      "",
      "resource \"huaweicloud_fw_firewall_group_v2\" \"firewall_group_1\" {",
      "  name              = \"my-firewall-group\"",
      "  ingress_policy_id = \"${huaweicloud_fw_policy_v2.policy_1.id}\"",
      "}"
    ]
  },
  "huaweicloud-resource-fw_policy_v2": {
    "description": "Defines fw_policy_v2",
    "prefix": "tf-huaweicloud-resource-fw_policy_v2",
    "body": [
      "resource \"huaweicloud_fw_rule_v2\" \"rule_1\" {",
      "  name             = \"my-rule-1\"",
      "  description      = \"drop TELNET traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"tcp\"",
      "  destination_port = \"23\"",
      "  enabled          = \"true\"",
      "}",
      "",
      "resource \"huaweicloud_fw_rule_v2\" \"rule_2\" {",
      "  name             = \"my-rule-2\"",
      "  description      = \"drop NTP traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"udp\"",
      "  destination_port = \"123\"",
      "  enabled          = \"false\"",
      "}",
      "",
      "resource \"huaweicloud_fw_policy_v2\" \"policy_1\" {",
      "  name = \"my-policy\"",
      "",
      "  rules = [\"${huaweicloud_fw_rule_v2.rule_1.id}\",",
      "    \"${huaweicloud_fw_rule_v2.rule_2.id}\",",
      "  ]",
      "}"
    ]
  },
  "huaweicloud-resource-fw_rule_v2": {
    "description": "Defines fw_rule_v2",
    "prefix": "tf-huaweicloud-resource-fw_rule_v2",
    "body": [
      "resource \"huaweicloud_fw_rule_v2\" \"rule_1\" {",
      "  name             = \"my_rule\"",
      "  description      = \"drop TELNET traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"tcp\"",
      "  destination_port = \"23\"",
      "  enabled          = \"true\"",
      "}"
    ]
  },
  "huaweicloud-resource-ges_graph_v1": {
    "description": "Defines ges_graph_v1",
    "prefix": "tf-huaweicloud-resource-ges_graph_v1",
    "body": [
      "resource \"huaweicloud_networking_secgroup_v2\" \"secgroup\" {",
      "  name        = \"terraform_test_security_group\"",
      "  description = \"terraform security group acceptance test\"",
      "}",
      "",
      "resource \"huaweicloud_ges_graph_v1\" \"graph\" {",
      "  availability_zone = \"{{ availability_zone }}\"",
      "  graph_size_type   = 0",
      "  name              = \"terraform_ges_graph_test\"",
      "  region            = \"{{ region_name }}\"",
      "  security_group_id = \"${huaweicloud_networking_secgroup_v2.secgroup.id}\"",
      "  subnet_id         = \"{{ network_id }}\"",
      "  vpc_id            = \"{{ vpc_id }}\"",
      "}"
    ]
  },
  "huaweicloud-resource-iam_agency_v3": {
    "description": "Defines iam_agency_v3",
    "prefix": "tf-huaweicloud-resource-iam_agency_v3",
    "body": [
      "resource \"huaweicloud_iam_agency_v3\" \"agency\" {",
      "  name                  = \"test_agency\"",
      "  description           = \"test agency\"",
      "  delegated_domain_name = \"***\"",
      "  project_role = [",
      "    {",
      "      project = \"cn-north-1\"",
      "      roles = [",
      "        \"Tenant Administrator\",",
      "      ]",
      "    }",
      "  ]",
      "  domain_roles = [",
      "    \"Anti-DDoS Administrator\",",
      "  ]",
      "}"
    ]
  },
  "huaweicloud-resource-identity_group_membership_v3": {
    "description": "Defines identity_group_membership_v3",
    "prefix": "tf-huaweicloud-resource-identity_group_membership_v3",
    "body": [
      "resource \"huaweicloud_identity_group_v3\" \"group_1\" {",
      "  name        = \"group1\"",
      "  description = \"This is a test group\"",
      "}",
      "",
      "resource \"huaweicloud_identity_user_v3\" \"user_1\" {",
      "  name     = \"user1\"",
      "  enabled  = true",
      "  password = \"password12345!\"",
      "}",
      "",
      "resource \"huaweicloud_identity_user_v3\" \"user_2\" {",
      "  name     = \"user2\"",
      "  enabled  = true",
      "  password = \"password12345!\"",
      "}",
      "",
      "resource \"huaweicloud_identity_group_membership_v3\" \"membership_1\" {",
      "  group = \"${huaweicloud_identity_group_v3.group_1.id}\"",
      "  users = [\"${huaweicloud_identity_user_v3.user_1.id}\",",
      "    \"${huaweicloud_identity_user_v3.user_2.id}\"",
      "  ]",
      "}"
    ]
  },
  "huaweicloud-resource-identity_group_v3": {
    "description": "Defines identity_group_v3",
    "prefix": "tf-huaweicloud-resource-identity_group_v3",
    "body": [
      "resource \"huaweicloud_identity_group_v3\" \"group_1\" {",
      "  name        = \"group_1\"",
      "  description = \"This is a test group\"",
      "}"
    ]
  },
  "huaweicloud-resource-identity_project_v3": {
    "description": "Defines identity_project_v3",
    "prefix": "tf-huaweicloud-resource-identity_project_v3",
    "body": [
      "resource \"huaweicloud_identity_project_v3\" \"project_1\" {",
      "  name        = \"eu-de_project1\"",
      "  description = \"This is a test project\"",
      "}"
    ]
  },
  "huaweicloud-resource-identity_role_assignment_v3": {
    "description": "Defines identity_role_assignment_v3",
    "prefix": "tf-huaweicloud-resource-identity_role_assignment_v3",
    "body": [
      "resource \"huaweicloud_identity_project_v3\" \"project_1\" {",
      "  name = \"eu-de_project_1\"",
      "}",
      "",
      "resource \"huaweicloud_identity_group_v3\" \"group_1\" {",
      "  name = \"group_1\"",
      "}",
      "",
      "data \"huaweicloud_identity_role_v3\" \"role_1\" {",
      "  name = \"system_all_4\" #ECS admin",
      "}",
      "",
      "resource \"huaweicloud_identity_role_assignment_v3\" \"role_assignment_1\" {",
      "  group_id   = \"${huaweicloud_identity_group_v3.group_1.id}\"",
      "  project_id = \"${huaweicloud_identity_project_v3.project_1.id}\"",
      "  role_id    = \"${data.huaweicloud_identity_role_v3.role_1.id}\"",
      "}"
    ]
  },
  "huaweicloud-resource-identity_user_v3": {
    "description": "Defines identity_user_v3",
    "prefix": "tf-huaweicloud-resource-identity_user_v3",
    "body": [
      "resource \"huaweicloud_identity_user_v3\" \"user_1\" {",
      "  name        = \"user_1\"",
      "  description = \"A user\"",
      "  password    = \"password123!\"",
      "",
      "}"
    ]
  },
  "huaweicloud-resource-images_image_v2": {
    "description": "Defines images_image_v2",
    "prefix": "tf-huaweicloud-resource-images_image_v2",
    "body": [
      "resource \"huaweicloud_images_image_v2\" \"rancheros\" {",
      "  name             = \"RancherOS\"",
      "  image_source_url = \"https://releases.rancher.com/os/latest/rancheros-openstack.img\"",
      "  container_format = \"bare\"",
      "  disk_format      = \"qcow2\"",
      "  tags             = [\"foo.bar\", \"tag.value\"]",
      "}"
    ]
  },
  "huaweicloud-resource-kms_key_v1": {
    "description": "Defines kms_key_v1",
    "prefix": "tf-huaweicloud-resource-kms_key_v1",
    "body": [
      "resource \"huaweicloud_kms_key_v1\" \"key_1\" {",
      "  key_alias       = \"key_1\"",
      "  pending_days    = \"7\"",
      "  key_description = \"first test key\"",
      "  realm           = \"cn-north-1\"",
      "  is_enabled      = true",
      "}"
    ]
  },
  "huaweicloud-resource-lb_l7policy_v2": {
    "description": "Defines lb_l7policy_v2",
    "prefix": "tf-huaweicloud-resource-lb_l7policy_v2",
    "body": [
      "resource \"huaweicloud_lb_loadbalancer_v2\" \"loadbalancer_1\" {",
      "  name          = \"loadbalancer_1\"",
      "  vip_subnet_id = \"SUBNET_ID\"",
      "}",
      "",
      "resource \"huaweicloud_lb_listener_v2\" \"listener_1\" {",
      "  name            = \"listener_1\"",
      "  protocol        = \"HTTP\"",
      "  protocol_port   = 8080",
      "  loadbalancer_id = \"${huaweicloud_lb_loadbalancer_v2.loadbalancer_1.id}\"",
      "}",
      "",
      "resource \"huaweicloud_lb_pool_v2\" \"pool_1\" {",
      "  name            = \"pool_1\"",
      "  protocol        = \"HTTP\"",
      "  lb_method       = \"ROUND_ROBIN\"",
      "  loadbalancer_id = \"${huaweicloud_lb_loadbalancer_v2.loadbalancer_1.id}\"",
      "}",
      "",
      "resource \"huaweicloud_lb_l7policy_v2\" \"l7policy_1\" {",
      "  name             = \"test\"",
      "  action           = \"REDIRECT_TO_POOL\"",
      "  description      = \"test l7 policy\"",
      "  position         = 1",
      "  listener_id      = \"${huaweicloud_lb_listener_v2.listener_1.id}\"",
      "  redirect_pool_id = \"${huaweicloud_lb_pool_v2.pool_1.id}\"",
      "}"
    ]
  },
  "huaweicloud-resource-lb_l7rule_v2": {
    "description": "Defines lb_l7rule_v2",
    "prefix": "tf-huaweicloud-resource-lb_l7rule_v2",
    "body": [
      "resource \"huaweicloud_lb_loadbalancer_v2\" \"loadbalancer_1\" {",
      "  name          = \"loadbalancer_1\"",
      "  vip_subnet_id = \"SUBNET_ID\"",
      "}",
      "",
      "resource \"huaweicloud_lb_listener_v2\" \"listener_1\" {",
      "  name            = \"listener_1\"",
      "  protocol        = \"HTTP\"",
      "  protocol_port   = 8080",
      "  loadbalancer_id = \"${huaweicloud_lb_loadbalancer_v2.loadbalancer_1.id}\"",
      "}",
      "",
      "resource \"huaweicloud_lb_pool_v2\" \"pool_1\" {",
      "  name            = \"pool_1\"",
      "  protocol        = \"HTTP\"",
      "  lb_method       = \"ROUND_ROBIN\"",
      "  loadbalancer_id = \"${huaweicloud_lb_loadbalancer_v2.loadbalancer_1.id}\"",
      "}",
      "",
      "resource \"huaweicloud_lb_l7policy_v2\" \"l7policy_1\" {",
      "  name         = \"test\"",
      "  action       = \"REDIRECT_TO_URL\"",
      "  description  = \"test description\"",
      "  position     = 1",
      "  listener_id  = \"${huaweicloud_lb_listener_v2.listener_1.id}\"",
      "  redirect_url = \"http://www.example.com\"",
      "}",
      "",
      "resource \"huaweicloud_lb_l7rule_v2\" \"l7rule_1\" {",
      "  l7policy_id  = \"${huaweicloud_lb_l7policy_v2.l7policy_1.id}\"",
      "  type         = \"PATH\"",
      "  compare_type = \"EQUAL_TO\"",
      "  value        = \"/api\"",
      "}"
    ]
  },
  "huaweicloud-resource-lb_listener_v2": {
    "description": "Defines lb_listener_v2",
    "prefix": "tf-huaweicloud-resource-lb_listener_v2",
    "body": [
      "resource \"huaweicloud_lb_listener_v2\" \"listener_1\" {",
      "  protocol        = \"HTTP\"",
      "  protocol_port   = 8080",
      "  loadbalancer_id = \"d9415786-5f1a-428b-b35f-2f1523e146d2\"",
      "}"
    ]
  },
  "huaweicloud-resource-lb_loadbalancer_v2": {
    "description": "Defines lb_loadbalancer_v2",
    "prefix": "tf-huaweicloud-resource-lb_loadbalancer_v2",
    "body": [
      "resource \"huaweicloud_lb_loadbalancer_v2\" \"lb_1\" {",
      "  vip_subnet_id = \"d9415786-5f1a-428b-b35f-2f1523e146d2\"",
      "}"
    ]
  },
  "huaweicloud-resource-lb_member_v2": {
    "description": "Defines lb_member_v2",
    "prefix": "tf-huaweicloud-resource-lb_member_v2",
    "body": [
      "resource \"huaweicloud_lb_member_v2\" \"member_1\" {",
      "  address       = \"192.168.199.23\"",
      "  protocol_port = 8080",
      "}"
    ]
  },
  "huaweicloud-resource-lb_monitor_v2": {
    "description": "Defines lb_monitor_v2",
    "prefix": "tf-huaweicloud-resource-lb_monitor_v2",
    "body": [
      "resource \"huaweicloud_lb_monitor_v2\" \"monitor_1\" {",
      "  pool_id     = \"${huaweicloud_lb_pool_v2.pool_1.id}\"",
      "  type        = \"PING\"",
      "  delay       = 20",
      "  timeout     = 10",
      "  max_retries = 5",
      "}"
    ]
  },
  "huaweicloud-resource-lb_pool_v2": {
    "description": "Defines lb_pool_v2",
    "prefix": "tf-huaweicloud-resource-lb_pool_v2",
    "body": [
      "resource \"huaweicloud_lb_pool_v2\" \"pool_1\" {",
      "  protocol    = \"HTTP\"",
      "  lb_method   = \"ROUND_ROBIN\"",
      "  listener_id = \"d9415786-5f1a-428b-b35f-2f1523e146d2\"",
      "",
      "  persistence {",
      "    type        = \"HTTP_COOKIE\"",
      "    cookie_name = \"testCookie\"",
      "  }",
      "}"
    ]
  },
  "huaweicloud-resource-maas_task_v1": {
    "description": "Defines maas_task_v1",
    "prefix": "tf-huaweicloud-resource-maas_task_v1",
    "body": [
      "resource \"huaweicloud_maas_task_v1\" \"task_1\" {",
      "  description = \"migration task\"",
      "  enable_kms = true",
      "  thread_num = 1",
      "  src_node {",
      "    region = \"cn-beijing\"",
      "    ak = \"AK\",",
      "\tsk = \"SK\",",
      "    object_key = \"123.txt\",",
      "    bucket = \"maas-bucket\",",
      "  }",
      "  dst_node {",
      "    region = \"eu-de\",",
      "    ak = \"AK\",",
      "    sk = \"SK\",",
      "    object_key = \"maas\",",
      "    bucket = \"test-maas\",",
      "  }",
      "}"
    ]
  },
  "huaweicloud-resource-mls_instance": {
    "description": "Defines mls_instance",
    "prefix": "tf-huaweicloud-resource-mls_instance",
    "body": [
      "resource \"huaweicloud_mrs_cluster_v1\" \"cluster1\" {",
      "  cluster_name          = \"mrs-cluster-acc\"",
      "  region                = \"en-OS_REGION_NAME\"",
      "  billing_type          = 12",
      "  master_node_num       = 2",
      "  core_node_num         = 3",
      "  master_node_size      = \"s1.4xlarge.linux.mrs\"",
      "  core_node_size        = \"s1.xlarge.linux.mrs\"",
      "  available_zone_id     = \"{{ availability_zone }}\"",
      "  vpc_id                = \"{{ vpc_id }}\"",
      "  subnet_id             = \"{{ network_id }}\"",
      "  cluster_version       = \"MRS 1.3.0\"",
      "  volume_type           = \"SATA\"",
      "  volume_size           = 100",
      "  safe_mode             = 0",
      "  cluster_type          = 0",
      "  node_public_cert_name = \"KeyPair-ci\"",
      "  cluster_admin_secret  = \"\"",
      "  component_list {",
      "    component_name = \"Hadoop\"",
      "  }",
      "  component_list {",
      "    component_name = \"Spark\"",
      "  }",
      "  component_list {",
      "    component_name = \"Hive\"",
      "  }",
      "  timeouts {",
      "    create = \"60m\"",
      "  }",
      "}",
      "",
      "resource \"huaweicloud_mls_instance\" \"instance\" {",
      "  name    = \"terraform-mls-instancei\"",
      "  version = \"1.5.0\"",
      "  flavor  = \"mls.c2.2xlarge.common\"",
      "  network {",
      "    vpc_id         = \"{{ vpc_id }}\"",
      "    network_id     = \"{{ network_id }}\"",
      "    available_zone = \"{{ availability_zone }}\"",
      "    public_ip {",
      "      bind_type = \"not_use\"",
      "    }",
      "  }",
      "  mrs_cluster {",
      "    id = \"${huaweicloud_mrs_cluster_v1.cluster1.id}\"",
      "  }",
      "",
      "  timeouts {",
      "    create = \"60m\"",
      "  }",
      "}"
    ]
  },
  "huaweicloud-resource-mrs_cluster_v1": {
    "description": "Defines mrs_cluster_v1",
    "prefix": "tf-huaweicloud-resource-mrs_cluster_v1",
    "body": [
      "resource \"huaweicloud_mrs_cluster_v1\" \"cluster1\" {",
      "  cluster_name          = \"mrs-cluster\"",
      "  region                = \"cn-north-1\"",
      "  billing_type          = 12",
      "  master_node_num       = 2",
      "  core_node_num         = 3",
      "  master_node_size      = \"c3.4xlarge.2.linux.bigdata\"",
      "  core_node_size        = \"c3.xlarge.4.linux.bigdata\"",
      "  available_zone_id     = \"ae04cf9d61544df3806a3feeb401b204\"",
      "  vpc_id                = \"51edfb75-f9f0-4bbc-b4dc-21466b93f60d\"",
      "  subnet_id             = \"1d7a8646-43ee-455a-a3ab-40da87a1304c\"",
      "  cluster_version       = \"MRS 1.6.3\"",
      "  volume_type           = \"SATA\"",
      "  volume_size           = 100",
      "  safe_mode             = 0",
      "  cluster_type          = 0",
      "  node_public_cert_name = \"KeyPair-ci\"",
      "  cluster_admin_secret  = \"\"",
      "  component_list {",
      "    component_name = \"Hadoop\"",
      "  }",
      "  component_list {",
      "    component_name = \"Spark\"",
      "  }",
      "  component_list {",
      "    component_name = \"Hive\"",
      "  }",
      "}"
    ]
  },
  "huaweicloud-resource-mrs_job_v1": {
    "description": "Defines mrs_job_v1",
    "prefix": "tf-huaweicloud-resource-mrs_job_v1",
    "body": [
      "",
      "resource \"huaweicloud_mrs_job_v1\" \"job1\" {",
      "  job_type   = 1",
      "  job_name   = \"test_mapreduce_job1\"",
      "  cluster_id = \"ef43d2ff-1ecf-4f13-bd0c-0004c429a058\"",
      "  jar_path   = \"s3a://wordcount/program/hadoop-mapreduce-examples-2.7.5.jar\"",
      "  input      = \"s3a://wordcount/input/\"",
      "  output     = \"s3a://wordcount/output/\"",
      "  job_log    = \"s3a://wordcount/log/\"",
      "  arguments  = \"wordcount\"",
      "}",
      ""
    ]
  },
  "huaweicloud-resource-nat_gateway_v2": {
    "description": "Defines nat_gateway_v2",
    "prefix": "tf-huaweicloud-resource-nat_gateway_v2",
    "body": [
      "resource \"huaweicloud_nat_gateway_v2\" \"nat_1\" {",
      "  name                = \"Terraform\"",
      "  description         = \"test for terraform2\"",
      "  spec                = \"3\"",
      "  router_id           = \"2c1fe4bd-ebad-44ca-ae9d-e94e63847b75\"",
      "  internal_network_id = \"dc8632e2-d9ff-41b1-aa0c-d455557314a0\"",
      "}"
    ]
  },
  "huaweicloud-resource-nat_snat_rule_v2": {
    "description": "Defines nat_snat_rule_v2",
    "prefix": "tf-huaweicloud-resource-nat_snat_rule_v2",
    "body": [
      "resource \"huaweicloud_nat_snat_rule_v2\" \"snat_1\" {",
      "  nat_gateway_id = \"3c0dffda-7c76-452b-9dcc-5bce7ae56b17\"",
      "  network_id     = \"dc8632e2-d9ff-41b1-aa0c-d455557314a0\"",
      "  floating_ip_id = \"0a166fc5-a904-42fb-b1ef-cf18afeeddca\"",
      "}"
    ]
  },
  "huaweicloud-resource-networking_floatingip_associate_v2": {
    "description": "Defines networking_floatingip_associate_v2",
    "prefix": "tf-huaweicloud-resource-networking_floatingip_associate_v2",
    "body": [
      "resource \"huaweicloud_networking_port_v2\" \"port_1\" {",
      "  network_id = \"a5bbd213-e1d3-49b6-aed1-9df60ea94b9a\"",
      "}",
      "",
      "resource \"huaweicloud_networking_floatingip_associate_v2\" \"fip_1\" {",
      "  floating_ip = \"1.2.3.4\"",
      "  port_id     = \"${huaweicloud_networking_port_v2.port_1.id}\"",
      "}"
    ]
  },
  "huaweicloud-resource-networking_floatingip_v2": {
    "description": "Defines networking_floatingip_v2",
    "prefix": "tf-huaweicloud-resource-networking_floatingip_v2",
    "body": [
      "resource \"huaweicloud_networking_floatingip_v2\" \"floatip_1\" {",
      "}"
    ]
  },
  "huaweicloud-resource-networking_network_v2": {
    "description": "Defines networking_network_v2",
    "prefix": "tf-huaweicloud-resource-networking_network_v2",
    "body": [
      "resource \"huaweicloud_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"huaweicloud_networking_subnet_v2\" \"subnet_1\" {",
      "  name       = \"subnet_1\"",
      "  network_id = \"${huaweicloud_networking_network_v2.network_1.id}\"",
      "  cidr       = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "}",
      "",
      "resource \"huaweicloud_compute_secgroup_v2\" \"secgroup_1\" {",
      "  name        = \"secgroup_1\"",
      "  description = \"a security group\"",
      "",
      "  rule {",
      "    from_port   = 22",
      "    to_port     = 22",
      "    ip_protocol = \"tcp\"",
      "    cidr        = \"0.0.0.0/0\"",
      "  }",
      "}",
      "",
      "resource \"huaweicloud_networking_port_v2\" \"port_1\" {",
      "  name               = \"port_1\"",
      "  network_id         = \"${huaweicloud_networking_network_v2.network_1.id}\"",
      "  admin_state_up     = \"true\"",
      "  security_group_ids = [\"${huaweicloud_compute_secgroup_v2.secgroup_1.id}\"]",
      "",
      "  fixed_ip {",
      "    \"subnet_id\"  = \"${huaweicloud_networking_subnet_v2.subnet_1.id}\"",
      "    \"ip_address\" = \"192.168.199.10\"",
      "  }",
      "}",
      "",
      "resource \"huaweicloud_compute_instance_v2\" \"instance_1\" {",
      "  name            = \"instance_1\"",
      "  security_groups = [\"${huaweicloud_compute_secgroup_v2.secgroup_1.name}\"]",
      "",
      "  network {",
      "    port = \"${huaweicloud_networking_port_v2.port_1.id}\"",
      "  }",
      "}"
    ]
  },
  "huaweicloud-resource-networking_port_v2": {
    "description": "Defines networking_port_v2",
    "prefix": "tf-huaweicloud-resource-networking_port_v2",
    "body": [
      "resource \"huaweicloud_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"huaweicloud_networking_port_v2\" \"port_1\" {",
      "  name           = \"port_1\"",
      "  network_id     = \"${huaweicloud_networking_network_v2.network_1.id}\"",
      "  admin_state_up = \"true\"",
      "}"
    ]
  },
  "huaweicloud-resource-networking_router_interface_v2": {
    "description": "Defines networking_router_interface_v2",
    "prefix": "tf-huaweicloud-resource-networking_router_interface_v2",
    "body": [
      "resource \"huaweicloud_networking_network_v2\" \"network_1\" {",
      "  name           = \"tf_test_network\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"huaweicloud_networking_subnet_v2\" \"subnet_1\" {",
      "  network_id = \"${huaweicloud_networking_network_v2.network_1.id}\"",
      "  cidr       = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "}",
      "",
      "resource \"huaweicloud_networking_router_v2\" \"router_1\" {",
      "  name                = \"my_router\"",
      "  external_network_id = \"f67f0d72-0ddf-11e4-9d95-e1f29f417e2f\"",
      "}",
      "",
      "resource \"huaweicloud_networking_router_interface_v2\" \"router_interface_1\" {",
      "  router_id = \"${huaweicloud_networking_router_v2.router_1.id}\"",
      "  subnet_id = \"${huaweicloud_networking_subnet_v2.subnet_1.id}\"",
      "}"
    ]
  },
  "huaweicloud-resource-networking_router_route_v2": {
    "description": "Defines networking_router_route_v2",
    "prefix": "tf-huaweicloud-resource-networking_router_route_v2",
    "body": [
      "resource \"huaweicloud_networking_router_v2\" \"router_1\" {",
      "  name           = \"router_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"huaweicloud_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"huaweicloud_networking_subnet_v2\" \"subnet_1\" {",
      "  network_id = \"${huaweicloud_networking_network_v2.network_1.id}\"",
      "  cidr       = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "}",
      "",
      "resource \"huaweicloud_networking_router_interface_v2\" \"int_1\" {",
      "  router_id = \"${huaweicloud_networking_router_v2.router_1.id}\"",
      "  subnet_id = \"${huaweicloud_networking_subnet_v2.subnet_1.id}\"",
      "}",
      "",
      "resource \"huaweicloud_networking_router_route_v2\" \"router_route_1\" {",
      "  depends_on       = [\"huaweicloud_networking_router_interface_v2.int_1\"]",
      "  router_id        = \"${huaweicloud_networking_router_v2.router_1.id}\"",
      "  destination_cidr = \"10.0.1.0/24\"",
      "  next_hop         = \"192.168.199.254\"",
      "}"
    ]
  },
  "huaweicloud-resource-networking_router_v2": {
    "description": "Defines networking_router_v2",
    "prefix": "tf-huaweicloud-resource-networking_router_v2",
    "body": [
      "resource \"huaweicloud_networking_router_v2\" \"router_1\" {",
      "  name                = \"my_router\"",
      "  admin_state_up      = true",
      "  external_network_id = \"f67f0d72-0ddf-11e4-9d95-e1f29f417e2f\"",
      "}"
    ]
  },
  "huaweicloud-resource-networking_secgroup_rule_v2": {
    "description": "Defines networking_secgroup_rule_v2",
    "prefix": "tf-huaweicloud-resource-networking_secgroup_rule_v2",
    "body": [
      "resource \"huaweicloud_networking_secgroup_v2\" \"secgroup_1\" {",
      "  name        = \"secgroup_1\"",
      "  description = \"My neutron security group\"",
      "}",
      "",
      "resource \"huaweicloud_networking_secgroup_rule_v2\" \"secgroup_rule_1\" {",
      "  direction         = \"ingress\"",
      "  ethertype         = \"IPv4\"",
      "  protocol          = \"tcp\"",
      "  port_range_min    = 22",
      "  port_range_max    = 22",
      "  remote_ip_prefix  = \"0.0.0.0/0\"",
      "  security_group_id = \"${huaweicloud_networking_secgroup_v2.secgroup_1.id}\"",
      "}"
    ]
  },
  "huaweicloud-resource-networking_secgroup_v2": {
    "description": "Defines networking_secgroup_v2",
    "prefix": "tf-huaweicloud-resource-networking_secgroup_v2",
    "body": [
      "resource \"huaweicloud_networking_secgroup_v2\" \"secgroup_1\" {",
      "  name        = \"secgroup_1\"",
      "  description = \"My neutron security group\"",
      "}"
    ]
  },
  "huaweicloud-resource-networking_subnet_v2": {
    "description": "Defines networking_subnet_v2",
    "prefix": "tf-huaweicloud-resource-networking_subnet_v2",
    "body": [
      "resource \"huaweicloud_networking_network_v2\" \"network_1\" {",
      "  name           = \"tf_test_network\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"huaweicloud_networking_subnet_v2\" \"subnet_1\" {",
      "  network_id = \"${huaweicloud_networking_network_v2.network_1.id}\"",
      "  cidr       = \"192.168.199.0/24\"",
      "}"
    ]
  },
  "huaweicloud-resource-rds_instance_v1": {
    "description": "Defines rds_instance_v1",
    "prefix": "tf-huaweicloud-resource-rds_instance_v1",
    "body": [
      "data \"huaweicloud_rds_flavors_v1\" \"flavor\" {",
      "  region            = \"eu-de\"",
      "  datastore_name    = \"PostgreSQL\"",
      "  datastore_version = \"9.5.5\"",
      "  speccode          = \"rds.pg.s1.large\"",
      "}",
      "",
      "resource \"huaweicloud_compute_secgroup_v2\" \"secgrp_rds\" {",
      "  name        = \"secgrp-rds-instance\"",
      "  description = \"Rds Security Group\"",
      "}",
      "",
      "resource \"huaweicloud_rds_instance_v1\" \"instance\" {",
      "  name = \"rds-instance\"",
      "  datastore {",
      "    type    = \"PostgreSQL\"",
      "    version = \"9.5.5\"",
      "  }",
      "  flavorref = \"${data.huaweicloud_rds_flavors_v1.flavor.id}\"",
      "  volume {",
      "    type = \"COMMON\"",
      "    size = 200",
      "  }",
      "  region           = \"eu-de\"",
      "  availabilityzone = \"eu-de-01\"",
      "  vpc              = \"c1095fe7-03df-4205-ad2d-6f4c181d436e\"",
      "  nics {",
      "    subnetid = \"b65f8d25-c533-47e2-8601-cfaa265a3e3e\"",
      "  }",
      "  securitygroup {",
      "    id = \"${huaweicloud_compute_secgroup_v2.secgrp_rds.id}\"",
      "  }",
      "  dbport = \"8635\"",
      "  backupstrategy {",
      "    starttime = \"04:00:00\"",
      "    keepdays  = 4",
      "  }",
      "  dbrtpd = \"Huangwei!120521\"",
      "  ha {",
      "    enable          = true",
      "    replicationmode = \"async\"",
      "  }",
      "  depends_on = [\"huaweicloud_compute_secgroup_v2.secgrp_rds\"]",
      "}"
    ]
  },
  "huaweicloud-resource-rts_software_config_v1": {
    "description": "Defines rts_software_config_v1",
    "prefix": "tf-huaweicloud-resource-rts_software_config_v1",
    "body": [
      "variable \"config_name\" {}",
      "",
      "resource \"huaweicloud_rts_software_config_v1\" \"myconfig\" {",
      "  name = \"${var.config_name}\"",
      "}"
    ]
  },
  "huaweicloud-resource-rts_stack_v1": {
    "description": "Defines rts_stack_v1",
    "prefix": "tf-huaweicloud-resource-rts_stack_v1",
    "body": [
      " variable \"name\" { }",
      " variable \"network_id\" { }",
      " variable \"instance_type\" { }",
      "variable \"image_id\" { }",
      "  ",
      "resource \"huaweicloud_rts_stack_v1\" \"stack\" {",
      "  name = \"${var.name}\"",
      "    disable_rollback = true",
      "    timeout_mins=60",
      "    parameters {",
      "      \"network_id\" = \"${var.network_id}\"",
      "      \"instance_type\" = \"${var.instance_type}\"",
      "      \"image_id\" = \"${var.image_id}\"",
      "    }",
      "    template_body = <<STACK",
      "    {",
      "      \"heat_template_version\": \"2016-04-08\",",
      "      \"description\": \"Simple template to deploy\",",
      "      \"parameters\": {",
      "          \"image_id\": {",
      "              \"type\": \"string\",",
      "              \"description\": \"Image to be used for compute instance\",",
      "              \"label\": \"Image ID\"",
      "          },",
      "          \"network_id\": {",
      "              \"type\": \"string\",",
      "              \"description\": \"The Network to be used\",",
      "              \"label\": \"Network UUID\"",
      "          },",
      "          \"instance_type\": {",
      "              \"type\": \"string\",",
      "              \"description\": \"Type of instance (Flavor) to be used\",",
      "              \"label\": \"Instance Type\"",
      "          }",
      "      },",
      "      \"resources\": {",
      "          \"my_instance\": {",
      "              \"type\": \"OS::Nova::Server\",",
      "              \"properties\": {",
      "                  \"image\": {",
      "                      \"get_param\": \"image_id\"",
      "                  },",
      "                  \"flavor\": {",
      "                      \"get_param\": \"instance_type\"",
      "                  },",
      "                  \"networks\": [{",
      "                      \"network\": {",
      "                          \"get_param\": \"network_id\"",
      "                      }",
      "                  }]",
      "              }",
      "          }",
      "      },",
      "      \"outputs\":  {",
      "        \"InstanceIP\":{",
      "          \"description\": \"Instance IP\",",
      "          \"value\": {  \"get_attr\": [\"my_instance\", \"first_address\"]  }",
      "        }",
      "      }",
      "  }",
      "  STACK",
      "}"
    ]
  },
  "huaweicloud-resource-s3_bucket": {
    "description": "Defines s3_bucket",
    "prefix": "tf-huaweicloud-resource-s3_bucket",
    "body": [
      "resource \"huaweicloud_s3_bucket\" \"b\" {",
      "  bucket = \"my-tf-test-bucket\"",
      "  acl    = \"private\"",
      "}"
    ]
  },
  "huaweicloud-resource-s3_bucket_object": {
    "description": "Defines s3_bucket_object",
    "prefix": "tf-huaweicloud-resource-s3_bucket_object",
    "body": [
      "resource \"huaweicloud_s3_bucket_object\" \"object\" {",
      "  bucket = \"your_bucket_name\"",
      "  key    = \"new_object_key\"",
      "  source = \"path/to/file\"",
      "  etag   = \"${md5(file(\"path/to/file\"))}\"",
      "}"
    ]
  },
  "huaweicloud-resource-s3_bucket_policy": {
    "description": "Defines s3_bucket_policy",
    "prefix": "tf-huaweicloud-resource-s3_bucket_policy",
    "body": [
      "resource \"huaweicloud_s3_bucket\" \"b\" {",
      "  bucket = \"my_tf_test_bucket\"",
      "}",
      "",
      "resource \"huaweicloud_s3_bucket_policy\" \"b\" {",
      "  bucket = \"${huaweicloud_s3_bucket.b.id}\"",
      "  policy = <<POLICY",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Id\": \"MYBUCKETPOLICY\",",
      "  \"Statement\": [",
      "    {",
      "      \"Sid\": \"IPAllow\",",
      "      \"Effect\": \"Deny\",",
      "      \"Principal\": \"*\",",
      "      \"Action\": \"s3:*\",",
      "      \"Resource\": \"arn:aws:s3:::my_tf_test_bucket/*\",",
      "      \"Condition\": {",
      "         \"IpAddress\": {\"aws:SourceIp\": \"8.8.8.8/32\"}",
      "      } ",
      "    } ",
      "  ]",
      "}",
      "POLICY",
      "}"
    ]
  },
  "huaweicloud-resource-sfs_file_system_v2": {
    "description": "Defines sfs_file_system_v2",
    "prefix": "tf-huaweicloud-resource-sfs_file_system_v2",
    "body": [
      "variable \"share_name\" {}",
      "",
      "variable \"share_description\" {}",
      "",
      "variable \"vpc_id\" {}",
      "",
      "resource \"huaweicloud_sfs_file_system_v2\" \"sfs1\" {",
      "  size         = 50",
      "  name         = \"${var.share_name}\"",
      "  access_to    = \"${var.vpc_id}\"",
      "  access_level = \"rw\"",
      "  description  = \"${var.share_description}\"",
      "  metadata = {",
      "    \"type\" = \"nfs\"",
      "  }",
      "}"
    ]
  },
  "huaweicloud-resource-smn_subscription_v2": {
    "description": "Defines smn_subscription_v2",
    "prefix": "tf-huaweicloud-resource-smn_subscription_v2",
    "body": [
      "resource \"huaweicloud_smn_topic_v2\" \"topic_1\" {",
      "  name         = \"topic_1\"",
      "  display_name = \"The display name of topic_1\"",
      "}",
      "",
      "resource \"huaweicloud_smn_subscription_v2\" \"subscription_1\" {",
      "  topic_urn = \"${huaweicloud_smn_topic_v2.topic_1.id}\"",
      "  endpoint  = \"mailtest@gmail.com\"",
      "  protocol  = \"email\"",
      "  remark    = \"O&M\"",
      "}",
      "",
      "resource \"huaweicloud_smn_subscription_v2\" \"subscription_2\" {",
      "  topic_urn = \"${huaweicloud_smn_topic_v2.topic_1.id}\"",
      "  endpoint  = \"13600000000\"",
      "  protocol  = \"sms\"",
      "  remark    = \"O&M\"",
      "}"
    ]
  },
  "huaweicloud-resource-smn_topic_v2": {
    "description": "Defines smn_topic_v2",
    "prefix": "tf-huaweicloud-resource-smn_topic_v2",
    "body": [
      "resource \"huaweicloud_smn_topic_v2\" \"topic_1\" {",
      "  name         = \"topic_1\"",
      "  display_name = \"The display name of topic_1\"",
      "}"
    ]
  },
  "huaweicloud-resource-vbs_backup_policy_v2": {
    "description": "Defines vbs_backup_policy_v2",
    "prefix": "tf-huaweicloud-resource-vbs_backup_policy_v2",
    "body": [
      "resource \"huaweicloud_vbs_backup_policy_v2\" \"vbs\" {",
      "  name                = \"policy_002\"",
      "  start_time          = \"12:00\"",
      "  status              = \"ON\"",
      "  retain_first_backup = \"N\"",
      "  rentention_num      = 2",
      "  frequency           = 1",
      "  tags = [",
      "    {",
      "      key   = \"k1\"",
      "      value = \"v1\"",
      "  }]",
      "}"
    ]
  },
  "huaweicloud-resource-vbs_backup_v2": {
    "description": "Defines vbs_backup_v2",
    "prefix": "tf-huaweicloud-resource-vbs_backup_v2",
    "body": [
      "variable \"backup_name\" {}",
      "",
      "variable \"volume_id\" {}",
      "",
      "resource \"huaweicloud_vbs_backup_v2\" \"mybackup\" {",
      "  volume_id = \"${var.volume_id}\"",
      "  name      = \"${var.backup_name}\"",
      "}"
    ]
  },
  "huaweicloud-resource-vpc_eip_v1": {
    "description": "Defines vpc_eip_v1",
    "prefix": "tf-huaweicloud-resource-vpc_eip_v1",
    "body": [
      "resource \"huaweicloud_vpc_eip_v1\" \"eip_1\" {",
      "  publicip {",
      "    type = \"5_bgp\"",
      "  }",
      "  bandwidth {",
      "    name        = \"test\"",
      "    size        = 8",
      "    share_type  = \"PER\"",
      "    charge_mode = \"traffic\"",
      "  }",
      "}"
    ]
  },
  "huaweicloud-resource-vpc_peering_accepter_v2": {
    "description": "Defines vpc_peering_accepter_v2",
    "prefix": "tf-huaweicloud-resource-vpc_peering_accepter_v2",
    "body": [
      " provider \"huaweicloud\"  {",
      "    alias = \"main\"",
      "    user_name   = \"${var.username}\"",
      "    domain_name = \"${var.domain_name}\"",
      "    password    = \"${var.password}\"",
      "    auth_url    = \"${var.auth_url}\"",
      "    region      = \"${var.region}\"",
      "    tenant_id   = \"${var.tenant_id}\"",
      "}",
      "",
      "provider \"huaweicloud\"  {",
      "    alias = \"peer\"",
      "    user_name = \"${var.peer_username}\"",
      "    domain_name = \"${var.peer_domain_name}\"",
      "    password    = \"${var.peer_password}\"",
      "    auth_url    = \"${var.peer_auth_url}\"",
      "    region      = \"${var.peer_region}\"",
      "    tenant_id   = \"${var.peer_tenant_id}\"",
      "}",
      "",
      "resource \"huaweicloud_vpc_v1\" \"vpc_main\" {",
      "    provider = \"huaweicloud.main\"",
      "    name = \"${var.vpc_name}\"",
      "    cidr = \"${var.vpc_cidr}\"",
      "}",
      "",
      "resource \"huaweicloud_vpc_v1\" \"vpc_peer\" {",
      "    provider = \"huaweicloud.peer\"",
      "    name = \"${var.peer_vpc_name}\"",
      "    cidr = \"${var.peer_vpc_cidr}\"",
      "}",
      "",
      "# Requester's side of the connection.",
      "resource \"huaweicloud_vpc_peering_connection_v2\" \"peering\" {",
      "    provider = \"huaweicloud.main\"",
      "    name = \"${var.peer_name}\"",
      "    vpc_id = \"${huaweicloud_vpc_v1.vpc_main.id}\"",
      "    peer_vpc_id = \"${huaweicloud_vpc_v1.vpc_peer.id}\"",
      "    peer_tenant_id =  \"${var.tenant_id}\"",
      "}",
      "",
      "# Accepter's side of the connection.",
      "resource \"huaweicloud_vpc_peering_connection_accepter_v2\" \"peer\" {",
      "    provider = \"huaweicloud.peer\"",
      "    vpc_peering_connection_id = \"${huaweicloud_vpc_peering_connection_v2.peering.id}\"",
      "    accept = true",
      "  ",
      "}"
    ]
  },
  "huaweicloud-resource-vpc_peering_v2": {
    "description": "Defines vpc_peering_v2",
    "prefix": "tf-huaweicloud-resource-vpc_peering_v2",
    "body": [
      "resource \"huaweicloud_vpc_peering_connection_v2\" \"peering\" {",
      "  name = \"${var.peer_conn_name}\"",
      "  vpc_id = \"${var.vpc_id}\"",
      "  peer_vpc_id = \"${var.accepter_vpc_id}\"",
      "}"
    ]
  },
  "huaweicloud-resource-vpc_route_v2": {
    "description": "Defines vpc_route_v2",
    "prefix": "tf-huaweicloud-resource-vpc_route_v2",
    "body": [
      "#XXX empty snippet",
      ""
    ]
  },
  "huaweicloud-resource-vpc_subnet_v1": {
    "description": "Defines vpc_subnet_v1",
    "prefix": "tf-huaweicloud-resource-vpc_subnet_v1",
    "body": [
      "resource \"huaweicloud_vpc_v1\" \"vpc_v1\" {",
      "  name = \"${var.vpc_name}\"",
      "  cidr = \"${var.vpc_cidr}\"",
      "}",
      "",
      "",
      "resource \"huaweicloud_vpc_subnet_v1\" \"subnet_v1\" {",
      "  name = \"${var.subnet_name}\"",
      "  cidr = \"${var.subnet_cidr}\"",
      "  gateway_ip = \"${var.subnet_gateway_ip}\"",
      "  vpc_id = \"${huaweicloud_vpc_v1.vpc_v1.id}\"",
      "}"
    ]
  },
  "huaweicloud-resource-vpc_v1": {
    "description": "Defines vpc_v1",
    "prefix": "tf-huaweicloud-resource-vpc_v1",
    "body": [
      "",
      "variable \"vpc_name\" {",
      "  default = \"huaweicloud_vpc\"",
      "}",
      "",
      "variable \"vpc_cidr\" {",
      "  default = \"192.168.0.0/16\"",
      "}",
      "",
      "resource \"huaweicloud_vpc_v1\" \"vpc_v1\" {",
      "  name = \"${var.vpc_name}\"",
      "  cidr = \"${var.vpc_cidr}\"",
      "}",
      ""
    ]
  },
  "huaweicloud-resource-vpnaas_endpoint_group_v2": {
    "description": "Defines vpnaas_endpoint_group_v2",
    "prefix": "tf-huaweicloud-resource-vpnaas_endpoint_group_v2",
    "body": [
      "resource \"huaweicloud_vpnaas_endpoint_group_v2\" \"group_1\" {",
      "  name = \"Group 1\"",
      "  type = \"cidr\"",
      "  endpoints = [\"10.2.0.0/24\",",
      "        \"10.3.0.0/24\",]",
      "}"
    ]
  },
  "huaweicloud-resource-vpnaas_ike_policy_v2": {
    "description": "Defines vpnaas_ike_policy_v2",
    "prefix": "tf-huaweicloud-resource-vpnaas_ike_policy_v2",
    "body": [
      "resource \"huaweicloud_vpnaas_ike_policy_v2\" \"policy_1\" {",
      "  name = \"my_policy\"",
      "}"
    ]
  },
  "huaweicloud-resource-vpnaas_ipsec_policy_v2": {
    "description": "Defines vpnaas_ipsec_policy_v2",
    "prefix": "tf-huaweicloud-resource-vpnaas_ipsec_policy_v2",
    "body": [
      "resource \"huaweicloud_vpnaas_ipsec_policy_v2\" \"policy_1\" {",
      "  name = \"my_policy\"",
      "}"
    ]
  },
  "huaweicloud-resource-vpnaas_service_v2": {
    "description": "Defines vpnaas_service_v2",
    "prefix": "tf-huaweicloud-resource-vpnaas_service_v2",
    "body": [
      "resource \"huaweicloud_vpnaas_service_v2\" \"service_1\" {",
      "  name = \"my_service\"",
      "  router_id = \"14a75700-fc03-4602-9294-26ee44f366b3\"",
      "  admin_state_up = \"true\"",
      "}"
    ]
  },
  "huaweicloud-resource-vpnaas_site_connection_v2": {
    "description": "Defines vpnaas_site_connection_v2",
    "prefix": "tf-huaweicloud-resource-vpnaas_site_connection_v2",
    "body": [
      "resource \"huaweicloud_vpnaas_site_connection_v2\" \"conn_1\" {",
      "\tname = \"connection_1\"",
      "\tikepolicy_id = \"${huaweicloud_vpnaas_ike_policy_v2.policy_2.id}\"",
      "\tipsecpolicy_id = \"${huaweicloud_vpnaas_ipsec_policy_v2.policy_1.id}\"",
      "\tvpnservice_id = \"${huaweicloud_vpnaas_service_v2.service_1.id}\"",
      "\tpsk = \"secret\"",
      "\tpeer_address = \"192.168.10.1\"",
      "\tlocal_ep_group_id = \"${huaweicloud_vpnaas_endpoint_group_v2.group_2.id}\"",
      "\tpeer_ep_group_id = \"${huaweicloud_vpnaas_endpoint_group_v2.group_1.id}\"",
      "}"
    ]
  },
  "icinga2-resource-checkcommands": {
    "description": "Defines checkcommands",
    "prefix": "tf-icinga2-resource-checkcommands",
    "body": [
      "# Configure a new checkcommand on an Icinga2 Server, that can be used to monitor hosts and/or services",
      "provider \"icinga2\" {",
      "  api_url = \"https://192.168.33.5:5665/v1\"",
      "}",
      "",
      "resource \"icinga2_checkcommand\" \"apache_status\" {",
      "  name      = \"apache_status\"",
      "  templates = [\"apache-status\", \"plugin-check-command\", \"plugin-check-command\", \"ipv4-or-ipv6\"]",
      "  command   = \"/usr/lib64/nagios/plugins/check_apache_status.pl\"",
      "",
      "  arguments = {",
      "    \"-H\" = \"$apache_status_address$\"",
      "    \"-c\" = \"$apache_status_critical$\"",
      "    \"-p\" = \"$apache_status_port$\"",
      "  }",
      "}"
    ]
  },
  "icinga2-resource-host": {
    "description": "Defines host",
    "prefix": "tf-icinga2-resource-host",
    "body": [
      "# Configure a new host to be monitored by an Icinga2 Server",
      "provider \"icinga2\" {",
      "  api_url = \"https://192.168.33.5:5665/v1\"",
      "}",
      "",
      "resource \"icinga2_host\" \"host\" {",
      "  hostname      = \"terraform-host-1\"",
      "  address       = \"10.10.10.1\"",
      "  check_command = \"hostalive\"",
      "  templates     = [\"bp-host-web\"]",
      "",
      "  vars = {",
      "    os        = \"linux\"",
      "    osver     = \"1\"",
      "    allowance = \"none\"",
      "  }",
      "}"
    ]
  },
  "icinga2-resource-hostgroup": {
    "description": "Defines hostgroup",
    "prefix": "tf-icinga2-resource-hostgroup",
    "body": [
      "# Configure a new hostgroup to be monitored by an Icinga2 Server",
      "provider \"icinga2\" {",
      "  api_url = \"https://192.168.33.5:5665/v1\"",
      "}",
      "",
      "resource \"icinga2_hostgroup\" \"my-hostgroup\" {",
      "  name         = \"terraform-hostgroup-1\"",
      "  display_name = \"Terraform Test HostGroup\"",
      "}"
    ]
  },
  "icinga2-resource-notification": {
    "description": "Defines notification",
    "prefix": "tf-icinga2-resource-notification",
    "body": [
      "# Configure a new host notification",
      "",
      "provider \"icinga2\" {",
      "  api_url = \"https://192.168.33.5:5665/v1\"",
      "}",
      "",
      "resource \"icinga2_notification\" \"host-notification\" {",
      "  hostname = \"docker-icinga2\"",
      "  command  = \"mail-host-notification\"",
      "  users    = [\"user\"]",
      "}",
      ""
    ]
  },
  "icinga2-resource-service": {
    "description": "Defines service",
    "prefix": "tf-icinga2-resource-service",
    "body": [
      "# Configure a new service to be monitored by an Icinga2 Server",
      "provider \"icinga2\" {",
      "  api_url = \"https://192.168.33.5:5665/v1\"",
      "}",
      "",
      "resource \"icinga2_service\" \"my-service\" {",
      "  name          = \"ssh\"",
      "  hostname      = \"c1-mysql-1\"",
      "  check_command = \"ssh\"",
      "  vars = {",
      "    port        = \"22\"",
      "  }",
      "}"
    ]
  },
  "icinga2-resource-user": {
    "description": "Defines user",
    "prefix": "tf-icinga2-resource-user",
    "body": [
      "# Configure a new user",
      "",
      "provider \"icinga2\" {",
      "  api_url = \"https://192.168.33.5:5665/v1\"",
      "}",
      "",
      "resource \"icinga2_user\" \"terraform\" {",
      "  name  = \"terraform\"",
      "  email = \"terraform@dev.null\" ",
      "}"
    ]
  },
  "ignition-data-config": {
    "description": "Defines config",
    "prefix": "tf-ignition-data-config",
    "body": [
      "data \"ignition_config\" \"example\" {",
      "\tsystemd = [",
      "\t\t\"${data.ignition_systemd_unit.example.id}\",",
      "\t]",
      "}"
    ]
  },
  "ignition-data-directory": {
    "description": "Defines directory",
    "prefix": "tf-ignition-data-directory",
    "body": [
      "data \"ignition_directory\" \"folder\" {",
      "\tfilesystem = \"foo\"",
      "\tpath = \"/folder\"",
      "}"
    ]
  },
  "ignition-data-disk": {
    "description": "Defines disk",
    "prefix": "tf-ignition-data-disk",
    "body": [
      "data \"ignition_disk\" \"foo\" {",
      "\tdevice = \"/dev/sda\"",
      "\tpartition {",
      "\t\tstart = 2048",
      "\t\tsize = 196037632",
      "\t}",
      "}"
    ]
  },
  "ignition-data-file": {
    "description": "Defines file",
    "prefix": "tf-ignition-data-file",
    "body": [
      "data \"ignition_file\" \"hello\" {",
      "\tfilesystem = \"foo\"",
      "\tpath = \"/hello.txt\"",
      "\tcontent {",
      "\t\tcontent = \"Hello World!\"",
      "\t}",
      "}"
    ]
  },
  "ignition-data-filesystem": {
    "description": "Defines filesystem",
    "prefix": "tf-ignition-data-filesystem",
    "body": [
      "data \"ignition_filesystem\" \"foo\" {",
      "\tname = \"root\"",
      "\tmount {",
      "\t\tdevice = \"/dev/disk/by-label/ROOT\"",
      "\t\tformat = \"xfs\"",
      "\t\tcreate = true",
      "\t\toptions = [\"-L\", \"ROOT\"]",
      "\t}",
      "}"
    ]
  },
  "ignition-data-group": {
    "description": "Defines group",
    "prefix": "tf-ignition-data-group",
    "body": [
      "data \"ignition_group\" \"foo\" {",
      "\tname = \"foo\"",
      "}"
    ]
  },
  "ignition-data-link": {
    "description": "Defines link",
    "prefix": "tf-ignition-data-link",
    "body": [
      "data \"ignition_link\" \"symlink\" {",
      "\tfilesystem = \"foo\"",
      "\tpath = \"/symlink\"",
      "    target = \"/foo\"",
      "}"
    ]
  },
  "ignition-data-networkd_unit": {
    "description": "Defines networkd_unit",
    "prefix": "tf-ignition-data-networkd_unit",
    "body": [
      "data \"ignition_networkd_unit\" \"example\" {",
      "\tname = \"00-eth0.network\"",
      "\tcontent = \"[Match]\\nName=eth0\\n\\n[Network]\\nAddress=10.0.1.7\"",
      "}"
    ]
  },
  "ignition-data-raid": {
    "description": "Defines raid",
    "prefix": "tf-ignition-data-raid",
    "body": [
      "data \"ignition_raid\" \"md\" {",
      "\tname = \"data\"",
      "\tlevel = \"stripe\"",
      "\tdevices = [",
      "      \t\"/dev/disk/by-partlabel/raid.1.1\",",
      "        \"/dev/disk/by-partlabel/raid.1.2\"",
      "\t]",
      "}",
      "",
      "data \"ignition_disk\" \"disk1\" {",
      "\tdevice = \"/dev/sdb\"",
      "\twipe_table = true",
      "\tpartition {",
      "\t\tlabel = \"raid.1.1\"",
      "        number = 1",
      "        size = 20480",
      "        start = 0",
      "\t}",
      "}",
      "",
      "data \"ignition_disk\" \"disk2\" {",
      "\tdevice = \"/dev/sdc\"",
      "\twipe_table = true",
      "\tpartition {",
      "\t\tlabel = \"raid.1.2\"",
      "        number = 1",
      "        size = 20480",
      "        start = 0",
      "\t}",
      "}"
    ]
  },
  "ignition-data-systemd_unit": {
    "description": "Defines systemd_unit",
    "prefix": "tf-ignition-data-systemd_unit",
    "body": [
      "data \"ignition_systemd_unit\" \"example\" {",
      "\tname = \"example.service\"",
      "\tcontent = \"[Service]\\nType=oneshot\\nExecStart=/usr/bin/echo Hello World\\n\\n[Install]\\nWantedBy=multi-user.target\"",
      "}"
    ]
  },
  "ignition-data-user": {
    "description": "Defines user",
    "prefix": "tf-ignition-data-user",
    "body": [
      "data \"ignition_user\" \"foo\" {",
      "\tname = \"foo\"",
      "\thome_dir = \"/home/foo/\"",
      "\tshell = \"/bin/bash\"",
      "}"
    ]
  },
  "influxdb-resource-continuous_query": {
    "description": "Defines continuous_query",
    "prefix": "tf-influxdb-resource-continuous_query",
    "body": [
      "resource \"influxdb_database\" \"test\" {",
      "    name = \"terraform-test\"",
      "}",
      "",
      "resource \"influxdb_continuous_query\" \"minnie\" {",
      "    name = \"minnie\"",
      "    database = \"${influxdb_database.test.name}\"",
      "    query = \"SELECT min(mouse) INTO min_mouse FROM zoo GROUP BY time(30m)\"",
      "}",
      ""
    ]
  },
  "influxdb-resource-database": {
    "description": "Defines database",
    "prefix": "tf-influxdb-resource-database",
    "body": [
      "resource \"influxdb_database\" \"metrics\" {",
      "    name = \"awesome_app\"",
      "}",
      "",
      "resource \"influxdb_database\" \"metrics_aggregation\" {",
      "  name = \"testdb11\"",
      "  retention_policies = [",
      "    {",
      "      name = \"52weeks\",",
      "      duration = \"52w\"",
      "      default = \"true\"",
      "    },",
      "  ]",
      "}"
    ]
  },
  "influxdb-resource-user": {
    "description": "Defines user",
    "prefix": "tf-influxdb-resource-user",
    "body": [
      "resource \"influxdb_database\" \"green\" {",
      "    name = \"terraform-green\"",
      "}",
      "",
      "resource \"influxdb_user\" \"paul\" {",
      "    name = \"paul\"",
      "    password = \"super-secret\"",
      "",
      "    grant {",
      "      database = \"${influxdb_database.green.name}\"",
      "      privilege = \"write\"",
      "    }",
      "}"
    ]
  },
  "kubernetes-data-secret": {
    "description": "Defines secret",
    "prefix": "tf-kubernetes-data-secret",
    "body": [
      "data \"kubernetes_secret\" \"example\" {",
      "  metadata {",
      "    name = \"basic-auth\"",
      "  }",
      "}"
    ]
  },
  "kubernetes-data-service": {
    "description": "Defines service",
    "prefix": "tf-kubernetes-data-service",
    "body": [
      "data \"kubernetes_service\" \"example\" {",
      "  metadata {",
      "    name = \"terraform-example\"",
      "  }",
      "}",
      "",
      "resource \"aws_route53_record\" \"example\" {",
      "  zone_id = \"${data.aws_route53_zone.k8.zone_id}\"",
      "  name    = \"example\"",
      "  type    = \"CNAME\"",
      "  ttl     = \"300\"",
      "  records = [\"${data.kubernetes_service.example.load_balancer_ingress.0.hostname}\"]",
      "}"
    ]
  },
  "kubernetes-data-storage_class": {
    "description": "Defines storage_class",
    "prefix": "tf-kubernetes-data-storage_class",
    "body": [
      "data \"kubernetes_storage_class\" \"example\" {",
      "  metadata {",
      "    name = \"terraform-example\"",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-cluster_role": {
    "description": "Defines cluster_role",
    "prefix": "tf-kubernetes-resource-cluster_role",
    "body": [
      "resource \"kubernetes_cluster_role\" \"example\" {",
      "  metadata {",
      "    name = \"terraform-example\"",
      "  }",
      "",
      "  rule {",
      "    api_groups = [\"\"]",
      "    resources  = [\"namespaces\", \"pods\"]",
      "    verbs      = [\"get\", \"list\", \"watch\"]",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-cluster_role_binding": {
    "description": "Defines cluster_role_binding",
    "prefix": "tf-kubernetes-resource-cluster_role_binding",
    "body": [
      "resource \"kubernetes_cluster_role_binding\" \"example\" {",
      "  metadata {",
      "    name = \"terraform-example\"",
      "  }",
      "  role_ref {",
      "    api_group = \"rbac.authorization.k8s.io\"",
      "    kind      = \"ClusterRole\"",
      "    name      = \"cluster-admin\"",
      "  }",
      "  subject {",
      "    kind      = \"User\"",
      "    name      = \"admin\"",
      "    api_group = \"rbac.authorization.k8s.io\"",
      "  }",
      "  subject {",
      "    kind      = \"ServiceAccount\"",
      "    name      = \"default\"",
      "    namespace = \"kube-system\"",
      "  }",
      "  subject {",
      "    kind      = \"Group\"",
      "    name      = \"system:masters\"",
      "    api_group = \"rbac.authorization.k8s.io\"",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-config_map": {
    "description": "Defines config_map",
    "prefix": "tf-kubernetes-resource-config_map",
    "body": [
      "resource \"kubernetes_config_map\" \"example\" {",
      "  metadata {",
      "    name = \"my-config\"",
      "  }",
      "",
      "  data = {",
      "    api_host             = \"myhost:443\"",
      "    db_host              = \"dbhost:5432\"",
      "    \"my_config_file.yml\" = \"${file(\"${path.module}/my_config_file.yml\")}\"",
      "  }",
      "",
      "  binary_data = {",
      "    \"my_payload.bin\" = \"${filebase64(\"${path.module}/my_payload.bin\")}\"",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-cron_job": {
    "description": "Defines cron_job",
    "prefix": "tf-kubernetes-resource-cron_job",
    "body": [
      "resource \"kubernetes_cron_job\" \"demo\" {",
      "  metadata {",
      "    name = \"demo\"",
      "  }",
      "  spec {",
      "    concurrency_policy            = \"Replace\"",
      "    failed_jobs_history_limit     = 5",
      "    schedule                      = \"1 0 * * *\"",
      "    starting_deadline_seconds     = 10",
      "    successful_jobs_history_limit = 10",
      "    suspend                       = true",
      "    job_template {",
      "      metadata {}",
      "      spec {",
      "        backoff_limit = 2",
      "        template {",
      "          metadata {}",
      "          spec {",
      "            container {",
      "              name    = \"hello\"",
      "              image   = \"busybox\"",
      "              command = [\"/bin/sh\", \"-c\", \"date; echo Hello from the Kubernetes cluster\"]",
      "            }",
      "            restart_policy = \"OnFailure\"",
      "          }",
      "        }",
      "      }",
      "    }",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-daemonset": {
    "description": "Defines daemonset",
    "prefix": "tf-kubernetes-resource-daemonset",
    "body": [
      "resource \"kubernetes_daemonset\" \"example\" {",
      "  metadata {",
      "    name      = \"terraform-example\"",
      "    namespace = \"something\"",
      "    labels = {",
      "      test = \"MyExampleApp\"",
      "    }",
      "  }",
      "",
      "  spec {",
      "    selector {",
      "      match_labels = {",
      "        test = \"MyExampleApp\"",
      "      }",
      "    }",
      "",
      "    template {",
      "      metadata {",
      "        labels = {",
      "          test = \"MyExampleApp\"",
      "        }",
      "      }",
      "",
      "      spec {",
      "        container {",
      "          image = \"nginx:1.7.8\"",
      "          name  = \"example\"",
      "",
      "          resources {",
      "            limits {",
      "              cpu    = \"0.5\"",
      "              memory = \"512Mi\"",
      "            }",
      "            requests {",
      "              cpu    = \"250m\"",
      "              memory = \"50Mi\"",
      "            }",
      "          }",
      "",
      "          liveness_probe {",
      "            http_get {",
      "              path = \"/nginx_status\"",
      "              port = 80",
      "",
      "              http_header {",
      "                name  = \"X-Custom-Header\"",
      "                value = \"Awesome\"",
      "              }",
      "            }",
      "",
      "            initial_delay_seconds = 3",
      "            period_seconds        = 3",
      "          }",
      "",
      "        }",
      "      }",
      "    }",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-deployment": {
    "description": "Defines deployment",
    "prefix": "tf-kubernetes-resource-deployment",
    "body": [
      "resource \"kubernetes_deployment\" \"example\" {",
      "  metadata {",
      "    name = \"terraform-example\"",
      "    labels = {",
      "      test = \"MyExampleApp\"",
      "    }",
      "  }",
      "",
      "  spec {",
      "    replicas = 3",
      "",
      "    selector {",
      "      match_labels = {",
      "        test = \"MyExampleApp\"",
      "      }",
      "    }",
      "",
      "    template {",
      "      metadata {",
      "        labels = {",
      "          test = \"MyExampleApp\"",
      "        }",
      "      }",
      "",
      "      spec {",
      "        container {",
      "          image = \"nginx:1.7.8\"",
      "          name  = \"example\"",
      "",
      "          resources {",
      "            limits {",
      "              cpu    = \"0.5\"",
      "              memory = \"512Mi\"",
      "            }",
      "            requests {",
      "              cpu    = \"250m\"",
      "              memory = \"50Mi\"",
      "            }",
      "          }",
      "",
      "          liveness_probe {",
      "            http_get {",
      "              path = \"/nginx_status\"",
      "              port = 80",
      "",
      "              http_header {",
      "                name  = \"X-Custom-Header\"",
      "                value = \"Awesome\"",
      "              }",
      "            }",
      "",
      "            initial_delay_seconds = 3",
      "            period_seconds        = 3",
      "          }",
      "        }",
      "      }",
      "    }",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-endpoints": {
    "description": "Defines endpoints",
    "prefix": "tf-kubernetes-resource-endpoints",
    "body": [
      "resource \"kubernetes_endpoints\" \"example\" {",
      "  metadata {",
      "    name = \"terraform-example\"",
      "  }",
      "",
      "  subset {",
      "    address {",
      "      ip = \"10.0.0.4\"",
      "    }",
      "",
      "    address {",
      "      ip = \"10.0.0.5\"",
      "    }",
      "",
      "    port {",
      "      name     = \"http\"",
      "      port     = 80",
      "      protocol = \"TCP\"",
      "    }",
      "",
      "    port {",
      "      name     = \"https\"",
      "      port     = 443",
      "      protocol = \"TCP\"",
      "    }",
      "  }",
      "",
      "  subset {",
      "    address {",
      "      ip = \"10.0.1.4\"",
      "    }",
      "",
      "    address {",
      "      ip = \"10.0.1.5\"",
      "    }",
      "",
      "    port {",
      "      name     = \"http\"",
      "      port     = 80",
      "      protocol = \"TCP\"",
      "    }",
      "",
      "    port {",
      "      name     = \"https\"",
      "      port     = 443",
      "      protocol = \"TCP\"",
      "    }",
      "  }",
      "}",
      "",
      "resource \"kubernetes_service\" \"example\" {",
      "  metadata {",
      "    name = \"${kubernetes_endpoints.example.metadata.0.name}\"",
      "  }",
      "",
      "  spec {",
      "    port {",
      "      port        = 8080",
      "      target_port = 80",
      "    }",
      "",
      "    port {",
      "      port        = 8443",
      "      target_port = 443",
      "    }",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-horizontal_pod_autoscaler": {
    "description": "Defines horizontal_pod_autoscaler",
    "prefix": "tf-kubernetes-resource-horizontal_pod_autoscaler",
    "body": [
      "resource \"kubernetes_horizontal_pod_autoscaler\" \"example\" {",
      "  metadata {",
      "    name = \"terraform-example\"",
      "  }",
      "  spec {",
      "    max_replicas = 10",
      "    min_replicas = 8",
      "    scale_target_ref {",
      "      kind = \"ReplicationController\"",
      "      name = \"MyApp\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-ingress": {
    "description": "Defines ingress",
    "prefix": "tf-kubernetes-resource-ingress",
    "body": [
      "resource \"kubernetes_ingress\" \"example_ingress\" {",
      "  metadata {",
      "    name = \"example-ingress\"",
      "  }",
      "",
      "  spec {",
      "    backend {",
      "      service_name = \"MyApp1\"",
      "      service_port = 8080",
      "    }",
      "",
      "    rule {",
      "      http {",
      "        path {",
      "          backend {",
      "            service_name = \"MyApp1\"",
      "            service_port = 8080",
      "          }",
      "",
      "          path = \"/app1/*\"",
      "        }",
      "",
      "        path {",
      "          backend {",
      "            service_name = \"MyApp2\"",
      "            service_port = 8080",
      "          }",
      "",
      "          path = \"/app2/*\"",
      "        }",
      "      }",
      "    }",
      "",
      "    tls {",
      "      secret_name = \"tls-secret\"",
      "    }",
      "  }",
      "}",
      "",
      "resource \"kubernetes_pod\" \"example\" {",
      "  metadata {",
      "    name = \"terraform-example\"",
      "    labels = {",
      "      app = \"MyApp1\"",
      "    }",
      "  }",
      "",
      "  spec {",
      "    container {",
      "      image = \"nginx:1.7.9\"",
      "      name  = \"example\"",
      "",
      "      port {",
      "        container_port = 8080",
      "      }",
      "    }",
      "  }",
      "}",
      "",
      "resource \"kubernetes_pod\" \"example2\" {",
      "  metadata {",
      "    name = \"terraform-example2\"",
      "    labels = {",
      "      app = \"MyApp2\"",
      "    }",
      "  }",
      "",
      "  spec {",
      "    container {",
      "      image = \"nginx:1.7.9\"",
      "      name  = \"example\"",
      "",
      "      port {",
      "        container_port = 8080",
      "      }",
      "    }",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-job": {
    "description": "Defines job",
    "prefix": "tf-kubernetes-resource-job",
    "body": [
      "resource \"kubernetes_job\" \"demo\" {",
      "  metadata {",
      "    name = \"demo\"",
      "  }",
      "  spec {",
      "    template {",
      "      metadata {}",
      "      spec {",
      "        container {",
      "          name    = \"pi\"",
      "          image   = \"perl\"",
      "          command = [\"perl\", \"-Mbignum=bpi\", \"-wle\", \"print bpi(2000)\"]",
      "        }",
      "        restart_policy = \"Never\"",
      "      }",
      "    }",
      "    backoff_limit = 4",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-limit_range": {
    "description": "Defines limit_range",
    "prefix": "tf-kubernetes-resource-limit_range",
    "body": [
      "resource \"kubernetes_limit_range\" \"example\" {",
      "  metadata {",
      "    name = \"terraform-example\"",
      "  }",
      "  spec {",
      "    limit {",
      "      type = \"Pod\"",
      "      max = {",
      "        cpu    = \"200m\"",
      "        memory = \"1024M\"",
      "      }",
      "    }",
      "    limit {",
      "      type = \"PersistentVolumeClaim\"",
      "      min = {",
      "        storage = \"24M\"",
      "      }",
      "    }",
      "    limit {",
      "      type = \"Container\"",
      "      default = {",
      "        cpu    = \"50m\"",
      "        memory = \"24M\"",
      "      }",
      "    }",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-namespace": {
    "description": "Defines namespace",
    "prefix": "tf-kubernetes-resource-namespace",
    "body": [
      "resource \"kubernetes_namespace\" \"example\" {",
      "  metadata {",
      "    annotations = {",
      "      name = \"example-annotation\"",
      "    }",
      "",
      "    labels = {",
      "      mylabel = \"label-value\"",
      "    }",
      "",
      "    name = \"terraform-example-namespace\"",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-network_policy": {
    "description": "Defines network_policy",
    "prefix": "tf-kubernetes-resource-network_policy",
    "body": [
      "resource \"kubernetes_network_policy\" \"example\" {",
      "  metadata {",
      "    name      = \"terraform-example-network-policy\"",
      "    namespace = \"default\"",
      "  }",
      "",
      "  spec {",
      "    pod_selector {",
      "      match_expressions {",
      "        key      = \"name\"",
      "        operator = \"In\"",
      "        values   = [\"webfront\", \"api\"]",
      "      }",
      "    }",
      "",
      "    ingress {",
      "      ports {",
      "        port     = \"http\"",
      "        protocol = \"TCP\"",
      "      }",
      "      ports {",
      "        port     = \"8125\"",
      "        protocol = \"UDP\"",
      "      }",
      "",
      "      from {",
      "        namespace_selector {",
      "          match_labels = {",
      "            name = \"default\"",
      "          }",
      "        }",
      "      }",
      "",
      "      from {",
      "        ip_block {",
      "          cidr = \"10.0.0.0/8\"",
      "          except = [",
      "            \"10.0.0.0/24\",",
      "            \"10.0.1.0/24\",",
      "          ]",
      "        }",
      "      }",
      "    }",
      "",
      "    egress {} # single empty rule to allow all egress traffic",
      "",
      "    policy_types = [\"Ingress\", \"Egress\"]",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-persistent_volume": {
    "description": "Defines persistent_volume",
    "prefix": "tf-kubernetes-resource-persistent_volume",
    "body": [
      "resource \"kubernetes_persistent_volume\" \"example\" {",
      "  metadata {",
      "    name = \"terraform-example\"",
      "  }",
      "  spec {",
      "    capacity = {",
      "      storage = \"2Gi\"",
      "    }",
      "    access_modes = [\"ReadWriteMany\"]",
      "    persistent_volume_source {",
      "      vsphere_volume {",
      "        volume_path = \"/absolute/path\"",
      "      }",
      "    }",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-persistent_volume_claim": {
    "description": "Defines persistent_volume_claim",
    "prefix": "tf-kubernetes-resource-persistent_volume_claim",
    "body": [
      "resource \"kubernetes_persistent_volume_claim\" \"example\" {",
      "  metadata {",
      "    name = \"exampleclaimname\"",
      "  }",
      "  spec {",
      "    access_modes = [\"ReadWriteMany\"]",
      "    resources {",
      "      requests = {",
      "        storage = \"5Gi\"",
      "      }",
      "    }",
      "    volume_name = \"${kubernetes_persistent_volume.example.metadata.0.name}\"",
      "  }",
      "}",
      "",
      "resource \"kubernetes_persistent_volume\" \"example\" {",
      "  metadata {",
      "    name = \"examplevolumename\"",
      "  }",
      "  spec {",
      "    capacity = {",
      "      storage = \"10Gi\"",
      "    }",
      "    access_modes = [\"ReadWriteMany\"]",
      "    persistent_volume_source {",
      "      gce_persistent_disk {",
      "        pd_name = \"test-123\"",
      "      }",
      "    }",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-pod": {
    "description": "Defines pod",
    "prefix": "tf-kubernetes-resource-pod",
    "body": [
      "resource \"kubernetes_pod\" \"test\" {",
      "  metadata {",
      "    name = \"terraform-example\"",
      "  }",
      "",
      "  spec {",
      "    container {",
      "      image = \"nginx:1.7.9\"",
      "      name  = \"example\"",
      "",
      "      env {",
      "        name  = \"environment\"",
      "        value = \"test\"",
      "      }",
      "",
      "      liveness_probe {",
      "        http_get {",
      "          path = \"/nginx_status\"",
      "          port = 80",
      "",
      "          http_header {",
      "            name  = \"X-Custom-Header\"",
      "            value = \"Awesome\"",
      "          }",
      "        }",
      "",
      "        initial_delay_seconds = 3",
      "        period_seconds        = 3",
      "      }",
      "    }",
      "",
      "    dns_config {",
      "      nameservers = [\"1.1.1.1\", \"8.8.8.8\", \"9.9.9.9\"]",
      "      searches    = [\"example.com\"]",
      "",
      "      option {",
      "        name  = \"ndots\"",
      "        value = 1",
      "      }",
      "",
      "      option {",
      "        name = \"use-vc\"",
      "      }",
      "    }",
      "",
      "    dns_policy = \"None\"",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-replication_controller": {
    "description": "Defines replication_controller",
    "prefix": "tf-kubernetes-resource-replication_controller",
    "body": [
      "resource \"kubernetes_replication_controller\" \"example\" {",
      "  metadata {",
      "    name = \"terraform-example\"",
      "    labels = {",
      "      test = \"MyExampleApp\"",
      "    }",
      "  }",
      "",
      "  spec {",
      "    selector = {",
      "      test = \"MyExampleApp\"",
      "    }",
      "    template {",
      "      metadata {",
      "        labels = {",
      "          test = \"MyExampleApp\"",
      "        }",
      "        annotations = {",
      "          \"key1\" = \"value1\"",
      "        }",
      "      }",
      "",
      "      spec {",
      "        container {",
      "          image = \"nginx:1.7.8\"",
      "          name  = \"example\"",
      "",
      "          liveness_probe {",
      "            http_get {",
      "              path = \"/nginx_status\"",
      "              port = 8080",
      "",
      "              http_header {",
      "                name  = \"X-Custom-Header\"",
      "                value = \"Awesome\"",
      "              }",
      "            }",
      "",
      "            initial_delay_seconds = 3",
      "            period_seconds        = 3",
      "          }",
      "",
      "          resources {",
      "            limits {",
      "              cpu    = \"0.5\"",
      "              memory = \"512Mi\"",
      "            }",
      "            requests {",
      "              cpu    = \"250m\"",
      "              memory = \"50Mi\"",
      "            }",
      "          }",
      "        }",
      "      }",
      "    }",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-resource_quota": {
    "description": "Defines resource_quota",
    "prefix": "tf-kubernetes-resource-resource_quota",
    "body": [
      "resource \"kubernetes_resource_quota\" \"example\" {",
      "  metadata {",
      "    name = \"terraform-example\"",
      "  }",
      "  spec {",
      "    hard = {",
      "      pods = 10",
      "    }",
      "    scopes = [\"BestEffort\"]",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-role": {
    "description": "Defines role",
    "prefix": "tf-kubernetes-resource-role",
    "body": [
      "resource \"kubernetes_role\" \"example\" {",
      "  metadata {",
      "    name = \"terraform-example\"",
      "    labels = {",
      "      test = \"MyRole\"",
      "    }",
      "  }",
      "",
      "  rule {",
      "    api_groups     = [\"\"]",
      "    resources      = [\"pods\"]",
      "    resource_names = [\"foo\"]",
      "    verbs          = [\"get\", \"list\", \"watch\"]",
      "  }",
      "  rule {",
      "    api_groups = [\"apps\"]",
      "    resources  = [\"deployments\"]",
      "    verbs      = [\"get\", \"list\"]",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-role_binding": {
    "description": "Defines role_binding",
    "prefix": "tf-kubernetes-resource-role_binding",
    "body": [
      "resource \"kubernetes_role_binding\" \"example\" {",
      "  metadata {",
      "    name      = \"terraform-example\"",
      "    namespace = \"default\"",
      "  }",
      "  role_ref {",
      "    api_group = \"rbac.authorization.k8s.io\"",
      "    kind      = \"Role\"",
      "    name      = \"admin\"",
      "  }",
      "  subject {",
      "    kind      = \"User\"",
      "    name      = \"admin\"",
      "    api_group = \"rbac.authorization.k8s.io\"",
      "  }",
      "  subject {",
      "    kind      = \"ServiceAccount\"",
      "    name      = \"default\"",
      "    namespace = \"kube-system\"",
      "  }",
      "  subject {",
      "    kind      = \"Group\"",
      "    name      = \"system:masters\"",
      "    api_group = \"rbac.authorization.k8s.io\"",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-secret": {
    "description": "Defines secret",
    "prefix": "tf-kubernetes-resource-secret",
    "body": [
      "resource \"kubernetes_secret\" \"example\" {",
      "  metadata {",
      "    name = \"basic-auth\"",
      "  }",
      "",
      "  data = {",
      "    username = \"admin\"",
      "    password = \"P4ssw0rd\"",
      "  }",
      "",
      "  type = \"kubernetes.io/basic-auth\"",
      "}"
    ]
  },
  "kubernetes-resource-service": {
    "description": "Defines service",
    "prefix": "tf-kubernetes-resource-service",
    "body": [
      "resource \"kubernetes_service\" \"example\" {",
      "  metadata {",
      "    name = \"terraform-example\"",
      "  }",
      "  spec {",
      "    selector = {",
      "      app = \"${kubernetes_pod.example.metadata.0.labels.app}\"",
      "    }",
      "    session_affinity = \"ClientIP\"",
      "    port {",
      "      port        = 8080",
      "      target_port = 80",
      "    }",
      "",
      "    type = \"LoadBalancer\"",
      "  }",
      "}",
      "",
      "resource \"kubernetes_pod\" \"example\" {",
      "  metadata {",
      "    name = \"terraform-example\"",
      "    labels = {",
      "      app = \"MyApp\"",
      "    }",
      "  }",
      "",
      "  spec {",
      "    container {",
      "      image = \"nginx:1.7.9\"",
      "      name  = \"example\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-service_account": {
    "description": "Defines service_account",
    "prefix": "tf-kubernetes-resource-service_account",
    "body": [
      "resource \"kubernetes_service_account\" \"example\" {",
      "  metadata {",
      "    name = \"terraform-example\"",
      "  }",
      "  secret {",
      "    name = \"${kubernetes_secret.example.metadata.0.name}\"",
      "  }",
      "}",
      "",
      "resource \"kubernetes_secret\" \"example\" {",
      "  metadata {",
      "    name = \"terraform-example\"",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-stateful_set": {
    "description": "Defines stateful_set",
    "prefix": "tf-kubernetes-resource-stateful_set",
    "body": [
      "resource \"kubernetes_stateful_set\" \"prometheus\" {",
      "  metadata {",
      "    annotations = {",
      "      SomeAnnotation = \"foobar\"",
      "    }",
      "",
      "    labels = {",
      "      k8s-app                           = \"prometheus\"",
      "      \"kubernetes.io/cluster-service\"   = \"true\"",
      "      \"addonmanager.kubernetes.io/mode\" = \"Reconcile\"",
      "      version                           = \"v2.2.1\"",
      "    }",
      "",
      "    name = \"prometheus\"",
      "  }",
      "",
      "  spec {",
      "    pod_management_policy  = \"Parallel\"",
      "    replicas               = 1",
      "    revision_history_limit = 5",
      "",
      "    selector {",
      "      match_labels = {",
      "        k8s-app = \"prometheus\"",
      "      }",
      "    }",
      "",
      "    service_name = \"prometheus\"",
      "",
      "    template {",
      "      metadata {",
      "        labels = {",
      "          k8s-app = \"prometheus\"",
      "        }",
      "",
      "        annotations = {}",
      "      }",
      "",
      "      spec {",
      "        service_account_name = \"prometheus\"",
      "",
      "        init_container {",
      "          name              = \"init-chown-data\"",
      "          image             = \"busybox:latest\"",
      "          image_pull_policy = \"IfNotPresent\"",
      "          command           = [\"chown\", \"-R\", \"65534:65534\", \"/data\"]",
      "",
      "          volume_mount {",
      "            name       = \"prometheus-data\"",
      "            mount_path = \"/data\"",
      "            sub_path   = \"\"",
      "          }",
      "        }",
      "",
      "        container {",
      "          name              = \"prometheus-server-configmap-reload\"",
      "          image             = \"jimmidyson/configmap-reload:v0.1\"",
      "          image_pull_policy = \"IfNotPresent\"",
      "",
      "          args = [",
      "            \"--volume-dir=/etc/config\",",
      "            \"--webhook-url=http://localhost:9090/-/reload\",",
      "          ]",
      "",
      "          volume_mount {",
      "            name       = \"config-volume\"",
      "            mount_path = \"/etc/config\"",
      "            read_only  = true",
      "          }",
      "",
      "          resources {",
      "            limits {",
      "              cpu    = \"10m\"",
      "              memory = \"10Mi\"",
      "            }",
      "",
      "            requests {",
      "              cpu    = \"10m\"",
      "              memory = \"10Mi\"",
      "            }",
      "          }",
      "        }",
      "",
      "        container {",
      "          name              = \"prometheus-server\"",
      "          image             = \"prom/prometheus:v2.2.1\"",
      "          image_pull_policy = \"IfNotPresent\"",
      "",
      "          args = [",
      "            \"--config.file=/etc/config/prometheus.yml\",",
      "            \"--storage.tsdb.path=/data\",",
      "            \"--web.console.libraries=/etc/prometheus/console_libraries\",",
      "            \"--web.console.templates=/etc/prometheus/consoles\",",
      "            \"--web.enable-lifecycle\",",
      "          ]",
      "",
      "          port {",
      "            container_port = 9090",
      "          }",
      "",
      "          resources {",
      "            limits {",
      "              cpu    = \"200m\"",
      "              memory = \"1000Mi\"",
      "            }",
      "",
      "            requests {",
      "              cpu    = \"200m\"",
      "              memory = \"1000Mi\"",
      "            }",
      "          }",
      "",
      "          volume_mount {",
      "            name       = \"config-volume\"",
      "            mount_path = \"/etc/config\"",
      "          }",
      "",
      "          volume_mount {",
      "            name       = \"prometheus-data\"",
      "            mount_path = \"/data\"",
      "            sub_path   = \"\"",
      "          }",
      "",
      "          readiness_probe {",
      "            http_get {",
      "              path = \"/-/ready\"",
      "              port = 9090",
      "            }",
      "",
      "            initial_delay_seconds = 30",
      "            timeout_seconds       = 30",
      "          }",
      "",
      "          liveness_probe {",
      "            http_get {",
      "              path   = \"/-/healthy\"",
      "              port   = 9090",
      "              scheme = \"HTTPS\"",
      "            }",
      "",
      "            initial_delay_seconds = 30",
      "            timeout_seconds       = 30",
      "          }",
      "        }",
      "",
      "        termination_grace_period_seconds = 300",
      "",
      "        volume {",
      "          name = \"config-volume\"",
      "",
      "          config_map {",
      "            name = \"prometheus-config\"",
      "          }",
      "        }",
      "      }",
      "    }",
      "",
      "    update_strategy {",
      "      type = \"RollingUpdate\"",
      "",
      "      rolling_update {",
      "        partition = 1",
      "      }",
      "    }",
      "",
      "    volume_claim_template {",
      "      metadata {",
      "        name = \"prometheus-data\"",
      "      }",
      "",
      "      spec {",
      "        access_modes       = [\"ReadWriteOnce\"]",
      "        storage_class_name = \"standard\"",
      "",
      "        resources {",
      "          requests = {",
      "            storage = \"16Gi\"",
      "          }",
      "        }",
      "      }",
      "    }",
      "  }",
      "}"
    ]
  },
  "kubernetes-resource-storage_class": {
    "description": "Defines storage_class",
    "prefix": "tf-kubernetes-resource-storage_class",
    "body": [
      "resource \"kubernetes_storage_class\" \"example\" {",
      "  metadata {",
      "    name = \"terraform-example\"",
      "  }",
      "  storage_provisioner = \"kubernetes.io/gce-pd\"",
      "  reclaim_policy      = \"Retain\"",
      "  parameters = {",
      "    type = \"pd-standard\"",
      "  }",
      "}"
    ]
  },
  "librato-resource-alert": {
    "description": "Defines alert",
    "prefix": "tf-librato-resource-alert",
    "body": [
      "# Create a new Librato alert",
      "resource \"librato_alert\" \"myalert\" {",
      "  name        = \"MyAlert\"",
      "  description = \"A Test Alert\"",
      "  services    = [\"${librato_service.myservice.id}\"]",
      "",
      "  condition {",
      "    type        = \"above\"",
      "    threshold   = 10",
      "    metric_name = \"librato.cpu.percent.idle\"",
      "  }",
      "}"
    ]
  },
  "librato-resource-metric": {
    "description": "Defines metric",
    "prefix": "tf-librato-resource-metric",
    "body": [
      "# Create a new Librato metric",
      "resource \"librato_metric\" \"mymetric\" {",
      "    name = \"MyMetric\"",
      "    type = \"counter\"",
      "    description = \"A Test Metric\"",
      "    attributes {",
      "      display_stacked = true",
      "    }",
      "}"
    ]
  },
  "librato-resource-service": {
    "description": "Defines service",
    "prefix": "tf-librato-resource-service",
    "body": [
      "# Create a new Librato service",
      "resource \"librato_service\" \"email\" {",
      "  title = \"Email the admins\"",
      "  type  = \"mail\"",
      "",
      "  settings = <<EOF",
      "{",
      "  \"addresses\": \"admin@example.com\"",
      "}",
      "EOF",
      "}"
    ]
  },
  "librato-resource-space": {
    "description": "Defines space",
    "prefix": "tf-librato-resource-space",
    "body": [
      "# Create a new Librato space",
      "resource \"librato_space\" \"default\" {",
      "  name = \"My New Space\"",
      "}"
    ]
  },
  "librato-resource-space_chart": {
    "description": "Defines space_chart",
    "prefix": "tf-librato-resource-space_chart",
    "body": [
      "# Create a new Librato space",
      "resource \"librato_space\" \"my_space\" {",
      "  name = \"My New Space\"",
      "}",
      "",
      "# Create a new chart",
      "resource \"librato_space_chart\" \"server_temperature\" {",
      "  name     = \"Server Temperature\"",
      "  space_id = \"${librato_space.my_space.id}\"",
      "",
      "  stream {",
      "    metric = \"server_temp\"",
      "    source = \"app1\"",
      "  }",
      "",
      "  stream {",
      "    metric           = \"environmental_temp\"",
      "    source           = \"*\"",
      "    group_function   = \"breakout\"",
      "    summary_function = \"average\"",
      "  }",
      "",
      "  stream {",
      "    metric         = \"server_temp\"",
      "    source         = \"%\"",
      "    group_function = \"average\"",
      "  }",
      "}"
    ]
  },
  "linode-data-account": {
    "description": "Defines account",
    "prefix": "tf-linode-data-account",
    "body": [
      "data \"linode_account\" \"account\" {}"
    ]
  },
  "linode-data-domain": {
    "description": "Defines domain",
    "prefix": "tf-linode-data-domain",
    "body": [
      "data \"linode_domain\" \"foo\" {",
      "    id = \"1234567\"",
      "}",
      "",
      "data \"linode_domain\" \"bar\" {",
      "    domain = \"bar.example.com\"",
      "}"
    ]
  },
  "linode-data-image": {
    "description": "Defines image",
    "prefix": "tf-linode-data-image",
    "body": [
      "data \"linode_image\" \"k8_master\" {",
      "    id = \"linode/debian8\"",
      "}"
    ]
  },
  "linode-data-instance_type": {
    "description": "Defines instance_type",
    "prefix": "tf-linode-data-instance_type",
    "body": [
      "data \"linode_instance_type\" \"default\" {",
      "    id = \"g6-standard-2\"",
      "}"
    ]
  },
  "linode-data-networking_ip": {
    "description": "Defines networking_ip",
    "prefix": "tf-linode-data-networking_ip",
    "body": [
      "data \"linode_network_ip\" \"ns1_linode_com\" {",
      "    address = \"162.159.27.72\"",
      "}"
    ]
  },
  "linode-data-profile": {
    "description": "Defines profile",
    "prefix": "tf-linode-data-profile",
    "body": [
      "data \"linode_profile\" \"profile\" {}"
    ]
  },
  "linode-data-region": {
    "description": "Defines region",
    "prefix": "tf-linode-data-region",
    "body": [
      "data \"linode_region\" \"region\" {",
      "  id = \"us-east\"",
      "}"
    ]
  },
  "linode-data-sshkey": {
    "description": "Defines sshkey",
    "prefix": "tf-linode-data-sshkey",
    "body": [
      "data \"linode_sshkey\" \"foo\" {",
      "  label = \"foo\"",
      "}"
    ]
  },
  "linode-data-user": {
    "description": "Defines user",
    "prefix": "tf-linode-data-user",
    "body": [
      "data \"linode_user\" \"foo\" {",
      "    username = \"foo\"",
      "}"
    ]
  },
  "linode-resource-domain": {
    "description": "Defines domain",
    "prefix": "tf-linode-resource-domain",
    "body": [
      "resource \"linode_domain\" \"foobar\" {",
      "    type = \"master\"",
      "    domain = \"foobar.example\"",
      "    soa_email = \"example@foobar.example\"",
      "    tags = [\"foo\", \"bar\"]",
      "}",
      "",
      "resource \"linode_domain_record\" \"foobar\" {",
      "    domain_id = \"${linode_domain.foobar.id}\"",
      "    name = \"www\"",
      "    record_type = \"CNAME\"",
      "    target = \"foobar.example\"",
      "}"
    ]
  },
  "linode-resource-domain_record": {
    "description": "Defines domain_record",
    "prefix": "tf-linode-resource-domain_record",
    "body": [
      "resource \"linode_domain\" \"foobar\" {",
      "    type = \"master\"",
      "    domain = \"foobar.example\"",
      "    soa_email = \"example@foobar.example\"",
      "}",
      "",
      "resource \"linode_domain_record\" \"foobar\" {",
      "    domain_id = \"${linode_domain.foobar.id}\"",
      "    name = \"www\"",
      "    record_type = \"CNAME\"",
      "    target = \"foobar.example\"",
      "}"
    ]
  },
  "linode-resource-image": {
    "description": "Defines image",
    "prefix": "tf-linode-resource-image",
    "body": [
      "resource \"linode_instance\" \"foo\" {",
      "    type = \"g6-nanode-1\"",
      "    region = \"us-central\"",
      "}",
      "",
      "resource \"linode_image\" \"bar\" {",
      "    label = \"foo-sda-image\"",
      "    description = \"Image taken from foo\"",
      "    disk_id = \"${linode_instance.foo.disk.0.id}\"",
      "    linode_id = \"${linode_instance.foo.id}\"",
      "}",
      "",
      "resource \"linode_instance\" \"bar_based\" {",
      "    type = \"${linode_instance.foo.type}\"",
      "    region = \"eu-west\"",
      "    image = \"${linode_image.bar.id}\"",
      "}"
    ]
  },
  "linode-resource-instance": {
    "description": "Defines instance",
    "prefix": "tf-linode-resource-instance",
    "body": [
      "resource \"linode_instance\" \"web\" {",
      "    label = \"simple_instance\"",
      "    image = \"linode/ubuntu18.04\"",
      "    region = \"us-central\"",
      "    type = \"g6-standard-1\"",
      "    authorized_keys = [\"ssh-rsa AAAA...Gw== user@example.local\"]",
      "    root_pass = \"terr4form-test\"",
      "",
      "    group = \"foo\"",
      "    tags = [ \"foo\" ]",
      "    swap_size = 256",
      "    private_ip = true",
      "}"
    ]
  },
  "linode-resource-nodebalancer": {
    "description": "Defines nodebalancer",
    "prefix": "tf-linode-resource-nodebalancer",
    "body": [
      "resource \"linode_nodebalancer\" \"foobar\" {",
      "    label = \"mynodebalancer\"",
      "    region = \"us-east\"",
      "    client_conn_throttle = 20",
      "    tags = [\"foobar\"]",
      "",
      "}"
    ]
  },
  "linode-resource-nodebalancer_config": {
    "description": "Defines nodebalancer_config",
    "prefix": "tf-linode-resource-nodebalancer_config",
    "body": [
      "resource \"linode_nodebalancer\" \"foobar\" {",
      "    label = \"mynodebalancer\"",
      "    region = \"us-east\"",
      "    client_conn_throttle = 20",
      "}",
      "",
      "resource \"linode_nodebalancer_config\" \"foofig\" {",
      "    nodebalancer_id = \"${linode_nodebalancer.foobar.id}\"",
      "    port = 8088",
      "    protocol = \"http\"",
      "    check = \"http\"",
      "    check_path = \"/foo\"",
      "    check_attempts = 3",
      "    check_timeout = 30",
      "    stickiness = \"http_cookie\"",
      "    algorithm = \"source\"",
      "}",
      ""
    ]
  },
  "linode-resource-nodebalancer_node": {
    "description": "Defines nodebalancer_node",
    "prefix": "tf-linode-resource-nodebalancer_node",
    "body": [
      "resource \"linode_instance\" \"web\" {",
      "    count = \"3\"",
      "    label = \"web-${count.index + 1}\"",
      "    image = \"linode/ubuntu18.04\"",
      "    region = \"us-east\"",
      "    type = \"g6-standard-1\"",
      "    authorized_keys = [\"ssh-rsa AAAA...Gw== user@example.local\"]",
      "    root_pass = \"terraform-test\"",
      "",
      "    private_ip = true",
      "}",
      "",
      "resource \"linode_nodebalancer\" \"foobar\" {",
      "    label = \"mynodebalancer\"",
      "    region = \"us-east\"",
      "    client_conn_throttle = 20",
      "}",
      "",
      "resource \"linode_nodebalancer_config\" \"foofig\" {",
      "    nodebalancer_id = \"${linode_nodebalancer.foobar.id}\"",
      "    port = 80",
      "    protocol = \"http\"",
      "    check = \"http\"",
      "    check_path = \"/foo\"",
      "    check_attempts = 3",
      "    check_timeout = 30",
      "    stickiness = \"http_cookie\"",
      "    algorithm = \"source\"",
      "}",
      "",
      "resource \"linode_nodebalancer_node\" \"foonode\" {",
      "    count = \"3\"",
      "    nodebalancer_id = \"${linode_nodebalancer.foobar.id}\"",
      "    config_id = \"${linode_nodebalancer_config.foofig.id}\"",
      "    address = \"${element(linode_instance.web.*.private_ip_address, count.index)}:80\"",
      "    label = \"mynodebalancernode\"",
      "    weight = 50",
      "}"
    ]
  },
  "linode-resource-rdns": {
    "description": "Defines rdns",
    "prefix": "tf-linode-resource-rdns",
    "body": [
      "resource \"linode_rdns\" \"foo\" {",
      "  address = \"${linode_instance.foo.ip_address}\"",
      "  rdns = \"${linode_instance.foo.ip_address}.nip.io\"",
      "}",
      "",
      "resource \"linode_instance\" \"foo\" {",
      "   image = \"linode/alpine3.9\"",
      "   region = \"ca-east\"",
      "   type = \"g6-dedicated-2\"",
      "}"
    ]
  },
  "linode-resource-sshkey": {
    "description": "Defines sshkey",
    "prefix": "tf-linode-resource-sshkey",
    "body": [
      "resource \"linode_sshkey\" \"foo\" {",
      "  label = \"foo\"",
      "  ssh_key = \"${chomp(file(\"~/.ssh/id_rsa.pub\"))}\"",
      "}",
      "",
      "resource \"linode_instance\" \"foo\" {",
      "  image  = \"linode/ubuntu18.04\"",
      "  label  = \"foo\"",
      "  region = \"us-east\"",
      "  type   = \"g6-nanode-1\"",
      "  authorized_keys    = [\"${linode_sshkey.foo.ssh_key}\"]",
      "  root_pass      = \"...\"",
      "}"
    ]
  },
  "linode-resource-stackscript": {
    "description": "Defines stackscript",
    "prefix": "tf-linode-resource-stackscript",
    "body": [
      "resource \"linode_stackscript\" \"foo\" {",
      "  label = \"foo\"",
      "  description = \"Installs a Package\"",
      "  script = <<EOF",
      "#!/bin/bash",
      "# <UDF name=\"package\" label=\"System Package to Install\" example=\"nginx\" default=\"\">",
      "apt-get -q update && apt-get -q -y install $PACKAGE",
      "EOF",
      "  images = [\"linode/ubuntu18.04\", \"linode/ubuntu16.04lts\"]",
      "  rev_note = \"initial version\"",
      "}",
      "",
      "resource \"linode_instance\" \"foo\" {",
      "  image  = \"linode/ubuntu18.04\"",
      "  label  = \"foo\"",
      "  region = \"us-east\"",
      "  type   = \"g6-nanode-1\"",
      "  authorized_keys    = [\"...\"]",
      "  root_pass      = \"...\"",
      "",
      "  stackscript_id = \"${linode_stackscript.install-nginx.id}\"",
      "  stackscript_data = {",
      "    \"package\" = \"nginx\"",
      "  }",
      "}"
    ]
  },
  "linode-resource-token": {
    "description": "Defines token",
    "prefix": "tf-linode-resource-token",
    "body": [
      "resource \"linode_token\" \"foo\" {",
      "  label  = \"token\"",
      "  scopes = \"linodes:read_only\"",
      "  expiry = \"2100-01-02T03:04:05Z\"",
      "}",
      "",
      "resource \"linode_instance\" \"foo\" {",
      "  # Configure the linode-cli and use it to add other Linode Instances to the hosts file",
      "  provisioner \"remote-exec\" {",
      "    inline = <<EOF",
      "echo -e \"[DEFAULT]\\n token = ${linode_token.foo.token}\\n region=${self.region}\\n type=${self.type}\" > ~/.linode-cli",
      "pip install linode-cli",
      "linode-cli linodes list --format \"ipv6,label\" --text --no-headers >> /etc/hosts",
      "EOF",
      "  }",
      "}"
    ]
  },
  "linode-resource-volume": {
    "description": "Defines volume",
    "prefix": "tf-linode-resource-volume",
    "body": [
      "resource \"linode_instance\" \"foobaz\" {",
      "    root_pass = \"3X4mp13\"",
      "    type = \"g6-nanode-1\"",
      "    region = \"us-west\"",
      "    tags = [\"foobaz\"]",
      "",
      "}",
      "",
      "resource \"linode_volume\" \"foobar\" {",
      "    label = \"foo-volume\"",
      "    region = \"${linode_instance.foobaz.region}\"",
      "    linode_id = \"${linode_instance.foobaz.id}\"",
      "}"
    ]
  },
  "local-data-file": {
    "description": "Defines file",
    "prefix": "tf-local-data-file",
    "body": [
      "data \"local_file\" \"foo\" {",
      "    filename = \"${path.module}/foo.bar\"",
      "}"
    ]
  },
  "local-resource-file": {
    "description": "Defines file",
    "prefix": "tf-local-resource-file",
    "body": [
      "resource \"local_file\" \"foo\" {",
      "    content     = \"foo!\"",
      "    filename = \"${path.module}/foo.bar\"",
      "}"
    ]
  },
  "logentries-data-logentries_logset": {
    "description": "Defines logentries_logset",
    "prefix": "tf-logentries-data-logentries_logset",
    "body": [
      "data \"logentries_logset\" \"logset\" {",
      "  name = \"Example_Logset\"",
      "}",
      "",
      "output \"example_logset_id\" {",
      "  value = \"data.logentries_logset.logset.id\"",
      "}"
    ]
  },
  "logentries-resource-log": {
    "description": "Defines log",
    "prefix": "tf-logentries-resource-log",
    "body": [
      "# Create a log and add it to the log set",
      "resource \"logentries_log\" \"app_log\" {",
      "  logset_id = \"${logentries_logset.host_logs.id}\"",
      "  name      = \"myapp-log\"",
      "  source    = \"token\"",
      "}"
    ]
  },
  "logentries-resource-logset": {
    "description": "Defines logset",
    "prefix": "tf-logentries-resource-logset",
    "body": [
      "# Create a log set",
      "resource \"logentries_logset\" \"host_logs\" {",
      "  name     = \"${var.server}-logs\"",
      "  location = \"www.example.com\"",
      "}"
    ]
  },
  "logicmonitor-data-collectors": {
    "description": "Defines collectors",
    "prefix": "tf-logicmonitor-data-collectors",
    "body": [
      "# Look up a LogicMonitor collector id",
      "data \"logicmonitor_collectors\" \"collectors\" {",
      "  filters {",
      "    property = \"hostname\"",
      "    operator = \"~\"",
      "    value = \"test\"",
      "  },",
      "\"most_recent\" = true",
      "}"
    ]
  },
  "logicmonitor-data-devicegroup": {
    "description": "Defines devicegroup",
    "prefix": "tf-logicmonitor-data-devicegroup",
    "body": [
      "# Look up a LogicMonitor device group id",
      "data \"logicmonitor_device_group\" \"devicegroups\" {",
      "  filters {",
      "    property = \"name\"",
      "    operator = \":\"",
      "    value = \"Production\"",
      "  },",
      "",
      "  filters {",
      "    custom_property_name = \"app.user\"",
      "    operator = \":\"",
      "    custom_property_value = \"api\"",
      "  }",
      "}"
    ]
  },
  "logicmonitor-resource-collector": {
    "description": "Defines collector",
    "prefix": "tf-logicmonitor-resource-collector",
    "body": [
      "# Create a new LogicMonitor collector",
      "resource \"logicmonitor_collector\" \"collector1\" {",
      "  description     = \"my terraformed collector\"",
      "  enable_failback = true",
      "}"
    ]
  },
  "logicmonitor-resource-collectorgroup": {
    "description": "Defines collectorgroup",
    "prefix": "tf-logicmonitor-resource-collectorgroup",
    "body": [
      "# Create a new LogicMonitor collector group",
      "resource \"logicmonitor_collector_group\" \"group1\" {",
      "  name  = \"collector_group_1\"",
      "  description = \"a new test group\"",
      "}"
    ]
  },
  "logicmonitor-resource-device": {
    "description": "Defines device",
    "prefix": "tf-logicmonitor-resource-device",
    "body": [
      "# Create a new LogicMonitor device",
      "resource \"logicmonitor_device\" \"host\" {",
      "  ip_addr = \"10.32.12.18\"",
      "  disable_alerting = true",
      "  collector = \"2\"",
      "  properties = {",
      "   \"app\" = \"haproxy\"",
      "   \"system.categories\" = \"a,b,c,d\"",
      "  }",
      "}"
    ]
  },
  "logicmonitor-resource-devicegroup": {
    "description": "Defines devicegroup",
    "prefix": "tf-logicmonitor-resource-devicegroup",
    "body": [
      "# Create a new LogicMonitor device group",
      "resource \"logicmonitor_device_group\" \"group\" {",
      "    name = \"NewTestGroup\"",
      "    description = \"new test group\"",
      "    properties = {",
      "     \"group\" = \"test\"",
      "     \"system.categories\" = \"a,b,c,d\"",
      "    }",
      "}"
    ]
  },
  "mailgun-resource-domain": {
    "description": "Defines domain",
    "prefix": "tf-mailgun-resource-domain",
    "body": [
      "# Create a new Mailgun domain",
      "resource \"mailgun_domain\" \"default\" {",
      "  name          = \"test.example.com\"",
      "  spam_action   = \"disabled\"",
      "  smtp_password = \"foobar\"",
      "}"
    ]
  },
  "mysql-resource-database": {
    "description": "Defines database",
    "prefix": "tf-mysql-resource-database",
    "body": [
      "resource \"mysql_database\" \"app\" {",
      "  name = \"my_awesome_app\"",
      "}"
    ]
  },
  "mysql-resource-grant": {
    "description": "Defines grant",
    "prefix": "tf-mysql-resource-grant",
    "body": [
      "resource \"mysql_user\" \"jdoe\" {",
      "  user               = \"jdoe\"",
      "  host               = \"example.com\"",
      "  plaintext_password = \"password\"",
      "}",
      "",
      "resource \"mysql_grant\" \"jdoe\" {",
      "  user       = \"${mysql_user.jdoe.user}\"",
      "  host       = \"${mysql_user.jdoe.host}\"",
      "  database   = \"app\"",
      "  privileges = [\"SELECT\", \"UPDATE\"]",
      "}"
    ]
  },
  "mysql-resource-role": {
    "description": "Defines role",
    "prefix": "tf-mysql-resource-role",
    "body": [
      "resource \"mysql_role\" \"developer\" {",
      "  name = \"developer\"",
      "}"
    ]
  },
  "mysql-resource-user": {
    "description": "Defines user",
    "prefix": "tf-mysql-resource-user",
    "body": [
      "resource \"mysql_user\" \"jdoe\" {",
      "  user               = \"jdoe\"",
      "  host               = \"example.com\"",
      "  plaintext_password = \"password\"",
      "}"
    ]
  },
  "mysql-resource-user_password": {
    "description": "Defines user_password",
    "prefix": "tf-mysql-resource-user_password",
    "body": [
      "#XXX empty snippet",
      ""
    ]
  },
  "ncloud-data-access_control_group": {
    "description": "Defines access_control_group",
    "prefix": "tf-ncloud-data-access_control_group",
    "body": [
      "data \"ncloud_access_control_group\" \"test\" {",
      "    # filter by ACG name",
      "\t\"name\" = \"acg-name\"",
      "}"
    ]
  },
  "ncloud-data-access_control_groups": {
    "description": "Defines access_control_groups",
    "prefix": "tf-ncloud-data-access_control_groups",
    "body": [
      "data \"ncloud_access_control_groups\" \"acg\" {}"
    ]
  },
  "ncloud-data-access_control_rule": {
    "description": "Defines access_control_rule",
    "prefix": "tf-ncloud-data-access_control_rule",
    "body": [
      "data \"ncloud_access_control_rule\" \"test\" {",
      "  \"is_default_group\" = \"true\"",
      "  \"destination_port\" = \"22\"",
      "}"
    ]
  },
  "ncloud-data-access_control_rules": {
    "description": "Defines access_control_rules",
    "prefix": "tf-ncloud-data-access_control_rules",
    "body": [
      "data \"ncloud_access_control_rules\" \"test\" {",
      "    // access_control_group_configuration_no : You can get one from `ncloud_access_control_group`",
      "    //      or `ncloud_access_control_groups`",
      "\t\"access_control_group_configuration_no\" = \"123\"",
      "}"
    ]
  },
  "ncloud-data-member_server_image": {
    "description": "Defines member_server_image",
    "prefix": "tf-ncloud-data-member_server_image",
    "body": [
      "data \"ncloud_member_server_image\" \"test\" {",
      "}"
    ]
  },
  "ncloud-data-member_server_images": {
    "description": "Defines member_server_images",
    "prefix": "tf-ncloud-data-member_server_images",
    "body": [
      "data \"ncloud_member_server_images\" \"member_server_images\" {}"
    ]
  },
  "ncloud-data-nas_volume": {
    "description": "Defines nas_volume",
    "prefix": "tf-ncloud-data-nas_volume",
    "body": [
      "data \"ncloud_nas_volume\" \"vol\" {}"
    ]
  },
  "ncloud-data-nas_volumes": {
    "description": "Defines nas_volumes",
    "prefix": "tf-ncloud-data-nas_volumes",
    "body": [
      "data \"ncloud_nas_volumes\" \"nas_volumes\" {}"
    ]
  },
  "ncloud-data-port_forwarding_rule": {
    "description": "Defines port_forwarding_rule",
    "prefix": "tf-ncloud-data-port_forwarding_rule",
    "body": [
      "data \"ncloud_port_forwarding_rule\" \"test\" {",
      "  \"port_forwarding_external_port\" = \"4088\"",
      "}"
    ]
  },
  "ncloud-data-port_forwarding_rules": {
    "description": "Defines port_forwarding_rules",
    "prefix": "tf-ncloud-data-port_forwarding_rules",
    "body": [
      "data \"ncloud_port_forwarding_rules\" \"rules\" {",
      "  \"zone_code\" = \"KR-1\"",
      "}"
    ]
  },
  "ncloud-data-public_ip": {
    "description": "Defines public_ip",
    "prefix": "tf-ncloud-data-public_ip",
    "body": [
      "data \"ncloud_public_ip\" \"public_ip\" {",
      "  \"sorted_by\" = \"publicIp\"",
      "  \"sorting_order\" = \"ascending\"",
      "}"
    ]
  },
  "ncloud-data-regions": {
    "description": "Defines regions",
    "prefix": "tf-ncloud-data-regions",
    "body": [
      "data \"ncloud_regions\" \"regions\" {}"
    ]
  },
  "ncloud-data-root_password": {
    "description": "Defines root_password",
    "prefix": "tf-ncloud-data-root_password",
    "body": [
      "data \"ncloud_root_password\" \"default\" {",
      "  \"server_instance_no\" = \"server_instance_no\" # ${ncloud_server.vm.id}",
      "  \"private_key\" = \"private_key\" # ${ncloud_login_key.key.private_key}",
      "}"
    ]
  },
  "ncloud-data-server_image": {
    "description": "Defines server_image",
    "prefix": "tf-ncloud-data-server_image",
    "body": [
      "data \"ncloud_server_image\" \"image\" {",
      "  \"product_name_regex\" = \"^Windows Server 2012(.*)\"",
      "}"
    ]
  },
  "ncloud-data-server_images": {
    "description": "Defines server_images",
    "prefix": "tf-ncloud-data-server_images",
    "body": [
      "data \"ncloud_server_images\" \"all\" {",
      "  \"output_file\" = \"server_images.json\"",
      "}"
    ]
  },
  "ncloud-data-server_product": {
    "description": "Defines server_product",
    "prefix": "tf-ncloud-data-server_product",
    "body": [
      "data \"ncloud_server_product\" \"product\" {",
      "\t\"server_image_product_code\" = \"SPSW0LINUX000032\"",
      "}"
    ]
  },
  "ncloud-data-server_products": {
    "description": "Defines server_products",
    "prefix": "tf-ncloud-data-server_products",
    "body": [
      "data \"ncloud_server_products\" \"all\" {",
      "  # server_image_product_code: You can get one from `data ncloud_server_images`",
      "  \"server_image_product_code\" = \"SPSW0LINUX000032\"",
      "}"
    ]
  },
  "ncloud-data-zones": {
    "description": "Defines zones",
    "prefix": "tf-ncloud-data-zones",
    "body": [
      "data \"ncloud_zones\" \"zones\" {}"
    ]
  },
  "ncloud-resource-block_storage": {
    "description": "Defines block_storage",
    "prefix": "tf-ncloud-resource-block_storage",
    "body": [
      "resource \"ncloud_block_storage\" \"storage\" {",
      "\t\"server_instance_no\" = \"812345\"",
      "\t\"name\" = \"tf-test-storage1\"",
      "\t\"size\" = \"10\"",
      "}"
    ]
  },
  "ncloud-resource-block_storage_snapshot": {
    "description": "Defines block_storage_snapshot",
    "prefix": "tf-ncloud-resource-block_storage_snapshot",
    "body": [
      "resource \"ncloud_block_storage_snapshot\" \"snapshot\" {",
      "\t\"block_storage_instance_no\" = \"812345\"",
      "\t\"name\" = \"tf-test-snapshot1\"",
      "\t\"description\" = \"Terraform test snapshot1\"",
      "}"
    ]
  },
  "ncloud-resource-load_balancer": {
    "description": "Defines load_balancer",
    "prefix": "tf-ncloud-resource-load_balancer",
    "body": [
      "resource \"ncloud_load_balancer\" \"lb\" {",
      "  \"name\"                = \"tftest_lb\"",
      "  \"algorithm_type\"      = \"SIPHS\"",
      "  \"description\"         = \"tftest_lb description\"",
      "",
      "  \"rule_list\" = [",
      "    {",
      "      \"protocol_type\"        = \"HTTP\"",
      "      \"load_balancer_port\"   = 80",
      "      \"server_port\"          = 80",
      "      \"l7_health_check_path\" = \"/monitor/l7check\"",
      "    },",
      "    {",
      "      \"protocol_type\"        = \"HTTPS\"",
      "      \"load_balancer_port\"   = 443",
      "      \"server_port\"          = 443",
      "      \"l7_health_check_path\" = \"/monitor/l7check\"",
      "      \"certificate_name\"     = \"cert\"",
      "    },",
      "  ]",
      "",
      "  \"server_instance_no_list\" = [\"812345\", \"812346\"]",
      "  \"internet_line_type\"      = \"PUBLC\"",
      "  \"network_usage_type\"      = \"PBLIP\"",
      "",
      "  \"region\"                  = \"KR\"",
      "}"
    ]
  },
  "ncloud-resource-load_balancer_ssl_certificate": {
    "description": "Defines load_balancer_ssl_certificate",
    "prefix": "tf-ncloud-resource-load_balancer_ssl_certificate",
    "body": [
      "resource \"ncloud_load_balancer_ssl_certificate\" \"cert\" {",
      "  \"certificate_name\"      = \"tftest_ssl_cert\"",
      "  \"privatekey\"            = \"${file(\"lbtest.privateKey\")}\"",
      "  \"publickey_certificate\" = \"${file(\"lbtest.crt\")}\"",
      "  \"certificate_chain\"     = \"${file(\"lbtest.chain\")}\"",
      "}"
    ]
  },
  "ncloud-resource-login_key": {
    "description": "Defines login_key",
    "prefix": "tf-ncloud-resource-login_key",
    "body": [
      "resource \"ncloud_login_key\" \"loginkey\" {",
      "  \"key_name\" = \"sample key name\"",
      "}"
    ]
  },
  "ncloud-resource-nas_volume": {
    "description": "Defines nas_volume",
    "prefix": "tf-ncloud-resource-nas_volume",
    "body": [
      "resource \"ncloud_nas_volume\" \"test\" {",
      "\t\"volume_name_postfix\"            = \"vol\"",
      "\t\"volume_size\"                    = \"600\"",
      "\t\"volume_allotment_protocol_type\" = \"NFS\"",
      "}"
    ]
  },
  "ncloud-resource-port_forwarding_rule": {
    "description": "Defines port_forwarding_rule",
    "prefix": "tf-ncloud-resource-port_forwarding_rule",
    "body": [
      "resource \"ncloud_port_forwarding_rule\" \"rule\" {",
      "   \"port_forwarding_configuration_no\" = \"1222\"",
      "   \"server_instance_no\" = \"812345\"",
      "   \"port_forwarding_external_port\" = \"2022\"",
      "   \"port_forwarding_internal_port\" = \"22\"",
      "}"
    ]
  },
  "ncloud-resource-public_ip": {
    "description": "Defines public_ip",
    "prefix": "tf-ncloud-resource-public_ip",
    "body": [
      "resource \"ncloud_public_ip\" \"public_ip\" {",
      "  \"server_instance_no\" = \"812345\"",
      "}"
    ]
  },
  "ncloud-resource-server": {
    "description": "Defines server",
    "prefix": "tf-ncloud-resource-server",
    "body": [
      "resource \"ncloud_server\" \"server\" {",
      "    \"name\" = \"tf-test-vm1\"",
      "    \"server_image_product_code\" = \"SPSW0LINUX000032\"",
      "    \"server_product_code\" = \"SPSVRSTAND000004\"",
      "",
      "    \"tag_list\" = [",
      "        {",
      "            \"tag_key\"   = \"samplekey1\"",
      "            \"tag_value\" = \"samplevalue1\"",
      "        },",
      "        {",
      "            \"tag_key\"   = \"samplekey2\"",
      "            \"tag_value\" = \"samplevalue2\"",
      "        },",
      "    ]",
      "}"
    ]
  },
  "netlify-resource-netlify_build_hook": {
    "description": "Defines netlify_build_hook",
    "prefix": "tf-netlify-resource-netlify_build_hook",
    "body": [
      "resource \"netlify_build_hook\" \"trigger\" {",
      "  site_id = \"12345\"",
      "  branch  = \"master\"",
      "  title   = \"Manual Build Trigger\"",
      "}"
    ]
  },
  "netlify-resource-netlify_deploy_key": {
    "description": "Defines netlify_deploy_key",
    "prefix": "tf-netlify-resource-netlify_deploy_key",
    "body": [
      "resource \"netlify_deploy_key\" \"key\" {}",
      "",
      "resource \"netlify_site\" \"main\" {",
      "  # ...",
      "  repo {",
      "    # ...",
      "    deploy_key_id = \"${netlify_deploy_key.key.id}\"",
      "  }",
      "}"
    ]
  },
  "netlify-resource-netlify_hook": {
    "description": "Defines netlify_hook",
    "prefix": "tf-netlify-resource-netlify_hook",
    "body": [
      "resource \"netlify_hook\" \"email_on_deploy\" {",
      "  site_id = \"12345\"",
      "  type    = \"email\"",
      "  event   = \"deploy_created\"",
      "",
      "  data {",
      "    email = \"test@test.com\"",
      "  }",
      "}"
    ]
  },
  "netlify-resource-netlify_site": {
    "description": "Defines netlify_site",
    "prefix": "tf-netlify-resource-netlify_site",
    "body": [
      "resource \"netlify_site\" \"main\" {",
      "  name = \"my-site\"",
      "",
      "  repo {",
      "    command       = \"middleman build\"",
      "    deploy_key_id = \"${netlify_deploy_key.key.id}\"",
      "    dir           = \"/build\"",
      "    provider      = \"github\"",
      "    repo_path     = \"username/repo\"",
      "    repo_branch   = \"master\"",
      "  }",
      "}"
    ]
  },
  "newrelic-data-alert_channel": {
    "description": "Defines alert_channel",
    "prefix": "tf-newrelic-data-alert_channel",
    "body": [
      "data \"newrelic_alert_channel\" \"foo\" {",
      "  name = \"foo@example.com\"",
      "}",
      "",
      "resource \"newrelic_alert_policy\" \"foo\" {",
      "  name = \"foo\"",
      "}",
      "",
      "resource \"newrelic_alert_policy_channel\" \"foo\" {",
      "  policy_id  = \"${newrelic_alert_policy.foo.id}\"",
      "  channel_id = \"${newrelic_alert_channel.foo.id}\"",
      "}"
    ]
  },
  "newrelic-data-alert_policy": {
    "description": "Defines alert_policy",
    "prefix": "tf-newrelic-data-alert_policy",
    "body": [
      "data \"newrelic_alert_channel\" \"foo\" {",
      "  name = \"foo@example.com\"",
      "}",
      "",
      "data \"newrelic_alert_policy\" \"foo\" {",
      "  name = \"foo policy\"",
      "}",
      "",
      "resource \"newrelic_alert_policy_channel\" \"foo\" {",
      "  policy_id  = \"${data.newrelic_alert_policy.foo.id}\"",
      "  channel_id = \"${data.newrelic_alert_channel.foo.id}\"",
      "}"
    ]
  },
  "newrelic-data-application": {
    "description": "Defines application",
    "prefix": "tf-newrelic-data-application",
    "body": [
      "data \"newrelic_application\" \"app\" {",
      "  name = \"my-app\"",
      "}",
      "",
      "resource \"newrelic_alert_policy\" \"foo\" {",
      "  name = \"foo\"",
      "}",
      "",
      "resource \"newrelic_alert_condition\" \"foo\" {",
      "  policy_id = \"${newrelic_alert_policy.foo.id}\"",
      "",
      "  name        = \"foo\"",
      "  type        = \"apm_app_metric\"",
      "  entities    = [\"${data.newrelic_application.app.id}\"]",
      "  metric      = \"apdex\"",
      "  runbook_url = \"https://www.example.com\"",
      "",
      "  term {",
      "    duration      = 5",
      "    operator      = \"below\"",
      "    priority      = \"critical\"",
      "    threshold     = \"0.75\"",
      "    time_function = \"all\"",
      "  }",
      "}"
    ]
  },
  "newrelic-data-key_transaction": {
    "description": "Defines key_transaction",
    "prefix": "tf-newrelic-data-key_transaction",
    "body": [
      "data \"newrelic_key_transaction\" \"txn\" {",
      "  name = \"txn\"",
      "}",
      "",
      "resource \"newrelic_alert_policy\" \"foo\" {",
      "  name = \"foo\"",
      "}",
      "",
      "resource \"newrelic_alert_condition\" \"foo\" {",
      "  policy_id = \"${newrelic_alert_policy.foo.id}\"",
      "",
      "  name        = \"foo\"",
      "  type        = \"apm_kt_metric\"",
      "  entities    = [\"${data.newrelic_key_transaction.txn.id}\"]",
      "  metric      = \"error_percentage\"",
      "  runbook_url = \"https://www.example.com\"",
      "",
      "  term {",
      "    duration      = 5",
      "    operator      = \"below\"",
      "    priority      = \"critical\"",
      "    threshold     = \"0.75\"",
      "    time_function = \"all\"",
      "  }",
      "}"
    ]
  },
  "newrelic-data-synthetics_monitor": {
    "description": "Defines synthetics_monitor",
    "prefix": "tf-newrelic-data-synthetics_monitor",
    "body": [
      "data \"newrelic_synthetics_monitor\" \"bar\" {",
      "  name = \"bar\"",
      "}",
      "",
      "resource \"newrelic_synthetics_alert_condition\" \"baz\" {",
      "  policy_id = \"${newrelic_alert_policy.foo.id}\"",
      "",
      "  name        = \"baz\"",
      "  monitor_id  = \"${data.newrelic_synthetics_monitor.bar.id}\"",
      "  runbook_url = \"https://www.example.com\"",
      "}"
    ]
  },
  "newrelic-resource-alert_channel": {
    "description": "Defines alert_channel",
    "prefix": "tf-newrelic-resource-alert_channel",
    "body": [
      "resource \"newrelic_alert_channel\" \"foo\" {",
      "  name = \"foo\"",
      "  type = \"email\"",
      "",
      "  configuration = {",
      "    recipients              = \"foo@example.com\"",
      "    include_json_attachment = \"1\"",
      "  }",
      "}"
    ]
  },
  "newrelic-resource-alert_condition": {
    "description": "Defines alert_condition",
    "prefix": "tf-newrelic-resource-alert_condition",
    "body": [
      "data \"newrelic_application\" \"app\" {",
      "  name = \"my-app\"",
      "}",
      "",
      "resource \"newrelic_alert_policy\" \"foo\" {",
      "  name = \"foo\"",
      "}",
      "",
      "resource \"newrelic_alert_condition\" \"foo\" {",
      "  policy_id = \"${newrelic_alert_policy.foo.id}\"",
      "",
      "  name        = \"foo\"",
      "  type        = \"apm_app_metric\"",
      "  entities    = [\"${data.newrelic_application.app.id}\"]",
      "  metric      = \"apdex\"",
      "  runbook_url = \"https://www.example.com\"",
      "",
      "  term {",
      "    duration      = 5",
      "    operator      = \"below\"",
      "    priority      = \"critical\"",
      "    threshold     = \"0.75\"",
      "    time_function = \"all\"",
      "  }",
      "}"
    ]
  },
  "newrelic-resource-alert_policy": {
    "description": "Defines alert_policy",
    "prefix": "tf-newrelic-resource-alert_policy",
    "body": [
      "resource \"newrelic_alert_policy\" \"foo\" {",
      "  name = \"foo\"",
      "}"
    ]
  },
  "newrelic-resource-alert_policy_channel": {
    "description": "Defines alert_policy_channel",
    "prefix": "tf-newrelic-resource-alert_policy_channel",
    "body": [
      "resource \"newrelic_alert_policy\" \"foo\" {",
      "  name = \"foo\"",
      "}",
      "",
      "resource \"newrelic_alert_channel\" \"foo\" {",
      "  name = \"foo\"",
      "  type = \"email\"",
      "",
      "  configuration = {",
      "    recipients              = \"foo@example.com\"",
      "    include_json_attachment = \"1\"",
      "  }",
      "}",
      "",
      "resource \"newrelic_alert_policy_channel\" \"foo\" {",
      "  policy_id  = \"${newrelic_alert_policy.foo.id}\"",
      "  channel_id = \"${newrelic_alert_channel.foo.id}\"",
      "}"
    ]
  },
  "newrelic-resource-dashboard": {
    "description": "Defines dashboard",
    "prefix": "tf-newrelic-resource-dashboard",
    "body": [
      "resource \"newrelic_dashboard\" \"exampledash\" {",
      "  title = \"New Relic Terraform Example\"",
      "",
      "  widget {",
      "    title         = \"Average Transaction Duration\"",
      "    row           = 1",
      "    column        = 1",
      "    width         = 2",
      "    visualization = \"faceted_line_chart\"",
      "    nrql          = \"SELECT AVERAGE(duration) from Transaction FACET appName TIMESERIES auto\"",
      "  }",
      "",
      "  widget {",
      "    title         = \"Page Views\"",
      "    row           = 1",
      "    column        = 3",
      "    visualization = \"billboard\"",
      "    nrql          = \"SELECT count(*) FROM PageView SINCE 1 week ago\"",
      "  }",
      "}"
    ]
  },
  "newrelic-resource-infra_alert_condition": {
    "description": "Defines infra_alert_condition",
    "prefix": "tf-newrelic-resource-infra_alert_condition",
    "body": [
      "resource \"newrelic_alert_policy\" \"foo\" {",
      "  name = \"foo\"",
      "}",
      "",
      "resource \"newrelic_infra_alert_condition\" \"foo\" {",
      "  policy_id = \"${newrelic_alert_policy.foo.id}\"",
      "",
      "  name       = \"High disk usage\"",
      "  type       = \"infra_metric\"",
      "  event      = \"StorageSample\"",
      "  select     = \"diskUsedPercent\"",
      "  comparison = \"above\"",
      "  where      = \"(`hostname` LIKE '%frontend%')\"",
      "",
      "  critical {",
      "    duration      = 25",
      "    value         = 90",
      "    time_function = \"all\"",
      "  }",
      "}"
    ]
  },
  "newrelic-resource-nrql_alert_condition": {
    "description": "Defines nrql_alert_condition",
    "prefix": "tf-newrelic-resource-nrql_alert_condition",
    "body": [
      "resource \"newrelic_alert_policy\" \"foo\" {",
      "  name = \"foo\"",
      "}",
      "",
      "resource \"newrelic_nrql_alert_condition\" \"foo\" {",
      "  policy_id = \"${newrelic_alert_policy.foo.id}\"",
      "",
      "  name        = \"foo\"",
      "  runbook_url = \"https://www.example.com\"",
      "  enabled     = true",
      "",
      "  term {",
      "    duration      = 5",
      "    operator      = \"below\"",
      "    priority      = \"critical\"",
      "    threshold     = \"1\"",
      "    time_function = \"all\"",
      "  }",
      "",
      "  nrql {",
      "    query       = \"SELECT count(*) FROM SyntheticCheck WHERE monitorId = '<monitorId>'\"",
      "    since_value = \"3\"",
      "  }",
      "",
      "  value_function = \"single_value\"",
      "}"
    ]
  },
  "newrelic-resource-synthetics_alert_condition": {
    "description": "Defines synthetics_alert_condition",
    "prefix": "tf-newrelic-resource-synthetics_alert_condition",
    "body": [
      "data \"newrelic_synthetics_monitor\" \"foo\" {",
      "  name = \"foo\"",
      "}",
      "",
      "resource \"newrelic_synthetics_alert_condition\" \"foo\" {",
      "  policy_id = \"${newrelic_alert_policy.foo.id}\"",
      "",
      "  name        = \"foo\"",
      "  monitor_id  = \"${data.newrelic_synthetics_monitor.foo.id}\"",
      "  runbook_url = \"https://www.example.com\"",
      "}"
    ]
  },
  "newrelic-resource-synthetics_monitor": {
    "description": "Defines synthetics_monitor",
    "prefix": "tf-newrelic-resource-synthetics_monitor",
    "body": [
      "resource \"newrelic_synthetics_monitor\" \"foo\" {",
      "  name = \"foo\"",
      "  type = \"SIMPLE\"",
      "  frequency = 5",
      "  status = \"ENABLED\"",
      "  locations = [\"AWS_US_EAST_1\"]",
      "}"
    ]
  },
  "newrelic-resource-synthetics_monitor_script": {
    "description": "Defines synthetics_monitor_script",
    "prefix": "tf-newrelic-resource-synthetics_monitor_script",
    "body": [
      "data \"template_file\" \"foo_script\" {",
      "  template = \"${file(\"${path.module}/foo_script.tpl\")}\"",
      "}",
      "",
      "resource \"newrelic_synthetics_monitor_script\" \"foo_script\" {",
      "  monitor_id = \"${newrelic_synthetics_monitor.foo.id}\"",
      "  text = \"${data.template_file.foo_script.rendered}\"",
      "}"
    ]
  },
  "nomad-data-deployments": {
    "description": "Defines deployments",
    "prefix": "tf-nomad-data-deployments",
    "body": [
      "data \"nomad_deployments\" \"example\" {}"
    ]
  },
  "nomad-data-job": {
    "description": "Defines job",
    "prefix": "tf-nomad-data-job",
    "body": [
      "data \"nomad_job\" \"example1\" {",
      "  job_id = \"example_job\"",
      "}"
    ]
  },
  "nomad-data-namespaces": {
    "description": "Defines namespaces",
    "prefix": "tf-nomad-data-namespaces",
    "body": [
      "data \"nomad_namespaces\" \"namespaces\" {",
      "}",
      "",
      "resource \"nomad_acl_policy\" \"namespace\" {",
      "  count = \"${length(data.nomad_namespaces.namespaces.namespaces)}\"",
      "  name = \"namespace-${data.nomad_namespaces.namespaces[count.index]}\"",
      "  description = \"Write to the namespace ${data.nomad_namespaces.namespaces[count.index]}\"",
      "  rules_hcl = <<EOT",
      "namespace \"${data.nomad_namespaces.namespaces[count.index]}\" {",
      "  policy = \"write\"",
      "}",
      "EOT",
      "}",
      ""
    ]
  },
  "nomad-data-regions": {
    "description": "Defines regions",
    "prefix": "tf-nomad-data-regions",
    "body": [
      "data \"nomad_regions\" \"regions\" {",
      "}",
      "",
      "data \"template_file\" \"jobs\" {",
      "  count = \"${length(data.nomad_regions.regions.regions)}\"",
      "  template = <<EOT",
      "job \"foo\" {",
      "  datacenters = [\"dc1\"]",
      "  type = \"service\"",
      "  region = \"$$region\"",
      "  # ... rest of your job here",
      "}",
      "EOT",
      "  vars {",
      "    region = \"${data.nomad_regions.regions[count.index]}\"",
      "  }",
      "}",
      "",
      "resource \"nomad_job\" \"app\" {",
      "  count = \"${length(data.nomad_regions.regions.regions)}\"",
      "  jobspec = \"${data.template_file.jobs[count.index].rendered}\"",
      "}"
    ]
  },
  "nomad-resource-acl_policy": {
    "description": "Defines acl_policy",
    "prefix": "tf-nomad-resource-acl_policy",
    "body": [
      "resource \"nomad_acl_policy\" \"dev\" {",
      "  name        = \"dev\"",
      "  description = \"Submit jobs to the dev environment.\"",
      "  rules_hcl   = \"${file(\"${path.module}/dev.hcl\")}\"",
      "}"
    ]
  },
  "nomad-resource-acl_token": {
    "description": "Defines acl_token",
    "prefix": "tf-nomad-resource-acl_token",
    "body": [
      "resource \"nomad_acl_token\" \"ron\" {",
      "  name     = \"Ron Weasley\"",
      "  type     = \"client\"",
      "  policies = [\"dev\", \"qa\"]",
      "}"
    ]
  },
  "nomad-resource-job": {
    "description": "Defines job",
    "prefix": "tf-nomad-resource-job",
    "body": [
      "resource \"nomad_job\" \"app\" {",
      "  jobspec = \"${file(\"${path.module}/job.hcl\")}\"",
      "}"
    ]
  },
  "nomad-resource-namespace": {
    "description": "Defines namespace",
    "prefix": "tf-nomad-resource-namespace",
    "body": [
      "resource \"nomad_namespace\" \"dev\" {",
      "  name        = \"dev\"",
      "  description = \"Shared development environment.\"",
      "  quota = \"dev\"",
      "}"
    ]
  },
  "nomad-resource-quota_specification": {
    "description": "Defines quota_specification",
    "prefix": "tf-nomad-resource-quota_specification",
    "body": [
      "resource \"nomad_quota_specification\" \"prod_api\" {",
      "  name        = \"prod-api\"",
      "  description = \"Production instances of backend API servers\"",
      "",
      "  limits {",
      "    region = \"global\"",
      "",
      "    region_limit {",
      "      cpu       = 2400",
      "      memory_mb = 1200",
      "    }",
      "  }",
      "}"
    ]
  },
  "nomad-resource-sentinel_policy": {
    "description": "Defines sentinel_policy",
    "prefix": "tf-nomad-resource-sentinel_policy",
    "body": [
      "resource \"nomad_sentinel_policy\" \"exec-only\" {",
      "  name        = \"exec-only\"",
      "  description = \"Only allow jobs that are based on an exec driver.\"",
      "",
      "  policy = <<EOT",
      "main = rule { all_drivers_exec }",
      "",
      "# all_drivers_exec checks that all the drivers in use are exec",
      "all_drivers_exec = rule {",
      "    all job.task_groups as tg {",
      "        all tg.tasks as task {",
      "            task.driver is \"exec\"",
      "        }",
      "    }",
      "}",
      "EOT",
      "",
      "  scope = \"submit-job\"",
      "",
      "  # allow administrators to override",
      "  enforcement_level = \"soft-mandatory\"",
      "}"
    ]
  },
  "ns1-data-zone": {
    "description": "Defines zone",
    "prefix": "tf-ns1-data-zone",
    "body": [
      "# Get details about a NS1 Zone.",
      "data \"ns1_zone\" \"example\" {",
      "  zone = \"terraform.example.io\"",
      "}"
    ]
  },
  "ns1-resource-apikey": {
    "description": "Defines apikey",
    "prefix": "tf-ns1-resource-apikey",
    "body": [
      "resource \"ns1_team\" \"example\" {",
      "  name = \"Example team\"",
      "}",
      "",
      "resource \"ns1_apikey\" \"example\" {",
      "  name  = \"Example key\"",
      "  teams = [\"${ns1_team.example.id}\"]",
      "",
      "  # Configure permissions ",
      "  dns_view_zones       = false",
      "  account_manage_users = false",
      "}"
    ]
  },
  "ns1-resource-datafeed": {
    "description": "Defines datafeed",
    "prefix": "tf-ns1-resource-datafeed",
    "body": [
      "resource \"ns1_datasource\" \"example\" {",
      "  name       = \"example\"",
      "  sourcetype = \"nsone_v1\"",
      "}",
      "",
      "resource \"ns1_datafeed\" \"uswest_feed\" {",
      "  name      = \"uswest_feed\"",
      "  source_id = \"${ns1_datasource.example.id}\"",
      "",
      "  config = {",
      "    label = \"uswest\"",
      "  }",
      "}",
      "",
      "resource \"ns1_datafeed\" \"useast_feed\" {",
      "  name      = \"useast_feed\"",
      "  source_id = \"${ns1_datasource.example.id}\"",
      "",
      "  config = {",
      "    label = \"useast\"",
      "  }",
      "}"
    ]
  },
  "ns1-resource-datasource": {
    "description": "Defines datasource",
    "prefix": "tf-ns1-resource-datasource",
    "body": [
      "resource \"ns1_datasource\" \"example\" {",
      "  name       = \"example\"",
      "  sourcetype = \"nsone_v1\"",
      "}"
    ]
  },
  "ns1-resource-monitoringjob": {
    "description": "Defines monitoringjob",
    "prefix": "tf-ns1-resource-monitoringjob",
    "body": [
      "resource \"ns1_monitoringjob\" \"uswest_monitor\" {",
      "  name          = \"uswest\"",
      "  active        = true",
      "  regions       = [\"sjc\", \"sin\", \"lga\"]",
      "  job_type      = \"tcp\"",
      "  frequency     = 60",
      "  rapid_recheck = true",
      "  policy        = \"quorum\"",
      "",
      "  config = {",
      "    send = \"HEAD / HTTP/1.0\\r\\n\\r\\n\"",
      "    port = 80",
      "    host = \"example-elb-uswest.aws.amazon.com\"",
      "  }",
      "",
      "  rules {",
      "    value      = \"200 OK\"",
      "    comparison = \"contains\"",
      "    key        = \"output\"",
      "  }",
      "}"
    ]
  },
  "ns1-resource-notifylist": {
    "description": "Defines notifylist",
    "prefix": "tf-ns1-resource-notifylist",
    "body": [
      "resource \"ns1_notifylist\" \"nl\" {",
      "  name = \"my notify list\"",
      "  notifications {",
      "    type = \"webhook\"",
      "    config = {",
      "      url = \"http://www.mywebhook.com\"",
      "    }",
      "  }",
      "",
      "  notifications {",
      "    type = \"email\"",
      "    config = {",
      "      email = \"test@test.com\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "ns1-resource-record": {
    "description": "Defines record",
    "prefix": "tf-ns1-resource-record",
    "body": [
      "resource \"ns1_zone\" \"tld\" {",
      "  zone = \"terraform.example\"",
      "}",
      "",
      "resource \"ns1_record\" \"www\" {",
      "  zone   = \"${ns1_zone.tld.zone}\"",
      "  domain = \"www.${ns1_zone.tld.zone}\"",
      "  type   = \"CNAME\"",
      "  ttl    = 60",
      "",
      "  answers {",
      "    answer = \"sub1.${ns1_zone.tld.zone}\"",
      "  }",
      "",
      "  answers {",
      "    answer = \"sub2.${ns1_zone.tld.zone}\"",
      "  } ",
      "",
      "  filters {",
      "    filter = \"select_first_n\"",
      "",
      "    config = {",
      "      N = 1",
      "    }",
      "  }",
      "}"
    ]
  },
  "ns1-resource-team": {
    "description": "Defines team",
    "prefix": "tf-ns1-resource-team",
    "body": [
      "# Create a new NS1 Team",
      "resource \"ns1_team\" \"example\" {",
      "  name = \"Example team\"",
      "",
      "  # Configure permissions",
      "  dns_view_zones       = false",
      "  account_manage_users = false",
      "}"
    ]
  },
  "ns1-resource-user": {
    "description": "Defines user",
    "prefix": "tf-ns1-resource-user",
    "body": [
      "resource \"ns1_team\" \"example\" {",
      "  name = \"Example team\"",
      "",
      "  dns_view_zones       = false",
      "  account_manage_users = false",
      "}",
      "",
      "resource \"ns1_user\" \"example\" {",
      "  name     = \"Example User\"",
      "  username = \"example_user\"",
      "  email    = \"user@example.com\"",
      "  teams    = [\"${ns1_team.example.id}\"]",
      "}"
    ]
  },
  "ns1-resource-zone": {
    "description": "Defines zone",
    "prefix": "tf-ns1-resource-zone",
    "body": [
      "# Create a new DNS zone",
      "resource \"ns1_zone\" \"example\" {",
      "  zone = \"terraform.example.io\"",
      "  ttl  = 600",
      "}"
    ]
  },
  "nsxt-data-certificate": {
    "description": "Defines certificate",
    "prefix": "tf-nsxt-data-certificate",
    "body": [
      "data \"nsxt_certificate\" \"CA\" {",
      "  display_name = \"ca-cert\"",
      "}"
    ]
  },
  "nsxt-data-edge_cluster": {
    "description": "Defines edge_cluster",
    "prefix": "tf-nsxt-data-edge_cluster",
    "body": [
      "data \"nsxt_edge_cluster\" \"edge_cluster1\" {",
      "  display_name = \"edgecluster\"",
      "}"
    ]
  },
  "nsxt-data-logical_tier0_router": {
    "description": "Defines logical_tier0_router",
    "prefix": "tf-nsxt-data-logical_tier0_router",
    "body": [
      "data \"nsxt_logical_tier0_router\" \"tier0_router\" {",
      "  display_name = \"PLR1\"",
      "}"
    ]
  },
  "nsxt-data-logical_tier1_router": {
    "description": "Defines logical_tier1_router",
    "prefix": "tf-nsxt-data-logical_tier1_router",
    "body": [
      "data \"nsxt_logical_tier1_router\" \"tier1_router\" {",
      "  display_name = \"router1\"",
      "}"
    ]
  },
  "nsxt-data-mac_pool": {
    "description": "Defines mac_pool",
    "prefix": "tf-nsxt-data-mac_pool",
    "body": [
      "data \"nsxt_mac_pool\" \"mac_pool\" {",
      "  display_name = \"DefaultMacPool\"",
      "}"
    ]
  },
  "nsxt-data-ns_group": {
    "description": "Defines ns_group",
    "prefix": "tf-nsxt-data-ns_group",
    "body": [
      "data \"nsxt_ns_group\" \"ns_group_1\" {",
      "  display_name = \"test group\"",
      "}"
    ]
  },
  "nsxt-data-ns_service": {
    "description": "Defines ns_service",
    "prefix": "tf-nsxt-data-ns_service",
    "body": [
      "data \"nsxt_ns_service\" \"ns_service_dns\" {",
      "  display_name = \"DNS\"",
      "}"
    ]
  },
  "nsxt-data-switching_profile": {
    "description": "Defines switching_profile",
    "prefix": "tf-nsxt-data-switching_profile",
    "body": [
      "data \"nsxt_switching_profile\" \"qos_profile\" {",
      "  display_name = \"qos-profile\"",
      "}"
    ]
  },
  "nsxt-data-transport_zone": {
    "description": "Defines transport_zone",
    "prefix": "tf-nsxt-data-transport_zone",
    "body": [
      "data \"nsxt_transport_zone\" \"overlay_transport_zone\" {",
      "  display_name = \"1-transportzone-87\"",
      "}"
    ]
  },
  "nsxt-resource-algorithm_type_ns_service": {
    "description": "Defines algorithm_type_ns_service",
    "prefix": "tf-nsxt-resource-algorithm_type_ns_service",
    "body": [
      "resource \"nsxt_algorithm_type_ns_service\" \"ns_service_alg\" {",
      "  description       = \"S1 provisioned by Terraform\"",
      "  display_name      = \"S1\"",
      "  algorithm         = \"FTP\"",
      "  destination_port  = \"21\"",
      "  source_ports      = [\"9001-9003\"]",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-dhcp_relay_profile": {
    "description": "Defines dhcp_relay_profile",
    "prefix": "tf-nsxt-resource-dhcp_relay_profile",
    "body": [
      "resource \"nsxt_dhcp_relay_profile\" \"dr_profile\" {",
      "  description  = \"DRP provisioned by Terraform\"",
      "  display_name = \"DRP\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "",
      "  server_addresses = [\"1.1.1.1\"]",
      "}",
      "",
      "resource \"nsxt_dhcp_relay_service\" \"dr_service\" {",
      "  display_name          = \"DRS\"",
      "  dhcp_relay_profile_id = \"${nsxt_dhcp_relay_profile.dr_profile.id}\"",
      "}",
      "",
      "resource \"nsxt_logical_router_downlink_port\" \"router_downlink\" {",
      "  display_name                  = \"logical_router_downlink_port\"",
      "  linked_logical_switch_port_id = \"${nsxt_logical_port.port1.id}\"",
      "  logical_router_id             = \"${nsxt_logical_tier1_router.rtr1.id}\"",
      "",
      "  subnet {",
      "    ip_addresses  = [\"8.0.0.1\"]",
      "    prefix_length = 24",
      "  }",
      "",
      "  service_binding {",
      "    target_id   = \"${nsxt_dhcp_relay_service.dr_service.id}\"",
      "    target_type = \"LogicalService\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-dhcp_relay_service": {
    "description": "Defines dhcp_relay_service",
    "prefix": "tf-nsxt-resource-dhcp_relay_service",
    "body": [
      "resource \"nsxt_dhcp_relay_profile\" \"dr_profile\" {",
      "  description  = \"DRP provisioned by Terraform\"",
      "  display_name = \"DRP\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "",
      "  server_addresses = [\"1.1.1.1\"]",
      "}",
      "",
      "resource \"nsxt_dhcp_relay_service\" \"dr_service\" {",
      "  display_name          = \"DRS\"",
      "  dhcp_relay_profile_id = \"${nsxt_dhcp_relay_profile.dr_profile.id}\"",
      "}",
      "",
      "resource \"nsxt_logical_router_downlink_port\" \"router_downlink\" {",
      "  display_name                  = \"logical_router_downlink_port\"",
      "  linked_logical_switch_port_id = \"${nsxt_logical_port.port1.id}\"",
      "  logical_router_id             = \"${nsxt_logical_tier1_router.rtr1.id}\"",
      "",
      "  subnet {",
      "    ip_addresses  = [\"8.0.0.1\"]",
      "    prefix_length = 24",
      "  }",
      "",
      "  service_binding {",
      "    target_id   = \"${nsxt_dhcp_relay_service.dr_service.id}\"",
      "    target_type = \"LogicalService\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-dhcp_server_ip_pool": {
    "description": "Defines dhcp_server_ip_pool",
    "prefix": "tf-nsxt-resource-dhcp_server_ip_pool",
    "body": [
      "data \"nsxt_edge_cluster\" \"edgecluster\" {",
      "  display_name = \"edgecluster1\"",
      "}",
      "",
      "resource \"nsxt_dhcp_server_profile\" \"serverprofile\" {",
      "  edge_cluster_id = \"${data.nsxt_edge_cluster.edgecluster.id}\"",
      "}",
      "",
      "resource \"nsxt_logical_dhcp_server\" \"logical_dhcp_server\" {",
      "  display_name     = \"logical_dhcp_server\"",
      "  dhcp_profile_id  = \"${nsxt_dhcp_server_profile.PRF.id}\"",
      "  dhcp_server_ip   = \"1.1.1.10/24\"",
      "  gateway_ip       = \"1.1.1.20\"",
      "}",
      "",
      "resource \"nsxt_dhcp_server_ip_pool\" \"dhcp_ip_pool\" {",
      "  display_name           = \"ip pool\"",
      "  description            = \"ip pool\"",
      "  logical_dhcp_server_id = \"${nsxt_logical_dhcp_server.logical_dhcp_server.id}\"",
      "  gateway_ip             = \"1.1.1.21\"",
      "  lease_time             = 1296000",
      "  error_threshold        = 98",
      "  warning_threshold      = 70",
      "",
      "  ip_range {",
      "    start = \"1.1.1.40\"",
      "    end   = \"1.1.1.60\"",
      "  }",
      "",
      "  dhcp_option_121 {",
      "    network  = \"5.5.5.0/24\"",
      "    next_hop = \"1.1.1.21\"",
      "  }",
      "",
      "  dhcp_generic_option {",
      "    code   = \"119\"",
      "    values = [\"abc\"]",
      "  }",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "",
      "}"
    ]
  },
  "nsxt-resource-dhcp_server_profile": {
    "description": "Defines dhcp_server_profile",
    "prefix": "tf-nsxt-resource-dhcp_server_profile",
    "body": [
      "data \"nsxt_edge_cluster\" \"edge_cluster1\" {",
      "  display_name = \"edgecluster\"",
      "}",
      "",
      "resource \"nsxt_dhcp_server_profile\" \"dhcp_profile\" {",
      "  description                 = \"dhcp_profile provisioned by Terraform\"",
      "  display_name                = \"dhcp_profile\"",
      "  edge_cluster_id             = \"${data.nsxt_edge_cluster.edge_cluster1.id}\"",
      "  edge_cluster_member_indexes = [0, 1]",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-ether_type_ns_service": {
    "description": "Defines ether_type_ns_service",
    "prefix": "tf-nsxt-resource-ether_type_ns_service",
    "body": [
      "resource \"nsxt_ether_type_ns_service\" \"etns\" {",
      "  description  = \"S1 provisioned by Terraform\"",
      "  display_name = \"S1\"",
      "  ether_type   = \"1536\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-firewall_section": {
    "description": "Defines firewall_section",
    "prefix": "tf-nsxt-resource-firewall_section",
    "body": [
      "resource \"nsxt_firewall_section\" \"firewall_sect\" {",
      "  description  = \"FS provisioned by Terraform\"",
      "  display_name = \"FS\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "",
      "  applied_to {",
      "    target_type = \"NSGroup\"",
      "    target_id   = \"${nsxt_ns_group.group1.id}\"",
      "  }",
      "",
      "  section_type  = \"LAYER3\"",
      "  stateful      = true",
      "  insert_before = \"${nsxt_firewall_section.bottom_line.id}\"",
      "",
      "  rule {",
      "    display_name          = \"out_rule\"",
      "    description           = \"Out going rule\"",
      "    action                = \"ALLOW\"",
      "    logged                = true",
      "    ip_protocol           = \"IPV4\"",
      "    direction             = \"OUT\"",
      "    destinations_excluded = \"false\"",
      "    sources_excluded      = \"true\"",
      "",
      "    source {",
      "      target_type = \"LogicalSwitch\"",
      "      target_id   = \"${nsxt_logical_switch.switch1.id}\"",
      "    }",
      "",
      "    destination {",
      "      target_type = \"LogicalSwitch\"",
      "      target_id   = \"${nsxt_logical_switch.switch2.id}\"",
      "    }",
      "  }",
      "",
      "  rule {",
      "    display_name = \"in_rule\"",
      "    description  = \"In going rule\"",
      "    action       = \"DROP\"",
      "    logged       = true",
      "    ip_protocol  = \"IPV4\"",
      "    direction    = \"IN\"",
      "",
      "    service {",
      "      target_type = \"NSService\"",
      "      target_id   = \"e8d59e13-484b-4825-ae3b-4c11f83249d9\"",
      "    }",
      "",
      "    service {",
      "      target_type = \"NSService\"",
      "      target_id   = \"${nsxt_l4_port_set_ns_service.http.id}\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-icmp_type_ns_service": {
    "description": "Defines icmp_type_ns_service",
    "prefix": "tf-nsxt-resource-icmp_type_ns_service",
    "body": [
      "resource \"nsxt_icmp_type_ns_service\" \"ns_service_icmp\" {",
      "  description  = \"S1 provisioned by Terraform\"",
      "  display_name = \"S1\"",
      "  protocol     = \"ICMPv4\"",
      "  icmp_type    = \"5\"",
      "  icmp_code    = \"1\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-igmp_type_ns_service": {
    "description": "Defines igmp_type_ns_service",
    "prefix": "tf-nsxt-resource-igmp_type_ns_service",
    "body": [
      "resource \"nsxt_igmp_type_ns_service\" \"ns_service_igmp\" {",
      "  description  = \"S1 provisioned by Terraform\"",
      "  display_name = \"S1\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-ip_block": {
    "description": "Defines ip_block",
    "prefix": "tf-nsxt-resource-ip_block",
    "body": [
      "resource \"nsxt_ip_block\" \"ip_block\" {",
      "  description  = \"ip_block provisioned by Terraform\"",
      "  display_name = \"ip_block\"",
      "  cidr         = \"2.1.1.0/24\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "}",
      "",
      "resource \"nsxt_ip_block_subnet\" \"ip_block_subnet\" {",
      "  description = \"ip_block_subnet\"",
      "  block_id    = \"${nsxt_ip_block.ip_block.id}\"",
      "  size        = 16",
      "}",
      ""
    ]
  },
  "nsxt-resource-ip_block_subnet": {
    "description": "Defines ip_block_subnet",
    "prefix": "tf-nsxt-resource-ip_block_subnet",
    "body": [
      "resource \"nsxt_ip_block\" \"ip_block\" {",
      "  display_name = \"block1\"",
      "  cidr         = \"55.0.0.0/24\"",
      "}",
      "",
      "resource \"nsxt_ip_block_subnet\" \"ip_block_subnet\" {",
      "  description  = \"ip_block_subnet provisioned by Terraform\"",
      "  display_name = \"ip_block_subnet\"",
      "  block_id     = \"${nsxt_ip_block.ip_block.id}\"",
      "  size         = 16",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-ip_discovery_switching_profile": {
    "description": "Defines ip_discovery_switching_profile",
    "prefix": "tf-nsxt-resource-ip_discovery_switching_profile",
    "body": [
      "resource \"nsxt_ip_discovery_switching_profile\" \"ip_discovery_switching_profile\" {",
      "  description           = \"ip_discovery_switching_profile provisioned by Terraform\"",
      "  display_name          = \"ip_discovery_switching_profile\"",
      "  vm_tools_enabled      = \"false\"",
      "  arp_snooping_enabled  = \"true\"",
      "  dhcp_snooping_enabled = \"false\"",
      "  arp_bindings_limit    = \"1\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-ip_pool": {
    "description": "Defines ip_pool",
    "prefix": "tf-nsxt-resource-ip_pool",
    "body": [
      "resource \"nsxt_ip_pool\" \"ip_pool\" {",
      "  description = \"ip_pool provisioned by Terraform\"",
      "  display_name = \"ip_pool\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "",
      "  subnet {",
      "    allocation_ranges = [\"2.1.1.1-2.1.1.11\", \"2.1.1.21-2.1.1.100\"]",
      "    cidr              = \"2.1.1.0/24\"",
      "    gateway_ip        = \"2.1.1.12\"",
      "    dns_suffix        = \"abc\"",
      "    dns_nameservers   = [\"33.33.33.33\"]",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-ip_protocol_ns_service": {
    "description": "Defines ip_protocol_ns_service",
    "prefix": "tf-nsxt-resource-ip_protocol_ns_service",
    "body": [
      "resource \"nsxt_ip_protocol_ns_service\" \"ns_service_ip\" {",
      "  description  = \"S1 provisioned by Terraform\"",
      "  display_name = \"S1\"",
      "  protocol     = \"10\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-ip_set": {
    "description": "Defines ip_set",
    "prefix": "tf-nsxt-resource-ip_set",
    "body": [
      "resource \"nsxt_ip_set\" \"ip_set1\" {",
      "  description  = \"IS provisioned by Terraform\"",
      "  display_name = \"IS\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "",
      "  ip_addresses = [\"1.1.1.1\", \"2.2.2.2\"]",
      "}"
    ]
  },
  "nsxt-resource-l4_port_set_ns_service": {
    "description": "Defines l4_port_set_ns_service",
    "prefix": "tf-nsxt-resource-l4_port_set_ns_service",
    "body": [
      "resource \"nsxt_l4_port_set_ns_service\" \"ns_service_l4\" {",
      "  description       = \"S1 provisioned by Terraform\"",
      "  display_name      = \"S1\"",
      "  protocol          = \"TCP\"",
      "  destination_ports = [\"73\", \"8080\", \"81\"]",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-lb_client_ssl_profile": {
    "description": "Defines lb_client_ssl_profile",
    "prefix": "tf-nsxt-resource-lb_client_ssl_profile",
    "body": [
      "resource \"nsxt_lb_client_ssl_profile\" \"lb_client_ssl_profile\" {",
      "  description           = \"lb_client_ssl_profile provisioned by Terraform\"",
      "  display_name          = \"lb_client_ssl_profile\"",
      "  protocols             = [\"TLS_V1_2\"]",
      "  ciphers               = [\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\", \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\"]",
      "  prefer_server_ciphers = true",
      "  session_cache_enabled = true",
      "  session_cache_timeout = 200",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-lb_cookie_persistence_profile": {
    "description": "Defines lb_cookie_persistence_profile",
    "prefix": "tf-nsxt-resource-lb_cookie_persistence_profile",
    "body": [
      "resource \"nsxt_lb_cookie_persistence_profile\" \"lb_cookie_persistence_profile\" {",
      "  description        = \"lb_cookie_persistence_profile provisioned by Terraform\"",
      "  display_name       = \"lb_cookie_persistence_profile\"",
      "  cookie_name        = \"my_cookie\"",
      "  persistence_shared = \"false\"",
      "  cookie_fallback    = \"false\"",
      "  cookie_garble      = \"false\"",
      "  cookie_mode        = \"INSERT\"",
      "",
      "  insert_mode_params {",
      "    cookie_domain      = \".example2.com\"",
      "    cookie_path        = \"/subfolder\"",
      "    cookie_expiry_type = \"SESSION_COOKIE_TIME\"",
      "    max_idle_time      = \"1000\"",
      "    max_life_time      = \"2000\"",
      "  }",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-lb_fast_tcp_application_profile": {
    "description": "Defines lb_fast_tcp_application_profile",
    "prefix": "tf-nsxt-resource-lb_fast_tcp_application_profile",
    "body": [
      "resource \"nsxt_lb_fast_tcp_application_profile\" \"lb_fast_tcp_profile\" {",
      "  description       = \"lb_fast_tcp_application_profile provisioned by Terraform\"",
      "  display_name      = \"lb_fast_tcp_application_profile\"",
      "  close_timeout     = \"8\"",
      "  idle_timeout      = \"1800\"",
      "  ha_flow_mirroring = \"false\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-lb_fast_udp_application_profile": {
    "description": "Defines lb_fast_udp_application_profile",
    "prefix": "tf-nsxt-resource-lb_fast_udp_application_profile",
    "body": [
      "resource \"nsxt_lb_fast_udp_application_profile\" \"lb_fast_udp_profile\" {",
      "  description       = \"lb_fast_udp_application_profile provisioned by Terraform\"",
      "  display_name      = \"lb_fast_udp_application_profile\"",
      "  idle_timeout      = \"1800\"",
      "  ha_flow_mirroring = \"false\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-lb_http_application_profile": {
    "description": "Defines lb_http_application_profile",
    "prefix": "tf-nsxt-resource-lb_http_application_profile",
    "body": [
      "resource \"nsxt_lb_http_application_profile\" \"lb_http_application_profile\" {",
      "  description            = \"lb_http_application_profile provisioned by Terraform\"",
      "  display_name           = \"lb_http_application_profile\"",
      "  http_redirect_to       = \"http://www.example.com\"",
      "  http_redirect_to_https = \"false\"",
      "  idle_timeout           = \"15\"",
      "  request_body_size      = \"100\"",
      "  request_header_size    = \"1024\"",
      "  response_timeout       = \"60\"",
      "  x_forwarded_for        = \"INSERT\"",
      "  ntlm                   = \"true\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-lb_http_forwarding_rule": {
    "description": "Defines lb_http_forwarding_rule",
    "prefix": "tf-nsxt-resource-lb_http_forwarding_rule",
    "body": [
      "resource \"nsxt_lb_http_forwarding_rule\" \"lb_rule\" {",
      "  description = \"lb_rule provisioned by Terraform\"",
      "  display_name = \"lb_rule\"",
      "  match_strategy = \"ANY\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "",
      "  body_condition {",
      "    value          = \"XXX\"",
      "    match_type     = \"CONTAINS\"",
      "    case_sensitive = false",
      "  }",
      "",
      "  header_condition {",
      "    name       = \"header1\"",
      "    value      = \"bad\"",
      "    match_type = \"EQUALS\"",
      "    inverse    = true",
      "  }",
      "",
      "  cookie_condition {",
      "    name           = \"name\"",
      "    value          = \"cookie1\"",
      "    match_type     = \"STARTS_WITH\"",
      "    case_sensitive = true",
      "  }",
      "",
      "  cookie_condition {",
      "    name           = \"name\"",
      "    value          = \"cookie2\"",
      "    match_type     = \"STARTS_WITH\"",
      "    case_sensitive = true",
      "  }",
      "",
      "  method_condition {",
      "    method = \"HEAD\"",
      "  }",
      "",
      "  version_condition {",
      "    version = \"HTTP_VERSION_1_0\"",
      "    inverse = true",
      "  }",
      "",
      "  uri_condition {",
      "    uri        = \"/index.html\"",
      "    match_type = \"EQUALS\"",
      "  }",
      "",
      "  ip_condition {",
      "    source_address = \"1.1.1.1\"",
      "  }",
      "",
      "  tcp_condition {",
      "    source_port = 7887",
      "  }",
      "",
      "  http_reject_action {",
      "    reply_status  = \"500\"",
      "    reply_message = \"rejected\"",
      "  }",
      "",
      "  http_redirect_action {",
      "    redirect_status = \"200\"",
      "    redirect_url    = \"/abc.com\"",
      "  }",
      "",
      "  select_pool_action {",
      "    pool_id  = \"${nsxt_lb_pool.pool.id}\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-lb_http_monitor": {
    "description": "Defines lb_http_monitor",
    "prefix": "tf-nsxt-resource-lb_http_monitor",
    "body": [
      "",
      "resource \"nsxt_lb_http_monitor\" \"lb_http_monitor\" {",
      "  description           = \"lb_http_monitor provisioned by Terraform\"",
      "  display_name          = \"lb_http_monitor\"",
      "  fall_count            = 2",
      "  interval              = 5",
      "  monitor_port          = 8080",
      "  rise_count            = 5",
      "  timeout               = 10",
      "  request_body          = \"ping\"",
      "  request_method        = \"HEAD\"",
      "  request_url           = \"/index.html\"",
      "  request_version       = \"HTTP_VERSION_1_1\"",
      "  response_body         = \"pong\"",
      "  response_status_codes = [200, 304]",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "",
      "  request_header {",
      "    name  = \"X-healthcheck\"",
      "    value = \"NSX\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-lb_http_request_rewrite_rule": {
    "description": "Defines lb_http_request_rewrite_rule",
    "prefix": "tf-nsxt-resource-lb_http_request_rewrite_rule",
    "body": [
      "resource \"nsxt_lb_http_request_rewrite_rule\" \"lb_rule\" {",
      "  description = \"lb_rule provisioned by Terraform\"",
      "  display_name = \"lb_rule\"",
      "  match_strategy = \"ANY\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "",
      "  body_condition {",
      "    value      = \"XXX\"",
      "    match_type = \"CONTAINS\"",
      "    case_sensitive = false",
      "  }",
      "",
      "  header_condition {",
      "    name       = \"header1\"",
      "    value      = \"bad\"",
      "    match_type = \"EQUALS\"",
      "    inverse    = true",
      "  }",
      "",
      "  cookie_condition {",
      "    name           = \"name\"",
      "    value          = \"cookie1\"",
      "    match_type     = \"STARTS_WITH\"",
      "    case_sensitive = true",
      "  }",
      "",
      "  cookie_condition {",
      "    name           = \"name\"",
      "    value          = \"cookie2\"",
      "    match_type     = \"STARTS_WITH\"",
      "    case_sensitive = true",
      "  }",
      "",
      "  method_condition {",
      "    method = \"HEAD\"",
      "  }",
      "",
      "  version_condition {",
      "    version = \"HTTP_VERSION_1_0\"",
      "    inverse = true",
      "  }",
      "",
      "  uri_condition {",
      "    uri        = \"/index.html\"",
      "    match_type = \"EQUALS\"",
      "  }",
      "",
      "  uri_arguments_condition {",
      "    uri_arguments = \"delete\"",
      "    match_type    = \"CONTAINS\"",
      "    inverse       = true",
      "  }",
      "",
      "  ip_condition {",
      "    source_address = \"1.1.1.1\"",
      "  }",
      "",
      "  tcp_condition {",
      "    source_port = 7887",
      "  }",
      "",
      "  header_rewrite_action {",
      "    name  = \"header1\"",
      "    value = \"value2\"",
      "  }",
      "",
      "  uri_rewrite_action {",
      "    uri           = \"new.html\"",
      "    uri_arguments = \"redirect=true\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-lb_http_response_rewrite_rule": {
    "description": "Defines lb_http_response_rewrite_rule",
    "prefix": "tf-nsxt-resource-lb_http_response_rewrite_rule",
    "body": [
      "resource \"nsxt_lb_http_response_rewrite_rule\" \"lb_rule\" {",
      "  description = \"lb_rule provisioned by Terraform\"",
      "  display_name = \"lb_rule\"",
      "  match_strategy = \"ALL\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "",
      "  request_header_condition {",
      "    name       = \"header1\"",
      "    value      = \"bad\"",
      "    match_type = \"EQUALS\"",
      "    inverse    = true",
      "  }",
      "",
      "  response_header_condition {",
      "    name       = \"header1\"",
      "    value      = \"good\"",
      "    match_type = \"EQUALS\"",
      "    inverse    = false",
      "  }",
      "",
      "  cookie_condition {",
      "    name           = \"name1\"",
      "    value          = \"cookie1\"",
      "    match_type     = \"STARTS_WITH\"",
      "    case_sensitive = true",
      "  }",
      "",
      "  cookie_condition {",
      "    name           = \"name2\"",
      "    value          = \"cookie2\"",
      "    match_type     = \"STARTS_WITH\"",
      "    case_sensitive = true",
      "  }",
      "",
      "  method_condition {",
      "    method = \"HEAD\"",
      "  }",
      "",
      "  version_condition {",
      "    version = \"HTTP_VERSION_1_1\"",
      "    inverse = true",
      "  }",
      "",
      "  uri_condition {",
      "    uri        = \"/index.html\"",
      "    match_type = \"EQUALS\"",
      "  }",
      "",
      "  uri_arguments_condition {",
      "    uri_arguments = \"delete\"",
      "    match_type    = \"CONTAINS\"",
      "    inverse       = true",
      "  }",
      "",
      "  ip_condition {",
      "    source_address = \"1.1.1.1\"",
      "  }",
      "",
      "  tcp_condition {",
      "    source_port = 7887",
      "  }",
      "",
      "  header_rewrite_action {",
      "    name  = \"header1\"",
      "    value = \"even better\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-lb_http_virtual_server": {
    "description": "Defines lb_http_virtual_server",
    "prefix": "tf-nsxt-resource-lb_http_virtual_server",
    "body": [
      "resource \"nsxt_lb_http_application_profile\" \"http_xff\" {",
      "  x_forwarded_for = \"INSERT\"",
      "}",
      "",
      "resource \"nsxt_lb_cookie_persistence_profile\" \"session_persistence\" {",
      "  cookie_name = \"SESSION\"",
      "}",
      "",
      "resource \"nsxt_lb_pool\" \"pool1\" {",
      "  algorithm = \"LEAST_CONNECTION\"",
      "  member {",
      "    ip_address = \"3.0.0.1\"",
      "    port       = \"443\"",
      "  }",
      "  member {",
      "    ip_address = \"3.0.0.2\"",
      "    port       = \"443\"",
      "  }",
      "}",
      "",
      "resource \"nsxt_lb_pool\" \"sorry_pool\" {",
      "  member {",
      "    ip_address = \"3.0.0.15\"",
      "    port       = \"443\"",
      "  }",
      "}",
      "",
      "resource \"nsxt_lb_http_request_rewrite_rule\" \"redirect_post\" {",
      "  match_strategy = \"ALL\"",
      "  method_condition {",
      "    method = \"POST\"",
      "  }",
      "",
      "  uri_rewrite_action {",
      "    uri = \"/sorry_page.html\"",
      "  }",
      "}",
      "",
      "resource \"nsxt_lb_client_ssl_profile\" \"ssl1\" {",
      "  prefer_server_ciphers = true",
      "}",
      "",
      "resource \"nsxt_lb_server_ssl_profile\" \"ssl1\" {",
      "  session_cache_enabled = false",
      "}",
      "",
      "resource \"nsxt_lb_http_virtual_server\" \"lb_virtual_server\" {",
      "  description                = \"lb_virtual_server provisioned by terraform\"",
      "  display_name               = \"virtual server 1\"",
      "  access_log_enabled         = true",
      "  application_profile_id     = \"${nsxt_lb_http_application_profile.http_xff.id}\"",
      "  enabled                    = true",
      "  ip_address                 = \"10.0.0.2\"",
      "  port                       = \"443\"",
      "  default_pool_member_port   = \"8888\"",
      "  max_concurrent_connections = 50",
      "  max_new_connection_rate    = 20",
      "  persistence_profile_id     = \"${nsxt_lb_cookie_persistence_profile.session_persistence.id}\"",
      "  pool_id                    = \"${nsxt_lb_pool.pool1.id}\"",
      "  sorry_pool_id              = \"${nsxt_lb_pool.sorry_pool.id}\"",
      "  rule_ids                   = [\"${nsxt_lb_http_request_rewrite_rule.redirect_post.id}\"]",
      "",
      "  client_ssl {",
      "    client_ssl_profile_id   = \"${nsxt_lb_client_ssl_profile.ssl1.id}\"",
      "    default_certificate_id  = \"${data.nsxt_certificate.cert1.id}\"",
      "    certificate_chain_depth = 2",
      "    client_auth             = true",
      "    ca_ids                  = [\"${data.nsxt_certificate.ca.id}\"]",
      "    crl_ids                 = [\"${data.nsxt_certificate.crl.id}\"]",
      "    sni_certificate_ids     = [\"${data.nsxt_certificate.sni.id}\"]",
      "  }",
      "",
      "  server_ssl {",
      "    server_ssl_profile_id   = \"${nsxt_lb_server_ssl_profile.ssl1.id}\"",
      "    client_certificate_id   = \"${data.nsxt_certificate.client.id}\"",
      "    certificate_chain_depth = 2",
      "    server_auth             = true",
      "    ca_ids                  = [\"${data.nsxt_certificate.server_ca.id}\"]",
      "    crl_ids                 = [\"${data.nsxt_certificate.crl.id}\"]",
      "  }",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"green\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-lb_https_monitor": {
    "description": "Defines lb_https_monitor",
    "prefix": "tf-nsxt-resource-lb_https_monitor",
    "body": [
      "",
      "data \"nsxt_certificate\" \"client\" {",
      "  display_name = \"client-1\"",
      "}",
      "",
      "data \"nsxt_certificate\" \"CA\" {",
      "  display_name = \"ca-1\"",
      "}",
      "",
      "resource \"nsxt_lb_https_monitor\" \"lb_https_monitor\" {",
      "  description             = \"lb_https_monitor provisioned by Terraform\"",
      "  display_name            = \"lb_https_monitor\"",
      "  fall_count              = 2",
      "  interval                = 5",
      "  monitor_port            = 8080",
      "  rise_count              = 5",
      "  timeout                 = 10",
      "  certificate_chain_depth = 2",
      "  ciphers                 = [\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\", \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\"]",
      "  client_certificate_id   = \"${data.nsxt_certificate.client.id}\"",
      "  protocols               = [\"TLS_V1_2\"]",
      "  request_body            = \"ping\"",
      "  request_method          = \"HEAD\"",
      "  request_url             = \"/index.html\"",
      "  request_version         = \"HTTP_VERSION_1_1\"",
      "  response_body           = \"pong\"",
      "  response_status_codes   = [200, 304]",
      "  server_auth             = \"REQUIRED\"",
      "  server_auth_ca_ids      = [\"${data.nsxt_certificate.CA.id}\"]",
      "  server_auth_crl_ids     = [\"78ba3814-bfe1-45e5-89d3-46862bed7896\"]",
      "",
      "  request_header {",
      "    name  = \"X-healthcheck\"",
      "    value = \"NSX\"",
      "  }",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-lb_icmp_monitor": {
    "description": "Defines lb_icmp_monitor",
    "prefix": "tf-nsxt-resource-lb_icmp_monitor",
    "body": [
      "resource \"nsxt_lb_icmp_monitor\" \"lb_icmp_monitor\" {",
      "  description  = \"lb_icmp_monitor provisioned by Terraform\"",
      "  display_name = \"lb_icmp_monitor\"",
      "  fall_count   = 3",
      "  interval     = 5",
      "  monitor_port = 7887",
      "  rise_count   = 3",
      "  timeout      = 10",
      "  data_length  = 56",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-lb_passive_monitor": {
    "description": "Defines lb_passive_monitor",
    "prefix": "tf-nsxt-resource-lb_passive_monitor",
    "body": [
      "resource \"nsxt_lb_passive_monitor\" \"lb_passive_monitor\" {",
      "  description  = \"lb_passive_monitor provisioned by Terraform\"",
      "  display_name = \"lb_passive_monitor\"",
      "  max_fails    = 3",
      "  timeout      = 10",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-lb_pool": {
    "description": "Defines lb_pool",
    "prefix": "tf-nsxt-resource-lb_pool",
    "body": [
      "resource \"nsxt_lb_icmp_monitor\" \"lb_icmp_monitor\" {",
      "  display_name = \"lb_icmp_monitor\"",
      "  fall_count   = 3",
      "  interval     = 5",
      "}",
      "",
      "resource \"nsxt_lb_passive_monitor\" \"lb_passive_monitor\" {",
      "  display_name = \"lb_passive_monitor\"",
      "  max_fails    = 3",
      "  timeout      = 10",
      "}",
      "",
      "resource \"nsxt_lb_pool\" \"lb_pool\" {",
      "  description              = \"lb_pool provisioned by Terraform\"",
      "  display_name             = \"lb_pool\"",
      "  algorithm                = \"WEIGHTED_ROUND_ROBIN\"",
      "  min_active_members       = 1",
      "  tcp_multiplexing_enabled = false",
      "  tcp_multiplexing_number  = 3",
      "  active_monitor_id        = \"${nsxt_lb_icmp_monitor.lb_icmp_monitor.id}\"",
      "  passive_monitor_id       = \"${nsxt_lb_passive_monitor.lb_passive_monitor.id}\"",
      "",
      "  member {",
      "    admin_state                = \"ENABLED\"",
      "    backup_member              = \"false\"",
      "    display_name               = \"1st-member\"",
      "    ip_address                 = \"1.1.1.1\"",
      "    max_concurrent_connections = \"1\"",
      "    port                       = \"87\"",
      "    weight                     = \"1\"",
      "  }",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "}",
      "",
      "resource \"nsxt_lb_pool\" \"lb_pool_with_dynamic_membership\" {",
      "  description              = \"lb_pool provisioned by Terraform\"",
      "  display_name             = \"dynamic_lb_pool\"",
      "  algorithm                = \"LEAST_CONNECTION\"",
      "  min_active_members       = 1",
      "  tcp_multiplexing_enabled = false",
      "  tcp_multiplexing_number  = 3",
      "  active_monitor_id        = \"${nsxt_lb_icmp_monitor.lb_icmp_monitor.id}\"",
      "  passive_monitor_id       = \"${nsxt_lb_passive_monitor.lb_passive_monitor.id}\"",
      "",
      "  snat_translation {",
      "    type          = \"SNAT_IP_POOL\"",
      "    ip            = \"1.1.1.1\"",
      "  }",
      "",
      "  member_group {",
      "    ip_version_filter   = \"IPV4\"",
      "    limit_ip_list_size  = true",
      "    max_ip_list_size    = \"4\"",
      "    port                = \"80\"",
      "",
      "    grouping_object {",
      "      target_type = \"NSGroup\"",
      "      target_id   = \"${nsxt_ns_group.group1.id}\"",
      "      }",
      "    }",
      "  }",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-lb_server_ssl_profile": {
    "description": "Defines lb_server_ssl_profile",
    "prefix": "tf-nsxt-resource-lb_server_ssl_profile",
    "body": [
      "resource \"nsxt_lb_server_ssl_profile\" \"lb_server_ssl_profile\" {",
      "  description           = \"lb_server_ssl_profile provisioned by Terraform\"",
      "  display_name          = \"lb_server_ssl_profile\"",
      "  protocols             = [\"TLS_V1_2\"]",
      "  ciphers               = [\"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256\", \"TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384\"]",
      "  session_cache_enabled = true",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-lb_service": {
    "description": "Defines lb_service",
    "prefix": "tf-nsxt-resource-lb_service",
    "body": [
      "",
      "data \"nsxt_edge_cluster\" \"EC\" {",
      "  display_name = \"%s\"",
      "}",
      "",
      "data \"nsxt_logical_tier0_router\" \"test\" {",
      "  display_name = \"%s\"",
      "}",
      "",
      "resource \"nsxt_logical_router_link_port_on_tier0\" \"test\" {",
      "  display_name      = \"port_on_tier0\"",
      "  logical_router_id = \"${data.nsxt_logical_tier0_router.test.id}\"",
      "}",
      "",
      "resource \"nsxt_logical_tier1_router\" \"test\" {",
      "  display_name    = \"test\"",
      "  edge_cluster_id = \"${data.nsxt_edge_cluster.EC.id}\"",
      "}",
      "",
      "resource \"nsxt_logical_router_link_port_on_tier1\" \"test\" {",
      "  logical_router_id             = \"${nsxt_logical_tier1_router.test.id}\"",
      "  linked_logical_router_port_id = \"${nsxt_logical_router_link_port_on_tier0.test.id}\"",
      "}",
      "",
      "resource \"nsxt_lb_service\" \"lb_service\" {",
      "  description  = \"lb_service provisioned by Terraform\"",
      "  display_name = \"lb_service\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "",
      "  enabled           = true",
      "  logical_router_id = \"${nsxt_logical_tier1_router.test.id}\"",
      "  error_log_level   = \"INFO\"",
      "  size              = \"MEDIUM\"",
      "",
      "  depends_on        = [\"nsxt_logical_router_link_port_on_tier1.test\"]",
      "}"
    ]
  },
  "nsxt-resource-lb_source_ip_persistence_profile": {
    "description": "Defines lb_source_ip_persistence_profile",
    "prefix": "tf-nsxt-resource-lb_source_ip_persistence_profile",
    "body": [
      "resource \"nsxt_lb_source_ip_persistence_profile\" \"lb_source_ip_persistence_profile\" {",
      "  description = \"lb_source_ip_persistence_profile provisioned by Terraform\"",
      "  display_name = \"lb_source_ip_persistence_profile\"",
      "  persistence_shared       = \"true\"",
      "  ha_persistence_mirroring = \"true\"",
      "  purge_when_full          = \"true\"",
      "  timeout                  = \"100\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "",
      "}"
    ]
  },
  "nsxt-resource-lb_tcp_monitor": {
    "description": "Defines lb_tcp_monitor",
    "prefix": "tf-nsxt-resource-lb_tcp_monitor",
    "body": [
      "resource \"nsxt_lb_tcp_monitor\" \"lb_tcp_monitor\" {",
      "  description  = \"lb_tcp_monitor provisioned by Terraform\"",
      "  display_name = \"lb_tcp_monitor\"",
      "  fall_count   = 3",
      "  interval     = 5",
      "  monitor_port = 7887",
      "  rise_count   = 3",
      "  timeout      = 10",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-lb_tcp_virtual_server": {
    "description": "Defines lb_tcp_virtual_server",
    "prefix": "tf-nsxt-resource-lb_tcp_virtual_server",
    "body": [
      "resource \"nsxt_lb_fast_tcp_application_profile\" \"timeout_60\" {",
      "  close_timeout = 60",
      "  idle_timeout  = 60",
      "}",
      "",
      "resource \"nsxt_lb_source_ip_persistence_profile\" \"ip_profile\" {",
      "  display_name = \"source1\"",
      "}",
      "",
      "resource \"nsxt_lb_pool\" \"pool1\" {",
      "  algorithm = \"LEAST_CONNECTION\"",
      "  member {",
      "    ip_address = \"3.0.0.1\"",
      "    port       = \"443\"",
      "  }",
      "  member {",
      "    ip_address = \"3.0.0.2\"",
      "    port       = \"443\"",
      "  }",
      "}",
      "",
      "resource \"nsxt_lb_pool\" \"sorry_pool\" {",
      "  member {",
      "    ip_address = \"3.0.0.15\"",
      "    port       = \"443\"",
      "  }",
      "}",
      "",
      "resource \"nsxt_lb_tcp_virtual_server\" \"lb_virtual_server\" {",
      "  description                = \"lb_virtual_server provisioned by terraform\"",
      "  display_name               = \"virtual server 1\"",
      "  access_log_enabled         = true",
      "  application_profile_id     = \"${nsxt_lb_fast_tcp_application_profile.timeout_60.id}\"",
      "  enabled                    = true",
      "  ip_address                 = \"10.0.0.2\"",
      "  ports                      = [\"443\"]",
      "  default_pool_member_ports  = [\"8888\"]",
      "  max_concurrent_connections = 50",
      "  max_new_connection_rate    = 20",
      "  persistence_profile_id     = \"${nsxt_lb_source_ip_persistence_profile.ip_profile.id}\"",
      "  pool_id                    = \"${nsxt_lb_pool.pool1.id}\"",
      "  sorry_pool_id              = \"${nsxt_lb_pool.sorry_pool.id}\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"green\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-lb_udp_monitor": {
    "description": "Defines lb_udp_monitor",
    "prefix": "tf-nsxt-resource-lb_udp_monitor",
    "body": [
      "resource \"nsxt_lb_udp_monitor\" \"lb_udp_monitor\" {",
      "  description  = \"lb_udp_monitor provisioned by Terraform\"",
      "  display_name = \"lb_udp_monitor\"",
      "  fall_count   = 3",
      "  interval     = 5",
      "  monitor_port = 7887",
      "  rise_count   = 3",
      "  timeout      = 10",
      "  send         = \"hi\"",
      "  receive      = \"hello\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-lb_udp_virtual_server": {
    "description": "Defines lb_udp_virtual_server",
    "prefix": "tf-nsxt-resource-lb_udp_virtual_server",
    "body": [
      "resource \"nsxt_lb_fast_udp_application_profile\" \"timeout_60\" {",
      "  idle_timeout  = 60",
      "}",
      "",
      "resource \"nsxt_lb_source_ip_persistence_profile\" \"ip_profile\" {",
      "  display_name = \"source1\"",
      "}",
      "",
      "resource \"nsxt_lb_pool\" \"pool1\" {",
      "  algorithm = \"LEAST_CONNECTION\"",
      "  member {",
      "    ip_address = \"3.0.0.1\"",
      "    port       = \"443\"",
      "  }",
      "  member {",
      "    ip_address = \"3.0.0.2\"",
      "    port       = \"443\"",
      "  }",
      "}",
      "",
      "resource \"nsxt_lb_pool\" \"sorry_pool\" {",
      "  member {",
      "    ip_address = \"3.0.0.15\"",
      "    port       = \"443\"",
      "  }",
      "}",
      "",
      "resource \"nsxt_lb_udp_virtual_server\" \"lb_virtual_server\" {",
      "  description                = \"lb_virtual_server provisioned by terraform\"",
      "  display_name               = \"virtual server 1\"",
      "  access_log_enabled         = true",
      "  application_profile_id     = \"${nsxt_lb_fast_udp_application_profile.timeout_60.id}\"",
      "  enabled                    = true",
      "  ip_address                 = \"10.0.0.2\"",
      "  ports                      = [\"443\"]",
      "  default_pool_member_ports  = [\"8888\"]",
      "  max_concurrent_connections = 50",
      "  max_new_connection_rate    = 20",
      "  persistence_profile_id     = \"${nsxt_lb_source_ip_persistence_profile.ip_profile.id}\"",
      "  pool_id                    = \"${nsxt_lb_pool.pool1.id}\"",
      "  sorry_pool_id              = \"${nsxt_lb_pool.sorry_pool.id}\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"green\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-logical_dhcp_port": {
    "description": "Defines logical_dhcp_port",
    "prefix": "tf-nsxt-resource-logical_dhcp_port",
    "body": [
      "resource \"nsxt_logical_dhcp_server\" \"logical_dhcp_server\" {",
      "  display_name    = \"logical_dhcp_server\"",
      "  dhcp_profile_id = \"${nsxt_dhcp_server_profile.PRF.id}\"",
      "  dhcp_server_ip  = \"1.1.1.10/24\"",
      "  gateway_ip      = \"1.1.1.20\"",
      "}",
      "",
      "resource \"nsxt_logical_switch\" \"switch\" {",
      "  display_name      = \"LS1\"",
      "  admin_state       = \"UP\"",
      "  transport_zone_id = \"${data.nsxt_transport_zone.transport_zone.id}\"",
      "}",
      "",
      "resource \"nsxt_logical_dhcp_port\" \"dhcp_port\" {",
      "  admin_state       = \"UP\"",
      "  description       = \"LP1 provisioned by Terraform\"",
      "  display_name      = \"LP1\"",
      "  logical_switch_id = \"${nsxt_logical_switch.switch.id}\"",
      "  dhcp_server_id    = \"${nsxt_logical_dhcp_server.logical_dhcp_server.id}\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-logical_dhcp_server": {
    "description": "Defines logical_dhcp_server",
    "prefix": "tf-nsxt-resource-logical_dhcp_server",
    "body": [
      "data \"nsxt_edge_cluster\" \"edgecluster\" {",
      "  display_name = \"edgecluster1\"",
      "}",
      "",
      "resource \"nsxt_dhcp_server_profile\" \"serverprofile\" {",
      "  edge_cluster_id = \"${data.nsxt_edge_cluster.edgecluster.id}\"",
      "}",
      "",
      "resource \"nsxt_logical_dhcp_server\" \"logical_dhcp_server\" {",
      "  display_name     = \"logical_dhcp_server\"",
      "  description      = \"logical_dhcp_server provisioned by Terraform\"",
      "  dhcp_profile_id  = \"${nsxt_dhcp_server_profile.PRF.id}\"",
      "  dhcp_server_ip   = \"1.1.1.10/24\"",
      "  gateway_ip       = \"1.1.1.20\"",
      "  domain_name      = \"abc.com\"",
      "  dns_name_servers = [\"5.5.5.5\"]",
      "",
      "  dhcp_option_121 {",
      "    network  = \"6.6.6.0/24\"",
      "    next_hop = \"1.1.1.21\"",
      "  }",
      "",
      "  dhcp_generic_option {",
      "    code = \"119\"",
      "    values = [\"abc\"]",
      "  }",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "",
      "}"
    ]
  },
  "nsxt-resource-logical_port": {
    "description": "Defines logical_port",
    "prefix": "tf-nsxt-resource-logical_port",
    "body": [
      "resource \"nsxt_logical_port\" \"logical_port\" {",
      "  admin_state       = \"UP\"",
      "  description       = \"LP1 provisioned by Terraform\"",
      "  display_name      = \"LP1\"",
      "  logical_switch_id = \"${nsxt_logical_switch.switch1.id}\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "",
      "  switching_profile_id {",
      "    key   = \"${data.nsxt_switching_profile.qos_profile.resource_type}\"",
      "    value = \"${data.nsxt_switching_profile.qos_profile.id}\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-logical_router_centralized_service_port": {
    "description": "Defines logical_router_centralized_service_port",
    "prefix": "tf-nsxt-resource-logical_router_centralized_service_port",
    "body": [
      "resource \"nsxt_logical_router_centralized_service_port\" \"cs_port\" {",
      "  description                   = \"Centralized service port provisioned by Terraform\"",
      "  display_name                  = \"CSP1\"",
      "  logical_router_id             = \"${nsxt_logical_tier1_router.rtr1.id}\"",
      "  linked_logical_switch_port_id = \"${nsxt_logical_port.logical_port1.id}\"",
      "  ip_address                    = \"1.1.0.1/24\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-logical_router_downlink_port": {
    "description": "Defines logical_router_downlink_port",
    "prefix": "tf-nsxt-resource-logical_router_downlink_port",
    "body": [
      "resource \"nsxt_logical_router_downlink_port\" \"downlink_port\" {",
      "  description                   = \"DP1 provisioned by Terraform\"",
      "  display_name                  = \"DP1\"",
      "  logical_router_id             = \"${nsxt_logical_tier1_router.rtr1.id}\"",
      "  linked_logical_switch_port_id = \"${nsxt_logical_port.logical_port1.id}\"",
      "  ip_address                    = \"1.1.0.1/24\"",
      "",
      "  service_binding {",
      "    target_id   = \"${nsxt_dhcp_relay_service.dr_service.id}\"",
      "    target_type = \"LogicalService\"",
      "  }",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-logical_router_link_port_on_tier0": {
    "description": "Defines logical_router_link_port_on_tier0",
    "prefix": "tf-nsxt-resource-logical_router_link_port_on_tier0",
    "body": [
      "resource \"nsxt_logical_router_link_port_on_tier0\" \"link_port_tier0\" {",
      "  description       = \"TIER0_PORT1 provisioned by Terraform\"",
      "  display_name      = \"TIER0_PORT1\"",
      "  logical_router_id = \"${data.nsxt_logical_tier0_router.rtr1.id}\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-logical_router_link_port_on_tier1": {
    "description": "Defines logical_router_link_port_on_tier1",
    "prefix": "tf-nsxt-resource-logical_router_link_port_on_tier1",
    "body": [
      "resource \"nsxt_logical_router_link_port_on_tier1\" \"link_port_tier1\" {",
      "  description                   = \"TIER1_PORT1 provisioned by Terraform\"",
      "  display_name                  = \"TIER1_PORT1\"",
      "  logical_router_id             = \"${nsxt_logical_tier1_router.rtr1.id}\"",
      "  linked_logical_router_port_id = \"${nsxt_logical_router_link_port_on_tier0.link_port_tier0.id}\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-logical_switch": {
    "description": "Defines logical_switch",
    "prefix": "tf-nsxt-resource-logical_switch",
    "body": [
      "resource \"nsxt_logical_switch\" \"switch1\" {",
      "  admin_state       = \"UP\"",
      "  description       = \"LS1 provisioned by Terraform\"",
      "  display_name      = \"LS1\"",
      "  transport_zone_id = \"${data.nsxt_transport_zone.transport_zone.id}\"",
      "  replication_mode  = \"MTEP\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "",
      "  address_binding {",
      "    ip_address = \"2.2.2.2\"",
      "    mac_address = \"00:11:22:33:44:55\"",
      "  }",
      "",
      "  switching_profile_id {",
      "    key   = \"${data.nsxt_switching_profile.qos_profiles.resource_type}\"",
      "    value = \"${data.nsxt_switching_profile.qos_profiles.id}\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-logical_tier0_router": {
    "description": "Defines logical_tier0_router",
    "prefix": "tf-nsxt-resource-logical_tier0_router",
    "body": [
      "resource \"nsxt_logical_tier0_router\" \"tier0_router\" {",
      "  display_name           = \"RTR\"",
      "  description            = \"ACTIVE-STANDBY Tier0 router provisioned by Terraform\"",
      "  high_availability_mode = \"ACTIVE_STANDBY\"",
      "  edge_cluster_id        = \"${data.nsxt_edge_cluster.edge_cluster.id}\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-logical_tier1_router": {
    "description": "Defines logical_tier1_router",
    "prefix": "tf-nsxt-resource-logical_tier1_router",
    "body": [
      "resource \"nsxt_logical_tier1_router\" \"tier1_router\" {",
      "  description                 = \"RTR1 provisioned by Terraform\"",
      "  display_name                = \"RTR1\"",
      "  failover_mode               = \"PREEMPTIVE\"",
      "  edge_cluster_id             = \"${data.nsxt_edge_cluster.edge_cluster.id}\"",
      "  enable_router_advertisement = true",
      "  advertise_connected_routes  = false",
      "  advertise_static_routes     = true",
      "  advertise_nat_routes        = true",
      "  advertise_lb_vip_routes     = true",
      "  advertise_lb_snat_ip_routes = false",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-mac_management_switching_profile": {
    "description": "Defines mac_management_switching_profile",
    "prefix": "tf-nsxt-resource-mac_management_switching_profile",
    "body": [
      "resource \"nsxt_mac_management_switching_profile\" \"mac_management_switching_profile\" {",
      "  description        = \"mac_management_switching_profile provisioned by Terraform\"",
      "  display_name       = \"mac_management_switching_profile\"",
      "  mac_change_allowed = \"true\"",
      "",
      "  mac_learning {",
      "    enabled                  = \"true\"",
      "    limit                    = \"4096\"",
      "    limit_policy             = \"ALLOW\"",
      "    unicast_flooding_allowed = \"false\"",
      "  }",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-nat_rule": {
    "description": "Defines nat_rule",
    "prefix": "tf-nsxt-resource-nat_rule",
    "body": [
      "resource \"nsxt_nat_rule\" \"rule1\" {",
      "  logical_router_id         = \"${nsxt_logical_tier1_router.rtr1.id}\"",
      "  description               = \"NR provisioned by Terraform\"",
      "  display_name              = \"NR\"",
      "  action                    = \"SNAT\"",
      "  enabled                   = true",
      "  logging                   = true",
      "  nat_pass                  = false",
      "  translated_network        = \"4.4.0.0/24\"",
      "  match_destination_network = \"3.3.3.0/24\"",
      "  match_source_network      = \"5.5.5.0/24\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-ns_group": {
    "description": "Defines ns_group",
    "prefix": "tf-nsxt-resource-ns_group",
    "body": [
      "resource \"nsxt_ns_group\" \"group2\" {",
      "  description  = \"NG provisioned by Terraform\"",
      "  display_name = \"NG\"",
      "",
      "  member {",
      "    target_type = \"NSGroup\"",
      "    value       = \"${nsxt_ns_group.group1.id}\"",
      "  }",
      "",
      "  membership_criteria {",
      "    target_type = \"LogicalPort\"",
      "    scope       = \"XXX\"",
      "    tag         = \"YYY\"",
      "  }",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-ns_service_group": {
    "description": "Defines ns_service_group",
    "prefix": "tf-nsxt-resource-ns_service_group",
    "body": [
      "",
      "data \"nsxt_ns_service\" \"dns\" {",
      "  display_name = \"DNS\"",
      "}",
      "",
      "resource \"nsxt_ip_protocol_ns_service\" \"prot17\" {",
      "  display_name = \"ip_prot\"",
      "  protocol     = \"17\"",
      "}",
      "",
      "resource \"nsxt_ns_service_group\" \"ns_service_group\" {",
      "  description  = \"ns_service_group provisioned by Terraform\"",
      "  display_name = \"ns_service_group\"",
      "  members      = [\"${nsxt_ip_protocol_ns_service.prot17.id}\", \"${data.nsxt_ns_service.dns.id}\"]",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-qos_switching_profile": {
    "description": "Defines qos_switching_profile",
    "prefix": "tf-nsxt-resource-qos_switching_profile",
    "body": [
      "resource \"nsxt_qos_switching_profile\" \"qos_switching_profile\" {",
      "  description      = \"qos_switching_profile provisioned by Terraform\"",
      "  display_name     = \"qos_switching_profile\"",
      "  class_of_service = \"5\"",
      "  dscp_trusted     = \"true\"",
      "  dscp_priority    = \"53\"",
      "",
      "  ingress_rate_shaper {",
      "    enabled         = \"true\"",
      "    peak_bw_mbps    = \"800\"",
      "    burst_size      = \"200\"",
      "    average_bw_mbps = \"100\"",
      "  }",
      "",
      "  egress_rate_shaper {",
      "    enabled         = \"true\"",
      "    peak_bw_mbps    = \"800\"",
      "    burst_size      = \"200\"",
      "    average_bw_mbps = \"100\"",
      "  }",
      "",
      "  ingress_broadcast_rate_shaper {",
      "    enabled         = \"true\"",
      "    average_bw_kbps = \"111\"",
      "    burst_size      = \"222\"",
      "    peak_bw_kbps    = \"500\"",
      "  }",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-spoof_guard_switching_profile": {
    "description": "Defines spoof_guard_switching_profile",
    "prefix": "tf-nsxt-resource-spoof_guard_switching_profile",
    "body": [
      "resource \"nsxt_spoofguard_switching_profile\" \"spoofguard_switching_profile\" {",
      "  description                       = \"spoofguard_switching_profile provisioned by Terraform\"",
      "  display_name                      = \"spoofguard_switching_profile\"",
      "  address_binding_whitelist_enabled = \"true\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-spoofguard_switching_profile": {
    "description": "Defines spoofguard_switching_profile",
    "prefix": "tf-nsxt-resource-spoofguard_switching_profile",
    "body": [
      "resource \"nsxt_spoofguard_switching_profile\" \"spoofguard_switching_profile\" {",
      "  description                       = \"spoofguard_switching_profile provisioned by Terraform\"",
      "  display_name                      = \"spoofguard_switching_profile\"",
      "  address_binding_whitelist_enabled = \"true\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-static_route": {
    "description": "Defines static_route",
    "prefix": "tf-nsxt-resource-static_route",
    "body": [
      "resource \"nsxt_static_route\" \"static_route\" {",
      "  description       = \"SR provisioned by Terraform\"",
      "  display_name      = \"SR\"",
      "  logical_router_id = \"${nsxt_logical_tier1_router.router1.id}\"",
      "  network           = \"4.4.4.0/24\"",
      "",
      "  next_hop {",
      "    ip_address              = \"8.0.0.10\"",
      "    administrative_distance = \"1\"",
      "    logical_router_port_id  = \"${nsxt_logical_router_downlink_port.downlink_port.id}\"",
      "  }",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-switch_security_switching_profile": {
    "description": "Defines switch_security_switching_profile",
    "prefix": "tf-nsxt-resource-switch_security_switching_profile",
    "body": [
      "resource \"nsxt_switch_security_switching_profile\" \"switch_security_switching_profile\" {",
      "  description           = \"switch_security_switching_profile provisioned by Terraform\"",
      "  display_name          = \"switch_security_switching_profile\"",
      "  block_non_ip          = true",
      "  block_client_dhcp     = false",
      "  block_server_dhcp     = false",
      "  bpdu_filter_enabled   = true",
      "  bpdu_filter_whitelist = [\"01:80:c2:00:00:01\"]",
      "",
      "  rate_limits {",
      "    enabled      = true",
      "    rx_broadcast = 32",
      "    rx_multicast = 32",
      "    tx_broadcast = 32",
      "    tx_multicast = 32",
      "  }",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"red\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-vlan_logical_switch": {
    "description": "Defines vlan_logical_switch",
    "prefix": "tf-nsxt-resource-vlan_logical_switch",
    "body": [
      "resource \"nsxt_vlan_logical_switch\" \"switch1\" {",
      "  admin_state       = \"UP\"",
      "  description       = \"LS1 provisioned by Terraform\"",
      "  display_name      = \"LS1\"",
      "  transport_zone_id = \"${data.nsxt_transport_zone.vlan_transport_zone.id}\"",
      "  vlan              = 2",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "",
      "  switching_profile_id {",
      "    key   = \"${data.nsxt_switching_profile.qos_profiles.resource_type}\"",
      "    value = \"${data.nsxt_switching_profile.qos_profiles.id}\"",
      "  }",
      "}"
    ]
  },
  "nsxt-resource-vm_tags": {
    "description": "Defines vm_tags",
    "prefix": "tf-nsxt-resource-vm_tags",
    "body": [
      "resource \"nsxt_vm_tags\" \"vm1_tags\" {",
      "  instance_id = \"${vsphere_virtual_machine.vm1.id}\"",
      "",
      "  tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "",
      "  logical_port_tag {",
      "    scope = \"color\"",
      "    tag   = \"blue\"",
      "  }",
      "}"
    ]
  },
  "nutanix-data-category_key": {
    "description": "Defines category_key",
    "prefix": "tf-nutanix-data-category_key",
    "body": [
      "resource \"nutanix_category_key\" \"test_key_value\"{",
      "    name = \"data_source_category_key_test_values\"",
      "    description = \"Data Source CategoryKey Test with Values\"",
      "}",
      "",
      "resource \"nutanix_category_value\" \"test_value\"{",
      "    name = \"${nutanix_category_key.test_key_value.name}\"",
      "    value = \"test_category_value_data_source\"",
      "    description = \"Data Source CategoryValue Test with Values\"",
      "}",
      "",
      "",
      "data \"nutanix_category_key\" \"test_key_value\" {",
      "    name = \"${nutanix_category_key.test_key_value.name}\"",
      "}"
    ]
  },
  "nutanix-data-cluster": {
    "description": "Defines cluster",
    "prefix": "tf-nutanix-data-cluster",
    "body": [
      "data \"nutanix_cluster\" \"cluster\" {",
      "   cluster_id = \"${data.nutanix_clusters.clusters.entities.1.metadata.uuid}\"",
      "}`"
    ]
  },
  "nutanix-data-clusters": {
    "description": "Defines clusters",
    "prefix": "tf-nutanix-data-clusters",
    "body": [
      "data \"nutanix_clusters\" \"clusters\" {}"
    ]
  },
  "nutanix-data-image": {
    "description": "Defines image",
    "prefix": "tf-nutanix-data-image",
    "body": [
      "resource \"nutanix_image\" \"test\" {",
      "  name        = \"Ubuntu\"",
      "  description = \"Ubuntu\"",
      "  source_uri  = \"http://archive.ubuntu.com/ubuntu/dists/bionic/main/installer-amd64/current/images/netboot/mini.iso\"",
      "}",
      "",
      "",
      "data \"nutanix_image\" \"test\" {",
      "    image_id = \"${nutanix_image.test.id}\"",
      "}",
      "",
      "data \"nutanix_image\" \"testname\" {",
      "    image_name = \"${nutanix_image.test.name}\"",
      "}"
    ]
  },
  "nutanix-data-network_security_rule": {
    "description": "Defines network_security_rule",
    "prefix": "tf-nutanix-data-network_security_rule",
    "body": [
      "resource \"nutanix_category_key\" \"test-category-key\"{",
      "    name = \"TIER-1\"",
      "  description = \"TIER Category Key\"",
      "}",
      "",
      "",
      "resource \"nutanix_category_value\" \"WEB\"{",
      "    name = \"${nutanix_category_key.test-category-key.id}\"",
      "    description = \"WEB Category Value\"",
      "   value = \"WEB-1\"",
      "}",
      "",
      "resource \"nutanix_category_value\" \"APP\"{",
      "    name = \"${nutanix_category_key.test-category-key.id}\"",
      "    description = \"APP Category Value\"",
      "   value = \"APP-1\"",
      "}",
      "",
      "resource \"nutanix_category_value\" \"DB\"{",
      "    name = \"${nutanix_category_key.test-category-key.id}\"",
      "    description = \"DB Category Value\"",
      "    value = \"DB-1\"",
      "}",
      "",
      "resource \"nutanix_category_value\" \"ashwini\"{",
      "    name = \"${nutanix_category_key.test-category-key.id}\"",
      "    description = \"ashwini Category Value\"",
      "    value = \"ashwini-1\"",
      "}",
      "",
      "",
      "resource \"nutanix_network_security_rule\" \"TEST-TIER\" {",
      "  name        = \"RULE-1-TIERS\"",
      "  description = \"rule 1 tiers\"",
      "",
      "  app_rule_action = \"APPLY\"",
      "",
      "  app_rule_inbound_allow_list = [",
      "    {",
      "      peer_specification_type = \"FILTER\"",
      "      filter_type             = \"CATEGORIES_MATCH_ALL\"",
      "      filter_kind_list        = [\"vm\"]",
      "",
      "      filter_params = [",
      "        {",
      "          name   = \"${nutanix_category_key.test-category-key.id}\"",
      "          values = [\"${nutanix_category_value.WEB.id}\"]",
      "        },",
      "      ]",
      "    },",
      "  ]",
      "",
      "  app_rule_target_group_default_internal_policy = \"DENY_ALL\"",
      "",
      "  app_rule_target_group_peer_specification_type = \"FILTER\"",
      "",
      "  app_rule_target_group_filter_type = \"CATEGORIES_MATCH_ALL\"",
      "",
      "  app_rule_target_group_filter_kind_list = [\"vm\"]",
      "",
      "  app_rule_target_group_filter_params = [",
      "    {",
      "      name   = \"${nutanix_category_key.test-category-key.id}\"",
      "      values = [\"${nutanix_category_value.APP.id}\"]",
      "    },",
      "    {",
      "      name   = \"${nutanix_category_key.test-category-key.id}\"",
      "      values = [\"${nutanix_category_value.ashwini.id}\"]",
      "    },",
      "  ]",
      "",
      "  app_rule_outbound_allow_list = [",
      "    {",
      "      peer_specification_type = \"FILTER\"",
      "      filter_type             = \"CATEGORIES_MATCH_ALL\"",
      "      filter_kind_list        = [\"vm\"]",
      "",
      "      filter_params = [",
      "        {",
      "          name   = \"${nutanix_category_key.test-category-key.id}\"",
      "          values = [\"${nutanix_category_value.DB.id}\"]",
      "        },",
      "      ]",
      "    },",
      "  ]",
      "}",
      "",
      "data \"nutanix_network_security_rule\" \"test\" {",
      "  network_security_rule_id = \"${nutanix_network_security_rule.TEST-TIER.id}\"",
      "}"
    ]
  },
  "nutanix-data-subnet": {
    "description": "Defines subnet",
    "prefix": "tf-nutanix-data-subnet",
    "body": [
      "data \"nutanix_clusters\" \"clusters\" {",
      "  metadata = {",
      "    length = 2",
      "  }",
      "}",
      "",
      "output \"cluster\" {",
      "  value = \"${data.nutanix_clusters.clusters.entities.0.metadata.UUID}\"",
      "}",
      "",
      "resource \"nutanix_subnet\" \"test\" {",
      "  name = \"dou_vlan0_test_%d\"",
      "",
      "  cluster_reference = {",
      "  kind = \"cluster\"",
      "  UUID = \"${data.nutanix_clusters.clusters.entities.0.metadata.UUID}\"",
      "}",
      "",
      "  vlan_id = 201",
      "  subnet_type = \"VLAN\"",
      "",
      "  prefix_length = 24",
      "  default_gateway_ip = \"192.168.0.1\"",
      "  subnet_ip = \"192.168.0.0\"",
      "  #ip_config_pool_list_ranges = [\"192.168.0.5\", \"192.168.0.100\"]",
      "",
      "  dhcp_options {",
      "    boot_file_name = \"bootfile\"",
      "    tftp_server_name = \"192.168.0.252\"",
      "    domain_name = \"nutanix\"",
      "  }",
      "",
      "  dhcp_domain_name_server_list = [\"8.8.8.8\", \"4.2.2.2\"]",
      "  dhcp_domain_search_list = [\"nutanix.com\", \"calm.io\"]",
      "}",
      "",
      "data \"nutanix_subnet\" \"test\" {",
      "  subnet_id = \"${nutanix_subnet.test.id}\"",
      "}",
      "",
      "data \"nutanix_subnet\" \"test-name\" {",
      "  subnet_name = \"${nutanix_subnet.test.name}\"",
      "}"
    ]
  },
  "nutanix-data-virtual_machine": {
    "description": "Defines virtual_machine",
    "prefix": "tf-nutanix-data-virtual_machine",
    "body": [
      "data \"nutanix_clusters\" \"clusters\" {",
      " metadata = {",
      "  length = 2",
      " }",
      "}",
      "",
      "output \"cluster\" {",
      " value = \"${data.nutanix_clusters.clusters.entities.0.metadata.uuid}\"",
      "}",
      "",
      "resource \"nutanix_virtual_machine\" \"vm1\" {",
      " name = \"test-dou-%d\"",
      " cluster_uuid= \"${data.nutanix_clusters.clusters.entities.0.metadata.uuid}\"",
      "",
      " num_vcpus_per_socket = 1",
      " num_sockets     = 1",
      " memory_size_mib   = 2048",
      " power_state     = \"ON\"",
      "}",
      "",
      "data \"nutanix_virtual_machine\" \"nutanix_virtual_machine\" {",
      " vm_id = \"${nutanix_virtual_machine.vm1.id}\"",
      "}"
    ]
  },
  "nutanix-data-volume_group": {
    "description": "Defines volume_group",
    "prefix": "tf-nutanix-data-volume_group",
    "body": [
      "resource \"nutanix_volume_group\" \"test\" {",
      "  name        = \"VG Test\"",
      "  description = \"VG Test Description\"",
      "",
      "}",
      "",
      "data \"nutanix_volume_group\" \"test\" {",
      "    volume_group_id = \"${nutanix_volume_group.test.id}\"",
      "}"
    ]
  },
  "nutanix-resource-category_key": {
    "description": "Defines category_key",
    "prefix": "tf-nutanix-resource-category_key",
    "body": [
      "resource \"nutanix_category_key\" \"test\"{",
      "    name = \"app-support-%d\"",
      "    description = \"App Support Category Key\"",
      "}"
    ]
  },
  "nutanix-resource-category_value": {
    "description": "Defines category_value",
    "prefix": "tf-nutanix-resource-category_value",
    "body": [
      "resource \"nutanix_category_key\" \"test-category-key\"{",
      "    name = \"app-support-1\"",
      "    description = \"App Support Category Key\"",
      "}",
      "",
      "",
      "resource \"nutanix_category_value\" \"test\"{",
      "    name = \"${nutanix_category_key.test-category-key.id}\"",
      "    description = \"Test Category Value\"",
      "    value = \"test-value\"",
      "}"
    ]
  },
  "nutanix-resource-image": {
    "description": "Defines image",
    "prefix": "tf-nutanix-resource-image",
    "body": [
      "resource \"nutanix_image\" \"test\" {",
      "  name        = \"Ubuntu\"",
      "  description = \"Ubuntu\"",
      "  source_uri  = \"http://archive.ubuntu.com/ubuntu/dists/bionic/main/installer-amd64/current/images/netboot/mini.iso\"",
      "}"
    ]
  },
  "nutanix-resource-network_security_rule": {
    "description": "Defines network_security_rule",
    "prefix": "tf-nutanix-resource-network_security_rule",
    "body": [
      "resource \"nutanix_category_key\" \"test-category-key\"{",
      "  name = \"TIER-1\"",
      "  description = \"TIER Category Key\"",
      "}",
      "",
      "",
      "resource \"nutanix_category_value\" \"WEB\"{",
      "  name = \"${nutanix_category_key.test-category-key.id}\"",
      "  description = \"WEB Category Value\"",
      "  value = \"WEB-1\"",
      "}",
      "",
      "resource \"nutanix_category_value\" \"APP\"{",
      "    name = \"${nutanix_category_key.test-category-key.id}\"",
      "    description = \"APP Category Value\"",
      "    value = \"APP-1\"",
      "}",
      "",
      "resource \"nutanix_category_value\" \"DB\"{",
      "    name = \"${nutanix_category_key.test-category-key.id}\"",
      "    description = \"DB Category Value\"",
      "    value = \"DB-1\"",
      "}",
      "",
      "resource \"nutanix_category_value\" \"ashwini\"{",
      "    name = \"${nutanix_category_key.test-category-key.id}\"",
      "    description = \"ashwini Category Value\"",
      "    value = \"ashwini-1\"",
      "}",
      "",
      "",
      "resource \"nutanix_network_security_rule\" \"TEST-TIER\" {",
      "  name        = \"RULE-1-TIERS\"",
      "  description = \"rule 1 tiers\"",
      "",
      "  app_rule_action = \"APPLY\"",
      "",
      "  app_rule_inbound_allow_list = [",
      "    {",
      "      peer_specification_type = \"FILTER\"",
      "      filter_type             = \"CATEGORIES_MATCH_ALL\"",
      "      filter_kind_list        = [\"vm\"]",
      "",
      "      filter_params = [",
      "        {",
      "          name   = \"${nutanix_category_key.test-category-key.id}\"",
      "          values = [\"${nutanix_category_value.WEB.id}\"]",
      "        },",
      "      ]",
      "    },",
      "  ]",
      "",
      "  app_rule_target_group_default_internal_policy = \"DENY_ALL\"",
      "",
      "  app_rule_target_group_peer_specification_type = \"FILTER\"",
      "",
      "  app_rule_target_group_filter_type = \"CATEGORIES_MATCH_ALL\"",
      "",
      "  app_rule_target_group_filter_kind_list = [\"vm\"]",
      "",
      "  app_rule_target_group_filter_params = [",
      "    {",
      "      name   = \"${nutanix_category_key.test-category-key.id}\"",
      "      values = [\"${nutanix_category_value.APP.id}\"]",
      "    },",
      "    {",
      "      name   = \"${nutanix_category_key.test-category-key.id}\"",
      "      values = [\"${nutanix_category_value.ashwini.id}\"]",
      "    },",
      "  ]",
      "",
      "  app_rule_outbound_allow_list = [",
      "    {",
      "      peer_specification_type = \"FILTER\"",
      "      filter_type             = \"CATEGORIES_MATCH_ALL\"",
      "      filter_kind_list        = [\"vm\"]",
      "",
      "      filter_params = [",
      "        {",
      "          name   = \"${nutanix_category_key.test-category-key.id}\"",
      "          values = [\"${nutanix_category_value.DB.id}\"]",
      "        },",
      "      ]",
      "    },",
      "  ]",
      "}"
    ]
  },
  "nutanix-resource-subnet": {
    "description": "Defines subnet",
    "prefix": "tf-nutanix-resource-subnet",
    "body": [
      "data \"nutanix_clusters\" \"clusters\" {",
      "  metadata = {",
      "    length = 2",
      "  }",
      "}",
      "",
      "output \"cluster\" {",
      "  value = \"${data.nutanix_clusters.clusters.entities.0.metadata.uuid}\"",
      "}",
      "",
      "resource \"nutanix_subnet\" \"next-iac-managed\" {",
      "  # What cluster will this VLAN live on?",
      "  cluster_uuid = \"${data.nutanix_clusters.clusters.entities.0.metadata.uuid}\"",
      "",
      "  # General Information",
      "  name        = \"next-iac-managed-%d\"",
      "  vlan_id     = 101",
      "  subnet_type = \"VLAN\"",
      "",
      "  # Managed L3 Networks",
      "  # This bit is only needed if you intend to turn on IPAM",
      "  prefix_length = 20",
      "",
      "  default_gateway_ip = \"10.5.80.1\"",
      "  subnet_ip          = \"10.5.80.0\"",
      "",
      "  dhcp_domain_name_server_list = [\"8.8.8.8\", \"4.2.2.2\"]",
      "  dhcp_domain_search_list      = [\"nutanix.com\", \"eng.nutanix.com\"]",
      "}"
    ]
  },
  "nutanix-resource-virtual_machine": {
    "description": "Defines virtual_machine",
    "prefix": "tf-nutanix-resource-virtual_machine",
    "body": [
      "resource \"nutanix_category_key\" \"test-category-key\"{",
      "    name        = \"app-suppport-1\"",
      "    description = \"App Support Category Key\"",
      "}",
      "",
      "",
      "resource \"nutanix_category_value\" \"test\"{",
      "    name        = \"${nutanix_category_key.test-category-key.id}\"",
      "    description = \"Test Category Value\"",
      "    value       = \"test-value\"",
      "}",
      "",
      "data \"nutanix_clusters\" \"clusters\" {",
      "  metadata = {",
      "    length = 2",
      "  }",
      "}",
      "",
      "resource \"nutanix_virtual_machine\" \"vm1\" {",
      "  name = \"test-dou\"",
      "  cluster_uuid = \"${data.nutanix_clusters.clusters.entities.0.metadata.uuid}\"",
      "",
      "  categories = [{",
      "      name   = \"${nutanix_category_key.test-category-key.id}\"",
      "      value = \"${nutanix_category_value.test.id}\"",
      "  }]",
      "",
      "",
      "  num_vcpus_per_socket = 1",
      "  num_sockets          = 1",
      "  memory_size_mib      = 2048",
      "}"
    ]
  },
  "nutanix-resource-volume_group": {
    "description": "Defines volume_group",
    "prefix": "tf-nutanix-resource-volume_group",
    "body": [
      "resource \"nutanix_volume_group\" \"test_volume\" {",
      "  name        = \"Test Volume Group\"",
      "  description = \"Test Volume Group Description\"",
      "}"
    ]
  },
  "oci-data-audit_audit_events": {
    "description": "Defines audit_audit_events",
    "prefix": "tf-oci-data-audit_audit_events",
    "body": [
      "data \"oci_audit_events\" \"test_audit_events\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tend_time = \"${var.audit_event_end_time}\"",
      "\tstart_time = \"${var.audit_event_start_time}\"",
      "}"
    ]
  },
  "oci-data-audit_configuration": {
    "description": "Defines audit_configuration",
    "prefix": "tf-oci-data-audit_configuration",
    "body": [
      "data \"oci_audit_configuration\" \"test_configuration\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.tenancy_ocid}\"",
      "}"
    ]
  },
  "oci-data-auto_scaling_auto_scaling_configuration": {
    "description": "Defines auto_scaling_auto_scaling_configuration",
    "prefix": "tf-oci-data-auto_scaling_auto_scaling_configuration",
    "body": [
      "data \"oci_autoscaling_auto_scaling_configuration\" \"test_auto_scaling_configuration\" {",
      "\t#Required",
      "\tauto_scaling_configuration_id = \"${oci_autoscaling_auto_scaling_configuration.test_auto_scaling_configuration.id}\"",
      "}"
    ]
  },
  "oci-data-auto_scaling_auto_scaling_configurations": {
    "description": "Defines auto_scaling_auto_scaling_configurations",
    "prefix": "tf-oci-data-auto_scaling_auto_scaling_configurations",
    "body": [
      "data \"oci_autoscaling_auto_scaling_configurations\" \"test_auto_scaling_configurations\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.auto_scaling_configuration_display_name}\"",
      "}"
    ]
  },
  "oci-data-budget_alert_rule": {
    "description": "Defines budget_alert_rule",
    "prefix": "tf-oci-data-budget_alert_rule",
    "body": [
      "data \"oci_budget_alert_rule\" \"test_alert_rule\" {",
      "\t#Required",
      "\talert_rule_id = \"${oci_budget_alert_rule.test_alert_rule.id}\"",
      "\tbudget_id = \"${oci_budget_budget.test_budget.id}\"",
      "}"
    ]
  },
  "oci-data-budget_alert_rules": {
    "description": "Defines budget_alert_rules",
    "prefix": "tf-oci-data-budget_alert_rules",
    "body": [
      "data \"oci_budget_alert_rules\" \"test_alert_rules\" {",
      "\t#Required",
      "\tbudget_id = \"${oci_budget_budget.test_budget.id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.alert_rule_display_name}\"",
      "\tstate = \"${var.alert_rule_state}\"",
      "}"
    ]
  },
  "oci-data-budget_budget": {
    "description": "Defines budget_budget",
    "prefix": "tf-oci-data-budget_budget",
    "body": [
      "data \"oci_budget_budget\" \"test_budget\" {",
      "\t#Required",
      "\tbudget_id = \"${oci_budget_budget.test_budget.id}\"",
      "}"
    ]
  },
  "oci-data-budget_budgets": {
    "description": "Defines budget_budgets",
    "prefix": "tf-oci-data-budget_budgets",
    "body": [
      "data \"oci_budget_budgets\" \"test_budgets\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.tenancy_ocid}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.budget_display_name}\"",
      "\tstate = \"${var.budget_state}\"",
      "\ttarget_type = \"${var.budget_target_type}\"",
      "}"
    ]
  },
  "oci-data-containerengine_cluster_kube_config": {
    "description": "Defines containerengine_cluster_kube_config",
    "prefix": "tf-oci-data-containerengine_cluster_kube_config",
    "body": [
      "data \"oci_containerengine_cluster_kube_config\" \"test_cluster_kube_config\" {",
      "\t#Required",
      "\tcluster_id = \"${oci_containerengine_cluster.test_cluster.id}\"",
      "",
      "\t#Optional",
      "\texpiration = \"${var.cluster_kube_config_expiration}\"",
      "\ttoken_version = \"${var.cluster_kube_config_token_version}\"",
      "}"
    ]
  },
  "oci-data-containerengine_cluster_option": {
    "description": "Defines containerengine_cluster_option",
    "prefix": "tf-oci-data-containerengine_cluster_option",
    "body": [
      "data \"oci_containerengine_cluster_option\" \"test_cluster_option\" {",
      "\t#Required",
      "\tcluster_option_id = \"${oci_containerengine_cluster_option.test_cluster_option.id}\"",
      "}"
    ]
  },
  "oci-data-containerengine_clusters": {
    "description": "Defines containerengine_clusters",
    "prefix": "tf-oci-data-containerengine_clusters",
    "body": [
      "data \"oci_containerengine_clusters\" \"test_clusters\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tname = \"${var.cluster_name}\"",
      "\tstate = \"${var.cluster_state}\"",
      "}"
    ]
  },
  "oci-data-containerengine_node_pool": {
    "description": "Defines containerengine_node_pool",
    "prefix": "tf-oci-data-containerengine_node_pool",
    "body": [
      "data \"oci_containerengine_node_pool\" \"test_node_pool\" {",
      "\t#Required",
      "\tnode_pool_id = \"${oci_containerengine_node_pool.test_node_pool.id}\"",
      "}"
    ]
  },
  "oci-data-containerengine_node_pool_option": {
    "description": "Defines containerengine_node_pool_option",
    "prefix": "tf-oci-data-containerengine_node_pool_option",
    "body": [
      "data \"oci_containerengine_node_pool_option\" \"test_node_pool_option\" {",
      "\t#Required",
      "\tnode_pool_option_id = \"${oci_containerengine_node_pool_option.test_node_pool_option.id}\"",
      "}"
    ]
  },
  "oci-data-containerengine_node_pools": {
    "description": "Defines containerengine_node_pools",
    "prefix": "tf-oci-data-containerengine_node_pools",
    "body": [
      "data \"oci_containerengine_node_pools\" \"test_node_pools\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tcluster_id = \"${oci_containerengine_cluster.test_cluster.id}\"",
      "\tname = \"${var.node_pool_name}\"",
      "}"
    ]
  },
  "oci-data-containerengine_work_request_errors": {
    "description": "Defines containerengine_work_request_errors",
    "prefix": "tf-oci-data-containerengine_work_request_errors",
    "body": [
      "data \"oci_containerengine_work_request_errors\" \"test_work_request_errors\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\twork_request_id = \"${oci_containerengine_work_request.test_work_request.id}\"",
      "}"
    ]
  },
  "oci-data-containerengine_work_request_log_entries": {
    "description": "Defines containerengine_work_request_log_entries",
    "prefix": "tf-oci-data-containerengine_work_request_log_entries",
    "body": [
      "data \"oci_containerengine_work_request_log_entries\" \"test_work_request_log_entries\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\twork_request_id = \"${oci_containerengine_work_request.test_work_request.id}\"",
      "}"
    ]
  },
  "oci-data-containerengine_work_requests": {
    "description": "Defines containerengine_work_requests",
    "prefix": "tf-oci-data-containerengine_work_requests",
    "body": [
      "data \"oci_containerengine_work_requests\" \"test_work_requests\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tcluster_id = \"${oci_containerengine_cluster.test_cluster.id}\"",
      "\tresource_id = \"${oci_containerengine_resource.test_resource.id}\"",
      "\tresource_type = \"${var.work_request_resource_type}\"",
      "\tstatus = \"${var.work_request_status}\"",
      "}"
    ]
  },
  "oci-data-core_app_catalog_listing": {
    "description": "Defines core_app_catalog_listing",
    "prefix": "tf-oci-data-core_app_catalog_listing",
    "body": [
      "data \"oci_core_app_catalog_listing\" \"test_app_catalog_listing\" {",
      "\t#Required",
      "\tlisting_id = \"${oci_core_listing.test_listing.id}\"",
      "}"
    ]
  },
  "oci-data-core_app_catalog_listing_resource_version": {
    "description": "Defines core_app_catalog_listing_resource_version",
    "prefix": "tf-oci-data-core_app_catalog_listing_resource_version",
    "body": [
      "data \"oci_core_app_catalog_listing_resource_version\" \"test_app_catalog_listing_resource_version\" {",
      "\t#Required",
      "\tlisting_id = \"${oci_core_listing.test_listing.id}\"",
      "\tresource_version = \"${var.app_catalog_listing_resource_version_resource_version}\"",
      "}"
    ]
  },
  "oci-data-core_app_catalog_listing_resource_versions": {
    "description": "Defines core_app_catalog_listing_resource_versions",
    "prefix": "tf-oci-data-core_app_catalog_listing_resource_versions",
    "body": [
      "data \"oci_core_app_catalog_listing_resource_versions\" \"test_app_catalog_listing_resource_versions\" {",
      "\t#Required",
      "\tlisting_id = \"${oci_core_listing.test_listing.id}\"",
      "}"
    ]
  },
  "oci-data-core_app_catalog_listings": {
    "description": "Defines core_app_catalog_listings",
    "prefix": "tf-oci-data-core_app_catalog_listings",
    "body": [
      "data \"oci_core_app_catalog_listings\" \"test_app_catalog_listings\" {",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.app_catalog_listing_display_name}\"",
      "\tpublisher_name = \"${var.app_catalog_listing_publisher_name}\"",
      "\tpublisher_type = \"${var.app_catalog_listing_publisher_type}\"",
      "}"
    ]
  },
  "oci-data-core_app_catalog_subscriptions": {
    "description": "Defines core_app_catalog_subscriptions",
    "prefix": "tf-oci-data-core_app_catalog_subscriptions",
    "body": [
      "data \"oci_core_app_catalog_subscriptions\" \"test_app_catalog_subscriptions\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tlisting_id = \"${oci_core_listing.test_listing.id}\"",
      "}"
    ]
  },
  "oci-data-core_boot_volume": {
    "description": "Defines core_boot_volume",
    "prefix": "tf-oci-data-core_boot_volume",
    "body": [
      "data \"oci_core_boot_volume\" \"test_boot_volume\" {",
      "\t#Required",
      "\tboot_volume_id = \"${oci_core_boot_volume.test_boot_volume.id}\"",
      "}"
    ]
  },
  "oci-data-core_boot_volume_attachments": {
    "description": "Defines core_boot_volume_attachments",
    "prefix": "tf-oci-data-core_boot_volume_attachments",
    "body": [
      "data \"oci_core_boot_volume_attachments\" \"test_boot_volume_attachments\" {",
      "\t#Required",
      "\tavailability_domain = \"${var.boot_volume_attachment_availability_domain}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tboot_volume_id = \"${oci_core_boot_volume.test_boot_volume.id}\"",
      "\tinstance_id = \"${oci_core_instance.test_instance.id}\"",
      "}"
    ]
  },
  "oci-data-core_boot_volume_backup": {
    "description": "Defines core_boot_volume_backup",
    "prefix": "tf-oci-data-core_boot_volume_backup",
    "body": [
      "data \"oci_core_boot_volume_backup\" \"test_boot_volume_backup\" {",
      "\t#Required",
      "\tboot_volume_backup_id = \"${oci_core_boot_volume_backup.test_boot_volume_backup.id}\"",
      "}"
    ]
  },
  "oci-data-core_boot_volume_backups": {
    "description": "Defines core_boot_volume_backups",
    "prefix": "tf-oci-data-core_boot_volume_backups",
    "body": [
      "data \"oci_core_boot_volume_backups\" \"test_boot_volume_backups\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tboot_volume_id = \"${oci_core_boot_volume.test_boot_volume.id}\"",
      "\tdisplay_name = \"${var.boot_volume_backup_display_name}\"",
      "\tstate = \"${var.boot_volume_backup_state}\"",
      "}"
    ]
  },
  "oci-data-core_boot_volumes": {
    "description": "Defines core_boot_volumes",
    "prefix": "tf-oci-data-core_boot_volumes",
    "body": [
      "data \"oci_core_boot_volumes\" \"test_boot_volumes\" {",
      "\t#Required",
      "\tavailability_domain = \"${var.boot_volume_availability_domain}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tvolume_group_id = \"${oci_core_volume_group.test_volume_group.id}\"",
      "}"
    ]
  },
  "oci-data-core_console_histories": {
    "description": "Defines core_console_histories",
    "prefix": "tf-oci-data-core_console_histories",
    "body": [
      "data \"oci_core_console_histories\" \"test_console_histories\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tavailability_domain = \"${var.console_history_availability_domain}\"",
      "\tinstance_id = \"${oci_core_instance.test_instance.id}\"",
      "\tstate = \"${var.console_history_state}\"",
      "}"
    ]
  },
  "oci-data-core_console_history_content": {
    "description": "Defines core_console_history_content",
    "prefix": "tf-oci-data-core_console_history_content",
    "body": [
      "data \"oci_core_console_history_data\" \"test_console_history_data\" {",
      "\t#Required",
      "\tconsole_history_id = \"${oci_core_console_history.test_console_history.id}\"",
      "",
      "\t#Optional",
      "\tlength = \"${var.console_history_content_length}\"",
      "\toffset = \"${var.console_history_content_offset}\"",
      "}"
    ]
  },
  "oci-data-core_cpes": {
    "description": "Defines core_cpes",
    "prefix": "tf-oci-data-core_cpes",
    "body": [
      "data \"oci_core_cpes\" \"test_cpes\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "}"
    ]
  },
  "oci-data-core_cross_connect": {
    "description": "Defines core_cross_connect",
    "prefix": "tf-oci-data-core_cross_connect",
    "body": [
      "data \"oci_core_cross_connect\" \"test_cross_connect\" {",
      "\t#Required",
      "\tcross_connect_id = \"${oci_core_cross_connect.test_cross_connect.id}\"",
      "}"
    ]
  },
  "oci-data-core_cross_connect_group": {
    "description": "Defines core_cross_connect_group",
    "prefix": "tf-oci-data-core_cross_connect_group",
    "body": [
      "data \"oci_core_cross_connect_group\" \"test_cross_connect_group\" {",
      "\t#Required",
      "\tcross_connect_group_id = \"${oci_core_cross_connect_group.test_cross_connect_group.id}\"",
      "}"
    ]
  },
  "oci-data-core_cross_connect_groups": {
    "description": "Defines core_cross_connect_groups",
    "prefix": "tf-oci-data-core_cross_connect_groups",
    "body": [
      "data \"oci_core_cross_connect_groups\" \"test_cross_connect_groups\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.cross_connect_group_display_name}\"",
      "\tstate = \"${var.cross_connect_group_state}\"",
      "}"
    ]
  },
  "oci-data-core_cross_connect_locations": {
    "description": "Defines core_cross_connect_locations",
    "prefix": "tf-oci-data-core_cross_connect_locations",
    "body": [
      "data \"oci_core_cross_connect_locations\" \"test_cross_connect_locations\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "}"
    ]
  },
  "oci-data-core_cross_connect_port_speed_shapes": {
    "description": "Defines core_cross_connect_port_speed_shapes",
    "prefix": "tf-oci-data-core_cross_connect_port_speed_shapes",
    "body": [
      "data \"oci_core_cross_connect_port_speed_shapes\" \"test_cross_connect_port_speed_shapes\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "}"
    ]
  },
  "oci-data-core_cross_connect_status": {
    "description": "Defines core_cross_connect_status",
    "prefix": "tf-oci-data-core_cross_connect_status",
    "body": [
      "data \"oci_core_cross_connect_status\" \"test_cross_connect_status\" {",
      "\t#Required",
      "\tcross_connect_id = \"${oci_core_cross_connect.test_cross_connect.id}\"",
      "}"
    ]
  },
  "oci-data-core_cross_connects": {
    "description": "Defines core_cross_connects",
    "prefix": "tf-oci-data-core_cross_connects",
    "body": [
      "data \"oci_core_cross_connects\" \"test_cross_connects\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tcross_connect_group_id = \"${oci_core_cross_connect_group.test_cross_connect_group.id}\"",
      "\tdisplay_name = \"${var.cross_connect_display_name}\"",
      "\tstate = \"${var.cross_connect_state}\"",
      "}"
    ]
  },
  "oci-data-core_dhcp_options": {
    "description": "Defines core_dhcp_options",
    "prefix": "tf-oci-data-core_dhcp_options",
    "body": [
      "data \"oci_core_dhcp_options\" \"test_dhcp_options\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tvcn_id = \"${oci_core_vcn.test_vcn.id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.dhcp_options_display_name}\"",
      "\tstate = \"${var.dhcp_options_state}\"",
      "}"
    ]
  },
  "oci-data-core_drg_attachments": {
    "description": "Defines core_drg_attachments",
    "prefix": "tf-oci-data-core_drg_attachments",
    "body": [
      "data \"oci_core_drg_attachments\" \"test_drg_attachments\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdrg_id = \"${oci_core_drg.test_drg.id}\"",
      "\tvcn_id = \"${oci_core_vcn.test_vcn.id}\"",
      "}"
    ]
  },
  "oci-data-core_drgs": {
    "description": "Defines core_drgs",
    "prefix": "tf-oci-data-core_drgs",
    "body": [
      "data \"oci_core_drgs\" \"test_drgs\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "}"
    ]
  },
  "oci-data-core_fast_connect_provider_service": {
    "description": "Defines core_fast_connect_provider_service",
    "prefix": "tf-oci-data-core_fast_connect_provider_service",
    "body": [
      "data \"oci_core_fast_connect_provider_service\" \"test_fast_connect_provider_service\" {",
      "\t#Required",
      "\tprovider_service_id = \"${data.oci_core_fast_connect_provider_services.test_fast_connect_provider_services.fast_connect_provider_services.0.id}\"",
      "}"
    ]
  },
  "oci-data-core_fast_connect_provider_service_key": {
    "description": "Defines core_fast_connect_provider_service_key",
    "prefix": "tf-oci-data-core_fast_connect_provider_service_key",
    "body": [
      "data \"oci_core_fast_connect_provider_service_key\" \"test_fast_connect_provider_service_key\" {",
      "\t#Required",
      "\tprovider_service_id = \"${data.oci_core_fast_connect_provider_services.test_fast_connect_provider_services.fast_connect_provider_services.0.id}\"",
      "\tprovider_service_key_name = \"${var.fast_connect_provider_service_key_provider_service_key_name}\"",
      "}"
    ]
  },
  "oci-data-core_fast_connect_provider_services": {
    "description": "Defines core_fast_connect_provider_services",
    "prefix": "tf-oci-data-core_fast_connect_provider_services",
    "body": [
      "data \"oci_core_fast_connect_provider_services\" \"test_fast_connect_provider_services\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "}"
    ]
  },
  "oci-data-core_images": {
    "description": "Defines core_images",
    "prefix": "tf-oci-data-core_images",
    "body": [
      "data \"oci_core_images\" \"test_images\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.image_display_name}\"",
      "\toperating_system = \"${var.image_operating_system}\"",
      "\toperating_system_version = \"${var.image_operating_system_version}\"",
      "\tshape = \"${var.image_shape}\"",
      "\tstate = \"${var.image_state}\"",
      "\tsort_by = \"${var.image_sort_by}\"",
      "\tsort_order = \"${var.image_sort_order}\"",
      "}"
    ]
  },
  "oci-data-core_instance": {
    "description": "Defines core_instance",
    "prefix": "tf-oci-data-core_instance",
    "body": [
      "data \"oci_core_instance\" \"test_instance\" {",
      "\t#Required",
      "\tinstance_id = \"${oci_core_instance.test_instance.id}\"",
      "}"
    ]
  },
  "oci-data-core_instance_configuration": {
    "description": "Defines core_instance_configuration",
    "prefix": "tf-oci-data-core_instance_configuration",
    "body": [
      "data \"oci_core_instance_configuration\" \"test_instance_configuration\" {",
      "\t#Required",
      "\tinstance_configuration_id = \"${oci_core_instance_configuration.test_instance_configuration.id}\"",
      "}"
    ]
  },
  "oci-data-core_instance_configurations": {
    "description": "Defines core_instance_configurations",
    "prefix": "tf-oci-data-core_instance_configurations",
    "body": [
      "data \"oci_core_instance_configurations\" \"test_instance_configurations\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "}"
    ]
  },
  "oci-data-core_instance_console_connections": {
    "description": "Defines core_instance_console_connections",
    "prefix": "tf-oci-data-core_instance_console_connections",
    "body": [
      "data \"oci_core_instance_console_connections\" \"test_instance_console_connections\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tinstance_id = \"${oci_core_instance.test_instance.id}\"",
      "}"
    ]
  },
  "oci-data-core_instance_credential": {
    "description": "Defines core_instance_credential",
    "prefix": "tf-oci-data-core_instance_credential",
    "body": [
      "data \"oci_core_instance_credentials\" \"test_instance_credential\" {",
      "\t#Required",
      "\tinstance_id = \"${oci_core_instance.test_instance.id}\"",
      "}"
    ]
  },
  "oci-data-core_instance_devices": {
    "description": "Defines core_instance_devices",
    "prefix": "tf-oci-data-core_instance_devices",
    "body": [
      "data \"oci_core_instance_devices\" \"test_instance_devices\" {",
      "\t#Required",
      "\tinstance_id = \"${oci_core_instance.test_instance.id}\"",
      "",
      "\t#Optional",
      "\tis_available = \"${var.instance_device_is_available}\"",
      "\tname = \"${var.instance_device_name}\"",
      "}"
    ]
  },
  "oci-data-core_instance_pool": {
    "description": "Defines core_instance_pool",
    "prefix": "tf-oci-data-core_instance_pool",
    "body": [
      "data \"oci_core_instance_pool\" \"test_instance_pool\" {",
      "\t#Required",
      "\tinstance_pool_id = \"${oci_core_instance_pool.test_instance_pool.id}\"",
      "}"
    ]
  },
  "oci-data-core_instance_pool_instances": {
    "description": "Defines core_instance_pool_instances",
    "prefix": "tf-oci-data-core_instance_pool_instances",
    "body": [
      "data \"oci_core_instance_pool_instances\" \"test_instance_pool_instances\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tinstance_pool_id = \"${oci_core_instance_pool.test_instance_pool.id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.instance_pool_instance_display_name}\"",
      "}"
    ]
  },
  "oci-data-core_instance_pool_load_balancer_attachment": {
    "description": "Defines core_instance_pool_load_balancer_attachment",
    "prefix": "tf-oci-data-core_instance_pool_load_balancer_attachment",
    "body": [
      "data \"oci_core_instance_pool_load_balancer_attachment\" \"test_instance_pool_load_balancer_attachment\" {",
      "\t#Required",
      "\tinstance_pool_id = \"${oci_core_instance_pool.test_instance_pool.id}\"",
      "\tinstance_pool_load_balancer_attachment_id = \"${oci_core_instance_pool_load_balancer_attachment.test_instance_pool_load_balancer_attachment.id}\"",
      "}"
    ]
  },
  "oci-data-core_instance_pools": {
    "description": "Defines core_instance_pools",
    "prefix": "tf-oci-data-core_instance_pools",
    "body": [
      "data \"oci_core_instance_pools\" \"test_instance_pools\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.instance_pool_display_name}\"",
      "\tstate = \"${var.instance_pool_state}\"",
      "}"
    ]
  },
  "oci-data-core_instances": {
    "description": "Defines core_instances",
    "prefix": "tf-oci-data-core_instances",
    "body": [
      "data \"oci_core_instances\" \"test_instances\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tavailability_domain = \"${var.instance_availability_domain}\"",
      "\tdisplay_name = \"${var.instance_display_name}\"",
      "\tstate = \"${var.instance_state}\"",
      "}"
    ]
  },
  "oci-data-core_internet_gateways": {
    "description": "Defines core_internet_gateways",
    "prefix": "tf-oci-data-core_internet_gateways",
    "body": [
      "data \"oci_core_internet_gateways\" \"test_internet_gateways\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tvcn_id = \"${oci_core_vcn.test_vcn.id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.internet_gateway_display_name}\"",
      "\tstate = \"${var.internet_gateway_state}\"",
      "}"
    ]
  },
  "oci-data-core_ip_sec_connection_device_config": {
    "description": "Defines core_ip_sec_connection_device_config",
    "prefix": "tf-oci-data-core_ip_sec_connection_device_config",
    "body": [
      "data \"oci_core_ipsec_config\" \"test_ip_sec_connection_device_config\" {",
      "\t#Required",
      "\tipsec_id = \"${oci_core_ipsec.test_ipsec.id}\"",
      "}"
    ]
  },
  "oci-data-core_ip_sec_connection_device_status": {
    "description": "Defines core_ip_sec_connection_device_status",
    "prefix": "tf-oci-data-core_ip_sec_connection_device_status",
    "body": [
      "data \"oci_core_ipsec_status\" \"test_ip_sec_connection_device_status\" {",
      "\t#Required",
      "\tipsec_id = \"${oci_core_ipsec.test_ipsec.id}\"",
      "}"
    ]
  },
  "oci-data-core_ip_sec_connection_tunnel": {
    "description": "Defines core_ip_sec_connection_tunnel",
    "prefix": "tf-oci-data-core_ip_sec_connection_tunnel",
    "body": [
      "data \"oci_core_ipsec_connection_tunnel\" \"test_ip_sec_connection_tunnel\" {",
      "\t#Required",
      "\tipsec_id = \"${oci_core_ipsec.test_ipsec.id}\"",
      "\ttunnel_id = \"${oci_core_tunnel.test_tunnel.id}\"",
      "}"
    ]
  },
  "oci-data-core_ip_sec_connection_tunnels": {
    "description": "Defines core_ip_sec_connection_tunnels",
    "prefix": "tf-oci-data-core_ip_sec_connection_tunnels",
    "body": [
      "data \"oci_core_ipsec_connection_tunnels\" \"test_ip_sec_connection_tunnels\" {",
      "\t#Required",
      "\tipsec_id = \"${oci_core_ipsec.test_ipsec.id}\"",
      "}"
    ]
  },
  "oci-data-core_ip_sec_connections": {
    "description": "Defines core_ip_sec_connections",
    "prefix": "tf-oci-data-core_ip_sec_connections",
    "body": [
      "data \"oci_core_ipsec_connections\" \"test_ip_sec_connections\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tcpe_id = \"${oci_core_cpe.test_cpe.id}\"",
      "\tdrg_id = \"${oci_core_drg.test_drg.id}\"",
      "}"
    ]
  },
  "oci-data-core_letter_of_authority": {
    "description": "Defines core_letter_of_authority",
    "prefix": "tf-oci-data-core_letter_of_authority",
    "body": [
      "data \"oci_core_letter_of_authority\" \"test_letter_of_authority\" {",
      "\t#Required",
      "\tcross_connect_id = \"${oci_core_cross_connect.test_cross_connect.id}\"",
      "}"
    ]
  },
  "oci-data-core_local_peering_gateways": {
    "description": "Defines core_local_peering_gateways",
    "prefix": "tf-oci-data-core_local_peering_gateways",
    "body": [
      "data \"oci_core_local_peering_gateways\" \"test_local_peering_gateways\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tvcn_id = \"${oci_core_vcn.test_vcn.id}\"",
      "}"
    ]
  },
  "oci-data-core_nat_gateway": {
    "description": "Defines core_nat_gateway",
    "prefix": "tf-oci-data-core_nat_gateway",
    "body": [
      "data \"oci_core_nat_gateway\" \"test_nat_gateway\" {",
      "\t#Required",
      "\tnat_gateway_id = \"${oci_core_nat_gateway.test_nat_gateway.id}\"",
      "}"
    ]
  },
  "oci-data-core_nat_gateways": {
    "description": "Defines core_nat_gateways",
    "prefix": "tf-oci-data-core_nat_gateways",
    "body": [
      "data \"oci_core_nat_gateways\" \"test_nat_gateways\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.nat_gateway_display_name}\"",
      "\tstate = \"${var.nat_gateway_state}\"",
      "\tvcn_id = \"${oci_core_vcn.test_vcn.id}\"",
      "}"
    ]
  },
  "oci-data-core_network_security_group": {
    "description": "Defines core_network_security_group",
    "prefix": "tf-oci-data-core_network_security_group",
    "body": [
      "data \"oci_core_network_security_group\" \"test_network_security_group\" {",
      "\t#Required",
      "\tnetwork_security_group_id = \"${oci_core_network_security_group.test_network_security_group.id}\"",
      "}"
    ]
  },
  "oci-data-core_network_security_group_security_rules": {
    "description": "Defines core_network_security_group_security_rules",
    "prefix": "tf-oci-data-core_network_security_group_security_rules",
    "body": [
      "data \"oci_core_network_security_group_security_rules\" \"test_network_security_group_security_rules\" {",
      "\t#Required",
      "\tnetwork_security_group_id = \"${oci_core_network_security_group.test_network_security_group.id}\"",
      "",
      "\t#Optional",
      "\tdirection = \"${var.network_security_group_security_rule_direction}\"",
      "}"
    ]
  },
  "oci-data-core_network_security_group_vnics": {
    "description": "Defines core_network_security_group_vnics",
    "prefix": "tf-oci-data-core_network_security_group_vnics",
    "body": [
      "data \"oci_core_network_security_group_vnics\" \"test_network_security_group_vnics\" {",
      "\t#Required",
      "\tnetwork_security_group_id = \"${oci_core_network_security_group.test_network_security_group.id}\"",
      "}"
    ]
  },
  "oci-data-core_network_security_groups": {
    "description": "Defines core_network_security_groups",
    "prefix": "tf-oci-data-core_network_security_groups",
    "body": [
      "data \"oci_core_network_security_groups\" \"test_network_security_groups\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.network_security_group_display_name}\"",
      "\tstate = \"${var.network_security_group_state}\"",
      "\tvcn_id = \"${oci_core_vcn.test_vcn.id}\"",
      "}"
    ]
  },
  "oci-data-core_peer_region_for_remote_peerings": {
    "description": "Defines core_peer_region_for_remote_peerings",
    "prefix": "tf-oci-data-core_peer_region_for_remote_peerings",
    "body": [
      "data \"oci_core_peer_region_for_remote_peerings\" \"test_peer_region_for_remote_peerings\" {",
      "}"
    ]
  },
  "oci-data-core_private_ip": {
    "description": "Defines core_private_ip",
    "prefix": "tf-oci-data-core_private_ip",
    "body": [
      "data \"oci_core_private_ip\" \"test_private_ip\" {",
      "\t#Required",
      "\tprivate_ip_id = \"${oci_core_private_ip.test_private_ip.id}\"",
      "}"
    ]
  },
  "oci-data-core_private_ips": {
    "description": "Defines core_private_ips",
    "prefix": "tf-oci-data-core_private_ips",
    "body": [
      "# Filter on Subnet OCID",
      "data \"oci_core_private_ips\" \"test_private_ips_by_subnet\" {",
      "\t#Optional",
      "\tsubnet_id = \"${var.private_ip_subnet_id}\"",
      "}"
    ]
  },
  "oci-data-core_public_ip": {
    "description": "Defines core_public_ip",
    "prefix": "tf-oci-data-core_public_ip",
    "body": [
      "data \"oci_core_public_ip\" \"test_oci_core_public_ip_by_id\" {",
      "    id = \"${var.test_public_ip_id}\"",
      "}"
    ]
  },
  "oci-data-core_public_ips": {
    "description": "Defines core_public_ips",
    "prefix": "tf-oci-data-core_public_ips",
    "body": [
      "data \"oci_core_public_ips\" \"test_public_ips\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tscope = \"${var.public_ip_scope}\"",
      "",
      "\t#Optional",
      "\tavailability_domain = \"${var.public_ip_availability_domain}\"",
      "\tlifetime = \"${var.public_ip_lifetime}\"",
      "}"
    ]
  },
  "oci-data-core_remote_peering_connections": {
    "description": "Defines core_remote_peering_connections",
    "prefix": "tf-oci-data-core_remote_peering_connections",
    "body": [
      "data \"oci_core_remote_peering_connections\" \"test_remote_peering_connections\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdrg_id = \"${oci_core_drg.test_drg.id}\"",
      "}"
    ]
  },
  "oci-data-core_route_tables": {
    "description": "Defines core_route_tables",
    "prefix": "tf-oci-data-core_route_tables",
    "body": [
      "data \"oci_core_route_tables\" \"test_route_tables\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tvcn_id = \"${oci_core_vcn.test_vcn.id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.route_table_display_name}\"",
      "\tstate = \"${var.route_table_state}\"",
      "}"
    ]
  },
  "oci-data-core_security_lists": {
    "description": "Defines core_security_lists",
    "prefix": "tf-oci-data-core_security_lists",
    "body": [
      "data \"oci_core_security_lists\" \"test_security_lists\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tvcn_id = \"${oci_core_vcn.test_vcn.id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.security_list_display_name}\"",
      "\tstate = \"${var.security_list_state}\"",
      "}"
    ]
  },
  "oci-data-core_service_gateways": {
    "description": "Defines core_service_gateways",
    "prefix": "tf-oci-data-core_service_gateways",
    "body": [
      "data \"oci_core_service_gateways\" \"test_service_gateways\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tstate = \"${var.service_gateway_state}\"",
      "\tvcn_id = \"${oci_core_vcn.test_vcn.id}\"",
      "}"
    ]
  },
  "oci-data-core_services": {
    "description": "Defines core_services",
    "prefix": "tf-oci-data-core_services",
    "body": [
      "data \"oci_core_services\" \"test_services\" {",
      "}"
    ]
  },
  "oci-data-core_shapes": {
    "description": "Defines core_shapes",
    "prefix": "tf-oci-data-core_shapes",
    "body": [
      "data \"oci_core_shapes\" \"test_shapes\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tavailability_domain = \"${var.shape_availability_domain}\"",
      "\timage_id = \"${oci_core_image.test_image.id}\"",
      "}"
    ]
  },
  "oci-data-core_subnet": {
    "description": "Defines core_subnet",
    "prefix": "tf-oci-data-core_subnet",
    "body": [
      "data \"oci_core_subnet\" \"test_subnet\" {",
      "\t#Required",
      "\tsubnet_id = \"${oci_core_subnet.test_subnet.id}\"",
      "}"
    ]
  },
  "oci-data-core_subnets": {
    "description": "Defines core_subnets",
    "prefix": "tf-oci-data-core_subnets",
    "body": [
      "data \"oci_core_subnets\" \"test_subnets\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tvcn_id = \"${oci_core_vcn.test_vcn.id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.subnet_display_name}\"",
      "\tstate = \"${var.subnet_state}\"",
      "}"
    ]
  },
  "oci-data-core_vcn": {
    "description": "Defines core_vcn",
    "prefix": "tf-oci-data-core_vcn",
    "body": [
      "data \"oci_core_vcn\" \"test_vcn\" {",
      "\t#Required",
      "\tvcn_id = \"${oci_core_vcn.test_vcn.id}\"",
      "}"
    ]
  },
  "oci-data-core_vcns": {
    "description": "Defines core_vcns",
    "prefix": "tf-oci-data-core_vcns",
    "body": [
      "data \"oci_core_vcns\" \"test_vcns\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.vcn_display_name}\"",
      "\tstate = \"${var.vcn_state}\"",
      "}"
    ]
  },
  "oci-data-core_virtual_circuit": {
    "description": "Defines core_virtual_circuit",
    "prefix": "tf-oci-data-core_virtual_circuit",
    "body": [
      "data \"oci_core_virtual_circuit\" \"test_virtual_circuit\" {",
      "\t#Required",
      "\tvirtual_circuit_id = \"${oci_core_virtual_circuit.test_virtual_circuit.id}\"",
      "}"
    ]
  },
  "oci-data-core_virtual_circuit_bandwidth_shapes": {
    "description": "Defines core_virtual_circuit_bandwidth_shapes",
    "prefix": "tf-oci-data-core_virtual_circuit_bandwidth_shapes",
    "body": [
      "data \"oci_core_virtual_circuit_bandwidth_shapes\" \"test_virtual_circuit_bandwidth_shapes\" {",
      "\t#Required",
      "\tprovider_service_id = \"${data.oci_core_fast_connect_provider_services.test_fast_connect_provider_services.fast_connect_provider_services.0.id}\"",
      "}"
    ]
  },
  "oci-data-core_virtual_circuit_public_prefixes": {
    "description": "Defines core_virtual_circuit_public_prefixes",
    "prefix": "tf-oci-data-core_virtual_circuit_public_prefixes",
    "body": [
      "data \"oci_core_virtual_circuit_public_prefixes\" \"test_virtual_circuit_public_prefixes\" {",
      "\t#Required",
      "\tvirtual_circuit_id = \"${oci_core_virtual_circuit.test_virtual_circuit.id}\"",
      "",
      "\t#Optional",
      "\tverification_state = \"${var.virtual_circuit_public_prefix_verification_state}\"",
      "}"
    ]
  },
  "oci-data-core_virtual_circuits": {
    "description": "Defines core_virtual_circuits",
    "prefix": "tf-oci-data-core_virtual_circuits",
    "body": [
      "data \"oci_core_virtual_circuits\" \"test_virtual_circuits\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.virtual_circuit_display_name}\"",
      "\tstate = \"${var.virtual_circuit_state}\"",
      "}"
    ]
  },
  "oci-data-core_vnic": {
    "description": "Defines core_vnic",
    "prefix": "tf-oci-data-core_vnic",
    "body": [
      "data \"oci_core_vnic\" \"test_vnic\" {",
      "\t#Required",
      "\tvnic_id = \"${oci_core_vnic.test_vnic.id}\"",
      "}"
    ]
  },
  "oci-data-core_vnic_attachments": {
    "description": "Defines core_vnic_attachments",
    "prefix": "tf-oci-data-core_vnic_attachments",
    "body": [
      "data \"oci_core_vnic_attachments\" \"test_vnic_attachments\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tavailability_domain = \"${var.vnic_attachment_availability_domain}\"",
      "\tinstance_id = \"${oci_core_instance.test_instance.id}\"",
      "\tvnic_id = \"${oci_core_vnic.test_vnic.id}\"",
      "}"
    ]
  },
  "oci-data-core_volume": {
    "description": "Defines core_volume",
    "prefix": "tf-oci-data-core_volume",
    "body": [
      "data \"oci_core_volume\" \"test_volume\" {",
      "\t#Required",
      "\tvolume_id = \"${oci_core_volume.test_volume.id}\"",
      "}"
    ]
  },
  "oci-data-core_volume_attachments": {
    "description": "Defines core_volume_attachments",
    "prefix": "tf-oci-data-core_volume_attachments",
    "body": [
      "data \"oci_core_volume_attachments\" \"test_volume_attachments\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tavailability_domain = \"${var.volume_attachment_availability_domain}\"",
      "\tinstance_id = \"${oci_core_instance.test_instance.id}\"",
      "\tvolume_id = \"${oci_core_volume.test_volume.id}\"",
      "}"
    ]
  },
  "oci-data-core_volume_backup_policies": {
    "description": "Defines core_volume_backup_policies",
    "prefix": "tf-oci-data-core_volume_backup_policies",
    "body": [
      "data \"oci_core_volume_backup_policies\" \"test_volume_backup_policies\" {",
      "}"
    ]
  },
  "oci-data-core_volume_backup_policy_assignments": {
    "description": "Defines core_volume_backup_policy_assignments",
    "prefix": "tf-oci-data-core_volume_backup_policy_assignments",
    "body": [
      "data \"oci_core_volume_backup_policy_assignments\" \"test_volume_backup_policy_assignments\" {",
      "\t#Required",
      "\tasset_id = \"${oci_core_asset.test_asset.id}\"",
      "}"
    ]
  },
  "oci-data-core_volume_backups": {
    "description": "Defines core_volume_backups",
    "prefix": "tf-oci-data-core_volume_backups",
    "body": [
      "data \"oci_core_volume_backups\" \"test_volume_backups\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.volume_backup_display_name}\"",
      "\tsource_volume_backup_id = \"${oci_core_source_volume_backup.test_source_volume_backup.id}\"",
      "\tstate = \"${var.volume_backup_state}\"",
      "\tvolume_id = \"${oci_core_volume.test_volume.id}\"",
      "}"
    ]
  },
  "oci-data-core_volume_group_backups": {
    "description": "Defines core_volume_group_backups",
    "prefix": "tf-oci-data-core_volume_group_backups",
    "body": [
      "data \"oci_core_volume_group_backups\" \"test_volume_group_backups\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.volume_group_backup_display_name}\"",
      "\tvolume_group_id = \"${oci_core_volume_group.test_volume_group.id}\"",
      "}"
    ]
  },
  "oci-data-core_volume_groups": {
    "description": "Defines core_volume_groups",
    "prefix": "tf-oci-data-core_volume_groups",
    "body": [
      "data \"oci_core_volume_groups\" \"test_volume_groups\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tavailability_domain = \"${var.volume_group_availability_domain}\"",
      "\tdisplay_name = \"${var.volume_group_display_name}\"",
      "\tstate = \"${var.volume_group_state}\"",
      "}"
    ]
  },
  "oci-data-core_volumes": {
    "description": "Defines core_volumes",
    "prefix": "tf-oci-data-core_volumes",
    "body": [
      "data \"oci_core_volumes\" \"test_volumes\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tavailability_domain = \"${var.volume_availability_domain}\"",
      "\tdisplay_name = \"${var.volume_display_name}\"",
      "\tstate = \"${var.volume_state}\"",
      "\tvolume_group_id = \"${oci_core_volume_group.test_volume_group.id}\"",
      "}"
    ]
  },
  "oci-data-database_autonomous_container_database": {
    "description": "Defines database_autonomous_container_database",
    "prefix": "tf-oci-data-database_autonomous_container_database",
    "body": [
      "data \"oci_database_autonomous_container_database\" \"test_autonomous_container_database\" {",
      "\t#Required",
      "\tautonomous_container_database_id = \"${oci_database_autonomous_container_database.test_autonomous_container_database.id}\"",
      "}"
    ]
  },
  "oci-data-database_autonomous_container_databases": {
    "description": "Defines database_autonomous_container_databases",
    "prefix": "tf-oci-data-database_autonomous_container_databases",
    "body": [
      "data \"oci_database_autonomous_container_databases\" \"test_autonomous_container_databases\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tautonomous_exadata_infrastructure_id = \"${oci_database_autonomous_exadata_infrastructure.test_autonomous_exadata_infrastructure.id}\"",
      "\tavailability_domain = \"${var.autonomous_container_database_availability_domain}\"",
      "\tdisplay_name = \"${var.autonomous_container_database_display_name}\"",
      "\tstate = \"${var.autonomous_container_database_state}\"",
      "}"
    ]
  },
  "oci-data-database_autonomous_data_warehouse": {
    "description": "Defines database_autonomous_data_warehouse",
    "prefix": "tf-oci-data-database_autonomous_data_warehouse",
    "body": [
      "data \"oci_database_autonomous_data_warehouse\" \"test_autonomous_data_warehouse\" {",
      "\t#Required",
      "\tautonomous_data_warehouse_id = \"${oci_database_autonomous_data_warehouse.test_autonomous_data_warehouse.id}\"",
      "}"
    ]
  },
  "oci-data-database_autonomous_data_warehouse_backup": {
    "description": "Defines database_autonomous_data_warehouse_backup",
    "prefix": "tf-oci-data-database_autonomous_data_warehouse_backup",
    "body": [
      "data \"oci_database_autonomous_data_warehouse_backup\" \"test_autonomous_data_warehouse_backup\" {",
      "\t#Required",
      "\tautonomous_data_warehouse_backup_id = \"${oci_database_autonomous_data_warehouse_backup.test_autonomous_data_warehouse_backup.id}\"",
      "}"
    ]
  },
  "oci-data-database_autonomous_data_warehouse_backups": {
    "description": "Defines database_autonomous_data_warehouse_backups",
    "prefix": "tf-oci-data-database_autonomous_data_warehouse_backups",
    "body": [
      "data \"oci_database_autonomous_data_warehouse_backups\" \"test_autonomous_data_warehouse_backups\" {",
      "",
      "\t#Optional",
      "\tautonomous_data_warehouse_id = \"${oci_database_autonomous_data_warehouse.test_autonomous_data_warehouse.id}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tdisplay_name = \"${var.autonomous_data_warehouse_backup_display_name}\"",
      "\tstate = \"${var.autonomous_data_warehouse_backup_state}\"",
      "}"
    ]
  },
  "oci-data-database_autonomous_data_warehouse_wallet": {
    "description": "Defines database_autonomous_data_warehouse_wallet",
    "prefix": "tf-oci-data-database_autonomous_data_warehouse_wallet",
    "body": [
      "data \"oci_database_autonomous_data_warehouse_wallet\" \"test_autonomous_data_warehouse_wallet\" {",
      "\t#Required",
      "\tautonomous_data_warehouse_id = \"${oci_database_autonomous_data_warehouse.test_autonomous_data_warehouse.id}\"",
      "\tpassword = \"${var.autonomous_data_warehouse_wallet_password}\"",
      "}"
    ]
  },
  "oci-data-database_autonomous_data_warehouses": {
    "description": "Defines database_autonomous_data_warehouses",
    "prefix": "tf-oci-data-database_autonomous_data_warehouses",
    "body": [
      "data \"oci_database_autonomous_data_warehouses\" \"test_autonomous_data_warehouses\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.autonomous_data_warehouse_display_name}\"",
      "\tstate = \"${var.autonomous_data_warehouse_state}\"",
      "}"
    ]
  },
  "oci-data-database_autonomous_database": {
    "description": "Defines database_autonomous_database",
    "prefix": "tf-oci-data-database_autonomous_database",
    "body": [
      "data \"oci_database_autonomous_database\" \"test_autonomous_database\" {",
      "\t#Required",
      "\tautonomous_database_id = \"${oci_database_autonomous_database.test_autonomous_database.id}\"",
      "}"
    ]
  },
  "oci-data-database_autonomous_database_backup": {
    "description": "Defines database_autonomous_database_backup",
    "prefix": "tf-oci-data-database_autonomous_database_backup",
    "body": [
      "data \"oci_database_autonomous_database_backup\" \"test_autonomous_database_backup\" {",
      "\t#Required",
      "\tautonomous_database_backup_id = \"${oci_database_autonomous_database_backup.test_autonomous_database_backup.id}\"",
      "}"
    ]
  },
  "oci-data-database_autonomous_database_backups": {
    "description": "Defines database_autonomous_database_backups",
    "prefix": "tf-oci-data-database_autonomous_database_backups",
    "body": [
      "data \"oci_database_autonomous_database_backups\" \"test_autonomous_database_backups\" {",
      "",
      "\t#Optional",
      "\tautonomous_database_id = \"${oci_database_autonomous_database.test_autonomous_database.id}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tdisplay_name = \"${var.autonomous_database_backup_display_name}\"",
      "\tstate = \"${var.autonomous_database_backup_state}\"",
      "}"
    ]
  },
  "oci-data-database_autonomous_database_wallet": {
    "description": "Defines database_autonomous_database_wallet",
    "prefix": "tf-oci-data-database_autonomous_database_wallet",
    "body": [
      "data \"oci_database_autonomous_database_wallet\" \"test_autonomous_database_wallet\" {",
      "\t#Required",
      "\tautonomous_database_id = \"${oci_database_autonomous_database.test_autonomous_database.id}\"",
      "\tpassword = \"${var.autonomous_database_wallet_password}\"",
      "}"
    ]
  },
  "oci-data-database_autonomous_databases": {
    "description": "Defines database_autonomous_databases",
    "prefix": "tf-oci-data-database_autonomous_databases",
    "body": [
      "data \"oci_database_autonomous_databases\" \"test_autonomous_databases\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tautonomous_container_database_id = \"${oci_database_autonomous_container_database.test_autonomous_container_database.id}\"",
      "\tdb_workload = \"${var.autonomous_database_db_workload}\"",
      "\tdisplay_name = \"${var.autonomous_database_display_name}\"",
      "\tstate = \"${var.autonomous_database_state}\"",
      "}"
    ]
  },
  "oci-data-database_autonomous_db_preview_versions": {
    "description": "Defines database_autonomous_db_preview_versions",
    "prefix": "tf-oci-data-database_autonomous_db_preview_versions",
    "body": [
      "data \"oci_database_autonomous_db_preview_versions\" \"test_autonomous_db_preview_versions\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "}"
    ]
  },
  "oci-data-database_autonomous_exadata_infrastructure": {
    "description": "Defines database_autonomous_exadata_infrastructure",
    "prefix": "tf-oci-data-database_autonomous_exadata_infrastructure",
    "body": [
      "data \"oci_database_autonomous_exadata_infrastructure\" \"test_autonomous_exadata_infrastructure\" {",
      "\t#Required",
      "\tautonomous_exadata_infrastructure_id = \"${oci_database_autonomous_exadata_infrastructure.test_autonomous_exadata_infrastructure.id}\"",
      "}"
    ]
  },
  "oci-data-database_autonomous_exadata_infrastructure_shapes": {
    "description": "Defines database_autonomous_exadata_infrastructure_shapes",
    "prefix": "tf-oci-data-database_autonomous_exadata_infrastructure_shapes",
    "body": [
      "data \"oci_database_autonomous_exadata_infrastructure_shapes\" \"test_autonomous_exadata_infrastructure_shapes\" {",
      "\t#Required",
      "\tavailability_domain = \"${var.autonomous_exadata_infrastructure_shape_availability_domain}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "}"
    ]
  },
  "oci-data-database_autonomous_exadata_infrastructures": {
    "description": "Defines database_autonomous_exadata_infrastructures",
    "prefix": "tf-oci-data-database_autonomous_exadata_infrastructures",
    "body": [
      "data \"oci_database_autonomous_exadata_infrastructures\" \"test_autonomous_exadata_infrastructures\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tavailability_domain = \"${var.autonomous_exadata_infrastructure_availability_domain}\"",
      "\tdisplay_name = \"${var.autonomous_exadata_infrastructure_display_name}\"",
      "\tstate = \"${var.autonomous_exadata_infrastructure_state}\"",
      "}"
    ]
  },
  "oci-data-database_backups": {
    "description": "Defines database_backups",
    "prefix": "tf-oci-data-database_backups",
    "body": [
      "data \"oci_database_backups\" \"test_backups\" {",
      "",
      "\t#Optional",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tdatabase_id = \"${oci_database_database.test_database.id}\"",
      "}"
    ]
  },
  "oci-data-database_data_guard_association": {
    "description": "Defines database_data_guard_association",
    "prefix": "tf-oci-data-database_data_guard_association",
    "body": [
      "data \"oci_database_data_guard_association\" \"test_data_guard_association\" {",
      "\t#Required",
      "\tdata_guard_association_id = \"${oci_database_data_guard_association.test_data_guard_association.id}\"",
      "\tdatabase_id = \"${oci_database_database.test_database.id}\"",
      "}"
    ]
  },
  "oci-data-database_data_guard_associations": {
    "description": "Defines database_data_guard_associations",
    "prefix": "tf-oci-data-database_data_guard_associations",
    "body": [
      "data \"oci_database_data_guard_associations\" \"test_data_guard_associations\" {",
      "\t#Required",
      "\tdatabase_id = \"${oci_database_database.test_database.id}\"",
      "}"
    ]
  },
  "oci-data-database_database": {
    "description": "Defines database_database",
    "prefix": "tf-oci-data-database_database",
    "body": [
      "data \"oci_database_database\" \"test_database\" {",
      "\t#Required",
      "\tdatabase_id = \"${var.database_id}\"",
      "}"
    ]
  },
  "oci-data-database_databases": {
    "description": "Defines database_databases",
    "prefix": "tf-oci-data-database_databases",
    "body": [
      "data \"oci_database_databases\" \"test_databases\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tdb_home_id = \"${oci_database_db_home.test_db_home.id}\"",
      "",
      "\t#Optional",
      "\tdb_name = \"${var.database_db_name}\"",
      "\tstate = \"${var.database_state}\"",
      "}"
    ]
  },
  "oci-data-database_db_home": {
    "description": "Defines database_db_home",
    "prefix": "tf-oci-data-database_db_home",
    "body": [
      "data \"oci_database_db_home\" \"test_db_home\" {",
      "\t#Required",
      "\tdb_home_id = \"${var.db_home_id}\"",
      "}"
    ]
  },
  "oci-data-database_db_home_patch_history_entries": {
    "description": "Defines database_db_home_patch_history_entries",
    "prefix": "tf-oci-data-database_db_home_patch_history_entries",
    "body": [
      "data \"oci_database_db_home_patch_history_entries\" \"test_db_home_patch_history_entries\" {",
      "\t#Required",
      "\tdb_home_id = \"${oci_database_db_home.test_db_home.id}\"",
      "}"
    ]
  },
  "oci-data-database_db_home_patches": {
    "description": "Defines database_db_home_patches",
    "prefix": "tf-oci-data-database_db_home_patches",
    "body": [
      "data \"oci_database_db_home_patches\" \"test_db_home_patches\" {",
      "\t#Required",
      "\tdb_home_id = \"${oci_database_db_home.test_db_home.id}\"",
      "}"
    ]
  },
  "oci-data-database_db_homes": {
    "description": "Defines database_db_homes",
    "prefix": "tf-oci-data-database_db_homes",
    "body": [
      "data \"oci_database_db_homes\" \"test_db_homes\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tdb_system_id = \"${oci_database_db_system.test_db_system.id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.db_home_display_name}\"",
      "\tstate = \"${var.db_home_state}\"",
      "}"
    ]
  },
  "oci-data-database_db_node": {
    "description": "Defines database_db_node",
    "prefix": "tf-oci-data-database_db_node",
    "body": [
      "data \"oci_database_db_node\" \"test_db_node\" {",
      "\t#Required",
      "\tdb_node_id = \"${var.db_node_id}\"",
      "}"
    ]
  },
  "oci-data-database_db_nodes": {
    "description": "Defines database_db_nodes",
    "prefix": "tf-oci-data-database_db_nodes",
    "body": [
      "data \"oci_database_db_nodes\" \"test_db_nodes\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tdb_system_id = \"${oci_database_db_system.test_db_system.id}\"",
      "",
      "\t#Optional",
      "\tstate = \"${var.db_node_state}\"",
      "}"
    ]
  },
  "oci-data-database_db_system_patch_history_entries": {
    "description": "Defines database_db_system_patch_history_entries",
    "prefix": "tf-oci-data-database_db_system_patch_history_entries",
    "body": [
      "data \"oci_database_db_system_patch_history_entries\" \"test_db_system_patch_history_entries\" {",
      "\t#Required",
      "\tdb_system_id = \"${oci_database_db_system.test_db_system.id}\"",
      "}"
    ]
  },
  "oci-data-database_db_system_patches": {
    "description": "Defines database_db_system_patches",
    "prefix": "tf-oci-data-database_db_system_patches",
    "body": [
      "data \"oci_database_db_system_patches\" \"test_db_system_patches\" {",
      "\t#Required",
      "\tdb_system_id = \"${oci_database_db_system.test_db_system.id}\"",
      "}"
    ]
  },
  "oci-data-database_db_system_shapes": {
    "description": "Defines database_db_system_shapes",
    "prefix": "tf-oci-data-database_db_system_shapes",
    "body": [
      "data \"oci_database_db_system_shapes\" \"test_db_system_shapes\" {",
      "\t#Required",
      "\tavailability_domain = \"${var.db_system_shape_availability_domain}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "}"
    ]
  },
  "oci-data-database_db_systems": {
    "description": "Defines database_db_systems",
    "prefix": "tf-oci-data-database_db_systems",
    "body": [
      "data \"oci_database_db_systems\" \"test_db_systems\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tavailability_domain = \"${var.db_system_availability_domain}\"",
      "\tbackup_id = \"${oci_database_backup.test_backup.id}\"",
      "\tdisplay_name = \"${var.db_system_display_name}\"",
      "\tstate = \"${var.db_system_state}\"",
      "}"
    ]
  },
  "oci-data-database_db_versions": {
    "description": "Defines database_db_versions",
    "prefix": "tf-oci-data-database_db_versions",
    "body": [
      "data \"oci_database_db_versions\" \"test_db_versions\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdb_system_id = \"${oci_database_db_system.test_db_system.id}\"",
      "\tdb_system_shape = \"${var.db_version_db_system_shape}\"",
      "}"
    ]
  },
  "oci-data-database_exadata_iorm_config": {
    "description": "Defines database_exadata_iorm_config",
    "prefix": "tf-oci-data-database_exadata_iorm_config",
    "body": [
      "data \"oci_database_exadata_iorm_config\" \"test_exadata_iorm_config\" {",
      "\t#Required",
      "\tdb_system_id = \"${oci_database_db_system.test_db_system.id}\"",
      "}"
    ]
  },
  "oci-data-database_maintenance_run": {
    "description": "Defines database_maintenance_run",
    "prefix": "tf-oci-data-database_maintenance_run",
    "body": [
      "data \"oci_database_maintenance_run\" \"test_maintenance_run\" {",
      "\t#Required",
      "\tmaintenance_run_id = \"${oci_database_maintenance_run.test_maintenance_run.id}\"",
      "}"
    ]
  },
  "oci-data-database_maintenance_runs": {
    "description": "Defines database_maintenance_runs",
    "prefix": "tf-oci-data-database_maintenance_runs",
    "body": [
      "data \"oci_database_maintenance_runs\" \"test_maintenance_runs\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tavailability_domain = \"${var.maintenance_run_availability_domain}\"",
      "\tmaintenance_type = \"${var.maintenance_run_maintenance_type}\"",
      "\tstate = \"${var.maintenance_run_state}\"",
      "\ttarget_resource_id = \"${oci_database_target_resource.test_target_resource.id}\"",
      "\ttarget_resource_type = \"${var.maintenance_run_target_resource_type}\"",
      "}"
    ]
  },
  "oci-data-dns_records": {
    "description": "Defines dns_records",
    "prefix": "tf-oci-data-dns_records",
    "body": [
      "data \"oci_dns_records\" \"test_records\" {",
      "\t#Required",
      "\tzone_name_or_id = \"${oci_dns_zone_name_or.test_zone_name_or.id}\"",
      "",
      "\t#Optional",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tdomain = \"${var.record_domain}\"",
      "\tdomain_contains = \"${var.record_domain_contains}\"",
      "\trtype = \"${var.record_rtype}\"",
      "\tzone_version = \"${var.record_zone_version}\"",
      "}"
    ]
  },
  "oci-data-dns_steering_policies": {
    "description": "Defines dns_steering_policies",
    "prefix": "tf-oci-data-dns_steering_policies",
    "body": [
      "data \"oci_dns_steering_policies\" \"test_steering_policies\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.steering_policy_display_name}\"",
      "\tdisplay_name_contains = \"${var.steering_policy_display_name_contains}\"",
      "\thealth_check_monitor_id = \"${oci_dns_health_check_monitor.test_health_check_monitor.id}\"",
      "\tid = \"${var.steering_policy_id}\"",
      "\tstate = \"${var.steering_policy_state}\"",
      "\ttemplate = \"${var.steering_policy_template}\"",
      "\ttime_created_greater_than_or_equal_to = \"${var.steering_policy_time_created_greater_than_or_equal_to}\"",
      "\ttime_created_less_than = \"${var.steering_policy_time_created_less_than}\"",
      "}"
    ]
  },
  "oci-data-dns_steering_policy": {
    "description": "Defines dns_steering_policy",
    "prefix": "tf-oci-data-dns_steering_policy",
    "body": [
      "data \"oci_dns_steering_policy\" \"test_steering_policy\" {",
      "\t#Required",
      "\tsteering_policy_id = \"${oci_dns_steering_policy.test_steering_policy.id}\"",
      "}"
    ]
  },
  "oci-data-dns_steering_policy_attachment": {
    "description": "Defines dns_steering_policy_attachment",
    "prefix": "tf-oci-data-dns_steering_policy_attachment",
    "body": [
      "data \"oci_dns_steering_policy_attachment\" \"test_steering_policy_attachment\" {",
      "\t#Required",
      "\tsteering_policy_attachment_id = \"${oci_dns_steering_policy_attachment.test_steering_policy_attachment.id}\"",
      "}"
    ]
  },
  "oci-data-dns_steering_policy_attachments": {
    "description": "Defines dns_steering_policy_attachments",
    "prefix": "tf-oci-data-dns_steering_policy_attachments",
    "body": [
      "data \"oci_dns_steering_policy_attachments\" \"test_steering_policy_attachments\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.steering_policy_attachment_display_name}\"",
      "\tdomain = \"${var.steering_policy_attachment_domain}\"",
      "\tdomain_contains = \"${var.steering_policy_attachment_domain_contains}\"",
      "\tid = \"${var.steering_policy_attachment_id}\"",
      "\tstate = \"${var.steering_policy_attachment_state}\"",
      "\tsteering_policy_id = \"${oci_dns_steering_policy.test_steering_policy.id}\"",
      "\ttime_created_greater_than_or_equal_to = \"${var.steering_policy_attachment_time_created_greater_than_or_equal_to}\"",
      "\ttime_created_less_than = \"${var.steering_policy_attachment_time_created_less_than}\"",
      "\tzone_id = \"${oci_dns_zone.test_zone.id}\"",
      "}"
    ]
  },
  "oci-data-dns_zones": {
    "description": "Defines dns_zones",
    "prefix": "tf-oci-data-dns_zones",
    "body": [
      "data \"oci_dns_zones\" \"test_zones\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tname = \"${var.zone_name}\"",
      "\tname_contains = \"${var.zone_name_contains}\"",
      "\tstate = \"${var.zone_state}\"",
      "\ttime_created_greater_than_or_equal_to = \"${var.zone_time_created_greater_than_or_equal_to}\"",
      "\ttime_created_less_than = \"${var.zone_time_created_less_than}\"",
      "\tzone_type = \"${var.zone_zone_type}\"",
      "}"
    ]
  },
  "oci-data-email_sender": {
    "description": "Defines email_sender",
    "prefix": "tf-oci-data-email_sender",
    "body": [
      "data \"oci_email_sender\" \"test_sender\" {",
      "\t#Required",
      "\tsender_id = \"${oci_email_sender.test_sender.id}\"",
      "}"
    ]
  },
  "oci-data-email_senders": {
    "description": "Defines email_senders",
    "prefix": "tf-oci-data-email_senders",
    "body": [
      "data \"oci_email_senders\" \"test_senders\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\temail_address = \"${var.sender_email_address}\"",
      "\tstate = \"${var.sender_state}\"",
      "}"
    ]
  },
  "oci-data-email_suppression": {
    "description": "Defines email_suppression",
    "prefix": "tf-oci-data-email_suppression",
    "body": [
      "data \"oci_email_suppression\" \"test_suppression\" {",
      "\t#Required",
      "\tsuppression_id = \"${oci_email_suppression.test_suppression.id}\"",
      "}"
    ]
  },
  "oci-data-email_suppressions": {
    "description": "Defines email_suppressions",
    "prefix": "tf-oci-data-email_suppressions",
    "body": [
      "data \"oci_email_suppressions\" \"test_suppressions\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.tenancy_ocid}\"",
      "",
      "\t#Optional",
      "\temail_address = \"${var.suppression_email_address}\"",
      "\ttime_created_greater_than_or_equal_to = \"${var.suppression_time_created_greater_than_or_equal_to}\"",
      "\ttime_created_less_than = \"${var.suppression_time_created_less_than}\"",
      "}"
    ]
  },
  "oci-data-file_storage_export_sets": {
    "description": "Defines file_storage_export_sets",
    "prefix": "tf-oci-data-file_storage_export_sets",
    "body": [
      "data \"oci_file_storage_export_sets\" \"test_export_sets\" {",
      "\t#Required",
      "\tavailability_domain = \"${var.export_set_availability_domain}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.export_set_display_name}\"",
      "\tid = \"${var.export_set_id}\"",
      "\tstate = \"${var.export_set_state}\"",
      "}"
    ]
  },
  "oci-data-file_storage_exports": {
    "description": "Defines file_storage_exports",
    "prefix": "tf-oci-data-file_storage_exports",
    "body": [
      "data \"oci_file_storage_exports\" \"test_exports\" {",
      "",
      "\t#Optional",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\texport_set_id = \"${oci_file_storage_export_set.test_export_set.id}\"",
      "\tfile_system_id = \"${oci_file_storage_file_system.test_file_system.id}\"",
      "\tid = \"${var.export_id}\"",
      "\tstate = \"${var.export_state}\"",
      "}"
    ]
  },
  "oci-data-file_storage_file_systems": {
    "description": "Defines file_storage_file_systems",
    "prefix": "tf-oci-data-file_storage_file_systems",
    "body": [
      "data \"oci_file_storage_file_systems\" \"test_file_systems\" {",
      "\t#Required",
      "\tavailability_domain = \"${var.file_system_availability_domain}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.file_system_display_name}\"",
      "\tid = \"${var.file_system_id}\"",
      "\tstate = \"${var.file_system_state}\"",
      "}"
    ]
  },
  "oci-data-file_storage_mount_targets": {
    "description": "Defines file_storage_mount_targets",
    "prefix": "tf-oci-data-file_storage_mount_targets",
    "body": [
      "data \"oci_file_storage_mount_targets\" \"test_mount_targets\" {",
      "\t#Required",
      "\tavailability_domain = \"${var.mount_target_availability_domain}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.mount_target_display_name}\"",
      "\texport_set_id = \"${oci_file_storage_export_set.test_export_set.id}\"",
      "\tid = \"${var.mount_target_id}\"",
      "\tstate = \"${var.mount_target_state}\"",
      "}"
    ]
  },
  "oci-data-file_storage_snapshot": {
    "description": "Defines file_storage_snapshot",
    "prefix": "tf-oci-data-file_storage_snapshot",
    "body": [
      "data \"oci_file_storage_snapshot\" \"test_snapshot\" {",
      "\t#Required",
      "\tsnapshot_id = \"${oci_file_storage_snapshot.test_snapshot.id}\"",
      "}"
    ]
  },
  "oci-data-file_storage_snapshots": {
    "description": "Defines file_storage_snapshots",
    "prefix": "tf-oci-data-file_storage_snapshots",
    "body": [
      "data \"oci_file_storage_snapshots\" \"test_snapshots\" {",
      "\t#Required",
      "\tfile_system_id = \"${oci_file_storage_file_system.test_file_system.id}\"",
      "",
      "\t#Optional",
      "\tid = \"${var.snapshot_id}\"",
      "\tstate = \"${var.snapshot_state}\"",
      "}"
    ]
  },
  "oci-data-functions_application": {
    "description": "Defines functions_application",
    "prefix": "tf-oci-data-functions_application",
    "body": [
      "data \"oci_functions_application\" \"test_application\" {",
      "\t#Required",
      "\tapplication_id = \"${oci_functions_application.test_application.id}\"",
      "}"
    ]
  },
  "oci-data-functions_applications": {
    "description": "Defines functions_applications",
    "prefix": "tf-oci-data-functions_applications",
    "body": [
      "data \"oci_functions_applications\" \"test_applications\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.application_display_name}\"",
      "\tid = \"${var.application_id}\"",
      "\tstate = \"${var.application_state}\"",
      "}"
    ]
  },
  "oci-data-functions_function": {
    "description": "Defines functions_function",
    "prefix": "tf-oci-data-functions_function",
    "body": [
      "data \"oci_functions_function\" \"test_function\" {",
      "\t#Required",
      "\tfunction_id = \"${oci_functions_function.test_function.id}\"",
      "}"
    ]
  },
  "oci-data-functions_functions": {
    "description": "Defines functions_functions",
    "prefix": "tf-oci-data-functions_functions",
    "body": [
      "data \"oci_functions_functions\" \"test_functions\" {",
      "\t#Required",
      "\tapplication_id = \"${oci_functions_application.test_application.id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.function_display_name}\"",
      "\tid = \"${var.function_id}\"",
      "\tstate = \"${var.function_state}\"",
      "}"
    ]
  },
  "oci-data-health_checks_http_monitor": {
    "description": "Defines health_checks_http_monitor",
    "prefix": "tf-oci-data-health_checks_http_monitor",
    "body": [
      "data \"oci_health_checks_http_monitor\" \"test_http_monitor\" {",
      "\t#Required",
      "\tmonitor_id = \"${oci_health_checks_monitor.test_monitor.id}\"",
      "}"
    ]
  },
  "oci-data-health_checks_http_monitors": {
    "description": "Defines health_checks_http_monitors",
    "prefix": "tf-oci-data-health_checks_http_monitors",
    "body": [
      "data \"oci_health_checks_http_monitors\" \"test_http_monitors\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.http_monitor_display_name}\"",
      "}"
    ]
  },
  "oci-data-health_checks_http_probe_results": {
    "description": "Defines health_checks_http_probe_results",
    "prefix": "tf-oci-data-health_checks_http_probe_results",
    "body": [
      "data \"oci_health_checks_http_probe_results\" \"test_http_probe_results\" {",
      "\t#Required",
      "\tprobe_configuration_id = \"${oci_health_checks_probe_configuration.test_probe_configuration.id}\"",
      "",
      "\t#Optional",
      "\tstart_time_greater_than_or_equal_to = \"${var.http_probe_result_start_time_greater_than_or_equal_to}\"",
      "\tstart_time_less_than_or_equal_to = \"${var.http_probe_result_start_time_less_than_or_equal_to}\"",
      "\ttarget = \"${var.http_probe_result_target}\"",
      "}"
    ]
  },
  "oci-data-health_checks_ping_monitor": {
    "description": "Defines health_checks_ping_monitor",
    "prefix": "tf-oci-data-health_checks_ping_monitor",
    "body": [
      "data \"oci_health_checks_ping_monitor\" \"test_ping_monitor\" {",
      "\t#Required",
      "\tmonitor_id = \"${oci_health_checks_monitor.test_monitor.id}\"",
      "}"
    ]
  },
  "oci-data-health_checks_ping_monitors": {
    "description": "Defines health_checks_ping_monitors",
    "prefix": "tf-oci-data-health_checks_ping_monitors",
    "body": [
      "data \"oci_health_checks_ping_monitors\" \"test_ping_monitors\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.ping_monitor_display_name}\"",
      "}"
    ]
  },
  "oci-data-health_checks_ping_probe_results": {
    "description": "Defines health_checks_ping_probe_results",
    "prefix": "tf-oci-data-health_checks_ping_probe_results",
    "body": [
      "data \"oci_health_checks_ping_probe_results\" \"test_ping_probe_results\" {",
      "\t#Required",
      "\tprobe_configuration_id = \"${oci_health_checks_probe_configuration.test_probe_configuration.id}\"",
      "",
      "\t#Optional",
      "\tstart_time_greater_than_or_equal_to = \"${var.ping_probe_result_start_time_greater_than_or_equal_to}\"",
      "\tstart_time_less_than_or_equal_to = \"${var.ping_probe_result_start_time_less_than_or_equal_to}\"",
      "\ttarget = \"${var.ping_probe_result_target}\"",
      "}"
    ]
  },
  "oci-data-health_checks_vantage_points": {
    "description": "Defines health_checks_vantage_points",
    "prefix": "tf-oci-data-health_checks_vantage_points",
    "body": [
      "data \"oci_health_checks_vantage_points\" \"test_vantage_points\" {",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.vantage_point_display_name}\"",
      "\tname = \"${var.vantage_point_name}\"",
      "}"
    ]
  },
  "oci-data-identity_api_keys": {
    "description": "Defines identity_api_keys",
    "prefix": "tf-oci-data-identity_api_keys",
    "body": [
      "data \"oci_identity_api_keys\" \"test_api_keys\" {",
      "\t#Required",
      "\tuser_id = \"${oci_identity_user.test_user.id}\"",
      "}"
    ]
  },
  "oci-data-identity_auth_tokens": {
    "description": "Defines identity_auth_tokens",
    "prefix": "tf-oci-data-identity_auth_tokens",
    "body": [
      "data \"oci_identity_auth_tokens\" \"test_auth_tokens\" {",
      "\t#Required",
      "\tuser_id = \"${oci_identity_user.test_user.id}\"",
      "}"
    ]
  },
  "oci-data-identity_authentication_policy": {
    "description": "Defines identity_authentication_policy",
    "prefix": "tf-oci-data-identity_authentication_policy",
    "body": [
      "data \"oci_identity_authentication_policy\" \"test_authentication_policy\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.tenancy_ocid}\"",
      "}"
    ]
  },
  "oci-data-identity_availability_domain": {
    "description": "Defines identity_availability_domain",
    "prefix": "tf-oci-data-identity_availability_domain",
    "body": [
      "data \"oci_identity_availability_domain\" \"test_compartment\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.tenancy_ocid}\"",
      "\t",
      "\t#Optional (one or the other is required)",
      "\tid = \"${var.id}\"",
      "\tad_number = \"${var.ad_number}\"",
      "}"
    ]
  },
  "oci-data-identity_availability_domains": {
    "description": "Defines identity_availability_domains",
    "prefix": "tf-oci-data-identity_availability_domains",
    "body": [
      "data \"oci_identity_availability_domains\" \"test_availability_domains\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.tenancy_ocid}\"",
      "}"
    ]
  },
  "oci-data-identity_compartment": {
    "description": "Defines identity_compartment",
    "prefix": "tf-oci-data-identity_compartment",
    "body": [
      "data \"oci_identity_compartment\" \"test_compartment\" {",
      "\t#Required",
      "\tid = \"${var.compartment_ocid}\"",
      "}"
    ]
  },
  "oci-data-identity_compartments": {
    "description": "Defines identity_compartments",
    "prefix": "tf-oci-data-identity_compartments",
    "body": [
      "data \"oci_identity_compartments\" \"test_compartments\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\taccess_level = \"${var.compartment_access_level}\"",
      "\tcompartment_id_in_subtree = \"${var.compartment_compartment_id_in_subtree}\"",
      "}"
    ]
  },
  "oci-data-identity_cost_tracking_tags": {
    "description": "Defines identity_cost_tracking_tags",
    "prefix": "tf-oci-data-identity_cost_tracking_tags",
    "body": [
      "data \"oci_identity_cost_tracking_tags\" \"test_cost_tracking_tags\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "}"
    ]
  },
  "oci-data-identity_customer_secret_keys": {
    "description": "Defines identity_customer_secret_keys",
    "prefix": "tf-oci-data-identity_customer_secret_keys",
    "body": [
      "data \"oci_identity_customer_secret_keys\" \"test_customer_secret_keys\" {",
      "\t#Required",
      "\tuser_id = \"${oci_identity_user.test_user.id}\"",
      "}"
    ]
  },
  "oci-data-identity_dynamic_groups": {
    "description": "Defines identity_dynamic_groups",
    "prefix": "tf-oci-data-identity_dynamic_groups",
    "body": [
      "data \"oci_identity_dynamic_groups\" \"test_dynamic_groups\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.tenancy_ocid}\"",
      "}"
    ]
  },
  "oci-data-identity_fault_domains": {
    "description": "Defines identity_fault_domains",
    "prefix": "tf-oci-data-identity_fault_domains",
    "body": [
      "data \"oci_identity_fault_domains\" \"test_fault_domains\" {",
      "\t#Required",
      "\tavailability_domain = \"${var.fault_domain_availability_domain}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "}"
    ]
  },
  "oci-data-identity_group": {
    "description": "Defines identity_group",
    "prefix": "tf-oci-data-identity_group",
    "body": [
      "data \"oci_identity_group\" \"test_group\" {",
      "\t#Required",
      "\tgroup_id = \"${oci_identity_group.test_group.id}\"",
      "}"
    ]
  },
  "oci-data-identity_groups": {
    "description": "Defines identity_groups",
    "prefix": "tf-oci-data-identity_groups",
    "body": [
      "data \"oci_identity_groups\" \"test_groups\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.tenancy_ocid}\"",
      "}"
    ]
  },
  "oci-data-identity_identity_provider_groups": {
    "description": "Defines identity_identity_provider_groups",
    "prefix": "tf-oci-data-identity_identity_provider_groups",
    "body": [
      "data \"oci_identity_identity_provider_groups\" \"test_identity_provider_groups\" {",
      "\t#Required",
      "\tidentity_provider_id = \"${oci_identity_identity_provider.test_identity_provider.id}\"",
      "}"
    ]
  },
  "oci-data-identity_identity_providers": {
    "description": "Defines identity_identity_providers",
    "prefix": "tf-oci-data-identity_identity_providers",
    "body": [
      "data \"oci_identity_identity_providers\" \"test_identity_providers\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.tenancy_ocid}\"",
      "\tprotocol = \"${var.identity_provider_protocol}\"",
      "}"
    ]
  },
  "oci-data-identity_idp_group_mappings": {
    "description": "Defines identity_idp_group_mappings",
    "prefix": "tf-oci-data-identity_idp_group_mappings",
    "body": [
      "data \"oci_identity_idp_group_mappings\" \"test_idp_group_mappings\" {",
      "\t#Required",
      "\tidentity_provider_id = \"${oci_identity_identity_provider.test_identity_provider.id}\"",
      "}"
    ]
  },
  "oci-data-identity_policies": {
    "description": "Defines identity_policies",
    "prefix": "tf-oci-data-identity_policies",
    "body": [
      "data \"oci_identity_policies\" \"test_policies\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.tenancy_ocid}\"",
      "}"
    ]
  },
  "oci-data-identity_region_subscriptions": {
    "description": "Defines identity_region_subscriptions",
    "prefix": "tf-oci-data-identity_region_subscriptions",
    "body": [
      "data \"oci_identity_region_subscriptions\" \"test_region_subscriptions\" {",
      "\t#Required",
      "\ttenancy_id = \"${oci_identity_tenancy.test_tenancy.id}\"",
      "}"
    ]
  },
  "oci-data-identity_regions": {
    "description": "Defines identity_regions",
    "prefix": "tf-oci-data-identity_regions",
    "body": [
      "data \"oci_identity_regions\" \"test_regions\" {",
      "}"
    ]
  },
  "oci-data-identity_smtp_credentials": {
    "description": "Defines identity_smtp_credentials",
    "prefix": "tf-oci-data-identity_smtp_credentials",
    "body": [
      "data \"oci_identity_smtp_credentials\" \"test_smtp_credentials\" {",
      "\t#Required",
      "\tuser_id = \"${oci_identity_user.test_user.id}\"",
      "}"
    ]
  },
  "oci-data-identity_swift_passwords": {
    "description": "Defines identity_swift_passwords",
    "prefix": "tf-oci-data-identity_swift_passwords",
    "body": [
      "data \"oci_identity_swift_passwords\" \"test_swift_passwords\" {",
      "\t#Required",
      "\tuser_id = \"${oci_identity_user.test_user.id}\"",
      "}"
    ]
  },
  "oci-data-identity_tag_default": {
    "description": "Defines identity_tag_default",
    "prefix": "tf-oci-data-identity_tag_default",
    "body": [
      "data \"oci_identity_tag_default\" \"test_tag_default\" {",
      "\t#Required",
      "\ttag_default_id = \"${oci_identity_tag_default.test_tag_default.id}\"",
      "}"
    ]
  },
  "oci-data-identity_tag_defaults": {
    "description": "Defines identity_tag_defaults",
    "prefix": "tf-oci-data-identity_tag_defaults",
    "body": [
      "data \"oci_identity_tag_defaults\" \"test_tag_defaults\" {",
      "",
      "\t#Optional",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tid = \"${var.tag_default_id}\"",
      "\tstate = \"${var.tag_default_state}\"",
      "\ttag_definition_id = \"${oci_identity_tag_definition.test_tag_definition.id}\"",
      "}"
    ]
  },
  "oci-data-identity_tag_namespaces": {
    "description": "Defines identity_tag_namespaces",
    "prefix": "tf-oci-data-identity_tag_namespaces",
    "body": [
      "data \"oci_identity_tag_namespaces\" \"test_tag_namespaces\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tinclude_subcompartments = \"${var.tag_namespace_include_subcompartments}\"",
      "\tstate = \"${var.tag_namespace_state}\"",
      "}"
    ]
  },
  "oci-data-identity_tags": {
    "description": "Defines identity_tags",
    "prefix": "tf-oci-data-identity_tags",
    "body": [
      "data \"oci_identity_tags\" \"test_tags\" {",
      "\t#Required",
      "\ttag_namespace_id = \"${oci_identity_tag_namespace.test_tag_namespace.id}\"",
      "",
      "\t#Optional",
      "\tstate = \"${var.tag_state}\"",
      "}"
    ]
  },
  "oci-data-identity_tenancy": {
    "description": "Defines identity_tenancy",
    "prefix": "tf-oci-data-identity_tenancy",
    "body": [
      "data \"oci_identity_tenancy\" \"test_tenancy\" {",
      "\t#Required",
      "\ttenancy_id = \"${var.tenancy_ocid}\"",
      "}"
    ]
  },
  "oci-data-identity_ui_password": {
    "description": "Defines identity_ui_password",
    "prefix": "tf-oci-data-identity_ui_password",
    "body": [
      "data \"oci_identity_ui_password\" \"test_ui_password\" {",
      "\t#Required",
      "\tuser_id = \"${oci_identity_user.test_user.id}\"",
      "}"
    ]
  },
  "oci-data-identity_user": {
    "description": "Defines identity_user",
    "prefix": "tf-oci-data-identity_user",
    "body": [
      "data \"oci_identity_user\" \"test_user\" {",
      "\t#Required",
      "\tuser_id = \"${oci_identity_user.test_user.id}\"",
      "}"
    ]
  },
  "oci-data-identity_user_group_memberships": {
    "description": "Defines identity_user_group_memberships",
    "prefix": "tf-oci-data-identity_user_group_memberships",
    "body": [
      "data \"oci_identity_user_group_memberships\" \"test_user_group_memberships\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.tenancy_ocid}\"",
      "",
      "\t#Optional",
      "\tgroup_id = \"${oci_identity_group.test_group.id}\"",
      "\tuser_id = \"${oci_identity_user.test_user.id}\"",
      "}"
    ]
  },
  "oci-data-identity_users": {
    "description": "Defines identity_users",
    "prefix": "tf-oci-data-identity_users",
    "body": [
      "data \"oci_identity_users\" \"test_users\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.tenancy_ocid}\"",
      "",
      "\t#Optional",
      "\texternal_identifier = \"${var.user_external_identifier}\"",
      "\tidentity_provider_id = \"${oci_identity_identity_provider.test_identity_provider.id}\"",
      "}"
    ]
  },
  "oci-data-kms_decrypted_data": {
    "description": "Defines kms_decrypted_data",
    "prefix": "tf-oci-data-kms_decrypted_data",
    "body": [
      "data \"oci_kms_decrypted_data\" \"test_decrypted_data\" {",
      "\t#Required",
      "\tciphertext = \"${var.decrypted_data_ciphertext}\"",
      "\tcrypto_endpoint = \"${var.decrypted_data_crypto_endpoint}\"",
      "\tkey_id = \"${oci_kms_key.test_key.id}\"",
      "",
      "\t#Optional",
      "\tassociated_data = \"${var.decrypted_data_associated_data}\"",
      "}"
    ]
  },
  "oci-data-kms_encrypted_data": {
    "description": "Defines kms_encrypted_data",
    "prefix": "tf-oci-data-kms_encrypted_data",
    "body": [
      "data \"oci_kms_encrypted_data\" \"test_encrypted_data\" {",
      "\t#Required",
      "\tcrypto_endpoint = \"${var.encrypted_data_crypto_endpoint}\"",
      "\tkey_id = \"${oci_kms_key.test_key.id}\"",
      "\tplaintext = \"${var.encrypted_data_plaintext}\"",
      "",
      "\t#Optional",
      "\tassociated_data = \"${var.encrypted_data_associated_data}\"",
      "}"
    ]
  },
  "oci-data-kms_key": {
    "description": "Defines kms_key",
    "prefix": "tf-oci-data-kms_key",
    "body": [
      "data \"oci_kms_key\" \"test_key\" {",
      "\t#Required",
      "\tkey_id = \"${oci_kms_key.test_key.id}\"",
      "\tmanagement_endpoint = \"${var.key_management_endpoint}\"",
      "}"
    ]
  },
  "oci-data-kms_key_version": {
    "description": "Defines kms_key_version",
    "prefix": "tf-oci-data-kms_key_version",
    "body": [
      "data \"oci_kms_key_version\" \"test_key_version\" {",
      "\t#Required",
      "\tkey_id = \"${oci_kms_key.test_key.id}\"",
      "\tkey_version_id = \"${oci_kms_key_version.test_key_version.id}\"",
      "\tmanagement_endpoint = \"${var.key_version_management_endpoint}\"",
      "}"
    ]
  },
  "oci-data-kms_key_versions": {
    "description": "Defines kms_key_versions",
    "prefix": "tf-oci-data-kms_key_versions",
    "body": [
      "data \"oci_kms_key_versions\" \"test_key_versions\" {",
      "\t#Required",
      "\tkey_id = \"${oci_kms_key.test_key.id}\"",
      "\tmanagement_endpoint = \"${var.key_version_management_endpoint}\"",
      "}"
    ]
  },
  "oci-data-kms_keys": {
    "description": "Defines kms_keys",
    "prefix": "tf-oci-data-kms_keys",
    "body": [
      "data \"oci_kms_keys\" \"test_keys\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tmanagement_endpoint = \"${var.key_management_endpoint}\"",
      "}"
    ]
  },
  "oci-data-kms_vault": {
    "description": "Defines kms_vault",
    "prefix": "tf-oci-data-kms_vault",
    "body": [
      "data \"oci_kms_vault\" \"test_vault\" {",
      "\t#Required",
      "\tvault_id = \"${oci_kms_vault.test_vault.id}\"",
      "}"
    ]
  },
  "oci-data-kms_vaults": {
    "description": "Defines kms_vaults",
    "prefix": "tf-oci-data-kms_vaults",
    "body": [
      "data \"oci_kms_vaults\" \"test_vaults\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "}"
    ]
  },
  "oci-data-limits_quota": {
    "description": "Defines limits_quota",
    "prefix": "tf-oci-data-limits_quota",
    "body": [
      "data \"oci_limits_quota\" \"test_quota\" {",
      "\t#Required",
      "\tquota_id = \"${oci_limits_quota.test_quota.id}\"",
      "}"
    ]
  },
  "oci-data-limits_quotas": {
    "description": "Defines limits_quotas",
    "prefix": "tf-oci-data-limits_quotas",
    "body": [
      "data \"oci_limits_quotas\" \"test_quotas\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.tenancy_ocid}\"",
      "",
      "\t#Optional",
      "\tname = \"${var.quota_name}\"",
      "\tstate = \"${var.quota_state}\"",
      "}"
    ]
  },
  "oci-data-load_balancer_backend_health": {
    "description": "Defines load_balancer_backend_health",
    "prefix": "tf-oci-data-load_balancer_backend_health",
    "body": [
      "data \"oci_load_balancer_backend_health\" \"test_backend_health\" {",
      "\t#Required",
      "\tbackend_name = \"${oci_load_balancer_backend.test_backend.name}\"",
      "\tbackend_set_name = \"${oci_load_balancer_backend_set.test_backend_set.name}\"",
      "\tload_balancer_id = \"${oci_load_balancer_load_balancer.test_load_balancer.id}\"",
      "}"
    ]
  },
  "oci-data-load_balancer_backend_set_health": {
    "description": "Defines load_balancer_backend_set_health",
    "prefix": "tf-oci-data-load_balancer_backend_set_health",
    "body": [
      "data \"oci_load_balancer_backend_set_health\" \"test_backend_set_health\" {",
      "\t#Required",
      "\tbackend_set_name = \"${oci_load_balancer_backend_set.test_backend_set.name}\"",
      "\tload_balancer_id = \"${oci_load_balancer_load_balancer.test_load_balancer.id}\"",
      "}"
    ]
  },
  "oci-data-load_balancer_backend_sets": {
    "description": "Defines load_balancer_backend_sets",
    "prefix": "tf-oci-data-load_balancer_backend_sets",
    "body": [
      "data \"oci_load_balancer_backend_sets\" \"test_backend_sets\" {",
      "\t#Required",
      "\tload_balancer_id = \"${oci_load_balancer_load_balancer.test_load_balancer.id}\"",
      "}"
    ]
  },
  "oci-data-load_balancer_backends": {
    "description": "Defines load_balancer_backends",
    "prefix": "tf-oci-data-load_balancer_backends",
    "body": [
      "data \"oci_load_balancer_backends\" \"test_backends\" {",
      "\t#Required",
      "\tbackendset_name = \"${oci_load_balancer_backend_set.test_backend_set.name}\"",
      "\tload_balancer_id = \"${oci_load_balancer_load_balancer.test_load_balancer.id}\"",
      "}"
    ]
  },
  "oci-data-load_balancer_certificates": {
    "description": "Defines load_balancer_certificates",
    "prefix": "tf-oci-data-load_balancer_certificates",
    "body": [
      "data \"oci_load_balancer_certificates\" \"test_certificates\" {",
      "\t#Required",
      "\tload_balancer_id = \"${oci_load_balancer_load_balancer.test_load_balancer.id}\"",
      "}"
    ]
  },
  "oci-data-load_balancer_hostnames": {
    "description": "Defines load_balancer_hostnames",
    "prefix": "tf-oci-data-load_balancer_hostnames",
    "body": [
      "data \"oci_load_balancer_hostnames\" \"test_hostnames\" {",
      "\t#Required",
      "\tload_balancer_id = \"${oci_load_balancer_load_balancer.test_load_balancer.id}\"",
      "}"
    ]
  },
  "oci-data-load_balancer_listener_rules": {
    "description": "Defines load_balancer_listener_rules",
    "prefix": "tf-oci-data-load_balancer_listener_rules",
    "body": [
      "data \"oci_load_balancer_listener_rules\" \"test_listener_rules\" {",
      "\t#Required",
      "\tlistener_name = \"${oci_load_balancer_listener.test_listener.name}\"",
      "\tload_balancer_id = \"${oci_load_balancer_load_balancer.test_load_balancer.id}\"",
      "}"
    ]
  },
  "oci-data-load_balancer_load_balancer_health": {
    "description": "Defines load_balancer_load_balancer_health",
    "prefix": "tf-oci-data-load_balancer_load_balancer_health",
    "body": [
      "data \"oci_load_balancer_health\" \"test_load_balancer_health\" {",
      "\t#Required",
      "\tload_balancer_id = \"${oci_load_balancer_load_balancer.test_load_balancer.id}\"",
      "}"
    ]
  },
  "oci-data-load_balancer_load_balancer_policies": {
    "description": "Defines load_balancer_load_balancer_policies",
    "prefix": "tf-oci-data-load_balancer_load_balancer_policies",
    "body": [
      "data \"oci_load_balancer_policies\" \"test_load_balancer_policies\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "}"
    ]
  },
  "oci-data-load_balancer_load_balancer_protocols": {
    "description": "Defines load_balancer_load_balancer_protocols",
    "prefix": "tf-oci-data-load_balancer_load_balancer_protocols",
    "body": [
      "data \"oci_load_balancer_protocols\" \"test_load_balancer_protocols\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "}"
    ]
  },
  "oci-data-load_balancer_load_balancer_shapes": {
    "description": "Defines load_balancer_load_balancer_shapes",
    "prefix": "tf-oci-data-load_balancer_load_balancer_shapes",
    "body": [
      "data \"oci_load_balancer_shapes\" \"test_load_balancer_shapes\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "}"
    ]
  },
  "oci-data-load_balancer_load_balancers": {
    "description": "Defines load_balancer_load_balancers",
    "prefix": "tf-oci-data-load_balancer_load_balancers",
    "body": [
      "data \"oci_load_balancer_load_balancers\" \"test_load_balancers\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdetail = \"${var.load_balancer_detail}\"",
      "\tdisplay_name = \"${var.load_balancer_display_name}\"",
      "\tstate = \"${var.load_balancer_state}\"",
      "}"
    ]
  },
  "oci-data-load_balancer_path_route_sets": {
    "description": "Defines load_balancer_path_route_sets",
    "prefix": "tf-oci-data-load_balancer_path_route_sets",
    "body": [
      "data \"oci_load_balancer_path_route_sets\" \"test_path_route_sets\" {",
      "\t#Required",
      "\tload_balancer_id = \"${oci_load_balancer_load_balancer.test_load_balancer.id}\"",
      "}"
    ]
  },
  "oci-data-load_balancer_rule_set": {
    "description": "Defines load_balancer_rule_set",
    "prefix": "tf-oci-data-load_balancer_rule_set",
    "body": [
      "data \"oci_load_balancer_rule_set\" \"test_rule_set\" {",
      "\t#Required",
      "\tload_balancer_id = \"${oci_load_balancer_load_balancer.test_load_balancer.id}\"",
      "\tname = \"${var.rule_set_name}\"",
      "}"
    ]
  },
  "oci-data-load_balancer_rule_sets": {
    "description": "Defines load_balancer_rule_sets",
    "prefix": "tf-oci-data-load_balancer_rule_sets",
    "body": [
      "data \"oci_load_balancer_rule_sets\" \"test_rule_sets\" {",
      "\t#Required",
      "\tload_balancer_id = \"${oci_load_balancer_load_balancer.test_load_balancer.id}\"",
      "}"
    ]
  },
  "oci-data-monitoring_alarm": {
    "description": "Defines monitoring_alarm",
    "prefix": "tf-oci-data-monitoring_alarm",
    "body": [
      "data \"oci_monitoring_alarm\" \"test_alarm\" {",
      "\t#Required",
      "\talarm_id = \"${oci_monitoring_alarm.test_alarm.id}\"",
      "}"
    ]
  },
  "oci-data-monitoring_alarm_history_collection": {
    "description": "Defines monitoring_alarm_history_collection",
    "prefix": "tf-oci-data-monitoring_alarm_history_collection",
    "body": [
      "data \"oci_monitoring_alarm_history_collection\" \"test_alarm_history_collection\" {",
      "\t#Required",
      "\talarm_id = \"${oci_monitoring_alarm.test_alarm.id}\"",
      "",
      "\t#Optional",
      "\talarm_historytype = \"${var.alarm_history_collection_alarm_historytype}\"",
      "\ttimestamp_greater_than_or_equal_to = \"${var.alarm_history_collection_timestamp_greater_than_or_equal_to}\"",
      "\ttimestamp_less_than = \"${var.alarm_history_collection_timestamp_less_than}\"",
      "}"
    ]
  },
  "oci-data-monitoring_alarm_statuses": {
    "description": "Defines monitoring_alarm_statuses",
    "prefix": "tf-oci-data-monitoring_alarm_statuses",
    "body": [
      "data \"oci_monitoring_alarm_statuses\" \"test_alarm_statuses\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tcompartment_id_in_subtree = \"${var.alarm_status_compartment_id_in_subtree}\"",
      "\tdisplay_name = \"${var.alarm_status_display_name}\"",
      "}"
    ]
  },
  "oci-data-monitoring_alarms": {
    "description": "Defines monitoring_alarms",
    "prefix": "tf-oci-data-monitoring_alarms",
    "body": [
      "data \"oci_monitoring_alarms\" \"test_alarms\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tcompartment_id_in_subtree = \"${var.alarm_compartment_id_in_subtree}\"",
      "\tdisplay_name = \"${var.alarm_display_name}\"",
      "\tstate = \"${var.alarm_state}\"",
      "}"
    ]
  },
  "oci-data-monitoring_metric_data": {
    "description": "Defines monitoring_metric_data",
    "prefix": "tf-oci-data-monitoring_metric_data",
    "body": [
      "data \"oci_monitoring_metric_data\" \"test_metric_data\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tnamespace = \"${var.metric_data_namespace}\"",
      "\tquery = \"${var.metric_data_query}\"",
      "",
      "\t#Optional",
      "\tcompartment_id_in_subtree = \"${var.metric_data_compartment_id_in_subtree}\"",
      "\tend_time = \"${var.metric_data_end_time}\"",
      "\tresolution = \"${var.metric_data_resolution}\"",
      "\tstart_time = \"${var.metric_data_start_time}\"",
      "}"
    ]
  },
  "oci-data-monitoring_metrics": {
    "description": "Defines monitoring_metrics",
    "prefix": "tf-oci-data-monitoring_metrics",
    "body": [
      "data \"oci_monitoring_metrics\" \"test_metrics\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tcompartment_id_in_subtree = \"${var.metric_compartment_id_in_subtree}\"",
      "\tdimension_filters = \"${var.metric_dimension_filters}\"",
      "\tgroup_by = \"${var.metric_group_by}\"",
      "\tname = \"${var.metric_name}\"",
      "\tnamespace = \"${var.metric_namespace}\"",
      "}"
    ]
  },
  "oci-data-object_storage_bucket": {
    "description": "Defines object_storage_bucket",
    "prefix": "tf-oci-data-object_storage_bucket",
    "body": [
      "data \"oci_objectstorage_bucket\" \"test_bucket\" {",
      "\t#Required",
      "\tname = \"${var.bucket_name}\"",
      "\tnamespace = \"${var.bucket_namespace}\"",
      "}"
    ]
  },
  "oci-data-object_storage_buckets": {
    "description": "Defines object_storage_buckets",
    "prefix": "tf-oci-data-object_storage_buckets",
    "body": [
      "data \"oci_objectstorage_bucket_summaries\" \"test_buckets\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tnamespace = \"${var.bucket_namespace}\"",
      "}"
    ]
  },
  "oci-data-object_storage_namespace": {
    "description": "Defines object_storage_namespace",
    "prefix": "tf-oci-data-object_storage_namespace",
    "body": [
      "data \"oci_objectstorage_namespace\" \"test_namespace\" {",
      "",
      "\t#Optional",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "}"
    ]
  },
  "oci-data-object_storage_object": {
    "description": "Defines object_storage_object",
    "prefix": "tf-oci-data-object_storage_object",
    "body": [
      "data \"oci_objectstorage_object\" \"test_object\" {",
      "\t#Required",
      "\tbucket = \"${var.object_bucket}\"",
      "\tnamespace = \"${var.object_namespace}\"",
      "\tobject = \"${var.object_object}\"",
      "}"
    ]
  },
  "oci-data-object_storage_object_head": {
    "description": "Defines object_storage_object_head",
    "prefix": "tf-oci-data-object_storage_object_head",
    "body": [
      "data \"oci_objectstorage_object_head\" \"test_object_head\" {",
      "\t#Required",
      "\tbucket = \"${var.object_bucket}\"",
      "\tnamespace = \"${var.object_namespace}\"",
      "\tobject = \"${var.object_object}\"",
      "}"
    ]
  },
  "oci-data-object_storage_object_lifecycle_policy": {
    "description": "Defines object_storage_object_lifecycle_policy",
    "prefix": "tf-oci-data-object_storage_object_lifecycle_policy",
    "body": [
      "data \"oci_objectstorage_object_lifecycle_policy\" \"test_object_lifecycle_policy\" {",
      "\t#Required",
      "\tbucket = \"${var.object_lifecycle_policy_bucket}\"",
      "\tnamespace = \"${var.object_lifecycle_policy_namespace}\"",
      "}"
    ]
  },
  "oci-data-object_storage_objects": {
    "description": "Defines object_storage_objects",
    "prefix": "tf-oci-data-object_storage_objects",
    "body": [
      "data \"oci_objectstorage_objects\" \"test_objects\" {",
      "\t#Required",
      "\tbucket = \"${var.object_bucket}\"",
      "\tnamespace = \"${var.object_namespace}\"",
      "",
      "\t#Optional",
      "\tdelimiter = \"${var.object_delimiter}\"",
      "\tend = \"${var.object_end}\"",
      "\tprefix = \"${var.object_prefix}\"",
      "\tstart = \"${var.object_start}\"",
      "}"
    ]
  },
  "oci-data-object_storage_preauthenticated_request": {
    "description": "Defines object_storage_preauthenticated_request",
    "prefix": "tf-oci-data-object_storage_preauthenticated_request",
    "body": [
      "data \"oci_objectstorage_preauthrequest\" \"test_preauthenticated_request\" {",
      "\t#Required",
      "\tbucket = \"${var.preauthenticated_request_bucket}\"",
      "\tnamespace = \"${var.preauthenticated_request_namespace}\"",
      "\tpar_id = \"${oci_objectstorage_preauthrequest.test_par.id}\"",
      "}"
    ]
  },
  "oci-data-object_storage_preauthenticated_requests": {
    "description": "Defines object_storage_preauthenticated_requests",
    "prefix": "tf-oci-data-object_storage_preauthenticated_requests",
    "body": [
      "data \"oci_objectstorage_preauthrequests\" \"test_preauthenticated_requests\" {",
      "\t#Required",
      "\tbucket = \"${var.preauthenticated_request_bucket}\"",
      "\tnamespace = \"${var.preauthenticated_request_namespace}\"",
      "",
      "\t#Optional",
      "\tobject_name_prefix = \"${var.preauthenticated_request_object_name_prefix}\"",
      "}"
    ]
  },
  "oci-data-ons_notification_topic": {
    "description": "Defines ons_notification_topic",
    "prefix": "tf-oci-data-ons_notification_topic",
    "body": [
      "data \"oci_ons_notification_topic\" \"test_notification_topic\" {",
      "\t#Required",
      "\ttopic_id = \"${oci_ons_notification_topic.test_notification_topic.id}\"",
      "}"
    ]
  },
  "oci-data-ons_notification_topics": {
    "description": "Defines ons_notification_topics",
    "prefix": "tf-oci-data-ons_notification_topics",
    "body": [
      "data \"oci_ons_notification_topics\" \"test_notification_topics\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tid = \"${var.notification_topic_id}\"",
      "\tname = \"${var.notification_topic_name}\"",
      "\tstate = \"${var.notification_topic_state}\"",
      "}"
    ]
  },
  "oci-data-ons_subscription": {
    "description": "Defines ons_subscription",
    "prefix": "tf-oci-data-ons_subscription",
    "body": [
      "data \"oci_ons_subscription\" \"test_subscription\" {",
      "\t#Required",
      "\tsubscription_id = \"${oci_ons_subscription.test_subscription.id}\"",
      "}"
    ]
  },
  "oci-data-ons_subscriptions": {
    "description": "Defines ons_subscriptions",
    "prefix": "tf-oci-data-ons_subscriptions",
    "body": [
      "data \"oci_ons_subscriptions\" \"test_subscriptions\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\ttopic_id = \"${oci_ons_notification_topic.test_notification_topic.id}\"",
      "}"
    ]
  },
  "oci-data-streaming_stream": {
    "description": "Defines streaming_stream",
    "prefix": "tf-oci-data-streaming_stream",
    "body": [
      "data \"oci_streaming_stream\" \"test_stream\" {",
      "\t#Required",
      "\tstream_id = \"${oci_streaming_stream.test_stream.id}\"",
      "}"
    ]
  },
  "oci-data-streaming_streams": {
    "description": "Defines streaming_streams",
    "prefix": "tf-oci-data-streaming_streams",
    "body": [
      "data \"oci_streaming_streams\" \"test_streams\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tid = \"${var.stream_id}\"",
      "\tname = \"${var.stream_name}\"",
      "\tstate = \"${var.stream_state}\"",
      "}"
    ]
  },
  "oci-data-waas_certificate": {
    "description": "Defines waas_certificate",
    "prefix": "tf-oci-data-waas_certificate",
    "body": [
      "data \"oci_waas_certificate\" \"test_certificate\" {",
      "\t#Required",
      "\tcertificate_id = \"${oci_waas_certificate.test_certificate.id}\"",
      "}"
    ]
  },
  "oci-data-waas_certificates": {
    "description": "Defines waas_certificates",
    "prefix": "tf-oci-data-waas_certificates",
    "body": [
      "data \"oci_waas_certificates\" \"test_certificates\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdisplay_names = \"${var.certificate_display_names}\"",
      "\tids = \"${var.certificate_ids}\"",
      "\tstates = \"${var.certificate_states}\"",
      "\ttime_created_greater_than_or_equal_to = \"${var.certificate_time_created_greater_than_or_equal_to}\"",
      "\ttime_created_less_than = \"${var.certificate_time_created_less_than}\"",
      "}"
    ]
  },
  "oci-data-waas_edge_subnets": {
    "description": "Defines waas_edge_subnets",
    "prefix": "tf-oci-data-waas_edge_subnets",
    "body": [
      "data \"oci_waas_edge_subnets\" \"test_edge_subnets\" {",
      "}"
    ]
  },
  "oci-data-waas_waas_policies": {
    "description": "Defines waas_waas_policies",
    "prefix": "tf-oci-data-waas_waas_policies",
    "body": [
      "data \"oci_waas_waas_policies\" \"test_waas_policies\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdisplay_names = \"${var.waas_policy_display_names}\"",
      "\tids = \"${var.waas_policy_ids}\"",
      "\tstates = \"${var.waas_policy_states}\"",
      "\ttime_created_greater_than_or_equal_to = \"${var.waas_policy_time_created_greater_than_or_equal_to}\"",
      "\ttime_created_less_than = \"${var.waas_policy_time_created_less_than}\"",
      "}"
    ]
  },
  "oci-data-waas_waas_policy": {
    "description": "Defines waas_waas_policy",
    "prefix": "tf-oci-data-waas_waas_policy",
    "body": [
      "data \"oci_waas_waas_policy\" \"test_waas_policy\" {",
      "\t#Required",
      "\twaas_policy_id = \"${oci_waas_waas_policy.test_waas_policy.id}\"",
      "}"
    ]
  },
  "oci-resource-audit_configuration": {
    "description": "Defines audit_configuration",
    "prefix": "tf-oci-resource-audit_configuration",
    "body": [
      "resource \"oci_audit_configuration\" \"test_configuration\" {",
      "  #Required",
      "  compartment_id = \"${var.tenancy_ocid}\"",
      "  ",
      "  #Optional",
      "  retention_period_days = \"${var.configuration_retention_period_days}\"",
      "}"
    ]
  },
  "oci-resource-auto_scaling_auto_scaling_configuration": {
    "description": "Defines auto_scaling_auto_scaling_configuration",
    "prefix": "tf-oci-resource-auto_scaling_auto_scaling_configuration",
    "body": [
      "resource \"oci_autoscaling_auto_scaling_configuration\" \"test_auto_scaling_configuration\" {",
      "\t#Required",
      "\tauto_scaling_resources {",
      "\t\t#Required",
      "\t\tid = \"${var.auto_scaling_configuration_auto_scaling_resources_id}\"",
      "\t\ttype = \"${var.auto_scaling_configuration_auto_scaling_resources_type}\"",
      "\t}",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tpolicies {",
      "\t\t#Required",
      "\t\tcapacity {",
      "\t\t\t#Required",
      "\t\t\tinitial = \"${var.auto_scaling_configuration_policies_capacity_initial}\"",
      "\t\t\tmax = \"${var.auto_scaling_configuration_policies_capacity_max}\"",
      "\t\t\tmin = \"${var.auto_scaling_configuration_policies_capacity_min}\"",
      "\t\t}",
      "\t\tpolicy_type = \"${var.auto_scaling_configuration_policies_policy_type}\"",
      "\t\trules {",
      "\t\t\t#Required",
      "\t\t\taction {",
      "\t\t\t\t#Required",
      "\t\t\t\ttype = \"${var.auto_scaling_configuration_policies_rules_action_type}\"",
      "\t\t\t\tvalue = \"${var.auto_scaling_configuration_policies_rules_action_value}\"",
      "\t\t\t}",
      "\t\t\tmetric {",
      "\t\t\t\t#Required",
      "\t\t\t\tmetric_type = \"${var.auto_scaling_configuration_policies_rules_metric_metric_type}\"",
      "\t\t\t\tthreshold {",
      "\t\t\t\t\t#Required",
      "\t\t\t\t\toperator = \"${var.auto_scaling_configuration_policies_rules_metric_threshold_operator}\"",
      "\t\t\t\t\tvalue = \"${var.auto_scaling_configuration_policies_rules_metric_threshold_value}\"",
      "\t\t\t\t}",
      "\t\t\t}",
      "",
      "\t\t\tdisplay_name = \"${var.auto_scaling_configuration_policies_rules_display_name}\"",
      "\t\t}",
      "",
      "\t\t#Optional",
      "\t\tdisplay_name = \"${var.auto_scaling_configuration_policies_display_name}\"",
      "\t}",
      "",
      "\t#Optional",
      "\tcool_down_in_seconds = \"${var.auto_scaling_configuration_cool_down_in_seconds}\"",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.auto_scaling_configuration_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\tis_enabled = \"${var.auto_scaling_configuration_is_enabled}\"",
      "}"
    ]
  },
  "oci-resource-budget_alert_rule": {
    "description": "Defines budget_alert_rule",
    "prefix": "tf-oci-resource-budget_alert_rule",
    "body": [
      "resource \"oci_budget_alert_rule\" \"test_alert_rule\" {",
      "\t#Required",
      "\tbudget_id = \"${oci_budget_budget.test_budget.id}\"",
      "\trecipients = \"${var.alert_rule_recipients}\"",
      "\tthreshold = \"${var.alert_rule_threshold}\"",
      "\tthreshold_type = \"${var.alert_rule_threshold_type}\"",
      "\ttype = \"${var.alert_rule_type}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdescription = \"${var.alert_rule_description}\"",
      "\tdisplay_name = \"${var.alert_rule_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\tmessage = \"${var.alert_rule_message}\"",
      "}"
    ]
  },
  "oci-resource-budget_budget": {
    "description": "Defines budget_budget",
    "prefix": "tf-oci-resource-budget_budget",
    "body": [
      "resource \"oci_budget_budget\" \"test_budget\" {",
      "\t#Required",
      "\tamount = \"${var.budget_amount}\"",
      "\tcompartment_id = \"${var.tenancy_ocid}\"",
      "\treset_period = \"${var.budget_reset_period}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdescription = \"${var.budget_description}\"",
      "\tdisplay_name = \"${var.budget_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\ttarget_compartment_id = \"${oci_budget_target_compartment.test_target_compartment.id}\"",
      "\ttarget_type = \"${var.budget_target_type}\"",
      "\ttargets = \"${var.budget_targets}\"",
      "}"
    ]
  },
  "oci-resource-containerengine_cluster": {
    "description": "Defines containerengine_cluster",
    "prefix": "tf-oci-resource-containerengine_cluster",
    "body": [
      "resource \"oci_containerengine_cluster\" \"test_cluster\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tkubernetes_version = \"${var.cluster_kubernetes_version}\"",
      "\tname = \"${var.cluster_name}\"",
      "\tvcn_id = \"${oci_containerengine_vcn.test_vcn.id}\"",
      "",
      "\t#Optional",
      "\toptions {",
      "",
      "\t\t#Optional",
      "\t\tadd_ons {",
      "",
      "\t\t\t#Optional",
      "\t\t\tis_kubernetes_dashboard_enabled = \"${var.cluster_options_add_ons_is_kubernetes_dashboard_enabled}\"",
      "\t\t\tis_tiller_enabled = \"${var.cluster_options_add_ons_is_tiller_enabled}\"",
      "\t\t}",
      "\t\tkubernetes_network_config {",
      "",
      "\t\t\t#Optional",
      "\t\t\tpods_cidr = \"${var.cluster_options_kubernetes_network_config_pods_cidr}\"",
      "\t\t\tservices_cidr = \"${var.cluster_options_kubernetes_network_config_services_cidr}\"",
      "\t\t}",
      "\t\tservice_lb_subnet_ids = \"${var.cluster_options_service_lb_subnet_ids}\"",
      "\t}",
      "}"
    ]
  },
  "oci-resource-containerengine_node_pool": {
    "description": "Defines containerengine_node_pool",
    "prefix": "tf-oci-resource-containerengine_node_pool",
    "body": [
      "resource \"oci_containerengine_node_pool\" \"test_node_pool\" {",
      "\t#Required",
      "\tcluster_id = \"${oci_containerengine_cluster.test_cluster.id}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tkubernetes_version = \"${var.node_pool_kubernetes_version}\"",
      "\tname = \"${var.node_pool_name}\"",
      "\tnode_shape = \"${var.node_pool_node_shape}\"",
      "\tsubnet_ids = \"${var.node_pool_subnet_ids}\"",
      "",
      "\t#Optional",
      "\tnode_image_name = \"${var.node_pool_node_image_name}\"",
      "\tinitial_node_labels {",
      "",
      "\t\t#Optional",
      "\t\tkey = \"${var.node_pool_initial_node_labels_key}\"",
      "\t\tvalue = \"${var.node_pool_initial_node_labels_value}\"",
      "\t}",
      "\tnode_metadata = \"${var.node_pool_node_metadata}\"",
      "\tquantity_per_subnet = \"${var.node_pool_quantity_per_subnet}\"",
      "\tssh_public_key = \"${var.node_pool_ssh_public_key}\"",
      "}"
    ]
  },
  "oci-resource-core_app_catalog_listing_resource_version_agreement": {
    "description": "Defines core_app_catalog_listing_resource_version_agreement",
    "prefix": "tf-oci-resource-core_app_catalog_listing_resource_version_agreement",
    "body": [
      "resource \"oci_core_app_catalog_listing_resource_version_agreement\" \"test_app_catalog_listing_resource_version_agreement\" {",
      "\t#Required",
      "\tlisting_id = \"${oci_core_listing.test_listing.id}\"",
      "\tlisting_resource_version = \"${var.app_catalog_listing_resource_version_agreement_listing_resource_version}\"",
      "}"
    ]
  },
  "oci-resource-core_app_catalog_subscription": {
    "description": "Defines core_app_catalog_subscription",
    "prefix": "tf-oci-resource-core_app_catalog_subscription",
    "body": [
      "resource \"oci_core_app_catalog_subscription\" \"test_app_catalog_subscription\" {",
      "",
      "\t#Optional",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\teula_link = \"${var.app_catalog_subscription_eula_link}\"",
      "\tlisting_id = \"${oci_core_listing.test_listing.id}\"",
      "\tlisting_resource_version = \"${var.app_catalog_subscription_listing_resource_version}\"",
      "\toracle_terms_of_use_link = \"${var.app_catalog_subscription_oracle_terms_of_use_link}\"",
      "\tsignature = \"${var.app_catalog_subscription_signature}\"",
      "\ttime_retrieved = \"${var.app_catalog_subscription_time_retrieved}\"",
      "}"
    ]
  },
  "oci-resource-core_boot_volume": {
    "description": "Defines core_boot_volume",
    "prefix": "tf-oci-resource-core_boot_volume",
    "body": [
      "resource \"oci_core_boot_volume\" \"test_boot_volume\" {",
      "\t#Required",
      "\tavailability_domain = \"${var.boot_volume_availability_domain}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tsource_details {",
      "\t\t#Required",
      "\t\tid = \"${var.boot_volume_source_details_id}\"",
      "\t\ttype = \"${var.boot_volume_source_details_type}\"",
      "\t}",
      "",
      "\t#Optional",
      "\tbackup_policy_id = \"${data.oci_core_volume_backup_policies.test_volume_backup_policies.volume_backup_policies.0.id}\"",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.boot_volume_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\tkms_key_id = \"${oci_core_kms_key.test_kms_key.id}\"",
      "\tsize_in_gbs = \"${var.boot_volume_size_in_gbs}\"",
      "}"
    ]
  },
  "oci-resource-core_boot_volume_backup": {
    "description": "Defines core_boot_volume_backup",
    "prefix": "tf-oci-resource-core_boot_volume_backup",
    "body": [
      "resource \"oci_core_boot_volume_backup\" \"test_boot_volume_backup\" {",
      "\t#Required",
      "\tboot_volume_id = \"${oci_core_boot_volume.test_boot_volume.id}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.boot_volume_backup_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\ttype = \"${var.boot_volume_backup_type}\"",
      "}"
    ]
  },
  "oci-resource-core_console_history": {
    "description": "Defines core_console_history",
    "prefix": "tf-oci-resource-core_console_history",
    "body": [
      "resource \"oci_core_console_history\" \"test_console_history\" {",
      "\t#Required",
      "\tinstance_id = \"${oci_core_instance.test_instance.id}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.console_history_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-core_cpe": {
    "description": "Defines core_cpe",
    "prefix": "tf-oci-resource-core_cpe",
    "body": [
      "resource \"oci_core_cpe\" \"test_cpe\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tip_address = \"${var.cpe_ip_address}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.cpe_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-core_cross_connect": {
    "description": "Defines core_cross_connect",
    "prefix": "tf-oci-resource-core_cross_connect",
    "body": [
      "resource \"oci_core_cross_connect\" \"test_cross_connect\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tlocation_name = \"${var.cross_connect_location_name}\"",
      "\tport_speed_shape_name = \"${var.cross_connect_port_speed_shape_name}\"",
      "",
      "\t#Optional",
      "\tcross_connect_group_id = \"${oci_core_cross_connect_group.test_cross_connect_group.id}\"",
      "\tcustomer_reference_name = \"${var.cross_connect_customer_reference_name}\"",
      "\tdisplay_name = \"${var.cross_connect_display_name}\"",
      "\tfar_cross_connect_or_cross_connect_group_id = \"${oci_core_far_cross_connect_or_cross_connect_group.test_far_cross_connect_or_cross_connect_group.id}\"",
      "\tnear_cross_connect_or_cross_connect_group_id = \"${oci_core_near_cross_connect_or_cross_connect_group.test_near_cross_connect_or_cross_connect_group.id}\"",
      "}"
    ]
  },
  "oci-resource-core_cross_connect_group": {
    "description": "Defines core_cross_connect_group",
    "prefix": "tf-oci-resource-core_cross_connect_group",
    "body": [
      "resource \"oci_core_cross_connect_group\" \"test_cross_connect_group\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tcustomer_reference_name = \"${var.cross_connect_group_customer_reference_name}\"",
      "\tdisplay_name = \"${var.cross_connect_group_display_name}\"",
      "}"
    ]
  },
  "oci-resource-core_dhcp_options": {
    "description": "Defines core_dhcp_options",
    "prefix": "tf-oci-resource-core_dhcp_options",
    "body": [
      "resource \"oci_core_dhcp_options\" \"test_dhcp_options\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\toptions {",
      "        type = \"DomainNameServer\"",
      "        server_type = \"VcnLocalPlusInternet\"",
      "\t}",
      "\t",
      "    options {",
      "        type = \"SearchDomain\"",
      "        search_domain_names = [ \"test.com\" ]",
      "    }",
      "\t",
      "\tvcn_id = \"${oci_core_vcn.test_vcn.id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.dhcp_options_display_name}\"",
      "}"
    ]
  },
  "oci-resource-core_drg": {
    "description": "Defines core_drg",
    "prefix": "tf-oci-resource-core_drg",
    "body": [
      "resource \"oci_core_drg\" \"test_drg\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.drg_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-core_drg_attachment": {
    "description": "Defines core_drg_attachment",
    "prefix": "tf-oci-resource-core_drg_attachment",
    "body": [
      "resource \"oci_core_drg_attachment\" \"test_drg_attachment\" {",
      "\t#Required",
      "\tdrg_id = \"${oci_core_drg.test_drg.id}\"",
      "\tvcn_id = \"${oci_core_vcn.test_vcn.id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.drg_attachment_display_name}\"",
      "\troute_table_id = \"${oci_core_route_table.test_route_table.id}\"",
      "}"
    ]
  },
  "oci-resource-core_image": {
    "description": "Defines core_image",
    "prefix": "tf-oci-resource-core_image",
    "body": [
      "resource \"oci_core_image\" \"test_image\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tinstance_id = \"${oci_core_instance.test_instance.id}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.image_display_name}\"",
      "\tlaunch_mode = \"${var.image_launch_mode}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-core_instance": {
    "description": "Defines core_instance",
    "prefix": "tf-oci-resource-core_instance",
    "body": [
      "resource \"oci_core_instance\" \"test_instance\" {",
      "\t#Required",
      "\tavailability_domain = \"${var.instance_availability_domain}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tshape = \"${var.instance_shape}\"",
      "",
      "\t#Optional",
      "\tagent_config {",
      "",
      "\t\t#Optional",
      "\t\tis_monitoring_disabled = \"${var.instance_agent_config_is_monitoring_disabled}\"",
      "\t}",
      "\tcreate_vnic_details {",
      "\t\t#Required",
      "\t\tsubnet_id = \"${oci_core_subnet.test_subnet.id}\"",
      "",
      "\t\t#Optional",
      "\t\tassign_public_ip = \"${var.instance_create_vnic_details_assign_public_ip}\"",
      "\t\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\t\tdisplay_name = \"${var.instance_create_vnic_details_display_name}\"",
      "\t\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\t\thostname_label = \"${var.instance_create_vnic_details_hostname_label}\"",
      "\t\tnsg_ids = \"${var.instance_create_vnic_details_nsg_ids}\"",
      "\t\tprivate_ip = \"${var.instance_create_vnic_details_private_ip}\"",
      "\t\tskip_source_dest_check = \"${var.instance_create_vnic_details_skip_source_dest_check}\"",
      "\t}",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.instance_display_name}\"",
      "\textended_metadata = {",
      "\t\tsome_string = \"stringA\"",
      "\t\tnested_object = \"{\\\"some_string\\\": \\\"stringB\\\", \\\"object\\\": {\\\"some_string\\\": \\\"stringC\\\"}}\"",
      "\t}",
      "\tfault_domain = \"${var.instance_fault_domain}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\thostname_label = \"${var.instance_hostname_label}\"",
      "\tipxe_script = \"${var.instance_ipxe_script}\"",
      "\tis_pv_encryption_in_transit_enabled = \"${var.instance_is_pv_encryption_in_transit_enabled}\"",
      "\tmetadata = {",
      "\t\tssh_authorized_keys = \"${var.ssh_public_key}\"",
      "\t\tuser_data = \"${base64encode(file(var.custom_bootstrap_file_name))}\"",
      "\t}",
      "\tsource_details {",
      "\t\t#Required",
      "\t\tsource_id = \"${oci_core_image.test_image.id}\"",
      "\t\tsource_type = \"image\"",
      "",
      "\t\t#Optional",
      "\t\tboot_volume_size_in_gbs = \"${var.instance_source_details_boot_volume_size_in_gbs}\"",
      "\t\tkms_key_id = \"${oci_core_kms_key.test_kms_key.id}\"",
      "\t}",
      "\tpreserve_boot_volume = false",
      "}"
    ]
  },
  "oci-resource-core_instance_configuration": {
    "description": "Defines core_instance_configuration",
    "prefix": "tf-oci-resource-core_instance_configuration",
    "body": [
      "resource \"oci_core_instance_configuration\" \"test_instance_configuration\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.instance_configuration_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\tinstance_details {",
      "\t\t#Required",
      "\t\tinstance_type = \"${var.instance_configuration_instance_details_instance_type}\"",
      "",
      "\t\t#Optional",
      "\t\tblock_volumes {",
      "",
      "\t\t\t#Optional",
      "\t\t\tattach_details {",
      "\t\t\t\t#Required",
      "\t\t\t\ttype = \"${var.instance_configuration_instance_details_block_volumes_attach_details_type}\"",
      "",
      "\t\t\t\t#Optional",
      "\t\t\t\tdisplay_name = \"${var.instance_configuration_instance_details_block_volumes_attach_details_display_name}\"",
      "\t\t\t\tis_read_only = \"${var.instance_configuration_instance_details_block_volumes_attach_details_is_read_only}\"",
      "\t\t\t\tuse_chap = \"${var.instance_configuration_instance_details_block_volumes_attach_details_use_chap}\"",
      "\t\t\t}",
      "\t\t\tcreate_details {",
      "",
      "\t\t\t\t#Optional",
      "\t\t\t\tavailability_domain = \"${var.instance_configuration_instance_details_block_volumes_create_details_availability_domain}\"",
      "\t\t\t\tbackup_policy_id = \"${data.oci_core_volume_backup_policies.test_volume_backup_policies.volume_backup_policies.0.id}\"",
      "\t\t\t\tcompartment_id = \"${var.compartment_id}\"",
      "\t\t\t\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\t\t\t\tdisplay_name = \"${var.instance_configuration_instance_details_block_volumes_create_details_display_name}\"",
      "\t\t\t\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\t\t\t\tsize_in_gbs = \"${var.instance_configuration_instance_details_block_volumes_create_details_size_in_gbs}\"",
      "\t\t\t\tsource_details {",
      "\t\t\t\t\t#Required",
      "\t\t\t\t\ttype = \"${var.instance_configuration_instance_details_block_volumes_create_details_source_details_type}\"",
      "",
      "\t\t\t\t\t#Optional",
      "\t\t\t\t\tid = \"${var.instance_configuration_instance_details_block_volumes_create_details_source_details_id}\"",
      "\t\t\t\t}",
      "\t\t\t}",
      "\t\t\tvolume_id = \"${oci_core_volume.test_volume.id}\"",
      "\t\t}",
      "\t\tlaunch_details {",
      "",
      "\t\t\t#Optional",
      "\t\t\tavailability_domain = \"${var.instance_configuration_instance_details_launch_details_availability_domain}\"",
      "\t\t\tcompartment_id = \"${var.compartment_id}\"",
      "\t\t\tcreate_vnic_details {",
      "",
      "\t\t\t\t#Optional",
      "\t\t\t\tassign_public_ip = \"${var.instance_configuration_instance_details_launch_details_create_vnic_details_assign_public_ip}\"",
      "\t\t\t\tdisplay_name = \"${var.instance_configuration_instance_details_launch_details_create_vnic_details_display_name}\"",
      "\t\t\t\thostname_label = \"${var.instance_configuration_instance_details_launch_details_create_vnic_details_hostname_label}\"",
      "\t\t\t\tnsg_ids = \"${var.instance_configuration_instance_details_launch_details_create_vnic_details_nsg_ids}\"",
      "\t\t\t\tprivate_ip = \"${var.instance_configuration_instance_details_launch_details_create_vnic_details_private_ip}\"",
      "\t\t\t\tskip_source_dest_check = \"${var.instance_configuration_instance_details_launch_details_create_vnic_details_skip_source_dest_check}\"",
      "\t\t\t\tsubnet_id = \"${oci_core_subnet.test_subnet.id}\"",
      "\t\t\t}",
      "\t\t\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\t\t\tdisplay_name = \"${var.instance_configuration_instance_details_launch_details_display_name}\"",
      "\t\t\textended_metadata = \"${var.instance_configuration_instance_details_launch_details_extended_metadata}\"",
      "\t\t\tfault_domain = \"${var.instance_configuration_instance_details_launch_details_fault_domain}\"",
      "\t\t\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\t\t\tipxe_script = \"${var.instance_configuration_instance_details_launch_details_ipxe_script}\"",
      "\t\t\tmetadata = \"${var.instance_configuration_instance_details_launch_details_metadata}\"",
      "\t\t\tshape = \"${var.instance_configuration_instance_details_launch_details_shape}\"",
      "\t\t\tsource_details {",
      "\t\t\t\t#Required",
      "\t\t\t\tsource_type = \"${var.instance_configuration_instance_details_launch_details_source_details_source_type}\"",
      "",
      "\t\t\t\t#Optional",
      "\t\t\t\tboot_volume_id = \"${oci_core_boot_volume.test_boot_volume.id}\"",
      "\t\t\t\tboot_volume_size_in_gbs = \"${var.instance_configuration_instance_details_launch_details_source_details_boot_volume_size_in_gbs}\"",
      "\t\t\t\timage_id = \"${oci_core_image.test_image.id}\"",
      "\t\t\t}",
      "\t\t}",
      "\t\tsecondary_vnics {",
      "",
      "\t\t\t#Optional",
      "\t\t\tcreate_vnic_details {",
      "",
      "\t\t\t\t#Optional",
      "\t\t\t\tassign_public_ip = \"${var.instance_configuration_instance_details_secondary_vnics_create_vnic_details_assign_public_ip}\"",
      "\t\t\t\tdisplay_name = \"${var.instance_configuration_instance_details_secondary_vnics_create_vnic_details_display_name}\"",
      "\t\t\t\thostname_label = \"${var.instance_configuration_instance_details_secondary_vnics_create_vnic_details_hostname_label}\"",
      "\t\t\t\tnsg_ids = \"${var.instance_configuration_instance_details_secondary_vnics_create_vnic_details_nsg_ids}\"",
      "\t\t\t\tprivate_ip = \"${var.instance_configuration_instance_details_secondary_vnics_create_vnic_details_private_ip}\"",
      "\t\t\t\tskip_source_dest_check = \"${var.instance_configuration_instance_details_secondary_vnics_create_vnic_details_skip_source_dest_check}\"",
      "\t\t\t\tsubnet_id = \"${oci_core_subnet.test_subnet.id}\"",
      "\t\t\t}",
      "\t\t\tdisplay_name = \"${var.instance_configuration_instance_details_secondary_vnics_display_name}\"",
      "\t\t\tnic_index = \"${var.instance_configuration_instance_details_secondary_vnics_nic_index}\"",
      "\t\t}",
      "\t}",
      "\tinstance_id = \"${oci_core_instance.test_instance.id}\"",
      "\tsource = \"${var.instance_configuration_source}\"",
      "}"
    ]
  },
  "oci-resource-core_instance_console_connection": {
    "description": "Defines core_instance_console_connection",
    "prefix": "tf-oci-resource-core_instance_console_connection",
    "body": [
      "resource \"oci_core_instance_console_connection\" \"test_instance_console_connection\" {",
      "\t#Required",
      "\tinstance_id = \"${oci_core_instance.test_instance.id}\"",
      "\tpublic_key = \"${var.instance_console_connection_public_key}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-core_instance_pool": {
    "description": "Defines core_instance_pool",
    "prefix": "tf-oci-resource-core_instance_pool",
    "body": [
      "resource \"oci_core_instance_pool\" \"test_instance_pool\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tinstance_configuration_id = \"${oci_core_instance_configuration.test_instance_configuration.id}\"",
      "\tplacement_configurations {",
      "\t\t#Required",
      "\t\tavailability_domain = \"${var.instance_pool_placement_configurations_availability_domain}\"",
      "\t\tprimary_subnet_id = \"${oci_core_primary_subnet.test_primary_subnet.id}\"",
      "",
      "\t\t#Optional",
      "\t\tsecondary_vnic_subnets {",
      "\t\t\t#Required",
      "\t\t\tsubnet_id = \"${oci_core_subnet.test_subnet.id}\"",
      "",
      "\t\t\t#Optional",
      "\t\t\tdisplay_name = \"${var.instance_pool_placement_configurations_secondary_vnic_subnets_display_name}\"",
      "\t\t}",
      "\t}",
      "\tsize = \"${var.instance_pool_size}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.instance_pool_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\tload_balancers {",
      "\t\t#Required",
      "\t\tbackend_set_name = \"${oci_core_backend_set.test_backend_set.name}\"",
      "\t\tload_balancer_id = \"${oci_core_load_balancer.test_load_balancer.id}\"",
      "\t\tport = \"${var.instance_pool_load_balancers_port}\"",
      "\t\tvnic_selection = \"${var.instance_pool_load_balancers_vnic_selection}\"",
      "\t}",
      "}"
    ]
  },
  "oci-resource-core_internet_gateway": {
    "description": "Defines core_internet_gateway",
    "prefix": "tf-oci-resource-core_internet_gateway",
    "body": [
      "resource \"oci_core_internet_gateway\" \"test_internet_gateway\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tvcn_id = \"${oci_core_vcn.test_vcn.id}\"",
      "",
      "\t#Optional",
      "\tenabled = \"${var.internet_gateway_enabled}\"",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.internet_gateway_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-core_ip_sec_connection": {
    "description": "Defines core_ip_sec_connection",
    "prefix": "tf-oci-resource-core_ip_sec_connection",
    "body": [
      "resource \"oci_core_ipsec\" \"test_ip_sec_connection\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tcpe_id = \"${oci_core_cpe.test_cpe.id}\"",
      "\tdrg_id = \"${oci_core_drg.test_drg.id}\"",
      "\tstatic_routes = \"${var.ip_sec_connection_static_routes}\"",
      "",
      "\t#Optional",
      "\tcpe_local_identifier = \"${var.ip_sec_connection_cpe_local_identifier}\"",
      "\tcpe_local_identifier_type = \"${var.ip_sec_connection_cpe_local_identifier_type}\"",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.ip_sec_connection_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-core_ipsec_connection_tunnel_management": {
    "description": "Defines core_ipsec_connection_tunnel_management",
    "prefix": "tf-oci-resource-core_ipsec_connection_tunnel_management",
    "body": [
      "\"oci_core_ipsec_connection_tunnel_management\" \"test_ip_sec_connection_tunnel\" {",
      "\t#Required",
      "\tipsec_id = \"${oci_core_ipsec.test_ipsec.id}\"",
      "\ttunnel_id = \"${oci_core_tunnel.test_tunnel.id}\"",
      "\trouting = \"${var.ip_sec_connection_tunnel_configuration_routing}\"",
      "\t#Optional",
      "\tbgp_session_config {",
      "\t\t#Optional",
      "\t\tcustomer_bgp_asn = \"${var.ip_sec_connection_tunnel_configuration_bgp_session_config_customer_bgp_asn}\"",
      "\t\tcustomer_interface_ip = \"${var.ip_sec_connection_tunnel_configuration_bgp_session_config_customer_interface_ip}\"",
      "\t\toracle_interface_ip = \"${var.ip_sec_connection_tunnel_configuration_bgp_session_config_oracle_interface_ip}\"",
      "\t}",
      "\tdisplay_name = \"${var.ip_sec_connection_tunnel_configuration_display_name}\"",
      "\tshared_secret = \"${var.ip_sec_connection_tunnel_configuration_shared_secret}\"",
      "}"
    ]
  },
  "oci-resource-core_local_peering_gateway": {
    "description": "Defines core_local_peering_gateway",
    "prefix": "tf-oci-resource-core_local_peering_gateway",
    "body": [
      "resource \"oci_core_local_peering_gateway\" \"test_local_peering_gateway\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tvcn_id = \"${oci_core_vcn.test_vcn.id}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.local_peering_gateway_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\tpeer_id = \"${oci_core_local_peering_gateway.test_local_peering_gateway2.id}\"",
      "\troute_table_id = \"${oci_core_route_table.test_route_table.id}\"",
      "}"
    ]
  },
  "oci-resource-core_nat_gateway": {
    "description": "Defines core_nat_gateway",
    "prefix": "tf-oci-resource-core_nat_gateway",
    "body": [
      "resource \"oci_core_nat_gateway\" \"test_nat_gateway\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tvcn_id = \"${oci_core_vcn.test_vcn.id}\"",
      "",
      "\t#Optional",
      "\tblock_traffic = \"${var.nat_gateway_block_traffic}\"",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.nat_gateway_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-core_network_security_group": {
    "description": "Defines core_network_security_group",
    "prefix": "tf-oci-resource-core_network_security_group",
    "body": [
      "resource \"oci_core_network_security_group\" \"test_network_security_group\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tvcn_id = \"${oci_core_vcn.test_vcn.id}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.network_security_group_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-core_network_security_group_security_rule": {
    "description": "Defines core_network_security_group_security_rule",
    "prefix": "tf-oci-resource-core_network_security_group_security_rule",
    "body": [
      "resource \"oci_core_network_security_group_security_rule\" \"test_network_security_group_security_rule\" {",
      "\t#Required",
      "\tnetwork_security_group_id = \"${oci_core_network_security_group.test_network_security_group.id}\"",
      "    direction = \"${var.network_security_group_security_rule_direction}\"",
      "    protocol = \"${var.network_security_group_security_rule_protocol}\"",
      "",
      "    #Optional",
      "    description = \"${var.network_security_group_security_rule_description}\"",
      "    destination = \"${var.network_security_group_security_rule_destination}\"",
      "    destination_type = \"${var.network_security_group_security_rule_destination_type}\"",
      "    icmp_options {",
      "        #Required",
      "        type = \"${var.network_security_group_security_rule_icmp_options_type}\"",
      "",
      "        #Optional",
      "        code = \"${var.network_security_group_security_rule_icmp_options_code}\"",
      "    }",
      "    source = \"${var.network_security_group_security_rule_source}\"",
      "    source_type = \"${var.network_security_group_security_rule_source_type}\"",
      "    stateless = \"${var.network_security_group_security_rule_stateless}\"",
      "    tcp_options {",
      "",
      "        #Optional",
      "        destination_port_range {",
      "            #Required",
      "            max = \"${var.network_security_group_security_rule_tcp_options_destination_port_range_max}\"",
      "            min = \"${var.network_security_group_security_rule_tcp_options_destination_port_range_min}\"",
      "        }",
      "        source_port_range {",
      "            #Required",
      "            max = \"${var.network_security_group_security_rule_tcp_options_source_port_range_max}\"",
      "            min = \"${var.network_security_group_security_rule_tcp_options_source_port_range_min}\"",
      "        }",
      "    }",
      "    udp_options {",
      "",
      "        #Optional",
      "        destination_port_range {",
      "            #Required",
      "            max = \"${var.network_security_group_security_rule_udp_options_destination_port_range_max}\"",
      "            min = \"${var.network_security_group_security_rule_udp_options_destination_port_range_min}\"",
      "        }",
      "        source_port_range {",
      "            #Required",
      "            max = \"${var.network_security_group_security_rule_udp_options_source_port_range_max}\"",
      "            min = \"${var.network_security_group_security_rule_udp_options_source_port_range_min}\"",
      "        }",
      "    }",
      "}"
    ]
  },
  "oci-resource-core_private_ip": {
    "description": "Defines core_private_ip",
    "prefix": "tf-oci-resource-core_private_ip",
    "body": [
      "resource \"oci_core_private_ip\" \"test_private_ip\" {",
      "\t#Required",
      "\tvnic_id = \"${oci_core_vnic.test_vnic.id}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.private_ip_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\thostname_label = \"${var.private_ip_hostname_label}\"",
      "\tip_address = \"${var.private_ip_ip_address}\"",
      "}"
    ]
  },
  "oci-resource-core_public_ip": {
    "description": "Defines core_public_ip",
    "prefix": "tf-oci-resource-core_public_ip",
    "body": [
      "resource \"oci_core_public_ip\" \"test_public_ip\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tlifetime = \"${var.public_ip_lifetime}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.public_ip_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\tprivate_ip_id = \"${oci_core_private_ip.test_private_ip.id}\"",
      "}"
    ]
  },
  "oci-resource-core_remote_peering_connection": {
    "description": "Defines core_remote_peering_connection",
    "prefix": "tf-oci-resource-core_remote_peering_connection",
    "body": [
      "resource \"oci_core_remote_peering_connection\" \"test_remote_peering_connection\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tdrg_id = \"${oci_core_drg.test_drg.id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.remote_peering_connection_display_name}\"",
      "\tpeer_id = \"${oci_core_remote_peering_connection.test_remote_peering_connection2.id}\"",
      "\tpeer_region_name = \"${var.remote_peering_connection_peer_region_name}\"",
      "}"
    ]
  },
  "oci-resource-core_route_table": {
    "description": "Defines core_route_table",
    "prefix": "tf-oci-resource-core_route_table",
    "body": [
      "resource \"oci_core_route_table\" \"test_route_table\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\troute_rules {",
      "\t\t#Required",
      "\t\tnetwork_entity_id = \"${oci_core_internet_gateway.test_internet_gateway.id}\"",
      "",
      "\t\t#Optional",
      "\t\tcidr_block = \"${var.route_table_route_rules_cidr_block}\"",
      "\t\tdestination = \"${var.route_table_route_rules_destination}\"",
      "\t\tdestination_type = \"${var.route_table_route_rules_destination_type}\"",
      "\t}",
      "\tvcn_id = \"${oci_core_vcn.test_vcn.id}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.route_table_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-core_route_table_attachment": {
    "description": "Defines core_route_table_attachment",
    "prefix": "tf-oci-resource-core_route_table_attachment",
    "body": [
      "resource \"oci_core_route_table_attachment\" \"test_route_table_attachment\" {",
      "  #Required\t",
      "  subnet_id = \"${oci_core_subnet.test_subnet.id}\"",
      "  route_table_id =\"${oci_core_route_table.test_route_table.id}\"",
      "}"
    ]
  },
  "oci-resource-core_security_list": {
    "description": "Defines core_security_list",
    "prefix": "tf-oci-resource-core_security_list",
    "body": [
      "resource \"oci_core_security_list\" \"test_security_list\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tegress_security_rules {",
      "\t\t#Required",
      "\t\tdestination = \"${var.security_list_egress_security_rules_destination}\"",
      "\t\tprotocol = \"${var.security_list_egress_security_rules_protocol}\"",
      "",
      "\t\t#Optional",
      "\t\tdestination_type = \"${var.security_list_egress_security_rules_destination_type}\"",
      "\t\ticmp_options {",
      "\t\t\t#Required",
      "\t\t\ttype = \"${var.security_list_egress_security_rules_icmp_options_type}\"",
      "",
      "\t\t\t#Optional",
      "\t\t\tcode = \"${var.security_list_egress_security_rules_icmp_options_code}\"",
      "\t\t}",
      "\t\tstateless = \"${var.security_list_egress_security_rules_stateless}\"",
      "\t\ttcp_options {",
      "",
      "\t\t\t#Optional",
      "\t\t\tmax = \"${var.security_list_egress_security_rules_tcp_options_destination_port_range_max}\"",
      "\t\t\tmin = \"${var.security_list_egress_security_rules_tcp_options_destination_port_range_min}\"",
      "\t\t\tsource_port_range {",
      "\t\t\t\t#Required",
      "\t\t\t\tmax = \"${var.security_list_egress_security_rules_tcp_options_source_port_range_max}\"",
      "\t\t\t\tmin = \"${var.security_list_egress_security_rules_tcp_options_source_port_range_min}\"",
      "\t\t\t}",
      "\t\t}",
      "\t\tudp_options {",
      "",
      "\t\t\t#Optional",
      "\t\t\tmax = \"${var.security_list_egress_security_rules_udp_options_destination_port_range_max}\"",
      "\t\t\tmin = \"${var.security_list_egress_security_rules_udp_options_destination_port_range_min}\"",
      "\t\t\tsource_port_range {",
      "\t\t\t\t#Required",
      "\t\t\t\tmax = \"${var.security_list_egress_security_rules_udp_options_source_port_range_max}\"",
      "\t\t\t\tmin = \"${var.security_list_egress_security_rules_udp_options_source_port_range_min}\"",
      "\t\t\t}",
      "\t\t}",
      "\t}",
      "\tingress_security_rules {",
      "\t\t#Required",
      "\t\tprotocol = \"${var.security_list_ingress_security_rules_protocol}\"",
      "\t\tsource = \"${var.security_list_ingress_security_rules_source}\"",
      "",
      "\t\t#Optional",
      "\t\ticmp_options {",
      "\t\t\t#Required",
      "\t\t\ttype = \"${var.security_list_ingress_security_rules_icmp_options_type}\"",
      "",
      "\t\t\t#Optional",
      "\t\t\tcode = \"${var.security_list_ingress_security_rules_icmp_options_code}\"",
      "\t\t}",
      "\t\tsource_type = \"${var.security_list_ingress_security_rules_source_type}\"",
      "\t\tstateless = \"${var.security_list_ingress_security_rules_stateless}\"",
      "\t\ttcp_options {",
      "",
      "\t\t\t#Optional",
      "\t\t\tmax = \"${var.security_list_ingress_security_rules_tcp_options_destination_port_range_max}\"",
      "\t\t\tmin = \"${var.security_list_ingress_security_rules_tcp_options_destination_port_range_min}\"",
      "\t\t\tsource_port_range {",
      "\t\t\t\t#Required",
      "\t\t\t\tmax = \"${var.security_list_ingress_security_rules_tcp_options_source_port_range_max}\"",
      "\t\t\t\tmin = \"${var.security_list_ingress_security_rules_tcp_options_source_port_range_min}\"",
      "\t\t\t}",
      "\t\t}",
      "\t\tudp_options {",
      "",
      "\t\t\t#Optional",
      "\t\t\tmax = \"${var.security_list_ingress_security_rules_udp_options_destination_port_range_max}\"",
      "\t\t\tmin = \"${var.security_list_ingress_security_rules_udp_options_destination_port_range_min}\"",
      "\t\t\tsource_port_range {",
      "\t\t\t\t#Required",
      "\t\t\t\tmax = \"${var.security_list_ingress_security_rules_udp_options_source_port_range_max}\"",
      "\t\t\t\tmin = \"${var.security_list_ingress_security_rules_udp_options_source_port_range_min}\"",
      "\t\t\t}",
      "\t\t}",
      "\t}",
      "\tvcn_id = \"${oci_core_vcn.test_vcn.id}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.security_list_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-core_service_gateway": {
    "description": "Defines core_service_gateway",
    "prefix": "tf-oci-resource-core_service_gateway",
    "body": [
      "resource \"oci_core_service_gateway\" \"test_service_gateway\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tservices {",
      "\t\t#Required",
      "\t\tservice_id = \"${data.oci_core_services.test_services.services.0.id}\"",
      "\t}",
      "\tvcn_id = \"${oci_core_vcn.test_vcn.id}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.service_gateway_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\troute_table_id = \"${oci_core_route_table.test_route_table.id}\"",
      "}"
    ]
  },
  "oci-resource-core_subnet": {
    "description": "Defines core_subnet",
    "prefix": "tf-oci-resource-core_subnet",
    "body": [
      "resource \"oci_core_subnet\" \"test_subnet\" {",
      "\t#Required",
      "\tcidr_block = \"${var.subnet_cidr_block}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tvcn_id = \"${oci_core_vcn.test_vcn.id}\"",
      "",
      "\t#Optional",
      "\tavailability_domain = \"${var.subnet_availability_domain}\"",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdhcp_options_id = \"${oci_core_dhcp_options.test_dhcp_options.id}\"",
      "\tdisplay_name = \"${var.subnet_display_name}\"",
      "\tdns_label = \"${var.subnet_dns_label}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\tprohibit_public_ip_on_vnic = \"${var.subnet_prohibit_public_ip_on_vnic}\"",
      "\troute_table_id = \"${oci_core_route_table.test_route_table.id}\"",
      "\tsecurity_list_ids = \"${var.subnet_security_list_ids}\"",
      "}"
    ]
  },
  "oci-resource-core_vcn": {
    "description": "Defines core_vcn",
    "prefix": "tf-oci-resource-core_vcn",
    "body": [
      "resource \"oci_core_vcn\" \"test_vcn\" {",
      "\t#Required",
      "\tcidr_block = \"${var.vcn_cidr_block}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.vcn_display_name}\"",
      "\tdns_label = \"${var.vcn_dns_label}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-core_virtual_circuit": {
    "description": "Defines core_virtual_circuit",
    "prefix": "tf-oci-resource-core_virtual_circuit",
    "body": [
      "resource \"oci_core_virtual_circuit\" \"test_virtual_circuit\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\ttype = \"${var.virtual_circuit_type}\"",
      "",
      "\t#Optional",
      "\tbandwidth_shape_name = \"${var.virtual_circuit_bandwidth_shape_name}\"",
      "\tcross_connect_mappings {",
      "",
      "\t\t#Optional",
      "\t\tbgp_md5auth_key = \"${var.virtual_circuit_cross_connect_mappings_bgp_md5auth_key}\"",
      "\t\tcross_connect_or_cross_connect_group_id = \"${oci_core_cross_connect_or_cross_connect_group.test_cross_connect_or_cross_connect_group.id}\"",
      "\t\tcustomer_bgp_peering_ip = \"${var.virtual_circuit_cross_connect_mappings_customer_bgp_peering_ip}\"",
      "\t\toracle_bgp_peering_ip = \"${var.virtual_circuit_cross_connect_mappings_oracle_bgp_peering_ip}\"",
      "\t\tvlan = \"${var.virtual_circuit_cross_connect_mappings_vlan}\"",
      "\t}",
      "\tcustomer_bgp_asn = \"${var.virtual_circuit_customer_bgp_asn}\"",
      "\tdisplay_name = \"${var.virtual_circuit_display_name}\"",
      "\tgateway_id = \"${oci_core_gateway.test_gateway.id}\"",
      "\tprovider_service_id = \"${data.oci_core_fast_connect_provider_services.test_fast_connect_provider_services.fast_connect_provider_services.0.id}\"",
      "\tprovider_service_key_name = \"${var.virtual_circuit_provider_service_key_name}\"",
      "\tpublic_prefixes {",
      "\t\t#Required",
      "\t\tcidr_block = \"${var.virtual_circuit_public_prefixes_cidr_block}\"",
      "\t}",
      "\tregion = \"${var.virtual_circuit_region}\"",
      "}"
    ]
  },
  "oci-resource-core_vnic_attachment": {
    "description": "Defines core_vnic_attachment",
    "prefix": "tf-oci-resource-core_vnic_attachment",
    "body": [
      "resource \"oci_core_vnic_attachment\" \"test_vnic_attachment\" {",
      "\t#Required",
      "\tcreate_vnic_details {",
      "\t\t#Required",
      "\t\tsubnet_id = \"${oci_core_subnet.test_subnet.id}\"",
      "",
      "\t\t#Optional",
      "\t\tassign_public_ip = \"${var.vnic_attachment_create_vnic_details_assign_public_ip}\"",
      "\t\tdefined_tags = \"${var.vnic_attachment_create_vnic_details_defined_tags}\"",
      "\t\tdisplay_name = \"${var.vnic_attachment_create_vnic_details_display_name}\"",
      "\t\tfreeform_tags = \"${var.vnic_attachment_create_vnic_details_freeform_tags}\"",
      "\t\thostname_label = \"${var.vnic_attachment_create_vnic_details_hostname_label}\"",
      "\t\tnsg_ids = \"${var.vnic_attachment_create_vnic_details_nsg_ids}\"",
      "\t\tprivate_ip = \"${var.vnic_attachment_create_vnic_details_private_ip}\"",
      "\t\tskip_source_dest_check = \"${var.vnic_attachment_create_vnic_details_skip_source_dest_check}\"",
      "\t}",
      "\tinstance_id = \"${oci_core_instance.test_instance.id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.vnic_attachment_display_name}\"",
      "\tnic_index = \"${var.vnic_attachment_nic_index}\"",
      "}"
    ]
  },
  "oci-resource-core_volume": {
    "description": "Defines core_volume",
    "prefix": "tf-oci-resource-core_volume",
    "body": [
      "resource \"oci_core_volume\" \"test_volume\" {",
      "\t#Required",
      "\tavailability_domain = \"${var.volume_availability_domain}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tbackup_policy_id = \"${data.oci_core_volume_backup_policies.test_volume_backup_policies.volume_backup_policies.0.id}\"",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.volume_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\tkms_key_id = \"${oci_core_kms_key.test_kms_key.id}\"",
      "\tsize_in_gbs = \"${var.volume_size_in_gbs}\"",
      "\tsize_in_mbs = \"${var.volume_size_in_mbs}\"",
      "\tsource_details {",
      "\t\t#Required",
      "\t\tid = \"${var.volume_source_details_id}\"",
      "\t\ttype = \"${var.volume_source_details_type}\"",
      "\t}",
      "}"
    ]
  },
  "oci-resource-core_volume_attachment": {
    "description": "Defines core_volume_attachment",
    "prefix": "tf-oci-resource-core_volume_attachment",
    "body": [
      "resource \"oci_core_volume_attachment\" \"test_volume_attachment\" {",
      "\t#Required",
      "\tattachment_type = \"${var.volume_attachment_attachment_type}\"",
      "\tinstance_id = \"${oci_core_instance.test_instance.id}\"",
      "\tvolume_id = \"${oci_core_volume.test_volume.id}\"",
      "",
      "\t#Optional",
      "\tdevice = \"${var.volume_attachment_device}\"",
      "\tdisplay_name = \"${var.volume_attachment_display_name}\"",
      "\tis_pv_encryption_in_transit_enabled = \"${var.volume_attachment_is_pv_encryption_in_transit_enabled}\"",
      "\tis_read_only = \"${var.volume_attachment_is_read_only}\"",
      "\tuse_chap = \"${var.volume_attachment_use_chap}\"",
      "}"
    ]
  },
  "oci-resource-core_volume_backup": {
    "description": "Defines core_volume_backup",
    "prefix": "tf-oci-resource-core_volume_backup",
    "body": [
      "resource \"oci_core_volume_backup\" \"test_volume_backup\" {",
      "\t#Required",
      "\tvolume_id = \"${oci_core_volume.test_volume.id}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.volume_backup_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\ttype = \"${var.volume_backup_type}\"",
      "}"
    ]
  },
  "oci-resource-core_volume_backup_policy_assignment": {
    "description": "Defines core_volume_backup_policy_assignment",
    "prefix": "tf-oci-resource-core_volume_backup_policy_assignment",
    "body": [
      "resource \"oci_core_volume_backup_policy_assignment\" \"test_volume_backup_policy_assignment\" {",
      "\t#Required",
      "\tasset_id = \"${oci_core_asset.test_asset.id}\"",
      "\tpolicy_id = \"${oci_core_policy.test_policy.id}\"",
      "}"
    ]
  },
  "oci-resource-core_volume_group": {
    "description": "Defines core_volume_group",
    "prefix": "tf-oci-resource-core_volume_group",
    "body": [
      "resource \"oci_core_volume_group\" \"test_volume_group\" {",
      "\t#Required",
      "\tavailability_domain = \"${var.volume_group_availability_domain}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tsource_details {",
      "\t\t#Required",
      "\t\ttype = \"volumeIds\"",
      "\t\tvolume_ids = [\"${var.volume_group_source_id}\"]",
      "\t}",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.volume_group_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-core_volume_group_backup": {
    "description": "Defines core_volume_group_backup",
    "prefix": "tf-oci-resource-core_volume_group_backup",
    "body": [
      "resource \"oci_core_volume_group_backup\" \"test_volume_group_backup\" {",
      "\t#Required",
      "\tvolume_group_id = \"${oci_core_volume_group.test_volume_group.id}\"",
      "",
      "\t#Optional",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.volume_group_backup_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\ttype = \"${var.volume_group_backup_type}\"",
      "}"
    ]
  },
  "oci-resource-database_autonomous_container_database": {
    "description": "Defines database_autonomous_container_database",
    "prefix": "tf-oci-resource-database_autonomous_container_database",
    "body": [
      "resource \"oci_database_autonomous_container_database\" \"test_autonomous_container_database\" {",
      "\t#Required",
      "\tautonomous_exadata_infrastructure_id = \"${oci_database_autonomous_exadata_infrastructure.test_autonomous_exadata_infrastructure.id}\"",
      "\tdisplay_name = \"${var.autonomous_container_database_display_name}\"",
      "\tpatch_model = \"${var.autonomous_container_database_patch_model}\"",
      "",
      "\t#Optional",
      "\tbackup_config {",
      "",
      "\t\t#Optional",
      "\t\trecovery_window_in_days = \"${var.autonomous_container_database_backup_config_recovery_window_in_days}\"",
      "\t}",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\tservice_level_agreement_type = \"${var.autonomous_container_database_service_level_agreement_type}\"",
      "}"
    ]
  },
  "oci-resource-database_autonomous_data_warehouse": {
    "description": "Defines database_autonomous_data_warehouse",
    "prefix": "tf-oci-resource-database_autonomous_data_warehouse",
    "body": [
      "resource \"oci_database_autonomous_data_warehouse\" \"test_autonomous_data_warehouse\" {",
      "\t#Required",
      "\tadmin_password = \"${var.autonomous_data_warehouse_admin_password}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tcpu_core_count = \"${var.autonomous_data_warehouse_cpu_core_count}\"",
      "\tdata_storage_size_in_tbs = \"${var.autonomous_data_warehouse_data_storage_size_in_tbs}\"",
      "\tdb_name = \"${var.autonomous_data_warehouse_db_name}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.autonomous_data_warehouse_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\tlicense_model = \"${var.autonomous_data_warehouse_license_model}\"",
      "}"
    ]
  },
  "oci-resource-database_autonomous_data_warehouse_backup": {
    "description": "Defines database_autonomous_data_warehouse_backup",
    "prefix": "tf-oci-resource-database_autonomous_data_warehouse_backup",
    "body": [
      "resource \"oci_database_autonomous_data_warehouse_backup\" \"test_autonomous_data_warehouse_backup\" {",
      "\t#Required",
      "\tautonomous_data_warehouse_id = \"${oci_database_autonomous_data_warehouse.test_autonomous_data_warehouse.id}\"",
      "\tdisplay_name = \"${var.autonomous_data_warehouse_backup_display_name}\"",
      "}"
    ]
  },
  "oci-resource-database_autonomous_database": {
    "description": "Defines database_autonomous_database",
    "prefix": "tf-oci-resource-database_autonomous_database",
    "body": [
      "resource \"oci_database_autonomous_database\" \"test_autonomous_database\" {",
      "\t#Required",
      "\tadmin_password = \"${var.autonomous_database_admin_password}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tcpu_core_count = \"${var.autonomous_database_cpu_core_count}\"",
      "\tdata_storage_size_in_tbs = \"${var.autonomous_database_data_storage_size_in_tbs}\"",
      "\tdb_name = \"${var.autonomous_database_db_name}\"",
      "",
      "\t#Optional",
      "\tautonomous_container_database_id = \"${oci_database_autonomous_container_database.test_autonomous_container_database.id}\"",
      "\tclone_type = \"${var.autonomous_database_clone_type}\"",
      "\tdb_workload = \"${var.autonomous_database_db_workload}\"",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.autonomous_database_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\tis_auto_scaling_enabled = \"${var.autonomous_database_is_auto_scaling_enabled}\"",
      "\tis_dedicated = \"${var.autonomous_database_is_dedicated}\"",
      "\tis_preview_version_with_service_terms_accepted = \"${var.autonomous_database_is_preview_version_with_service_terms_accepted}\"",
      "\tlicense_model = \"${var.autonomous_database_license_model}\"",
      "\tsource = \"${var.autonomous_database_source}\"",
      "\tsource_id = \"${oci_database_source.test_source.id}\"",
      "}"
    ]
  },
  "oci-resource-database_autonomous_database_backup": {
    "description": "Defines database_autonomous_database_backup",
    "prefix": "tf-oci-resource-database_autonomous_database_backup",
    "body": [
      "resource \"oci_database_autonomous_database_backup\" \"test_autonomous_database_backup\" {",
      "\t#Required",
      "\tautonomous_database_id = \"${oci_database_autonomous_database.test_autonomous_database.id}\"",
      "\tdisplay_name = \"${var.autonomous_database_backup_display_name}\"",
      "}"
    ]
  },
  "oci-resource-database_autonomous_exadata_infrastructure": {
    "description": "Defines database_autonomous_exadata_infrastructure",
    "prefix": "tf-oci-resource-database_autonomous_exadata_infrastructure",
    "body": [
      "resource \"oci_database_autonomous_exadata_infrastructure\" \"test_autonomous_exadata_infrastructure\" {",
      "\t#Required",
      "\tavailability_domain = \"${var.autonomous_exadata_infrastructure_availability_domain}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tshape = \"${var.autonomous_exadata_infrastructure_shape}\"",
      "\tsubnet_id = \"${oci_database_subnet.test_subnet.id}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.autonomous_exadata_infrastructure_display_name}\"",
      "\tdomain = \"${var.autonomous_exadata_infrastructure_domain}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\tlicense_model = \"${var.autonomous_exadata_infrastructure_license_model}\"",
      "\tmaintenance_window_details {",
      "\t\t#Required",
      "\t\tpreference = \"${var.autonomous_exadata_infrastructure_maintenance_window_details_preference}\"",
      "",
      "\t\t#Optional",
      "\t\tdays_of_week {",
      "\t\t\t#Required",
      "\t\t\tname = \"${var.autonomous_exadata_infrastructure_maintenance_window_details_days_of_week_name}\"",
      "\t\t}",
      "\t\thours_of_day = \"${var.autonomous_exadata_infrastructure_maintenance_window_details_hours_of_day}\"",
      "\t\tmonths {",
      "\t\t\t#Required",
      "\t\t\tname = \"${var.autonomous_exadata_infrastructure_maintenance_window_details_months_name}\"",
      "\t\t}",
      "\t\tweeks_of_month = \"${var.autonomous_exadata_infrastructure_maintenance_window_details_weeks_of_month}\"",
      "\t}",
      "}"
    ]
  },
  "oci-resource-database_backup": {
    "description": "Defines database_backup",
    "prefix": "tf-oci-resource-database_backup",
    "body": [
      "resource \"oci_database_backup\" \"test_backup\" {",
      "\t#Required",
      "\tdatabase_id = \"${oci_database_database.test_database.id}\"",
      "\tdisplay_name = \"${var.backup_display_name}\"",
      "}"
    ]
  },
  "oci-resource-database_data_guard_association": {
    "description": "Defines database_data_guard_association",
    "prefix": "tf-oci-resource-database_data_guard_association",
    "body": [
      "resource \"oci_database_data_guard_association\" \"test_data_guard_association\" {",
      "\t#Required",
      "\tcreation_type = \"${var.data_guard_association_creation_type}\"",
      "\tdatabase_admin_password = \"${var.data_guard_association_database_admin_password}\"",
      "\tdatabase_id = \"${oci_database_database.test_database.id}\"",
      "\tprotection_mode = \"${var.data_guard_association_protection_mode}\"",
      "\ttransport_type = \"${var.data_guard_association_transport_type}\"",
      "",
      "\t#Optional",
      "\tavailability_domain = \"${var.data_guard_association_availability_domain}\"",
      "\tbackup_network_nsg_ids = \"${var.data_guard_association_backup_network_nsg_ids}\"",
      "\tdisplay_name = \"${var.data_guard_association_display_name}\"",
      "\thostname = \"${var.data_guard_association_hostname}\"",
      "\tnsg_ids = \"${var.data_guard_association_nsg_ids}\"",
      "\tpeer_db_system_id = \"${oci_database_peer_db_system.test_peer_db_system.id}\"",
      "\tsubnet_id = \"${oci_database_subnet.test_subnet.id}\"",
      "}"
    ]
  },
  "oci-resource-database_db_home": {
    "description": "Defines database_db_home",
    "prefix": "tf-oci-resource-database_db_home",
    "body": [
      "resource \"oci_database_db_home\" \"test_db_home\" {",
      "\t#Required",
      "\tdatabase {",
      "\t\t#Required",
      "\t\tadmin_password = \"${var.db_home_database_admin_password}\"",
      "\t\tdb_name = \"${var.db_home_database_db_name}\"",
      "",
      "\t\t#Optional",
      "\t\tbackup_id = \"${oci_database_backup.test_backup.id}\"",
      "\t\tbackup_tde_password = \"${var.db_home_database_backup_tde_password}\"",
      "\t\tcharacter_set = \"${var.db_home_database_character_set}\"",
      "\t\tdb_backup_config {",
      "",
      "\t\t\t#Optional",
      "\t\t\tauto_backup_enabled = \"${var.db_home_database_db_backup_config_auto_backup_enabled}\"",
      "\t\t\trecovery_window_in_days = \"${var.db_home_database_db_backup_config_recovery_window_in_days}\"",
      "\t\t}",
      "\t\tdb_workload = \"${var.db_home_database_db_workload}\"",
      "\t\tdefined_tags = \"${var.db_home_database_defined_tags}\"",
      "\t\tfreeform_tags = \"${var.db_home_database_freeform_tags}\"",
      "\t\tncharacter_set = \"${var.db_home_database_ncharacter_set}\"",
      "\t\tpdb_name = \"${var.db_home_database_pdb_name}\"",
      "\t}",
      "\tdb_system_id = \"${oci_database_db_system.test_db_system.id}\"",
      "",
      "\t#Optional",
      "\tdb_version {",
      "\t}",
      "\tdisplay_name = \"${var.db_home_display_name}\"",
      "\tsource = \"${var.db_home_source}\"",
      "}"
    ]
  },
  "oci-resource-database_db_system": {
    "description": "Defines database_db_system",
    "prefix": "tf-oci-resource-database_db_system",
    "body": [
      "resource \"oci_database_db_system\" \"test_db_system\" {",
      "\t#Required",
      "\tavailability_domain = \"${var.db_system_availability_domain}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tdatabase_edition = \"${var.db_system_database_edition}\"",
      "\tdb_home {",
      "\t\t#Required",
      "\t\tdatabase {",
      "\t\t\t#Required",
      "\t\t\tadmin_password = \"${var.db_system_db_home_database_admin_password}\"",
      "",
      "\t\t\t#Optional",
      "\t\t\tbackup_id = \"${oci_database_backup.test_backup.id}\"",
      "\t\t\tbackup_tde_password = \"${var.db_system_db_home_database_backup_tde_password}\"",
      "\t\t\tcharacter_set = \"${var.db_system_db_home_database_character_set}\"",
      "\t\t\tdb_backup_config {",
      "",
      "\t\t\t\t#Optional",
      "\t\t\t\tauto_backup_enabled = \"${var.db_system_db_home_database_db_backup_config_auto_backup_enabled}\"",
      "\t\t\t\trecovery_window_in_days = \"${var.db_system_db_home_database_db_backup_config_recovery_window_in_days}\"",
      "\t\t\t}",
      "\t\t\tdb_name = \"${var.db_system_db_home_database_db_name}\"",
      "\t\t\tdb_workload = \"${var.db_system_db_home_database_db_workload}\"",
      "\t\t\tdefined_tags = \"${var.db_system_db_home_database_defined_tags}\"",
      "\t\t\tfreeform_tags = \"${var.db_system_db_home_database_freeform_tags}\"",
      "\t\t\tncharacter_set = \"${var.db_system_db_home_database_ncharacter_set}\"",
      "\t\t\tpdb_name = \"${var.db_system_db_home_database_pdb_name}\"",
      "\t\t}",
      "",
      "\t\t#Optional",
      "\t\tdb_version = \"${var.db_system_db_home_db_version}\"",
      "\t\tdisplay_name = \"${var.db_system_db_home_display_name}\"",
      "\t}",
      "\thostname = \"${var.db_system_hostname}\"",
      "\tshape = \"${var.db_system_shape}\"",
      "\tssh_public_keys = \"${var.db_system_ssh_public_keys}\"",
      "\tsubnet_id = \"${oci_database_subnet.test_subnet.id}\"",
      "",
      "\t#Optional",
      "\tbackup_network_nsg_ids = \"${var.db_system_backup_network_nsg_ids}\"",
      "\tbackup_subnet_id = \"${oci_database_backup_subnet.test_backup_subnet.id}\"",
      "\tcluster_name = \"${var.db_system_cluster_name}\"",
      "\tcpu_core_count = \"${var.db_system_cpu_core_count}\"",
      "\tdata_storage_percentage = \"${var.db_system_data_storage_percentage}\"",
      "\tdata_storage_size_in_gb = \"${var.db_system_data_storage_size_in_gb}\"",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisk_redundancy = \"${var.db_system_disk_redundancy}\"",
      "\tdisplay_name = \"${var.db_system_display_name}\"",
      "\tdomain = \"${var.db_system_domain}\"",
      "\tfault_domains = \"${var.db_system_fault_domains}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\tlicense_model = \"${var.db_system_license_model}\"",
      "\tnode_count = \"${var.db_system_node_count}\"",
      "\tnsg_ids = \"${var.db_system_nsg_ids}\"",
      "\tsource = \"${var.db_system_source}\"",
      "\tsparse_diskgroup = \"${var.db_system_sparse_diskgroup}\"",
      "\ttime_zone = \"${var.db_system_time_zone}\"",
      "}"
    ]
  },
  "oci-resource-database_exadata_iorm_config": {
    "description": "Defines database_exadata_iorm_config",
    "prefix": "tf-oci-resource-database_exadata_iorm_config",
    "body": [
      "resource \"oci_database_exadata_iorm_config\" \"test_exadata_iorm_config\" {",
      "\t#Required",
      "\tdb_system_id = \"${var.db_system_id}",
      "\tdb_plans = \"${var.db_plans.id}\"",
      "",
      "\t#Optional",
      "\tobjective = \"AUTO\"",
      "}"
    ]
  },
  "oci-resource-database_maintenance_run": {
    "description": "Defines database_maintenance_run",
    "prefix": "tf-oci-resource-database_maintenance_run",
    "body": [
      "resource \"oci_database_maintenance_run\" \"test_maintenance_run\" {",
      "\t#Required",
      "\tmaintenance_run_id = \"${oci_database_maintenance_run.test_maintenance_run.id}\"",
      "",
      "\t#Optional",
      "\tis_enabled = \"${var.maintenance_run_is_enabled}\"",
      "}"
    ]
  },
  "oci-resource-dns_record": {
    "description": "Defines dns_record",
    "prefix": "tf-oci-resource-dns_record",
    "body": [
      "resource \"oci_dns_record\" \"test_record\" {",
      "\t#Required",
      "\tzone_name_or_id = \"${oci_dns_zone_name_or.test_zone_name_or.id}\"",
      "\tdomain = \"${var.record_items_domain}\"",
      "\trtype = \"${var.record_items_rtype}\"",
      "",
      "\t#Optional",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\trdata = \"${var.record_items_rdata}\"",
      "\tttl = \"${var.record_items_ttl}\"",
      "}"
    ]
  },
  "oci-resource-dns_steering_policy": {
    "description": "Defines dns_steering_policy",
    "prefix": "tf-oci-resource-dns_steering_policy",
    "body": [
      "resource \"oci_dns_steering_policy\" \"test_steering_policy\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tdisplay_name = \"${var.steering_policy_display_name}\"",
      "\ttemplate = \"${var.steering_policy_template}\"",
      "",
      "\t#Optional",
      "\tanswers {",
      "\t\t#Required",
      "\t\tname = \"${var.steering_policy_answers_name}\"",
      "\t\trdata = \"${var.steering_policy_answers_rdata}\"",
      "\t\trtype = \"${var.steering_policy_answers_rtype}\"",
      "",
      "\t\t#Optional",
      "\t\tis_disabled = \"${var.steering_policy_answers_is_disabled}\"",
      "\t\tpool = \"${var.steering_policy_answers_pool}\"",
      "\t}",
      "\tdefined_tags = \"${var.steering_policy_defined_tags}\"",
      "\tfreeform_tags = \"${var.steering_policy_freeform_tags}\"",
      "\thealth_check_monitor_id = \"${oci_dns_health_check_monitor.test_health_check_monitor.id}\"",
      "\trules {",
      "\t\t#Required",
      "\t\trule_type = \"${var.steering_policy_rules_rule_type}\"",
      "",
      "\t\t#Optional",
      "\t\tcases {",
      "",
      "\t\t\t#Optional",
      "\t\t\tanswer_data {",
      "",
      "\t\t\t\t#Optional",
      "\t\t\t\tanswer_condition = \"${var.steering_policy_rules_cases_answer_data_answer_condition}\"",
      "\t\t\t\tshould_keep = \"${var.steering_policy_rules_cases_answer_data_should_keep}\"",
      "\t\t\t\tvalue = \"${var.steering_policy_rules_cases_answer_data_value}\"",
      "\t\t\t}",
      "\t\t\tcase_condition = \"${var.steering_policy_rules_cases_case_condition}\"",
      "\t\t\tcount = \"${var.steering_policy_rules_cases_count}\"",
      "\t\t}",
      "\t\tdefault_answer_data {",
      "",
      "\t\t\t#Optional",
      "\t\t\tanswer_condition = \"${var.steering_policy_rules_default_answer_data_answer_condition}\"",
      "\t\t\tshould_keep = \"${var.steering_policy_rules_default_answer_data_should_keep}\"",
      "\t\t\tvalue = \"${var.steering_policy_rules_default_answer_data_value}\"",
      "\t\t}",
      "\t\tdefault_count = \"${var.steering_policy_rules_default_count}\"",
      "\t\tdescription = \"${var.steering_policy_rules_description}\"",
      "\t}",
      "\tttl = \"${var.steering_policy_ttl}\"",
      "}"
    ]
  },
  "oci-resource-dns_steering_policy_attachment": {
    "description": "Defines dns_steering_policy_attachment",
    "prefix": "tf-oci-resource-dns_steering_policy_attachment",
    "body": [
      "resource \"oci_dns_steering_policy_attachment\" \"test_steering_policy_attachment\" {",
      "\t#Required",
      "\tdomain_name = \"${var.steering_policy_attachment_domain_name}\"",
      "\tsteering_policy_id = \"${oci_dns_steering_policy.test_steering_policy.id}\"",
      "\tzone_id = \"${oci_dns_zone.test_zone.id}\"",
      "",
      "\t#Optional",
      "\tdisplay_name = \"${var.steering_policy_attachment_display_name}\"",
      "}"
    ]
  },
  "oci-resource-dns_zone": {
    "description": "Defines dns_zone",
    "prefix": "tf-oci-resource-dns_zone",
    "body": [
      "resource \"oci_dns_zone\" \"test_zone\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tname = \"${var.zone_name}\"",
      "\tzone_type = \"${var.zone_zone_type}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = \"${var.zone_defined_tags}\"",
      "\texternal_masters {",
      "\t\t#Required",
      "\t\taddress = \"${var.zone_external_masters_address}\"",
      "",
      "\t\t#Optional",
      "\t\tport = \"${var.zone_external_masters_port}\"",
      "\t\ttsig {",
      "\t\t\t#Required",
      "\t\t\talgorithm = \"${var.zone_external_masters_tsig_algorithm}\"",
      "\t\t\tname = \"${var.zone_external_masters_tsig_name}\"",
      "\t\t\tsecret = \"${var.zone_external_masters_tsig_secret}\"",
      "\t\t}",
      "\t}",
      "\tfreeform_tags = \"${var.zone_freeform_tags}\"",
      "}"
    ]
  },
  "oci-resource-email_sender": {
    "description": "Defines email_sender",
    "prefix": "tf-oci-resource-email_sender",
    "body": [
      "resource \"oci_email_sender\" \"test_sender\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\temail_address = \"${var.sender_email_address}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-email_suppression": {
    "description": "Defines email_suppression",
    "prefix": "tf-oci-resource-email_suppression",
    "body": [
      "resource \"oci_email_suppression\" \"test_suppression\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.tenancy_ocid}\"",
      "\temail_address = \"${var.suppression_email_address}\"",
      "}"
    ]
  },
  "oci-resource-file_storage_export": {
    "description": "Defines file_storage_export",
    "prefix": "tf-oci-resource-file_storage_export",
    "body": [
      "resource \"oci_file_storage_export\" \"test_export\" {",
      "\t#Required",
      "\texport_set_id = \"${oci_file_storage_export_set.test_export_set.id}\"",
      "\tfile_system_id = \"${oci_file_storage_file_system.test_file_system.id}\"",
      "\tpath = \"${var.export_path}\"",
      "",
      "\t#Optional",
      "\texport_options {",
      "\t\t#Required",
      "\t\tsource = \"${var.export_export_options_source}\"",
      "",
      "\t\t#Optional",
      "\t\taccess = \"${var.export_export_options_access}\"",
      "\t\tanonymous_gid = \"${var.export_export_options_anonymous_gid}\"",
      "\t\tanonymous_uid = \"${var.export_export_options_anonymous_uid}\"",
      "\t\tidentity_squash = \"${var.export_export_options_identity_squash}\"",
      "\t\trequire_privileged_source_port = \"${var.export_export_options_require_privileged_source_port}\"",
      "\t}",
      "}"
    ]
  },
  "oci-resource-file_storage_export_set": {
    "description": "Defines file_storage_export_set",
    "prefix": "tf-oci-resource-file_storage_export_set",
    "body": [
      "resource \"oci_file_storage_export_set\" \"test_export_set\" {",
      "    #Required",
      "    mount_target_id = \"${oci_file_storage_mount_target.test_mount_target.id}\"",
      "  ",
      "    #Optional",
      "    display_name = \"${var.export_set_name}\"",
      "    max_fs_stat_bytes = 23843202333",
      "    max_fs_stat_files = 223442",
      "}"
    ]
  },
  "oci-resource-file_storage_file_system": {
    "description": "Defines file_storage_file_system",
    "prefix": "tf-oci-resource-file_storage_file_system",
    "body": [
      "resource \"oci_file_storage_file_system\" \"test_file_system\" {",
      "\t#Required",
      "\tavailability_domain = \"${var.file_system_availability_domain}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.file_system_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-file_storage_mount_target": {
    "description": "Defines file_storage_mount_target",
    "prefix": "tf-oci-resource-file_storage_mount_target",
    "body": [
      "resource \"oci_file_storage_mount_target\" \"test_mount_target\" {",
      "\t#Required",
      "\tavailability_domain = \"${var.mount_target_availability_domain}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tsubnet_id = \"${oci_file_storage_subnet.test_subnet.id}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdisplay_name = \"${var.mount_target_display_name}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\thostname_label = \"${var.mount_target_hostname_label}\"",
      "\tip_address = \"${var.mount_target_ip_address}\"",
      "}"
    ]
  },
  "oci-resource-file_storage_snapshot": {
    "description": "Defines file_storage_snapshot",
    "prefix": "tf-oci-resource-file_storage_snapshot",
    "body": [
      "resource \"oci_file_storage_snapshot\" \"test_snapshot\" {",
      "\t#Required",
      "\tfile_system_id = \"${oci_file_storage_file_system.test_file_system.id}\"",
      "\tname = \"${var.snapshot_name}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-functions_application": {
    "description": "Defines functions_application",
    "prefix": "tf-oci-resource-functions_application",
    "body": [
      "resource \"oci_functions_application\" \"test_application\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tdisplay_name = \"${var.application_display_name}\"",
      "\tsubnet_ids = \"${var.application_subnet_ids}\"",
      "",
      "\t#Optional",
      "\tconfig = \"${var.application_config}\"",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-functions_function": {
    "description": "Defines functions_function",
    "prefix": "tf-oci-resource-functions_function",
    "body": [
      "resource \"oci_functions_function\" \"test_function\" {",
      "\t#Required",
      "\tapplication_id = \"${oci_functions_application.test_application.id}\"",
      "\tdisplay_name = \"${var.function_display_name}\"",
      "\timage = \"${var.function_image}\"",
      "\tmemory_in_mbs = \"${var.function_memory_in_mbs}\"",
      "",
      "\t#Optional",
      "\tconfig = \"${var.function_config}\"",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\timage_digest = \"${var.function_image_digest}\"",
      "\ttimeout_in_seconds = \"${var.function_timeout_in_seconds}\"",
      "}"
    ]
  },
  "oci-resource-functions_invoke_function": {
    "description": "Defines functions_invoke_function",
    "prefix": "tf-oci-resource-functions_invoke_function",
    "body": [
      "resource \"oci_functions_invoke_function\" \"test_invoke_function\" {",
      "\t#Required",
      "\tfunction_id = \"${oci_functions_function.test_function.id}\"",
      "",
      "\t#Optional",
      "\tinvoke_function_body = \"${var.invoke_function_invoke_function_body}\"",
      "\tfn_intent = \"${var.invoke_function_fn_intent}\"",
      "\tfn_invoke_type = \"${var.invoke_function_fn_invoke_type}\"",
      "\tbase64_encode_content = false",
      "}"
    ]
  },
  "oci-resource-health_checks_http_monitor": {
    "description": "Defines health_checks_http_monitor",
    "prefix": "tf-oci-resource-health_checks_http_monitor",
    "body": [
      "resource \"oci_health_checks_http_monitor\" \"test_http_monitor\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tdisplay_name = \"${var.http_monitor_display_name}\"",
      "\tinterval_in_seconds = \"${var.http_monitor_interval_in_seconds}\"",
      "\tprotocol = \"${var.http_monitor_protocol}\"",
      "\ttargets = \"${var.http_monitor_targets}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\theaders = \"${var.http_monitor_headers}\"",
      "\tis_enabled = \"${var.http_monitor_is_enabled}\"",
      "\tmethod = \"${var.http_monitor_method}\"",
      "\tpath = \"${var.http_monitor_path}\"",
      "\tport = \"${var.http_monitor_port}\"",
      "\ttimeout_in_seconds = \"${var.http_monitor_timeout_in_seconds}\"",
      "\tvantage_point_names = \"${var.http_monitor_vantage_point_names}\"",
      "}"
    ]
  },
  "oci-resource-health_checks_http_probe": {
    "description": "Defines health_checks_http_probe",
    "prefix": "tf-oci-resource-health_checks_http_probe",
    "body": [
      "resource \"oci_health_checks_http_probe\" \"test_http_probe\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tprotocol = \"${var.http_probe_protocol}\"",
      "\ttargets = \"${var.http_probe_targets}\"",
      "",
      "\t#Optional",
      "\theaders = \"${var.http_probe_headers}\"",
      "\tmethod = \"${var.http_probe_method}\"",
      "\tpath = \"${var.http_probe_path}\"",
      "\tport = \"${var.http_probe_port}\"",
      "\ttimeout_in_seconds = \"${var.http_probe_timeout_in_seconds}\"",
      "\tvantage_point_names = \"${var.http_probe_vantage_point_names}\"",
      "}"
    ]
  },
  "oci-resource-health_checks_ping_monitor": {
    "description": "Defines health_checks_ping_monitor",
    "prefix": "tf-oci-resource-health_checks_ping_monitor",
    "body": [
      "resource \"oci_health_checks_ping_monitor\" \"test_ping_monitor\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tdisplay_name = \"${var.ping_monitor_display_name}\"",
      "\tinterval_in_seconds = \"${var.ping_monitor_interval_in_seconds}\"",
      "\tprotocol = \"${var.ping_monitor_protocol}\"",
      "\ttargets = \"${var.ping_monitor_targets}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\tis_enabled = \"${var.ping_monitor_is_enabled}\"",
      "\tport = \"${var.ping_monitor_port}\"",
      "\ttimeout_in_seconds = \"${var.ping_monitor_timeout_in_seconds}\"",
      "\tvantage_point_names = \"${var.ping_monitor_vantage_point_names}\"",
      "}"
    ]
  },
  "oci-resource-health_checks_ping_probe": {
    "description": "Defines health_checks_ping_probe",
    "prefix": "tf-oci-resource-health_checks_ping_probe",
    "body": [
      "resource \"oci_health_checks_ping_probe\" \"test_ping_probe\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tprotocol = \"${var.ping_probe_protocol}\"",
      "\ttargets = \"${var.ping_probe_targets}\"",
      "",
      "\t#Optional",
      "\tport = \"${var.ping_probe_port}\"",
      "\ttimeout_in_seconds = \"${var.ping_probe_timeout_in_seconds}\"",
      "\tvantage_point_names = \"${var.ping_probe_vantage_point_names}\"",
      "}"
    ]
  },
  "oci-resource-identity_api_key": {
    "description": "Defines identity_api_key",
    "prefix": "tf-oci-resource-identity_api_key",
    "body": [
      "resource \"oci_identity_api_key\" \"test_api_key\" {",
      "\t#Required",
      "\tkey_value = \"${var.api_key_key_value}\"",
      "\tuser_id = \"${oci_identity_user.test_user.id}\"",
      "}"
    ]
  },
  "oci-resource-identity_auth_token": {
    "description": "Defines identity_auth_token",
    "prefix": "tf-oci-resource-identity_auth_token",
    "body": [
      "resource \"oci_identity_auth_token\" \"test_auth_token\" {",
      "\t#Required",
      "\tdescription = \"${var.auth_token_description}\"",
      "\tuser_id = \"${oci_identity_user.test_user.id}\"",
      "}"
    ]
  },
  "oci-resource-identity_authentication_policy": {
    "description": "Defines identity_authentication_policy",
    "prefix": "tf-oci-resource-identity_authentication_policy",
    "body": [
      "resource \"oci_identity_authentication_policy\" \"test_authentication_policy\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.tenancy_ocid}\"",
      "",
      "\t#Optional",
      "\tpassword_policy {",
      "",
      "\t\t#Optional",
      "\t\tis_lowercase_characters_required = \"${var.authentication_policy_password_policy_is_lowercase_characters_required}\"",
      "\t\tis_numeric_characters_required = \"${var.authentication_policy_password_policy_is_numeric_characters_required}\"",
      "\t\tis_special_characters_required = \"${var.authentication_policy_password_policy_is_special_characters_required}\"",
      "\t\tis_uppercase_characters_required = \"${var.authentication_policy_password_policy_is_uppercase_characters_required}\"",
      "\t\tis_username_containment_allowed = \"${var.authentication_policy_password_policy_is_username_containment_allowed}\"",
      "\t\tminimum_password_length = \"${var.authentication_policy_password_policy_minimum_password_length}\"",
      "\t}",
      "}"
    ]
  },
  "oci-resource-identity_compartment": {
    "description": "Defines identity_compartment",
    "prefix": "tf-oci-resource-identity_compartment",
    "body": [
      "resource \"oci_identity_compartment\" \"test_compartment\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tdescription = \"${var.compartment_description}\"",
      "\tname = \"${var.compartment_name}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-identity_customer_secret_key": {
    "description": "Defines identity_customer_secret_key",
    "prefix": "tf-oci-resource-identity_customer_secret_key",
    "body": [
      "resource \"oci_identity_customer_secret_key\" \"test_customer_secret_key\" {",
      "\t#Required",
      "\tdisplay_name = \"${var.customer_secret_key_display_name}\"",
      "\tuser_id = \"${oci_identity_user.test_user.id}\"",
      "}"
    ]
  },
  "oci-resource-identity_dynamic_group": {
    "description": "Defines identity_dynamic_group",
    "prefix": "tf-oci-resource-identity_dynamic_group",
    "body": [
      "resource \"oci_identity_dynamic_group\" \"test_dynamic_group\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.tenancy_ocid}\"",
      "\tdescription = \"${var.dynamic_group_description}\"",
      "\tmatching_rule = \"${var.dynamic_group_matching_rule}\"",
      "\tname = \"${var.dynamic_group_name}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-identity_group": {
    "description": "Defines identity_group",
    "prefix": "tf-oci-resource-identity_group",
    "body": [
      "resource \"oci_identity_group\" \"test_group\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.tenancy_ocid}\"",
      "\tdescription = \"${var.group_description}\"",
      "\tname = \"${var.group_name}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-identity_identity_provider": {
    "description": "Defines identity_identity_provider",
    "prefix": "tf-oci-resource-identity_identity_provider",
    "body": [
      "resource \"oci_identity_identity_provider\" \"test_identity_provider\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.tenancy_ocid}\"",
      "\tdescription = \"${var.identity_provider_description}\"",
      "\tmetadata = \"${var.identity_provider_metadata}\"",
      "\tmetadata_url = \"${var.identity_provider_metadata_url}\"",
      "\tname = \"${var.identity_provider_name}\"",
      "\tproduct_type = \"${var.identity_provider_product_type}\"",
      "\tprotocol = \"${var.identity_provider_protocol}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tfreeform_attributes = \"${var.identity_provider_freeform_attributes}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-identity_idp_group_mapping": {
    "description": "Defines identity_idp_group_mapping",
    "prefix": "tf-oci-resource-identity_idp_group_mapping",
    "body": [
      "resource \"oci_identity_idp_group_mapping\" \"test_idp_group_mapping\" {",
      "\t#Required",
      "\tgroup_id = \"${oci_identity_group.test_group.id}\"",
      "\tidentity_provider_id = \"${oci_identity_identity_provider.test_identity_provider.id}\"",
      "\tidp_group_name = \"${var.idp_group_mapping_idp_group_name}\"",
      "}"
    ]
  },
  "oci-resource-identity_policy": {
    "description": "Defines identity_policy",
    "prefix": "tf-oci-resource-identity_policy",
    "body": [
      "resource \"oci_identity_policy\" \"test_policy\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.tenancy_ocid}\"",
      "\tdescription = \"${var.policy_description}\"",
      "\tname = \"${var.policy_name}\"",
      "\tstatements = \"${var.policy_statements}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\tversion_date = \"${var.policy_version_date}\"",
      "}"
    ]
  },
  "oci-resource-identity_smtp_credential": {
    "description": "Defines identity_smtp_credential",
    "prefix": "tf-oci-resource-identity_smtp_credential",
    "body": [
      "resource \"oci_identity_smtp_credential\" \"test_smtp_credential\" {",
      "\t#Required",
      "\tdescription = \"${var.smtp_credential_description}\"",
      "\tuser_id = \"${oci_identity_user.test_user.id}\"",
      "}"
    ]
  },
  "oci-resource-identity_swift_password": {
    "description": "Defines identity_swift_password",
    "prefix": "tf-oci-resource-identity_swift_password",
    "body": [
      "resource \"oci_identity_swift_password\" \"test_swift_password\" {",
      "\t#Required",
      "\tdescription = \"${var.swift_password_description}\"",
      "\tuser_id = \"${oci_identity_user.test_user.id}\"",
      "}"
    ]
  },
  "oci-resource-identity_tag": {
    "description": "Defines identity_tag",
    "prefix": "tf-oci-resource-identity_tag",
    "body": [
      "resource \"oci_identity_tag\" \"test_tag\" {",
      "\t#Required",
      "\tdescription = \"${var.tag_description}\"",
      "\tname = \"${var.tag_name}\"",
      "\ttag_namespace_id = \"${oci_identity_tag_namespace.test_tag_namespace.id}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\tis_cost_tracking = \"${var.tag_is_cost_tracking}\"",
      "    is_retired = false",
      "}"
    ]
  },
  "oci-resource-identity_tag_default": {
    "description": "Defines identity_tag_default",
    "prefix": "tf-oci-resource-identity_tag_default",
    "body": [
      "resource \"oci_identity_tag_default\" \"test_tag_default\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\ttag_definition_id = \"${oci_identity_tag_definition.test_tag_definition.id}\"",
      "\tvalue = \"${var.tag_default_value}\"",
      "}"
    ]
  },
  "oci-resource-identity_tag_namespace": {
    "description": "Defines identity_tag_namespace",
    "prefix": "tf-oci-resource-identity_tag_namespace",
    "body": [
      "resource \"oci_identity_tag_namespace\" \"test_tag_namespace\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tdescription = \"${var.tag_namespace_description}\"",
      "\tname = \"${var.tag_namespace_name}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\tis_retired = false",
      "}"
    ]
  },
  "oci-resource-identity_ui_password": {
    "description": "Defines identity_ui_password",
    "prefix": "tf-oci-resource-identity_ui_password",
    "body": [
      "resource \"oci_identity_ui_password\" \"test_ui_password\" {",
      "\t#Required",
      "\tuser_id = \"${oci_identity_user.test_user.id}\"",
      "}"
    ]
  },
  "oci-resource-identity_user": {
    "description": "Defines identity_user",
    "prefix": "tf-oci-resource-identity_user",
    "body": [
      "resource \"oci_identity_user\" \"test_user\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.tenancy_ocid}\"",
      "\tdescription = \"${var.user_description}\"",
      "\tname = \"${var.user_name}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\temail = \"${var.user_email}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-identity_user_capabilities_management": {
    "description": "Defines identity_user_capabilities_management",
    "prefix": "tf-oci-resource-identity_user_capabilities_management",
    "body": [
      "resource \"oci_identity_user_capabilities_management\" \"test_user_capabilities_management\" {",
      "\t#Required",
      "\tuser_id = \"${oci_identity_user.user1.id}\"",
      "",
      "\t#Optional ",
      "\tcan_use_api_keys             = \"true\"",
      "\tcan_use_auth_tokens          = \"true\"",
      "\tcan_use_console_password     = \"false\"",
      "\tcan_use_customer_secret_keys = \"true\"",
      "\tcan_use_smtp_credentials     = \"true\"",
      "}"
    ]
  },
  "oci-resource-identity_user_group_membership": {
    "description": "Defines identity_user_group_membership",
    "prefix": "tf-oci-resource-identity_user_group_membership",
    "body": [
      "resource \"oci_identity_user_group_membership\" \"test_user_group_membership\" {",
      "\t#Required",
      "\tgroup_id = \"${oci_identity_group.test_group.id}\"",
      "\tuser_id = \"${oci_identity_user.test_user.id}\"",
      "}"
    ]
  },
  "oci-resource-kms_encrypted_data": {
    "description": "Defines kms_encrypted_data",
    "prefix": "tf-oci-resource-kms_encrypted_data",
    "body": [
      "resource \"oci_kms_encrypted_data\" \"test_encrypted_data\" {",
      "\t#Required",
      "\tcrypto_endpoint = \"${var.encrypted_data_crypto_endpoint}\"",
      "\tkey_id = \"${oci_kms_key.test_key.id}\"",
      "\tplaintext = \"${var.encrypted_data_plaintext}\"",
      "",
      "\t#Optional",
      "\tassociated_data = \"${var.encrypted_data_associated_data}\"",
      "\tlogging_context = \"${var.encrypted_data_logging_context}\"",
      "}"
    ]
  },
  "oci-resource-kms_generated_key": {
    "description": "Defines kms_generated_key",
    "prefix": "tf-oci-resource-kms_generated_key",
    "body": [
      "resource \"oci_kms_generated_key\" \"test_generated_key\" {",
      "\t#Required",
      "\tcrypto_endpoint = \"${var.generated_key_crypto_endpoint}\"",
      "\tinclude_plaintext_key = \"${var.generated_key_include_plaintext_key}\"",
      "\tkey_id = \"${oci_kms_key.test_key.id}\"",
      "\tkey_shape {",
      "\t\t#Required",
      "\t\talgorithm = \"${var.generated_key_key_shape_algorithm}\"",
      "\t\tlength = \"${var.generated_key_key_shape_length}\"",
      "\t}",
      "",
      "\t#Optional",
      "\tassociated_data = \"${var.generated_key_associated_data}\"",
      "\tlogging_context = \"${var.generated_key_logging_context}\"",
      "}"
    ]
  },
  "oci-resource-kms_key": {
    "description": "Defines kms_key",
    "prefix": "tf-oci-resource-kms_key",
    "body": [
      "resource \"oci_kms_key\" \"test_key\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tdisplay_name = \"${var.key_display_name}\"",
      "\tkey_shape {",
      "\t\t#Required",
      "\t\talgorithm = \"${var.key_key_shape_algorithm}\"",
      "\t\tlength = \"${var.key_key_shape_length}\"",
      "\t}",
      "\tmanagement_endpoint = \"${var.key_management_endpoint}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"foo-namespace.bar-key\"= \"foo-value\"}",
      "\tfreeform_tags = {\"bar-key\"= \"value\"}",
      "}"
    ]
  },
  "oci-resource-kms_key_version": {
    "description": "Defines kms_key_version",
    "prefix": "tf-oci-resource-kms_key_version",
    "body": [
      "resource \"oci_kms_key_version\" \"test_key_version\" {",
      "\t#Required",
      "\tkey_id = \"${oci_kms_key.test_key.id}\"",
      "\tmanagement_endpoint = \"${var.key_version_management_endpoint}\"",
      "}"
    ]
  },
  "oci-resource-kms_vault": {
    "description": "Defines kms_vault",
    "prefix": "tf-oci-resource-kms_vault",
    "body": [
      "resource \"oci_kms_vault\" \"test_vault\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tdisplay_name = \"${var.vault_display_name}\"",
      "\tvault_type = \"${var.vault_vault_type}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"foo-namespace.bar-key\"= \"foo-value\"}",
      "\tfreeform_tags = {\"bar-key\"= \"value\"}",
      "}"
    ]
  },
  "oci-resource-limits_quota": {
    "description": "Defines limits_quota",
    "prefix": "tf-oci-resource-limits_quota",
    "body": [
      "resource \"oci_limits_quota\" \"test_quota\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.tenancy_ocid}\"",
      "\tdescription = \"${var.quota_description}\"",
      "\tname = \"${var.quota_name}\"",
      "\tstatements = \"${var.quota_statements}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-load_balancer_backend": {
    "description": "Defines load_balancer_backend",
    "prefix": "tf-oci-resource-load_balancer_backend",
    "body": [
      "resource \"oci_load_balancer_backend\" \"test_backend\" {",
      "\t#Required",
      "\tbackendset_name = \"${oci_load_balancer_backend_set.test_backend_set.name}\"",
      "\tip_address = \"${var.backend_ip_address}\"",
      "\tload_balancer_id = \"${oci_load_balancer_load_balancer.test_load_balancer.id}\"",
      "\tport = \"${var.backend_port}\"",
      "",
      "\t#Optional",
      "\tbackup = \"${var.backend_backup}\"",
      "\tdrain = \"${var.backend_drain}\"",
      "\toffline = \"${var.backend_offline}\"",
      "\tweight = \"${var.backend_weight}\"",
      "}"
    ]
  },
  "oci-resource-load_balancer_backend_set": {
    "description": "Defines load_balancer_backend_set",
    "prefix": "tf-oci-resource-load_balancer_backend_set",
    "body": [
      "resource \"oci_load_balancer_backend_set\" \"test_backend_set\" {",
      "\t#Required",
      "\thealth_checker {",
      "\t\t#Required",
      "\t\tprotocol = \"${var.backend_set_health_checker_protocol}\"",
      "",
      "\t\t#Optional",
      "\t\tinterval_ms = \"${var.backend_set_health_checker_interval_ms}\"",
      "\t\tport = \"${var.backend_set_health_checker_port}\"",
      "\t\tresponse_body_regex = \"${var.backend_set_health_checker_response_body_regex}\"",
      "\t\tretries = \"${var.backend_set_health_checker_retries}\"",
      "\t\treturn_code = \"${var.backend_set_health_checker_return_code}\"",
      "\t\ttimeout_in_millis = \"${var.backend_set_health_checker_timeout_in_millis}\"",
      "\t\turl_path = \"${var.backend_set_health_checker_url_path}\"",
      "\t}",
      "\tload_balancer_id = \"${oci_load_balancer_load_balancer.test_load_balancer.id}\"",
      "\tname = \"${var.backend_set_name}\"",
      "\tpolicy = \"${var.backend_set_policy}\"",
      "",
      "\t#Optional",
      "\tlb_cookie_session_persistence_configuration {",
      "",
      "\t\t#Optional",
      "\t\tcookie_name = \"${var.backend_set_lb_cookie_session_persistence_configuration_cookie_name}\"",
      "\t\tdisable_fallback = \"${var.backend_set_lb_cookie_session_persistence_configuration_disable_fallback}\"",
      "\t\tdomain = \"${var.backend_set_lb_cookie_session_persistence_configuration_domain}\"",
      "\t\tis_http_only = \"${var.backend_set_lb_cookie_session_persistence_configuration_is_http_only}\"",
      "\t\tis_secure = \"${var.backend_set_lb_cookie_session_persistence_configuration_is_secure}\"",
      "\t\tmax_age_in_seconds = \"${var.backend_set_lb_cookie_session_persistence_configuration_max_age_in_seconds}\"",
      "\t\tpath = \"${var.backend_set_lb_cookie_session_persistence_configuration_path}\"",
      "\t}",
      "\tsession_persistence_configuration {",
      "\t\t#Required",
      "\t\tcookie_name = \"${var.backend_set_session_persistence_configuration_cookie_name}\"",
      "",
      "\t\t#Optional",
      "\t\tdisable_fallback = \"${var.backend_set_session_persistence_configuration_disable_fallback}\"",
      "\t}",
      "\tssl_configuration {",
      "\t\t#Required",
      "\t\tcertificate_name = \"${oci_load_balancer_certificate.test_certificate.certificate_name}\"",
      "",
      "\t\t#Optional",
      "\t\tverify_depth = \"${var.backend_set_ssl_configuration_verify_depth}\"",
      "\t\tverify_peer_certificate = \"${var.backend_set_ssl_configuration_verify_peer_certificate}\"",
      "\t}",
      "}"
    ]
  },
  "oci-resource-load_balancer_certificate": {
    "description": "Defines load_balancer_certificate",
    "prefix": "tf-oci-resource-load_balancer_certificate",
    "body": [
      "resource \"oci_load_balancer_certificate\" \"test_certificate\" {",
      "\t#Required",
      "\tcertificate_name = \"${var.certificate_certificate_name}\"",
      "\tload_balancer_id = \"${oci_load_balancer_load_balancer.test_load_balancer.id}\"",
      "",
      "\t#Optional",
      "\tca_certificate = \"${var.certificate_ca_certificate}\"",
      "\tpassphrase = \"${var.certificate_passphrase}\"",
      "\tprivate_key = \"${var.certificate_private_key}\"",
      "\tpublic_certificate = \"${var.certificate_public_certificate}\"",
      "",
      "\tlifecycle {",
      "\t    create_before_destroy = true",
      "\t}",
      "}"
    ]
  },
  "oci-resource-load_balancer_hostname": {
    "description": "Defines load_balancer_hostname",
    "prefix": "tf-oci-resource-load_balancer_hostname",
    "body": [
      "resource \"oci_load_balancer_hostname\" \"test_hostname\" {",
      "\t#Required",
      "\thostname = \"${var.hostname_hostname}\"",
      "\tload_balancer_id = \"${oci_load_balancer_load_balancer.test_load_balancer.id}\"",
      "\tname = \"${var.hostname_name}\"",
      "}"
    ]
  },
  "oci-resource-load_balancer_listener": {
    "description": "Defines load_balancer_listener",
    "prefix": "tf-oci-resource-load_balancer_listener",
    "body": [
      "resource \"oci_load_balancer_listener\" \"test_listener\" {",
      "\t#Required",
      "\tdefault_backend_set_name = \"${var.listener_default_backend_set_name}\"",
      "\tload_balancer_id = \"${oci_load_balancer_load_balancer.test_load_balancer.id}\"",
      "\tname = \"${var.listener_name}\"",
      "\tport = \"${var.listener_port}\"",
      "\tprotocol = \"${var.listener_protocol}\"",
      "",
      "\t#Optional",
      "\tconnection_configuration {",
      "\t\t#Required",
      "\t\tidle_timeout_in_seconds = \"${var.listener_connection_configuration_idle_timeout_in_seconds}\"",
      "\t}",
      "\thostname_names = [\"${oci_load_balancer_hostname.test_hostname.name}\"]",
      "\tpath_route_set_name = \"${oci_load_balancer_path_route_set.test_path_route_set.name}\"",
      "\trule_set_names = [\"${oci_load_balancer_rule_set.test_rule_set.name}\"]",
      "\tssl_configuration {",
      "\t\t#Required",
      "\t\tcertificate_name = \"${oci_load_balancer_certificate.test_certificate.name}\"",
      "",
      "\t\t#Optional",
      "\t\tverify_depth = \"${var.listener_ssl_configuration_verify_depth}\"",
      "\t\tverify_peer_certificate = \"${var.listener_ssl_configuration_verify_peer_certificate}\"",
      "\t}",
      "}"
    ]
  },
  "oci-resource-load_balancer_load_balancer": {
    "description": "Defines load_balancer_load_balancer",
    "prefix": "tf-oci-resource-load_balancer_load_balancer",
    "body": [
      "resource \"oci_load_balancer_load_balancer\" \"test_load_balancer\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tdisplay_name = \"${var.load_balancer_display_name}\"",
      "\tshape = \"${var.load_balancer_shape}\"",
      "\tsubnet_ids = \"${var.load_balancer_subnet_ids}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\tis_private = \"${var.load_balancer_is_private}\"",
      "\tnetwork_security_group_ids = \"${var.load_balancer_network_security_group_ids}\"",
      "}"
    ]
  },
  "oci-resource-load_balancer_path_route_set": {
    "description": "Defines load_balancer_path_route_set",
    "prefix": "tf-oci-resource-load_balancer_path_route_set",
    "body": [
      "resource \"oci_load_balancer_path_route_set\" \"test_path_route_set\" {",
      "\t#Required",
      "\tload_balancer_id = \"${oci_load_balancer_load_balancer.test_load_balancer.id}\"",
      "\tname = \"${var.path_route_set_name}\"",
      "\tpath_routes {",
      "\t\t#Required",
      "\t\tbackend_set_name = \"${oci_load_balancer_backend_set.test_backend_set.name}\"",
      "\t\tpath = \"${var.path_route_set_path_routes_path}\"",
      "\t\tpath_match_type {",
      "\t\t\t#Required",
      "\t\t\tmatch_type = \"${var.path_route_set_path_routes_path_match_type_match_type}\"",
      "\t\t}",
      "\t}",
      "}"
    ]
  },
  "oci-resource-load_balancer_rule_set": {
    "description": "Defines load_balancer_rule_set",
    "prefix": "tf-oci-resource-load_balancer_rule_set",
    "body": [
      "resource \"oci_load_balancer_rule_set\" \"test_rule_set\" {",
      "\t#Required",
      "\titems {",
      "\t\t#Required",
      "\t\taction = \"${var.rule_set_items_action}\"",
      "",
      "\t\t#Optional",
      "\t\tallowed_methods = \"${var.rule_set_items_allowed_methods}\"",
      "\t\tconditions {",
      "\t\t\t#Required",
      "\t\t\tattribute_name = \"${var.rule_set_items_conditions_attribute_name}\"",
      "\t\t\tattribute_value = \"${var.rule_set_items_conditions_attribute_value}\"",
      "\t\t}",
      "\t\tdescription = \"${var.rule_set_items_description}\"",
      "\t\theader = \"${var.rule_set_items_header}\"",
      "\t\tprefix = \"${var.rule_set_items_prefix}\"",
      "\t\tstatus_code = \"${var.rule_set_items_status_code}\"",
      "\t\tsuffix = \"${var.rule_set_items_suffix}\"",
      "\t\tvalue = \"${var.rule_set_items_value}\"",
      "\t}",
      "\tload_balancer_id = \"${oci_load_balancer_load_balancer.test_load_balancer.id}\"",
      "\tname = \"${var.rule_set_name}\"",
      "}"
    ]
  },
  "oci-resource-monitoring_alarm": {
    "description": "Defines monitoring_alarm",
    "prefix": "tf-oci-resource-monitoring_alarm",
    "body": [
      "resource \"oci_monitoring_alarm\" \"test_alarm\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tdestinations = [\"${oci_ons_notification_topic.test_notification_topic.id}\"]",
      "\tdisplay_name = \"${var.alarm_display_name}\"",
      "\tis_enabled = \"${var.alarm_is_enabled}\"",
      "\tmetric_compartment_id = \"${var.alarm_metric_compartment_id}\"",
      "\tnamespace = \"${var.alarm_namespace}\"",
      "\tquery = \"${var.alarm_query}\"",
      "\tseverity = \"${var.alarm_severity}\"",
      "",
      "\t#Optional",
      "\tbody = \"${var.alarm_body}\"",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\tmetric_compartment_id_in_subtree = \"${var.alarm_metric_compartment_id_in_subtree}\"",
      "\tpending_duration = \"${var.alarm_pending_duration}\"",
      "\trepeat_notification_duration = \"${var.alarm_repeat_notification_duration}\"",
      "\tresolution = \"${var.alarm_resolution}\"",
      "\tsuppression {",
      "\t\t#Required",
      "\t\ttime_suppress_from = \"${var.alarm_suppression_time_suppress_from}\"",
      "\t\ttime_suppress_until = \"${var.alarm_suppression_time_suppress_until}\"",
      "",
      "\t\t#Optional",
      "\t\tdescription = \"${var.alarm_suppression_description}\"",
      "\t}",
      "}"
    ]
  },
  "oci-resource-object_storage_bucket": {
    "description": "Defines object_storage_bucket",
    "prefix": "tf-oci-resource-object_storage_bucket",
    "body": [
      "resource \"oci_objectstorage_bucket\" \"test_bucket\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tname = \"${var.bucket_name}\"",
      "\tnamespace = \"${var.bucket_namespace}\"",
      "",
      "\t#Optional",
      "\taccess_type = \"${var.bucket_access_type}\"",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\tkms_key_id = \"${oci_objectstorage_kms_key.test_kms_key.id}\"",
      "\tmetadata = \"${var.bucket_metadata}\"",
      "\tstorage_tier = \"${var.bucket_storage_tier}\"",
      "}"
    ]
  },
  "oci-resource-object_storage_object": {
    "description": "Defines object_storage_object",
    "prefix": "tf-oci-resource-object_storage_object",
    "body": [
      "resource \"oci_objectstorage_object\" \"test_object\" {",
      "\t#Required",
      "\tbucket = \"${var.object_bucket}\"",
      "\tcontent = \"${var.object_content}\"",
      "\tnamespace = \"${var.object_namespace}\"",
      "\tobject = \"${var.object_object}\"",
      "",
      "\t#Optional",
      "\tcontent_encoding = \"${var.object_content_encoding}\"",
      "\tcontent_language = \"${var.object_content_language}\"",
      "\tcontent_type = \"${var.object_content_type}\"",
      "\tmetadata = \"${var.object_metadata}\"",
      "}"
    ]
  },
  "oci-resource-object_storage_object_lifecycle_policy": {
    "description": "Defines object_storage_object_lifecycle_policy",
    "prefix": "tf-oci-resource-object_storage_object_lifecycle_policy",
    "body": [
      "resource \"oci_objectstorage_object_lifecycle_policy\" \"test_object_lifecycle_policy\" {",
      "\t#Required",
      "\tbucket = \"${var.object_lifecycle_policy_bucket}\"",
      "\tnamespace = \"${var.object_lifecycle_policy_namespace}\"",
      "",
      "\t#Optional",
      "\trules {",
      "\t\t#Required",
      "\t\taction = \"${var.object_lifecycle_policy_rules_action}\"",
      "\t\tis_enabled = \"${var.object_lifecycle_policy_rules_is_enabled}\"",
      "\t\tname = \"${var.object_lifecycle_policy_rules_name}\"",
      "\t\ttime_amount = \"${var.object_lifecycle_policy_rules_time_amount}\"",
      "\t\ttime_unit = \"${var.object_lifecycle_policy_rules_time_unit}\"",
      "",
      "\t\t#Optional",
      "\t\tobject_name_filter {",
      "",
      "\t\t\t#Optional",
      "\t\t\texclusion_patterns = \"${var.object_lifecycle_policy_rules_object_name_filter_exclusion_patterns}\"",
      "\t\t\tinclusion_patterns = \"${var.object_lifecycle_policy_rules_object_name_filter_inclusion_patterns}\"",
      "\t\t\tinclusion_prefixes = \"${var.object_lifecycle_policy_rules_object_name_filter_inclusion_prefixes}\"",
      "\t\t}",
      "\t}",
      "}"
    ]
  },
  "oci-resource-object_storage_preauthenticated_request": {
    "description": "Defines object_storage_preauthenticated_request",
    "prefix": "tf-oci-resource-object_storage_preauthenticated_request",
    "body": [
      "resource \"oci_objectstorage_preauthrequest\" \"test_preauthenticated_request\" {",
      "\t#Required",
      "\taccess_type = \"${var.preauthenticated_request_access_type}\"",
      "\tbucket = \"${var.preauthenticated_request_bucket}\"",
      "\tname = \"${var.preauthenticated_request_name}\"",
      "\tnamespace = \"${var.preauthenticated_request_namespace}\"",
      "\ttime_expires = \"${var.preauthenticated_request_time_expires}\"",
      "",
      "\t#Optional",
      "\tobject = \"${var.preauthenticated_request_object}\"",
      "}"
    ]
  },
  "oci-resource-ons_notification_topic": {
    "description": "Defines ons_notification_topic",
    "prefix": "tf-oci-resource-ons_notification_topic",
    "body": [
      "resource \"oci_ons_notification_topic\" \"test_notification_topic\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tname = \"${var.notification_topic_name}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tdescription = \"${var.notification_topic_description}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-ons_subscription": {
    "description": "Defines ons_subscription",
    "prefix": "tf-oci-resource-ons_subscription",
    "body": [
      "resource \"oci_ons_subscription\" \"test_subscription\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tendpoint = \"${var.subscription_endpoint}\"",
      "\tprotocol = \"${var.subscription_protocol}\"",
      "\ttopic_id = \"${oci_ons_notification_topic.test_notification_topic.id}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = {\"Operations.CostCenter\"= \"42\"}",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "}"
    ]
  },
  "oci-resource-streaming_stream": {
    "description": "Defines streaming_stream",
    "prefix": "tf-oci-resource-streaming_stream",
    "body": [
      "resource \"oci_streaming_stream\" \"test_stream\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tname = \"${var.stream_name}\"",
      "\tpartitions = \"${var.stream_partitions}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = \"${var.stream_defined_tags}\"",
      "\tfreeform_tags = {\"Department\"= \"Finance\"}",
      "\tretention_in_hours = \"${var.stream_retention_in_hours}\"",
      "}"
    ]
  },
  "oci-resource-waas_certificate": {
    "description": "Defines waas_certificate",
    "prefix": "tf-oci-resource-waas_certificate",
    "body": [
      "resource \"oci_waas_certificate\" \"test_certificate\" {",
      "\t#Required",
      "\tcertificate_data = \"${var.certificate_certificate_data}\"",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tprivate_key_data = \"${var.certificate_private_key_data}\"",
      "",
      "\t#Optional",
      "\tdefined_tags = \"${var.certificate_defined_tags}\"",
      "\tdisplay_name = \"${var.certificate_display_name}\"",
      "\tfreeform_tags = \"${var.certificate_freeform_tags}\"",
      "\tis_trust_verification_disabled = \"${var.certificate_is_trust_verification_disabled}\"",
      "}"
    ]
  },
  "oci-resource-waas_waas_policy": {
    "description": "Defines waas_waas_policy",
    "prefix": "tf-oci-resource-waas_waas_policy",
    "body": [
      "resource \"oci_waas_waas_policy\" \"test_waas_policy\" {",
      "\t#Required",
      "\tcompartment_id = \"${var.compartment_id}\"",
      "\tdomain = \"${var.waas_policy_domain}\"",
      "",
      "\t#Optional",
      "\tadditional_domains = \"${var.waas_policy_additional_domains}\"",
      "\tdefined_tags = \"${var.waas_policy_defined_tags}\"",
      "\tdisplay_name = \"${var.waas_policy_display_name}\"",
      "\tfreeform_tags = \"${var.waas_policy_freeform_tags}\"",
      "\torigins {",
      "\t\t#Required",
      "\t\turi = \"${var.waas_policy_origins_uri}\"",
      "",
      "\t\t#Optional",
      "\t\tcustom_headers {",
      "\t\t\t#Required",
      "\t\t\tname = \"${var.waas_policy_origins_custom_headers_name}\"",
      "\t\t\tvalue = \"${var.waas_policy_origins_custom_headers_value}\"",
      "\t\t}",
      "\t\thttp_port = \"${var.waas_policy_origins_http_port}\"",
      "\t\thttps_port = \"${var.waas_policy_origins_https_port}\"",
      "\t}",
      "\tpolicy_config {",
      "",
      "\t\t#Optional",
      "\t\tcertificate_id = \"${oci_waas_certificate.test_certificate.id}\"",
      "\t\tis_https_enabled = \"${var.waas_policy_policy_config_is_https_enabled}\"",
      "\t\tis_https_forced = \"${var.waas_policy_policy_config_is_https_forced}\"",
      "\t}",
      "\twaf_config {",
      "",
      "\t\t#Optional",
      "\t\taccess_rules {",
      "\t\t\t#Required",
      "\t\t\taction = \"${var.waas_policy_waf_config_access_rules_action}\"",
      "\t\t\tcriteria {",
      "\t\t\t\t#Required",
      "\t\t\t\tcondition = \"${var.waas_policy_waf_config_access_rules_criteria_condition}\"",
      "\t\t\t\tvalue = \"${var.waas_policy_waf_config_access_rules_criteria_value}\"",
      "\t\t\t}",
      "\t\t\tname = \"${var.waas_policy_waf_config_access_rules_name}\"",
      "",
      "\t\t\t#Optional",
      "\t\t\tblock_action = \"${var.waas_policy_waf_config_access_rules_block_action}\"",
      "\t\t\tblock_error_page_code = \"${var.waas_policy_waf_config_access_rules_block_error_page_code}\"",
      "\t\t\tblock_error_page_description = \"${var.waas_policy_waf_config_access_rules_block_error_page_description}\"",
      "\t\t\tblock_error_page_message = \"${var.waas_policy_waf_config_access_rules_block_error_page_message}\"",
      "\t\t\tblock_response_code = \"${var.waas_policy_waf_config_access_rules_block_response_code}\"",
      "\t\t}",
      "\t\taddress_rate_limiting {",
      "\t\t\t#Required",
      "\t\t\tis_enabled = \"${var.waas_policy_waf_config_address_rate_limiting_is_enabled}\"",
      "",
      "\t\t\t#Optional",
      "\t\t\tallowed_rate_per_address = \"${var.waas_policy_waf_config_address_rate_limiting_allowed_rate_per_address}\"",
      "\t\t\tblock_response_code = \"${var.waas_policy_waf_config_address_rate_limiting_block_response_code}\"",
      "\t\t\tmax_delayed_count_per_address = \"${var.waas_policy_waf_config_address_rate_limiting_max_delayed_count_per_address}\"",
      "\t\t}",
      "\t\tcaptchas {",
      "\t\t\t#Required",
      "\t\t\tfailure_message = \"${var.waas_policy_waf_config_captchas_failure_message}\"",
      "\t\t\tsession_expiration_in_seconds = \"${var.waas_policy_waf_config_captchas_session_expiration_in_seconds}\"",
      "\t\t\tsubmit_label = \"${var.waas_policy_waf_config_captchas_submit_label}\"",
      "\t\t\ttitle = \"${var.waas_policy_waf_config_captchas_title}\"",
      "\t\t\turl = \"${var.waas_policy_waf_config_captchas_url}\"",
      "",
      "\t\t\t#Optional",
      "\t\t\tfooter_text = \"${var.waas_policy_waf_config_captchas_footer_text}\"",
      "\t\t\theader_text = \"${var.waas_policy_waf_config_captchas_header_text}\"",
      "\t\t}",
      "\t\tdevice_fingerprint_challenge {",
      "\t\t\t#Required",
      "\t\t\tis_enabled = \"${var.waas_policy_waf_config_device_fingerprint_challenge_is_enabled}\"",
      "",
      "\t\t\t#Optional",
      "\t\t\taction = \"${var.waas_policy_waf_config_device_fingerprint_challenge_action}\"",
      "\t\t\taction_expiration_in_seconds = \"${var.waas_policy_waf_config_device_fingerprint_challenge_action_expiration_in_seconds}\"",
      "\t\t\tchallenge_settings {",
      "",
      "\t\t\t\t#Optional",
      "\t\t\t\tblock_action = \"${var.waas_policy_waf_config_device_fingerprint_challenge_challenge_settings_block_action}\"",
      "\t\t\t\tblock_error_page_code = \"${var.waas_policy_waf_config_device_fingerprint_challenge_challenge_settings_block_error_page_code}\"",
      "\t\t\t\tblock_error_page_description = \"${var.waas_policy_waf_config_device_fingerprint_challenge_challenge_settings_block_error_page_description}\"",
      "\t\t\t\tblock_error_page_message = \"${var.waas_policy_waf_config_device_fingerprint_challenge_challenge_settings_block_error_page_message}\"",
      "\t\t\t\tblock_response_code = \"${var.waas_policy_waf_config_device_fingerprint_challenge_challenge_settings_block_response_code}\"",
      "\t\t\t\tcaptcha_footer = \"${var.waas_policy_waf_config_device_fingerprint_challenge_challenge_settings_captcha_footer}\"",
      "\t\t\t\tcaptcha_header = \"${var.waas_policy_waf_config_device_fingerprint_challenge_challenge_settings_captcha_header}\"",
      "\t\t\t\tcaptcha_submit_label = \"${var.waas_policy_waf_config_device_fingerprint_challenge_challenge_settings_captcha_submit_label}\"",
      "\t\t\t\tcaptcha_title = \"${var.waas_policy_waf_config_device_fingerprint_challenge_challenge_settings_captcha_title}\"",
      "\t\t\t}",
      "\t\t\tfailure_threshold = \"${var.waas_policy_waf_config_device_fingerprint_challenge_failure_threshold}\"",
      "\t\t\tfailure_threshold_expiration_in_seconds = \"${var.waas_policy_waf_config_device_fingerprint_challenge_failure_threshold_expiration_in_seconds}\"",
      "\t\t\tmax_address_count = \"${var.waas_policy_waf_config_device_fingerprint_challenge_max_address_count}\"",
      "\t\t\tmax_address_count_expiration_in_seconds = \"${var.waas_policy_waf_config_device_fingerprint_challenge_max_address_count_expiration_in_seconds}\"",
      "\t\t}",
      "\t\thuman_interaction_challenge {",
      "\t\t\t#Required",
      "\t\t\tis_enabled = \"${var.waas_policy_waf_config_human_interaction_challenge_is_enabled}\"",
      "",
      "\t\t\t#Optional",
      "\t\t\taction = \"${var.waas_policy_waf_config_human_interaction_challenge_action}\"",
      "\t\t\taction_expiration_in_seconds = \"${var.waas_policy_waf_config_human_interaction_challenge_action_expiration_in_seconds}\"",
      "\t\t\tchallenge_settings {",
      "",
      "\t\t\t\t#Optional",
      "\t\t\t\tblock_action = \"${var.waas_policy_waf_config_human_interaction_challenge_challenge_settings_block_action}\"",
      "\t\t\t\tblock_error_page_code = \"${var.waas_policy_waf_config_human_interaction_challenge_challenge_settings_block_error_page_code}\"",
      "\t\t\t\tblock_error_page_description = \"${var.waas_policy_waf_config_human_interaction_challenge_challenge_settings_block_error_page_description}\"",
      "\t\t\t\tblock_error_page_message = \"${var.waas_policy_waf_config_human_interaction_challenge_challenge_settings_block_error_page_message}\"",
      "\t\t\t\tblock_response_code = \"${var.waas_policy_waf_config_human_interaction_challenge_challenge_settings_block_response_code}\"",
      "\t\t\t\tcaptcha_footer = \"${var.waas_policy_waf_config_human_interaction_challenge_challenge_settings_captcha_footer}\"",
      "\t\t\t\tcaptcha_header = \"${var.waas_policy_waf_config_human_interaction_challenge_challenge_settings_captcha_header}\"",
      "\t\t\t\tcaptcha_submit_label = \"${var.waas_policy_waf_config_human_interaction_challenge_challenge_settings_captcha_submit_label}\"",
      "\t\t\t\tcaptcha_title = \"${var.waas_policy_waf_config_human_interaction_challenge_challenge_settings_captcha_title}\"",
      "\t\t\t}",
      "\t\t\tfailure_threshold = \"${var.waas_policy_waf_config_human_interaction_challenge_failure_threshold}\"",
      "\t\t\tfailure_threshold_expiration_in_seconds = \"${var.waas_policy_waf_config_human_interaction_challenge_failure_threshold_expiration_in_seconds}\"",
      "\t\t\tinteraction_threshold = \"${var.waas_policy_waf_config_human_interaction_challenge_interaction_threshold}\"",
      "\t\t\trecording_period_in_seconds = \"${var.waas_policy_waf_config_human_interaction_challenge_recording_period_in_seconds}\"",
      "\t\t\tset_http_header {",
      "\t\t\t\t#Required",
      "\t\t\t\tname = \"${var.waas_policy_waf_config_human_interaction_challenge_set_http_header_name}\"",
      "\t\t\t\tvalue = \"${var.waas_policy_waf_config_human_interaction_challenge_set_http_header_value}\"",
      "\t\t\t}",
      "\t\t}",
      "\t\tjs_challenge {",
      "\t\t\t#Required",
      "\t\t\tis_enabled = \"${var.waas_policy_waf_config_js_challenge_is_enabled}\"",
      "",
      "\t\t\t#Optional",
      "\t\t\taction = \"${var.waas_policy_waf_config_js_challenge_action}\"",
      "\t\t\taction_expiration_in_seconds = \"${var.waas_policy_waf_config_js_challenge_action_expiration_in_seconds}\"",
      "\t\t\tchallenge_settings {",
      "",
      "\t\t\t\t#Optional",
      "\t\t\t\tblock_action = \"${var.waas_policy_waf_config_js_challenge_challenge_settings_block_action}\"",
      "\t\t\t\tblock_error_page_code = \"${var.waas_policy_waf_config_js_challenge_challenge_settings_block_error_page_code}\"",
      "\t\t\t\tblock_error_page_description = \"${var.waas_policy_waf_config_js_challenge_challenge_settings_block_error_page_description}\"",
      "\t\t\t\tblock_error_page_message = \"${var.waas_policy_waf_config_js_challenge_challenge_settings_block_error_page_message}\"",
      "\t\t\t\tblock_response_code = \"${var.waas_policy_waf_config_js_challenge_challenge_settings_block_response_code}\"",
      "\t\t\t\tcaptcha_footer = \"${var.waas_policy_waf_config_js_challenge_challenge_settings_captcha_footer}\"",
      "\t\t\t\tcaptcha_header = \"${var.waas_policy_waf_config_js_challenge_challenge_settings_captcha_header}\"",
      "\t\t\t\tcaptcha_submit_label = \"${var.waas_policy_waf_config_js_challenge_challenge_settings_captcha_submit_label}\"",
      "\t\t\t\tcaptcha_title = \"${var.waas_policy_waf_config_js_challenge_challenge_settings_captcha_title}\"",
      "\t\t\t}",
      "\t\t\tfailure_threshold = \"${var.waas_policy_waf_config_js_challenge_failure_threshold}\"",
      "\t\t\tset_http_header {",
      "\t\t\t\t#Required",
      "\t\t\t\tname = \"${var.waas_policy_waf_config_js_challenge_set_http_header_name}\"",
      "\t\t\t\tvalue = \"${var.waas_policy_waf_config_js_challenge_set_http_header_value}\"",
      "\t\t\t}",
      "\t\t}",
      "\t\torigin = \"${var.waas_policy_waf_config_origin}\"",
      "\t\tprotection_settings {",
      "",
      "\t\t\t#Optional",
      "\t\t\tallowed_http_methods = \"${var.waas_policy_waf_config_protection_settings_allowed_http_methods}\"",
      "\t\t\tblock_action = \"${var.waas_policy_waf_config_protection_settings_block_action}\"",
      "\t\t\tblock_error_page_code = \"${var.waas_policy_waf_config_protection_settings_block_error_page_code}\"",
      "\t\t\tblock_error_page_description = \"${var.waas_policy_waf_config_protection_settings_block_error_page_description}\"",
      "\t\t\tblock_error_page_message = \"${var.waas_policy_waf_config_protection_settings_block_error_page_message}\"",
      "\t\t\tblock_response_code = \"${var.waas_policy_waf_config_protection_settings_block_response_code}\"",
      "\t\t\tis_response_inspected = \"${var.waas_policy_waf_config_protection_settings_is_response_inspected}\"",
      "\t\t\tmax_argument_count = \"${var.waas_policy_waf_config_protection_settings_max_argument_count}\"",
      "\t\t\tmax_name_length_per_argument = \"${var.waas_policy_waf_config_protection_settings_max_name_length_per_argument}\"",
      "\t\t\tmax_response_size_in_ki_b = \"${var.waas_policy_waf_config_protection_settings_max_response_size_in_ki_b}\"",
      "\t\t\tmax_total_name_length_of_arguments = \"${var.waas_policy_waf_config_protection_settings_max_total_name_length_of_arguments}\"",
      "\t\t\tmedia_types = \"${var.waas_policy_waf_config_protection_settings_media_types}\"",
      "\t\t\trecommendations_period_in_days = \"${var.waas_policy_waf_config_protection_settings_recommendations_period_in_days}\"",
      "\t\t}",
      "\t\twhitelists {",
      "\t\t\t#Required",
      "\t\t\taddresses = \"${var.waas_policy_waf_config_whitelists_addresses}\"",
      "\t\t\tname = \"${var.waas_policy_waf_config_whitelists_name}\"",
      "\t\t}",
      "\t}",
      "}"
    ]
  },
  "oneandone-resource-baremetal": {
    "description": "Defines baremetal",
    "prefix": "tf-oneandone-resource-baremetal",
    "body": [
      "resource \"oneandone_baremetal\" \"server\" {\r",
      "  name = \"%s\"\r",
      "  description = \"%s\"\r",
      "  image = \"%s\"\r",
      "  password = \"Kv40kd8PQb\"\r",
      "  datacenter = \"US\"\r",
      "  baremetal_model_id = \"%s\"\r",
      "  ssh_key_path = \"/path/to/private/ssh_key\"\r",
      "  ssh_key_public = \"${file(\"/path/to/public/key.pub\")}\"\r",
      "\r",
      "\r",
      "  provisioner \"remote-exec\" {\r",
      "    inline = [\r",
      "      \"apt-get update\",\r",
      "      \"apt-get -y install nginx\",\r",
      "    ]\r",
      "  }\r",
      "}\r"
    ]
  },
  "oneandone-resource-block_storage": {
    "description": "Defines block_storage",
    "prefix": "tf-oneandone-resource-block_storage",
    "body": [
      "resource \"oneandone_block_storage\" \"storage\" {",
      "  name = \"test_blk_storage1\"",
      "  description = \"testing_blk_storage\"",
      "  size = 20",
      "  datacenter = \"US\"",
      "}"
    ]
  },
  "oneandone-resource-firewall_policy": {
    "description": "Defines firewall_policy",
    "prefix": "tf-oneandone-resource-firewall_policy",
    "body": [
      "resource \"oneandone_firewall_policy\" \"fw\" {",
      "  name = \"test_fw_011\"",
      "  rules = [",
      "    {",
      "      \"protocol\" = \"TCP\"",
      "      \"port_from\" = 80",
      "      \"port_to\" = 80",
      "      \"source_ip\" = \"0.0.0.0\"",
      "    },",
      "    {",
      "      \"protocol\" = \"ICMP\"",
      "      \"source_ip\" = \"0.0.0.0\"",
      "    },",
      "    {",
      "      \"protocol\" = \"TCP\"",
      "      \"port_from\" = 43",
      "      \"port_to\" = 43",
      "      \"source_ip\" = \"0.0.0.0\"",
      "    },",
      "    {",
      "      \"protocol\" = \"TCP\"",
      "      \"port_from\" = 22",
      "      \"port_to\" = 22",
      "      \"source_ip\" = \"0.0.0.0\"",
      "    }",
      "  ]",
      "}"
    ]
  },
  "oneandone-resource-image": {
    "description": "Defines image",
    "prefix": "tf-oneandone-resource-image",
    "body": [
      "resource \"oneandone_image\" \"example1\" {",
      "  name = \"example1\"",
      "  server_id = \"932F8ABA5060571E5D3C2119E0E31360\"",
      "  description = \"Weekly server snapshot\"",
      "  frequency = \"WEEKLY\"",
      "  num_images = 5",
      "}"
    ]
  },
  "oneandone-resource-instance_size": {
    "description": "Defines instance_size",
    "prefix": "tf-oneandone-resource-instance_size",
    "body": [
      "data \"oneandone_instance_size\" \"sizeByName\" {",
      "  name = \"L\"",
      "}",
      "",
      "data \"oneandone_instance_size\" \"sizeByHardware\" {",
      "  vcores = 2",
      "  ram = 4",
      "}",
      "",
      "resource \"oneandone_server\" \"server\" {",
      "  name                = \"Example\"",
      "  image               = \"debian8-64min\"",
      "  datacenter          = \"DE\"",
      "  fixed_instance_size = \"${data.oneandone_instance_size.sizeByName.id}\"",
      "  ...",
      "}"
    ]
  },
  "oneandone-resource-loadbalancer": {
    "description": "Defines loadbalancer",
    "prefix": "tf-oneandone-resource-loadbalancer",
    "body": [
      "resource \"oneandone_loadbalancer\" \"lb\" {",
      "  name = \"test_lb\"",
      "  method = \"ROUND_ROBIN\"",
      "  persistence = true",
      "  persistence_time = 60",
      "  health_check_test = \"TCP\"",
      "  health_check_interval = 300",
      "  datacenter = \"GB\"",
      "  rules = [",
      "    {",
      "      protocol = \"TCP\"",
      "      port_balancer = 8080",
      "      port_server = 8089",
      "      source_ip = \"0.0.0.0\"",
      "    },",
      "    {",
      "      protocol = \"TCP\"",
      "      port_balancer = 9090",
      "      port_server = 9099",
      "      source_ip = \"0.0.0.0\"",
      "    }",
      "  ]",
      "}"
    ]
  },
  "oneandone-resource-monitoring_policy": {
    "description": "Defines monitoring_policy",
    "prefix": "tf-oneandone-resource-monitoring_policy",
    "body": [
      "resource \"oneandone_monitoring_policy\" \"mp\" {",
      "  name = \"test_mp\"",
      "  agent = true",
      "  email = \"jasmin@stackpointcloud.com\"",
      "",
      "  thresholds = {",
      "    cpu = {",
      "      warning = {",
      "        value = 50,",
      "        alert = false",
      "      }",
      "      critical = {",
      "        value = 66,",
      "        alert = false",
      "      }",
      "",
      "    }",
      "    ram = {",
      "      warning = {",
      "        value = 70,",
      "        alert = true",
      "      }",
      "      critical = {",
      "        value = 80,",
      "        alert = true",
      "      }",
      "    },",
      "    ram = {",
      "      warning = {",
      "        value = 85,",
      "        alert = true",
      "      }",
      "      critical = {",
      "        value = 95,",
      "        alert = true",
      "      }",
      "    },",
      "    disk = {",
      "      warning = {",
      "        value = 84,",
      "        alert = true",
      "      }",
      "      critical = {",
      "        value = 94,",
      "        alert = true",
      "      }",
      "    },",
      "    transfer = {",
      "      warning = {",
      "        value = 1000,",
      "        alert = true",
      "      }",
      "      critical = {",
      "        value = 2000,",
      "        alert = true",
      "      }",
      "    },",
      "    internal_ping = {",
      "      warning = {",
      "        value = 3000,",
      "        alert = true",
      "      }",
      "      critical = {",
      "        value = 4000,",
      "        alert = true",
      "      }",
      "    }",
      "  }",
      "  ports = [",
      "    {",
      "      email_notification = true",
      "      port = 443",
      "      protocol = \"TCP\"",
      "      alert_if = \"NOT_RESPONDING\"",
      "    },",
      "    {",
      "      email_notification = false",
      "      port = 80",
      "      protocol = \"TCP\"",
      "      alert_if = \"NOT_RESPONDING\"",
      "    },",
      "    {",
      "      email_notification = true",
      "      port = 21",
      "      protocol = \"TCP\"",
      "      alert_if = \"NOT_RESPONDING\"",
      "    }",
      "  ]",
      "",
      "  processes = [",
      "    {",
      "      email_notification = false",
      "      process = \"httpdeamon\"",
      "      alert_if = \"RUNNING\"",
      "    },",
      "    {",
      "      process = \"iexplorer\",",
      "      alert_if = \"NOT_RUNNING\"",
      "      email_notification = true",
      "    }]",
      "}"
    ]
  },
  "oneandone-resource-private_network": {
    "description": "Defines private_network",
    "prefix": "tf-oneandone-resource-private_network",
    "body": [
      "resource \"oneandone_private_network\" \"pn\" {",
      "  name = \"pn_test\",",
      "  description = \"new stuff001\"",
      "  datacenter = \"GB\"",
      "  network_address = \"192.168.7.0\"",
      "  subnet_mask = \"255.255.255.0\"",
      "  server_ids = [",
      "    \"${oneandone_server.server.id}\",",
      "    \"${oneandone_server.server02.id}\",",
      "  ]",
      "}"
    ]
  },
  "oneandone-resource-public_ip": {
    "description": "Defines public_ip",
    "prefix": "tf-oneandone-resource-public_ip",
    "body": [
      "resource \"oneandone_public_ip\" \"ip\" {",
      "\t\"ip_type\"     = \"IPV4\"",
      "\t\"reverse_dns\" = \"%s\"",
      "\t\"datacenter\"  = \"GB\"",
      "}"
    ]
  },
  "oneandone-resource-server": {
    "description": "Defines server",
    "prefix": "tf-oneandone-resource-server",
    "body": [
      "resource \"oneandone_server\" \"server\" {",
      "  name = \"Example\"",
      "  description = \"Terraform 1and1 tutorial\"",
      "  image = \"ubuntu\"",
      "  datacenter = \"GB\"",
      "  vcores = 1",
      "  cores_per_processor = 1",
      "  ram = 2",
      "  ssh_key_path = \"/path/to/private/ssh_key\"",
      "  ssh_key_public = \"${file(\"/path/to/public/key.pub\")}\"",
      "  hdds = [",
      "    {",
      "      disk_size = 60",
      "      is_main = true",
      "    }",
      "  ]",
      "",
      "  provisioner \"remote-exec\" {",
      "    inline = [",
      "      \"apt-get update\",",
      "      \"apt-get -y install nginx\",",
      "    ]",
      "  }",
      "}"
    ]
  },
  "oneandone-resource-shared_storage": {
    "description": "Defines shared_storage",
    "prefix": "tf-oneandone-resource-shared_storage",
    "body": [
      "resource \"oneandone_shared_storage\" \"storage\" {",
      "  name = \"test_storage1\"",
      "  description = \"1234\"",
      "  size = 50",
      "",
      "  storage_servers = [",
      "    {",
      "      id = \"${oneandone_server.server.id}\"",
      "      rights = \"RW\"",
      "    },",
      "    {",
      "      id = \"${oneandone_server.server02.id}\"",
      "      rights = \"RW\"",
      "    }",
      "  ]",
      "}"
    ]
  },
  "oneandone-resource-ssh_key": {
    "description": "Defines ssh_key",
    "prefix": "tf-oneandone-resource-ssh_key",
    "body": [
      "resource \"oneandone_ssh_key\" \"sshkey\" {",
      "  name = \"test_ssh_key\"",
      "  description = \"testing_ssh_keys\"",
      "}"
    ]
  },
  "oneandone-resource-vpn": {
    "description": "Defines vpn",
    "prefix": "tf-oneandone-resource-vpn",
    "body": [
      "resource \"oneandone_vpn\" \"vpn\" {",
      "  datacenter  = \"GB\"",
      "  name        = \"%s\"",
      "  description = \"ttest descr\"",
      "}"
    ]
  },
  "opc-data-opc_compute_image_list_entry": {
    "description": "Defines opc_compute_image_list_entry",
    "prefix": "tf-opc-data-opc_compute_image_list_entry",
    "body": [
      "data \"opc_compute_image_list_entry\" \"foo\" {",
      "  image_list = \"my_image_list\"",
      "  version = \"version_of_my_list\"",
      "}",
      "",
      "output \"machine_images\" {",
      "  value = \"${data.opc_compute_image_list_entry.foo.machine_images}\"",
      "}",
      "",
      "output \"single_image\" {",
      "  value = \"${data.opc_compute_image_list_entry.foo.machine_images[1]}\"",
      "}"
    ]
  },
  "opc-data-opc_compute_ip_address_reservation": {
    "description": "Defines opc_compute_ip_address_reservation",
    "prefix": "tf-opc-data-opc_compute_ip_address_reservation",
    "body": [
      "data \"opc_compute_ip_address_reservation\" \"example\" {",
      "  name = \"/Compute-${var.domain}/${var.user}/ipaddressreservation1\"",
      "}",
      "",
      "output \"public_ip_address\" {",
      "  value = \"${data.opc_compute_ip_address_reservation.example.ip_address}\"",
      "}"
    ]
  },
  "opc-data-opc_compute_ip_reservation": {
    "description": "Defines opc_compute_ip_reservation",
    "prefix": "tf-opc-data-opc_compute_ip_reservation",
    "body": [
      "data \"opc_compute_ip_reservation\" \"example\" {",
      "  name = \"/Compute-${var.domain}/${var.user}/309dd783-552d-4b8a-a3aa-a71109f703df\"",
      "}`",
      "",
      "output \"public_ip_address\" {",
      "  value = \"${data.opc_compute_ip_reservation.example.ip}\"",
      "}"
    ]
  },
  "opc-data-opc_compute_machine_image": {
    "description": "Defines opc_compute_machine_image",
    "prefix": "tf-opc-data-opc_compute_machine_image",
    "body": [
      "data \"opc_compute_machine_image\" \"foo\" {",
      "  account = \"/Compute-${var.domain}/cloud_storage\"",
      "  name = \"Microsoft_Windows_Server_2012_R2\"",
      "}",
      "",
      "output \"attributes\" {",
      "  value = \"${data.opc_compute_machine_image.foo.attributes}\"",
      "}"
    ]
  },
  "opc-data-opc_compute_network_interface": {
    "description": "Defines opc_compute_network_interface",
    "prefix": "tf-opc-data-opc_compute_network_interface",
    "body": [
      "data \"opc_compute_network_interface\" \"foo\" {",
      "  instance_id   = \"${opc_compute_instance.my_instance.id}\"",
      "  instance_name = \"${opc_compute_instance.my_instance.name}\"",
      "  interface     = \"eth0\"",
      "}",
      "",
      "output \"mac_address\" {",
      "  value = \"${data.opc_compute_network_interface.foo.mac_address}\"",
      "}",
      "",
      "output \"vnic\" {",
      "  value = \"${data.opc_compute_network_interface.foo.vnic}\"",
      "}"
    ]
  },
  "opc-data-opc_compute_ssh_key": {
    "description": "Defines opc_compute_ssh_key",
    "prefix": "tf-opc-data-opc_compute_ssh_key",
    "body": [
      "data \"opc_compute_ssh_key\" \"test\" {",
      "  name    = \"/Compute-${var.domain}/${var.user}/test-key\"",
      "}",
      "",
      "output \"public_ssh_key\" {",
      "  value = \"${data.opc_compute_ssh_key.test.key}\"",
      "}"
    ]
  },
  "opc-data-opc_compute_storage_volume_snapshot": {
    "description": "Defines opc_compute_storage_volume_snapshot",
    "prefix": "tf-opc-data-opc_compute_storage_volume_snapshot",
    "body": [
      "data \"opc_compute_storage_volume_snapshot\" \"foo\" {",
      "  name = \"my-storage-volume/my-storage-volume-snapshot-name\"",
      "}"
    ]
  },
  "opc-data-opc_compute_vnic": {
    "description": "Defines opc_compute_vnic",
    "prefix": "tf-opc-data-opc_compute_vnic",
    "body": [
      "data \"opc_compute_vnic\" \"current\" {",
      "  name = \"my_vnic_name\"",
      "}",
      "",
      "output \"mac_address\" {",
      "  value = \"${data.opc_compute_vnic.current.mac_address}\"",
      "}"
    ]
  },
  "opc-resource-opc_compute_acl": {
    "description": "Defines opc_compute_acl",
    "prefix": "tf-opc-resource-opc_compute_acl",
    "body": [
      "resource \"opc_compute_acl\" \"default\" {",
      "  name        = \"ACL1\"",
      "  description = \"This is a description for an acl\"",
      "  tags        = [\"tag1\", \"tag2\"]",
      "}"
    ]
  },
  "opc-resource-opc_compute_image_list": {
    "description": "Defines opc_compute_image_list",
    "prefix": "tf-opc-resource-opc_compute_image_list",
    "body": [
      "resource \"opc_compute_image_list\" \"test\" {",
      "  name        = \"imagelist1\"",
      "  description = \"This is a description of the Image List\"",
      "  default     = 21",
      "}"
    ]
  },
  "opc-resource-opc_compute_image_list_entry": {
    "description": "Defines opc_compute_image_list_entry",
    "prefix": "tf-opc-resource-opc_compute_image_list_entry",
    "body": [
      "resource \"opc_compute_image_list\" \"test\" {",
      "  name        = \"imagelist1\"",
      "  description = \"This is a description of the Image List\"",
      "  default     = 21",
      "}",
      "",
      "resource \"opc_compute_image_list_entry\" \"test\" {",
      "  name           = \"${opc_compute_image_list.test.name}\"",
      "  machine_images = [ \"/oracle/public/oel_6.7_apaas_16.4.5_1610211300\" ]",
      "  version        = 1",
      "  attributes     = <<JSON",
      "{",
      "  \"foo\": \"bar\"",
      "}",
      "JSON",
      "}"
    ]
  },
  "opc-resource-opc_compute_instance": {
    "description": "Defines opc_compute_instance",
    "prefix": "tf-opc-resource-opc_compute_instance",
    "body": [
      "resource \"opc_compute_ip_network\" \"test\" {",
      "  name                = \"internal-network\"",
      "  description         = \"Terraform Provisioned Internal Network\"",
      "  ip_address_prefix   = \"10.0.1.0/24\"",
      "  public_napt_enabled = false",
      "}",
      "",
      "resource \"opc_compute_storage_volume\" \"test\" {",
      "  name = \"internal\"",
      "  size = 100",
      "}",
      "",
      "resource \"opc_compute_instance\" \"test\" {",
      "  name       = \"instance1\"",
      "  label      = \"Terraform Provisioned Instance\"",
      "  shape      = \"oc3\"",
      "  image_list = \"/oracle/public/oel_6.7_apaas_16.4.5_1610211300\"",
      "",
      "  storage {",
      "    volume = \"${opc_compute_storage_volume.test.name}\"",
      "    index  = 1",
      "  }",
      "",
      "  networking_info {",
      "    index          = 0",
      "    nat            = [\"ippool:/oracle/public/ippool\"]",
      "    shared_network = true",
      "  }",
      "}",
      ""
    ]
  },
  "opc-resource-opc_compute_ip_address_association": {
    "description": "Defines opc_compute_ip_address_association",
    "prefix": "tf-opc-resource-opc_compute_ip_address_association",
    "body": [
      "resource \"opc_compute_ip_address_association\" \"default\" {",
      "  name                   = \"IPAddressAssociation1\"",
      "  ip_address_reservation = \"${opc_compute_ip_address_reservation.default.name}\"",
      "  vnic                   = \"${data.opc_compute_vnic.default.name}\"",
      "  tags                   = [\"tags1\", \"tags2\"]",
      "}"
    ]
  },
  "opc-resource-opc_compute_ip_address_prefix_set": {
    "description": "Defines opc_compute_ip_address_prefix_set",
    "prefix": "tf-opc-resource-opc_compute_ip_address_prefix_set",
    "body": [
      "resource \"opc_compute_ip_address_prefix_set\" \"default\" {",
      "  name     = \"PrefixSet1\"",
      "  prefixes = [\"192.168.0.0/16\", \"172.120.0.0/24\"]",
      "  tags     = [\"tags1\", \"tags2\"]",
      "}"
    ]
  },
  "opc-resource-opc_compute_ip_address_reservation": {
    "description": "Defines opc_compute_ip_address_reservation",
    "prefix": "tf-opc-resource-opc_compute_ip_address_reservation",
    "body": [
      "resource \"opc_compute_ip_address_reservation\" \"default\" {",
      "  name            = \"IPAddressReservation1\"",
      "  ip_address_pool = \"public-ippool\"",
      "}"
    ]
  },
  "opc-resource-opc_compute_ip_association": {
    "description": "Defines opc_compute_ip_association",
    "prefix": "tf-opc-resource-opc_compute_ip_association",
    "body": [
      "resource \"opc_compute_ip_association\" \"instance1_reservation1\" {",
      "  vcable     = \"${opc_compute_instance.test_instance.vcable}\"",
      "  parent_pool = \"ipreservation:${opc_compute_ip_reservation.reservation1.name}\"",
      "}"
    ]
  },
  "opc-resource-opc_compute_ip_network": {
    "description": "Defines opc_compute_ip_network",
    "prefix": "tf-opc-resource-opc_compute_ip_network",
    "body": [
      "resource \"opc_compute_ip_network\" \"foo\" {",
      "  name                = \"my-ip-network\"",
      "  description         = \"my IP Network\"",
      "  ip_address_prefix   = \"10.0.1.0/24\"",
      "  ip_network_exchange = \"${opc_compute_ip_exchange.foo.name}\"",
      "  public_napt_enabled = false",
      "  tags                = [\"tag1\", \"tag2\"]",
      "}"
    ]
  },
  "opc-resource-opc_compute_ip_network_exchange": {
    "description": "Defines opc_compute_ip_network_exchange",
    "prefix": "tf-opc-resource-opc_compute_ip_network_exchange",
    "body": [
      "resource \"opc_compute_ip_network_exchange\" \"default\" {",
      "  name = \"NetworkExchange1\"",
      "}"
    ]
  },
  "opc-resource-opc_compute_ip_reservation": {
    "description": "Defines opc_compute_ip_reservation",
    "prefix": "tf-opc-resource-opc_compute_ip_reservation",
    "body": [
      "resource \"opc_compute_ip_reservation\" \"reservation1\" {",
      "  parent_pool = \"/oracle/public/ippool\"",
      "  permanent   = true",
      "  tags        = [ \"test\" ]",
      "}"
    ]
  },
  "opc-resource-opc_compute_machine_image": {
    "description": "Defines opc_compute_machine_image",
    "prefix": "tf-opc-resource-opc_compute_machine_image",
    "body": [
      "resource \"opc_compute_machine_image\" \"centos\" {",
      "  account     = \"/Compute-${var.domain}/cloud_storage\"",
      "  name        = \"CentOS_7\"",
      "  file        = \"CentOS-7-x86_64-OracleCloud.raw.tar.gz\"",
      "  description = \"CentOS 7\"",
      "}"
    ]
  },
  "opc-resource-opc_compute_orchestrated_instance": {
    "description": "Defines opc_compute_orchestrated_instance",
    "prefix": "tf-opc-resource-opc_compute_orchestrated_instance",
    "body": [
      "resource \"opc_compute_orchestrated_instance\" \"default\" {",
      "  name          = \"default_orchestration\"",
      "  desired_state = \"active\"",
      "",
      "  instance {",
      "    name       = \"default-orchestrated-instance\"",
      "    label      = \"Orchestrated Instance 1 Label\"",
      "    shape      = \"oc3\"",
      "    image_list = \"/oracle/public/OL_7.2_UEKR4_x86_64\"",
      "  }",
      "}"
    ]
  },
  "opc-resource-opc_compute_route": {
    "description": "Defines opc_compute_route",
    "prefix": "tf-opc-resource-opc_compute_route",
    "body": [
      "resource \"opc_compute_route\" \"foo\" {",
      "  name              = \"my-route\"",
      "  description       = \"my IP Network route\"",
      "  admin_distance    = 1",
      "  ip_address_prefix = \"10.0.1.0/24\"",
      "  next_hop_vnic_set = \"${opc_compute_vnic_set.bar.name}\"",
      "  tags              = [\"tag1\", \"tag2\"]",
      "}"
    ]
  },
  "opc-resource-opc_compute_sec_rule": {
    "description": "Defines opc_compute_sec_rule",
    "prefix": "tf-opc-resource-opc_compute_sec_rule",
    "body": [
      "resource \"opc_compute_sec_rule\" \"test_rule\" {",
      "  name             = \"test\"",
      "  source_list      = \"seclist:${opc_compute_security_list.sec-list1.name}\"",
      "  destination_list = \"seciplist:${opc_compute_security_ip_list.sec-ip-list1.name}\"",
      "  action           = \"permit\"",
      "  application      = \"${opc_compute_security_application.spring-boot.name}\"",
      "}"
    ]
  },
  "opc-resource-opc_compute_security_application": {
    "description": "Defines opc_compute_security_application",
    "prefix": "tf-opc-resource-opc_compute_security_application",
    "body": [
      "resource \"opc_compute_security_application\" \"tomcat\" {",
      "  name     = \"tomcat\"",
      "  protocol = \"tcp\"",
      "  dport    = \"8080\"",
      "}"
    ]
  },
  "opc-resource-opc_compute_security_association": {
    "description": "Defines opc_compute_security_association",
    "prefix": "tf-opc-resource-opc_compute_security_association",
    "body": [
      "resource \"opc_compute_security_association\" \"test_instance_sec_list_1\" {",
      "  name    = \"association1\"",
      "  vcable  = \"${opc_compute_instance.test_instance.vcable}\"",
      "  seclist = \"${opc_compute_security_list.sec_list1.name}\"",
      "}"
    ]
  },
  "opc-resource-opc_compute_security_ip_list": {
    "description": "Defines opc_compute_security_ip_list",
    "prefix": "tf-opc-resource-opc_compute_security_ip_list",
    "body": [
      "resource \"opc_compute_security_ip_list\" \"sec_ip_list1\" {",
      "  name       = \"sec-ip-list1\"",
      "  ip_entries = [\"217.138.34.4\"]",
      "}"
    ]
  },
  "opc-resource-opc_compute_security_list": {
    "description": "Defines opc_compute_security_list",
    "prefix": "tf-opc-resource-opc_compute_security_list",
    "body": [
      "resource \"opc_compute_security_list\" \"sec_list1\" {",
      "  name                 = \"sec-list-1\"",
      "  policy               = \"permit\"",
      "  outbound_cidr_policy = \"deny\"",
      "}"
    ]
  },
  "opc-resource-opc_compute_security_protocol": {
    "description": "Defines opc_compute_security_protocol",
    "prefix": "tf-opc-resource-opc_compute_security_protocol",
    "body": [
      "resource \"opc_compute_security_protocol\" \"default\" {",
      "  name        = \"security-protocol-1\"",
      "  dst_ports   = [\"2045-2050\"]",
      "  src_ports   = [\"3045-3060\"]",
      "  ip_protocol = \"tcp\"",
      "}"
    ]
  },
  "opc-resource-opc_compute_security_rule": {
    "description": "Defines opc_compute_security_rule",
    "prefix": "tf-opc-resource-opc_compute_security_rule",
    "body": [
      "resource \"opc_compute_security_rule\" \"default\" {",
      "  name               = \"SecurityRule1\"",
      "  flow_direction     = \"ingress\"",
      "  acl                = \"${opc_compute_acl.default.name}\"",
      "  security_protocols = [\"${opc_compute_security_protocol.default.name}\"]",
      "}"
    ]
  },
  "opc-resource-opc_compute_ssh_key": {
    "description": "Defines opc_compute_ssh_key",
    "prefix": "tf-opc-resource-opc_compute_ssh_key",
    "body": [
      "resource \"opc_compute_ssh_key\" \"test\" {",
      "  name    = \"test-key\"",
      "  key     = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqw6JwbjIk...\"",
      "  enabled = true",
      "}"
    ]
  },
  "opc-resource-opc_compute_storage_volume": {
    "description": "Defines opc_compute_storage_volume",
    "prefix": "tf-opc-resource-opc_compute_storage_volume",
    "body": [
      "resource \"opc_compute_storage_volume\" \"test\" {",
      "  name        = \"storageVolume1\"",
      "  description = \"Description for the Storage Volume\"",
      "  size        = 10",
      "  tags        = [\"bar\", \"foo\"]",
      "}"
    ]
  },
  "opc-resource-opc_compute_storage_volume_attachment": {
    "description": "Defines opc_compute_storage_volume_attachment",
    "prefix": "tf-opc-resource-opc_compute_storage_volume_attachment",
    "body": [
      "resource \"opc_compute_storage_volume\" \"default\" {",
      "  name = \"storage-volume-1\"",
      "  size = 1",
      "}",
      "",
      "resource \"opc_compute_instance\" \"default\" {",
      "  name = \"instance-1\"",
      "  label = \"instance-1\"",
      "  shape = \"oc3\"",
      "  image_list = \"/oracle/public/OL_7.2_UEKR4_x86_64\"",
      "}",
      "",
      "resource \"opc_compute_storage_attachment\" \"test\" {",
      "  instance = \"${opc_compute_instance.default.name}\"",
      "  storage_volume = \"${opc_compute_storage_volume.default.name}\"",
      "  index = 1",
      "}"
    ]
  },
  "opc-resource-opc_compute_storage_volume_snapshot": {
    "description": "Defines opc_compute_storage_volume_snapshot",
    "prefix": "tf-opc-resource-opc_compute_storage_volume_snapshot",
    "body": [
      "resource \"opc_compute_storage_volume_snapshot\" \"test\" {",
      "  name        = \"storageVolume1\"",
      "  description = \"Description for the Storage Volume\"",
      "  tags        = [\"bar\", \"foo\"]",
      "  collocated  = true",
      "  volume_name = \"${opc_compute_storage_volume.foo.name}\"",
      "}"
    ]
  },
  "opc-resource-opc_compute_vnic_set": {
    "description": "Defines opc_compute_vnic_set",
    "prefix": "tf-opc-resource-opc_compute_vnic_set",
    "body": [
      "resource \"opc_compute_vnic_set\" \"test_set\" {",
      "  name         = \"test_vnic_set\"",
      "  description  = \"My vnic set\"",
      "  applied_acls = [\"acl1\", \"acl2\"]",
      "  virtual_nics = [\"nic1\", \"nic2\", \"nic3\"]",
      "  tags         = [\"xyzzy\", \"quux\"]",
      "}"
    ]
  },
  "opc-resource-opc_compute_vpn_endpoint_v2": {
    "description": "Defines opc_compute_vpn_endpoint_v2",
    "prefix": "tf-opc-resource-opc_compute_vpn_endpoint_v2",
    "body": [
      "resource \"opc_compute_vnic_set\" \"vnicset1\" {",
      "  name = \"vpnaas-vnicset1\"",
      "}",
      "",
      "resource \"opc_compute_ip_network\" \"ipnetwork1\" {",
      "\tname              = \"ipnetwork1\"",
      "\tip_address_prefix = \"10.0.12.0/24\"",
      "}",
      "",
      "resource \"opc_compute_vpn_endpoint_v2\" \"vpnaas1\" {",
      "  name                 = \"vpnaas1\"",
      "  customer_vpn_gateway = \"${var.vpn_endpoint_public_ip}\"",
      "  ip_network           = \"${opc_compute_ip_network.ipnetwork1.name}\"",
      "  pre_shared_key       = \"${var.pre_shared_key}\"",
      "  reachable_routes     = [\"172.16.4.0/24\"]",
      "  vnic_sets            = [\"${opc_compute_vnic_set.vnicset1.name}\"]",
      "}"
    ]
  },
  "opc-resource-opc_lbaas_certificate": {
    "description": "Defines opc_lbaas_certificate",
    "prefix": "tf-opc-resource-opc_lbaas_certificate",
    "body": [
      "resource \"opc_lbaas_certificate\" \"example\" {",
      "  name             = \"example-cert1\"",
      "  type             = \"SERVER\"",
      "  private_key      = \"${var.private_key_pem}\"",
      "  certificate_body = \"${var.cert_pem}\"",
      "}"
    ]
  },
  "opc-resource-opc_lbaas_listener": {
    "description": "Defines opc_lbaas_listener",
    "prefix": "tf-opc-resource-opc_lbaas_listener",
    "body": [
      "resource \"opc_lbaas_listener\" \"listener1\" {",
      "  load_balancer     = \"${opc_lbaas_load_balancer.lb1.id}\"",
      "  name              = \"listener1\"",
      "",
      "  port              = 80",
      "  balancer_protocol = \"HTTP\"",
      "  server_protocol   = \"HTTP\"",
      "  server_pool       = \"${opc_lbaas_server_pool.serverpool1.uri}\"",
      "  virtual_hosts     = [\"mywebapp.example.com\"]",
      "  policies          = [\"${opc_lbaas_policy.load_balancing_mechanism_policy.uri}\"]",
      "}"
    ]
  },
  "opc-resource-opc_lbaas_load_balancer": {
    "description": "Defines opc_lbaas_load_balancer",
    "prefix": "tf-opc-resource-opc_lbaas_load_balancer",
    "body": [
      "resource \"opc_lbaas_load_balancer\" \"lb1\" {",
      "  name        = \"example-lb1\"",
      "  region      = \"uscom-central-1\"",
      "  description = \"My Example Load Balancer\"",
      "  scheme      = \"INTERNET_FACING\"",
      "",
      "  permitted_methods = [\"GET\", \"HEAD\", \"POST\", \"PUT\"]  ",
      "}"
    ]
  },
  "opc-resource-opc_lbaas_policy": {
    "description": "Defines opc_lbaas_policy",
    "prefix": "tf-opc-resource-opc_lbaas_policy",
    "body": [
      "resource \"opc_lbaas_policy\" \"load_balancing_mechanism_policy\" {",
      "  load_balancer = \"${opc_lbaas_load_balancer.lb1.id}\"",
      "  name          = \"example_load_balancing_mechanism_policy\"",
      "",
      "  load_balancing_mechanism_policy {",
      "    load_balancing_mechanism = \"round_robin\"",
      "  }",
      "}"
    ]
  },
  "opc-resource-opc_lbaas_server_pool": {
    "description": "Defines opc_lbaas_server_pool",
    "prefix": "tf-opc-resource-opc_lbaas_server_pool",
    "body": [
      "resource \"opc_lbaas_server_pool\" \"serverpool1\" {",
      "  load_balancer = \"${opc_lbaas_load_balancer.lb1.id}\"",
      "  name          = \"serverpool1\"",
      "",
      "  servers = [\"129.150.169.179:8080\", \"129.150.170.162:8080\"]",
      "",
      "  health_check {",
      "    type = \"http\"",
      "    path = \"/healthcheck\"",
      "  }",
      "}"
    ]
  },
  "opc-resource-opc_storage_container": {
    "description": "Defines opc_storage_container",
    "prefix": "tf-opc-resource-opc_storage_container",
    "body": [
      "resource \"opc_storage_container\" \"default\" {",
      "  name = \"storage-container-1\"",
      "  read_acls = [ \".r:example.com\", \".rlistings\" ]",
      "}"
    ]
  },
  "opc-resource-opc_storage_object": {
    "description": "Defines opc_storage_object",
    "prefix": "tf-opc-resource-opc_storage_object",
    "body": [
      "resource \"opc_storage_object\" \"default\" {",
      "  name         = \"storage-object-1\"",
      "  container    = \"${opc_storage_container.container.name}\"",
      "  file         = \"${\"./source_file.txt\"}\"",
      "  etag         = \"${md5(file(\"./source_file.txt\"))}\"",
      "  content_type = \"text/plain;charset=utf-8\"",
      "}"
    ]
  },
  "openstack-data-blockstorage_availability_zones_v3": {
    "description": "Defines blockstorage_availability_zones_v3",
    "prefix": "tf-openstack-data-blockstorage_availability_zones_v3",
    "body": [
      "data \"openstack_blockstorage_availability_zones_v3\" \"zones\" {}"
    ]
  },
  "openstack-data-blockstorage_snapshot_v2": {
    "description": "Defines blockstorage_snapshot_v2",
    "prefix": "tf-openstack-data-blockstorage_snapshot_v2",
    "body": [
      "data \"openstack_blockstorage_snapshot_v2\" \"snapshot_1\" {",
      "  name        = \"snapshot_1\"",
      "  most_recent = true",
      "}"
    ]
  },
  "openstack-data-blockstorage_snapshot_v3": {
    "description": "Defines blockstorage_snapshot_v3",
    "prefix": "tf-openstack-data-blockstorage_snapshot_v3",
    "body": [
      "data \"openstack_blockstorage_snapshot_v3\" \"snapshot_1\" {",
      "  name        = \"snapshot_1\"",
      "  most_recent = true",
      "}"
    ]
  },
  "openstack-data-compute_availability_zones_v2": {
    "description": "Defines compute_availability_zones_v2",
    "prefix": "tf-openstack-data-compute_availability_zones_v2",
    "body": [
      "data \"openstack_compute_availability_zones_v2\" \"zones\" {}"
    ]
  },
  "openstack-data-compute_flavor_v2": {
    "description": "Defines compute_flavor_v2",
    "prefix": "tf-openstack-data-compute_flavor_v2",
    "body": [
      "data \"openstack_compute_flavor_v2\" \"small\" {",
      "  vcpus = 1",
      "  ram   = 512",
      "}"
    ]
  },
  "openstack-data-compute_keypair_v2": {
    "description": "Defines compute_keypair_v2",
    "prefix": "tf-openstack-data-compute_keypair_v2",
    "body": [
      "data \"openstack_compute_keypair_v2\" \"kp\" {",
      "  name = \"sand\"",
      "}"
    ]
  },
  "openstack-data-containerinfra_cluster_v1": {
    "description": "Defines containerinfra_cluster_v1",
    "prefix": "tf-openstack-data-containerinfra_cluster_v1",
    "body": [
      "data \"openstack_containerinfra_cluster_v1\" \"cluster_1\" {",
      "  name = \"cluster_1\"",
      "}"
    ]
  },
  "openstack-data-containerinfra_clustertemplate_v1": {
    "description": "Defines containerinfra_clustertemplate_v1",
    "prefix": "tf-openstack-data-containerinfra_clustertemplate_v1",
    "body": [
      "data \"openstack_containerinfra_clustertemplate_v1\" \"clustertemplate_1\" {",
      "  name = \"clustertemplate_1\"",
      "}"
    ]
  },
  "openstack-data-dns_zone_v2": {
    "description": "Defines dns_zone_v2",
    "prefix": "tf-openstack-data-dns_zone_v2",
    "body": [
      "data \"openstack_dns_zone_v2\" \"zone_1\" {",
      "  name = \"example.com\"",
      "}"
    ]
  },
  "openstack-data-fw_policy_v1": {
    "description": "Defines fw_policy_v1",
    "prefix": "tf-openstack-data-fw_policy_v1",
    "body": [
      "data \"openstack_fw_policy_v1\" \"policy\" {",
      "  name = \"tf_test_policy\"",
      "}"
    ]
  },
  "openstack-data-identity_auth_scope_v3": {
    "description": "Defines identity_auth_scope_v3",
    "prefix": "tf-openstack-data-identity_auth_scope_v3",
    "body": [
      "data \"openstack_identity_auth_scope_v3\" \"scope\" {",
      "  name = \"my_scope\"",
      "}"
    ]
  },
  "openstack-data-identity_endpoint_v3": {
    "description": "Defines identity_endpoint_v3",
    "prefix": "tf-openstack-data-identity_endpoint_v3",
    "body": [
      "data \"openstack_identity_endpoint_v3\" \"endpoint_1\" {",
      "  service_name = \"demo\"",
      "}"
    ]
  },
  "openstack-data-identity_group_v3": {
    "description": "Defines identity_group_v3",
    "prefix": "tf-openstack-data-identity_group_v3",
    "body": [
      "data \"openstack_identity_group_v3\" \"admins\" {",
      "  name = \"admins\"",
      "}"
    ]
  },
  "openstack-data-identity_project_v3": {
    "description": "Defines identity_project_v3",
    "prefix": "tf-openstack-data-identity_project_v3",
    "body": [
      "data \"openstack_identity_project_v3\" \"project_1\" {",
      "  name = \"demo\"",
      "}"
    ]
  },
  "openstack-data-identity_role_v3": {
    "description": "Defines identity_role_v3",
    "prefix": "tf-openstack-data-identity_role_v3",
    "body": [
      "data \"openstack_identity_role_v3\" \"admin\" {",
      "  name = \"admin\"",
      "}"
    ]
  },
  "openstack-data-identity_user_v3": {
    "description": "Defines identity_user_v3",
    "prefix": "tf-openstack-data-identity_user_v3",
    "body": [
      "data \"openstack_identity_user_v3\" \"user_1\" {",
      "  name = \"user_1\"",
      "}"
    ]
  },
  "openstack-data-images_image_v2": {
    "description": "Defines images_image_v2",
    "prefix": "tf-openstack-data-images_image_v2",
    "body": [
      "data \"openstack_images_image_v2\" \"ubuntu\" {",
      "  name        = \"Ubuntu 16.04\"",
      "  most_recent = true",
      "",
      "  properties = {",
      "    key = \"value\"",
      "  }",
      "}"
    ]
  },
  "openstack-data-networking_addressscope_v2": {
    "description": "Defines networking_addressscope_v2",
    "prefix": "tf-openstack-data-networking_addressscope_v2",
    "body": [
      "data \"openstack_networking_addressscope_v2\" \"public_addressscope\" {",
      "  name       = \"public_addressscope\"",
      "  shared     = true",
      "  ip_version = 4",
      "}"
    ]
  },
  "openstack-data-networking_floatingip_v2": {
    "description": "Defines networking_floatingip_v2",
    "prefix": "tf-openstack-data-networking_floatingip_v2",
    "body": [
      "data \"openstack_networking_floatingip_v2\" \"floatingip_1\" {",
      "  address = \"192.168.0.4\"",
      "}"
    ]
  },
  "openstack-data-networking_network_v2": {
    "description": "Defines networking_network_v2",
    "prefix": "tf-openstack-data-networking_network_v2",
    "body": [
      "data \"openstack_networking_network_v2\" \"network\" {",
      "  name = \"tf_test_network\"",
      "}"
    ]
  },
  "openstack-data-networking_port_ids_v2": {
    "description": "Defines networking_port_ids_v2",
    "prefix": "tf-openstack-data-networking_port_ids_v2",
    "body": [
      "data \"openstack_networking_port_ids_v2\" \"ports\" {",
      "  name = \"port\"",
      "}"
    ]
  },
  "openstack-data-networking_port_v2": {
    "description": "Defines networking_port_v2",
    "prefix": "tf-openstack-data-networking_port_v2",
    "body": [
      "data \"openstack_networking_port_v2\" \"port_1\" {",
      "  name = \"port_1\"",
      "}"
    ]
  },
  "openstack-data-networking_qos_bandwidth_limit_rule_v2": {
    "description": "Defines networking_qos_bandwidth_limit_rule_v2",
    "prefix": "tf-openstack-data-networking_qos_bandwidth_limit_rule_v2",
    "body": [
      "data \"openstack_networking_qos_bandwidth_limit_rule_v2\" \"qos_bandwidth_limit_rule_1\" {",
      "  max_kbps = 300",
      "}"
    ]
  },
  "openstack-data-networking_qos_dscp_marking_rule_v2": {
    "description": "Defines networking_qos_dscp_marking_rule_v2",
    "prefix": "tf-openstack-data-networking_qos_dscp_marking_rule_v2",
    "body": [
      "data \"openstack_networking_qos_dscp_marking_rule_v2\" \"qos_dscp_marking_rule_1\" {",
      "  dscp_mark = 26",
      "}"
    ]
  },
  "openstack-data-networking_qos_minimum_bandwidth_rule_v2": {
    "description": "Defines networking_qos_minimum_bandwidth_rule_v2",
    "prefix": "tf-openstack-data-networking_qos_minimum_bandwidth_rule_v2",
    "body": [
      "data \"openstack_networking_qos_minimum_bandwidth_rule_v2\" \"qos_min_bw_rule_1\" {",
      "  min_kbps = 2000",
      "}"
    ]
  },
  "openstack-data-networking_qos_policy_v2": {
    "description": "Defines networking_qos_policy_v2",
    "prefix": "tf-openstack-data-networking_qos_policy_v2",
    "body": [
      "data \"openstack_networking_qos_policy_v2\" \"qos_policy_1\" {",
      "  name = \"qos_policy_1\"",
      "}"
    ]
  },
  "openstack-data-networking_router_v2": {
    "description": "Defines networking_router_v2",
    "prefix": "tf-openstack-data-networking_router_v2",
    "body": [
      "data \"openstack_networking_router_v2\" \"router\" {",
      "  name = \"router_1\"",
      "}"
    ]
  },
  "openstack-data-networking_secgroup_v2": {
    "description": "Defines networking_secgroup_v2",
    "prefix": "tf-openstack-data-networking_secgroup_v2",
    "body": [
      "data \"openstack_networking_secgroup_v2\" \"secgroup\" {",
      "  name = \"tf_test_secgroup\"",
      "}"
    ]
  },
  "openstack-data-networking_subnet_v2": {
    "description": "Defines networking_subnet_v2",
    "prefix": "tf-openstack-data-networking_subnet_v2",
    "body": [
      "data \"openstack_networking_subnet_v2\" \"subnet_1\" {",
      "  name = \"subnet_1\"",
      "}"
    ]
  },
  "openstack-data-networking_subnetpool_v2": {
    "description": "Defines networking_subnetpool_v2",
    "prefix": "tf-openstack-data-networking_subnetpool_v2",
    "body": [
      "data \"openstack_networking_subnetpool_v2\" \"subnetpool_1\" {",
      "  name = \"subnetpool_1\"",
      "}"
    ]
  },
  "openstack-data-networking_trunk_v2": {
    "description": "Defines networking_trunk_v2",
    "prefix": "tf-openstack-data-networking_trunk_v2",
    "body": [
      "data \"openstack_networking_trunk_v2\" \"trunk_1\" {",
      "  name = \"trunk_1\"",
      "}"
    ]
  },
  "openstack-data-sharedfilesystem_availability_zones_v2": {
    "description": "Defines sharedfilesystem_availability_zones_v2",
    "prefix": "tf-openstack-data-sharedfilesystem_availability_zones_v2",
    "body": [
      "data \"openstack_sharedfilesystem_availability_zones_v2\" \"zones\" {}"
    ]
  },
  "openstack-data-sharedfilesystem_share_v2": {
    "description": "Defines sharedfilesystem_share_v2",
    "prefix": "tf-openstack-data-sharedfilesystem_share_v2",
    "body": [
      "data \"openstack_sharedfilesystem_share_v2\" \"share_1\" {",
      "  name = \"share_1\"",
      "}"
    ]
  },
  "openstack-data-sharedfilesystem_sharenetwork_v2": {
    "description": "Defines sharedfilesystem_sharenetwork_v2",
    "prefix": "tf-openstack-data-sharedfilesystem_sharenetwork_v2",
    "body": [
      "data \"openstack_sharedfilesystem_sharenetwork_v2\" \"sharenetwork_1\" {",
      "  name = \"sharenetwork_1\"",
      "}"
    ]
  },
  "openstack-data-sharedfilesystem_snapshot_v2": {
    "description": "Defines sharedfilesystem_snapshot_v2",
    "prefix": "tf-openstack-data-sharedfilesystem_snapshot_v2",
    "body": [
      "data \"openstack_sharedfilesystem_snapshot_v2\" \"snapshot_1\" {",
      "  name = \"snapshot_1\"",
      "}"
    ]
  },
  "openstack-resource-blockstorage_volume_attach_v2": {
    "description": "Defines blockstorage_volume_attach_v2",
    "prefix": "tf-openstack-resource-blockstorage_volume_attach_v2",
    "body": [
      "resource \"openstack_blockstorage_volume_v2\" \"volume_1\" {",
      "  name = \"volume_1\"",
      "  size = 1",
      "}",
      "",
      "resource \"openstack_blockstorage_volume_attach_v2\" \"va_1\" {",
      "  volume_id  = \"${openstack_blockstorage_volume_v2.volume_1.id}\"",
      "  device     = \"auto\"",
      "  host_name  = \"devstack\"",
      "  ip_address = \"192.168.255.10\"",
      "  initiator  = \"iqn.1993-08.org.debian:01:e9861fb1859\"",
      "  os_type    = \"linux2\"",
      "  platform   = \"x86_64\"",
      "}"
    ]
  },
  "openstack-resource-blockstorage_volume_attach_v3": {
    "description": "Defines blockstorage_volume_attach_v3",
    "prefix": "tf-openstack-resource-blockstorage_volume_attach_v3",
    "body": [
      "resource \"openstack_blockstorage_volume_v3\" \"volume_1\" {",
      "  name = \"volume_1\"",
      "  size = 1",
      "}",
      "",
      "resource \"openstack_blockstorage_volume_attach_v3\" \"va_1\" {",
      "  volume_id  = \"${openstack_blockstorage_volume_v3.volume_1.id}\"",
      "  device     = \"auto\"",
      "  host_name  = \"devstack\"",
      "  ip_address = \"192.168.255.10\"",
      "  initiator  = \"iqn.1993-08.org.debian:01:e9861fb1859\"",
      "  os_type    = \"linux2\"",
      "  platform   = \"x86_64\"",
      "}"
    ]
  },
  "openstack-resource-blockstorage_volume_v1": {
    "description": "Defines blockstorage_volume_v1",
    "prefix": "tf-openstack-resource-blockstorage_volume_v1",
    "body": [
      "resource \"openstack_blockstorage_volume_v1\" \"volume_1\" {",
      "  region      = \"RegionOne\"",
      "  name        = \"tf-test-volume\"",
      "  description = \"first test volume\"",
      "  size        = 3",
      "}"
    ]
  },
  "openstack-resource-blockstorage_volume_v2": {
    "description": "Defines blockstorage_volume_v2",
    "prefix": "tf-openstack-resource-blockstorage_volume_v2",
    "body": [
      "resource \"openstack_blockstorage_volume_v2\" \"volume_1\" {",
      "  region      = \"RegionOne\"",
      "  name        = \"volume_1\"",
      "  description = \"first test volume\"",
      "  size        = 3",
      "}"
    ]
  },
  "openstack-resource-blockstorage_volume_v3": {
    "description": "Defines blockstorage_volume_v3",
    "prefix": "tf-openstack-resource-blockstorage_volume_v3",
    "body": [
      "resource \"openstack_blockstorage_volume_v3\" \"volume_1\" {",
      "  region      = \"RegionOne\"",
      "  name        = \"volume_1\"",
      "  description = \"first test volume\"",
      "  size        = 3",
      "}"
    ]
  },
  "openstack-resource-compute_flavor_access_v2": {
    "description": "Defines compute_flavor_access_v2",
    "prefix": "tf-openstack-resource-compute_flavor_access_v2",
    "body": [
      "resource \"openstack_identity_project_v3\" \"project_1\" {",
      "  name = \"my-project\"",
      "}",
      "",
      "resource \"openstack_compute_flavor_v2\" \"flavor_1\" {",
      "  name      = \"my-flavor\"",
      "  ram       = \"8096\"",
      "  vcpus     = \"2\"",
      "  disk      = \"20\"",
      "  is_public = false",
      "}",
      "",
      "resource \"openstack_compute_flavor_access_v2\" \"access_1\" {",
      "  tenant_id = \"${openstack_identity_project_v3.project_1.id}\"",
      "  flavor_id = \"${openstack_compute_flavor_v2.flavor_1.id}\"",
      "}"
    ]
  },
  "openstack-resource-compute_flavor_v2": {
    "description": "Defines compute_flavor_v2",
    "prefix": "tf-openstack-resource-compute_flavor_v2",
    "body": [
      "resource \"openstack_compute_flavor_v2\" \"test-flavor\" {",
      "  name  = \"my-flavor\"",
      "  ram   = \"8096\"",
      "  vcpus = \"2\"",
      "  disk  = \"20\"",
      "",
      "  extra_specs = {",
      "    \"hw:cpu_policy\"        = \"CPU-POLICY\",",
      "    \"hw:cpu_thread_policy\" = \"CPU-THREAD-POLICY\"",
      "  }",
      "}"
    ]
  },
  "openstack-resource-compute_floatingip_associate_v2": {
    "description": "Defines compute_floatingip_associate_v2",
    "prefix": "tf-openstack-resource-compute_floatingip_associate_v2",
    "body": [
      "resource \"openstack_compute_instance_v2\" \"instance_1\" {",
      "  name            = \"instance_1\"",
      "  image_id        = \"ad091b52-742f-469e-8f3c-fd81cadf0743\"",
      "  flavor_id       = 3",
      "  key_pair        = \"my_key_pair_name\"",
      "  security_groups = [\"default\"]",
      "}",
      "",
      "resource \"openstack_networking_floatingip_v2\" \"fip_1\" {",
      "  pool = \"my_pool\"",
      "}",
      "",
      "resource \"openstack_compute_floatingip_associate_v2\" \"fip_1\" {",
      "  floating_ip = \"${openstack_networking_floatingip_v2.fip_1.address}\"",
      "  instance_id = \"${openstack_compute_instance_v2.instance_1.id}\"",
      "}"
    ]
  },
  "openstack-resource-compute_floatingip_v2": {
    "description": "Defines compute_floatingip_v2",
    "prefix": "tf-openstack-resource-compute_floatingip_v2",
    "body": [
      "resource \"openstack_compute_floatingip_v2\" \"floatip_1\" {",
      "  pool = \"public\"",
      "}"
    ]
  },
  "openstack-resource-compute_instance_v2": {
    "description": "Defines compute_instance_v2",
    "prefix": "tf-openstack-resource-compute_instance_v2",
    "body": [
      "resource \"openstack_compute_instance_v2\" \"basic\" {",
      "  name            = \"basic\"",
      "  image_id        = \"ad091b52-742f-469e-8f3c-fd81cadf0743\"",
      "  flavor_id       = \"3\"",
      "  key_pair        = \"my_key_pair_name\"",
      "  security_groups = [\"default\"]",
      "",
      "  metadata = {",
      "    this = \"that\"",
      "  }",
      "",
      "  network {",
      "    name = \"my_network\"",
      "  }",
      "}"
    ]
  },
  "openstack-resource-compute_interface_attach_v2": {
    "description": "Defines compute_interface_attach_v2",
    "prefix": "tf-openstack-resource-compute_interface_attach_v2",
    "body": [
      "resource \"openstack_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"openstack_compute_instance_v2\" \"instance_1\" {",
      "  name            = \"instance_1\"",
      "  security_groups = [\"default\"]",
      "}",
      "",
      "resource \"openstack_compute_interface_attach_v2\" \"ai_1\" {",
      "  instance_id = \"${openstack_compute_instance_v2.instance_1.id}\"",
      "  network_id  = \"${openstack_networking_port_v2.network_1.id}\"",
      "}",
      ""
    ]
  },
  "openstack-resource-compute_keypair_v2": {
    "description": "Defines compute_keypair_v2",
    "prefix": "tf-openstack-resource-compute_keypair_v2",
    "body": [
      "resource \"openstack_compute_keypair_v2\" \"test-keypair\" {",
      "  name       = \"my-keypair\"",
      "  public_key = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDAjpC1hwiOCCmKEWxJ4qzTTsJbKzndLotBCz5PcwtUnflmU+gHJtWMZKpuEGVi29h0A/+ydKek1O18k10Ff+4tyFjiHDQAnOfgWf7+b1yK+qDip3X1C0UPMbwHlTfSGWLGZqd9LvEFx9k3h/M+VtMvwR1lJ9LUyTAImnNjWG7TaIPmui30HvM2UiFEmqkr4ijq45MyX2+fLIePLRIF61p4whjHAQYufqyno3BS48icQb4p6iVEZPo4AE2o9oIyQvj2mx4dk5Y8CgSETOZTYDOR3rU2fZTRDRgPJDH9FWvQjF5tA0p3d9CoWWd2s6GKKbfoUIi8R/Db1BSPJwkqB\"",
      "}"
    ]
  },
  "openstack-resource-compute_secgroup_v2": {
    "description": "Defines compute_secgroup_v2",
    "prefix": "tf-openstack-resource-compute_secgroup_v2",
    "body": [
      "resource \"openstack_compute_secgroup_v2\" \"secgroup_1\" {",
      "  name        = \"my_secgroup\"",
      "  description = \"my security group\"",
      "",
      "  rule {",
      "    from_port   = 22",
      "    to_port     = 22",
      "    ip_protocol = \"tcp\"",
      "    cidr        = \"0.0.0.0/0\"",
      "  }",
      "",
      "  rule {",
      "    from_port   = 80",
      "    to_port     = 80",
      "    ip_protocol = \"tcp\"",
      "    cidr        = \"0.0.0.0/0\"",
      "  }",
      "}"
    ]
  },
  "openstack-resource-compute_servergroup_v2": {
    "description": "Defines compute_servergroup_v2",
    "prefix": "tf-openstack-resource-compute_servergroup_v2",
    "body": [
      "resource \"openstack_compute_servergroup_v2\" \"test-sg\" {",
      "  name     = \"my-sg\"",
      "  policies = [\"anti-affinity\"]",
      "}"
    ]
  },
  "openstack-resource-compute_volume_attach_v2": {
    "description": "Defines compute_volume_attach_v2",
    "prefix": "tf-openstack-resource-compute_volume_attach_v2",
    "body": [
      "resource \"openstack_blockstorage_volume_v2\" \"volume_1\" {",
      "  name = \"volume_1\"",
      "  size = 1",
      "}",
      "",
      "resource \"openstack_compute_instance_v2\" \"instance_1\" {",
      "  name            = \"instance_1\"",
      "  security_groups = [\"default\"]",
      "}",
      "",
      "resource \"openstack_compute_volume_attach_v2\" \"va_1\" {",
      "  instance_id = \"${openstack_compute_instance_v2.instance_1.id}\"",
      "  volume_id   = \"${openstack_blockstorage_volume_v2.volume_1.id}\"",
      "}"
    ]
  },
  "openstack-resource-containerinfra_cluster_v1": {
    "description": "Defines containerinfra_cluster_v1",
    "prefix": "tf-openstack-resource-containerinfra_cluster_v1",
    "body": [
      "resource \"openstack_containerinfra_cluster_v1\" \"cluster_1\" {",
      "  name                = \"cluster_1\"",
      "  cluster_template_id = \"b9a45c5c-cd03-4958-82aa-b80bf93cb922\"",
      "  master_count        = 3",
      "  node_count          = 5",
      "  keypair             = \"ssh_keypair\"",
      "}"
    ]
  },
  "openstack-resource-containerinfra_clustertemplate_v1": {
    "description": "Defines containerinfra_clustertemplate_v1",
    "prefix": "tf-openstack-resource-containerinfra_clustertemplate_v1",
    "body": [
      "resource \"openstack_containerinfra_clustertemplate_v1\" \"clustertemplate_1\" {",
      "  name                  = \"clustertemplate_1\"",
      "  image                 = \"Fedora-Atomic-27\"",
      "  coe                   = \"kubernetes\"",
      "  flavor                = \"m1.small\"",
      "  master_flavor         = \"m1.medium\"",
      "  dns_nameserver        = \"1.1.1.1\"",
      "  docker_storage_driver = \"devicemapper\"",
      "  docker_volume_size    = 10",
      "  volume_driver         = \"cinder\"",
      "  network_driver        = \"flannel\"",
      "  server_type           = \"vm\"",
      "  master_lb_enabled     = true",
      "  floating_ip_enabled   = false",
      "",
      "  labels = {",
      "    kube_tag                         = \"1.11.1\"",
      "    kube_dashboard_enabled           = \"true\"",
      "    prometheus_monitoring            = \"true\"",
      "    influx_grafana_dashboard_enabled = \"true\"",
      "  }",
      "}"
    ]
  },
  "openstack-resource-db_configuration_v1": {
    "description": "Defines db_configuration_v1",
    "prefix": "tf-openstack-resource-db_configuration_v1",
    "body": [
      "resource \"openstack_db_configuration_v1\" \"test\" {",
      "  name        = \"test\"",
      "  description = \"description\"",
      "",
      "  datastore {",
      "    version = \"mysql-5.7\"",
      "    type    = \"mysql\"",
      "  }",
      "",
      "  configuration {",
      "    name  = \"max_connections\"",
      "    value = 200",
      "  }",
      "}"
    ]
  },
  "openstack-resource-db_database_v1": {
    "description": "Defines db_database_v1",
    "prefix": "tf-openstack-resource-db_database_v1",
    "body": [
      "resource \"openstack_db_database_v1\" \"mydb\" {",
      "  name        = \"mydb\"",
      "  instance_id = \"${openstack_db_instance_v1.basic.id}\"",
      "}"
    ]
  },
  "openstack-resource-db_instance_v1": {
    "description": "Defines db_instance_v1",
    "prefix": "tf-openstack-resource-db_instance_v1",
    "body": [
      "resource \"openstack_db_instance_v1\" \"test\" {",
      "  region    = \"region-test\"",
      "  name      = \"test\"",
      "  flavor_id = \"31792d21-c355-4587-9290-56c1ed0ca376\"",
      "  size      = 8",
      "",
      "  network {",
      "    uuid = \"c0612505-caf2-4fb0-b7cb-56a0240a2b12\"",
      "  }",
      "",
      "  datastore {",
      "    version = \"mysql-5.7\"",
      "    type    = \"mysql\"",
      "  }",
      "}"
    ]
  },
  "openstack-resource-db_user_v1": {
    "description": "Defines db_user_v1",
    "prefix": "tf-openstack-resource-db_user_v1",
    "body": [
      "resource \"openstack_db_user_v1\" \"basic\" {",
      "  name      = \"basic\"",
      "  instance  = \"${openstack_db_instance_v1.basic.id}\"",
      "  password  = \"password\"",
      "  databases = [\"testdb\"]",
      "}"
    ]
  },
  "openstack-resource-dns_recordset_v2": {
    "description": "Defines dns_recordset_v2",
    "prefix": "tf-openstack-resource-dns_recordset_v2",
    "body": [
      "resource \"openstack_dns_zone_v2\" \"example_zone\" {",
      "  name        = \"example.com.\"",
      "  email       = \"email2@example.com\"",
      "  description = \"a zone\"",
      "  ttl         = 6000",
      "  type        = \"PRIMARY\"",
      "}",
      "",
      "resource \"openstack_dns_recordset_v2\" \"rs_example_com\" {",
      "  zone_id     = \"${openstack_dns_zone_v2.example_zone.id}\"",
      "  name        = \"rs.example.com.\"",
      "  description = \"An example record set\"",
      "  ttl         = 3000",
      "  type        = \"A\"",
      "  records     = [\"10.0.0.1\"]",
      "}"
    ]
  },
  "openstack-resource-dns_zone_v2": {
    "description": "Defines dns_zone_v2",
    "prefix": "tf-openstack-resource-dns_zone_v2",
    "body": [
      "resource \"openstack_dns_zone_v2\" \"example.com\" {",
      "  name        = \"example.com.\"",
      "  email       = \"jdoe@example.com\"",
      "  description = \"An example zone\"",
      "  ttl         = 3000",
      "  type        = \"PRIMARY\"",
      "}"
    ]
  },
  "openstack-resource-fw_firewall_v1": {
    "description": "Defines fw_firewall_v1",
    "prefix": "tf-openstack-resource-fw_firewall_v1",
    "body": [
      "resource \"openstack_fw_rule_v1\" \"rule_1\" {",
      "  name             = \"my-rule-1\"",
      "  description      = \"drop TELNET traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"tcp\"",
      "  destination_port = \"23\"",
      "  enabled          = \"true\"",
      "}",
      "",
      "resource \"openstack_fw_rule_v1\" \"rule_2\" {",
      "  name             = \"my-rule-2\"",
      "  description      = \"drop NTP traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"udp\"",
      "  destination_port = \"123\"",
      "  enabled          = \"false\"",
      "}",
      "",
      "resource \"openstack_fw_policy_v1\" \"policy_1\" {",
      "  name = \"my-policy\"",
      "",
      "  rules = [\"${openstack_fw_rule_v1.rule_1.id}\",",
      "    \"${openstack_fw_rule_v1.rule_2.id}\",",
      "  ]",
      "}",
      "",
      "resource \"openstack_fw_firewall_v1\" \"firewall_1\" {",
      "  name      = \"my-firewall\"",
      "  policy_id = \"${openstack_fw_policy_v1.policy_1.id}\"",
      "}"
    ]
  },
  "openstack-resource-fw_policy_v1": {
    "description": "Defines fw_policy_v1",
    "prefix": "tf-openstack-resource-fw_policy_v1",
    "body": [
      "resource \"openstack_fw_rule_v1\" \"rule_1\" {",
      "  name             = \"my-rule-1\"",
      "  description      = \"drop TELNET traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"tcp\"",
      "  destination_port = \"23\"",
      "  enabled          = \"true\"",
      "}",
      "",
      "resource \"openstack_fw_rule_v1\" \"rule_2\" {",
      "  name             = \"my-rule-2\"",
      "  description      = \"drop NTP traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"udp\"",
      "  destination_port = \"123\"",
      "  enabled          = \"false\"",
      "}",
      "",
      "resource \"openstack_fw_policy_v1\" \"policy_1\" {",
      "  name = \"my-policy\"",
      "",
      "  rules = [\"${openstack_fw_rule_v1.rule_1.id}\",",
      "    \"${openstack_fw_rule_v1.rule_2.id}\",",
      "  ]",
      "}"
    ]
  },
  "openstack-resource-fw_rule_v1": {
    "description": "Defines fw_rule_v1",
    "prefix": "tf-openstack-resource-fw_rule_v1",
    "body": [
      "resource \"openstack_fw_rule_v1\" \"rule_1\" {",
      "  name             = \"my_rule\"",
      "  description      = \"drop TELNET traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"tcp\"",
      "  destination_port = \"23\"",
      "  enabled          = \"true\"",
      "}"
    ]
  },
  "openstack-resource-identity_application_credential_v3": {
    "description": "Defines identity_application_credential_v3",
    "prefix": "tf-openstack-resource-identity_application_credential_v3",
    "body": [
      "resource \"openstack_identity_application_credential_v3\" \"swift\" {",
      "  name        = \"swift\"",
      "  description = \"Swift technical application credential\"",
      "  secret      = \"supersecret\"",
      "  roles       = [\"swiftoperator\"]",
      "  expires_at  = \"2019-02-13T12:12:12Z\"",
      "}"
    ]
  },
  "openstack-resource-identity_project_v3": {
    "description": "Defines identity_project_v3",
    "prefix": "tf-openstack-resource-identity_project_v3",
    "body": [
      "resource \"openstack_identity_project_v3\" \"project_1\" {",
      "  name        = \"project_1\"",
      "  description = \"A project\"",
      "}"
    ]
  },
  "openstack-resource-identity_role_assignment_v3": {
    "description": "Defines identity_role_assignment_v3",
    "prefix": "tf-openstack-resource-identity_role_assignment_v3",
    "body": [
      "resource \"openstack_identity_project_v3\" \"project_1\" {",
      "  name = \"project_1\"",
      "}",
      "",
      "resource \"openstack_identity_user_v3\" \"user_1\" {",
      "  name               = \"user_1\"",
      "  default_project_id = \"${openstack_identity_project_v3.project_1.id}\"",
      "}",
      "",
      "resource \"openstack_identity_role_v3\" \"role_1\" {",
      "  name = \"role_1\"",
      "}",
      "",
      "resource \"openstack_identity_role_assignment_v3\" \"role_assignment_1\" {",
      "  user_id    = \"${openstack_identity_user_v3.user_1.id}\"",
      "  project_id = \"${openstack_identity_project_v3.project_1.id}\"",
      "  role_id    = \"${openstack_identity_role_v3.role_1.id}\"",
      "}"
    ]
  },
  "openstack-resource-identity_role_v3": {
    "description": "Defines identity_role_v3",
    "prefix": "tf-openstack-resource-identity_role_v3",
    "body": [
      "resource \"openstack_identity_role_v3\" \"role_1\" {",
      "  name = \"role_1\"",
      "}"
    ]
  },
  "openstack-resource-identity_user_v3": {
    "description": "Defines identity_user_v3",
    "prefix": "tf-openstack-resource-identity_user_v3",
    "body": [
      "resource \"openstack_identity_project_v3\" \"project_1\" {",
      "  name = \"project_1\"",
      "}",
      "",
      "resource \"openstack_identity_user_v3\" \"user_1\" {",
      "  default_project_id = \"${openstack_identity_project_v3.project_1.id}\"",
      "  name               = \"user_1\"",
      "  description        = \"A user\"",
      "",
      "  password = \"password123\"",
      "",
      "  ignore_change_password_upon_first_use = true",
      "",
      "  multi_factor_auth_enabled = true",
      "",
      "  multi_factor_auth_rule {",
      "    rule = [\"password\", \"totp\"]",
      "  }",
      "",
      "  multi_factor_auth_rule {",
      "    rule = [\"password\"]",
      "  }",
      "",
      "  extra {",
      "    email = \"user_1@foobar.com\"",
      "  }",
      "}"
    ]
  },
  "openstack-resource-images_image_v2": {
    "description": "Defines images_image_v2",
    "prefix": "tf-openstack-resource-images_image_v2",
    "body": [
      "resource \"openstack_images_image_v2\" \"rancheros\" {",
      "  name             = \"RancherOS\"",
      "  image_source_url = \"https://releases.rancher.com/os/latest/rancheros-openstack.img\"",
      "  container_format = \"bare\"",
      "  disk_format      = \"qcow2\"",
      "",
      "  properties = {",
      "    key = \"value\"",
      "  }",
      "}"
    ]
  },
  "openstack-resource-lb_l7policy_v2": {
    "description": "Defines lb_l7policy_v2",
    "prefix": "tf-openstack-resource-lb_l7policy_v2",
    "body": [
      "resource \"openstack_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"openstack_networking_subnet_v2\" \"subnet_1\" {",
      "  name       = \"subnet_1\"",
      "  cidr       = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "  network_id = \"${openstack_networking_network_v2.network_1.id}\"",
      "}",
      "",
      "resource \"openstack_lb_loadbalancer_v2\" \"loadbalancer_1\" {",
      "  name          = \"loadbalancer_1\"",
      "  vip_subnet_id = \"${openstack_networking_subnet_v2.subnet_1.id}\"",
      "}",
      "",
      "resource \"openstack_lb_listener_v2\" \"listener_1\" {",
      "  name            = \"listener_1\"",
      "  protocol        = \"HTTP\"",
      "  protocol_port   = 8080",
      "  loadbalancer_id = \"${openstack_lb_loadbalancer_v2.loadbalancer_1.id}\"",
      "}",
      "",
      "resource \"openstack_lb_pool_v2\" \"pool_1\" {",
      "  name            = \"pool_1\"",
      "  protocol        = \"HTTP\"",
      "  lb_method       = \"ROUND_ROBIN\"",
      "  loadbalancer_id = \"${openstack_lb_loadbalancer_v2.loadbalancer_1.id}\"",
      "}",
      "",
      "resource \"openstack_lb_l7policy_v2\" \"l7policy_1\" {",
      "  name             = \"test\"",
      "  action           = \"REDIRECT_TO_POOL\"",
      "  description      = \"test l7 policy\"",
      "  position         = 1",
      "  listener_id      = \"${openstack_lb_listener_v2.listener_1.id}\"",
      "  redirect_pool_id = \"${openstack_lb_pool_v2.pool_1.id}\"",
      "}"
    ]
  },
  "openstack-resource-lb_l7rule_v2": {
    "description": "Defines lb_l7rule_v2",
    "prefix": "tf-openstack-resource-lb_l7rule_v2",
    "body": [
      "resource \"openstack_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"openstack_networking_subnet_v2\" \"subnet_1\" {",
      "  name       = \"subnet_1\"",
      "  cidr       = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "  network_id = \"${openstack_networking_network_v2.network_1.id}\"",
      "}",
      "",
      "resource \"openstack_lb_loadbalancer_v2\" \"loadbalancer_1\" {",
      "  name          = \"loadbalancer_1\"",
      "  vip_subnet_id = \"${openstack_networking_subnet_v2.subnet_1.id}\"",
      "}",
      "",
      "resource \"openstack_lb_listener_v2\" \"listener_1\" {",
      "  name            = \"listener_1\"",
      "  protocol        = \"HTTP\"",
      "  protocol_port   = 8080",
      "  loadbalancer_id = \"${openstack_lb_loadbalancer_v2.loadbalancer_1.id}\"",
      "}",
      "",
      "resource \"openstack_lb_pool_v2\" \"pool_1\" {",
      "  name            = \"pool_1\"",
      "  protocol        = \"HTTP\"",
      "  lb_method       = \"ROUND_ROBIN\"",
      "  loadbalancer_id = \"${openstack_lb_loadbalancer_v2.loadbalancer_1.id}\"",
      "}",
      "",
      "resource \"openstack_lb_l7policy_v2\" \"l7policy_1\" {",
      "  name         = \"test\"",
      "  action       = \"REDIRECT_TO_URL\"",
      "  description  = \"test description\"",
      "  position     = 1",
      "  listener_id  = \"${openstack_lb_listener_v2.listener_1.id}\"",
      "  redirect_url = \"http://www.example.com\"",
      "}",
      "",
      "resource \"openstack_lb_l7rule_v2\" \"l7rule_1\" {",
      "  l7policy_id  = \"${openstack_lb_l7policy_v2.l7policy_1.id}\"",
      "  type         = \"PATH\"",
      "  compare_type = \"EQUAL_TO\"",
      "  value        = \"/api\"",
      "}"
    ]
  },
  "openstack-resource-lb_listener_v2": {
    "description": "Defines lb_listener_v2",
    "prefix": "tf-openstack-resource-lb_listener_v2",
    "body": [
      "resource \"openstack_lb_listener_v2\" \"listener_1\" {",
      "  protocol        = \"HTTP\"",
      "  protocol_port   = 8080",
      "  loadbalancer_id = \"d9415786-5f1a-428b-b35f-2f1523e146d2\"",
      "}"
    ]
  },
  "openstack-resource-lb_loadbalancer_v2": {
    "description": "Defines lb_loadbalancer_v2",
    "prefix": "tf-openstack-resource-lb_loadbalancer_v2",
    "body": [
      "resource \"openstack_lb_loadbalancer_v2\" \"lb_1\" {",
      "  vip_subnet_id = \"d9415786-5f1a-428b-b35f-2f1523e146d2\"",
      "}"
    ]
  },
  "openstack-resource-lb_member_v1": {
    "description": "Defines lb_member_v1",
    "prefix": "tf-openstack-resource-lb_member_v1",
    "body": [
      "resource \"openstack_lb_member_v1\" \"member_1\" {",
      "  pool_id = \"d9415786-5f1a-428b-b35f-2f1523e146d2\"",
      "  address = \"192.168.0.10\"",
      "  port    = 80",
      "}"
    ]
  },
  "openstack-resource-lb_member_v2": {
    "description": "Defines lb_member_v2",
    "prefix": "tf-openstack-resource-lb_member_v2",
    "body": [
      "resource \"openstack_lb_member_v2\" \"member_1\" {",
      "  address       = \"192.168.199.23\"",
      "  protocol_port = 8080",
      "}"
    ]
  },
  "openstack-resource-lb_monitor_v1": {
    "description": "Defines lb_monitor_v1",
    "prefix": "tf-openstack-resource-lb_monitor_v1",
    "body": [
      "resource \"openstack_lb_monitor_v1\" \"monitor_1\" {",
      "  type           = \"PING\"",
      "  delay          = 30",
      "  timeout        = 5",
      "  max_retries    = 3",
      "  admin_state_up = \"true\"",
      "}"
    ]
  },
  "openstack-resource-lb_monitor_v2": {
    "description": "Defines lb_monitor_v2",
    "prefix": "tf-openstack-resource-lb_monitor_v2",
    "body": [
      "resource \"openstack_lb_monitor_v2\" \"monitor_1\" {",
      "  pool_id     = \"${openstack_lb_pool_v2.pool_1.id}\"",
      "  type        = \"PING\"",
      "  delay       = 20",
      "  timeout     = 10",
      "  max_retries = 5",
      "}"
    ]
  },
  "openstack-resource-lb_pool_v1": {
    "description": "Defines lb_pool_v1",
    "prefix": "tf-openstack-resource-lb_pool_v1",
    "body": [
      "resource \"openstack_lb_pool_v1\" \"pool_1\" {",
      "  name        = \"tf_test_lb_pool\"",
      "  protocol    = \"HTTP\"",
      "  subnet_id   = \"12345\"",
      "  lb_method   = \"ROUND_ROBIN\"",
      "  lb_provider = \"haproxy\"",
      "  monitor_ids = [\"67890\"]",
      "}"
    ]
  },
  "openstack-resource-lb_pool_v2": {
    "description": "Defines lb_pool_v2",
    "prefix": "tf-openstack-resource-lb_pool_v2",
    "body": [
      "resource \"openstack_lb_pool_v2\" \"pool_1\" {",
      "  protocol    = \"HTTP\"",
      "  lb_method   = \"ROUND_ROBIN\"",
      "  listener_id = \"d9415786-5f1a-428b-b35f-2f1523e146d2\"",
      "",
      "  persistence {",
      "    type        = \"HTTP_COOKIE\"",
      "    cookie_name = \"testCookie\"",
      "  }",
      "}"
    ]
  },
  "openstack-resource-lb_vip_v1": {
    "description": "Defines lb_vip_v1",
    "prefix": "tf-openstack-resource-lb_vip_v1",
    "body": [
      "resource \"openstack_lb_vip_v1\" \"vip_1\" {",
      "  name      = \"tf_test_lb_vip\"",
      "  subnet_id = \"12345\"",
      "  protocol  = \"HTTP\"",
      "  port      = 80",
      "  pool_id   = \"67890\"",
      "}"
    ]
  },
  "openstack-resource-networking_addressscope_v2": {
    "description": "Defines networking_addressscope_v2",
    "prefix": "tf-openstack-resource-networking_addressscope_v2",
    "body": [
      "resource \"openstack_networking_addressscope_v2\" \"addressscope_1\" {",
      "  name       = \"addressscope_1\"",
      "  ip_version = 6",
      "}"
    ]
  },
  "openstack-resource-networking_floatingip_associate_v2": {
    "description": "Defines networking_floatingip_associate_v2",
    "prefix": "tf-openstack-resource-networking_floatingip_associate_v2",
    "body": [
      "resource \"openstack_networking_port_v2\" \"port_1\" {",
      "  network_id = \"a5bbd213-e1d3-49b6-aed1-9df60ea94b9a\"",
      "}",
      "",
      "resource \"openstack_networking_floatingip_associate_v2\" \"fip_1\" {",
      "  floating_ip = \"1.2.3.4\"",
      "  port_id     = \"${openstack_networking_port_v2.port_1.id}\"",
      "}"
    ]
  },
  "openstack-resource-networking_floatingip_v2": {
    "description": "Defines networking_floatingip_v2",
    "prefix": "tf-openstack-resource-networking_floatingip_v2",
    "body": [
      "resource \"openstack_networking_floatingip_v2\" \"floatip_1\" {",
      "  pool = \"public\"",
      "}"
    ]
  },
  "openstack-resource-networking_network_v2": {
    "description": "Defines networking_network_v2",
    "prefix": "tf-openstack-resource-networking_network_v2",
    "body": [
      "resource \"openstack_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"openstack_networking_subnet_v2\" \"subnet_1\" {",
      "  name       = \"subnet_1\"",
      "  network_id = \"${openstack_networking_network_v2.network_1.id}\"",
      "  cidr       = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "}",
      "",
      "resource \"openstack_compute_secgroup_v2\" \"secgroup_1\" {",
      "  name        = \"secgroup_1\"",
      "  description = \"a security group\"",
      "",
      "  rule {",
      "    from_port   = 22",
      "    to_port     = 22",
      "    ip_protocol = \"tcp\"",
      "    cidr        = \"0.0.0.0/0\"",
      "  }",
      "}",
      "",
      "resource \"openstack_networking_port_v2\" \"port_1\" {",
      "  name               = \"port_1\"",
      "  network_id         = \"${openstack_networking_network_v2.network_1.id}\"",
      "  admin_state_up     = \"true\"",
      "  security_group_ids = [\"${openstack_compute_secgroup_v2.secgroup_1.id}\"]",
      "",
      "  fixed_ip {",
      "    \"subnet_id\"  = \"${openstack_networking_subnet_v2.subnet_1.id}\"",
      "    \"ip_address\" = \"192.168.199.10\"",
      "  }",
      "}",
      "",
      "resource \"openstack_compute_instance_v2\" \"instance_1\" {",
      "  name            = \"instance_1\"",
      "  security_groups = [\"${openstack_compute_secgroup_v2.secgroup_1.name}\"]",
      "",
      "  network {",
      "    port = \"${openstack_networking_port_v2.port_1.id}\"",
      "  }",
      "}"
    ]
  },
  "openstack-resource-networking_port_secgroup_associate_v2": {
    "description": "Defines networking_port_secgroup_associate_v2",
    "prefix": "tf-openstack-resource-networking_port_secgroup_associate_v2",
    "body": [
      "data \"openstack_networking_port_v2\" \"system_port\" {",
      "  fixed_ip = \"10.0.0.10\"",
      "}",
      "",
      "data \"openstack_networking_secgroup_v2\" \"secgroup\" {",
      "  name = \"secgroup\"",
      "}",
      "",
      "resource \"openstack_networking_port_secgroup_associate_v2\" \"port_1\" {",
      "  port_id = \"${data.openstack_networking_port_v2.system_port.id}\"",
      "  security_group_ids = [",
      "    \"${data.openstack_networking_secgroup_v2.secgroup.id}\",",
      "  ]",
      "}"
    ]
  },
  "openstack-resource-networking_port_v2": {
    "description": "Defines networking_port_v2",
    "prefix": "tf-openstack-resource-networking_port_v2",
    "body": [
      "resource \"openstack_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"openstack_networking_port_v2\" \"port_1\" {",
      "  name           = \"port_1\"",
      "  network_id     = \"${openstack_networking_network_v2.network_1.id}\"",
      "  admin_state_up = \"true\"",
      "}"
    ]
  },
  "openstack-resource-networking_qos_bandwidth_limit_rule_v2": {
    "description": "Defines networking_qos_bandwidth_limit_rule_v2",
    "prefix": "tf-openstack-resource-networking_qos_bandwidth_limit_rule_v2",
    "body": [
      "resource \"openstack_networking_qos_policy_v2\" \"qos_policy_1\" {",
      "  name        = \"qos_policy_1\"",
      "  description = \"bw_limit\"",
      "}",
      "",
      "resource \"openstack_networking_qos_bandwidth_limit_rule_v2\" \"bw_limit_rule_1\" {",
      "  qos_policy_id  = \"${openstack_networking_qos_policy_v2.qos_policy_1.id}\"",
      "  max_kbps       = 3000",
      "  max_burst_kbps = 300",
      "  direction      = \"egress\"",
      "}"
    ]
  },
  "openstack-resource-networking_qos_dscp_marking_rule_v2": {
    "description": "Defines networking_qos_dscp_marking_rule_v2",
    "prefix": "tf-openstack-resource-networking_qos_dscp_marking_rule_v2",
    "body": [
      "resource \"openstack_networking_qos_policy_v2\" \"qos_policy_1\" {",
      "  name        = \"qos_policy_1\"",
      "  description = \"dscp_mark\"",
      "}",
      "",
      "resource \"openstack_networking_qos_dscp_marking_rule_v2\" \"dscp_marking_rule_1\" {",
      "  qos_policy_id = \"${openstack_networking_qos_policy_v2.qos_policy_1.id}\"",
      "  dscp_mark     = 26",
      "}"
    ]
  },
  "openstack-resource-networking_qos_minimum_bandwidth_rule_v2": {
    "description": "Defines networking_qos_minimum_bandwidth_rule_v2",
    "prefix": "tf-openstack-resource-networking_qos_minimum_bandwidth_rule_v2",
    "body": [
      "resource \"openstack_networking_qos_policy_v2\" \"qos_policy_1\" {",
      "  name        = \"qos_policy_1\"",
      "  description = \"min_kbps\"",
      "}",
      "",
      "resource \"openstack_networking_qos_minimum_bandwidth_rule_v2\" \"minimum_bandwidth_rule_1\" {",
      "  qos_policy_id = \"${openstack_networking_qos_policy_v2.qos_policy_1.id}\"",
      "  min_kbps      = 200",
      "}"
    ]
  },
  "openstack-resource-networking_qos_policy_v2": {
    "description": "Defines networking_qos_policy_v2",
    "prefix": "tf-openstack-resource-networking_qos_policy_v2",
    "body": [
      "resource \"openstack_networking_qos_policy_v2\" \"qos_policy_1\" {",
      "  name        = \"qos_policy_1\"",
      "  description = \"bw_limit\"",
      "}"
    ]
  },
  "openstack-resource-networking_router_interface_v2": {
    "description": "Defines networking_router_interface_v2",
    "prefix": "tf-openstack-resource-networking_router_interface_v2",
    "body": [
      "resource \"openstack_networking_network_v2\" \"network_1\" {",
      "  name           = \"tf_test_network\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"openstack_networking_subnet_v2\" \"subnet_1\" {",
      "  network_id = \"${openstack_networking_network_v2.network_1.id}\"",
      "  cidr       = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "}",
      "",
      "resource \"openstack_networking_router_v2\" \"router_1\" {",
      "  name                = \"my_router\"",
      "  external_network_id = \"f67f0d72-0ddf-11e4-9d95-e1f29f417e2f\"",
      "}",
      "",
      "resource \"openstack_networking_router_interface_v2\" \"router_interface_1\" {",
      "  router_id = \"${openstack_networking_router_v2.router_1.id}\"",
      "  subnet_id = \"${openstack_networking_subnet_v2.subnet_1.id}\"",
      "}"
    ]
  },
  "openstack-resource-networking_router_route_v2": {
    "description": "Defines networking_router_route_v2",
    "prefix": "tf-openstack-resource-networking_router_route_v2",
    "body": [
      "resource \"openstack_networking_router_v2\" \"router_1\" {",
      "  name           = \"router_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"openstack_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"openstack_networking_subnet_v2\" \"subnet_1\" {",
      "  network_id = \"${openstack_networking_network_v2.network_1.id}\"",
      "  cidr       = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "}",
      "",
      "resource \"openstack_networking_router_interface_v2\" \"int_1\" {",
      "  router_id = \"${openstack_networking_router_v2.router_1.id}\"",
      "  subnet_id = \"${openstack_networking_subnet_v2.subnet_1.id}\"",
      "}",
      "",
      "resource \"openstack_networking_router_route_v2\" \"router_route_1\" {",
      "  depends_on       = [\"openstack_networking_router_interface_v2.int_1\"]",
      "  router_id        = \"${openstack_networking_router_v2.router_1.id}\"",
      "  destination_cidr = \"10.0.1.0/24\"",
      "  next_hop         = \"192.168.199.254\"",
      "}"
    ]
  },
  "openstack-resource-networking_router_v2": {
    "description": "Defines networking_router_v2",
    "prefix": "tf-openstack-resource-networking_router_v2",
    "body": [
      "resource \"openstack_networking_router_v2\" \"router_1\" {",
      "  name                = \"my_router\"",
      "  admin_state_up      = true",
      "  external_network_id = \"f67f0d72-0ddf-11e4-9d95-e1f29f417e2f\"",
      "}"
    ]
  },
  "openstack-resource-networking_secgroup_rule_v2": {
    "description": "Defines networking_secgroup_rule_v2",
    "prefix": "tf-openstack-resource-networking_secgroup_rule_v2",
    "body": [
      "resource \"openstack_networking_secgroup_v2\" \"secgroup_1\" {",
      "  name        = \"secgroup_1\"",
      "  description = \"My neutron security group\"",
      "}",
      "",
      "resource \"openstack_networking_secgroup_rule_v2\" \"secgroup_rule_1\" {",
      "  direction         = \"ingress\"",
      "  ethertype         = \"IPv4\"",
      "  protocol          = \"tcp\"",
      "  port_range_min    = 22",
      "  port_range_max    = 22",
      "  remote_ip_prefix  = \"0.0.0.0/0\"",
      "  security_group_id = \"${openstack_networking_secgroup_v2.secgroup_1.id}\"",
      "}"
    ]
  },
  "openstack-resource-networking_secgroup_v2": {
    "description": "Defines networking_secgroup_v2",
    "prefix": "tf-openstack-resource-networking_secgroup_v2",
    "body": [
      "resource \"openstack_networking_secgroup_v2\" \"secgroup_1\" {",
      "  name        = \"secgroup_1\"",
      "  description = \"My neutron security group\"",
      "}"
    ]
  },
  "openstack-resource-networking_subnet_route_v2": {
    "description": "Defines networking_subnet_route_v2",
    "prefix": "tf-openstack-resource-networking_subnet_route_v2",
    "body": [
      "resource \"openstack_networking_router_v2\" \"router_1\" {",
      "  name           = \"router_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"openstack_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"openstack_networking_subnet_v2\" \"subnet_1\" {",
      "  network_id = \"${openstack_networking_network_v2.network_1.id}\"",
      "  cidr       = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "}",
      "",
      "resource \"openstack_networking_subnet_route_v2\" \"subnet_route_1\" {",
      "  subnet_id        = \"${openstack_networking_subnet_v2.subnet_1.id}\"",
      "  destination_cidr = \"10.0.1.0/24\"",
      "  next_hop         = \"192.168.199.254\"",
      "}"
    ]
  },
  "openstack-resource-networking_subnet_v2": {
    "description": "Defines networking_subnet_v2",
    "prefix": "tf-openstack-resource-networking_subnet_v2",
    "body": [
      "resource \"openstack_networking_network_v2\" \"network_1\" {",
      "  name           = \"tf_test_network\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"openstack_networking_subnet_v2\" \"subnet_1\" {",
      "  network_id = \"${openstack_networking_network_v2.network_1.id}\"",
      "  cidr       = \"192.168.199.0/24\"",
      "}"
    ]
  },
  "openstack-resource-networking_subnetpool_v2": {
    "description": "Defines networking_subnetpool_v2",
    "prefix": "tf-openstack-resource-networking_subnetpool_v2",
    "body": [
      "resource \"openstack_networking_subnetpool_v2\" \"subnetpool_1\" {",
      "  name       = \"subnetpool_1\"",
      "  ip_version = 6",
      "  prefixes   = [\"fdf7:b13d:dead:beef::/64\", \"fd65:86cc:a334:39b7::/64\"]",
      "}"
    ]
  },
  "openstack-resource-networking_trunk_v2": {
    "description": "Defines networking_trunk_v2",
    "prefix": "tf-openstack-resource-networking_trunk_v2",
    "body": [
      "resource \"openstack_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"openstack_networking_subnet_v2\" \"subnet_1\" {",
      "  name        = \"subnet_1\"",
      "  network_id  = \"${openstack_networking_network_v2.network_1.id}\"",
      "  cidr        = \"192.168.1.0/24\"",
      "  ip_version  = 4",
      "  enable_dhcp = true",
      "  no_gateway  = true",
      "}",
      "",
      "resource \"openstack_networking_port_v2\" \"parent_port_1\" {",
      "  depends_on = [",
      "    \"openstack_networking_subnet_v2.subnet_1\",",
      "  ]",
      "",
      "  name           = \"parent_port_1\"",
      "  network_id     = \"${openstack_networking_network_v2.network_1.id}\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"openstack_networking_port_v2\" \"subport_1\" {",
      "  depends_on = [",
      "    \"openstack_networking_subnet_v2.subnet_1\",",
      "  ]",
      "",
      "  name           = \"subport_1\"",
      "  network_id     = \"${openstack_networking_network_v2.network_1.id}\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"openstack_networking_trunk_v2\" \"trunk_1\" {",
      "  name           = \"trunk_1\"",
      "  admin_state_up = \"true\"",
      "  port_id        = \"${openstack_networking_port_v2.parent_port_1.id}\"",
      "",
      "  sub_port {",
      "    port_id           = \"${openstack_networking_port_v2.subport_1.id}\"",
      "    segmentation_id   = 1",
      "    segmentation_type = \"vlan\"",
      "  }",
      "}",
      "",
      "resource \"openstack_compute_instance_v2\" \"instance_1\" {",
      "  name            = \"instance_1\"",
      "  security_groups = [\"default\"]",
      "",
      "  network {",
      "    port = \"${openstack_networking_trunk_v2.trunk_1.port_id}\"",
      "  }",
      "}"
    ]
  },
  "openstack-resource-objectstorage_container_v1": {
    "description": "Defines objectstorage_container_v1",
    "prefix": "tf-openstack-resource-objectstorage_container_v1",
    "body": [
      "resource \"openstack_objectstorage_container_v1\" \"container_1\" {",
      "  region = \"RegionOne\"",
      "  name   = \"tf-test-container-1\"",
      "",
      "  metadata = {",
      "    test = \"true\"",
      "  }",
      "",
      "  content_type = \"application/json\"",
      "",
      "  versioning {",
      "    type     = \"versions\"",
      "    location = \"tf-test-container-versions\"",
      "  }",
      "}"
    ]
  },
  "openstack-resource-objectstorage_object_v1": {
    "description": "Defines objectstorage_object_v1",
    "prefix": "tf-openstack-resource-objectstorage_object_v1",
    "body": [
      "resource \"openstack_objectstorage_container_v1\" \"container_1\" {",
      "  region = \"RegionOne\"",
      "  name   = \"tf-test-container-1\"",
      "",
      "  metadata {",
      "    test = \"true\"",
      "  }",
      "",
      "  content_type = \"application/json\"",
      "}",
      "",
      "resource \"openstack_objectstorage_object_v1\" \"doc_1\" {",
      "  region         = \"RegionOne\"",
      "  container_name = \"${openstack_objectstorage_container_v1.container_1.name}\"",
      "  name           = \"test/default.json\"",
      "  metadata {",
      "    test = \"true\"",
      "  }",
      "",
      "  content_type = \"application/json\"",
      "  content      = <<JSON",
      "               {",
      "                 \"foo\" : \"bar\"",
      "               }",
      "JSON",
      "",
      "}"
    ]
  },
  "openstack-resource-objectstorage_tempurl_v1": {
    "description": "Defines objectstorage_tempurl_v1",
    "prefix": "tf-openstack-resource-objectstorage_tempurl_v1",
    "body": [
      "resource \"openstack_objectstorage_tempurl_v1\" \"obj_tempurl\" {",
      "  container = \"test\"",
      "  object    = \"container\"",
      "  method    = \"post\"",
      "  ttl       = 20",
      "}"
    ]
  },
  "openstack-resource-sharedfilesystem_securityservice_v2": {
    "description": "Defines sharedfilesystem_securityservice_v2",
    "prefix": "tf-openstack-resource-sharedfilesystem_securityservice_v2",
    "body": [
      "resource \"openstack_sharedfilesystem_securityservice_v2\" \"securityservice_1\" {",
      "  name        = \"security\"",
      "  description = \"created by terraform\"",
      "  type        = \"active_directory\"",
      "  server      = \"192.168.199.10\"",
      "  dns_ip      = \"192.168.199.10\"",
      "  domain      = \"example.com\"",
      "  ou          = \"CN=Computers,DC=example,DC=com\"",
      "  user        = \"joinDomainUser\"",
      "  password    = \"s8cret\"",
      "}"
    ]
  },
  "openstack-resource-sharedfilesystem_share_access_v2": {
    "description": "Defines sharedfilesystem_share_access_v2",
    "prefix": "tf-openstack-resource-sharedfilesystem_share_access_v2",
    "body": [
      "resource \"openstack_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"openstack_networking_subnet_v2\" \"subnet_1\" {",
      "  name       = \"subnet_1\"",
      "  cidr       = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "  network_id = \"${openstack_networking_network_v2.network_1.id}\"",
      "}",
      "",
      "resource \"openstack_sharedfilesystem_sharenetwork_v2\" \"sharenetwork_1\" {",
      "  name              = \"test_sharenetwork\"",
      "  description       = \"test share network with security services\"",
      "  neutron_net_id    = \"${openstack_networking_network_v2.network_1.id}\"",
      "  neutron_subnet_id = \"${openstack_networking_subnet_v2.subnet_1.id}\"",
      "}",
      "",
      "resource \"openstack_sharedfilesystem_share_v2\" \"share_1\" {",
      "  name             = \"nfs_share\"",
      "  description      = \"test share description\"",
      "  share_proto      = \"NFS\"",
      "  size             = 1",
      "  share_network_id = \"${openstack_sharedfilesystem_sharenetwork_v2.sharenetwork_1.id}\"",
      "}",
      "",
      "resource \"openstack_sharedfilesystem_share_access_v2\" \"share_access_1\" {",
      "  share_id     = \"${openstack_sharedfilesystem_share_v2.share_1.id}\"",
      "  access_type  = \"ip\"",
      "  access_to    = \"192.168.199.10\"",
      "  access_level = \"rw\"",
      "}"
    ]
  },
  "openstack-resource-sharedfilesystem_share_v2": {
    "description": "Defines sharedfilesystem_share_v2",
    "prefix": "tf-openstack-resource-sharedfilesystem_share_v2",
    "body": [
      "resource \"openstack_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"openstack_networking_subnet_v2\" \"subnet_1\" {",
      "  name       = \"subnet_1\"",
      "  cidr       = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "  network_id = \"${openstack_networking_network_v2.network_1.id}\"",
      "}",
      "",
      "resource \"openstack_sharedfilesystem_sharenetwork_v2\" \"sharenetwork_1\" {",
      "  name              = \"test_sharenetwork\"",
      "  description       = \"test share network with security services\"",
      "  neutron_net_id    = \"${openstack_networking_network_v2.network_1.id}\"",
      "  neutron_subnet_id = \"${openstack_networking_subnet_v2.subnet_1.id}\"",
      "}",
      "",
      "resource \"openstack_sharedfilesystem_share_v2\" \"share_1\" {",
      "  name             = \"nfs_share\"",
      "  description      = \"test share description\"",
      "  share_proto      = \"NFS\"",
      "  size             = 1",
      "  share_network_id = \"${openstack_sharedfilesystem_sharenetwork_v2.sharenetwork_1.id}\"",
      "}"
    ]
  },
  "openstack-resource-sharedfilesystem_sharenetwork_v2": {
    "description": "Defines sharedfilesystem_sharenetwork_v2",
    "prefix": "tf-openstack-resource-sharedfilesystem_sharenetwork_v2",
    "body": [
      "resource \"openstack_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"openstack_networking_subnet_v2\" \"subnet_1\" {",
      "  name       = \"subnet_1\"",
      "  cidr       = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "  network_id = \"${openstack_networking_network_v2.network_1.id}\"",
      "}",
      "",
      "resource \"openstack_sharedfilesystem_sharenetwork_v2\" \"sharenetwork_1\" {",
      "  name              = \"test_sharenetwork\"",
      "  description       = \"test share network\"",
      "  neutron_net_id    = \"${openstack_networking_network_v2.network_1.id}\"",
      "  neutron_subnet_id = \"${openstack_networking_subnet_v2.subnet_1.id}\"",
      "}"
    ]
  },
  "openstack-resource-vpnaas_endpoint_group_v2": {
    "description": "Defines vpnaas_endpoint_group_v2",
    "prefix": "tf-openstack-resource-vpnaas_endpoint_group_v2",
    "body": [
      "resource \"openstack_vpnaas_endpoint_group_v2\" \"group_1\" {",
      "  name = \"Group 1\"",
      "  type = \"cidr\"",
      "  endpoints = [\"10.2.0.0/24\",",
      "  \"10.3.0.0/24\", ]",
      "}"
    ]
  },
  "openstack-resource-vpnaas_ike_policy_v2": {
    "description": "Defines vpnaas_ike_policy_v2",
    "prefix": "tf-openstack-resource-vpnaas_ike_policy_v2",
    "body": [
      "resource \"openstack_vpnaas_ike_policy_v2\" \"policy_1\" {",
      "  name = \"my_policy\"",
      "}"
    ]
  },
  "openstack-resource-vpnaas_ipsec_policy_v2": {
    "description": "Defines vpnaas_ipsec_policy_v2",
    "prefix": "tf-openstack-resource-vpnaas_ipsec_policy_v2",
    "body": [
      "resource \"openstack_vpnaas_ipsec_policy_v2\" \"policy_1\" {",
      "  name = \"my_policy\"",
      "}"
    ]
  },
  "openstack-resource-vpnaas_service_v2": {
    "description": "Defines vpnaas_service_v2",
    "prefix": "tf-openstack-resource-vpnaas_service_v2",
    "body": [
      "resource \"openstack_vpnaas_service_v2\" \"service_1\" {",
      "  name           = \"my_service\"",
      "  router_id      = \"14a75700-fc03-4602-9294-26ee44f366b3\"",
      "  admin_state_up = \"true\"",
      "}"
    ]
  },
  "openstack-resource-vpnaas_site_connection_v2": {
    "description": "Defines vpnaas_site_connection_v2",
    "prefix": "tf-openstack-resource-vpnaas_site_connection_v2",
    "body": [
      "resource \"openstack_vpnaas_site_connection_v2\" \"conn_1\" {",
      "  name              = \"connection_1\"",
      "  ikepolicy_id      = \"${openstack_vpnaas_ike_policy_v2.policy_2.id}\"",
      "  ipsecpolicy_id    = \"${openstack_vpnaas_ipsec_policy_v2.policy_1.id}\"",
      "  vpnservice_id     = \"${openstack_vpnaas_service_v2.service_1.id}\"",
      "  psk               = \"secret\"",
      "  peer_address      = \"192.168.10.1\"",
      "  local_ep_group_id = \"${openstack_vpnaas_endpoint_group_v2.group_2.id}\"",
      "  peer_ep_group_id  = \"${openstack_vpnaas_endpoint_group_v2.group_1.id}\"",
      "}"
    ]
  },
  "opentelekomcloud-data-antiddos_v1": {
    "description": "Defines antiddos_v1",
    "prefix": "tf-opentelekomcloud-data-antiddos_v1",
    "body": [
      "variable \"id\" { }",
      "",
      "data \"opentelekomcloud_antiddos_v1\" \"antiddos\" {",
      "  floating_ip_id =\"${var.eip_id}\"",
      "}",
      ""
    ]
  },
  "opentelekomcloud-data-cce_cluster_v3": {
    "description": "Defines cce_cluster_v3",
    "prefix": "tf-opentelekomcloud-data-cce_cluster_v3",
    "body": [
      "#XXX empty snippet",
      ""
    ]
  },
  "opentelekomcloud-data-cce_node_v3": {
    "description": "Defines cce_node_v3",
    "prefix": "tf-opentelekomcloud-data-cce_node_v3",
    "body": [
      "    variable \"cluster_id\" { }",
      "    variable \"node_id\" { }",
      "  ",
      "    data \"opentelekomcloud_cce_node_v3\" \"node\" {",
      "     cluster_id = \"${var.cluster_id}\"",
      "     node_id= \"${var.node_id}\"",
      "    }"
    ]
  },
  "opentelekomcloud-data-compute_bms_flavors_v2": {
    "description": "Defines compute_bms_flavors_v2",
    "prefix": "tf-opentelekomcloud-data-compute_bms_flavors_v2",
    "body": [
      "    ",
      "    variable \"flavor_id\" { }",
      "    variable \"disk_size\" { }",
      "",
      "    data \"opentelekomcloud_compute_bms_flavors_v2\" \"Query_BMS_flavors\" ",
      "    {",
      "        id = \"${var.bms_id}\",",
      "        min_disk = \"${var.disk_size}\",",
      "        sort_key = \"id\",",
      "        sort_dir = \"desc\",",
      "    }",
      "    "
    ]
  },
  "opentelekomcloud-data-compute_bms_keypairs_v2": {
    "description": "Defines compute_bms_keypairs_v2",
    "prefix": "tf-opentelekomcloud-data-compute_bms_keypairs_v2",
    "body": [
      "",
      "    variable \"keypair_name\" {}",
      "",
      "    data \"opentelekomcloud_compute_bms_keypairs_v2\" \"Query_BMS_keypair\" ",
      "    {",
      "        name = \"${var.keypair_name}\"",
      "    }",
      "    "
    ]
  },
  "opentelekomcloud-data-compute_bms_nic_v2": {
    "description": "Defines compute_bms_nic_v2",
    "prefix": "tf-opentelekomcloud-data-compute_bms_nic_v2",
    "body": [
      "    ",
      "    variable \"bms_id\" {}",
      "    variable \"nic_id\" {}",
      "",
      "    data \"opentelekomcloud_compute_bms_nic_v2\" \"Query_BMS_Nic\" ",
      "    {",
      "        server_id = \"${var.bms_id}\",",
      "        id = \"${var.nic_id}\",",
      "    }",
      "       "
    ]
  },
  "opentelekomcloud-data-compute_bms_server_v2": {
    "description": "Defines compute_bms_server_v2",
    "prefix": "tf-opentelekomcloud-data-compute_bms_server_v2",
    "body": [
      "",
      "    variable \"bms_id\" {}",
      "    variable \"bms_name\" {}",
      "",
      "    data \"opentelekomcloud_compute_bms_server_v2\" \"Query_BMS\" ",
      "    {",
      "        id = \"${var.bms_id}\",",
      "        name = \"${var.bms_name}\"     ",
      "    }",
      ""
    ]
  },
  "opentelekomcloud-data-csbs_backup_policy_v1": {
    "description": "Defines csbs_backup_policy_v1",
    "prefix": "tf-opentelekomcloud-data-csbs_backup_policy_v1",
    "body": [
      "variable \"policy_id\" { }",
      "",
      "data \"opentelekomcloud_csbs_backup_policy_v1\" \"csbs_policy\" {",
      "  id = \"${var.policy_id}\" ",
      "}",
      ""
    ]
  },
  "opentelekomcloud-data-csbs_backup_v1": {
    "description": "Defines csbs_backup_v1",
    "prefix": "tf-opentelekomcloud-data-csbs_backup_v1",
    "body": [
      "variable \"backup_name\" { }",
      "",
      "data \"opentelekomcloud_csbs_backup_v1\" \"csbs\" {",
      "  backup_name = \"${var.backup_name}\" ",
      "}"
    ]
  },
  "opentelekomcloud-data-cts_tracker_v1": {
    "description": "Defines cts_tracker_v1",
    "prefix": "tf-opentelekomcloud-data-cts_tracker_v1",
    "body": [
      "variable \"bucket_name\" { }",
      "",
      "data \"opentelekomcloud_cts_tracker_v1\" \"tracker_v1\" {",
      "  bucket_name = \"${var.bucket_name}\"",
      "}",
      ""
    ]
  },
  "opentelekomcloud-data-dcs_az_v1": {
    "description": "Defines dcs_az_v1",
    "prefix": "tf-opentelekomcloud-data-dcs_az_v1",
    "body": [
      "",
      "data \"opentelekomcloud_dcs_az_v1\" \"az1\" {",
      "  name = \"AZ1\"",
      "  port = \"8004\"",
      "  code = \"sa-chile-1a\"",
      "}"
    ]
  },
  "opentelekomcloud-data-dcs_maintainwindow_v1": {
    "description": "Defines dcs_maintainwindow_v1",
    "prefix": "tf-opentelekomcloud-data-dcs_maintainwindow_v1",
    "body": [
      "",
      "data \"opentelekomcloud_dcs_maintainwindow_v1\" \"maintainwindow1\" {",
      "seq = 1",
      "}",
      ""
    ]
  },
  "opentelekomcloud-data-dcs_product_v1": {
    "description": "Defines dcs_product_v1",
    "prefix": "tf-opentelekomcloud-data-dcs_product_v1",
    "body": [
      "",
      "data \"opentelekomcloud_dcs_product_v1\" \"product1\" {",
      "  engine = \"kafka\"",
      "  version = \"1.1.0\"",
      "  instance_type = \"cluster\"",
      "  partition_num = 300",
      "  storage = 600",
      "  storage_spec_code = \"dcs.physical.storage.high\"",
      "}"
    ]
  },
  "opentelekomcloud-data-deh_host_v1": {
    "description": "Defines deh_host_v1",
    "prefix": "tf-opentelekomcloud-data-deh_host_v1",
    "body": [
      "    variable \"deh_id\" { }",
      "",
      "    data \"opentelekomcloud_deh_host_v1\" \"deh_host\" ",
      "    {",
      "        id = \"${var.deh_id}\"",
      "    }",
      ""
    ]
  },
  "opentelekomcloud-data-deh_server_v1": {
    "description": "Defines deh_server_v1",
    "prefix": "tf-opentelekomcloud-data-deh_server_v1",
    "body": [
      "    variable \"deh_id\" { }",
      "",
      "    variable \"server_id\" { }",
      "",
      "    data \"opentelekomcloud_deh_server_v1\" \"deh_server\" ",
      "    {",
      "        id = \"${var.deh_id}\",",
      "        server_id = \"${var.server id}\"",
      "    }",
      ""
    ]
  },
  "opentelekomcloud-data-identity_auth_scope_v3": {
    "description": "Defines identity_auth_scope_v3",
    "prefix": "tf-opentelekomcloud-data-identity_auth_scope_v3",
    "body": [
      "data \"opentelekomcloud_identity_auth_scope_v3\" \"scope\" {",
      "  name = \"my_scope\"",
      "}"
    ]
  },
  "opentelekomcloud-data-identity_group_v3": {
    "description": "Defines identity_group_v3",
    "prefix": "tf-opentelekomcloud-data-identity_group_v3",
    "body": [
      "data \"opentelekomcloud_identity_group_v3\" \"admins\" {",
      "  name = \"admins\"",
      "}"
    ]
  },
  "opentelekomcloud-data-identity_project_v3": {
    "description": "Defines identity_project_v3",
    "prefix": "tf-opentelekomcloud-data-identity_project_v3",
    "body": [
      "data \"opentelekomcloud_identity_project_v3\" \"project_1\" {",
      "  name = \"demo\"",
      "}"
    ]
  },
  "opentelekomcloud-data-identity_role_v3": {
    "description": "Defines identity_role_v3",
    "prefix": "tf-opentelekomcloud-data-identity_role_v3",
    "body": [
      "data \"opentelekomcloud_identity_role_v3\" \"auth_admin\" {",
      "  name = \"secu_admin\"",
      "}"
    ]
  },
  "opentelekomcloud-data-identity_user_v3": {
    "description": "Defines identity_user_v3",
    "prefix": "tf-opentelekomcloud-data-identity_user_v3",
    "body": [
      "data \"opentelekomcloud_identity_user_v3\" \"user_1\" {",
      "  name = \"user_1\"",
      "}"
    ]
  },
  "opentelekomcloud-data-images_image_v2": {
    "description": "Defines images_image_v2",
    "prefix": "tf-opentelekomcloud-data-images_image_v2",
    "body": [
      "data \"opentelekomcloud_images_image_v2\" \"ubuntu\" {",
      "  name = \"Ubuntu 16.04\"",
      "  most_recent = true",
      "",
      "  properties = {",
      "    key = \"value\"",
      "  }",
      "}"
    ]
  },
  "opentelekomcloud-data-kms_data_key_v1": {
    "description": "Defines kms_data_key_v1",
    "prefix": "tf-opentelekomcloud-data-kms_data_key_v1",
    "body": [
      "",
      "resource \"opentelekomcloud_kms_key_v1\" \"key1\" {",
      "  key_alias       = \"key_1\"",
      "  pending_days    = \"7\"",
      "  key_description = \"first test key\"",
      "}",
      "",
      "data \"opentelekomcloud_kms_data_key_v1\" \"kms_datakey1\" {",
      "  key_id         = \"${opentelekomcloud_kms_key_v1.key1.id}\"",
      "  datakey_length = \"512\"",
      "}",
      ""
    ]
  },
  "opentelekomcloud-data-kms_key_v1": {
    "description": "Defines kms_key_v1",
    "prefix": "tf-opentelekomcloud-data-kms_key_v1",
    "body": [
      "",
      "data \"opentelekomcloud_kms_key_v1\" \"key_1\" {",
      "  key_alias        = \"test_key\"",
      "  key_description  = \"test key description\"",
      "  key_state        = \"2\"",
      "  key_id           = \"af650527-a0ff-4527-aef3-c493df1f3012\"",
      "  realm            = \"cn-north-1\"",
      "  default_key_flag = \"0\"",
      "  domain_id        = \"b168fe00ff56492495a7d22974df2d0b\"",
      "  origin           = \"kms\"",
      "}"
    ]
  },
  "opentelekomcloud-data-networking_network_v2": {
    "description": "Defines networking_network_v2",
    "prefix": "tf-opentelekomcloud-data-networking_network_v2",
    "body": [
      "data \"opentelekomcloud_networking_network_v2\" \"network\" {",
      "  name = \"tf_test_network\"",
      "}"
    ]
  },
  "opentelekomcloud-data-networking_port_v2": {
    "description": "Defines networking_port_v2",
    "prefix": "tf-opentelekomcloud-data-networking_port_v2",
    "body": [
      "data \"opentelekomcloud_networking_port_v2\" \"port_1\" {",
      "  name = \"port_1\"",
      "}"
    ]
  },
  "opentelekomcloud-data-networking_secgroup_v2": {
    "description": "Defines networking_secgroup_v2",
    "prefix": "tf-opentelekomcloud-data-networking_secgroup_v2",
    "body": [
      "data \"opentelekomcloud_networking_secgroup_v2\" \"secgroup\" {",
      "  name = \"tf_test_secgroup\"",
      "}"
    ]
  },
  "opentelekomcloud-data-rds_flavors_v1": {
    "description": "Defines rds_flavors_v1",
    "prefix": "tf-opentelekomcloud-data-rds_flavors_v1",
    "body": [
      "data \"opentelekomcloud_rds_flavors_v1\" \"flavor\" {",
      "    datastore_name = \"PostgreSQL\"",
      "    datastore_version = \"9.5.5\"",
      "    speccode = \"rds.pg.s1.medium\"",
      "}"
    ]
  },
  "opentelekomcloud-data-rds_flavors_v3": {
    "description": "Defines rds_flavors_v3",
    "prefix": "tf-opentelekomcloud-data-rds_flavors_v3",
    "body": [
      "data \"opentelekomcloud_rds_flavors_v3\" \"flavor\" {",
      "    db_type = \"PostgreSQL\"",
      "    db_version = \"9.5\"",
      "    instance_mode = \"ha\"",
      "}"
    ]
  },
  "opentelekomcloud-data-rts_software_config": {
    "description": "Defines rts_software_config",
    "prefix": "tf-opentelekomcloud-data-rts_software_config",
    "body": [
      "variable \"config_name\" {}",
      "",
      "variable \"server_id\" {}",
      "",
      "data \"opentelekomcloud_rts_software_config_v1\" \"myconfig\" {",
      "  id = \"${var.config_name}\"",
      "}",
      "",
      "resource \"opentelekomcloud_rts_software_deployment_v1\" \"mydeployment\" {",
      "  config_id = \"${data.opentelekomcloud_rts_software_config_v1.myconfig.id}\"",
      "  server_id = \"${var.server_id}\"",
      "}"
    ]
  },
  "opentelekomcloud-data-rts_software_deployment": {
    "description": "Defines rts_software_deployment",
    "prefix": "tf-opentelekomcloud-data-rts_software_deployment",
    "body": [
      "variable \"deployment_id\" {}",
      "",
      "data \"opentelekomcloud_rts_software_deployment_v1\" \"mydeployment\" {",
      "  id = \"${var.deployment_id}\"",
      "}"
    ]
  },
  "opentelekomcloud-data-rts_stack_resource_v1": {
    "description": "Defines rts_stack_resource_v1",
    "prefix": "tf-opentelekomcloud-data-rts_stack_resource_v1",
    "body": [
      "variable \"stack_name\" { }",
      "variable \"resource_name\" { }",
      "",
      "data \"opentelekomcloud_rts_stack_resource_v1\" \"stackresource\" {",
      "  stack_name = \"${var.stack_name}\"",
      "  resource_name = \"${var.resource_name}\"  ",
      "}"
    ]
  },
  "opentelekomcloud-data-rts_stack_v1": {
    "description": "Defines rts_stack_v1",
    "prefix": "tf-opentelekomcloud-data-rts_stack_v1",
    "body": [
      "variable \"stack_name\" { }",
      "",
      "data \"opentelekomcloud_rts_stack_v1\" \"mystack\" {",
      "  name = \"${var.stack_name}\"  ",
      "}"
    ]
  },
  "opentelekomcloud-data-s3_bucket_object": {
    "description": "Defines s3_bucket_object data source",
    "prefix": "tf-opentelekomcloud-data-s3_bucket_object",
    "body": [
      "data \"opentelekomcloud_s3_bucket_object\" \"${1:object_name}\" {",
      "  bucket = \"my-test-bucket\"",
      "  key    = \"hello-world.zip\"",
      "}",
      ""
    ]
  },
  "opentelekomcloud-data-sdrs_domain_v1": {
    "description": "Defines sdrs_domain_v1",
    "prefix": "tf-opentelekomcloud-data-sdrs_domain_v1",
    "body": [
      "",
      "data \"opentelekomcloud_sdrs_domain_v1\" \"dom_1\" {",
      "\tname = \"domain_001\"",
      "}",
      ""
    ]
  },
  "opentelekomcloud-data-sfs_file_system_v2": {
    "description": "Defines sfs_file_system_v2",
    "prefix": "tf-opentelekomcloud-data-sfs_file_system_v2",
    "body": [
      "    variable \"share_name\" { }",
      "",
      "    variable \"share_id\" { }",
      "",
      "    data \"opentelekomcloud_sfs_file_system_v2\" \"shared_file\"",
      "    {",
      "        name = \"${var.share_name}\"",
      "        id = \"${var.share_id}\"",
      "    }"
    ]
  },
  "opentelekomcloud-data-vbs_backup_policy_v2": {
    "description": "Defines vbs_backup_policy_v2",
    "prefix": "tf-opentelekomcloud-data-vbs_backup_policy_v2",
    "body": [
      "",
      " variable \"policy_name\" { }",
      "",
      " variable \"policy_id\" { }",
      "    ",
      "data \"opentelekomcloud_vbs_backup_policy_v2\" \"policies\" {",
      "  name = \"${var.policy_name}\"",
      "  id = \"${var.policy_id}\"",
      "}"
    ]
  },
  "opentelekomcloud-data-vbs_backup_v2": {
    "description": "Defines vbs_backup_v2",
    "prefix": "tf-opentelekomcloud-data-vbs_backup_v2",
    "body": [
      "variable \"backup_id\" {}",
      "",
      "data \"opentelekomcloud_vbs_backup_v2\" \"mybackup\" {",
      "  id = \"${var.backup_id}\"",
      "}"
    ]
  },
  "opentelekomcloud-data-vpc_peering_v2": {
    "description": "Defines vpc_peering_v2",
    "prefix": "tf-opentelekomcloud-data-vpc_peering_v2",
    "body": [
      "",
      "data \"opentelekomcloud_vpc_peering_connection_v2\" \"peering\" {",
      "   vpc_id          = \"${opentelekomcloud_vpc_v1.vpc.id}\"",
      "   peer_vpc_id     = \"${opentelekomcloud_vpc_v1.peer_vpc.id}\"",
      " }",
      "",
      "",
      "resource \"opentelekomcloud_vpc_route_v2\" \"vpc_route\" {",
      "  type       = \"peering\"",
      "  nexthop    = \"${data.opentelekomcloud_vpc_peering_connection_v2.peering.id}\"",
      "  destination = \"192.168.0.0/16\"",
      "  vpc_id = \"${opentelekomcloud_vpc_v1.vpc.id}\"",
      "}"
    ]
  },
  "opentelekomcloud-data-vpc_route_ids_v2": {
    "description": "Defines vpc_route_ids_v2",
    "prefix": "tf-opentelekomcloud-data-vpc_route_ids_v2",
    "body": [
      " variable \"vpc_id\" { }",
      "",
      "data \"opentelekomcloud_vpc_route_ids_v2\" \"example\" {",
      "  vpc_id = \"${var.vpc_id}\"",
      "}",
      "",
      "data \"opentelekomcloud_vpc_route_v2\" \"vpc_route\" {",
      "  count = \"${length(data.opentelekomcloud_vpc_route_ids_v2.example.ids)}\"",
      "  id = \"${data.opentelekomcloud_vpc_route_ids_v2.example.ids[count.index]}\"",
      "}",
      "",
      "output \"route_nexthop\" {",
      "  value = [\"${data.opentelekomcloud_vpc_route_v2.vpc_route.*.nexthop}\"]",
      "}"
    ]
  },
  "opentelekomcloud-data-vpc_route_v2": {
    "description": "Defines vpc_route_v2",
    "prefix": "tf-opentelekomcloud-data-vpc_route_v2",
    "body": [
      " variable \"route_id\" { }",
      "",
      "data \"opentelekomcloud_vpc_route_v2\" \"vpc_route\" {",
      "  id = \"${var.route_id}\"",
      "}",
      "",
      "resource \"opentelekomcloud_vpc_subnet_v1\" \"subnet_v1\" {",
      "  name = \"test-subnet\"",
      "  cidr = \"192.168.0.0/24\"",
      "  gateway_ip = \"192.168.0.1\"",
      "  vpc_id = \"${data.opentelekomcloud_vpc_route_v2.vpc_route.vpc_id}\"",
      "}",
      ""
    ]
  },
  "opentelekomcloud-data-vpc_subnet_ids_v1": {
    "description": "Defines vpc_subnet_ids_v1",
    "prefix": "tf-opentelekomcloud-data-vpc_subnet_ids_v1",
    "body": [
      "data \"opentelekomcloud_vpc_subnet_ids_v1\" \"subnet_ids\" {",
      "  vpc_id = \"${var.vpc_id}\" ",
      "}",
      "",
      "data \"opentelekomcloud_vpc_subnet_v1\" \"subnet\" {",
      "  count = \"${length(data.opentelekomcloud_vpc_subnet_ids_v1.subnet_ids.ids)}\"",
      "  id    = \"${data.opentelekomcloud_vpc_subnet_ids_v1.subnet_ids.ids[count.index]}\"",
      " }",
      "",
      "output \"subnet_cidr_blocks\" {",
      "  value = \"${data.opentelekomcloud_vpc_subnet_v1.subnet.*.cidr}\"",
      "}"
    ]
  },
  "opentelekomcloud-data-vpc_subnet_v1": {
    "description": "Defines vpc_subnet_v1",
    "prefix": "tf-opentelekomcloud-data-vpc_subnet_v1",
    "body": [
      "data \"opentelekomcloud_vpc_subnet_v1\" \"subnet_v1\" {",
      "  id   = \"${var.subnet_id}\"",
      " }",
      "",
      "output \"subnet_vpc_id\" {",
      "  value = \"${data.opentelekomcloud_vpc_subnet_v1.subnet_v1.vpc_id}\"",
      "}"
    ]
  },
  "opentelekomcloud-data-vpc_v1": {
    "description": "Defines vpc_v1",
    "prefix": "tf-opentelekomcloud-data-vpc_v1",
    "body": [
      "",
      "variable \"vpc_name\" {}",
      "",
      "data \"opentelekomcloud_vpc_v1\" \"vpc\" {",
      "  name = \"${var.vpc_name}\"",
      "}",
      ""
    ]
  },
  "opentelekomcloud-resource-antiddos_v1": {
    "description": "Defines antiddos_v1",
    "prefix": "tf-opentelekomcloud-resource-antiddos_v1",
    "body": [
      " variable \"eip_id\" {}",
      "  ",
      " resource \"opentelekomcloud_antiddos_v1\" \"myantiddos\" {",
      "     floating_ip_id = \"${var.eip_id}\"",
      "     enable_l7 = true",
      "     traffic_pos_id = 1",
      "     http_request_pos_id = 3",
      "     cleaning_access_pos_id = 2",
      "     app_type_id = 0",
      " }",
      ""
    ]
  },
  "opentelekomcloud-resource-as_configuration_v1": {
    "description": "Defines as_configuration_v1",
    "prefix": "tf-opentelekomcloud-resource-as_configuration_v1",
    "body": [
      "resource \"opentelekomcloud_as_configuration_v1\" \"my_as_config\" {",
      "  scaling_configuration_name = \"my_as_config\"",
      "  instance_config {",
      "    flavor = \"${var.flavor}\"",
      "    image = \"${var.image_id}\"",
      "    disk {",
      "      size = 40",
      "      volume_type = \"SATA\"",
      "      disk_type = \"SYS\"",
      "    }",
      "    key_name = \"${var.keyname}\"",
      "    user_data = \"${file(\"userdata.txt\")}\"",
      "  }",
      "}"
    ]
  },
  "opentelekomcloud-resource-as_group_v1": {
    "description": "Defines as_group_v1",
    "prefix": "tf-opentelekomcloud-resource-as_group_v1",
    "body": [
      "resource \"opentelekomcloud_as_group_v1\" \"my_as_group\" {",
      "  scaling_group_name = \"my_as_group\"",
      "  scaling_configuration_id = \"37e310f5-db9d-446e-9135-c625f9c2bbfc\"",
      "  desire_instance_number = 2",
      "  min_instance_number = 0",
      "  max_instance_number = 10",
      "  networks {",
      "    id = \"ad091b52-742f-469e-8f3c-fd81cadf0743\"",
      "  }",
      "  security_groups {",
      "    id = \"45e4c6de-6bf0-4843-8953-2babde3d4810\"",
      "  }",
      "  vpc_id = \"1d8f7e7c-fe04-4cf5-85ac-08b478c290e9\"",
      "  delete_publicip = true",
      "  delete_instances = \"yes\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-as_policy_v1": {
    "description": "Defines as_policy_v1",
    "prefix": "tf-opentelekomcloud-resource-as_policy_v1",
    "body": [
      "resource \"opentelekomcloud_as_policy_v1\" \"hth_aspolicy\"{",
      "  scaling_policy_name = \"hth_aspolicy\"",
      "  scaling_group_id = \"4579f2f5-cbe8-425a-8f32-53dcb9d9053a\"",
      "  cool_down_time = 900",
      "  scaling_policy_type = \"RECURRENCE\"",
      "  scaling_policy_action {",
      "    operation = \"ADD\"",
      "    instance_number = 1",
      "  }",
      "  scheduled_policy {",
      "    launch_time = \"07:00\"",
      "    recurrence_type = \"Daily\"",
      "    start_time = \"2017-11-30T12:00Z\"",
      "    end_time = \"2017-12-30T12:00Z\"",
      "  }",
      "}",
      ""
    ]
  },
  "opentelekomcloud-resource-blockstorage_volume_attach_v2": {
    "description": "Defines blockstorage_volume_attach_v2",
    "prefix": "tf-opentelekomcloud-resource-blockstorage_volume_attach_v2",
    "body": [
      "resource \"opentelekomcloud_blockstorage_volume_v2\" \"volume_1\" {",
      "  name = \"volume_1\"",
      "  size = 1",
      "}",
      "",
      "resource \"opentelekomcloud_blockstorage_volume_attach_v2\" \"va_1\" {",
      "  volume_id = \"${opentelekomcloud_blockstorage_volume_v2.volume_1.id}\"",
      "  device = \"auto\"",
      "  host_name = \"devstack\"",
      "  ip_address = \"192.168.255.10\"",
      "  initiator = \"iqn.1993-08.org.debian:01:e9861fb1859\"",
      "  os_type = \"linux2\"",
      "  platform = \"x86_64\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-blockstorage_volume_v2": {
    "description": "Defines blockstorage_volume_v2",
    "prefix": "tf-opentelekomcloud-resource-blockstorage_volume_v2",
    "body": [
      "resource \"opentelekomcloud_blockstorage_volume_v2\" \"volume_1\" {",
      "  name        = \"volume_1\"",
      "  description = \"first test volume\"",
      "  size        = 3",
      "  tags        = {",
      "    foo = \"bar\"",
      "    key = \"value\"",
      "  }",
      "  metadata    = {",
      "    __system__encrypted = \"1\"",
      "    __system__cmkid     = \"kms_id\"",
      "  }",
      "}"
    ]
  },
  "opentelekomcloud-resource-cce_cluster_v3": {
    "description": "Defines cce_cluster_v3",
    "prefix": "tf-opentelekomcloud-resource-cce_cluster_v3",
    "body": [
      "    variable \"flavor_id\" { }",
      "    variable \"vpc_id\" { }",
      "    variable \"subnet_id\" { }",
      "\t",
      "    resource \"opentelekomcloud_cce_cluster_v3\" \"cluster_1\" {",
      "     name = \"cluster\"",
      "     cluster_type= \"VirtualMachine\"",
      "     flavor_id= \"${var.flavor_id}\"",
      "     vpc_id= \"${var.vpc_id}\"",
      "     subnet_id= \"${var.subnet_id}\"",
      "     container_network_type= \"overlay_l2\"",
      "     authentication_mode = \"rbac\"",
      "     description= \"Create cluster\"",
      "    }",
      "```",
      "",
      "## Argument Reference",
      "",
      "The following arguments are supported:",
      "",
      "",
      "* `name` - (Required) Cluster name. Changing this parameter will create a new cluster resource.",
      "",
      "* `labels` - (Optional) Cluster tag, key/value pair format. Changing this parameter will create a new cluster resource.",
      "",
      "* `annotations` - (Optional) Cluster annotation, key/value pair format. Changing this parameter will create a new cluster resource.",
      "",
      "* `flavor_id` - (Required) Cluster specifications. Changing this parameter will create a new cluster resource.",
      "",
      "\t* `cce.s1.small` - small-scale single cluster (up to 50 nodes).",
      "\t* `cce.s1.medium` - medium-scale single cluster (up to 200 nodes).",
      "\t* `cce.s1.large` - large-scale single cluster (up to 1000 nodes).",
      "\t* `cce.s2.small` - small-scale HA cluster (up to 50 nodes).",
      "\t* `cce.s2.medium` - medium-scale HA cluster (up to 200 nodes).",
      "\t* `cce.s2.large` - large-scale HA cluster (up to 1000 nodes).",
      "\t* `cce.t1.small` - small-scale single physical machine cluster (up to 10 nodes).",
      "\t* `cce.t1.medium` - medium-scale single physical machine cluster (up to 100 nodes).",
      "\t* `cce.t1.large` - large-scale single physical machine cluster (up to 500 nodes).",
      "\t* `cce.t2.small` - small-scale HA physical machine cluster (up to 10 nodes).",
      "\t* `cce.t2.medium` - medium-scale HA physical machine cluster (up to 100 nodes).",
      "\t* `cce.t2.large` - large-scale HA physical machine cluster (up to 500 nodes).",
      "",
      "* `cluster_version` - (Optional) For the cluster version, possible values are v1.9.2-r2 or v1.11.3-r1. Changing this parameter will create a new cluster resource.",
      "    [OTC-API](https://docs.otc.t-systems.com/en-us/api2/cce/cce_02_0236.html)",
      "",
      "* `cluster_type` - (Required) Cluster Type, possible values are VirtualMachine and BareMetal. Changing this parameter will create a new cluster resource.",
      "",
      "* `description` - (Optional) Cluster description.",
      "",
      "* `billing_mode` - (Optional) Charging mode of the cluster, which is 0 (on demand). Changing this parameter will create a new cluster resource.",
      "",
      "* `extend_param` - (Optional) Extended parameter. Changing this parameter will create a new cluster resource.",
      "",
      "* `vpc_id` - (Required) The ID of the VPC used to create the node. Changing this parameter will create a new cluster resource.",
      "",
      "* `subnet_id` - (Required) The ID of the subnet used to create the node. Changing this parameter will create a new cluster resource.",
      "",
      "* `highway_subnet_id` - (Optional) The ID of the high speed network used to create bare metal nodes. Changing this parameter will create a new cluster resource.",
      "",
      "* `container_network_type` - (Required) Container network type.",
      "",
      "\t* `overlay_l2` - An overlay_l2 network built for containers by using Open vSwitch(OVS)",
      "\t* `underlay_ipvlan` - An underlay_ipvlan network built for bare metal servers by using ipvlan.",
      "\t* `vpc-router` - An vpc-router network built for containers by using ipvlan and custom VPC routes.",
      "",
      "* `container_network_cidr` - (Optional) Container network segment. Changing this parameter will create a new cluster resource.",
      "",
      "* `authentication_mode` - (Optional) Authentication mode of the cluster, possible values are x509 and rbac. Defaults to x509.",
      "    Changing this parameter will create a new cluster resource.",
      "",
      "## Attributes Reference",
      "",
      "All above argument parameters can be exported as attribute parameters along with attribute reference.",
      "",
      "  * `id` -  Id of the cluster resource.",
      "",
      "  * `status` -  Cluster status information.",
      "  ",
      "  * `internal` - The internal network address.",
      "  ",
      "  * `external` - The external network address.",
      "  ",
      "  * `external_otc` - The endpoint of the cluster to be accessed through API Gateway.",
      "",
      "## Import",
      "",
      " Cluster can be imported using the cluster id, e.g.",
      " "
    ]
  },
  "opentelekomcloud-resource-cce_node_v3": {
    "description": "Defines cce_node_v3",
    "prefix": "tf-opentelekomcloud-resource-cce_node_v3",
    "body": [
      "   variable \"cluster_id\" { }",
      "   variable \"ssh_key\" { }",
      "   variable \"availability_zone\" { }",
      "",
      "   resource \"opentelekomcloud_cce_node_v3\" \"node_1\" {",
      "     cluster_id=\"${var.cluster_id}\"",
      "     name = \"node1\"",
      "     flavor_id=\"s1.medium\"",
      "     iptype=\"5_bgp\"",
      "     availability_zone= \"${var.availability_zone}\"",
      "     key_pair=\"${var.ssh_key}\"",
      "     root_volume {",
      "       size= 40",
      "       volumetype= \"SATA\"",
      "     }",
      "     sharetype= \"PER\"",
      "     bandwidth_size= 100",
      "     data_volumes {",
      "       size= 100",
      "       volumetype= \"SATA\"",
      "     }",
      "  }"
    ]
  },
  "opentelekomcloud-resource-ces_alarmrule": {
    "description": "Defines ces_alarmrule",
    "prefix": "tf-opentelekomcloud-resource-ces_alarmrule",
    "body": [
      "resource \"opentelekomcloud_ces_alarmrule\" \"alarm_rule\" {",
      "  \"alarm_name\" = \"alarm_rule\"",
      "  \"metric\" {",
      "    \"namespace\" = \"SYS.ECS\"",
      "    \"metric_name\" = \"network_outgoing_bytes_rate_inband\"",
      "    \"dimensions\" {",
      "        \"name\" = \"instance_id\"",
      "        \"value\" = \"${opentelekomcloud_compute_instance_v2.webserver.id}\"",
      "    }",
      "  }",
      "  \"condition\"  {",
      "    \"period\" = 300",
      "    \"filter\" = \"average\"",
      "    \"comparison_operator\" = \">\"",
      "    \"value\" = 6",
      "    \"unit\" = \"B/s\"",
      "    \"count\" = 1",
      "  }",
      "  \"alarm_actions\" {",
      "    \"type\" = \"notification\"",
      "    \"notification_list\" = [",
      "      \"${opentelekomcloud_smn_topic_v2.topic.id}\"",
      "    ]",
      "  }",
      "  \"alarm_actions\" {",
      "    \"type\" = \"notification\"",
      "    \"notification_list\" = [",
      "      \"${opentelekomcloud_smn_topic_v2.topic_2.id}\"",
      "    ]",
      "  }",
      "}"
    ]
  },
  "opentelekomcloud-resource-compute_bms_server_v2": {
    "description": "Defines compute_bms_server_v2",
    "prefix": "tf-opentelekomcloud-resource-compute_bms_server_v2",
    "body": [
      "variable \"image_id\" {}",
      "variable \"flavor_id\" {}",
      "variable \"keypair_name\" {}",
      "variable \"network_id\" {}",
      "variable \"availability_zone\" {}",
      "",
      "resource \"opentelekomcloud_compute_bms_server_v2\" \"basic\" {",
      "  name            = \"basic\"",
      "  image_id        = \"${var.image_id}\"",
      "  flavor_id       = \"${var.flavor_id}\"",
      "  key_pair        = \"${var.keypair_name}\"",
      "  security_groups = [\"default\"]",
      "  availability_zone = \"${var.availability_zone}\"",
      "",
      "  metadata = {",
      "    this = \"that\"",
      "  }",
      "",
      "  network {",
      "    uuid = \"${var.network_id}\"",
      "  }",
      "}"
    ]
  },
  "opentelekomcloud-resource-compute_bms_tags_v2": {
    "description": "Defines compute_bms_tags_v2",
    "prefix": "tf-opentelekomcloud-resource-compute_bms_tags_v2",
    "body": [
      "       variable \"bms_id\" { }",
      "",
      "       resource \"opentelekomcloud_compute_bms_tags_v2\" \"add_tags\" ",
      "       {",
      "\t\t    server_id = \"${var.bms_id}\",",
      "\t\t    tags = [",
      "                     \"tags__type_baremetal\"",
      "                   ]",
      "       }"
    ]
  },
  "opentelekomcloud-resource-compute_floatingip_associate_v2": {
    "description": "Defines compute_floatingip_associate_v2",
    "prefix": "tf-opentelekomcloud-resource-compute_floatingip_associate_v2",
    "body": [
      "resource \"opentelekomcloud_compute_instance_v2\" \"instance_1\" {",
      "  name            = \"instance_1\"",
      "  image_id        = \"ad091b52-742f-469e-8f3c-fd81cadf0743\"",
      "  flavor_id       = 3",
      "  key_pair        = \"my_key_pair_name\"",
      "  security_groups = [\"default\"]",
      "}",
      "",
      "resource \"opentelekomcloud_networking_floatingip_v2\" \"fip_1\" {",
      "  pool = \"admin_external_net\"",
      "}",
      "",
      "resource \"opentelekomcloud_compute_floatingip_associate_v2\" \"fip_1\" {",
      "  floating_ip = \"${opentelekomcloud_networking_floatingip_v2.fip_1.address}\"",
      "  instance_id = \"${opentelekomcloud_compute_instance_v2.instance_1.id}\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-compute_floatingip_v2": {
    "description": "Defines compute_floatingip_v2",
    "prefix": "tf-opentelekomcloud-resource-compute_floatingip_v2",
    "body": [
      "resource \"opentelekomcloud_compute_floatingip_v2\" \"floatip_1\" {",
      "}"
    ]
  },
  "opentelekomcloud-resource-compute_instance_v2": {
    "description": "Defines compute_instance_v2",
    "prefix": "tf-opentelekomcloud-resource-compute_instance_v2",
    "body": [
      "resource \"opentelekomcloud_compute_instance_v2\" \"basic\" {",
      "  name            = \"basic\"",
      "  image_id        = \"ad091b52-742f-469e-8f3c-fd81cadf0743\"",
      "  flavor_id       = \"3\"",
      "  key_pair        = \"my_key_pair_name\"",
      "  security_groups = [\"default\"]",
      "  tag = {",
      "    foo = \"bar\"",
      "    key = \"value\"",
      "  }",
      "",
      "  metadata = {",
      "    this = \"that\"",
      "  }",
      "",
      "  network {",
      "    name = \"my_network\"",
      "  }",
      "}"
    ]
  },
  "opentelekomcloud-resource-compute_keypair_v2": {
    "description": "Defines compute_keypair_v2",
    "prefix": "tf-opentelekomcloud-resource-compute_keypair_v2",
    "body": [
      "resource \"opentelekomcloud_compute_keypair_v2\" \"test-keypair\" {",
      "  name       = \"my-keypair\"",
      "  public_key = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDAjpC1hwiOCCmKEWxJ4qzTTsJbKzndLotBCz5PcwtUnflmU+gHJtWMZKpuEGVi29h0A/+ydKek1O18k10Ff+4tyFjiHDQAnOfgWf7+b1yK+qDip3X1C0UPMbwHlTfSGWLGZqd9LvEFx9k3h/M+VtMvwR1lJ9LUyTAImnNjWG7TaIPmui30HvM2UiFEmqkr4ijq45MyX2+fLIePLRIF61p4whjHAQYufqyno3BS48icQb4p6iVEZPo4AE2o9oIyQvj2mx4dk5Y8CgSETOZTYDOR3rU2fZTRDRgPJDH9FWvQjF5tA0p3d9CoWWd2s6GKKbfoUIi8R/Db1BSPJwkqB\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-compute_secgroup_v2": {
    "description": "Defines compute_secgroup_v2",
    "prefix": "tf-opentelekomcloud-resource-compute_secgroup_v2",
    "body": [
      "resource \"opentelekomcloud_compute_secgroup_v2\" \"secgroup_1\" {",
      "  name        = \"my_secgroup\"",
      "  description = \"my security group\"",
      "",
      "  rule {",
      "    from_port   = 22",
      "    to_port     = 22",
      "    ip_protocol = \"tcp\"",
      "    cidr        = \"0.0.0.0/0\"",
      "  }",
      "",
      "  rule {",
      "    from_port   = 80",
      "    to_port     = 80",
      "    ip_protocol = \"tcp\"",
      "    cidr        = \"0.0.0.0/0\"",
      "  }",
      "}"
    ]
  },
  "opentelekomcloud-resource-compute_servergroup_v2": {
    "description": "Defines compute_servergroup_v2",
    "prefix": "tf-opentelekomcloud-resource-compute_servergroup_v2",
    "body": [
      "resource \"opentelekomcloud_compute_servergroup_v2\" \"test-sg\" {",
      "  name     = \"my-sg\"",
      "  policies = [\"anti-affinity\"]",
      "}"
    ]
  },
  "opentelekomcloud-resource-compute_volume_attach_v2": {
    "description": "Defines compute_volume_attach_v2",
    "prefix": "tf-opentelekomcloud-resource-compute_volume_attach_v2",
    "body": [
      "resource \"opentelekomcloud_blockstorage_volume_v2\" \"volume_1\" {",
      "  name = \"volume_1\"",
      "  size = 1",
      "}",
      "",
      "resource \"opentelekomcloud_compute_instance_v2\" \"instance_1\" {",
      "  name            = \"instance_1\"",
      "  security_groups = [\"default\"]",
      "}",
      "",
      "resource \"opentelekomcloud_compute_volume_attach_v2\" \"va_1\" {",
      "  instance_id = \"${opentelekomcloud_compute_instance_v2.instance_1.id}\"",
      "  volume_id   = \"${opentelekomcloud_blockstorage_volume_v2.volume_1.id}\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-csbs_backup_policy_v1": {
    "description": "Defines csbs_backup_policy_v1",
    "prefix": "tf-opentelekomcloud-resource-csbs_backup_policy_v1",
    "body": [
      " variable \"name\" { }",
      " variable \"id\" { }",
      " variable \"resource_name\" { }",
      " ",
      " resource \"opentelekomcloud_csbs_backup_policy_v1\" \"backup_policy_v1\" {",
      "   name            = \"${var.name}\"",
      "   resource {",
      "     id = \"${var.id}\"",
      "     type = \"OS::Nova::Server\"",
      "     name = \"${var.resource_name}\"",
      "   }",
      "   scheduled_operation {",
      "     enabled = true",
      "     operation_type =\"backup\"",
      "     trigger_pattern = \"BEGIN:VCALENDAR\\r\\nBEGIN:VEVENT\\r\\nRRULE:FREQ=WEEKLY;BYDAY=TH;BYHOUR=12;BYMINUTE=27\\r\\nEND:VEVENT\\r\\nEND:VCALENDAR\\r\\n\"",
      "   }",
      " }",
      ""
    ]
  },
  "opentelekomcloud-resource-csbs_backup_v1": {
    "description": "Defines csbs_backup_v1",
    "prefix": "tf-opentelekomcloud-resource-csbs_backup_v1",
    "body": [
      " variable \"backup_name\" { }",
      " variable \"resource_id\" { }",
      " ",
      " resource \"opentelekomcloud_csbs_backup_v1\" \"backup_v1\" {",
      "   backup_name = \"${var.backup_name}\"",
      "   resource_id = \"${var.resource_id}\"",
      "   resource_type = \"OS::Nova::Server\"",
      " }",
      ""
    ]
  },
  "opentelekomcloud-resource-css_cluster_v1": {
    "description": "Defines css_cluster_v1",
    "prefix": "tf-opentelekomcloud-resource-css_cluster_v1",
    "body": [
      "resource \"opentelekomcloud_networking_secgroup_v2\" \"secgroup\" {",
      "  name = \"terraform_test_security_group\"",
      "  description = \"terraform security group acceptance test\"",
      "}",
      "",
      "resource \"opentelekomcloud_css_cluster_v1\" \"cluster\" {",
      "  expect_node_num = 1",
      "  name = \"terraform_test_cluster\"",
      "  node_config {",
      "    flavor = \"css.medium.8\"",
      "    network_info {",
      "      security_group_id = \"${opentelekomcloud_networking_secgroup_v2.secgroup.id}\"",
      "      network_id = \"{{ network_id }}\"",
      "      vpc_id = \"{{ vpc_id }}\"",
      "    }",
      "    volume {",
      "      volume_type = \"COMMON\"",
      "      size = 40",
      "    }",
      "    availability_zone = \"{{ availability_zone }}\"",
      "  }",
      "}"
    ]
  },
  "opentelekomcloud-resource-cts_tracker_v1": {
    "description": "Defines cts_tracker_v1",
    "prefix": "tf-opentelekomcloud-resource-cts_tracker_v1",
    "body": [
      " variable \"bucket_name\" { }",
      " variable \"topic_id\" { }",
      " ",
      " resource \"opentelekomcloud_cts_tracker_v1\" \"tracker_v1\" {",
      "   bucket_name      = \"${var.bucket_name}\"",
      "   file_prefix_name      = \"yO8Q\"",
      "   is_support_smn = true",
      "   topic_id = \"${var.topic_id}\"",
      "   is_send_all_key_operation = false",
      "   operations = [\"login\"]",
      "   need_notify_user_list = [\"user1\"]",
      " }",
      ""
    ]
  },
  "opentelekomcloud-resource-dcs_instance_v1": {
    "description": "Defines dcs_instance_v1",
    "prefix": "tf-opentelekomcloud-resource-dcs_instance_v1",
    "body": [
      "       resource \"opentelekomcloud_networking_secgroup_v2\" \"secgroup_1\" {",
      "         name = \"secgroup_1\"",
      "         description = \"secgroup_1\"",
      "       }",
      "       data \"opentelekomcloud_dcs_az_v1\" \"az_1\" {",
      "         port = \"8002\"",
      "\t\t}",
      "       data \"opentelekomcloud_dcs_product_v1\" \"product_1\" {",
      "          spec_code = \"dcs.master_standby\"",
      "\t\t}",
      "\t\tresource \"opentelekomcloud_dcs_instance_v1\" \"instance_1\" {",
      "\t\t  name  = \"test_dcs_instance\"",
      "          engine_version = \"3.0.7\"",
      "          password = \"Huawei_test\"",
      "          engine = \"Redis\"",
      "          capacity = 2",
      "          vpc_id = \"1477393a-29c9-4de5-843f-18ef51257c7e\"",
      "          security_group_id = \"${opentelekomcloud_networking_secgroup_v2.secgroup_1.id}\"",
      "          subnet_id = \"27d99e17-42f2-4751-818f-5c8c6c03ff15\"",
      "          available_zones = [\"${data.opentelekomcloud_dcs_az_v1.az_1.id}\"]",
      "          product_id = \"${data.opentelekomcloud_dcs_product_v1.product_1.id}\"",
      "          save_days = 1",
      "          backup_type = \"manual\"",
      "          begin_at = \"00:00-01:00\"",
      "          period_type = \"weekly\"",
      "          backup_at = [1]",
      "          depends_on = [\"data.opentelekomcloud_dcs_product_v1.product_1\", \"opentelekomcloud_networking_secgroup_v2.secgroup_1\"]",
      "\t\t}"
    ]
  },
  "opentelekomcloud-resource-deh_host_v1": {
    "description": "Defines deh_host_v1",
    "prefix": "tf-opentelekomcloud-resource-deh_host_v1",
    "body": [
      "",
      "## Argument Reference",
      "",
      "The following arguments are supported:",
      "",
      "* `name` (Required) - The name of the Dedicated Host.",
      "",
      "* `auto_placement` (Optional) - Allows a instance to be automatically placed onto the available Dedicated Hosts. The default value is **on**.",
      "",
      "* `availability_zone` (Required) - The Availability Zone to which the Dedicated Host belongs. Changing this parameter creates a new resource.",
      "",
      "* `host_type` (Required) - The Dedicated Host type. Expected values are **h1, general** and **d1**. Changing this parameter creates a new resource.",
      "",
      "",
      "## Attributes Reference",
      "",
      "In addition to all arguments above, the following attributes are exported:",
      "",
      "* `status` - Specifies the Dedicated Host status.",
      "",
      "* `available_vcpus` - The number of available vCPUs for the Dedicated Host.",
      "",
      "* `available_memory` - The size of available memory for the Dedicated Host.",
      "",
      "* `instance_total` - The number of the placed VMs.",
      "",
      "* `instance_uuids` - The VMs started on the Dedicated Host.",
      "",
      "* `host_type_name` -  The name of the Dedicated Host type.",
      "",
      "* `vcpus` - The number of host vCPUs.",
      "",
      "* `cores` -  The number of host physical cores.",
      "",
      "* `sockets` -  The number of host physical sockets.",
      "",
      "* `memory` - The size of host physical memory (MB).",
      "",
      "* `available_instance_capacities` - The VM flavors placed on the Dedicated Host.",
      "",
      "## Import",
      "",
      "DeH can be imported using the `dedicated_host_id`, e.g."
    ]
  },
  "opentelekomcloud-resource-dms_group_v1": {
    "description": "Defines dms_group_v1",
    "prefix": "tf-opentelekomcloud-resource-dms_group_v1",
    "body": [
      "resource \"opentelekomcloud_dms_group_v1\" \"queue_1\" {",
      "  name  = \"queue_1\"",
      "  description  = \"test create dms queue\"",
      "  queue_mode  = \"FIFO\"",
      "  redrive_policy  = \"enable\"",
      "  max_consume_count = 80",
      "}",
      "",
      "resource \"opentelekomcloud_dms_group_v1\" \"group_1\" {",
      "  name = \"group_1\"",
      "  queue_id = \"${opentelekomcloud_dms_queue_v1.queue_1.id}\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-dms_queue_v1": {
    "description": "Defines dms_queue_v1",
    "prefix": "tf-opentelekomcloud-resource-dms_queue_v1",
    "body": [
      "resource \"opentelekomcloud_dms_queue_v1\" \"queue_1\" {",
      "  name  = \"queue_1\"",
      "  description  = \"test create dms queue\"",
      "  queue_mode  = \"FIFO\"",
      "  redrive_policy  = \"enable\"",
      "  max_consume_count = 80",
      "}"
    ]
  },
  "opentelekomcloud-resource-dns_recordset_v2": {
    "description": "Defines dns_recordset_v2",
    "prefix": "tf-opentelekomcloud-resource-dns_recordset_v2",
    "body": [
      "resource \"opentelekomcloud_dns_zone_v2\" \"example_zone\" {",
      "  name = \"example.com.\"",
      "  email = \"email2@example.com\"",
      "  description = \"a zone\"",
      "  ttl = 6000",
      "  type = \"PRIMARY\"",
      "}",
      "",
      "resource \"opentelekomcloud_dns_recordset_v2\" \"rs_example_com\" {",
      "  zone_id = \"${opentelekomcloud_dns_zone_v2.example_zone.id}\"",
      "  name = \"rs.example.com.\"",
      "  description = \"An example record set\"",
      "  ttl = 3000",
      "  type = \"A\"",
      "  records = [\"10.0.0.1\"]",
      "}"
    ]
  },
  "opentelekomcloud-resource-dns_zone_v2": {
    "description": "Defines dns_zone_v2",
    "prefix": "tf-opentelekomcloud-resource-dns_zone_v2",
    "body": [
      "resource \"opentelekomcloud_dns_zone_v2\" \"public_example_com\" {",
      "  name = \"public.example.com.\"",
      "  email = \"public@example.com\"",
      "  description = \"An example for public zone\"",
      "  ttl = 3000",
      "  type = \"public\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-elb_backend": {
    "description": "Defines elb_backend",
    "prefix": "tf-opentelekomcloud-resource-elb_backend",
    "body": [
      "resource \"opentelekomcloud_elb_loadbalancer\" \"elb\" {",
      "  name = \"elb\"",
      "  type = \"External\"",
      "  description = \"test elb\"",
      "  vpc_id = \"e346dc4a-d9a6-46f4-90df-10153626076e\"",
      "  admin_state_up = 1",
      "  bandwidth = 5",
      "}",
      "",
      "resource \"opentelekomcloud_elb_listener\" \"listener\" {",
      "  name = \"test-elb-listener\"",
      "  description = \"great listener\"",
      "  protocol = \"TCP\"",
      "  backend_protocol = \"TCP\"",
      "  protocol_port = 12345",
      "  backend_port = 8080",
      "  lb_algorithm = \"roundrobin\"",
      "  loadbalancer_id = \"${opentelekomcloud_elb_loadbalancer.elb.id}\"",
      "  timeouts {",
      "\tcreate = \"5m\"",
      "\tupdate = \"5m\"",
      "\tdelete = \"5m\"",
      "  }",
      "}",
      "",
      "resource \"opentelekomcloud_elb_backend\" \"backend\" {",
      "  address = \"192.168.0.211\"",
      "  listener_id = \"${opentelekomcloud_elb_listener.listener.id}\"",
      "  server_id = \"8f7a32f1-f66c-4d13-9b17-3a13f9f0bb8d\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-elb_health": {
    "description": "Defines elb_health",
    "prefix": "tf-opentelekomcloud-resource-elb_health",
    "body": [
      "resource \"opentelekomcloud_elb_loadbalancer\" \"elb\" {",
      "  name = \"elb\"",
      "  type = \"External\"",
      "  description = \"test elb\"",
      "  vpc_id = \"e346dc4a-d9a6-46f4-90df-10153626076e\"",
      "  admin_state_up = 1",
      "  bandwidth = 5",
      "}",
      "",
      "resource \"opentelekomcloud_elb_listener\" \"listener\" {",
      "  name = \"test-elb-listener\"",
      "  description = \"great listener\"",
      "  protocol = \"TCP\"",
      "  backend_protocol = \"TCP\"",
      "  protocol_port = 12345",
      "  backend_port = 8080",
      "  lb_algorithm = \"roundrobin\"",
      "  loadbalancer_id = \"${opentelekomcloud_elb_loadbalancer.elb.id}\"",
      "  timeouts {",
      "\tcreate = \"5m\"",
      "\tupdate = \"5m\"",
      "\tdelete = \"5m\"",
      "  }",
      "}",
      "",
      "resource \"opentelekomcloud_elb_health\" \"healthcheck\" {",
      "  listener_id = \"${opentelekomcloud_elb_listener.listener.id}\"",
      "  healthcheck_protocol = \"TCP\"",
      "  healthcheck_connect_port = 22",
      "  healthy_threshold = 5",
      "  healthcheck_timeout = 25",
      "  healthcheck_interval = 3",
      "  timeouts {",
      "    create = \"5m\"",
      "    update = \"5m\"",
      "    delete = \"5m\"",
      "  }",
      "}"
    ]
  },
  "opentelekomcloud-resource-elb_listener": {
    "description": "Defines elb_listener",
    "prefix": "tf-opentelekomcloud-resource-elb_listener",
    "body": [
      "resource \"opentelekomcloud_elb_loadbalancer\" \"elb\" {",
      "  name = \"elb\"",
      "  type = \"External\"",
      "  description = \"test elb\"",
      "  vpc_id = \"e346dc4a-d9a6-46f4-90df-10153626076e\"",
      "  admin_state_up = 1",
      "  bandwidth = 5",
      "}",
      "",
      "resource \"opentelekomcloud_elb_listener\" \"listener\" {",
      "  name = \"test-elb-listener\"",
      "  description = \"great listener\"",
      "  protocol = \"TCP\"",
      "  backend_protocol = \"TCP\"",
      "  protocol_port = 12345",
      "  backend_port = 8080",
      "  lb_algorithm = \"roundrobin\"",
      "  loadbalancer_id = \"${opentelekomcloud_elb_loadbalancer.elb.id}\"",
      "  timeouts {",
      "\tcreate = \"5m\"",
      "\tupdate = \"5m\"",
      "\tdelete = \"5m\"",
      "  }",
      "}"
    ]
  },
  "opentelekomcloud-resource-elb_loadbalancer": {
    "description": "Defines elb_loadbalancer",
    "prefix": "tf-opentelekomcloud-resource-elb_loadbalancer",
    "body": [
      "resource \"opentelekomcloud_elb_loadbalancer\" \"elb\" {",
      "  name = \"elb\"",
      "  type = \"External\"",
      "  description = \"test elb\"",
      "  vpc_id = \"e346dc4a-d9a6-46f4-90df-10153626076e\"",
      "  admin_state_up = 1",
      "  bandwidth = 5",
      "}"
    ]
  },
  "opentelekomcloud-resource-fw_firewall_group_v2": {
    "description": "Defines fw_firewall_group_v2",
    "prefix": "tf-opentelekomcloud-resource-fw_firewall_group_v2",
    "body": [
      "resource \"opentelekomcloud_fw_rule_v2\" \"rule_1\" {",
      "  name             = \"my-rule-1\"",
      "  description      = \"drop TELNET traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"tcp\"",
      "  destination_port = \"23\"",
      "  enabled          = \"true\"",
      "}",
      "",
      "resource \"opentelekomcloud_fw_rule_v2\" \"rule_2\" {",
      "  name             = \"my-rule-2\"",
      "  description      = \"drop NTP traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"udp\"",
      "  destination_port = \"123\"",
      "  enabled          = \"false\"",
      "}",
      "",
      "resource \"opentelekomcloud_fw_policy_v2\" \"policy_1\" {",
      "  name = \"my-policy\"",
      "",
      "  rules = [\"${opentelekomcloud_fw_rule_v2.rule_1.id}\",",
      "    \"${opentelekomcloud_fw_rule_v2.rule_2.id}\",",
      "  ]",
      "}",
      "",
      "resource \"opentelekomcloud_fw_firewall_group_v2\" \"firewall_group_1\" {",
      "  name      = \"my-firewall-group\"",
      "  ingress_policy_id = \"${opentelekomcloud_fw_policy_v2.policy_1.id}\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-fw_policy_v2": {
    "description": "Defines fw_policy_v2",
    "prefix": "tf-opentelekomcloud-resource-fw_policy_v2",
    "body": [
      "resource \"opentelekomcloud_fw_rule_v2\" \"rule_1\" {",
      "  name             = \"my-rule-1\"",
      "  description      = \"drop TELNET traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"tcp\"",
      "  destination_port = \"23\"",
      "  enabled          = \"true\"",
      "}",
      "",
      "resource \"opentelekomcloud_fw_rule_v2\" \"rule_2\" {",
      "  name             = \"my-rule-2\"",
      "  description      = \"drop NTP traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"udp\"",
      "  destination_port = \"123\"",
      "  enabled          = \"false\"",
      "}",
      "",
      "resource \"opentelekomcloud_fw_policy_v2\" \"policy_1\" {",
      "  name = \"my-policy\"",
      "",
      "  rules = [\"${opentelekomcloud_fw_rule_v2.rule_1.id}\",",
      "    \"${opentelekomcloud_fw_rule_v2.rule_2.id}\",",
      "  ]",
      "}"
    ]
  },
  "opentelekomcloud-resource-fw_rule_v2": {
    "description": "Defines fw_rule_v2",
    "prefix": "tf-opentelekomcloud-resource-fw_rule_v2",
    "body": [
      "resource \"opentelekomcloud_fw_rule_v2\" \"rule_1\" {",
      "  name             = \"my_rule\"",
      "  description      = \"drop TELNET traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"tcp\"",
      "  destination_port = \"23\"",
      "  enabled          = \"true\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-identity_agency_v3": {
    "description": "Defines identity_agency_v3",
    "prefix": "tf-opentelekomcloud-resource-identity_agency_v3",
    "body": [
      "resource \"opentelekomcloud_identity_agency_v3\" \"agency\" {",
      "  name = \"test_agency\"",
      "  description = \"test agency\"",
      "  delegated_domain_name = \"***\"",
      "  project_role = [",
      "    {",
      "      project = \"eu-de\"",
      "      roles = [",
      "        \"KMS Administrator\",",
      "      ]",
      "    }",
      "  ]",
      "  domain_roles = [",
      "      \"Anti-DDoS Administrator\",",
      "  ]",
      "}"
    ]
  },
  "opentelekomcloud-resource-identity_group_membership_v3": {
    "description": "Defines identity_group_membership_v3",
    "prefix": "tf-opentelekomcloud-resource-identity_group_membership_v3",
    "body": [
      "resource \"opentelekomcloud_identity_group_v3\" \"group_1\" {",
      "  name = \"group1\"",
      "  description = \"This is a test group\"",
      "}",
      "",
      "resource \"opentelekomcloud_identity_user_v3\" \"user_1\" {",
      "      name = \"user1\"",
      "      enabled = true",
      "      password = \"password12345!\"",
      "}",
      "",
      "resource \"opentelekomcloud_identity_user_v3\" \"user_2\" {",
      "      name = \"user2\"",
      "      enabled = true",
      "      password = \"password12345!\"",
      "}",
      "",
      "resource \"opentelekomcloud_identity_group_membership_v3\" \"membership_1\" {",
      "        group = \"${opentelekomcloud_identity_group_v3.group_1.id}\"",
      "        users = [\"${opentelekomcloud_identity_user_v3.user_1.id}\",",
      "                \"${opentelekomcloud_identity_user_v3.user_2.id}\"",
      "                ]",
      "}"
    ]
  },
  "opentelekomcloud-resource-identity_group_v3": {
    "description": "Defines identity_group_v3",
    "prefix": "tf-opentelekomcloud-resource-identity_group_v3",
    "body": [
      "resource \"opentelekomcloud_identity_group_v3\" \"group_1\" {",
      "  name = \"group_1\"",
      "  description = \"This is a test group\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-identity_project_v3": {
    "description": "Defines identity_project_v3",
    "prefix": "tf-opentelekomcloud-resource-identity_project_v3",
    "body": [
      "resource \"opentelekomcloud_identity_project_v3\" \"project_1\" {",
      "  name = \"eu-de_project1\"",
      "  description = \"This is a test project\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-identity_role_assignment_v3": {
    "description": "Defines identity_role_assignment_v3",
    "prefix": "tf-opentelekomcloud-resource-identity_role_assignment_v3",
    "body": [
      "resource \"opentelekomcloud_identity_project_v3\" \"project_1\" {",
      "  name = \"eu-de_project_1\"",
      "}",
      "",
      "resource \"opentelekomcloud_identity_group_v3\" \"group_1\" {",
      "  name = \"group_1\"",
      "}",
      "",
      "data \"opentelekomcloud_identity_role_v3\" \"role_1\" {",
      "  name = \"system_all_4\" #ECS admin",
      "}",
      "",
      "resource \"opentelekomcloud_identity_role_assignment_v3\" \"role_assignment_1\" {",
      "  group_id = \"${opentelekomcloud_identity_group_v3.group_1.id}\"",
      "  project_id = \"${opentelekomcloud_identity_project_v3.project_1.id}\"",
      "  role_id = \"${data.opentelekomcloud_identity_role_v3.role_1.id}\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-identity_role_v3": {
    "description": "Defines identity_role_v3",
    "prefix": "tf-opentelekomcloud-resource-identity_role_v3",
    "body": [
      "resource \"opentelekomcloud_identity_role_v3\" \"role\" {",
      "  description = \"role\"",
      "  display_name = \"custom_role\"",
      "  display_layer = \"domain\"",
      "  statement {",
      "    effect = \"Allow\"",
      "    action = [\"ecs:*:list*\"]",
      "  }",
      "}"
    ]
  },
  "opentelekomcloud-resource-identity_user_v3": {
    "description": "Defines identity_user_v3",
    "prefix": "tf-opentelekomcloud-resource-identity_user_v3",
    "body": [
      "resource \"opentelekomcloud_identity_user_v3\" \"user_1\" {",
      "  name = \"user_1\"",
      "  password = \"password123!\"",
      "",
      "}"
    ]
  },
  "opentelekomcloud-resource-images_image_v2": {
    "description": "Defines images_image_v2",
    "prefix": "tf-opentelekomcloud-resource-images_image_v2",
    "body": [
      "resource \"opentelekomcloud_images_image_v2\" \"rancheros\" {",
      "  name   = \"RancherOS\"",
      "  image_source_url = \"https://releases.rancher.com/os/latest/rancheros-openstack.img\"",
      "  container_format = \"bare\"",
      "  disk_format = \"qcow2\"",
      "  tags = [\"foo.bar\", \"tag.value\"]",
      "}"
    ]
  },
  "opentelekomcloud-resource-kms_key_v1": {
    "description": "Defines kms_key_v1",
    "prefix": "tf-opentelekomcloud-resource-kms_key_v1",
    "body": [
      "resource \"opentelekomcloud_kms_key_v1\" \"key_1\" {",
      "  key_alias       = \"key_1\"",
      "  pending_days    = \"7\"",
      "  key_description = \"first test key\"",
      "  realm           = \"cn-north-1\"",
      "  is_enabled      = true",
      "}"
    ]
  },
  "opentelekomcloud-resource-lb_listener_v2": {
    "description": "Defines lb_listener_v2",
    "prefix": "tf-opentelekomcloud-resource-lb_listener_v2",
    "body": [
      "resource \"opentelekomcloud_lb_listener_v2\" \"listener_1\" {",
      "  protocol        = \"HTTP\"",
      "  protocol_port   = 8080",
      "  loadbalancer_id = \"d9415786-5f1a-428b-b35f-2f1523e146d2\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-lb_loadbalancer_v2": {
    "description": "Defines lb_loadbalancer_v2",
    "prefix": "tf-opentelekomcloud-resource-lb_loadbalancer_v2",
    "body": [
      "resource \"opentelekomcloud_lb_loadbalancer_v2\" \"lb_1\" {",
      "  vip_subnet_id = \"d9415786-5f1a-428b-b35f-2f1523e146d2\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-lb_member_v2": {
    "description": "Defines lb_member_v2",
    "prefix": "tf-opentelekomcloud-resource-lb_member_v2",
    "body": [
      "resource \"opentelekomcloud_lb_member_v2\" \"member_1\" {",
      "  address       = \"192.168.199.23\"",
      "  protocol_port = 8080",
      "  pool_id       = POOL_ID",
      "  subnet_id     = SUBNET_ID",
      "}"
    ]
  },
  "opentelekomcloud-resource-lb_monitor_v2": {
    "description": "Defines lb_monitor_v2",
    "prefix": "tf-opentelekomcloud-resource-lb_monitor_v2",
    "body": [
      "resource \"opentelekomcloud_lb_monitor_v2\" \"monitor_1\" {",
      "  pool_id     = \"${opentelekomcloud_lb_pool_v2.pool_1.id}\"",
      "  type        = \"PING\"",
      "  delay       = 20",
      "  timeout     = 10",
      "  max_retries = 5",
      "}"
    ]
  },
  "opentelekomcloud-resource-lb_pool_v2": {
    "description": "Defines lb_pool_v2",
    "prefix": "tf-opentelekomcloud-resource-lb_pool_v2",
    "body": [
      "resource \"opentelekomcloud_lb_pool_v2\" \"pool_1\" {",
      "  protocol    = \"HTTP\"",
      "  lb_method   = \"ROUND_ROBIN\"",
      "  listener_id = \"d9415786-5f1a-428b-b35f-2f1523e146d2\"",
      "",
      "  persistence {",
      "    type        = \"HTTP_COOKIE\"",
      "    cookie_name = \"testCookie\"",
      "  }",
      "}"
    ]
  },
  "opentelekomcloud-resource-maas_task_v1": {
    "description": "Defines maas_task_v1",
    "prefix": "tf-opentelekomcloud-resource-maas_task_v1",
    "body": [
      "resource \"opentelekomcloud_maas_task_v1\" \"task_1\" {",
      "  description = \"migration task\"",
      "  enable_kms = true",
      "  thread_num = 1",
      "  src_node {",
      "    ak = \"AK\",",
      "\tsk = \"SK\",",
      "    object_key = \"123.txt\",",
      "    bucket = \"tommy-bucket\",",
      "  }",
      "  dst_node {",
      "    ak = \"AK\",",
      "    sk = \"SK\",",
      "    object_key = \"maas/\",",
      "    bucket = \"test-maas\",",
      "  }",
      "}"
    ]
  },
  "opentelekomcloud-resource-mrs_cluster_v1": {
    "description": "Defines mrs_cluster_v1",
    "prefix": "tf-opentelekomcloud-resource-mrs_cluster_v1",
    "body": [
      "resource \"opentelekomcloud_mrs_cluster_v1\" \"cluster1\" {",
      "  cluster_name = \"mrs-cluster\"",
      "  billing_type = 12",
      "  master_node_num = 2",
      "  core_node_num = 3",
      "  master_node_size = \"c2.4xlarge.linux\"",
      "  core_node_size = \"s1.xlarge.linux\"",
      "  available_zone_id = \"sa-chile-1a\"",
      "  vpc_id = \"51edfb75-f9f0-4bbc-b4dc-21466b93f60d\"",
      "  subnet_id = \"1d7a8646-43ee-455a-a3ab-40da87a1304c\"",
      "  cluster_version = \"MRS 1.6.0\"",
      "  master_data_volume_type = \"SATA\"",
      "  master_data_volume_size = 100",
      "  master_data_volume_count = 1",
      "  core_data_volume_type = \"SATA\"",
      "  core_data_volume_size = 100",
      "  core_data_volume_count = 2",
      "  safe_mode = 0",
      "  cluster_type = 0",
      "  node_public_cert_name = \"KeyPair-ci\"",
      "  cluster_admin_secret = \"\"",
      "  component_list {",
      "      component_name = \"Hadoop\"",
      "  }",
      "  component_list {",
      "      component_name = \"Spark\"",
      "  }",
      "  component_list {",
      "      component_name = \"Hive\"",
      "  }",
      "}"
    ]
  },
  "opentelekomcloud-resource-mrs_job_v1": {
    "description": "Defines mrs_job_v1",
    "prefix": "tf-opentelekomcloud-resource-mrs_job_v1",
    "body": [
      "",
      "resource \"opentelekomcloud_mrs_job_v1\" \"job1\" {",
      "  job_type = 1",
      "  job_name = \"test_mapreduce_job1\"",
      "  cluster_id = \"ef43d2ff-1ecf-4f13-bd0c-0004c429a058\"",
      "  jar_path = \"s3a://wordcount/program/hadoop-mapreduce-examples-2.7.5.jar\"",
      "  input = \"s3a://wordcount/input/\"",
      "  output = \"s3a://wordcount/output/\"",
      "  job_log = \"s3a://wordcount/log/\"",
      "  arguments = \"wordcount\"",
      "}",
      ""
    ]
  },
  "opentelekomcloud-resource-nat_gateway_v2": {
    "description": "Defines nat_gateway_v2",
    "prefix": "tf-opentelekomcloud-resource-nat_gateway_v2",
    "body": [
      "resource \"opentelekomcloud_nat_gateway_v2\" \"nat_1\" {",
      "  name   = \"Terraform\"",
      "  description = \"test for terraform2\"",
      "  spec = \"3\"",
      "  router_id = \"2c1fe4bd-ebad-44ca-ae9d-e94e63847b75\"",
      "  internal_network_id = \"dc8632e2-d9ff-41b1-aa0c-d455557314a0\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-nat_snat_rule_v2": {
    "description": "Defines nat_snat_rule_v2",
    "prefix": "tf-opentelekomcloud-resource-nat_snat_rule_v2",
    "body": [
      "resource \"opentelekomcloud_nat_snat_rule_v2\" \"snat_1\" {",
      "  nat_gateway_id = \"3c0dffda-7c76-452b-9dcc-5bce7ae56b17\"",
      "  network_id = \"dc8632e2-d9ff-41b1-aa0c-d455557314a0\"",
      "  floating_ip_id = \"0a166fc5-a904-42fb-b1ef-cf18afeeddca\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-networking_floatingip_associate_v2": {
    "description": "Defines networking_floatingip_associate_v2",
    "prefix": "tf-opentelekomcloud-resource-networking_floatingip_associate_v2",
    "body": [
      "resource \"opentelekomcloud_networking_port_v2\" \"port_1\" {",
      "  network_id = \"a5bbd213-e1d3-49b6-aed1-9df60ea94b9a\"",
      "}",
      "",
      "resource \"opentelekomcloud_networking_floatingip_associate_v2\" \"fip_1\" {",
      "  floating_ip = \"1.2.3.4\"",
      "  port_id = \"${opentelekomcloud_networking_port_v2.port_1.id}\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-networking_floatingip_v2": {
    "description": "Defines networking_floatingip_v2",
    "prefix": "tf-opentelekomcloud-resource-networking_floatingip_v2",
    "body": [
      "resource \"opentelekomcloud_networking_floatingip_v2\" \"floatip_1\" {",
      "}"
    ]
  },
  "opentelekomcloud-resource-networking_network_v2": {
    "description": "Defines networking_network_v2",
    "prefix": "tf-opentelekomcloud-resource-networking_network_v2",
    "body": [
      "resource \"opentelekomcloud_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"opentelekomcloud_networking_subnet_v2\" \"subnet_1\" {",
      "  name       = \"subnet_1\"",
      "  network_id = \"${opentelekomcloud_networking_network_v2.network_1.id}\"",
      "  cidr       = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "}",
      "",
      "resource \"opentelekomcloud_compute_secgroup_v2\" \"secgroup_1\" {",
      "  name        = \"secgroup_1\"",
      "  description = \"a security group\"",
      "",
      "  rule {",
      "    from_port   = 22",
      "    to_port     = 22",
      "    ip_protocol = \"tcp\"",
      "    cidr        = \"0.0.0.0/0\"",
      "  }",
      "}",
      "",
      "resource \"opentelekomcloud_networking_port_v2\" \"port_1\" {",
      "  name               = \"port_1\"",
      "  network_id         = \"${opentelekomcloud_networking_network_v2.network_1.id}\"",
      "  admin_state_up     = \"true\"",
      "  security_group_ids = [\"${opentelekomcloud_compute_secgroup_v2.secgroup_1.id}\"]",
      "",
      "  fixed_ip {",
      "    \"subnet_id\"  = \"${opentelekomcloud_networking_subnet_v2.subnet_1.id}\"",
      "    \"ip_address\" = \"192.168.199.10\"",
      "  }",
      "}",
      "",
      "resource \"opentelekomcloud_compute_instance_v2\" \"instance_1\" {",
      "  name            = \"instance_1\"",
      "  security_groups = [\"${opentelekomcloud_compute_secgroup_v2.secgroup_1.name}\"]",
      "",
      "  network {",
      "    port = \"${opentelekomcloud_networking_port_v2.port_1.id}\"",
      "  }",
      "}"
    ]
  },
  "opentelekomcloud-resource-networking_port_v2": {
    "description": "Defines networking_port_v2",
    "prefix": "tf-opentelekomcloud-resource-networking_port_v2",
    "body": [
      "resource \"opentelekomcloud_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"opentelekomcloud_networking_port_v2\" \"port_1\" {",
      "  name           = \"port_1\"",
      "  network_id     = \"${opentelekomcloud_networking_network_v2.network_1.id}\"",
      "  admin_state_up = \"true\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-networking_router_interface_v2": {
    "description": "Defines networking_router_interface_v2",
    "prefix": "tf-opentelekomcloud-resource-networking_router_interface_v2",
    "body": [
      "resource \"opentelekomcloud_networking_network_v2\" \"network_1\" {",
      "  name           = \"tf_test_network\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"opentelekomcloud_networking_subnet_v2\" \"subnet_1\" {",
      "  network_id = \"${opentelekomcloud_networking_network_v2.network_1.id}\"",
      "  cidr       = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "}",
      "",
      "resource \"opentelekomcloud_networking_router_v2\" \"router_1\" {",
      "  name             = \"my_router\"",
      "  external_gateway = \"f67f0d72-0ddf-11e4-9d95-e1f29f417e2f\"",
      "}",
      "",
      "resource \"opentelekomcloud_networking_router_interface_v2\" \"router_interface_1\" {",
      "  router_id = \"${opentelekomcloud_networking_router_v2.router_1.id}\"",
      "  subnet_id = \"${opentelekomcloud_networking_subnet_v2.subnet_1.id}\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-networking_router_route_v2": {
    "description": "Defines networking_router_route_v2",
    "prefix": "tf-opentelekomcloud-resource-networking_router_route_v2",
    "body": [
      "resource \"opentelekomcloud_networking_router_v2\" \"router_1\" {",
      "  name           = \"router_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"opentelekomcloud_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"opentelekomcloud_networking_subnet_v2\" \"subnet_1\" {",
      "  network_id = \"${opentelekomcloud_networking_network_v2.network_1.id}\"",
      "  cidr       = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "}",
      "",
      "resource \"opentelekomcloud_networking_router_interface_v2\" \"int_1\" {",
      "  router_id = \"${opentelekomcloud_networking_router_v2.router_1.id}\"",
      "  subnet_id = \"${opentelekomcloud_networking_subnet_v2.subnet_1.id}\"",
      "}",
      "",
      "resource \"opentelekomcloud_networking_router_route_v2\" \"router_route_1\" {",
      "  depends_on       = [\"opentelekomcloud_networking_router_interface_v2.int_1\"]",
      "  router_id        = \"${opentelekomcloud_networking_router_v2.router_1.id}\"",
      "  destination_cidr = \"10.0.1.0/24\"",
      "  next_hop         = \"192.168.199.254\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-networking_router_v2": {
    "description": "Defines networking_router_v2",
    "prefix": "tf-opentelekomcloud-resource-networking_router_v2",
    "body": [
      "resource \"opentelekomcloud_networking_router_v2\" \"router_1\" {",
      "  name             = \"my_router\"",
      "  external_gateway = \"f67f0d72-0ddf-11e4-9d95-e1f29f417e2f\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-networking_secgroup_rule_v2": {
    "description": "Defines networking_secgroup_rule_v2",
    "prefix": "tf-opentelekomcloud-resource-networking_secgroup_rule_v2",
    "body": [
      "resource \"opentelekomcloud_networking_secgroup_v2\" \"secgroup_1\" {",
      "  name        = \"secgroup_1\"",
      "  description = \"My neutron security group\"",
      "}",
      "",
      "resource \"opentelekomcloud_networking_secgroup_rule_v2\" \"secgroup_rule_1\" {",
      "  direction         = \"ingress\"",
      "  ethertype         = \"IPv4\"",
      "  protocol          = \"tcp\"",
      "  port_range_min    = 22",
      "  port_range_max    = 22",
      "  remote_ip_prefix  = \"0.0.0.0/0\"",
      "  security_group_id = \"${opentelekomcloud_networking_secgroup_v2.secgroup_1.id}\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-networking_secgroup_v2": {
    "description": "Defines networking_secgroup_v2",
    "prefix": "tf-opentelekomcloud-resource-networking_secgroup_v2",
    "body": [
      "resource \"opentelekomcloud_networking_secgroup_v2\" \"secgroup_1\" {",
      "  name        = \"secgroup_1\"",
      "  description = \"My neutron security group\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-networking_subnet_v2": {
    "description": "Defines networking_subnet_v2",
    "prefix": "tf-opentelekomcloud-resource-networking_subnet_v2",
    "body": [
      "resource \"opentelekomcloud_networking_network_v2\" \"network_1\" {",
      "  name           = \"tf_test_network\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"opentelekomcloud_networking_subnet_v2\" \"subnet_1\" {",
      "  network_id = \"${opentelekomcloud_networking_network_v2.network_1.id}\"",
      "  cidr       = \"192.168.199.0/24\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-networking_vip_associate_v2": {
    "description": "Defines networking_vip_associate_v2",
    "prefix": "tf-opentelekomcloud-resource-networking_vip_associate_v2",
    "body": [
      "resource \"opentelekomcloud_networking_network_v2\" \"network_1\" {",
      "  name = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"opentelekomcloud_networking_subnet_v2\" \"subnet_1\" {",
      "  name = \"subnet_1\"",
      "  cidr = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "  network_id = \"${opentelekomcloud_networking_network_v2.network_1.id}\"",
      "}",
      "",
      "resource \"opentelekomcloud_networking_router_interface_v2\" \"router_interface_1\" {",
      "  router_id = \"${opentelekomcloud_networking_router_v2.router_1.id}\"",
      "  subnet_id = \"${opentelekomcloud_networking_subnet_v2.subnet_1.id}\"",
      "}",
      "",
      "resource \"opentelekomcloud_networking_router_v2\" \"router_1\" {",
      "  name = \"router_1\"",
      "  external_gateway = \"0a2228f2-7f8a-45f1-8e09-9039e1d09975\"",
      "}",
      "",
      "resource \"opentelekomcloud_networking_port_v2\" \"port_1\" {",
      "  name = \"port_1\"",
      "  admin_state_up = \"true\"",
      "  network_id = \"${opentelekomcloud_networking_network_v2.network_1.id}\"",
      "",
      "  fixed_ip {",
      "    subnet_id =  \"${opentelekomcloud_networking_subnet_v2.subnet_1.id}\"",
      "  }",
      "}",
      "",
      "resource \"opentelekomcloud_compute_instance_v2\" \"instance_1\" {",
      "  name = \"instance_1\"",
      "  security_groups = [\"default\"]",
      "",
      "  network {",
      "    port = \"${opentelekomcloud_networking_port_v2.port_1.id}\"",
      "  }",
      "}",
      "",
      "resource \"opentelekomcloud_networking_port_v2\" \"port_2\" {",
      "  name = \"port_2\"",
      "  admin_state_up = \"true\"",
      "  network_id = \"${opentelekomcloud_networking_network_v2.network_1.id}\"",
      "",
      "  fixed_ip {",
      "    subnet_id =  \"${opentelekomcloud_networking_subnet_v2.subnet_1.id}\"",
      "  }",
      "}",
      "",
      "resource \"opentelekomcloud_compute_instance_v2\" \"instance_2\" {",
      "  name = \"instance_2\"",
      "  security_groups = [\"default\"]",
      "",
      "  network {",
      "    port = \"${opentelekomcloud_networking_port_v2.port_1.id}\"",
      "  }",
      "}",
      "",
      "resource \"opentelekomcloud_networking_vip_v2\" \"vip_1\" {",
      "  network_id = \"${opentelekomcloud_networking_network_v2.network_1.id}\"",
      "  subnet_id = \"${opentelekomcloud_networking_subnet_v2.subnet_1.id}\"",
      "}",
      "",
      "resource \"opentelekomcloud_networking_vip_associate_v2\" \"vip_associate_1\" {",
      "  vip_id = \"${opentelekomcloud_networking_vip_v2.vip_1.id}\"",
      "  port_ids = [\"${opentelekomcloud_networking_port_v2.port_1.id}\", \"${opentelekomcloud_networking_port_v2.port_2.id}\"]",
      "}"
    ]
  },
  "opentelekomcloud-resource-networking_vip_v2": {
    "description": "Defines networking_vip_v2",
    "prefix": "tf-opentelekomcloud-resource-networking_vip_v2",
    "body": [
      "resource \"opentelekomcloud_networking_network_v2\" \"network_1\" {",
      "  name = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"opentelekomcloud_networking_subnet_v2\" \"subnet_1\" {",
      "  name = \"subnet_1\"",
      "  cidr = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "  network_id = \"${opentelekomcloud_networking_network_v2.network_1.id}\"",
      "}",
      "",
      "resource \"opentelekomcloud_networking_router_interface_v2\" \"router_interface_1\" {",
      "  router_id = \"${opentelekomcloud_networking_router_v2.router_1.id}\"",
      "  subnet_id = \"${opentelekomcloud_networking_subnet_v2.subnet_1.id}\"",
      "}",
      "",
      "resource \"opentelekomcloud_networking_router_v2\" \"router_1\" {",
      "  name = \"router_1\"",
      "  external_gateway = \"0a2228f2-7f8a-45f1-8e09-9039e1d09975\"",
      "}",
      "",
      "resource \"opentelekomcloud_networking_vip_v2\" \"vip_1\" {",
      "  network_id = \"${opentelekomcloud_networking_network_v2.network_1.id}\"",
      "  subnet_id = \"${opentelekomcloud_networking_subnet_v2.subnet_1.id}\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-rds_instance_v1": {
    "description": "Defines rds_instance_v1",
    "prefix": "tf-opentelekomcloud-resource-rds_instance_v1",
    "body": [
      "data \"opentelekomcloud_rds_flavors_v1\" \"flavor\" {",
      "    datastore_name = \"PostgreSQL\"",
      "    datastore_version = \"9.5.5\"",
      "    speccode = \"rds.pg.s1.large.ha\"",
      "}",
      "",
      "resource \"opentelekomcloud_compute_secgroup_v2\" \"secgrp_rds\" {",
      "  name        = \"secgrp-rds-instance\"",
      "  description = \"Rds Security Group\"",
      "}",
      "",
      "resource \"opentelekomcloud_rds_instance_v1\" \"instance\" {",
      "  name = \"rds-instance\"",
      "  datastore {",
      "    type = \"PostgreSQL\"",
      "    version = \"9.5.5\"",
      "  }",
      "  flavorref = \"${data.opentelekomcloud_rds_flavors_v1.flavor.id}\"",
      "  volume {",
      "    type = \"COMMON\"",
      "    size = 200",
      "  }",
      "  availabilityzone = \"eu-de-01\"",
      "  vpc = \"c1095fe7-03df-4205-ad2d-6f4c181d436e\"",
      "  nics {",
      "    subnetid = \"b65f8d25-c533-47e2-8601-cfaa265a3e3e\"",
      "  }",
      "  securitygroup {",
      "    id = \"${opentelekomcloud_compute_secgroup_v2.secgrp_rds.id}\"",
      "  }",
      "  dbport = \"8635\"",
      "  backupstrategy {",
      "    starttime = \"04:00:00\"",
      "    keepdays = 4",
      "  }",
      "  dbrtpd = \"Huangwei!120521\"",
      "  ha {",
      "    enable = true",
      "    replicationmode = \"async\"",
      "  }",
      "  tag = {",
      "    foo = \"bar\"",
      "    key = \"value\"",
      "  }",
      "  depends_on = [\"opentelekomcloud_compute_secgroup_v2.secgrp_rds\"]",
      "}"
    ]
  },
  "opentelekomcloud-resource-rds_instance_v3": {
    "description": "Defines rds_instance_v3",
    "prefix": "tf-opentelekomcloud-resource-rds_instance_v3",
    "body": [
      "resource \"opentelekomcloud_networking_secgroup_v2\" \"secgroup\" {",
      "  name = \"terraform_test_security_group\"",
      "  description = \"terraform security group acceptance test\"",
      "}",
      "",
      "resource \"opentelekomcloud_rds_instance_v3\" \"instance\" {",
      "  availability_zone = [\"{{ availability_zone }}\"]",
      "  db {",
      "    password = \"Huangwei!120521\"",
      "    type = \"PostgreSQL\"",
      "    version = \"9.5\"",
      "    port = \"8635\"",
      "  }",
      "  name = \"terraform_test_rds_instance\"",
      "  security_group_id = \"${opentelekomcloud_networking_secgroup_v2.secgroup.id}\"",
      "  subnet_id = \"{{ subnet_id }}\"",
      "  vpc_id = \"{{ vpc_id }}\"",
      "  volume {",
      "    type = \"COMMON\"",
      "    size = 100",
      "  }",
      "  flavor = \"rds.pg.c2.medium\"",
      "  backup_strategy {",
      "    start_time = \"08:00-09:00\"",
      "    keep_days = 1",
      "  }",
      "}"
    ]
  },
  "opentelekomcloud-resource-rds_parametergroup_v3": {
    "description": "Defines rds_parametergroup_v3",
    "prefix": "tf-opentelekomcloud-resource-rds_parametergroup_v3",
    "body": [
      "",
      "resource \"opentelekomcloud_rds_parametergroup_v3\" \"pg_1\" {",
      "\tname = \"pg_1\"",
      "\tdescription = \"description_1\"",
      "\tvalues = {",
      "\t\tmax_connections = \"10\"",
      "\t\tautocommit = \"OFF\"",
      "\t}",
      "\tdatastore {",
      "\t\ttype = \"mysql\"",
      "\t\tversion = \"5.6\"",
      "\t}",
      "}",
      ""
    ]
  },
  "opentelekomcloud-resource-rts_software_config_v1": {
    "description": "Defines rts_software_config_v1",
    "prefix": "tf-opentelekomcloud-resource-rts_software_config_v1",
    "body": [
      "variable \"config_name\" {}",
      " ",
      "resource \"opentelekomcloud_rts_software_config_v1\" \"myconfig\" {",
      "  name = \"${var.config_name}\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-rts_software_deployment_v1": {
    "description": "Defines rts_software_deployment_v1",
    "prefix": "tf-opentelekomcloud-resource-rts_software_deployment_v1",
    "body": [
      " ",
      "variable \"config_id\" {}",
      "",
      "variable \"server_id\" {}",
      " ",
      "resource \"opentelekomcloud_rts_software_deployment_v1\" \"mydeployment\" {",
      "  config_id = \"${var.config_id}\"",
      "  server_id = \"${var.server_id}\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-rts_stack_v1": {
    "description": "Defines rts_stack_v1",
    "prefix": "tf-opentelekomcloud-resource-rts_stack_v1",
    "body": [
      " variable \"name\" { }",
      " variable \"network_id\" { }",
      " variable \"instance_type\" { }",
      " variable \"image_id\" { }",
      " ",
      "resource \"opentelekomcloud_rts_stack_v1\" \"mystack\" {",
      "  name = \"${var.name}\"",
      "  disable_rollback = true",
      "  timeout_mins=60",
      "  parameters = {",
      "      \"network_id\" = \"${var.network_id}\"",
      "      \"instance_type\" = \"${var.instance_type}\"",
      "      \"image_id\" = \"${var.image_id}\"",
      "    }",
      "  template_body = <<STACK",
      "  {",
      "    \"heat_template_version\": \"2016-04-08\",",
      "    \"description\": \"Simple template to deploy\",",
      "    \"parameters\": {",
      "        \"image_id\": {",
      "            \"type\": \"string\",",
      "            \"description\": \"Image to be used for compute instance\",",
      "            \"label\": \"Image ID\"",
      "        },",
      "        \"network_id\": {",
      "            \"type\": \"string\",",
      "            \"description\": \"The Network to be used\",",
      "            \"label\": \"Network UUID\"",
      "        },",
      "        \"instance_type\": {",
      "            \"type\": \"string\",",
      "            \"description\": \"Type of instance (Flavor) to be used\",",
      "            \"label\": \"Instance Type\"",
      "        }",
      "    },",
      "    \"resources\": {",
      "        \"my_instance\": {",
      "            \"type\": \"OS::Nova::Server\",",
      "            \"properties\": {",
      "                \"image\": {",
      "                    \"get_param\": \"image_id\"",
      "                },",
      "                \"flavor\": {",
      "                    \"get_param\": \"instance_type\"",
      "                },",
      "                \"networks\": [{",
      "                    \"network\": {",
      "                        \"get_param\": \"network_id\"",
      "                    }",
      "                }]",
      "            }",
      "        }",
      "    },",
      "    \"outputs\":  {",
      "      \"InstanceIP\":{",
      "        \"description\": \"Instance IP\",",
      "        \"value\": {  \"get_attr\": [\"my_instance\", \"first_address\"]  }",
      "      }",
      "    }",
      "}",
      "STACK",
      " }"
    ]
  },
  "opentelekomcloud-resource-s3_bucket": {
    "description": "Defines s3_bucket",
    "prefix": "tf-opentelekomcloud-resource-s3_bucket",
    "body": [
      "resource \"opentelekomcloud_s3_bucket\" \"b\" {",
      "  bucket = \"my-tf-test-bucket\"",
      "  acl    = \"private\"",
      "",
      "  tags = {",
      "    Name        = \"My bucket\"",
      "    Environment = \"Dev\"",
      "  }",
      "}"
    ]
  },
  "opentelekomcloud-resource-s3_bucket_object": {
    "description": "Defines s3_bucket_object",
    "prefix": "tf-opentelekomcloud-resource-s3_bucket_object",
    "body": [
      "resource \"opentelekomcloud_s3_bucket_object\" \"object\" {",
      "  bucket = \"your_bucket_name\"",
      "  key    = \"new_object_key\"",
      "  source = \"path/to/file\"",
      "  etag   = \"${md5(file(\"path/to/file\"))}\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-s3_bucket_policy": {
    "description": "Defines s3_bucket_policy",
    "prefix": "tf-opentelekomcloud-resource-s3_bucket_policy",
    "body": [
      "resource \"opentelekomcloud_s3_bucket\" \"b\" {",
      "  bucket = \"my_tf_test_bucket\"",
      "}",
      "",
      "resource \"opentelekomcloud_s3_bucket_policy\" \"b\" {",
      "  bucket = \"${opentelekomcloud_s3_bucket.b.id}\"",
      "  policy =<<POLICY",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Id\": \"MYBUCKETPOLICY\",",
      "  \"Statement\": [",
      "    {",
      "      \"Sid\": \"IPAllow\",",
      "      \"Effect\": \"Deny\",",
      "      \"Principal\": \"*\",",
      "      \"Action\": \"s3:*\",",
      "      \"Resource\": \"arn:aws:s3:::my_tf_test_bucket/*\",",
      "      \"Condition\": {",
      "         \"IpAddress\": {\"aws:SourceIp\": \"8.8.8.8/32\"}",
      "      } ",
      "    } ",
      "  ]",
      "}",
      "POLICY",
      "}"
    ]
  },
  "opentelekomcloud-resource-sdrs_protectiongroup_v1": {
    "description": "Defines sdrs_protectiongroup_v1",
    "prefix": "tf-opentelekomcloud-resource-sdrs_protectiongroup_v1",
    "body": [
      "resource \"opentelekomcloud_sdrs_protectiongroup_v1\" \"group_1\" {",
      "\tname = \"group_1\"",
      "\tdescription = \"test description\"",
      "\tsource_availability_zone = \"eu-de-01\"",
      "\ttarget_availability_zone = \"eu-de-02\"",
      "\tdomain_id = \"{{ domain_id }}\"",
      "\tsource_vpc_id = \"{{ vpc_id }}\"",
      "\tdr_type = \"migration\"",
      "}",
      ""
    ]
  },
  "opentelekomcloud-resource-sfs_file_system_v2": {
    "description": "Defines sfs_file_system_v2",
    "prefix": "tf-opentelekomcloud-resource-sfs_file_system_v2",
    "body": [
      "    variable \"share_name\" { }",
      "",
      "    variable \"share_description\" { }",
      "",
      "    variable \"vpc_id\" { }",
      "",
      "    resource \"opentelekomcloud_sfs_file_system_v2\" \"share-file\"",
      "    {",
      "            size = 50",
      "            name = \"${var.share_name}\"",
      "            access_to = \"${var.vpc_id}\"",
      "            access_level = \"rw\"",
      "            description = \"${var.share_description}\"",
      "            metadata = {",
      "                \"type\"=\"nfs\"",
      "            }",
      "",
      "    }"
    ]
  },
  "opentelekomcloud-resource-smn_subscription_v2": {
    "description": "Defines smn_subscription_v2",
    "prefix": "tf-opentelekomcloud-resource-smn_subscription_v2",
    "body": [
      "resource \"opentelekomcloud_smn_topic_v2\" \"topic_1\" {",
      "  name\t\t  = \"topic_1\"",
      "  display_name    = \"The display name of topic_1\"",
      "}",
      "",
      "resource \"opentelekomcloud_smn_subscription_v2\" \"subscription_1\" {",
      "  topic_urn       = \"${opentelekomcloud_smn_topic_v2.topic_1.id}\"",
      "  endpoint        = \"mailtest@gmail.com\"",
      "  protocol        = \"email\"",
      "  remark          = \"O&M\"",
      "}",
      "",
      "resource \"opentelekomcloud_smn_subscription_v2\" \"subscription_2\" {",
      "  topic_urn       = \"${opentelekomcloud_smn_topic_v2.topic_1.id}\"",
      "  endpoint        = \"13600000000\"",
      "  protocol        = \"sms\"",
      "  remark          = \"O&M\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-smn_topic_v2": {
    "description": "Defines smn_topic_v2",
    "prefix": "tf-opentelekomcloud-resource-smn_topic_v2",
    "body": [
      "resource \"opentelekomcloud_smn_topic_v2\" \"topic_1\" {",
      "  name            = \"topic_1\"",
      "  display_name    = \"The display name of topic_1\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-vbs_backup_policy_v2": {
    "description": "Defines vbs_backup_policy_v2",
    "prefix": "tf-opentelekomcloud-resource-vbs_backup_policy_v2",
    "body": [
      "resource \"opentelekomcloud_vbs_backup_policy_v2\" \"vbs\" {",
      "  name = \"policy_002\"",
      "  start_time  = \"12:00\"",
      "  status  = \"ON\"",
      "  retain_first_backup = \"N\"",
      "  rentention_num = 2",
      "  frequency = 1",
      "  tags {",
      "    key = \"k1\"",
      "    value = \"v1\"",
      "  }",
      "}"
    ]
  },
  "opentelekomcloud-resource-vbs_backup_share_v2": {
    "description": "Defines vbs_backup_share_v2",
    "prefix": "tf-opentelekomcloud-resource-vbs_backup_share_v2",
    "body": [
      "variable \"backup_id\" {}",
      "",
      "variable \"to_project_ids\" {}",
      " ",
      "resource \"opentelekomcloud_vbs_backup_share_v2\" \"backupshare\" {",
      "  backup_id = \"${var.backup_id}\"",
      "  to_project_ids = \"${var.to_project_ids}\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-vbs_backup_v2": {
    "description": "Defines vbs_backup_v2",
    "prefix": "tf-opentelekomcloud-resource-vbs_backup_v2",
    "body": [
      "variable \"backup_name\" {}",
      "",
      "variable \"volume_id\" {}",
      " ",
      "resource \"opentelekomcloud_vbs_backup_v2\" \"mybackup\" {",
      "  volume_id = \"${var.volume_id}\"",
      "  name = \"${var.backup_name}\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-vpc_eip_v1": {
    "description": "Defines vpc_eip_v1",
    "prefix": "tf-opentelekomcloud-resource-vpc_eip_v1",
    "body": [
      "resource \"opentelekomcloud_vpc_eip_v1\" \"eip_1\" {",
      "  publicip {",
      "    type = \"5_bgp\"",
      "  }",
      "  bandwidth {",
      "    name = \"test\"",
      "    size = 8",
      "    share_type = \"PER\"",
      "    charge_mode = \"traffic\"",
      "  }",
      "}"
    ]
  },
  "opentelekomcloud-resource-vpc_peering_accepter_v2": {
    "description": "Defines vpc_peering_accepter_v2",
    "prefix": "tf-opentelekomcloud-resource-vpc_peering_accepter_v2",
    "body": [
      " provider \"opentelekomcloud\"  {",
      "    alias = \"main\"",
      "    user_name   = \"${var.username}\"",
      "    domain_name = \"${var.domain_name}\"",
      "    password    = \"${var.password}\"",
      "    auth_url    = \"${var.auth_url}\"",
      "    tenant_id   = \"${var.tenant_id}\"",
      "}",
      "",
      "provider \"opentelekomcloud\"  {",
      "    alias = \"peer\"",
      "    user_name = \"${var.peer_username}\"",
      "    domain_name = \"${var.peer_domain_name}\"",
      "    password    = \"${var.peer_password}\"",
      "    auth_url    = \"${var.peer_auth_url}\"",
      "    tenant_id   = \"${var.peer_tenant_id}\"",
      "}",
      "",
      "resource \"opentelekomcloud_vpc_v1\" \"vpc_main\" {",
      "    provider = \"opentelekomcloud.main\"",
      "    name = \"${var.vpc_name}\"",
      "    cidr = \"${var.vpc_cidr}\"",
      "}",
      "",
      "resource \"opentelekomcloud_vpc_v1\" \"vpc_peer\" {",
      "    provider = \"opentelekomcloud.peer\"",
      "    name = \"${var.peer_vpc_name}\"",
      "    cidr = \"${var.peer_vpc_cidr}\"",
      "}",
      "",
      "# Requester's side of the connection.",
      "resource \"opentelekomcloud_vpc_peering_connection_v2\" \"peering\" {",
      "    provider = \"opentelekomcloud.main\"",
      "    name = \"${var.peer_name}\"",
      "    vpc_id = \"${opentelekomcloud_vpc_v1.vpc_main.id}\"",
      "    peer_vpc_id = \"${opentelekomcloud_vpc_v1.vpc_peer.id}\"",
      "    peer_tenant_id =  \"${var.tenant_id}\"",
      "}",
      "",
      "# Accepter's side of the connection.",
      "resource \"opentelekomcloud_vpc_peering_connection_accepter_v2\" \"peer\" {",
      "    provider = \"opentelekomcloud.peer\"",
      "    vpc_peering_connection_id = \"${opentelekomcloud_vpc_peering_connection_v2.peering.id}\"",
      "    accept = true",
      "  ",
      "}"
    ]
  },
  "opentelekomcloud-resource-vpc_peering_v2": {
    "description": "Defines vpc_peering_v2",
    "prefix": "tf-opentelekomcloud-resource-vpc_peering_v2",
    "body": [
      "resource \"opentelekomcloud_vpc_peering_connection_v2\" \"peering\" {",
      "  name = \"${var.peer_conn_name}\"",
      "  vpc_id = \"${var.vpc_id}\"",
      "  peer_vpc_id = \"${var.accepter_vpc_id}\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-vpc_route_v2": {
    "description": "Defines vpc_route_v2",
    "prefix": "tf-opentelekomcloud-resource-vpc_route_v2",
    "body": [
      "#XXX empty snippet",
      ""
    ]
  },
  "opentelekomcloud-resource-vpc_subnet_v1": {
    "description": "Defines vpc_subnet_v1",
    "prefix": "tf-opentelekomcloud-resource-vpc_subnet_v1",
    "body": [
      "resource \"opentelekomcloud_vpc_v1\" \"vpc_v1\" {",
      "  name = \"${var.vpc_name}\"",
      "  cidr = \"${var.vpc_cidr}\"",
      "}",
      "",
      "",
      "resource \"opentelekomcloud_vpc_subnet_v1\" \"subnet_v1\" {",
      "  name = \"${var.subnet_name}\"",
      "  cidr = \"${var.subnet_cidr}\"",
      "  gateway_ip = \"${var.subnet_gateway_ip}\"",
      "  vpc_id = \"${opentelekomcloud_vpc_v1.vpc_v1.id}\"",
      "}"
    ]
  },
  "opentelekomcloud-resource-vpc_v1": {
    "description": "Defines vpc_v1",
    "prefix": "tf-opentelekomcloud-resource-vpc_v1",
    "body": [
      "",
      "variable \"vpc_name\" {",
      "  default = \"opentelekomcloud_vpc\"",
      "}",
      "",
      "variable \"vpc_cidr\" {",
      "  default = \"192.168.0.0/16\"",
      "}",
      "",
      "resource \"opentelekomcloud_vpc_v1\" \"vpc_v1\" {",
      "  name = \"${var.vpc_name}\"",
      "  cidr = \"${var.vpc_cidr}\"",
      "}",
      ""
    ]
  },
  "opentelekomcloud-resource-waf_ccattackprotection_rule_v1": {
    "description": "Defines waf_ccattackprotection_rule_v1",
    "prefix": "tf-opentelekomcloud-resource-waf_ccattackprotection_rule_v1",
    "body": [
      "",
      "resource \"opentelekomcloud_waf_policy_v1\" \"policy_1\" {",
      "\tname = \"policy_1\"",
      "}",
      "",
      "resource \"opentelekomcloud_waf_ccattackprotection_rule_v1\" \"rule_1\" {",
      "\tpolicy_id = \"${opentelekomcloud_waf_policy_v1.policy_1.id}\"",
      "\turl = \"/abc1\"",
      "\tlimit_num = 10",
      "\tlimit_period = 60",
      "\tlock_time = 10",
      "\ttag_type = \"cookie\"",
      "\ttag_index = \"sessionid\"",
      "\taction_category = \"block\"",
      "\tblock_content_type = \"application/json\"",
      "\tblock_content = \"{\\\"error\\\":\\\"forbidden\\\"}\"",
      "}",
      ""
    ]
  },
  "opentelekomcloud-resource-waf_certificate_v1": {
    "description": "Defines waf_certificate_v1",
    "prefix": "tf-opentelekomcloud-resource-waf_certificate_v1",
    "body": [
      "",
      "resource \"opentelekomcloud_waf_certificate_v1\" \"certificate_1\" {",
      "\tname = \"cert_1\"",
      "\tcontent = \"-----BEGIN CERTIFICATE-----MIIDIjCCAougAwIBAgIJALV96mEtVF4EMA0GCSqGSIb3DQEBBQUAMGoxCzAJBgNVBAYTAnh4MQswCQYDVQQIEwJ4eDELMAkGA1UEBxMCeHgxCzAJBgNVBAoTAnh4MQswCQYDVQQLEwJ-----END CERTIFICATE-----\"",
      "\tkey = \"-----BEGIN RSA PRIVATE KEY-----MIICXQIBAAKBgQDFPN9ojPndxSC4E1pqWQVKGHCFlXAAGBOxbGfSzXqzsoyacotueqMqXQbxrPSQFATeVmhZPNVEMdvcAMjYsV/mymtAwVqVA6q/OFdX/b3UHO+b/VqLo3J5SrM-----END RSA PRIVATE KEY-----\"",
      "}",
      ""
    ]
  },
  "opentelekomcloud-resource-waf_datamasking_rule_v1": {
    "description": "Defines waf_datamasking_rule_v1",
    "prefix": "tf-opentelekomcloud-resource-waf_datamasking_rule_v1",
    "body": [
      "",
      "resource \"opentelekomcloud_waf_policy_v1\" \"policy_1\" {",
      "\tname = \"policy_1\"",
      "}",
      "",
      "resource \"opentelekomcloud_waf_datamasking_rule_v1\" \"rule_1\" {",
      "\tpolicy_id = \"${opentelekomcloud_waf_policy_v1.policy_1.id}\"",
      "\turl = \"/login\"",
      "\tcategory = \"params\"",
      "\tindex = \"password\"",
      "}",
      ""
    ]
  },
  "opentelekomcloud-resource-waf_domain_v1": {
    "description": "Defines waf_domain_v1",
    "prefix": "tf-opentelekomcloud-resource-waf_domain_v1",
    "body": [
      "",
      "resource \"opentelekomcloud_waf_certificate_v1\" \"certificate_1\" {",
      "\tname = \"cert_1\"",
      "\tcontent = \"-----BEGIN CERTIFICATE-----MIIDIjCCAougAwIBAgIJALV96mEtVF4EMA0GCSqGSIb3DQEBBQUAMGoxCzAJBgNVBAYTAnh4MQswCQYDVQQIEwJ4eDELMAkGA1UEBxMCeHgxCzAJBgNVBAoTAnh4MQswCQYDVQQLEwJ-----END CERTIFICATE-----\"",
      "\tkey = \"-----BEGIN RSA PRIVATE KEY-----MIICXQIBAAKBgQDFPN9ojPndxSC4E1pqWQVKGHCFlXAAGBOxbGfSzXqzsoyacotueqMqXQbxrPSQFATeVmhZPNVEMdvcAMjYsV/mymtAwVqVA6q/OFdX/b3UHO+b/VqLo3J5SrM-----END RSA PRIVATE KEY-----\"",
      "}",
      "",
      "resource \"opentelekomcloud_waf_domain_v1\" \"domain_1\" {",
      "\thostname = \"www.b.com\"",
      "\tserver {",
      "\t\tfront_protocol = \"HTTPS\"",
      "\t\tback_protocol = \"HTTP\"",
      "\t\taddress = \"80.158.42.162\"",
      "\t\tport = \"8080\"",
      "\t}",
      "\tcertificate_id = \"${opentelekomcloud_waf_certificate_v1.certificate_1.id}\"",
      "\tproxy = \"true\"",
      "\tsip_header_name = \"default\"",
      "\tsip_header_list = [\"X-Forwarded-For\"]",
      "}",
      ""
    ]
  },
  "opentelekomcloud-resource-waf_falsealarmmasking_rule_v1": {
    "description": "Defines waf_falsealarmmasking_rule_v1",
    "prefix": "tf-opentelekomcloud-resource-waf_falsealarmmasking_rule_v1",
    "body": [
      "",
      "resource \"opentelekomcloud_waf_policy_v1\" \"policy_1\" {",
      "\tname = \"policy_1\"",
      "}",
      "",
      "resource \"opentelekomcloud_waf_falsealarmmasking_rule_v1\" \"rule_1\" {",
      "\tpolicy_id = \"${opentelekomcloud_waf_policy_v1.policy_1.id}\"",
      "\turl = \"/a\"",
      "\trule = \"100001\"",
      "}",
      ""
    ]
  },
  "opentelekomcloud-resource-waf_policy_v1": {
    "description": "Defines waf_policy_v1",
    "prefix": "tf-opentelekomcloud-resource-waf_policy_v1",
    "body": [
      "",
      "resource \"opentelekomcloud_waf_policy_v1\" \"policy_1\" {",
      "\tname = \"policy_1\"",
      "\toptions {",
      "\t\twebattack = true",
      "\t\tcrawler = true",
      "\t}",
      "\tfull_detection = false",
      "}",
      ""
    ]
  },
  "opentelekomcloud-resource-waf_preciseprotection_rule_v1": {
    "description": "Defines waf_preciseprotection_rule_v1",
    "prefix": "tf-opentelekomcloud-resource-waf_preciseprotection_rule_v1",
    "body": [
      "",
      "resource \"opentelekomcloud_waf_policy_v1\" \"policy_1\" {",
      "\tname = \"policy_1\"",
      "}",
      "",
      "resource \"opentelekomcloud_waf_preciseprotection_rule_v1\" \"rule_1\" {",
      "\tpolicy_id = \"${opentelekomcloud_waf_policy_v1.policy_1.id}\"",
      "\tname = \"rule_1\"",
      "\tconditions {",
      "\t\tcategory = \"url\"",
      "\t\tcontents = [\"/login\"]",
      "\t\tlogic = 1",
      "\t}",
      "\tconditions {",
      "\t\tcategory = \"ip\"",
      "\t\tcontents = [\"192.168.1.1\"]",
      "\t\tlogic = 3",
      "\t}",
      "\taction_category = \"block\"",
      "\tpriority = 10",
      "}",
      ""
    ]
  },
  "opentelekomcloud-resource-waf_webtamperprotection_rule_v1": {
    "description": "Defines waf_webtamperprotection_rule_v1",
    "prefix": "tf-opentelekomcloud-resource-waf_webtamperprotection_rule_v1",
    "body": [
      "",
      "resource \"opentelekomcloud_waf_policy_v1\" \"policy_1\" {",
      "\tname = \"policy_1\"",
      "}",
      "",
      "resource \"opentelekomcloud_waf_webtamperprotection_rule_v1\" \"rule_1\" {",
      "\tpolicy_id = \"${opentelekomcloud_waf_policy_v1.policy_1.id}\"",
      "\thostname = \"www.abc.com\"",
      "\turl = \"/a\"",
      "}",
      ""
    ]
  },
  "opentelekomcloud-resource-waf_whiteblackip_rule_v1": {
    "description": "Defines waf_whiteblackip_rule_v1",
    "prefix": "tf-opentelekomcloud-resource-waf_whiteblackip_rule_v1",
    "body": [
      "",
      "resource \"opentelekomcloud_waf_policy_v1\" \"policy_1\" {",
      "\tname = \"policy_1\"",
      "}",
      "",
      "resource \"opentelekomcloud_waf_whiteblackip_rule_v1\" \"rule_1\" {",
      "\tpolicy_id = \"${opentelekomcloud_waf_policy_v1.policy_1.id}\"",
      "\taddr = \"192.168.0.0/24\"",
      "\twhite = 1",
      "}",
      ""
    ]
  },
  "opsgenie-data-user": {
    "description": "Defines user",
    "prefix": "tf-opsgenie-data-user",
    "body": [
      "data \"opsgenie_user\" \"cookie_monster\" {",
      "  username = \"me@cookie-monster.com\"",
      "}",
      "",
      "resource \"opsgenie_team\" \"test\" {",
      "  name = \"cookieeaters\"",
      "",
      "  member {",
      "    username = \"${data.opsgenie_user.cookie_monster.username}\"",
      "    role     = \"${data.opsgenie_user.cookie_monster.role}\"",
      "  }",
      "}"
    ]
  },
  "opsgenie-resource-team": {
    "description": "Defines team",
    "prefix": "tf-opsgenie-resource-team",
    "body": [
      "resource \"opsgenie_user\" \"first\" {",
      "  username  = \"user@domain.com\"",
      "  full_name = \"Cookie Monster\"",
      "  role      = \"User\"",
      "}",
      "",
      "resource \"opsgenie_user\" \"second\" {",
      "  username  = \"eggman@dr-robotnik.com\"",
      "  full_name = \"Dr Ivo Eggman Robotnik\"",
      "  role      = \"User\"",
      "}",
      "",
      "resource \"opsgenie_team\" \"test\" {",
      "  name        = \"example\"",
      "  description = \"This team deals with all the things\"",
      "",
      "  member {",
      "    username = \"${opsgenie_user.first.username}\"",
      "    role     = \"admin\"",
      "  }",
      "",
      "  member {",
      "    username = \"${opsgenie_user.second.username}\"",
      "    role     = \"user\"",
      "  }",
      "}"
    ]
  },
  "opsgenie-resource-user": {
    "description": "Defines user",
    "prefix": "tf-opsgenie-resource-user",
    "body": [
      "resource \"opsgenie_user\" \"test\" {",
      "  username  = \"user@domain.com\"",
      "  full_name = \"Cookie Monster\"",
      "  role      = \"User\"",
      "  locale    = \"en_US\"",
      "  timezone  = \"America/New_York\"",
      "}"
    ]
  },
  "oraclepaas-data-oraclepaas_database_service_instance": {
    "description": "Defines oraclepaas_database_service_instance",
    "prefix": "tf-oraclepaas-data-oraclepaas_database_service_instance",
    "body": [
      "data \"oraclepaas_database_service_instance\" \"foo\" {",
      "  name = \"database-service-instance-1\"",
      "}",
      "",
      "output \"region\" {",
      "  value = \"${data.oraclepaas_database_service_instance.foo.region}\"",
      "}"
    ]
  },
  "oraclepaas-resource-oraclepaas_application_container": {
    "description": "Defines oraclepaas_application_container",
    "prefix": "tf-oraclepaas-resource-oraclepaas_application_container",
    "body": [
      "resource \"oraclepaas_application_container\" \"example-app\" {",
      "  name               = \"ExampleWebApp\"",
      "  runtime            = \"java\"",
      "  archive_url        = \"my-accs-apps/example-web-app.zip\"",
      "  subscription_type  = \"HOURLY\"",
      "",
      "  deployment {",
      "    memory = \"1G\"",
      "    instances = 2",
      "  }",
      "}"
    ]
  },
  "oraclepaas-resource-oraclepaas_database_access_rule": {
    "description": "Defines oraclepaas_database_access_rule",
    "prefix": "tf-oraclepaas-resource-oraclepaas_database_access_rule",
    "body": [
      "resource \"oraclepaas_database_service_instance\" \"default\" {",
      "  name = \"database-service-instance-1\"",
      "  ...",
      "}",
      "",
      "resource \"oraclepaas_database_access_rule\" \"default\" {",
      "\tname                = \"example-access-rule\"",
      "\tservice_instance_id = \"${oraclepaas_database_service_instance.default.name}\"",
      "\tdescription         = \"enable port 8000\"",
      "\tports               = \"8000\"",
      "\tsource              = \"PUBLIC-INTERNET\"",
      "}"
    ]
  },
  "oraclepaas-resource-oraclepaas_database_service_instance": {
    "description": "Defines oraclepaas_database_service_instance",
    "prefix": "tf-oraclepaas-resource-oraclepaas_database_service_instance",
    "body": [
      "resource \"oraclepaas_database_service_instance\" \"default\" {",
      "  name        = \"database-service-instance\"",
      "  description = \"This is a description for an service instance\"",
      "",
      "  edition           = \"EE\"",
      "  shape             = \"oc1m\"",
      "  subscription_type = \"HOURLY\"",
      "  version           = \"12.2.0.1\"",
      "  vm_public_key     = \"An ssh public key\"",
      "",
      "  database_configuration {",
      "      admin_password     = \"Pa55_Word\"",
      "      sid                = \"BOTH\"",
      "      backup_destination = \"NONE\"",
      "      usable_storage     = 15",
      "  }",
      "",
      "  backups {",
      "      cloud_storage_container = \"Storage-${var.domain}/database-service-instance-backup\"",
      "      auto_generate = true",
      "  }",
      "}"
    ]
  },
  "oraclepaas-resource-oraclepaas_java_access_rule": {
    "description": "Defines oraclepaas_java_access_rule",
    "prefix": "tf-oraclepaas-resource-oraclepaas_java_access_rule",
    "body": [
      "resource \"oraclepaas_java_service_instance\" \"default\" {",
      "  name        = \"java-service-instance-1\"",
      "  ...",
      "}",
      "",
      "resource \"oraclepaas_java_access_rule\" \"default\" {",
      "\tname                = \"example-access-rule\"",
      "\tservice_instance_id = \"${oraclepaas_java_service_instance.default.name}\"",
      "\tdescription         = \"enable port 8000\"",
      "\tports               = \"8000\"",
      "\tsource              = \"PUBLIC-INTERNET\"",
      "}"
    ]
  },
  "oraclepaas-resource-oraclepaas_java_service_instance": {
    "description": "Defines oraclepaas_java_service_instance",
    "prefix": "tf-oraclepaas-resource-oraclepaas_java_service_instance",
    "body": [
      "resource \"oraclepaas_java_service_instance\" \"jcs\" {",
      "  name        = \"example\"",
      "  description = \"Example Terraformed JCS with OCI DB\"",
      "",
      "  edition                = \"EE\"            ",
      "  service_version        = \"12cRelease213\"",
      "  metering_frequency     = \"HOURLY\"",
      "  bring_your_own_license = true",
      "",
      "  ssh_public_key = \"${file(var.ssh_public_key_file)}\"",
      "",
      "  # OCI Settings",
      "  region              = \"${var.region}\"",
      "  availability_domain = \"${var.availability_domain}\"",
      "  subnet              = \"${var.subnet.id}\"",
      "",
      "  weblogic_server {",
      "    shape = \"VM.Standard2.1\"",
      "",
      "    connect_string = \"//${oci_database_db_system.database.hostname}-scan.${data.oci_core_subnet.subnet.subnet_domain_name}:1521/${oci_database_db_system.database.db_home.0.database.0.pdb_name}.${data.oci_core_subnet.subnet.subnet_domain_name}\"",
      "",
      "    database {",
      "      username = \"sys\"",
      "      password = \"${oci_database_db_system.database.db_home.0.database.0.admin_password}\"",
      "    }",
      "",
      "    admin {",
      "      username = \"weblogic\"",
      "      password = \"Weblogic_1\"",
      "    }",
      "  }",
      "",
      "  backups {",
      "    cloud_storage_container = \"https://swiftobjectstorage.${var.region}.oraclecloud.com/v1/${var.tenancy}/${oci_objectstorage_bucket.backup.name}\"",
      "    cloud_storage_username  = \"${var.storage_username}\"",
      "    cloud_storage_password  = \"${var.storage_auth_token_token}\"",
      "  }",
      "}"
    ]
  },
  "oraclepaas-resource-oraclepaas_mysql_access_rule": {
    "description": "Defines oraclepaas_mysql_access_rule",
    "prefix": "tf-oraclepaas-resource-oraclepaas_mysql_access_rule",
    "body": [
      "resource \"oraclepaas_mysql_service_instance\" \"default\" {\r",
      "\t...\r",
      "}\r",
      "\r",
      "resource \"oraclepass_mysql_access_rule\" \"myrule\" {\r",
      "\tservice_instance_id = \"${oraclepaas_mysql_service_instance.default.id}\"\r",
      "\tname                = \"My Access Rule\"\r",
      "\tdescription         = \"My Simple Access Rule\"\r",
      "\tprotocol            = \"tcp\"\r",
      "\tports               = \"8000\"\r",
      "\tsource              = \"0.0.0.0/24\"\r",
      "\tdestination         = \"mysql_MASTER\"\r",
      "\tenabled             = true\r",
      "}\r"
    ]
  },
  "oraclepaas-resource-oraclepaas_mysql_service_instance": {
    "description": "Defines oraclepaas_mysql_service_instance",
    "prefix": "tf-oraclepaas-resource-oraclepaas_mysql_service_instance",
    "body": [
      "resource \"oraclepaas_mysql_service_instance\" \"default\" {\r",
      "  name                      = \"SimpleMySQLInstance\"\r",
      "  description               = \"This is a simple mysql instance\"\r",
      "  vm_public_key             = \"A SSH public key\"\r",
      "  backup_destination        = \"NONE\"\r",
      "  notification_email        = \"myemail@mydomain.com\"\r",
      "  shape                     = \"oc3\"\r",
      "  ssh_public_key            = \"ssh-public-key\"\r",
      "\r",
      "  backups {\r",
      "    cloud_storage_container = \"https://uscom-east-1.storage.oraclecloud.com/v1/MyStorageAccount/MyContainer\"\r",
      "    cloud_storage_username  = \"MyCloudStorageAccount\"\r",
      "    cloud_storage_password  = \"MyCloudStoragePassword\"\r",
      "    create_if_missing       = \"true\"\r",
      "  }\r",
      "\r",
      "  mysql_configuration {\r",
      "    db_name                 = \"demo_db\"\r",
      "    db_storage              = 25\r",
      "    mysql_port              = 3306\r",
      "    mysql_username          = \"root\"\r",
      "    mysql_password          = \"MySqlPassword_1\"\r",
      "\r",
      "    enterprise_monitor_configuration {\r",
      "      em_agent_username     = \"MyEmAgentUser\"\r",
      "      em_agent_password     = \"EmAgentPassw0rd\"\r",
      "      em_username           = \"EmAdminUser\"\r",
      "      em_password           = \"EmAdminPassw0rd\"\r",
      "      em_port               = 18443\r",
      "    }\r",
      "  }\r",
      "}\r"
    ]
  },
  "ovh-data-cloud_region": {
    "description": "Defines cloud_region",
    "prefix": "tf-ovh-data-cloud_region",
    "body": [
      "data \"ovh_cloud_region\" \"GRA1\" {",
      "   project_id = \"XXXXXX\"",
      "   name = \"GRA1\"",
      "}"
    ]
  },
  "ovh-data-cloud_regions": {
    "description": "Defines cloud_regions",
    "prefix": "tf-ovh-data-cloud_regions",
    "body": [
      "data \"ovh_cloud_regions\" \"regions\" {",
      "  project_id = \"XXXXXX\"",
      "}"
    ]
  },
  "ovh-data-domain_zone": {
    "description": "Defines domain_zone",
    "prefix": "tf-ovh-data-domain_zone",
    "body": [
      "data \"ovh_domain_zone\" \"rootzone\" {",
      "    name = \"mysite.ovh\"",
      "}"
    ]
  },
  "ovh-data-iploadbalancing": {
    "description": "Defines iploadbalancing",
    "prefix": "tf-ovh-data-iploadbalancing",
    "body": [
      "data \"ovh_iploadbalancing\" \"lb\" {",
      "   service_name = \"xxx\"",
      "   state        = \"ok\"",
      "}"
    ]
  },
  "ovh-data-me_paymentmean_bankaccount": {
    "description": "Defines me_paymentmean_bankaccount",
    "prefix": "tf-ovh-data-me_paymentmean_bankaccount",
    "body": [
      "data \"ovh_me_paymentmean_bankaccount\" \"ba\" {",
      "   use_default = true",
      "}"
    ]
  },
  "ovh-data-me_paymentmean_creditcard": {
    "description": "Defines me_paymentmean_creditcard",
    "prefix": "tf-ovh-data-me_paymentmean_creditcard",
    "body": [
      "data \"ovh_me_paymentmean_creditcard\" \"cc\" {",
      "   use_default = true",
      "}"
    ]
  },
  "ovh-data-publiccloud_region": {
    "description": "Defines publiccloud_region",
    "prefix": "tf-ovh-data-publiccloud_region",
    "body": [
      "data \"ovh_publiccloud_region\" \"GRA1\" {",
      "   project_id = \"XXXXXX\"",
      "   region = \"GRA1\"",
      "}"
    ]
  },
  "ovh-data-publiccloud_regions": {
    "description": "Defines publiccloud_regions",
    "prefix": "tf-ovh-data-publiccloud_regions",
    "body": [
      "data \"ovh_publiccloud_regions\" \"regions\" {",
      "  project_id = \"XXXXXX\"",
      "}"
    ]
  },
  "ovh-resource-cloud_network_private": {
    "description": "Defines cloud_network_private",
    "prefix": "tf-ovh-resource-cloud_network_private",
    "body": [
      "resource \"ovh_cloud_network_private\" \"net\" {",
      "   project_id = \"67890\"",
      "   name       = \"admin_network\"",
      "   regions    = [\"GRA1\", \"BHS1\"]",
      "}"
    ]
  },
  "ovh-resource-cloud_network_private_subnet": {
    "description": "Defines cloud_network_private_subnet",
    "prefix": "tf-ovh-resource-cloud_network_private_subnet",
    "body": [
      "resource \"ovh_cloud_network_private_subnet\" \"subnet\" {",
      "   project_id = \"67890\"",
      "   network_id = \"0234543\"",
      "   region     = \"GRA1\"",
      "   start      = \"192.168.168.100\"",
      "   end        = \"192.168.168.200\"",
      "   network    = \"192.168.168.0/24\"",
      "   dhcp       = true",
      "   no_gateway = false",
      "}"
    ]
  },
  "ovh-resource-cloud_user": {
    "description": "Defines cloud_user",
    "prefix": "tf-ovh-resource-cloud_user",
    "body": [
      "resource \"ovh_cloud_user\" \"user1\" {",
      "   project_id = \"67890\"",
      "}"
    ]
  },
  "ovh-resource-ip_reverse": {
    "description": "Defines ip_reverse",
    "prefix": "tf-ovh-resource-ip_reverse",
    "body": [
      "# Set the reverse of an IP",
      "resource \"ovh_ip_reverse\" \"test\" {",
      "    ip = \"192.0.2.0/24\"",
      "    ipreverse = \"192.0.2.1\"",
      "    reverse = \"example.com\"",
      "}"
    ]
  },
  "ovh-resource-iploadbalancing_http_route": {
    "description": "Defines iploadbalancing_http_route",
    "prefix": "tf-ovh-resource-iploadbalancing_http_route",
    "body": [
      "resource \"ovh_iploadbalancing_http_route\" \"httpsredirect\" {",
      "  service_name = \"loadbalancer-xxxxxxxxxxxxxxxxxx\"",
      "  display_name = \"Redirect to HTTPS\"",
      "  weight = 1",
      "",
      "  action {",
      "    status = 302",
      "    target = \"https://${host}${path}${arguments}\"",
      "    type = \"redirect\"",
      "  }",
      "}"
    ]
  },
  "ovh-resource-iploadbalancing_http_route_rule": {
    "description": "Defines iploadbalancing_http_route_rule",
    "prefix": "tf-ovh-resource-iploadbalancing_http_route_rule",
    "body": [
      "resource \"ovh_iploadbalancing_http_route\" \"httpsredirect\" {",
      "  service_name = \"loadbalancer-xxxxxxxxxxxxxxxxxx\"",
      "  display_name = \"Redirect to HTTPS\"",
      "  weight       = 1",
      "  frontend_id  = 11111",
      "",
      "  action {",
      "    status = 302",
      "    target = \"https://$${host}$${path}$${arguments}\"",
      "    type = \"redirect\"",
      "  }",
      "}",
      "",
      "resource \"ovh_iploadbalancing_http_route_rule\" \"examplerule\" {",
      "  service_name = \"loadbalancer-xxxxxxxxxxxxxxxxxx\"",
      "  route_id     = \"${ovh_iploadbalancing_http_route.httpsredirect.id}\"",
      "  display_name = \"Match example.com host\"",
      "  field        = \"host\"",
      "  match        = \"is\"",
      "  negate       = false",
      "  pattern      = \"example.com\"",
      "}"
    ]
  },
  "ovh-resource-iploadbalancing_refresh": {
    "description": "Defines iploadbalancing_refresh",
    "prefix": "tf-ovh-resource-iploadbalancing_refresh",
    "body": [
      "data \"ovh_iploadbalancing\" \"lb\" {",
      "  service_name = \"ip-1.2.3.4\"",
      "   state       = \"ok\"  ",
      "}",
      "",
      "resource \"ovh_iploadbalancing_tcp_farm\" \"farmname\" {",
      "  service_name = \"${data.ovh_iploadbalancing.lb.id}\"",
      "  port = 8080",
      "  zone = \"all\"",
      "}",
      "",
      "resource \"ovh_iploadbalancing_tcp_farm_server\" \"backend\" {",
      "  service_name           = \"${data.ovh_iploadbalancing.lb.id}\"",
      "  farm_id                = \"${ovh_iploadbalancing_tcp_farm.farmname.id}\"",
      "  display_name           = \"mybackend\"",
      "  address                = \"4.5.6.7\"",
      "  status                 = \"active\"",
      "  port                   = 80",
      "  proxy_protocol_version = v2",
      "  weight                 = 2",
      "  probe                  = true",
      "  ssl                    = false",
      "  backup                 = true",
      "}",
      "",
      "resource \"ovh_iploadbalancing_refresh\" \"mylb\" {",
      "  service_name = \"${data.ovh_iploadbalancing.lb.id}\"",
      "  keepers = [",
      "    \"${ovh_iploadbalancing_tcp_farm_server.backend.*.address}\",",
      "    ]",
      "}"
    ]
  },
  "ovh-resource-iploadbalancing_tcp_farm": {
    "description": "Defines iploadbalancing_tcp_farm",
    "prefix": "tf-ovh-resource-iploadbalancing_tcp_farm",
    "body": [
      "data \"ovh_iploadbalancing\" \"lb\" {",
      "  service_name = \"ip-1.2.3.4\"",
      "   state       = \"ok\"  ",
      "}",
      "",
      "resource \"ovh_iploadbalancing_tcp_farm\" \"farmname\" {",
      "  service_name = \"${data.ovh_iploadbalancing.lb.id}\"",
      "  display_name = \"ingress-8080-gra\"",
      "  zone = \"GRA\"",
      "}"
    ]
  },
  "ovh-resource-iploadbalancing_tcp_farm_server": {
    "description": "Defines iploadbalancing_tcp_farm_server",
    "prefix": "tf-ovh-resource-iploadbalancing_tcp_farm_server",
    "body": [
      "data \"ovh_iploadbalancing\" \"lb\" {",
      "  service_name = \"ip-1.2.3.4\"",
      "   state       = \"ok\"  ",
      "}",
      "",
      "resource \"ovh_iploadbalancing_tcp_farm\" \"farmname\" {",
      "  service_name = \"${data.ovh_iploadbalancing.lb.id}\"",
      "  port = 8080",
      "  zone = \"all\"",
      "}",
      "",
      "resource \"ovh_iploadbalancing_tcp_farm_server\" \"backend\" {",
      "  service_name           = \"${data.ovh_iploadbalancing.lb.id}\"",
      "  farm_id                = \"${ovh_iploadbalancing_tcp_farm.farmname.id}\"",
      "  display_name           = \"mybackend\"",
      "  address                = \"4.5.6.7\"",
      "  status                 = \"active\"",
      "  port                   = 80",
      "  proxy_protocol_version = v2",
      "  weight                 = 2",
      "  probe                  = true",
      "  ssl                    = false",
      "  backup                 = true",
      "}"
    ]
  },
  "ovh-resource-iploadbalancing_tcp_frontend": {
    "description": "Defines iploadbalancing_tcp_frontend",
    "prefix": "tf-ovh-resource-iploadbalancing_tcp_frontend",
    "body": [
      "data \"ovh_iploadbalancing\" \"lb\" {",
      "  service_name = \"ip-1.2.3.4\"",
      "  state       = \"ok\"",
      "}",
      "",
      "resource \"ovh_iploadbalancing_tcp_farm\" \"farm80\" {",
      "   service_name = \"${data.ovh_iploadbalancing.lb.service_name}\"",
      "   display_name = \"ingress-8080-gra\"",
      "   zone = \"all\"",
      "   port = 80",
      "}",
      "",
      "resource \"ovh_iploadbalancing_tcp_frontend\" \"testfrontend\" {",
      "   service_name = \"${data.ovh_iploadbalancing.lb.service_name}\"",
      "   display_name = \"ingress-8080-gra\"",
      "   zone = \"all\"",
      "   port = \"80,443\"",
      "   default_farm_id = \"${ovh_iploadbalancing_tcp_farm.farm80.id}\"",
      "}"
    ]
  },
  "ovh-resource-ovh_domain_zone_record": {
    "description": "Defines ovh_domain_zone_record",
    "prefix": "tf-ovh-resource-ovh_domain_zone_record",
    "body": [
      "# Add a record to a sub-domain",
      "resource \"ovh_domain_zone_record\" \"test\" {",
      "    zone = \"testdemo.ovh\"",
      "    subdomain = \"test\"",
      "    fieldtype = \"A\"",
      "    ttl = \"3600\"",
      "    target = \"0.0.0.0\"",
      "}"
    ]
  },
  "ovh-resource-ovh_domain_zone_redirection": {
    "description": "Defines ovh_domain_zone_redirection",
    "prefix": "tf-ovh-resource-ovh_domain_zone_redirection",
    "body": [
      "# Add a redirection to a sub-domain",
      "resource \"ovh_domain_zone_redirection\" \"test\" {",
      "    zone = \"testdemo.ovh\"",
      "    subdomain = \"test\"",
      "    type = \"visiblePermanent\"",
      "    target = \"http://www.ovh\"",
      "}"
    ]
  },
  "ovh-resource-publiccloud_private_network": {
    "description": "Defines publiccloud_private_network",
    "prefix": "tf-ovh-resource-publiccloud_private_network",
    "body": [
      "resource \"ovh_publiccloud_private_network\" \"net\" {",
      "   project_id = \"67890\"",
      "   name       = \"admin_network\"",
      "   regions    = [\"GRA1\", \"BHS1\"]",
      "}"
    ]
  },
  "ovh-resource-publiccloud_private_network_subnet": {
    "description": "Defines publiccloud_private_network_subnet",
    "prefix": "tf-ovh-resource-publiccloud_private_network_subnet",
    "body": [
      "resource \"ovh_publiccloud_private_network_subnet\" \"subnet\" {",
      "   project_id = \"67890\"",
      "   network_id = \"0234543\"",
      "   region     = \"GRA1\"",
      "   start      = \"192.168.168.100\"",
      "   end        = \"192.168.168.200\"",
      "   network    = \"192.168.168.0/24\"",
      "   dhcp       = true",
      "   no_gateway = false",
      "}"
    ]
  },
  "ovh-resource-publiccloud_user": {
    "description": "Defines publiccloud_user",
    "prefix": "tf-ovh-resource-publiccloud_user",
    "body": [
      "resource \"ovh_publiccloud_user\" \"user1\" {",
      "   project_id = \"67890\"",
      "}"
    ]
  },
  "ovh-resource-vrack_cloudproject": {
    "description": "Defines vrack_cloudproject",
    "prefix": "tf-ovh-resource-vrack_cloudproject",
    "body": [
      "resource \"ovh_vrack_cloudproject\" \"attach\" {",
      "  vrack_id   = \"12345\"",
      "  project_id = \"67890\"",
      "}"
    ]
  },
  "ovh-resource-vrack_publiccloud_attachment": {
    "description": "Defines vrack_publiccloud_attachment",
    "prefix": "tf-ovh-resource-vrack_publiccloud_attachment",
    "body": [
      "resource \"ovh_vrack_publiccloud_attachment\" \"attach\" {",
      "  vrack_id   = \"12345\"",
      "  project_id = \"67890\"",
      "}"
    ]
  },
  "packet-data-device": {
    "description": "Defines device",
    "prefix": "tf-packet-data-device",
    "body": [
      "# Fetch a device data and show it's ID",
      "",
      "data \"packet_device\" \"test\" {",
      "  project_id       = \"${local.project_id}\"",
      "  hostname         = \"mydevice\"",
      "}`",
      "",
      "output \"id\" {",
      "  value = \"${data.packet_device.test.id}\"",
      "}",
      ""
    ]
  },
  "packet-data-operating_system": {
    "description": "Defines operating_system",
    "prefix": "tf-packet-data-operating_system",
    "body": [
      "data \"packet_operating_system\" \"example\" {",
      "  name             = \"Container Linux\"",
      "  distro           = \"coreos\"",
      "  version          = \"alpha\"",
      "  provisionable_on = \"c1.small.x86\"",
      "}",
      "",
      "resource \"packet_device\" \"server\" {",
      "  hostname         = \"tf.coreos2\"",
      "  plan             = \"c1.small.x86\"",
      "  facilities       = [\"ewr1\"]",
      "  operating_system = \"${data.packet_operating_system.example.id}\"",
      "  billing_cycle    = \"hourly\"",
      "  project_id       = \"${local.project_id}\"",
      "}",
      ""
    ]
  },
  "packet-data-precreated_ip_block": {
    "description": "Defines precreated_ip_block",
    "prefix": "tf-packet-data-precreated_ip_block",
    "body": [
      "",
      "# Create device in your project and then assign /64 subnet from precreated block",
      "# to the new device",
      "",
      "# Declare your project ID",
      "locals {",
      "  project_id = \"<UUID_of_your_project>\"",
      "}",
      "",
      "resource \"packet_device\" \"web1\" {",
      "  hostname         = \"web1\"",
      "  plan             = \"t1.small.x86\"",
      "  facilities       = [\"ewr1\"]",
      "  operating_system = \"ubuntu_16_04\"",
      "  billing_cycle    = \"hourly\"",
      "  project_id       = \"${local.project_id}\"",
      "  ",
      "}",
      "",
      "data \"packet_precreated_ip_block\" \"test\" {",
      "  facility         = \"ewr1\"",
      "  project_id       = \"${local.project_id}\"",
      "  address_family   = 6",
      "  public           = true",
      "}",
      "",
      "# The precreated IPv6 blocks are /56, so to get /64, we specify 8 more bits for network.",
      "# The cirdsubnet interpolation will pick second /64 subnet from the precreated block.",
      "",
      "resource \"packet_ip_attachment\" \"from_ipv6_block\" {",
      "  device_id = \"${packet_device.web1.id}\"",
      "  cidr_notation = \"${cidrsubnet(data.packet_precreated_ip_block.test.cidr_notation,8,2)}\"",
      "}",
      ""
    ]
  },
  "packet-data-spot_market_price": {
    "description": "Defines spot_market_price",
    "prefix": "tf-packet-data-spot_market_price",
    "body": [
      "data \"packet_spot_market_price\" \"example\" {",
      "  facility = \"ewr1\"",
      "  plan     = \"c1.small.x86\"",
      "}"
    ]
  },
  "packet-resource-bgp_session": {
    "description": "Defines bgp_session",
    "prefix": "tf-packet-resource-bgp_session",
    "body": [
      "locals {",
      "  bgp_password = \"955dB0b81Ef\"",
      "  project_id   = \"<UUID_of_your_project>\"",
      "}",
      "",
      "# you need to enable BGP config for the project. If you decide to create new",
      "# project, you can use the bgp_config section to enable BGP.",
      "# resource \"packet_project\" \"test\" {",
      "#   name = \"testpro\"",
      "#   bgp_config {",
      "#      deployment_type = \"local\"",
      "#      md5 = \"${local.bgp_password}\"",
      "#      asn = 65000",
      "#   }",
      "# }",
      "",
      "resource \"packet_reserved_ip_block\" \"addr\" {",
      "  project_id = \"${local.project_id}\"",
      "  facility = \"ewr1\"",
      "  quantity = 1",
      "}",
      "",
      "resource \"packet_device\" \"test\" {",
      "  hostname         = \"terraform-test-bgp-sesh\"",
      "  plan             = \"t1.small.x86\"",
      "  facilities       = [\"ewr1\"]",
      "  operating_system = \"ubuntu_16_04\"",
      "  billing_cycle    = \"hourly\"",
      "  project_id       = \"${local.project_id}\"",
      "}",
      "",
      "resource \"packet_bgp_session\" \"test\" {",
      "  device_id = \"${packet_device.test.id}\"",
      "  address_family = \"ipv4\"",
      "}",
      "",
      "",
      "data \"template_file\" \"interface_lo0\" {",
      "  template = <<EOF",
      "auto lo:0",
      "iface lo:0 inet static",
      "   address $${floating_ip}",
      "   netmask $${floating_netmask}",
      "EOF",
      "",
      "  vars = {",
      "    floating_ip       = \"${packet_reserved_ip_block.addr.address}\"",
      "    floating_netmask  = \"${packet_reserved_ip_block.addr.netmask}\"",
      "  }",
      "}",
      "",
      "data \"template_file\" \"bird_conf_template\" {",
      "",
      "  template = <<EOF",
      "filter packet_bgp {",
      "    if net = $${floating_ip}/$${floating_cidr} then accept;",
      "}",
      "router id $${private_ipv4};",
      "protocol direct {",
      "    interface \"lo\";",
      "}",
      "protocol kernel {",
      "    scan time 10;",
      "    persist;",
      "    import all;",
      "    export all;",
      "}",
      "protocol device {",
      "    scan time 10;",
      "}",
      "protocol bgp {",
      "    export filter packet_bgp;",
      "    local as 65000;",
      "    neighbor $${gateway_ip} as 65530;",
      "    password \"$${bgp_password}\"; ",
      "}",
      "EOF",
      "",
      "  vars = {",
      "    floating_ip    = \"${packet_reserved_ip_block.addr.address}\"",
      "    floating_cidr  = \"${packet_reserved_ip_block.addr.cidr}\"",
      "    private_ipv4   = \"${packet_device.test.network.2.address}\"",
      "    gateway_ip     = \"${packet_device.test.network.2.gateway}\"",
      "    bgp_password   = \"${local.bgp_password}\"",
      "  }",
      "}",
      "",
      "resource \"null_resource\" \"configure_bird\" {",
      "",
      "  connection {",
      "    type = \"ssh\"",
      "    host = \"${packet_device.test.access_public_ipv4}\"",
      "    private_key = \"${file(\"/home/tomk/keys/tkarasek_key.pem\")}\"",
      "    agent = false",
      "  }",
      "",
      "  provisioner \"remote-exec\" {",
      "    inline = [",
      "      \"apt-get install bird\",",
      "      \"mv /etc/bird/bird.conf /etc/bird/bird.conf.old\",",
      "    ]",
      "  }",
      "",
      "  triggers = {",
      "    template = \"${data.template_file.bird_conf_template.rendered}\"",
      "    template = \"${data.template_file.interface_lo0.rendered}\"",
      "  }",
      "",
      "  provisioner \"file\" {",
      "    content     = \"${data.template_file.bird_conf_template.rendered}\"",
      "    destination = \"/etc/bird/bird.conf\"",
      "  }",
      "",
      "  provisioner \"file\" {",
      "    content     = \"${data.template_file.interface_lo0.rendered}\"",
      "    destination = \"/etc/network/interfaces.d/lo0\"",
      "  }",
      "",
      "  provisioner \"remote-exec\" {",
      "    inline = [",
      "      \"sysctl net.ipv4.ip_forward=1\",",
      "      \"grep /etc/network/interfaces.d /etc/network/interfaces || echo 'source /etc/network/interfaces.d/*' >> /etc/network/interfaces\",",
      "      \"ifup lo:0\",",
      "      \"service bird restart\",",
      "    ]",
      "  }",
      "}"
    ]
  },
  "packet-resource-connect": {
    "description": "Defines connect",
    "prefix": "tf-packet-resource-connect",
    "body": [
      "# Create a new VLAN in ewr1 and connect it to Azure ExpressRoute ",
      "",
      "resource \"packet_vlan\" \"vlan1\" {",
      "  description = \"VLAN in New Jersey\"",
      "  facility    = \"ewr1\"",
      "  project_id  = \"${local.project_id}\"",
      "}",
      "",
      "resource \"packet_connect\" \"my_expressroute\" {",
      "  name        = \"test\"",
      "  facility    = \"ewr1\"",
      "  project_id  = \"${local.project_id}\"",
      "  # provider ID for Azure ExpressRoute is ed5de8e0-77a9-4d3b-9de0-65281d3aa831",
      "  provider_id = \"ed5de8e0-77a9-4d3b-9de0-65281d3aa831\"",
      "  # provider_payload for Azure ExpressRoute provider is your ExpressRoute",
      "  # authorization key (in UUID format)",
      "  provider_payload = \"58b4ec12-af34-4435-5435-db3bde4a4b3a\"",
      "  port_speed  = 100",
      "  vxlan       = \"${packet_vlan.vlan1.vxlan}\"",
      "}",
      ""
    ]
  },
  "packet-resource-device": {
    "description": "Defines device",
    "prefix": "tf-packet-resource-device",
    "body": [
      "# Create a device and add it to cool_project",
      "resource \"packet_device\" \"web1\" {",
      "  hostname         = \"tf.coreos2\"",
      "  plan             = \"t1.small.x86\"",
      "  facilities       = [\"ewr1\"]",
      "  operating_system = \"coreos_stable\"",
      "  billing_cycle    = \"hourly\"",
      "  project_id       = \"${local.project_id}\"",
      "}"
    ]
  },
  "packet-resource-ip_attachment": {
    "description": "Defines ip_attachment",
    "prefix": "tf-packet-resource-ip_attachment",
    "body": [
      "",
      "# Reserve /30 block of max 2 public IPv4 addresses in Parsippany, NJ (ewr1) for myproject",
      "resource \"packet_reserved_ip_block\" \"myblock\" {",
      "  project_id = \"${local.project_id}\"",
      "  facility = \"ewr1\"",
      "  quantity = 2",
      "}",
      "",
      "# Assign /32 subnet (single address) from reserved block to a device",
      "resource \"packet_ip_attachment\" \"first_address_assignment\" {",
      "  device_id = \"${packet_device.mydevice.id}\"",
      "  # following interpolation will result to sth like \"147.229.10.152/32\"",
      "  cidr_notation = \"${cidrhost(packet_reserved_ip_block.myblock.cidr_notation,0)}/32\"",
      "}",
      ""
    ]
  },
  "packet-resource-organization": {
    "description": "Defines organization",
    "prefix": "tf-packet-resource-organization",
    "body": [
      "# Create a new Project",
      "resource \"packet_organization\" \"tf_organization_1\" {",
      "  name = \"foobar\"",
      "  description = \"quux\"",
      "}"
    ]
  },
  "packet-resource-port_vlan_attachment": {
    "description": "Defines port_vlan_attachment",
    "prefix": "tf-packet-resource-port_vlan_attachment",
    "body": [
      "# Hybrid network type",
      "",
      "resource \"packet_vlan\" \"test\" {",
      "  description = \"VLAN in New Jersey\"",
      "  facility    = \"ewr1\"",
      "  project_id  = \"${local.project_id}\"",
      "}",
      "",
      "resource \"packet_device\" \"test\" {",
      "  hostname         = \"test\"",
      "  plan             = \"m1.xlarge.x86\"",
      "  facilities       = [\"ewr1\"]",
      "  operating_system = \"ubuntu_16_04\"",
      "  billing_cycle    = \"hourly\"",
      "  project_id       = \"${local.project_id}\"",
      "  network_type     = \"hybrid\"",
      "}",
      "",
      "resource \"packet_port_vlan_attachment\" \"test\" {",
      "  device_id = \"${packet_device.test.id}\"",
      "  port_name = \"eth1\"",
      "  vlan_vnid = \"${packet_vlan.test.vxlan}\"",
      "}",
      "",
      "",
      "# Layer 2 network",
      "",
      "resource \"packet_device\" \"test\" {",
      "  hostname         = \"test\"",
      "  plan             = \"m1.xlarge.x86\"",
      "  facilities       = [\"ewr1\"]",
      "  operating_system = \"ubuntu_16_04\"",
      "  billing_cycle    = \"hourly\"",
      "  project_id       = \"${local.project_id}\"",
      "  network_type     = \"layer2-individual\"",
      "}",
      "",
      "resource \"packet_vlan\" \"test1\" {",
      "  description = \"VLAN in New Jersey\"",
      "  facility    = \"ewr1\"",
      "  project_id  = \"${local.project_id}\"",
      "}",
      "",
      "resource \"packet_vlan\" \"test2\" {",
      "  description = \"VLAN in New Jersey\"",
      "  facility    = \"ewr1\"",
      "  project_id  = \"${local.project_id}\"",
      "}",
      "",
      "resource \"packet_port_vlan_attachment\" \"test1\" {",
      "  device_id = \"${packet_device.test.id}\"",
      "  vlan_vnid = \"${packet_vlan.test1.vxlan}\"",
      "  port_name = \"eth1\"",
      "}",
      "",
      "resource \"packet_port_vlan_attachment\" \"test2\" {",
      "  device_id  = \"${packet_device.test.id}\"",
      "  vlan_vnid  = \"${packet_vlan.test2.vxlan}\"",
      "  port_name  = \"eth1\"",
      "  native     = true",
      "  depends_on = [\"packet_port_vlan_attachment.test1\"]",
      "}"
    ]
  },
  "packet-resource-project": {
    "description": "Defines project",
    "prefix": "tf-packet-resource-project",
    "body": [
      "# Create a new project",
      "resource \"packet_project\" \"tf_project_1\" {",
      "  name           = \"Terraform Fun\"",
      "}"
    ]
  },
  "packet-resource-project_ssh_key": {
    "description": "Defines project_ssh_key",
    "prefix": "tf-packet-resource-project_ssh_key",
    "body": [
      "",
      "locals {",
      "  project_id = \"<UUID_of_your_project>\"",
      "}",
      "",
      "resource \"packet_project_ssh_key\" \"test\" {",
      "  name       = \"test\"",
      "  public_key = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDM/unxJeFqxsTJcu6mhqsMHSaVlpu+Jj/P+44zrm6X/MAoHSX3X9oLgujEjjZ74yLfdfe0bJrbL2YgJzNaEkIQQ1VPMHB5EhTKUBGnzlPP0hHTnxsjAm9qDHgUPgvgFDQSAMzdJRJ0Cexo16Ph9VxCoLh3dxiE7s2gaM2FdVg7P8aSxKypsxAhYV3D0AwqzoOyT6WWhBoQ0xZ85XevOTnJCpImSemEGs6nVGEsWcEc1d1YvdxFjAK4SdsKUMkj4Dsy/leKsdi/DEAf356vbMT1UHsXXvy5TlHu/Pa6qF53v32Enz+nhKy7/8W2Yt2yWx8HnQcT2rug9lvCXagJO6oauqRTO77C4QZn13ZLMZgLT66S/tNh2EX0gi6vmIs5dth8uF+K6nxIyKJXbcA4ASg7F1OJrHKFZdTc5v1cPeq6PcbqGgc+8SrPYQmzvQqLoMBuxyos2hUkYOmw3aeWJj9nFa8Wu5WaN89mUeOqSkU4S5cgUzWUOmKey56B/j/s1sVys9rMhZapVs0wL4L9GBBM48N5jAQZnnpo85A8KsZq5ME22bTLqnxsDXqDYZvS7PSI6Dxi7eleOFE/NYYDkrgDLHTQri8ucDMVeVWHgoMY2bPXdn7KKy5jW5jKsf8EPARXg77A4gRYmgKrcwIKqJEUPqyxJBe0CPoGTqgXPRsUiQ== tomk@hp2\"",
      "  project_id = \"${local.project_id}\"",
      "}",
      "",
      "resource \"packet_device\" \"test\" {",
      "  hostname            = \"test\"",
      "  plan                = \"baremetal_0\"",
      "  facilities          = [\"ewr1\"]",
      "  operating_system    = \"ubuntu_16_04\"",
      "  billing_cycle       = \"hourly\"",
      "  project_ssh_key_ids = [\"${packet_project_ssh_key.test.id}\"]",
      "  project_id          = \"${local.project_id}\"",
      "}"
    ]
  },
  "packet-resource-reserved_ip_block": {
    "description": "Defines reserved_ip_block",
    "prefix": "tf-packet-resource-reserved_ip_block",
    "body": [
      "# Allocate /30 block of max 2 public IPv4 addresses in Parsippany, NJ (ewr1) for myproject",
      "",
      "resource \"packet_reserved_ip_block\" \"two_elastic_addresses\" {",
      "  project_id = \"${local.project_id}\"",
      "  facility = \"ewr1\"",
      "  quantity = 2",
      "}",
      "",
      "# Allocate 1 global floating IP, which can be assigned to device in any facility",
      "",
      "resource \"packet_reserved_ip_block\" \"test\" {",
      "  project_id = \"${local.project_id}\"",
      "  type     = \"global_ipv4\"",
      "  quantity = 1",
      "}`"
    ]
  },
  "packet-resource-spot_market_request": {
    "description": "Defines spot_market_request",
    "prefix": "tf-packet-resource-spot_market_request",
    "body": [
      "# Create a spot market request",
      "resource \"packet_spot_market_request\" \"req\" {",
      "  project_id    = \"${local.project_id}\"",
      "  max_bid_price = 0.03",
      "  facilities    = [\"ewr1\"]",
      "  devices_min   = 1",
      "  devices_max   = 1",
      "",
      "  instance_parameters {",
      "    hostname         = \"testspot\"",
      "    billing_cycle    = \"hourly\"",
      "    operating_system = \"coreos_stable\"",
      "    plan             = \"t1.small.x86\"",
      "  }",
      "}"
    ]
  },
  "packet-resource-ssh_key": {
    "description": "Defines ssh_key",
    "prefix": "tf-packet-resource-ssh_key",
    "body": [
      "# Create a new SSH key",
      "resource \"packet_ssh_key\" \"key1\" {",
      "  name       = \"terraform-1\"",
      "  public_key = \"${file(\"/home/terraform/.ssh/id_rsa.pub\")}\"",
      "}",
      "",
      "# Create new device with \"key1\" included. The device resource \"depends_on\" the",
      "# key, in order to make sure the key is created before the device.",
      "resource \"packet_device\" \"test\" {",
      "  hostname         = \"test-device\"",
      "  plan             = \"t1.small.x86\"",
      "  facilities       = [\"sjc1\"]",
      "  operating_system = \"ubuntu_16_04\"",
      "  billing_cycle    = \"hourly\"",
      "  project_id       = \"${local.project_id}\"",
      "  depends_on       = [\"packet_ssh_key.key1\"]",
      "}",
      ""
    ]
  },
  "packet-resource-vlan": {
    "description": "Defines vlan",
    "prefix": "tf-packet-resource-vlan",
    "body": [
      "# Create a new VLAN in datacenter \"ewr1\"",
      "",
      "resource \"packet_vlan\" \"vlan1\" {",
      "  description = \"VLAN in New Jersey\"",
      "  facility    = \"ewr1\"",
      "  project_id  = \"${local.project_id}\"",
      "}"
    ]
  },
  "packet-resource-volume": {
    "description": "Defines volume",
    "prefix": "tf-packet-resource-volume",
    "body": [
      "# Create a new block volume",
      "resource \"packet_volume\" \"volume1\" {",
      "  description   = \"terraform-volume-1\"",
      "  facility      = \"ewr1\"",
      "  project_id    = \"${local.project_id}\"",
      "  plan          = \"storage_1\"",
      "  size          = 100",
      "  billing_cycle = \"hourly\"",
      "",
      "  snapshot_policies = {",
      "    snapshot_frequency = \"1day\"",
      "",
      "    snapshot_count = 7",
      "  }",
      "",
      "  snapshot_policies = {",
      "    snapshot_frequency = \"1month\"",
      "",
      "    snapshot_count = 6",
      "  }",
      "}"
    ]
  },
  "packet-resource-volume_attachment": {
    "description": "Defines volume_attachment",
    "prefix": "tf-packet-resource-volume_attachment",
    "body": [
      "resource \"packet_device\" \"test_device_va\" {",
      "  hostname         = \"terraform-test-device-va\"",
      "  plan             = \"t1.small.x86\"",
      "  facilities       = [\"ewr1\"]",
      "  operating_system = \"ubuntu_16_04\"",
      "  billing_cycle    = \"hourly\"",
      "  project_id       = \"${local.project_id}\"",
      "}",
      "",
      "resource \"packet_volume\" \"test_volume_va\" {",
      "  plan = \"storage_1\"",
      "  billing_cycle = \"hourly\"",
      "  size = 100",
      "  project_id = \"${local.project_id}\"",
      "  facility = \"ewr1\"",
      "  snapshot_policies = { snapshot_frequency = \"1day\", snapshot_count = 7 }",
      "}",
      "",
      "resource \"packet_volume_attachment\" \"test_volume_attachment\" {",
      "  device_id = \"${packet_device.test_device_va.id}\"",
      "  volume_id = \"${packet_volume.test_volume_va.id}\"",
      "}"
    ]
  },
  "pagerduty-data-escalation_policy": {
    "description": "Defines escalation_policy",
    "prefix": "tf-pagerduty-data-escalation_policy",
    "body": [
      "data \"pagerduty_escalation_policy\" \"test\" {",
      "  name = \"Engineering Escalation Policy\"",
      "}",
      "",
      "resource \"pagerduty_service\" \"test\" {",
      "  name                    = \"My Web App\"",
      "  auto_resolve_timeout    = 14400",
      "  acknowledgement_timeout = 600",
      "  escalation_policy       = \"${data.pagerduty_escalation_policy.test.id}\"",
      "}"
    ]
  },
  "pagerduty-data-extension_schema": {
    "description": "Defines extension_schema",
    "prefix": "tf-pagerduty-data-extension_schema",
    "body": [
      "data \"pagerduty_extension_schema\" \"webhook\" {",
      "  name = \"Generic V2 Webhook\"",
      "}",
      "",
      "resource \"pagerduty_user\" \"example\" {",
      "  name  = \"Howard James\"",
      "  email = \"howard.james@example.domain\"",
      "  teams = [\"${pagerduty_team.example.id}\"]",
      "}",
      "",
      "resource \"pagerduty_escalation_policy\" \"foo\" {",
      "  name      = \"Engineering Escalation Policy\"",
      "  num_loops = 2",
      "",
      "  rule {",
      "    escalation_delay_in_minutes = 10",
      "",
      "    target {",
      "      type = \"user\"",
      "      id   = \"${pagerduty_user.example.id}\"",
      "    }",
      "  }",
      "}",
      "",
      "resource \"pagerduty_service\" \"example\" {",
      "  name                    = \"My Web App\"",
      "  auto_resolve_timeout    = 14400",
      "  acknowledgement_timeout = 600",
      "  escalation_policy       = \"${pagerduty_escalation_policy.example.id}\"",
      "}",
      "",
      "",
      "resource \"pagerduty_extension\" \"slack\"{",
      "  name = \"My Web App Extension\"",
      "  endpoint_url = \"https://generic_webhook_url/XXXXXX/BBBBBB\"",
      "  extension_schema = \"${data.pagerduty_extension_schema.webhook.id}\"",
      "  extension_objects    = [\"${pagerduty_service.example.id}\"]",
      "}"
    ]
  },
  "pagerduty-data-schedule": {
    "description": "Defines schedule",
    "prefix": "tf-pagerduty-data-schedule",
    "body": [
      "data \"pagerduty_schedule\" \"test\" {",
      "  name = \"Daily Engineering Rotation\"",
      "}",
      "",
      "resource \"pagerduty_escalation_policy\" \"foo\" {",
      "  name      = \"Engineering Escalation Policy\"",
      "  num_loops = 2",
      "",
      "  rule {",
      "    escalation_delay_in_minutes = 10",
      "",
      "    target {",
      "      type = \"schedule\"",
      "      id   = \"${data.pagerduty_schedule.test.id}\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "pagerduty-data-team": {
    "description": "Defines team",
    "prefix": "tf-pagerduty-data-team",
    "body": [
      "data \"pagerduty_user\" \"me\" {",
      "  email = \"me@example.com\"",
      "}",
      "",
      "data \"pagerduty_team\" \"devops\" {",
      "  name = \"devops\"",
      "}",
      "",
      "resource \"pagerduty_escalation_policy\" \"foo\" {",
      "  name      = \"DevOps Escalation Policy\"",
      "  num_loops = 2",
      "",
      "  teams = [\"${data.pagerduty_team.devops.id}\"]",
      "",
      "  rule {",
      "    escalation_delay_in_minutes = 10",
      "",
      "    target {",
      "      type = \"user\"",
      "      id   = \"${data.pagerduty_user.me.id}\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "pagerduty-data-user": {
    "description": "Defines user",
    "prefix": "tf-pagerduty-data-user",
    "body": [
      "data \"pagerduty_user\" \"me\" {",
      "  email = \"me@example.com\"",
      "}",
      "",
      "resource \"pagerduty_escalation_policy\" \"foo\" {",
      "  name      = \"Engineering Escalation Policy\"",
      "  num_loops = 2",
      "",
      "  rule {",
      "    escalation_delay_in_minutes = 10",
      "",
      "    target {",
      "      type = \"user\"",
      "      id   = \"${data.pagerduty_user.me.id}\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "pagerduty-data-vendor": {
    "description": "Defines vendor",
    "prefix": "tf-pagerduty-data-vendor",
    "body": [
      "data \"pagerduty_vendor\" \"datadog\" {",
      "  name = \"Datadog\"",
      "}",
      "",
      "resource \"pagerduty_user\" \"example\" {",
      "  name  = \"Earline Greenholt\"",
      "  email = \"125.greenholt.earline@graham.name\"",
      "  teams = [\"${pagerduty_team.example.id}\"]",
      "}",
      "",
      "resource \"pagerduty_escalation_policy\" \"foo\" {",
      "  name      = \"Engineering Escalation Policy\"",
      "  num_loops = 2",
      "",
      "  rule {",
      "    escalation_delay_in_minutes = 10",
      "",
      "    target {",
      "      type = \"user\"",
      "      id   = \"${pagerduty_user.example.id}\"",
      "    }",
      "  }",
      "}",
      "",
      "resource \"pagerduty_service\" \"example\" {",
      "  name                    = \"My Web App\"",
      "  auto_resolve_timeout    = 14400",
      "  acknowledgement_timeout = 600",
      "  escalation_policy       = \"${pagerduty_escalation_policy.example.id}\"",
      "}",
      "",
      "resource \"pagerduty_service_integration\" \"example\" {",
      "  name    = \"Datadog Integration\"",
      "  vendor  = \"${data.pagerduty_vendor.datadog.id}\"",
      "  service = \"${pagerduty_service.example.id}\"",
      "  type    = \"generic_events_api_inbound_integration\"",
      "}"
    ]
  },
  "pagerduty-resource-addon": {
    "description": "Defines addon",
    "prefix": "tf-pagerduty-resource-addon",
    "body": [
      "resource \"pagerduty_addon\" \"example\" {",
      "  name = \"Internal Status Page\"",
      "  src  = \"https://intranet.example.com/status\"",
      "}"
    ]
  },
  "pagerduty-resource-escalation_policy": {
    "description": "Defines escalation_policy",
    "prefix": "tf-pagerduty-resource-escalation_policy",
    "body": [
      "resource \"pagerduty_team\" \"example\" {",
      "  name        = \"Engineering\"",
      "  description = \"All engineering\"",
      "}",
      "",
      "resource \"pagerduty_user\" \"example\" {",
      "  name  = \"Earline Greenholt\"",
      "  email = \"125.greenholt.earline@graham.name\"",
      "  teams = [\"${pagerduty_team.example.id}\"]",
      "}",
      "",
      "resource \"pagerduty_escalation_policy\" \"example\" {",
      "  name      = \"Engineering Escalation Policy\"",
      "  num_loops = 2",
      "  teams     = [\"${pagerduty_team.example.id}\"]",
      "",
      "  rule {",
      "    escalation_delay_in_minutes = 10",
      "",
      "    target {",
      "      type = \"user\"",
      "      id   = \"${pagerduty_user.example.id}\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "pagerduty-resource-extension": {
    "description": "Defines extension",
    "prefix": "tf-pagerduty-resource-extension",
    "body": [
      "data \"pagerduty_extension_schema\" \"webhook\" {",
      "  name = \"Generic V2 Webhook\"",
      "}",
      "",
      "resource \"pagerduty_user\" \"example\" {",
      "  name  = \"Howard James\"",
      "  email = \"howard.james@example.domain\"",
      "  teams = [\"${pagerduty_team.example.id}\"]",
      "}",
      "",
      "resource \"pagerduty_escalation_policy\" \"foo\" {",
      "  name      = \"Engineering Escalation Policy\"",
      "  num_loops = 2",
      "",
      "  rule {",
      "    escalation_delay_in_minutes = 10",
      "",
      "    target {",
      "      type = \"user\"",
      "      id   = \"${pagerduty_user.example.id}\"",
      "    }",
      "  }",
      "}",
      "",
      "resource \"pagerduty_service\" \"example\" {",
      "  name                    = \"My Web App\"",
      "  auto_resolve_timeout    = 14400",
      "  acknowledgement_timeout = 600",
      "  escalation_policy       = \"${pagerduty_escalation_policy.example.id}\"",
      "}",
      "",
      "",
      "resource \"pagerduty_extension\" \"slack\"{",
      "  name = \"My Web App Extension\"",
      "  endpoint_url = \"https://generic_webhook_url/XXXXXX/BBBBBB\"",
      "  extension_schema = \"${data.pagerduty_extension_schema.webhook.id}\"",
      "  extension_objects    = [\"${pagerduty_service.example.id}\"]",
      "",
      "  config = <<EOF",
      "{",
      "\t\"restrict\": \"any\",",
      "\t\"notify_types\": {",
      "\t\t\t\"resolve\": false,",
      "\t\t\t\"acknowledge\": false,",
      "\t\t\t\"assignments\": false",
      "\t},",
      "\t\"access_token\": \"XXX\"",
      "}",
      "EOF",
      "",
      "}"
    ]
  },
  "pagerduty-resource-maintenance_window": {
    "description": "Defines maintenance_window",
    "prefix": "tf-pagerduty-resource-maintenance_window",
    "body": [
      "resource \"pagerduty_maintenance_window\" \"example\" {",
      "  start_time  = \"2015-11-09T20:00:00-05:00\"",
      "  end_time    = \"2015-11-09T22:00:00-05:00\"",
      "  services    = [\"${pagerduty_service.example.id}\"]",
      "}"
    ]
  },
  "pagerduty-resource-schedule": {
    "description": "Defines schedule",
    "prefix": "tf-pagerduty-resource-schedule",
    "body": [
      "resource \"pagerduty_user\" \"example\" {",
      "  name  = \"Earline Greenholt\"",
      "  email = \"125.greenholt.earline@graham.name\"",
      "  teams = [\"${pagerduty_team.example.id}\"]",
      "}",
      "",
      "resource \"pagerduty_schedule\" \"foo\" {",
      "  name      = \"Daily Engineering Rotation\"",
      "  time_zone = \"America/New_York\"",
      "",
      "  layer {",
      "    name                         = \"Night Shift\"",
      "    start                        = \"2015-11-06T20:00:00-05:00\"",
      "    rotation_virtual_start       = \"2015-11-06T20:00:00-05:00\"",
      "    rotation_turn_length_seconds = 86400",
      "    users                        = [\"${pagerduty_user.foo.id}\"]",
      "",
      "    restriction {",
      "      type              = \"daily_restriction\"",
      "      start_time_of_day = \"08:00:00\"",
      "      duration_seconds  = 32400",
      "    }",
      "  }",
      "}"
    ]
  },
  "pagerduty-resource-service": {
    "description": "Defines service",
    "prefix": "tf-pagerduty-resource-service",
    "body": [
      "resource \"pagerduty_user\" \"example\" {",
      "  name  = \"Earline Greenholt\"",
      "  email = \"125.greenholt.earline@graham.name\"",
      "  teams = [\"${pagerduty_team.example.id}\"]",
      "}",
      "",
      "resource \"pagerduty_escalation_policy\" \"foo\" {",
      "  name      = \"Engineering Escalation Policy\"",
      "  num_loops = 2",
      "",
      "  rule {",
      "    escalation_delay_in_minutes = 10",
      "",
      "    target {",
      "      type = \"user\"",
      "      id   = \"${pagerduty_user.example.id}\"",
      "    }",
      "  }",
      "}",
      "",
      "resource \"pagerduty_service\" \"example\" {",
      "  name                    = \"My Web App\"",
      "  auto_resolve_timeout    = 14400",
      "  acknowledgement_timeout = 600",
      "  escalation_policy       = \"${pagerduty_escalation_policy.example.id}\"",
      "  alert_creation          = \"create_incidents\"",
      "}"
    ]
  },
  "pagerduty-resource-service_integration": {
    "description": "Defines service_integration",
    "prefix": "tf-pagerduty-resource-service_integration",
    "body": [
      "resource \"pagerduty_user\" \"example\" {",
      "  name  = \"Earline Greenholt\"",
      "  email = \"125.greenholt.earline@graham.name\"",
      "  teams = [\"${pagerduty_team.example.id}\"]",
      "}",
      "",
      "resource \"pagerduty_escalation_policy\" \"foo\" {",
      "  name      = \"Engineering Escalation Policy\"",
      "  num_loops = 2",
      "",
      "  rule {",
      "    escalation_delay_in_minutes = 10",
      "",
      "    target {",
      "      type = \"user\"",
      "      id   = \"${pagerduty_user.example.id}\"",
      "    }",
      "  }",
      "}",
      "",
      "resource \"pagerduty_service\" \"example\" {",
      "  name                    = \"My Web App\"",
      "  auto_resolve_timeout    = 14400",
      "  acknowledgement_timeout = 600",
      "  escalation_policy       = \"${pagerduty_escalation_policy.example.id}\"",
      "}",
      "",
      "resource \"pagerduty_service_integration\" \"example\" {",
      "  name    = \"Generic API Service Integration\"",
      "  type    = \"generic_events_api_inbound_integration\"",
      "  service = \"${pagerduty_service.example.id}\"",
      "}",
      "",
      "data \"pagerduty_vendor\" \"datadog\" {",
      "  name = \"Datadog\"",
      "}",
      "",
      "resource \"pagerduty_service_integration\" \"datadog\" {",
      "  name    = \"${data.pagerduty_vendor.datadog.name}\"",
      "  service = \"${pagerduty_service.example.id}\"",
      "  vendor  = \"${data.pagerduty_vendor.datadog.id}\"",
      "}",
      "",
      "data \"pagerduty_vendor\" \"cloudwatch\" {",
      "  name = \"Cloudwatch\"",
      "}",
      "",
      "resource \"pagerduty_service_integration\" \"cloudwatch\" {",
      "  name    = \"${data.pagerduty_vendor.cloudwatch.name}\"",
      "  service = \"${pagerduty_service.example.id}\"",
      "  vendor  = \"${data.pagerduty_vendor.cloudwatch.id}\"",
      "}"
    ]
  },
  "pagerduty-resource-team": {
    "description": "Defines team",
    "prefix": "tf-pagerduty-resource-team",
    "body": [
      "resource \"pagerduty_team\" \"example\" {",
      "  name        = \"Engineering\"",
      "  description = \"All engineering\"",
      "}"
    ]
  },
  "pagerduty-resource-team_membership": {
    "description": "Defines team_membership",
    "prefix": "tf-pagerduty-resource-team_membership",
    "body": [
      "resource \"pagerduty_user\" \"foo\" {",
      "  name = \"foo\"",
      "  email = \"foo@bar.com\"",
      "}",
      "",
      "resource \"pagerduty_team\" \"foo\" {",
      "  name        = \"foo\"",
      "  description = \"foo\"",
      "}",
      "",
      "resource \"pagerduty_team_membership\" \"foo\" {",
      "  user_id = \"${pagerduty_user.foo.id}\"",
      "  team_id = \"${pagerduty_team.foo.id}\"",
      "}"
    ]
  },
  "pagerduty-resource-user": {
    "description": "Defines user",
    "prefix": "tf-pagerduty-resource-user",
    "body": [
      "resource \"pagerduty_team\" \"example\" {",
      "  name        = \"Engineering\"",
      "  description = \"All engineering\"",
      "}",
      "",
      "resource \"pagerduty_user\" \"example\" {",
      "  name  = \"Earline Greenholt\"",
      "  email = \"125.greenholt.earline@graham.name\"",
      "  teams = [\"${pagerduty_team.example.id}\"]",
      "}"
    ]
  },
  "pagerduty-resource-user_contact_method": {
    "description": "Defines user_contact_method",
    "prefix": "tf-pagerduty-resource-user_contact_method",
    "body": [
      "resource \"pagerduty_user\" \"example\" {",
      "  name  = \"Earline Greenholt\"",
      "  email = \"125.greenholt.earline@graham.name\"",
      "  teams = [\"${pagerduty_team.example.id}\"]",
      "}",
      "",
      "resource \"pagerduty_user_contact_method\" \"email\" {",
      "  user_id = \"${pagerduty_user.example.id}\"",
      "  type    = \"email_contact_method\"",
      "  address = \"foo@bar.com\"",
      "  label   = \"Work\"",
      "}",
      "",
      "resource \"pagerduty_user_contact_method\" \"phone\" {",
      "  user_id      = \"${pagerduty_user.example.id}\"",
      "  type         = \"phone_contact_method\"",
      "  country_code = \"+1\"",
      "  address      = \"2025550199\"",
      "  label        = \"Work\"",
      "}",
      "",
      "resource \"pagerduty_user_contact_method\" \"sms\" {",
      "  user_id      = \"${pagerduty_user.example.id}\"",
      "  type         = \"sms_contact_method\"",
      "  country_code = \"+1\"",
      "  address      = \"2025550199\"",
      "  label        = \"Work\"",
      "}"
    ]
  },
  "panos-data-dhcp_interface_info": {
    "description": "Defines dhcp_interface_info",
    "prefix": "tf-panos-data-dhcp_interface_info",
    "body": [
      "data \"panos_dhcp_interface_info\" \"example\" {",
      "    interface = \"ethernet1/1\"",
      "}",
      "",
      "output \"eth1_ip\" {",
      "    value = \"${data.panos_dhcp_interface_info.example.ip}\"",
      "}"
    ]
  },
  "panos-data-system_info": {
    "description": "Defines system_info",
    "prefix": "tf-panos-data-system_info",
    "body": [
      "data \"panos_system_info\" \"example\" {}"
    ]
  },
  "panos-resource-address_group": {
    "description": "Defines address_group",
    "prefix": "tf-panos-resource-address_group",
    "body": [
      "<vsys>:<name>"
    ]
  },
  "panos-resource-address_object": {
    "description": "Defines address_object",
    "prefix": "tf-panos-resource-address_object",
    "body": [
      "<vsys>:<name>"
    ]
  },
  "panos-resource-administrative_tag": {
    "description": "Defines administrative_tag",
    "prefix": "tf-panos-resource-administrative_tag",
    "body": [
      "<vsys>:<name>"
    ]
  },
  "panos-resource-bfd_profile": {
    "description": "Defines bfd_profile",
    "prefix": "tf-panos-resource-bfd_profile",
    "body": [
      "<name>"
    ]
  },
  "panos-resource-bgp": {
    "description": "Defines bgp",
    "prefix": "tf-panos-resource-bgp",
    "body": [
      "<virtual_router>"
    ]
  },
  "panos-resource-bgp_aggregate": {
    "description": "Defines bgp_aggregate",
    "prefix": "tf-panos-resource-bgp_aggregate",
    "body": [
      "<virtual_router>:<name>"
    ]
  },
  "panos-resource-bgp_aggregate_advertise_filter": {
    "description": "Defines bgp_aggregate_advertise_filter",
    "prefix": "tf-panos-resource-bgp_aggregate_advertise_filter",
    "body": [
      "<virtual_router>:<bgp_aggregate>:<name>"
    ]
  },
  "panos-resource-bgp_aggregate_suppress_filter": {
    "description": "Defines bgp_aggregate_suppress_filter",
    "prefix": "tf-panos-resource-bgp_aggregate_suppress_filter",
    "body": [
      "<virtual_router>:<bgp_aggregate>:<name>"
    ]
  },
  "panos-resource-bgp_auth_profile": {
    "description": "Defines bgp_auth_profile",
    "prefix": "tf-panos-resource-bgp_auth_profile",
    "body": [
      "resource \"panos_bgp_auth_profile\" \"example\" {",
      "    virtual_router = \"${panos_bgp.conf.virtual_router}\"",
      "    name = \"prof1\"",
      "    secret = \"secret\"",
      "}",
      "",
      "resource \"panos_bgp\" \"conf\" {",
      "    virtual_router = \"${panos_virtual_router.rtr.name}\"",
      "    router_id = \"5.5.5.5\"",
      "    as_number = \"42\"",
      "}",
      "",
      "resource \"panos_virtual_router\" \"rtr\" {",
      "    name = \"my virtual router\"",
      "}"
    ]
  },
  "panos-resource-bgp_conditional_adv": {
    "description": "Defines bgp_conditional_adv",
    "prefix": "tf-panos-resource-bgp_conditional_adv",
    "body": [
      "<virtual_router>:<name>"
    ]
  },
  "panos-resource-bgp_conditional_adv_advertise_filter": {
    "description": "Defines bgp_conditional_adv_advertise_filter",
    "prefix": "tf-panos-resource-bgp_conditional_adv_advertise_filter",
    "body": [
      "<virtual_router>:<bgp_conditional_adv>:<name>"
    ]
  },
  "panos-resource-bgp_conditional_adv_non_exist_filter": {
    "description": "Defines bgp_conditional_adv_non_exist_filter",
    "prefix": "tf-panos-resource-bgp_conditional_adv_non_exist_filter",
    "body": [
      "<virtual_router>:<bgp_conditional_adv>:<name>"
    ]
  },
  "panos-resource-bgp_dampening_profile": {
    "description": "Defines bgp_dampening_profile",
    "prefix": "tf-panos-resource-bgp_dampening_profile",
    "body": [
      "<virtual_router>:<name>"
    ]
  },
  "panos-resource-bgp_export_rule_group": {
    "description": "Defines bgp_export_rule_group",
    "prefix": "tf-panos-resource-bgp_export_rule_group",
    "body": [
      "resource \"panos_bgp_export_rule_group\" \"example\" {",
      "    virtual_router = \"${panos_bgp.conf.virtual_router}\"",
      "    rule {",
      "        name = \"first\"",
      "        match_as_path_regex = \"*foo*\"",
      "        match_address_prefix {",
      "            prefix = \"192.168.1.0/24\"",
      "        }",
      "        match_address_prefix {",
      "            prefix = \"192.168.2.0/24\"",
      "            exact = true",
      "        }",
      "        match_route_table = \"${data.panos_system_info.x.version_major >= 8 ? \"unicast\" : \"\"}\"",
      "        local_preference = \"42\"",
      "        med = \"43\"",
      "        weight = 44",
      "        origin = \"incomplete\"",
      "    }",
      "    rule {",
      "        name = \"second\"",
      "        match_as_path_regex = \"*bar*\"",
      "        action = \"deny\"",
      "        match_route_table = \"${data.panos_system_info.x.version_major >= 8 ? \"unicast\" : \"\"}\"",
      "    }",
      "}",
      "",
      "data \"panos_system_info\" \"x\" {}",
      "",
      "resource \"panos_bgp\" \"conf\" {",
      "    virtual_router = \"${panos_virtual_router.vr.name}\"",
      "    router_id = \"1.2.3.4\"",
      "    as_number = 443",
      "}",
      "",
      "resource \"panos_virtual_router\" \"vr\" {",
      "    name = \"my vr\"",
      "}"
    ]
  },
  "panos-resource-bgp_import_rule_group": {
    "description": "Defines bgp_import_rule_group",
    "prefix": "tf-panos-resource-bgp_import_rule_group",
    "body": [
      "resource \"panos_bgp_import_rule_group\" \"example\" {",
      "    virtual_router = \"${panos_bgp.conf.virtual_router}\"",
      "    rule {",
      "        name = \"first\"",
      "        match_as_path_regex = \"*foo*\"",
      "        match_address_prefix {",
      "            prefix = \"192.168.1.0/24\"",
      "        }",
      "        match_address_prefix {",
      "            prefix = \"192.168.2.0/24\"",
      "            exact = true",
      "        }",
      "        match_route_table = \"${data.panos_system_info.x.version_major >= 8 ? \"unicast\" : \"\"}\"",
      "        local_preference = \"42\"",
      "        med = \"43\"",
      "        weight = 44",
      "        origin = \"incomplete\"",
      "    }",
      "    rule {",
      "        name = \"second\"",
      "        match_as_path_regex = \"*bar*\"",
      "        action = \"deny\"",
      "        match_route_table = \"${data.panos_system_info.x.version_major >= 8 ? \"unicast\" : \"\"}\"",
      "    }",
      "}",
      "",
      "data \"panos_system_info\" \"x\" {}",
      "",
      "resource \"panos_bgp\" \"conf\" {",
      "    virtual_router = \"${panos_virtual_router.vr.name}\"",
      "    router_id = \"1.2.3.4\"",
      "    as_number = 443",
      "}",
      "",
      "resource \"panos_virtual_router\" \"vr\" {",
      "    name = \"my vr\"",
      "}"
    ]
  },
  "panos-resource-bgp_peer": {
    "description": "Defines bgp_peer",
    "prefix": "tf-panos-resource-bgp_peer",
    "body": [
      "<virtual_router>:<bgp_peer_group>:<name>"
    ]
  },
  "panos-resource-bgp_peer_group": {
    "description": "Defines bgp_peer_group",
    "prefix": "tf-panos-resource-bgp_peer_group",
    "body": [
      "<virtual_router>:<name>"
    ]
  },
  "panos-resource-bgp_redist_rule": {
    "description": "Defines bgp_redist_rule",
    "prefix": "tf-panos-resource-bgp_redist_rule",
    "body": [
      "<virtual_router>:<name>"
    ]
  },
  "panos-resource-dag_tags": {
    "description": "Defines dag_tags",
    "prefix": "tf-panos-resource-dag_tags",
    "body": [
      "resource \"panos_dag_tags\" \"example\" {",
      "    vsys = \"vsys1\"",
      "    register {",
      "        ip = \"10.1.1.1\"",
      "        tags = [\"tag1\", \"tag2\"]",
      "    }",
      "    register {",
      "        ip = \"10.1.1.2\"",
      "        tags = [\"tag3\"]",
      "    }",
      "}"
    ]
  },
  "panos-resource-edl": {
    "description": "Defines edl",
    "prefix": "tf-panos-resource-edl",
    "body": [
      "<vsys>:<name>"
    ]
  },
  "panos-resource-ethernet_interface": {
    "description": "Defines ethernet_interface",
    "prefix": "tf-panos-resource-ethernet_interface",
    "body": [
      "<vsys>:<name>"
    ]
  },
  "panos-resource-general_settings": {
    "description": "Defines general_settings",
    "prefix": "tf-panos-resource-general_settings",
    "body": [
      "resource \"panos_general_settings\" \"example\" {",
      "    hostname = \"ngfw220\"",
      "    dns_primary = \"10.5.1.10\"",
      "    ntp_primary = \"10.5.1.10\"",
      "    ntp_primary_auth_type = \"none\"",
      "}"
    ]
  },
  "panos-resource-gre_tunnel": {
    "description": "Defines gre_tunnel",
    "prefix": "tf-panos-resource-gre_tunnel",
    "body": [
      "<name>"
    ]
  },
  "panos-resource-ike_crypto_profile": {
    "description": "Defines ike_crypto_profile",
    "prefix": "tf-panos-resource-ike_crypto_profile",
    "body": [
      "<name>"
    ]
  },
  "panos-resource-ike_gateway": {
    "description": "Defines ike_gateway",
    "prefix": "tf-panos-resource-ike_gateway",
    "body": [
      "resource \"panos_ike_gateway\" \"example\" {",
      "    name = \"example\"",
      "    peer_ip_type = \"dynamic\"",
      "    interface = \"loopback.42\"",
      "    pre_shared_key = \"secret\"",
      "    local_id_type = \"ipaddr\"",
      "    local_id_value = \"10.1.1.1\"",
      "    peer_id_type = \"ipaddr\"",
      "    peer_id_value = \"10.5.1.1\"",
      "    ikev1_crypto_profile = \"myIkeProfile\"",
      "}"
    ]
  },
  "panos-resource-ipsec_crypto_profile": {
    "description": "Defines ipsec_crypto_profile",
    "prefix": "tf-panos-resource-ipsec_crypto_profile",
    "body": [
      "<name>"
    ]
  },
  "panos-resource-ipsec_tunnel": {
    "description": "Defines ipsec_tunnel",
    "prefix": "tf-panos-resource-ipsec_tunnel",
    "body": [
      "resource \"panos_ipsec_tunnel\" \"example\" {",
      "    name = \"example\"",
      "    tunnel_interface = \"tunnel.7\"",
      "    anti_replay = true",
      "    ak_ike_gateway = \"myIkeGateway\"",
      "    ak_ipsec_crypto_profile = \"myIkeProfile\"",
      "}"
    ]
  },
  "panos-resource-ipsec_tunnel_proxy_id_ipv4": {
    "description": "Defines ipsec_tunnel_proxy_id_ipv4",
    "prefix": "tf-panos-resource-ipsec_tunnel_proxy_id_ipv4",
    "body": [
      "<ipsec_tunnel>:<name>"
    ]
  },
  "panos-resource-license_api_key": {
    "description": "Defines license_api_key",
    "prefix": "tf-panos-resource-license_api_key",
    "body": [
      "resource \"panos_license_api_key\" \"example\" {",
      "    key = \"secret\"",
      "    retain_key = true",
      "}"
    ]
  },
  "panos-resource-licensing": {
    "description": "Defines licensing",
    "prefix": "tf-panos-resource-licensing",
    "body": [
      "resource \"panos_licensing\" \"example\" {",
      "    auth_codes = [\"code1\", \"code2\"]",
      "}"
    ]
  },
  "panos-resource-loopback_interface": {
    "description": "Defines loopback_interface",
    "prefix": "tf-panos-resource-loopback_interface",
    "body": [
      "<vsys>:<name>"
    ]
  },
  "panos-resource-management_profile": {
    "description": "Defines management_profile",
    "prefix": "tf-panos-resource-management_profile",
    "body": [
      "<name>"
    ]
  },
  "panos-resource-nat_rule": {
    "description": "Defines nat_rule",
    "prefix": "tf-panos-resource-nat_rule",
    "body": [
      "resource \"panos_nat_rule\" \"example\" {",
      "    name = \"my nat rule\"",
      "    source_zones = [\"zone1\"]",
      "    destination_zone = \"zone2\"",
      "    to_interface = \"ethernet1/3\"",
      "    source_addresses = [\"any\"]",
      "    destination_addresses = [\"any\"]",
      "    sat_type = \"none\"",
      "    dat_type = \"static\"",
      "    dat_address = \"my dat address object\"",
      "}"
    ]
  },
  "panos-resource-nat_rule_group": {
    "description": "Defines nat_rule_group",
    "prefix": "tf-panos-resource-nat_rule_group",
    "body": [
      "resource \"panos_nat_rule_group\" \"bot\" {",
      "    rule {",
      "        name = \"second\"",
      "        original_packet {",
      "            source_zones = [\"${panos_zone.z2.name}\"]",
      "            destination_zone = \"${panos_zone.z3.name}\"",
      "            destination_interface = \"${panos_ethernet_interface.x.name}\"",
      "            source_addresses = [\"any\"]",
      "            destination_addresses = [\"any\"]",
      "        }",
      "        translated_packet {",
      "            source {}",
      "            destination {",
      "                static {",
      "                    address = \"10.2.3.1\"",
      "                    port = 5678",
      "                }",
      "            }",
      "        }",
      "    }",
      "    rule {",
      "        name = \"third\"",
      "        original_packet {",
      "            source_zones = [\"${panos_zone.z3.name}\"]",
      "            destination_zone = \"${panos_zone.z2.name}\"",
      "            destination_interface = \"${panos_ethernet_interface.x.name}\"",
      "            source_addresses = [\"any\"]",
      "            destination_addresses = [\"any\"]",
      "        }",
      "        translated_packet {",
      "            source {",
      "                static_ip {",
      "                    translated_address = \"192.168.1.5\"",
      "                    bi_directional = true",
      "                }",
      "            }",
      "            destination {}",
      "        }",
      "    }",
      "}",
      "",
      "resource \"panos_nat_rule_group\" \"top\" {",
      "    position_keyword = \"directly before\"",
      "    position_reference = \"${panos_nat_rule_group.bot.rule.0.name}\"",
      "    rule {",
      "        name = \"first\"",
      "        original_packet {",
      "            source_zones = [\"${panos_zone.z1.name}\"]",
      "            destination_zone = \"${panos_zone.z1.name}\"",
      "            destination_interface = \"${panos_ethernet_interface.x.name}\"",
      "            source_addresses = [\"any\"]",
      "            destination_addresses = [\"any\"]",
      "        }",
      "        translated_packet {",
      "            source {",
      "                dynamic_ip_and_port {",
      "                    interface_address {",
      "                        interface = \"${panos_ethernet_interface.x.name}\"",
      "                        ip_address = \"${panos_ethernet_interface.x.static_ips.0}\"",
      "                    }",
      "                }",
      "            }",
      "            destination {",
      "                static {",
      "                    address = \"10.1.1.1\"",
      "                    port = 1234",
      "                }",
      "            }",
      "        }",
      "    }",
      "}",
      "",
      "resource \"panos_ethernet_interface\" \"x\" {",
      "    name = \"ethernet1/6\"",
      "    mode = \"layer3\"",
      "    vsys = \"vsys1\"",
      "    static_ips = [\"10.5.5.1/24\"]",
      "}",
      "",
      "resource \"panos_zone\" \"z1\" {",
      "    name = \"z1\"",
      "    mode = \"layer3\"",
      "}",
      "",
      "resource \"panos_zone\" \"z2\" {",
      "    name = \"z2\"",
      "    mode = \"layer3\"",
      "}",
      "",
      "resource \"panos_zone\" \"z3\" {",
      "    name = \"z3\"",
      "    mode = \"layer3\"",
      "}"
    ]
  },
  "panos-resource-panorama_address_group": {
    "description": "Defines panorama_address_group",
    "prefix": "tf-panos-resource-panorama_address_group",
    "body": [
      "<device_group>:<name>"
    ]
  },
  "panos-resource-panorama_address_object": {
    "description": "Defines panorama_address_object",
    "prefix": "tf-panos-resource-panorama_address_object",
    "body": [
      "<device_group>:<name>"
    ]
  },
  "panos-resource-panorama_administrative_tag": {
    "description": "Defines panorama_administrative_tag",
    "prefix": "tf-panos-resource-panorama_administrative_tag",
    "body": [
      "<device_group>:<name>"
    ]
  },
  "panos-resource-panorama_bfd_profile": {
    "description": "Defines panorama_bfd_profile",
    "prefix": "tf-panos-resource-panorama_bfd_profile",
    "body": [
      "<template>:<template_stack>:<name>"
    ]
  },
  "panos-resource-panorama_bgp": {
    "description": "Defines panorama_bgp",
    "prefix": "tf-panos-resource-panorama_bgp",
    "body": [
      "<template>:<template_stack>:<virtual_router>"
    ]
  },
  "panos-resource-panorama_bgp_aggregate": {
    "description": "Defines panorama_bgp_aggregate",
    "prefix": "tf-panos-resource-panorama_bgp_aggregate",
    "body": [
      "<template>:<template_stack>:<virtual_router>:<name>"
    ]
  },
  "panos-resource-panorama_bgp_aggregate_advertise_filter": {
    "description": "Defines panorama_bgp_aggregate_advertise_filter",
    "prefix": "tf-panos-resource-panorama_bgp_aggregate_advertise_filter",
    "body": [
      "<template>:<template_stack>:<virtual_router>:<bgp_aggregate>:<name>"
    ]
  },
  "panos-resource-panorama_bgp_aggregate_suppress_filter": {
    "description": "Defines panorama_bgp_aggregate_suppress_filter",
    "prefix": "tf-panos-resource-panorama_bgp_aggregate_suppress_filter",
    "body": [
      "<template>:<template_stack>:<virtual_router>:<bgp_aggregate>:<name>"
    ]
  },
  "panos-resource-panorama_bgp_auth_profile": {
    "description": "Defines panorama_bgp_auth_profile",
    "prefix": "tf-panos-resource-panorama_bgp_auth_profile",
    "body": [
      "resource \"panos_panorama_bgp_auth_profile\" \"example\" {",
      "    template = \"${panos_panorama_template.t.name}\"",
      "    virtual_router = \"${panos_panorama_bgp.conf.virtual_router}\"",
      "    name = \"prof1\"",
      "    secret = \"secret\"",
      "}",
      "",
      "resource \"panos_panorama_bgp\" \"conf\" {",
      "    template = \"${panos_panorama_template.t.name}\"",
      "    virtual_router = \"${panos_panorama_virtual_router.rtr.name}\"",
      "    router_id = \"5.5.5.5\"",
      "    as_number = \"42\"",
      "}",
      "",
      "resource \"panos_panorama_virtual_router\" \"rtr\" {",
      "    template = \"${panos_panorama_template.t.name}\"",
      "    name = \"my virtual router\"",
      "}",
      "",
      "resource \"panos_panorama_template\" \"t\" {",
      "    name = \"my template\"",
      "}"
    ]
  },
  "panos-resource-panorama_bgp_conditional_adv": {
    "description": "Defines panorama_bgp_conditional_adv",
    "prefix": "tf-panos-resource-panorama_bgp_conditional_adv",
    "body": [
      "<template>:<template_stack>:<virtual_router>:<name>"
    ]
  },
  "panos-resource-panorama_bgp_conditional_adv_advertise_filter": {
    "description": "Defines panorama_bgp_conditional_adv_advertise_filter",
    "prefix": "tf-panos-resource-panorama_bgp_conditional_adv_advertise_filter",
    "body": [
      "<template>:<template_stack>:<virtual_router>:<bgp_conditional_adv>:<name>"
    ]
  },
  "panos-resource-panorama_bgp_conditional_adv_non_exist_filter": {
    "description": "Defines panorama_bgp_conditional_adv_non_exist_filter",
    "prefix": "tf-panos-resource-panorama_bgp_conditional_adv_non_exist_filter",
    "body": [
      "<template>:<template_stack>:<virtual_router>:<bgp_conditional_adv>:<name>"
    ]
  },
  "panos-resource-panorama_bgp_dampening_profile": {
    "description": "Defines panorama_bgp_dampening_profile",
    "prefix": "tf-panos-resource-panorama_bgp_dampening_profile",
    "body": [
      "<template>:<template_stack>:<virtual_router>:<name>"
    ]
  },
  "panos-resource-panorama_bgp_export_rule_group": {
    "description": "Defines panorama_bgp_export_rule_group",
    "prefix": "tf-panos-resource-panorama_bgp_export_rule_group",
    "body": [
      "resource \"panos_panorama_bgp_export_rule_group\" \"example\" {",
      "    template = \"${panos_panorama_template.t.name}\"",
      "    virtual_router = \"${panos_panorama_bgp.conf.virtual_router}\"",
      "    rule {",
      "        name = \"first\"",
      "        match_as_path_regex = \"*foo*\"",
      "        match_address_prefix {",
      "            prefix = \"192.168.1.0/24\"",
      "        }",
      "        match_address_prefix {",
      "            prefix = \"192.168.2.0/24\"",
      "            exact = true",
      "        }",
      "        match_route_table = \"${data.panos_system_info.x.version_major >= 8 ? \"unicast\" : \"\"}\"",
      "        local_preference = \"42\"",
      "        med = \"43\"",
      "        weight = 44",
      "        origin = \"incomplete\"",
      "    }",
      "    rule {",
      "        name = \"second\"",
      "        match_as_path_regex = \"*bar*\"",
      "        action = \"deny\"",
      "        match_route_table = \"${data.panos_system_info.x.version_major >= 8 ? \"unicast\" : \"\"}\"",
      "    }",
      "}",
      "",
      "data \"panos_system_info\" \"x\" {}",
      "",
      "resource \"panos_panorama_bgp\" \"conf\" {",
      "    template = \"${panos_panorama_template.t.name}\"",
      "    virtual_router = \"${panos_panorama_virtual_router.vr.name}\"",
      "    router_id = \"1.2.3.4\"",
      "    as_number = 443",
      "}",
      "",
      "resource \"panos_panorama_virtual_router\" \"vr\" {",
      "    template = \"${panos_panorama_template.t.name}\"",
      "    name = \"my vr\"",
      "}",
      "",
      "resource \"panos_panorama_template\" t\" {",
      "    name = \"myTemplate\"",
      "}"
    ]
  },
  "panos-resource-panorama_bgp_import_rule_group": {
    "description": "Defines panorama_bgp_import_rule_group",
    "prefix": "tf-panos-resource-panorama_bgp_import_rule_group",
    "body": [
      "resource \"panos_panorama_bgp_import_rule_group\" \"example\" {",
      "    template = \"${panos_panorama_template.t.name}\"",
      "    virtual_router = \"${panos_panorama_bgp.conf.virtual_router}\"",
      "    rule {",
      "        name = \"first\"",
      "        match_as_path_regex = \"*foo*\"",
      "        match_address_prefix {",
      "            prefix = \"192.168.1.0/24\"",
      "        }",
      "        match_address_prefix {",
      "            prefix = \"192.168.2.0/24\"",
      "            exact = true",
      "        }",
      "        match_route_table = \"${data.panos_system_info.x.version_major >= 8 ? \"unicast\" : \"\"}\"",
      "        local_preference = \"42\"",
      "        med = \"43\"",
      "        weight = 44",
      "        origin = \"incomplete\"",
      "    }",
      "    rule {",
      "        name = \"second\"",
      "        match_as_path_regex = \"*bar*\"",
      "        action = \"deny\"",
      "        match_route_table = \"${data.panos_system_info.x.version_major >= 8 ? \"unicast\" : \"\"}\"",
      "    }",
      "}",
      "",
      "data \"panos_system_info\" \"x\" {}",
      "",
      "resource \"panos_panorama_bgp\" \"conf\" {",
      "    template = \"${panos_panorama_template.t.name}\"",
      "    virtual_router = \"${panos_panorama_virtual_router.vr.name}\"",
      "    router_id = \"1.2.3.4\"",
      "    as_number = 443",
      "}",
      "",
      "resource \"panos_panorama_virtual_router\" \"vr\" {",
      "    template = \"${panos_panorama_template.t.name}\"",
      "    name = \"my vr\"",
      "}",
      "",
      "resource \"panos_panorama_template\" t\" {",
      "    name = \"myTemplate\"",
      "}"
    ]
  },
  "panos-resource-panorama_bgp_peer": {
    "description": "Defines panorama_bgp_peer",
    "prefix": "tf-panos-resource-panorama_bgp_peer",
    "body": [
      "<template>:<template_stack>:<virtual_router>:<bgp_peer_group>:<name>"
    ]
  },
  "panos-resource-panorama_bgp_peer_group": {
    "description": "Defines panorama_bgp_peer_group",
    "prefix": "tf-panos-resource-panorama_bgp_peer_group",
    "body": [
      "<template>:<template_stack>:<virtual_router>:<name>"
    ]
  },
  "panos-resource-panorama_bgp_redist_rule": {
    "description": "Defines panorama_bgp_redist_rule",
    "prefix": "tf-panos-resource-panorama_bgp_redist_rule",
    "body": [
      "<template>:<template_stack>:<virtual_router>:<name>"
    ]
  },
  "panos-resource-panorama_device_group": {
    "description": "Defines panorama_device_group",
    "prefix": "tf-panos-resource-panorama_device_group",
    "body": [
      "<name>"
    ]
  },
  "panos-resource-panorama_device_group_entry": {
    "description": "Defines panorama_device_group_entry",
    "prefix": "tf-panos-resource-panorama_device_group_entry",
    "body": [
      "<device_group>:<serial>"
    ]
  },
  "panos-resource-panorama_edl": {
    "description": "Defines panorama_edl",
    "prefix": "tf-panos-resource-panorama_edl",
    "body": [
      "resource \"panos_panorama_edl\" \"example\" {",
      "    name = \"example\"",
      "    type = \"ip\"",
      "    description = \"my edl\"",
      "    source = \"https://example.com\"",
      "    repeat = \"every five minutes\"",
      "    exceptions = [\"10.1.1.1\", \"10.1.1.2\"]",
      "}"
    ]
  },
  "panos-resource-panorama_ethernet_interface": {
    "description": "Defines panorama_ethernet_interface",
    "prefix": "tf-panos-resource-panorama_ethernet_interface",
    "body": [
      "<template>:<template_stack>:<vsys>:<name>"
    ]
  },
  "panos-resource-panorama_gre_tunnel": {
    "description": "Defines panorama_gre_tunnel",
    "prefix": "tf-panos-resource-panorama_gre_tunnel",
    "body": [
      "<template>::<name>"
    ]
  },
  "panos-resource-panorama_ike_crypto_profile": {
    "description": "Defines panorama_ike_crypto_profile",
    "prefix": "tf-panos-resource-panorama_ike_crypto_profile",
    "body": [
      "<template>:<template_stack>:<name>"
    ]
  },
  "panos-resource-panorama_ike_gateway": {
    "description": "Defines panorama_ike_gateway",
    "prefix": "tf-panos-resource-panorama_ike_gateway",
    "body": [
      "resource \"panos_panorama_ike_gateway\" \"example\" {",
      "    name = \"example\"",
      "    template = \"my template\"",
      "    peer_ip_type = \"dynamic\"",
      "    interface = \"loopback.42\"",
      "    pre_shared_key = \"secret\"",
      "    local_id_type = \"ipaddr\"",
      "    local_id_value = \"10.1.1.1\"",
      "    peer_id_type = \"ipaddr\"",
      "    peer_id_value = \"10.5.1.1\"",
      "    ikev1_crypto_profile = \"myIkeProfile\"",
      "}"
    ]
  },
  "panos-resource-panorama_ipsec_crypto_profile": {
    "description": "Defines panorama_ipsec_crypto_profile",
    "prefix": "tf-panos-resource-panorama_ipsec_crypto_profile",
    "body": [
      "<template>:<template_stack>:<name>"
    ]
  },
  "panos-resource-panorama_ipsec_tunnel": {
    "description": "Defines panorama_ipsec_tunnel",
    "prefix": "tf-panos-resource-panorama_ipsec_tunnel",
    "body": [
      "resource \"panos_panorama_ipsec_tunnel\" \"example\" {",
      "    name = \"example\"",
      "    template = \"my template\"",
      "    tunnel_interface = \"tunnel.7\"",
      "    anti_replay = true",
      "    ak_ike_gateway = \"myIkeGateway\"",
      "    ak_ipsec_crypto_profile = \"myIkeProfile\"",
      "}"
    ]
  },
  "panos-resource-panorama_ipsec_tunnel_proxy_id_ipv4": {
    "description": "Defines panorama_ipsec_tunnel_proxy_id_ipv4",
    "prefix": "tf-panos-resource-panorama_ipsec_tunnel_proxy_id_ipv4",
    "body": [
      "<template>:<template_stack>:<ipsec_tunnel>:<name>"
    ]
  },
  "panos-resource-panorama_loopback_interface": {
    "description": "Defines panorama_loopback_interface",
    "prefix": "tf-panos-resource-panorama_loopback_interface",
    "body": [
      "<template>:<template_stack>:<vsys>:<name>"
    ]
  },
  "panos-resource-panorama_management_profile": {
    "description": "Defines panorama_management_profile",
    "prefix": "tf-panos-resource-panorama_management_profile",
    "body": [
      "<template>:<template_stack>:<name>"
    ]
  },
  "panos-resource-panorama_nat_rule": {
    "description": "Defines panorama_nat_rule",
    "prefix": "tf-panos-resource-panorama_nat_rule",
    "body": [
      "resource \"panos_panorama_nat_rule\" \"example\" {",
      "    name = \"my nat rule\"",
      "    source_zones = [\"zone1\"]",
      "    destination_zone = \"zone2\"",
      "    to_interface = \"ethernet1/3\"",
      "    source_addresses = [\"any\"]",
      "    destination_addresses = [\"any\"]",
      "    sat_type = \"none\"",
      "    dat_type = \"static\"",
      "    dat_address = \"my dat address object\"",
      "    target {",
      "        serial = \"123456\"",
      "        vsys_list = [\"vsys1\", \"vsys2\"]",
      "    }",
      "}"
    ]
  },
  "panos-resource-panorama_nat_rule_group": {
    "description": "Defines panorama_nat_rule_group",
    "prefix": "tf-panos-resource-panorama_nat_rule_group",
    "body": [
      "resource \"panos_panorama_nat_rule_group\" \"bot\" {",
      "    device_group = \"${panos_panorama_device_group.dg.name}\"",
      "    rule {",
      "        name = \"second\"",
      "        original_packet {",
      "            source_zones = [\"z2\"]",
      "            destination_zone = \"z3\"",
      "            destination_interface = \"any\"",
      "            source_addresses = [\"any\"]",
      "            destination_addresses = [\"any\"]",
      "        }",
      "        translated_packet {",
      "            source {}",
      "            destination {",
      "                static {",
      "                    address = \"10.2.3.1\"",
      "                    port = 5678",
      "                }",
      "            }",
      "        }",
      "    }",
      "    rule {",
      "        name = \"third\"",
      "        original_packet {",
      "            source_zones = [\"z3\"]",
      "            destination_zone = \"z2\"",
      "            destination_interface = \"any\"",
      "            source_addresses = [\"any\"]",
      "            destination_addresses = [\"any\"]",
      "        }",
      "        translated_packet {",
      "            source {",
      "                static_ip {",
      "                    translated_address = \"192.168.1.5\"",
      "                    bi_directional = true",
      "                }",
      "            }",
      "            destination {}",
      "        }",
      "    }",
      "}",
      "",
      "resource \"panos_panorama_nat_rule_group\" \"top\" {",
      "    device_group = \"${panos_panorama_device_group.dg.name}\"",
      "    position_keyword = \"directly before\"",
      "    position_reference = \"${panos_panorama_nat_rule_group.bot.rule.0.name}\"",
      "    rule {",
      "        name = \"first\"",
      "        target {",
      "            serial = \"123456\"",
      "            vsys_list = [\"vsys1\", \"vsys2\"]",
      "        }",
      "        original_packet {",
      "            source_zones = [\"z1\"]",
      "            destination_zone = \"z1\"",
      "            destination_interface = \"any\"",
      "            source_addresses = [\"any\"]",
      "            destination_addresses = [\"any\"]",
      "        }",
      "        translated_packet {",
      "            source {",
      "                dynamic_ip_and_port {",
      "                    interface_address {",
      "                        interface = \"ethernet1/6\"",
      "                    }",
      "                }",
      "            }",
      "            destination {",
      "                static {",
      "                    address = \"10.1.1.1\"",
      "                    port = 1234",
      "                }",
      "            }",
      "        }",
      "    }",
      "}",
      "",
      "resource \"panos_panorama_device_group\" \"dg\" {",
      "    name = \"myDeviceGroup\"",
      "}"
    ]
  },
  "panos-resource-panorama_redistribution_profile_ipv4": {
    "description": "Defines panorama_redistribution_profile_ipv4",
    "prefix": "tf-panos-resource-panorama_redistribution_profile_ipv4",
    "body": [
      "<template>:<template_stack>:<virtual_router>:<name>"
    ]
  },
  "panos-resource-panorama_security_policy": {
    "description": "Defines panorama_security_policy",
    "prefix": "tf-panos-resource-panorama_security_policy",
    "body": [
      "<device_group>:<rulebase>"
    ]
  },
  "panos-resource-panorama_security_rule_group": {
    "description": "Defines panorama_security_rule_group",
    "prefix": "tf-panos-resource-panorama_security_rule_group",
    "body": [
      "resource \"panos_panorama_security_rule_group\" \"example\" {",
      "    position_keyword = \"above\"",
      "    position_reference = \"deny everything else\"",
      "    rule {",
      "        name = \"allow bizdev to dmz\"",
      "        source_zones = [\"bizdev\"]",
      "        source_addresses = [\"any\"]",
      "        source_users = [\"any\"]",
      "        hip_profiles = [\"any\"]",
      "        destination_zones = [\"dmz\"]",
      "        destination_addresses = [\"any\"]",
      "        applications = [\"any\"]",
      "        services = [\"application-default\"]",
      "        categories = [\"any\"]",
      "        action = \"allow\"",
      "    }",
      "    rule {",
      "        name = \"deny sales to eng\"",
      "        source_zones = [\"sales\"]",
      "        source_addresses = [\"any\"]",
      "        source_users = [\"any\"]",
      "        hip_profiles = [\"any\"]",
      "        destination_zones = [\"eng\"]",
      "        destination_addresses = [\"any\"]",
      "        applications = [\"any\"]",
      "        services = [\"application-default\"]",
      "        categories = [\"any\"]",
      "        action = \"deny\"",
      "        target {",
      "            serial = \"01234\"",
      "        }",
      "        target {",
      "            serial = \"56789\"",
      "            vsys_list = [\"vsys1\", \"vsys3\"]",
      "        }",
      "    }",
      "}"
    ]
  },
  "panos-resource-panorama_service_group": {
    "description": "Defines panorama_service_group",
    "prefix": "tf-panos-resource-panorama_service_group",
    "body": [
      "<device_group>:<name>"
    ]
  },
  "panos-resource-panorama_service_object": {
    "description": "Defines panorama_service_object",
    "prefix": "tf-panos-resource-panorama_service_object",
    "body": [
      "<device_group>:<name>"
    ]
  },
  "panos-resource-panorama_static_route_ipv4": {
    "description": "Defines panorama_static_route_ipv4",
    "prefix": "tf-panos-resource-panorama_static_route_ipv4",
    "body": [
      "<template>:<template_stack>:<virtual_router>:<name>"
    ]
  },
  "panos-resource-panorama_template": {
    "description": "Defines panorama_template",
    "prefix": "tf-panos-resource-panorama_template",
    "body": [
      "<name>"
    ]
  },
  "panos-resource-panorama_template_entry": {
    "description": "Defines panorama_template_entry",
    "prefix": "tf-panos-resource-panorama_template_entry",
    "body": [
      "<template>:<serial>"
    ]
  },
  "panos-resource-panorama_template_stack": {
    "description": "Defines panorama_template_stack",
    "prefix": "tf-panos-resource-panorama_template_stack",
    "body": [
      "<name>"
    ]
  },
  "panos-resource-panorama_template_stack_entry": {
    "description": "Defines panorama_template_stack_entry",
    "prefix": "tf-panos-resource-panorama_template_stack_entry",
    "body": [
      "<template_stack>:<device>"
    ]
  },
  "panos-resource-panorama_template_variable": {
    "description": "Defines panorama_template_variable",
    "prefix": "tf-panos-resource-panorama_template_variable",
    "body": [
      "<template>:<template_stack>:<name>"
    ]
  },
  "panos-resource-panorama_tunnel_interface": {
    "description": "Defines panorama_tunnel_interface",
    "prefix": "tf-panos-resource-panorama_tunnel_interface",
    "body": [
      "<template>:<template_stack>:<vsys>:<name>"
    ]
  },
  "panos-resource-panorama_virtual_router": {
    "description": "Defines panorama_virtual_router",
    "prefix": "tf-panos-resource-panorama_virtual_router",
    "body": [
      "<template>:<template_stack>:<vsys>:<name>"
    ]
  },
  "panos-resource-panorama_virtual_router_entry": {
    "description": "Defines panorama_virtual_router_entry",
    "prefix": "tf-panos-resource-panorama_virtual_router_entry",
    "body": [
      "<template>:<template_stack>:<virtual_router>:<interface>"
    ]
  },
  "panos-resource-panorama_vlan_interface": {
    "description": "Defines panorama_vlan_interface",
    "prefix": "tf-panos-resource-panorama_vlan_interface",
    "body": [
      "<template>:<template_stack>:<vsys>:<name>"
    ]
  },
  "panos-resource-panorama_zone": {
    "description": "Defines panorama_zone",
    "prefix": "tf-panos-resource-panorama_zone",
    "body": [
      "<template>:<template_stack>:<vsys>:<name>"
    ]
  },
  "panos-resource-panorama_zone_entry": {
    "description": "Defines panorama_zone_entry",
    "prefix": "tf-panos-resource-panorama_zone_entry",
    "body": [
      "<template>:<template_stack>:<vsys>:<zone>:<mode>:<interface>"
    ]
  },
  "panos-resource-redistribution_profile_ipv4": {
    "description": "Defines redistribution_profile_ipv4",
    "prefix": "tf-panos-resource-redistribution_profile_ipv4",
    "body": [
      "<virtual_router>:<name>"
    ]
  },
  "panos-resource-security_policy": {
    "description": "Defines security_policy",
    "prefix": "tf-panos-resource-security_policy",
    "body": [
      "<vsys>"
    ]
  },
  "panos-resource-security_rule_group": {
    "description": "Defines security_rule_group",
    "prefix": "tf-panos-resource-security_rule_group",
    "body": [
      "resource \"panos_security_rule_group\" \"example\" {",
      "    position_keyword = \"above\"",
      "    position_reference = \"deny everything else\"",
      "    rule {",
      "        name = \"allow bizdev to dmz\"",
      "        source_zones = [\"bizdev\"]",
      "        source_addresses = [\"any\"]",
      "        source_users = [\"any\"]",
      "        hip_profiles = [\"any\"]",
      "        destination_zones = [\"dmz\"]",
      "        destination_addresses = [\"any\"]",
      "        applications = [\"any\"]",
      "        services = [\"application-default\"]",
      "        categories = [\"any\"]",
      "        action = \"allow\"",
      "    }",
      "    rule {",
      "        name = \"deny sales to eng\"",
      "        source_zones = [\"sales\"]",
      "        source_addresses = [\"any\"]",
      "        source_users = [\"any\"]",
      "        hip_profiles = [\"any\"]",
      "        destination_zones = [\"eng\"]",
      "        destination_addresses = [\"any\"]",
      "        applications = [\"any\"]",
      "        services = [\"application-default\"]",
      "        categories = [\"any\"]",
      "        action = \"deny\"",
      "    }",
      "}"
    ]
  },
  "panos-resource-service_group": {
    "description": "Defines service_group",
    "prefix": "tf-panos-resource-service_group",
    "body": [
      "<vsys>:<name>"
    ]
  },
  "panos-resource-service_object": {
    "description": "Defines service_object",
    "prefix": "tf-panos-resource-service_object",
    "body": [
      "<vsys>:<name>"
    ]
  },
  "panos-resource-static_route_ipv4": {
    "description": "Defines static_route_ipv4",
    "prefix": "tf-panos-resource-static_route_ipv4",
    "body": [
      "<virtual_router>:<name>"
    ]
  },
  "panos-resource-telemetry": {
    "description": "Defines telemetry",
    "prefix": "tf-panos-resource-telemetry",
    "body": [
      "resource \"panos_telemetry\" \"example\" {",
      "    threat_prevention_reports = true",
      "    threat_prevention_data = true",
      "    threat_prevention_packet_captures = true",
      "}"
    ]
  },
  "panos-resource-tunnel_interface": {
    "description": "Defines tunnel_interface",
    "prefix": "tf-panos-resource-tunnel_interface",
    "body": [
      "<vsys>:<name>"
    ]
  },
  "panos-resource-virtual_router": {
    "description": "Defines virtual_router",
    "prefix": "tf-panos-resource-virtual_router",
    "body": [
      "<vsys>:<name>"
    ]
  },
  "panos-resource-virtual_router_entry": {
    "description": "Defines virtual_router_entry",
    "prefix": "tf-panos-resource-virtual_router_entry",
    "body": [
      "<virtual_router>:<interface>"
    ]
  },
  "panos-resource-vlan_interface": {
    "description": "Defines vlan_interface",
    "prefix": "tf-panos-resource-vlan_interface",
    "body": [
      "<vsys>:<name>"
    ]
  },
  "panos-resource-zone": {
    "description": "Defines zone",
    "prefix": "tf-panos-resource-zone",
    "body": [
      "<vsys>:<name>"
    ]
  },
  "panos-resource-zone_entry": {
    "description": "Defines zone_entry",
    "prefix": "tf-panos-resource-zone_entry",
    "body": [
      "<vsys>:<zone>:<mode>:<interface>"
    ]
  },
  "postgresql-resource-postgresql_database": {
    "description": "Defines postgresql_database",
    "prefix": "tf-postgresql-resource-postgresql_database",
    "body": [
      "resource \"postgresql_database\" \"my_db\" {",
      "  name              = \"my_db\"",
      "  owner             = \"my_role\"",
      "  template          = \"template0\"",
      "  lc_collate        = \"C\"",
      "  connection_limit  = -1",
      "  allow_connections = true",
      "}"
    ]
  },
  "postgresql-resource-postgresql_default_privileges": {
    "description": "Defines postgresql_default_privileges",
    "prefix": "tf-postgresql-resource-postgresql_default_privileges",
    "body": [
      "resource \"postgresql_default_privileges\" \"read_only_tables\" {",
      "  role     = \"test_role\"",
      "  database = \"test_db\"",
      "  schema   = \"public\"",
      "",
      "  owner       = \"db_owner\"",
      "  object_type = \"table\"",
      "  privileges  = [\"SELECT\"]",
      "}"
    ]
  },
  "postgresql-resource-postgresql_extension": {
    "description": "Defines postgresql_extension",
    "prefix": "tf-postgresql-resource-postgresql_extension",
    "body": [
      "resource \"postgresql_extension\" \"my_extension\" {",
      "  name = \"pg_trgm\"",
      "}"
    ]
  },
  "postgresql-resource-postgresql_grant": {
    "description": "Defines postgresql_grant",
    "prefix": "tf-postgresql-resource-postgresql_grant",
    "body": [
      "resource postgresql_grant \"readonly_tables\" {",
      "  database    = \"test_db\"",
      "  role        = \"test_role\"",
      "  schema      = \"public\"",
      "  object_type = \"table\"",
      "  privileges  = [\"SELECT\"]",
      "}"
    ]
  },
  "postgresql-resource-postgresql_role": {
    "description": "Defines postgresql_role",
    "prefix": "tf-postgresql-resource-postgresql_role",
    "body": [
      "resource \"postgresql_role\" \"my_role\" {",
      "  name     = \"my_role\"",
      "  login    = true",
      "  password = \"mypass\"",
      "}",
      "",
      "resource \"postgresql_role\" \"my_replication_role\" {",
      "  name             = \"replication_role\"",
      "  replication      = true",
      "  login            = true",
      "  connection_limit = 5",
      "  password         = \"md5c98cbfeb6a347a47eb8e96cfb4c4b890\"",
      "}"
    ]
  },
  "postgresql-resource-postgresql_schema": {
    "description": "Defines postgresql_schema",
    "prefix": "tf-postgresql-resource-postgresql_schema",
    "body": [
      "resource \"postgresql_role\" \"app_www\" {",
      "  name = \"app_www\"",
      "}",
      "",
      "resource \"postgresql_role\" \"app_dba\" {",
      "  name = \"app_dba\"",
      "}",
      "",
      "resource \"postgresql_role\" \"app_releng\" {",
      "  name = \"app_releng\"",
      "}",
      "",
      "resource \"postgresql_schema\" \"my_schema\" {",
      "  name  = \"my_schema\"",
      "  owner = \"postgres\"",
      "",
      "  policy {",
      "    usage = true",
      "    role  = \"${postgresql_role.app_www.name}\"",
      "  }",
      "",
      "  # app_releng can create new objects in the schema.  This is the role that",
      "  # migrations are executed as.",
      "  policy {",
      "    create = true",
      "    usage  = true",
      "    role   = \"${postgresql_role.app_releng.name}\"",
      "  }",
      "",
      "  policy {",
      "    create_with_grant = true",
      "    usage_with_grant  = true",
      "    role              = \"${postgresql_role.app_dba.name}\"",
      "  }",
      "}"
    ]
  },
  "powerdns-resource-record": {
    "description": "Defines record",
    "prefix": "tf-powerdns-resource-record",
    "body": [
      "# Add a record to the zone",
      "resource \"powerdns_record\" \"foobar\" {",
      "  zone    = \"example.com.\"",
      "  name    = \"www.example.com.\"",
      "  type    = \"A\"",
      "  ttl     = 300",
      "  records = [\"192.168.0.11\"]",
      "}"
    ]
  },
  "powerdns-resource-zone": {
    "description": "Defines zone",
    "prefix": "tf-powerdns-resource-zone",
    "body": [
      "# Add a zone",
      "resource \"powerdns_zone\" \"foobar\" {",
      "  name    = \"example.com.\"",
      "  kind    = \"Native\"",
      "  nameservers = [\"ns1.example.com.\", \"ns2.example.com.\"]",
      "}"
    ]
  },
  "profitbricks-data-profitbricks_datacenter": {
    "description": "Defines profitbricks_datacenter",
    "prefix": "tf-profitbricks-data-profitbricks_datacenter",
    "body": [
      "data \"profitbricks_datacenter\" \"dc_example\" {",
      "  name     = \"test_dc\"",
      "  location = \"us\"",
      "}"
    ]
  },
  "profitbricks-data-profitbricks_image": {
    "description": "Defines profitbricks_image",
    "prefix": "tf-profitbricks-data-profitbricks_image",
    "body": [
      "data \"profitbricks_image\" \"image_example\" {",
      "  name     = \"Ubuntu\"",
      "  type     = \"HDD\"",
      "  version  = \"14\"",
      "  location = \"location_id\"",
      "}"
    ]
  },
  "profitbricks-data-profitbricks_location": {
    "description": "Defines profitbricks_location",
    "prefix": "tf-profitbricks-data-profitbricks_location",
    "body": [
      "data \"profitbricks_location\" \"loc1\" {",
      "  name    = \"karlsruhe\"",
      "  feature = \"SSD\"",
      "}"
    ]
  },
  "profitbricks-data-profitbricks_resource": {
    "description": "Defines profitbricks_resource",
    "prefix": "tf-profitbricks-data-profitbricks_resource",
    "body": [
      "data \"profitbricks_resource\" \"res\" {\r",
      "  resource_type = \"datacenter\"\r",
      "  resource_id=\"datacenter uuid\"\r",
      "}\r"
    ]
  },
  "profitbricks-data-profitbricks_snapshot": {
    "description": "Defines profitbricks_snapshot",
    "prefix": "tf-profitbricks-data-profitbricks_snapshot",
    "body": [
      "data \"profitbricks_snapshot\" \"snapshot_example\" {\r",
      "  name     = \"my snapshot\"\r",
      "  size     = \"2\"\r",
      "  location = \"location_id\"\r",
      "}\r"
    ]
  },
  "profitbricks-resource-profitbricks_datacenter": {
    "description": "Defines profitbricks_datacenter",
    "prefix": "tf-profitbricks-resource-profitbricks_datacenter",
    "body": [
      "resource \"profitbricks_datacenter\" \"example\" {",
      "  name        = \"datacenter name\"",
      "  location    = \"us/las\"",
      "  description = \"datacenter description\"",
      "}"
    ]
  },
  "profitbricks-resource-profitbricks_firewall": {
    "description": "Defines profitbricks_firewall",
    "prefix": "tf-profitbricks-resource-profitbricks_firewall",
    "body": [
      "resource \"profitbricks_firewall\" \"example\" {",
      "  datacenter_id    = \"${profitbricks_datacenter.example.id}\"",
      "  server_id        = \"${profitbricks_server.example.id}\"",
      "  nic_id           = \"${profitbricks_server.example.primary_nic}\"",
      "  protocol         = \"TCP\"",
      "  name             = \"test\"",
      "  port_range_start = 1",
      "  port_range_end   = 2",
      "}"
    ]
  },
  "profitbricks-resource-profitbricks_group": {
    "description": "Defines profitbricks_group",
    "prefix": "tf-profitbricks-resource-profitbricks_group",
    "body": [
      "resource \"profitbricks_group\" \"group\" {\r",
      "  name = \"my group\"\r",
      "  create_datacenter = true\r",
      "  create_snapshot = true\r",
      "  reserve_ip = true\r",
      "  access_activity_log = false\r",
      "  user_id=\"user_id\"\r",
      "}\r"
    ]
  },
  "profitbricks-resource-profitbricks_ipblock": {
    "description": "Defines profitbricks_ipblock",
    "prefix": "tf-profitbricks-resource-profitbricks_ipblock",
    "body": [
      "resource \"profitbricks_ipblock\" \"example\" {",
      "  location = \"${profitbricks_datacenter.example.location}\"",
      "  size     = 1",
      "}"
    ]
  },
  "profitbricks-resource-profitbricks_ipfailover": {
    "description": "Defines profitbricks_ipfailover",
    "prefix": "tf-profitbricks-resource-profitbricks_ipfailover",
    "body": [
      "resource \"profitbricks_ipfailover\" \"failovertest\" {\r",
      "  datacenter_id = \"datacenterId\"\r",
      "  lan_id=\"lanId\"\r",
      "  ip =\"reserved IP\"\r",
      "  nicuuid= \"nicId\"\r",
      "}\r"
    ]
  },
  "profitbricks-resource-profitbricks_lan": {
    "description": "Defines profitbricks_lan",
    "prefix": "tf-profitbricks-resource-profitbricks_lan",
    "body": [
      "resource \"profitbricks_lan\" \"example\" {\r",
      "  datacenter_id = \"${profitbricks_datacenter.example.id}\"\r",
      "  public        = true\r",
      "}\r"
    ]
  },
  "profitbricks-resource-profitbricks_loadbalancer": {
    "description": "Defines profitbricks_loadbalancer",
    "prefix": "tf-profitbricks-resource-profitbricks_loadbalancer",
    "body": [
      "resource \"profitbricks_loadbalancer\" \"example\" {",
      "  datacenter_id = \"${profitbricks_datacenter.example.id}\"",
      "  nic_ids        = [\"${profitbricks_nic.example.id}\"]",
      "  name          = \"load balancer name\"",
      "  dhcp          = true",
      "}"
    ]
  },
  "profitbricks-resource-profitbricks_nic": {
    "description": "Defines profitbricks_nic",
    "prefix": "tf-profitbricks-resource-profitbricks_nic",
    "body": [
      "resource \"profitbricks_nic\" \"example\" {",
      "  datacenter_id = \"${profitbricks_datacenter.example.id}\"",
      "  server_id     = \"${profitbricks_server.example.id}\"",
      "  lan           = 2",
      "  dhcp          = true",
      "  ip            = \"${profitbricks_ipblock.example.ip}\"",
      "}"
    ]
  },
  "profitbricks-resource-profitbricks_server": {
    "description": "Defines profitbricks_server",
    "prefix": "tf-profitbricks-resource-profitbricks_server",
    "body": [
      "resource \"profitbricks_server\" \"example\" {",
      "  name              = \"server\"",
      "  datacenter_id     = \"${profitbricks_datacenter.example.id}\"",
      "  cores             = 1",
      "  ram               = 1024",
      "  availability_zone = \"ZONE_1\"",
      "  cpu_family        = \"AMD_OPTERON\"",
      "  image_password    = \"test1234\"",
      "  ssh_key_path      = \"${var.private_key_path}\"",
      "  boot_image        = \"${var.ubuntu}\"",
      "",
      "  volume {",
      "    name           = \"new\"",
      "    size           = 5",
      "    disk_type      = \"SSD\"",
      "  }",
      "",
      "  nic {",
      "    lan             = \"${profitbricks_lan.example.id}\"",
      "    dhcp            = true",
      "    ip              = \"${profitbricks_ipblock.example.ip}\"",
      "    firewall_active = true",
      "  }",
      "}"
    ]
  },
  "profitbricks-resource-profitbricks_share": {
    "description": "Defines profitbricks_share",
    "prefix": "tf-profitbricks-resource-profitbricks_share",
    "body": [
      "resource \"profitbricks_share\" \"share\" {\r",
      "  group_id = \"groupId\"\r",
      "  resource_id = \"resourceId\"\r",
      "  edit_privilege = true\r",
      "  share_privilege = false\r",
      "}\r"
    ]
  },
  "profitbricks-resource-profitbricks_snapshot": {
    "description": "Defines profitbricks_snapshot",
    "prefix": "tf-profitbricks-resource-profitbricks_snapshot",
    "body": [
      "resource \"profitbricks_snapshot\" \"test_snapshot\" {\r",
      "  datacenter_id = \"datacenterId\"\r",
      "  volume_id = \"volumeId\"\r",
      "  name = \"my snapshot\"\r",
      "}\r"
    ]
  },
  "profitbricks-resource-profitbricks_user": {
    "description": "Defines profitbricks_user",
    "prefix": "tf-profitbricks-resource-profitbricks_user",
    "body": [
      "resource \"profitbricks_user\" \"user\" {\r",
      "  first_name = \"terraform\"\r",
      "  last_name = \"test\"\r",
      "  email = \"%s\"\r",
      "  password = \"abc123-321CBA\"\r",
      "  administrator = false\r",
      "  force_sec_auth= false\r",
      "}\r"
    ]
  },
  "profitbricks-resource-profitbricks_volume": {
    "description": "Defines profitbricks_volume",
    "prefix": "tf-profitbricks-resource-profitbricks_volume",
    "body": [
      "resource \"profitbricks_volume\" \"example\" {",
      "  datacenter_id = \"${profitbricks_datacenter.example.id}\"",
      "  server_id     = \"${profitbricks_server.example.id}\"",
      "  image_name    = \"${var.ubuntu}\"",
      "  size          = 5",
      "  disk_type     = \"HDD\"",
      "  ssh_key_path  = \"${var.private_key_path}\"",
      "  bus           = \"VIRTIO\"",
      "}"
    ]
  },
  "rabbitmq-resource-binding": {
    "description": "Defines binding",
    "prefix": "tf-rabbitmq-resource-binding",
    "body": [
      "resource \"rabbitmq_vhost\" \"test\" {",
      "  name = \"test\"",
      "}",
      "",
      "resource \"rabbitmq_permissions\" \"guest\" {",
      "  user  = \"guest\"",
      "  vhost = \"${rabbitmq_vhost.test.name}\"",
      "",
      "  permissions {",
      "    configure = \".*\"",
      "    write     = \".*\"",
      "    read      = \".*\"",
      "  }",
      "}",
      "",
      "resource \"rabbitmq_exchange\" \"test\" {",
      "  name  = \"test\"",
      "  vhost = \"${rabbitmq_permissions.guest.vhost}\"",
      "",
      "  settings {",
      "    type        = \"fanout\"",
      "    durable     = false",
      "    auto_delete = true",
      "  }",
      "}",
      "",
      "resource \"rabbitmq_queue\" \"test\" {",
      "  name  = \"test\"",
      "  vhost = \"${rabbitmq_permissions.guest.vhost}\"",
      "",
      "  settings {",
      "    durable     = true",
      "    auto_delete = false",
      "  }",
      "}",
      "",
      "resource \"rabbitmq_binding\" \"test\" {",
      "  source           = \"${rabbitmq_exchange.test.name}\"",
      "  vhost            = \"${rabbitmq_vhost.test.name}\"",
      "  destination      = \"${rabbitmq_queue.test.name}\"",
      "  destination_type = \"queue\"",
      "  routing_key      = \"#\"",
      "}"
    ]
  },
  "rabbitmq-resource-exchange": {
    "description": "Defines exchange",
    "prefix": "tf-rabbitmq-resource-exchange",
    "body": [
      "resource \"rabbitmq_vhost\" \"test\" {",
      "  name = \"test\"",
      "}",
      "",
      "resource \"rabbitmq_permissions\" \"guest\" {",
      "  user  = \"guest\"",
      "  vhost = \"${rabbitmq_vhost.test.name}\"",
      "",
      "  permissions {",
      "    configure = \".*\"",
      "    write     = \".*\"",
      "    read      = \".*\"",
      "  }",
      "}",
      "",
      "resource \"rabbitmq_exchange\" \"test\" {",
      "  name  = \"test\"",
      "  vhost = \"${rabbitmq_permissions.guest.vhost}\"",
      "",
      "  settings {",
      "    type        = \"fanout\"",
      "    durable     = false",
      "    auto_delete = true",
      "  }",
      "}"
    ]
  },
  "rabbitmq-resource-permissions": {
    "description": "Defines permissions",
    "prefix": "tf-rabbitmq-resource-permissions",
    "body": [
      "resource \"rabbitmq_vhost\" \"test\" {",
      "  name = \"test\"",
      "}",
      "",
      "resource \"rabbitmq_user\" \"test\" {",
      "  name     = \"mctest\"",
      "  password = \"foobar\"",
      "  tags     = [\"administrator\"]",
      "}",
      "",
      "resource \"rabbitmq_permissions\" \"test\" {",
      "  user  = \"${rabbitmq_user.test.name}\"",
      "  vhost = \"${rabbitmq_vhost.test.name}\"",
      "",
      "  permissions {",
      "    configure = \".*\"",
      "    write     = \".*\"",
      "    read      = \".*\"",
      "  }",
      "}"
    ]
  },
  "rabbitmq-resource-policy": {
    "description": "Defines policy",
    "prefix": "tf-rabbitmq-resource-policy",
    "body": [
      "resource \"rabbitmq_vhost\" \"test\" {",
      "  name = \"test\"",
      "}",
      "",
      "resource \"rabbitmq_permissions\" \"guest\" {",
      "  user  = \"guest\"",
      "  vhost = \"${rabbitmq_vhost.test.name}\"",
      "",
      "  permissions {",
      "    configure = \".*\"",
      "    write     = \".*\"",
      "    read      = \".*\"",
      "  }",
      "}",
      "",
      "resource \"rabbitmq_policy\" \"test\" {",
      "  name  = \"test\"",
      "  vhost = \"${rabbitmq_permissions.guest.vhost}\"",
      "",
      "  policy {",
      "    pattern  = \".*\"",
      "    priority = 0",
      "    apply_to = \"all\"",
      "",
      "    definition = {",
      "      ha-mode = \"all\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "rabbitmq-resource-queue": {
    "description": "Defines queue",
    "prefix": "tf-rabbitmq-resource-queue",
    "body": [
      "resource \"rabbitmq_vhost\" \"test\" {",
      "  name = \"test\"",
      "}",
      "",
      "resource \"rabbitmq_permissions\" \"guest\" {",
      "  user  = \"guest\"",
      "  vhost = \"${rabbitmq_vhost.test.name}\"",
      "",
      "  permissions {",
      "    configure = \".*\"",
      "    write     = \".*\"",
      "    read      = \".*\"",
      "  }",
      "}",
      "",
      "resource \"rabbitmq_queue\" \"test\" {",
      "  name  = \"test\"",
      "  vhost = \"${rabbitmq_permissions.guest.vhost}\"",
      "",
      "  settings {",
      "    durable     = false",
      "    auto_delete = true",
      "  }",
      "}"
    ]
  },
  "rabbitmq-resource-user": {
    "description": "Defines user",
    "prefix": "tf-rabbitmq-resource-user",
    "body": [
      "resource \"rabbitmq_user\" \"test\" {",
      "  name     = \"mctest\"",
      "  password = \"foobar\"",
      "  tags     = [\"administrator\", \"management\"]",
      "}"
    ]
  },
  "rabbitmq-resource-vhost": {
    "description": "Defines vhost",
    "prefix": "tf-rabbitmq-resource-vhost",
    "body": [
      "resource \"rabbitmq_vhost\" \"my_vhost\" {",
      "  name = \"my_vhost\"",
      "}"
    ]
  },
  "rancher-data-certificate": {
    "description": "Defines certificate",
    "prefix": "tf-rancher-data-certificate",
    "body": [
      "data \"rancher_certificate\" \"foo\" {",
      "  name           = \"foo\"",
      "  environment_id = \"1a5\"",
      "}"
    ]
  },
  "rancher-data-environment": {
    "description": "Defines environment",
    "prefix": "tf-rancher-data-environment",
    "body": [
      "data \"rancher_environment\" \"foo\" {",
      "  name = \"foo\"",
      "}"
    ]
  },
  "rancher-data-setting": {
    "description": "Defines setting",
    "prefix": "tf-rancher-data-setting",
    "body": [
      "data \"rancher_setting\" \"cattle.cattle.version\" {",
      "  name = \"cattle.cattle.version\"",
      "}"
    ]
  },
  "rancher-resource-certificate": {
    "description": "Defines certificate",
    "prefix": "tf-rancher-resource-certificate",
    "body": [
      "# Create a new Rancher Certificate",
      "resource rancher_certificate \"foo\" {",
      "  name           = \"foo\"",
      "  description    = \"my foo certificate\"",
      "  environment_id = \"${rancher_environment.test.id}\"",
      "  cert = \"${file(\"server.crt\")}\"",
      "  key = \"${file(\"server.key\")}\"",
      "}"
    ]
  },
  "rancher-resource-environment": {
    "description": "Defines environment",
    "prefix": "tf-rancher-resource-environment",
    "body": [
      "# Create a new Rancher environment",
      "resource \"rancher_environment\" \"default\" {",
      "  name = \"staging\"",
      "  description = \"The staging environment\"",
      "  orchestration = \"cattle\"",
      "",
      "  member {",
      "    external_id = \"650430\"",
      "    external_id_type = \"github_user\"",
      "    role = \"owner\"",
      "  }",
      "",
      "  member {",
      "    external_id = \"1234\"",
      "    external_id_type = \"github_team\"",
      "    role = \"member\"",
      "  }",
      "}"
    ]
  },
  "rancher-resource-host": {
    "description": "Defines host",
    "prefix": "tf-rancher-resource-host",
    "body": [
      "# Manage an existing Rancher host",
      "resource rancher_host \"foo\" {",
      "  name           = \"foo\"",
      "  description    = \"The foo node\"",
      "  environment_id = \"1a5\"",
      "  hostname       = \"foo.example.com\"",
      "  labels {",
      "    role = \"database\"",
      "  }",
      "}"
    ]
  },
  "rancher-resource-registration_token": {
    "description": "Defines registration_token",
    "prefix": "tf-rancher-resource-registration_token",
    "body": [
      "# Create a new Rancher registration token",
      "resource \"rancher_registration_token\" \"default\" {",
      "  name           = \"staging_token\"",
      "  description    = \"Registration token for the staging environment\"",
      "  environment_id = \"${rancher_environment.default.id}\"",
      "  agent_ip       = \"1.2.3.4\"",
      "",
      "  host_labels    {",
      "    orchestration = \"true\",",
      "    etcd          = \"true\",",
      "    compute       = \"true\"",
      "  }",
      "}"
    ]
  },
  "rancher-resource-registry": {
    "description": "Defines registry",
    "prefix": "tf-rancher-resource-registry",
    "body": [
      "# Create a new Rancher registry",
      "resource \"rancher_registry\" \"dockerhub\" {",
      "  name           = \"dockerhub\"",
      "  description    = \"DockerHub Registry\"",
      "  environment_id = \"${rancher_environment.default.id}\"",
      "  server_address = \"index.dockerhub.io\"",
      "}"
    ]
  },
  "rancher-resource-registry_credential": {
    "description": "Defines registry_credential",
    "prefix": "tf-rancher-resource-registry_credential",
    "body": [
      "# Create a new Rancher registry",
      "resource \"rancher_registry_credential\" \"dockerhub\" {",
      "  name         = \"dockerhub\"",
      "  description  = \"DockerHub Registry Credential\"",
      "  registry_id  = \"${rancher_registry.dockerhub.id}\"",
      "  public_value = \"myself\"",
      "  secret_value = \"mypass\"",
      "}"
    ]
  },
  "rancher-resource-secret": {
    "description": "Defines secret",
    "prefix": "tf-rancher-resource-secret",
    "body": [
      "# Create a new Rancher Secret",
      "resource rancher_secret \"foo\" {",
      "  name           = \"foo\"",
      "  environment_id = \"${rancher_environment.test.id}\"",
      "  value          = \"my great password\"",
      "}"
    ]
  },
  "rancher-resource-stack": {
    "description": "Defines stack",
    "prefix": "tf-rancher-resource-stack",
    "body": [
      "# Create a new empty Rancher stack",
      "resource \"rancher_stack\" \"external-dns\" {",
      "  name           = \"route53\"",
      "  description    = \"Route53 stack\"",
      "  environment_id = \"${rancher_environment.default.id}\"",
      "  catalog_id     = \"library:route53:7\"",
      "  scope          = \"system\"",
      "",
      "  environment {",
      "    AWS_ACCESS_KEY        = \"MYKEY\"",
      "    AWS_SECRET_KEY        = \"MYSECRET\"",
      "    AWS_REGION            = \"eu-central-1\"",
      "    TTL                   = \"60\"",
      "    ROOT_DOMAIN           = \"example.com\"",
      "    ROUTE53_ZONE_ID       = \"\"",
      "    HEALTH_CHECK_INTERVAL = \"15\"",
      "  }",
      "}"
    ]
  },
  "rancher-resource-volume": {
    "description": "Defines volume",
    "prefix": "tf-rancher-resource-volume",
    "body": [
      "# Create a new Rancher Volume",
      "resource rancher_volume \"foo\" {",
      "  name           = \"foo\"",
      "  environment_id = \"${rancher_environment.test.id}\"",
      "  driver         = \"rancher-nfs\"",
      "}"
    ]
  },
  "rancher2-data-catalog": {
    "description": "Defines catalog",
    "prefix": "tf-rancher2-data-catalog",
    "body": [
      "data \"rancher2_catalog\" \"library\" {",
      "    name = \"catalog\"",
      "}"
    ]
  },
  "rancher2-data-cloudCredential": {
    "description": "Defines cloudCredential",
    "prefix": "tf-rancher2-data-cloudCredential",
    "body": [
      "data \"rancher2_cloud_credential\" \"test\" {",
      "    name = \"test\"",
      "}"
    ]
  },
  "rancher2-data-cluster": {
    "description": "Defines cluster",
    "prefix": "tf-rancher2-data-cluster",
    "body": [
      "data \"rancher2_cluster\" \"foo-custom\" {",
      "  name = \"foo-custom\"",
      "}"
    ]
  },
  "rancher2-data-clusterDriver": {
    "description": "Defines clusterDriver",
    "prefix": "tf-rancher2-data-clusterDriver",
    "body": [
      "data \"rancher2_cluster_driver\" \"foo\" {",
      "    name = \"foo\"",
      "}"
    ]
  },
  "rancher2-data-clusterRole": {
    "description": "Defines clusterRole",
    "prefix": "tf-rancher2-data-clusterRole",
    "body": [
      "data \"rancher2_cluster_role_template_binding\" \"foo\" {",
      "    name = \"foo\"",
      "    cluster_id = \"foo_id\"",
      "}"
    ]
  },
  "rancher2-data-etcdBackup": {
    "description": "Defines etcdBackup",
    "prefix": "tf-rancher2-data-etcdBackup",
    "body": [
      "data \"rancher2_etcd_backup\" \"foo\" {",
      "  cluster_id = \"<CLUSTER_ID>\"",
      "  name = \"foo\"",
      "}"
    ]
  },
  "rancher2-data-globalRole": {
    "description": "Defines globalRole",
    "prefix": "tf-rancher2-data-globalRole",
    "body": [
      "data \"rancher2_global_role_binding\" \"foo\" {",
      "    name = \"foo\"",
      "    global_role_id = \"foo_id\"",
      "}"
    ]
  },
  "rancher2-data-namespace": {
    "description": "Defines namespace",
    "prefix": "tf-rancher2-data-namespace",
    "body": [
      "data \"rancher2_namespace\" \"foo\" {",
      "  name = \"foo\"",
      "  project_id = \"${rancher2_cluster.foo-custom.default_project_id}\"",
      "}"
    ]
  },
  "rancher2-data-nodeDriver": {
    "description": "Defines nodeDriver",
    "prefix": "tf-rancher2-data-nodeDriver",
    "body": [
      "data \"rancher2_node_driver\" \"foo\" {",
      "    name = \"foo\"",
      "}"
    ]
  },
  "rancher2-data-nodePool": {
    "description": "Defines nodePool",
    "prefix": "tf-rancher2-data-nodePool",
    "body": [
      "data \"rancher2_node_pool\" \"foo\" {",
      "  cluster_id =  \"${rancher2_cluster.foo-custom.id}\"",
      "  name = \"foo\"",
      "}"
    ]
  },
  "rancher2-data-project": {
    "description": "Defines project",
    "prefix": "tf-rancher2-data-project",
    "body": [
      "data \"rancher2_project\" \"system\" {",
      "    cluster_id = \"${var.my_cluster_id}\"",
      "    name = \"System\"",
      "}",
      "",
      "resource \"kubernetes_namespace\" \"my_namespace\" {",
      "  metadata {",
      "    annotations {",
      "      \"field.cattle.io/projectId\" = \"${data.rancher2_project.system.id}\"",
      "    }",
      "    name = \"my-namespace\"",
      "  }",
      "}"
    ]
  },
  "rancher2-data-projectRole": {
    "description": "Defines projectRole",
    "prefix": "tf-rancher2-data-projectRole",
    "body": [
      "data \"rancher2_project_role_template_binding\" \"foo\" {",
      "    name = \"foo\"",
      "    project_id = \"foo_id\"",
      "}"
    ]
  },
  "rancher2-data-setting": {
    "description": "Defines setting",
    "prefix": "tf-rancher2-data-setting",
    "body": [
      "data \"rancher2_setting\" \"server-image\" {",
      "    name = \"server-image\"",
      "}"
    ]
  },
  "rancher2-data-user": {
    "description": "Defines user",
    "prefix": "tf-rancher2-data-user",
    "body": [
      "data \"rancher2_user\" \"foo\" {",
      "    name = \"foo\"",
      "    global_role_id = \"foo_id\"",
      "}"
    ]
  },
  "rancher2-resource-authConfigADFS": {
    "description": "Defines authConfigADFS",
    "prefix": "tf-rancher2-resource-authConfigADFS",
    "body": [
      "# Create a new rancher2 Auth Config ADFS",
      "resource \"rancher2_auth_config_adfs\" \"adfs\" {",
      "  display_name_field = \"<DISPLAY_NAME_FIELD>\"",
      "  groups_field = \"<GROUPS_FIELD>\"",
      "  idp_metadata_content = \"<IDP_METADATA_CONTENT>\"",
      "  rancher_api_host = \"https://<RANCHER_API_HOST>\"",
      "  sp_cert = \"<SP_CERT>\"",
      "  sp_key = \"<SP_KEY>\"",
      "  uid_field = \"<UID_FIELD>\"",
      "  user_name_field = \"<USER_NAME_FIELD>\"",
      "}"
    ]
  },
  "rancher2-resource-authConfigActiveDirectory": {
    "description": "Defines authConfigActiveDirectory",
    "prefix": "tf-rancher2-resource-authConfigActiveDirectory",
    "body": [
      "# Create a new rancher2 Auth Config ActiveDirectory",
      "resource \"rancher2_auth_config_activedirectory\" \"activedirectory\" {",
      "  servers = [\"<ACTIVEDIRECTORY_SERVER>\"]",
      "  service_account_username = \"<SERVICE_DN>\"",
      "  service_account_password = \"<SERVICE_PASSWORD>\"",
      "  user_search_base = \"<SEARCH_BASE>\"",
      "  port = <ACTIVEDIRECTORY_PORT>",
      "}"
    ]
  },
  "rancher2-resource-authConfigAzureAD": {
    "description": "Defines authConfigAzureAD",
    "prefix": "tf-rancher2-resource-authConfigAzureAD",
    "body": [
      "# Create a new rancher2 Auth Config AzureAD",
      "resource \"rancher2_auth_config_azuread\" \"azuread\" {",
      "  application_id = \"<AZUREAD_APP_ID>\"",
      "  application_secret = \"<AZUREAD_APP_SECRET>\"",
      "  auth_endpoint = \"<AZUREAD_AUTH_ENDPOINT>\"",
      "  graph_endpoint = \"<AZUREAD_GRAPH_ENDPOINT>\"",
      "  rancher_url = \"<RANCHER_URL>\"",
      "  tenant_id = \"<AZUREAD_TENANT_ID>\"",
      "  token_endpoint = \"<AZUREAD_TOKEN_ENDPOINT>\"",
      "}"
    ]
  },
  "rancher2-resource-authConfigFreeIpa": {
    "description": "Defines authConfigFreeIpa",
    "prefix": "tf-rancher2-resource-authConfigFreeIpa",
    "body": [
      "# Create a new rancher2 Auth Config FreeIpa",
      "resource \"rancher2_auth_config_freeipa\" \"freeipa\" {",
      "  servers = [\"<FREEIPA_SERVER>\"]",
      "  service_account_distinguished_name = \"<SERVICE_DN>\"",
      "  service_account_password = \"<SERVICE_PASSWORD>\"",
      "  user_search_base = \"<SEARCH_BASE>\"",
      "  port = <FREEIPA_PORT>",
      "}"
    ]
  },
  "rancher2-resource-authConfigGithub": {
    "description": "Defines authConfigGithub",
    "prefix": "tf-rancher2-resource-authConfigGithub",
    "body": [
      "# Create a new rancher2 Auth Config Github",
      "resource \"rancher2_auth_config_github\" \"github\" {",
      "  client_id = \"<GITHUB_CLIENT_ID>\"",
      "  client_secret = \"<GITHUB_CLIENT_SECRET>\"",
      "}"
    ]
  },
  "rancher2-resource-authConfigOpenLdap": {
    "description": "Defines authConfigOpenLdap",
    "prefix": "tf-rancher2-resource-authConfigOpenLdap",
    "body": [
      "# Create a new rancher2 Auth Config OpenLdap",
      "resource \"rancher2_auth_config_openldap\" \"openldap\" {",
      "  servers = [\"<OPENLDAP_SERVER>\"]",
      "  service_account_distinguished_name = \"<SERVICE_DN>\"",
      "  service_account_password = \"<SERVICE_PASSWORD>\"",
      "  user_search_base = \"<SEARCH_BASE>\"",
      "  port = <OPENLDAP_PORT>",
      "}"
    ]
  },
  "rancher2-resource-authConfigPing": {
    "description": "Defines authConfigPing",
    "prefix": "tf-rancher2-resource-authConfigPing",
    "body": [
      "# Create a new rancher2 Auth Config Ping",
      "resource \"rancher2_auth_config_ping\" \"ping\" {",
      "  display_name_field = \"<DISPLAY_NAME_FIELD>\"",
      "  groups_field = \"<GROUPS_FIELD>\"",
      "  idp_metadata_content = \"<IDP_METADATA_CONTENT>\"",
      "  rancher_api_host = \"https://<RANCHER_API_HOST>\"",
      "  sp_cert = \"<SP_CERT>\"",
      "  sp_key = \"<SP_KEY>\"",
      "  uid_field = \"<UID_FIELD>\"",
      "  user_name_field = \"<USER_NAME_FIELD>\"",
      "}"
    ]
  },
  "rancher2-resource-bootstrap": {
    "description": "Defines bootstrap",
    "prefix": "tf-rancher2-resource-bootstrap",
    "body": [
      "# Provider config",
      "provider \"rancher2\" {",
      "  api_url   = \"https://rancher.my-domain.com\"",
      "  bootstrap = true",
      "}",
      "",
      "# Create a new rancher2 Bootstrap",
      "resource \"rancher2_bootstrap\" \"admin\" {",
      "  password = \"blahblah\"",
      "  telemetry = true",
      "}"
    ]
  },
  "rancher2-resource-catalog": {
    "description": "Defines catalog",
    "prefix": "tf-rancher2-resource-catalog",
    "body": [
      "# Create a new rancher2 Catalog",
      "resource \"rancher2_catalog\" \"foo\" {",
      "  name = \"foo\"",
      "  url = \"https://<CATALOG_URL>\"",
      "}"
    ]
  },
  "rancher2-resource-cloudCredential": {
    "description": "Defines cloudCredential",
    "prefix": "tf-rancher2-resource-cloudCredential",
    "body": [
      "# Create a new rancher2 Cloud Credential",
      "resource \"rancher2_cloud_credential\" \"foo\" {",
      "  name = \"foo\"",
      "  description = \"foo test\"",
      "  amazonec2_credential_config {",
      "    access_key = \"<AWS_ACCESS_KEY>\"",
      "    secret_key = \"<AWS_SECRET_KEY>\"",
      "  }",
      "}"
    ]
  },
  "rancher2-resource-cluster": {
    "description": "Defines cluster",
    "prefix": "tf-rancher2-resource-cluster",
    "body": [
      "# Create a new rancher2 imported Cluster ",
      "resource \"rancher2_cluster\" \"foo-imported\" {",
      "  name = \"foo-imported\"",
      "  description = \"Foo rancher2 imported cluster\"",
      "}"
    ]
  },
  "rancher2-resource-clusterDriver": {
    "description": "Defines clusterDriver",
    "prefix": "tf-rancher2-resource-clusterDriver",
    "body": [
      "# Create a new rancher2 Cluster Driver",
      "resource \"rancher2_cluster_driver\" \"foo\" {",
      "    active = true",
      "    builtin = false",
      "    checksum = \"0x0\"",
      "    description = \"Foo description\"",
      "    external_id = \"foo_external\"",
      "    name = \"foo\"",
      "    ui_url = \"local://ui\"",
      "    url = \"local://\"",
      "    whitelist_domains = [\"*.foo.com\"]",
      "}"
    ]
  },
  "rancher2-resource-clusterLogging": {
    "description": "Defines clusterLogging",
    "prefix": "tf-rancher2-resource-clusterLogging",
    "body": [
      "# Create a new rancher2 Cluster Logging",
      "resource \"rancher2_cluster_logging\" \"foo\" {",
      "  name = \"foo\"",
      "  cluster_id = \"<cluster_id>\"",
      "  kind = \"syslog\"",
      "  syslog_config {",
      "    endpoint = \"<syslog_endpoint>\"",
      "    protocol = \"udp\"",
      "    severity = \"notice\"",
      "    ssl_verify = false",
      "  }",
      "}"
    ]
  },
  "rancher2-resource-clusterRole": {
    "description": "Defines clusterRole",
    "prefix": "tf-rancher2-resource-clusterRole",
    "body": [
      "# Create a new rancher2 Cluster Role Template Binding",
      "resource \"rancher2_cluster_role_template_binding\" \"foo\" {",
      "  name = \"foo\"",
      "  cluster_id = \"<cluster_id>\"",
      "  role_template_id = \"<role_template_id>\"",
      "  user_id = \"<user_id>\"",
      "}"
    ]
  },
  "rancher2-resource-etcdBackup": {
    "description": "Defines etcdBackup",
    "prefix": "tf-rancher2-resource-etcdBackup",
    "body": [
      "# Create a new rancher2 Etcd Backup",
      "resource \"rancher2_etcd_backup\" \"foo\" {",
      "  backup_config {",
      "    enabled = true",
      "    interval_hours = 20",
      "    retention = 10",
      "    s3_backup_config {",
      "      access_key = \"access_key\"",
      "      bucket_name = \"bucket_name\"",
      "      endpoint = \"endpoint\"",
      "      region = \"region\"",
      "      secret_key = \"secret_key\"",
      "    }",
      "  }",
      "  cluster_id = \"<CLUSTER_ID>\"",
      "  name = \"foo\"",
      "  filename = \"<FILENAME>\"",
      "}"
    ]
  },
  "rancher2-resource-globalRole": {
    "description": "Defines globalRole",
    "prefix": "tf-rancher2-resource-globalRole",
    "body": [
      "# Create a new rancher2 Global Role Binding",
      "resource \"rancher2_global_role_binding\" \"foo\" {",
      "  name = \"foo\"",
      "  global_role_id = \"<global_role_id>\"",
      "  user_id = \"<user_id>\"",
      "}"
    ]
  },
  "rancher2-resource-namespace": {
    "description": "Defines namespace",
    "prefix": "tf-rancher2-resource-namespace",
    "body": [
      "# Create a new rancher2 Namespace",
      "resource \"rancher2_namespace\" \"foo\" {",
      "  name = \"foo\"",
      "  project_id = \"<PROJECT_ID>\"",
      "  description = \"foo namespace\"",
      "  resource_quota {",
      "    limit {",
      "      limits_cpu = \"100m\"",
      "      limits_memory = \"100Mi\"",
      "      requests_storage = \"1Gi\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "rancher2-resource-nodeDriver": {
    "description": "Defines nodeDriver",
    "prefix": "tf-rancher2-resource-nodeDriver",
    "body": [
      "# Create a new rancher2 Node Driver",
      "resource \"rancher2_node_driver\" \"foo\" {",
      "    active = true",
      "    builtin = false",
      "    checksum = \"0x0\"",
      "    description = \"Foo description\"",
      "    external_id = \"foo_external\"",
      "    name = \"foo\"",
      "    ui_url = \"local://ui\"",
      "    url = \"local://\"",
      "    whitelist_domains = [\"*.foo.com\"]",
      "}"
    ]
  },
  "rancher2-resource-nodePool": {
    "description": "Defines nodePool",
    "prefix": "tf-rancher2-resource-nodePool",
    "body": [
      "# Create a new rancher2 rke Cluster ",
      "resource \"rancher2_cluster\" \"foo-custom\" {",
      "  name = \"foo-custom\"",
      "  description = \"Foo rancher2 custom cluster\"",
      "  kind = \"rke\"",
      "  rke_config {",
      "    network {",
      "      plugin = \"canal\"",
      "    }",
      "  }",
      "}",
      "# Create a new rancher2 Cloud Credential",
      "resource \"rancher2_cloud_credential\" \"foo\" {",
      "  name = \"foo\"",
      "  description= \"Terraform cloudCredential acceptance test\"",
      "  amazonec2_credential_config {",
      "    access_key = \"XXXXXXXXXXXXXXXXXXXX\"",
      "    secret_key = \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"",
      "  }",
      "}",
      "# Create a new rancher2 Node Template",
      "resource \"rancher2_node_template\" \"foo\" {",
      "  name = \"foo\"",
      "  description = \"foo test\"",
      "  cloud_credential_id = \"${rancher2_cloud_credential.foo.id}\"",
      "  amazonec2_config {",
      "    ami =  \"<AMI_ID>\"",
      "    region = \"<REGION>\"",
      "    security_group = [\"<AWS_SECURITY_GROUP>\"]",
      "    subnet_id = \"<SUBNET_ID>\"",
      "    vpc_id = \"<VPC_ID>\"",
      "    zone = \"<ZONE>\"",
      "  }",
      "}",
      "# Create a new rancher2 Node Pool",
      "resource \"rancher2_node_pool\" \"foo\" {",
      "  cluster_id =  \"${rancher2_cluster.foo-custom.id}\"",
      "  name = \"foo\"",
      "  hostname_prefix =  \"foo-cluster-0\"",
      "  node_template_id = \"${rancher2_node_template.foo.id}\"",
      "  quantity = 1",
      "  control_plane = true",
      "  etcd = true",
      "  worker = true",
      "}"
    ]
  },
  "rancher2-resource-nodeTemplate": {
    "description": "Defines nodeTemplate",
    "prefix": "tf-rancher2-resource-nodeTemplate",
    "body": [
      "# Create a new rancher2 Node Template up to rancher 2.1.x",
      "resource \"rancher2_node_template\" \"foo\" {",
      "  name = \"foo\"",
      "  description = \"foo test\"",
      "  amazonec2_config {",
      "    access_key = \"AWS_ACCESS_KEY\"",
      "    secret_key = \"<AWS_SECRET_KEY>\"",
      "    ami =  \"<AMI_ID>\"",
      "    region = \"<REGION>\"",
      "    security_group = [\"<AWS_SECURITY_GROUP>\"]",
      "    subnet_id = \"<SUBNET_ID>\"",
      "    vpc_id = \"<VPC_ID>\"",
      "    zone = \"<ZONE>\"",
      "  }",
      "}"
    ]
  },
  "rancher2-resource-project": {
    "description": "Defines project",
    "prefix": "tf-rancher2-resource-project",
    "body": [
      "# Create a new rancher2 Project",
      "resource \"rancher2_project\" \"foo\" {",
      "  name = \"foo\"",
      "  cluster_id = \"<CLUSTER_ID>\"",
      "  resource_quota {",
      "    project_limit {",
      "      limits_cpu = \"2000m\"",
      "      limits_memory = \"2000Mi\"",
      "      requests_storage = \"2Gi\"",
      "    }",
      "    namespace_default_limit {",
      "      limits_cpu = \"2000m\"",
      "      limits_memory = \"500Mi\"",
      "      requests_storage = \"1Gi\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "rancher2-resource-projectLogging": {
    "description": "Defines projectLogging",
    "prefix": "tf-rancher2-resource-projectLogging",
    "body": [
      "# Create a new rancher2 Project Logging",
      "resource \"rancher2_project_logging\" \"foo\" {",
      "  name = \"foo\"",
      "  project_id = \"<project_id>\"",
      "  kind = \"syslog\"",
      "  syslog_config {",
      "    endpoint = \"<syslog_endpoint>\"",
      "    protocol = \"udp\"",
      "    severity = \"notice\"",
      "    ssl_verify = false",
      "  }",
      "}"
    ]
  },
  "rancher2-resource-projectRole": {
    "description": "Defines projectRole",
    "prefix": "tf-rancher2-resource-projectRole",
    "body": [
      "# Create a new rancher2 Project Role Template Binding",
      "resource \"rancher2_project_role_template_binding\" \"foo\" {",
      "  name = \"foo\"",
      "  project_id = \"<project_id>\"",
      "  role_template_id = \"<role_template_id>\"",
      "  user_id = \"<user_id>\"",
      "}"
    ]
  },
  "rancher2-resource-setting": {
    "description": "Defines setting",
    "prefix": "tf-rancher2-resource-setting",
    "body": [
      "# Create a new rancher2 Setting",
      "resource \"rancher2_setting\" \"foo\" {",
      "  name = \"foo\"",
      "  value = \"<VALUE>\"",
      "}"
    ]
  },
  "rancher2-resource-user": {
    "description": "Defines user",
    "prefix": "tf-rancher2-resource-user",
    "body": [
      "# Create a new rancher2 User",
      "resource \"rancher2_user\" \"foo\" {",
      "  name = \"Foo user\"",
      "  username = \"foo\"",
      "  password = \"changeme\"",
      "  enabled = true",
      "}",
      "# Create a new rancher2 global_role_binding for User",
      "resource \"rancher2_global_role_binding\" \"foo\" {",
      "  name = \"foo\"",
      "  global_role_id = \"user-base\"",
      "  user_id = \"${rancher2_user.foo.id}\"",
      "}"
    ]
  },
  "random-resource-id": {
    "description": "Defines id",
    "prefix": "tf-random-resource-id",
    "body": [
      "resource \"random_id\" \"server\" {",
      "  keepers = {",
      "    # Generate a new id each time we switch to a new AMI id",
      "    ami_id = \"${var.ami_id}\"",
      "  }",
      "",
      "  byte_length = 8",
      "}",
      "",
      "resource \"aws_instance\" \"server\" {",
      "  tags = {",
      "    Name = \"web-server ${random_id.server.hex}\"",
      "  }",
      "",
      "  # Read the AMI id \"through\" the random_id resource to ensure that",
      "  # both will change together.",
      "  ami = \"${random_id.server.keepers.ami_id}\"",
      "",
      "  # ... (other aws_instance arguments) ...",
      "}"
    ]
  },
  "random-resource-integer": {
    "description": "Defines integer",
    "prefix": "tf-random-resource-integer",
    "body": [
      "resource \"random_integer\" \"priority\" {",
      "  min     = 1",
      "  max     = 50000",
      "  keepers = {",
      "    # Generate a new integer each time we switch to a new listener ARN",
      "    listener_arn = \"${var.listener_arn}\"",
      "  }",
      "}",
      "",
      "resource \"aws_alb_listener_rule\" \"main\" {",
      "  listener_arn = \"${var.listener_arn}\"",
      "  priority     = \"${random_integer.priority.result}\"",
      "",
      "  action {",
      "    type             = \"forward\"",
      "    target_group_arn = \"${var.target_group_arn}\"",
      "  }",
      "  # ... (other aws_alb_listener_rule arguments) ...",
      "}"
    ]
  },
  "random-resource-password": {
    "description": "Defines password",
    "prefix": "tf-random-resource-password",
    "body": [
      "resource \"random_password\" \"password\" {",
      "  length = 16",
      "  special = true",
      "  override_special = \"/@\\\" \"",
      "}",
      "",
      "resource \"aws_db_instance\" \"example\" {",
      "  password = \"${random_password.password.result}\"",
      "}"
    ]
  },
  "random-resource-pet": {
    "description": "Defines pet",
    "prefix": "tf-random-resource-pet",
    "body": [
      "resource \"random_pet\" \"server\" {",
      "  keepers = {",
      "    # Generate a new pet name each time we switch to a new AMI id",
      "    ami_id = \"${var.ami_id}\"",
      "  }",
      "}",
      "",
      "resource \"aws_instance\" \"server\" {",
      "  tags = {",
      "    Name = \"web-server-${random_pet.server.id}\"",
      "  }",
      "",
      "  # Read the AMI id \"through\" the random_pet resource to ensure that",
      "  # both will change together.",
      "  ami = \"${random_pet.server.keepers.ami_id}\"",
      "",
      "  # ... (other aws_instance arguments) ...",
      "}"
    ]
  },
  "random-resource-shuffle": {
    "description": "Defines shuffle",
    "prefix": "tf-random-resource-shuffle",
    "body": [
      "resource \"random_shuffle\" \"az\" {",
      "  input = [\"us-west-1a\", \"us-west-1c\", \"us-west-1d\", \"us-west-1e\"]",
      "  result_count = 2",
      "}",
      "",
      "resource \"aws_elb\" \"example\" {",
      "  # Place the ELB in any two of the given availability zones, selected",
      "  # at random.",
      "  availability_zones = [\"${random_shuffle.az.result}\"]",
      "",
      "  # ... and other aws_elb arguments ...",
      "}"
    ]
  },
  "random-resource-string": {
    "description": "Defines string",
    "prefix": "tf-random-resource-string",
    "body": [
      "resource \"random_string\" \"random\" {",
      "  length = 16",
      "  special = true",
      "  override_special = \"/@\\\" \"",
      "}",
      "",
      "resource \"aws_instance\" \"server\" {",
      "  tags = {",
      "    Deployment = \"web-server-${random_string.random.result}\"",
      "  }",
      "}"
    ]
  },
  "random-resource-uuid": {
    "description": "Defines uuid",
    "prefix": "tf-random-resource-uuid",
    "body": [
      "resource \"random_uuid\" \"test\" { }",
      "",
      "resource \"azurerm_resource_group\" \"test\" {",
      "  name     = \"${random_uuid.test.result}-rg\"",
      "  location = \"Central US\"",
      "}"
    ]
  },
  "rightscale-data-cm_cloud": {
    "description": "Defines cm_cloud",
    "prefix": "tf-rightscale-data-cm_cloud",
    "body": [
      "data \"rightscale_cloud\" \"ec2_us_oregon\" {",
      "  filter {",
      "    name = \"EC2 us-west-2\"",
      "    cloud_type = \"amazon\"",
      "  }",
      "}",
      "",
      "data \"rightscale_cloud\" \"azure_us_east\" {",
      "  filter {",
      "    name = \"Azure East US\"",
      "    cloud_type = \"azure\"",
      "  }",
      "}",
      "..."
    ]
  },
  "rightscale-data-cm_credential": {
    "description": "Defines cm_credential",
    "prefix": "tf-rightscale-data-cm_credential",
    "body": [
      "data \"rightscale_credential\" \"account_aws_access_key_id\" {",
      "  filter {",
      "    name = \"AWS_ACCESS_KEY_ID\"",
      "  }",
      "}",
      "",
      "output \"my-aws-access-key-id\" {",
      "  value = \"${data.rightscale_credential.account_aws_access_key_id.value}\"",
      "}"
    ]
  },
  "rightscale-data-cm_datacenter": {
    "description": "Defines cm_datacenter",
    "prefix": "tf-rightscale-data-cm_datacenter",
    "body": [
      " data \"rightscale_datacenter\" \"ec2-us-east-1a\" {",
      "   cloud_href = \"${data.rightscale_cloud.ec2_us_oregon.href}\"",
      "   filter {",
      "     name = \"us-east-1a\"",
      "   }",
      " }",
      "",
      "output \"datacenter name\" {",
      "  value = \"${data.rightscale_datacenter.ec2-us-east-1a.name}\"",
      "}",
      "",
      "output \"datacenter href\" {",
      "  value = \"${data.rightscale_datacenter.ec2-us-east-1a.href}\"",
      "}",
      "",
      "data \"rightscale_cloud\" \"ec2_us_oregon\" {",
      "  filter {",
      "    name = \"EC2 us-west-2\"",
      "    cloud_type = \"amazon\"",
      "  }",
      "}"
    ]
  },
  "rightscale-data-cm_deployment": {
    "description": "Defines cm_deployment",
    "prefix": "tf-rightscale-data-cm_deployment",
    "body": [
      "data \"rightscale_deployment\" \"infrastructure\" {",
      "  filter {",
      "    name = \"Production Infrastructure US-East\"",
      "  }",
      "}",
      "",
      "output \"Deployment href\" {",
      "  value = \"${data.rightscale_deployment.infrastructure.href}\"",
      "}"
    ]
  },
  "rightscale-data-cm_image": {
    "description": "Defines cm_image",
    "prefix": "tf-rightscale-data-cm_image",
    "body": [
      "data \"rightscale_image\" \"my_sweet_ami\" {",
      "  cloud_href = \"${data.rightscale_cloud.ec2_us_oregon.href}\"",
      "  filter {",
      "    resource_uid = \"ami-abcdefg\"",
      "  }",
      "}",
      "",
      "data \"rightscale_cloud\" \"ec2_us_oregon\" {",
      "  filter {",
      "    name = \"EC2 us-west-2\"",
      "    cloud_type = \"amazon\"",
      "  }",
      "}",
      "..."
    ]
  },
  "rightscale-data-cm_instance": {
    "description": "Defines cm_instance",
    "prefix": "tf-rightscale-data-cm_instance",
    "body": [
      "data \"rightscale_instance\" \"an_instance\" {",
      "  cloud_href = \"${data.rightscale_cloud.ec2_us_oregon.href}\"",
      "",
      "  filter {",
      "    name = \"my_instance\"",
      "  }",
      "}",
      "",
      "output \"instance name\" {",
      "  value = \"${data.rightscale_instance.an_instance.name}\"",
      "}",
      "",
      "output \"instance href\" {",
      "  value = \"${data.rightscale_instance.an_instance.href}\"",
      "}",
      "",
      "data \"rightscale_cloud\" \"ec2_us_oregon\" {",
      "  filter {",
      "    name = \"EC2 us-west-2\"",
      "    cloud_type = \"amazon\"",
      "  }",
      "}"
    ]
  },
  "rightscale-data-cm_instance_type": {
    "description": "Defines cm_instance_type",
    "prefix": "tf-rightscale-data-cm_instance_type",
    "body": [
      "data \"rightscale_instance_type\" \"m4_large\" {",
      "  cloud_href = \"${data.rightscale_cloud.ec2_us_oregon.href}\"",
      "  filter {",
      "    name = \"m4.large\"",
      "  }",
      "}",
      "",
      "data \"rightscale_cloud\" \"ec2_us_oregon\" {",
      "  filter {",
      "    name = \"EC2 us-west-2\"",
      "    cloud_type = \"amazon\"",
      "  }",
      "}",
      "",
      "data \"rightscale_cloud\" \"ec2_us_oregon\" {",
      "  filter {",
      "    name = \"EC2 us-west-2\"",
      "    cloud_type = \"amazon\"",
      "  }",
      "}",
      "..."
    ]
  },
  "rightscale-data-cm_multi_cloud_image": {
    "description": "Defines cm_multi_cloud_image",
    "prefix": "tf-rightscale-data-cm_multi_cloud_image",
    "body": [
      "data \"rightscale_multi_cloud_image\" \"centos_64\" {",
      "   filter {",
      "     name = \"RightImage_CentOS_6.4_x64_v13.5\"",
      "     revision = 43",
      "   }",
      " }",
      "",
      "output \"multi cloud image name\" {",
      "  value = \"${data.rightscale_multi_cloud_image.centos_64.name}\"",
      "}",
      "",
      "output \"multi cloud image href\" {",
      "  value = \"${data.rightscale_multi_cloud_image.centos_64.href}\"",
      "}"
    ]
  },
  "rightscale-data-cm_network": {
    "description": "Defines cm_network",
    "prefix": "tf-rightscale-data-cm_network",
    "body": [
      "data \"rightscale_network\" \"infrastructure-us-east\" {",
      "  filter {",
      "    name = \"Production Infrastructure US-East\"",
      "  }",
      "}",
      "",
      "output \"prod-infra-us-east-aws-uid\" {",
      "  value = \"${data.rightscale_network.infrastructure-us-east.resource_uid}\"",
      "}"
    ]
  },
  "rightscale-data-cm_network_gateway": {
    "description": "Defines cm_network_gateway",
    "prefix": "tf-rightscale-data-cm_network_gateway",
    "body": [
      "data \"rightscale_network_gateway\" \"infrastructure-us-east\" {",
      "  filter {",
      "    name = \"Production Infrastructure US-East\"",
      "  }",
      "}",
      "",
      "output \"prod-infra-us-east-aws-uid\" {",
      "  value = \"${data.rightscale_network_gateway.infrastructure-us-east.resource_uid}\"",
      "}"
    ]
  },
  "rightscale-data-cm_route_table": {
    "description": "Defines cm_route_table",
    "prefix": "tf-rightscale-data-cm_route_table",
    "body": [
      "data \"rightscale_route_table\" \"infrastructure-us-east-route-table\" {",
      "  filter {",
      "    name = \"Production Infrastructure US-East\"",
      "    network_href = \"${data.rightscale_network.infrastructure-us-east.href}\"",
      "  }",
      "}",
      "",
      "output \"prod-infra-us-east-route-table-aws-uid\" {",
      "  value = \"${data.rightscale_route_table.infrastructure-us-east-route-table.resource_uid}\"",
      "}",
      "",
      "data \"rightscale_network\" \"infrastructure-us-east\" {",
      "  filter {",
      "    name = \"Production Infrastructure US-East\"",
      "  }",
      "}"
    ]
  },
  "rightscale-data-cm_security_group": {
    "description": "Defines cm_security_group",
    "prefix": "tf-rightscale-data-cm_security_group",
    "body": [
      "data \"rightscale_security_group\" \"infrastructure-us-east-security-group\" {",
      "  cloud_href = \"${data.rightscale_cloud.infrastructure-aws-us-east.href}\"",
      "  filter {",
      "    name = \"Infrastructure SG\"",
      "    network_href = \"${data.rightscale_network.infrastructure-us-east.href}\"",
      "  }",
      "}",
      "",
      "output \"prod-infra-us-east-aws-sg-uid\" {",
      "  value = \"${data.rightscale_security_group.infrastructure-us-east-security-group.resource_uid}\"",
      "}",
      "",
      "data \"rightscale_cloud\" \"infrastructure-aws-us-east\" {",
      "  filter {",
      "    name = \"EC2 us-west-2\"",
      "    cloud_type = \"amazon\"",
      "  }",
      "}",
      "",
      "data \"rightscale_network\" \"infrastructure-us-east\" {",
      "  filter {",
      "    name = \"Production Infrastructure US-East\"",
      "  }",
      "}"
    ]
  },
  "rightscale-data-cm_server": {
    "description": "Defines cm_server",
    "prefix": "tf-rightscale-data-cm_server",
    "body": [
      "data \"rightscale_server\" \"web_server\" {",
      "  filter {",
      "    name = \"web\"",
      "  }",
      "}"
    ]
  },
  "rightscale-data-cm_server_template": {
    "description": "Defines cm_server_template",
    "prefix": "tf-rightscale-data-cm_server_template",
    "body": [
      " data \"rightscale_server_template\" \"mysql\" {",
      "   filter {",
      "     name = \"Database Manager for MySQL\"",
      "     revision = 24",
      "   }",
      " }",
      "",
      "output \"server template name\" {",
      "  value = \"${data.rightscale_server_template.mysql.name}\"",
      "}",
      "",
      "output \"server template href\" {",
      "  value = \"${data.rightscale_server_template.mysql.href}\"",
      "}"
    ]
  },
  "rightscale-data-cm_ssh_key": {
    "description": "Defines cm_ssh_key",
    "prefix": "tf-rightscale-data-cm_ssh_key",
    "body": [
      "data \"rightscale_ssh_key\" \"infra-ssh-key\" {",
      "  filter {",
      "    name = \"infra\"",
      "  }",
      "  cloud_href = \"${data.rightscale_cloud.ec2_us_oregon.href}\"",
      "}",
      "",
      "data \"rightscale_cloud\" \"ec2_us_oregon\" {",
      "  filter {",
      "    name = \"EC2 us-west-2\"",
      "    cloud_type = \"amazon\"",
      "  }",
      "}"
    ]
  },
  "rightscale-data-cm_subnet": {
    "description": "Defines cm_subnet",
    "prefix": "tf-rightscale-data-cm_subnet",
    "body": [
      "data \"rightscale_subnet\" \"infrastructure-aws-us-east-subnet-b\" {",
      "  cloud_href = \"/api/clouds/1\"",
      "  filter {",
      "    name = \"Production Infrastructure Subnet US-East B\"",
      "  }",
      "}",
      "",
      "output \"prod-infra-us-east-subnet-b-aws-uid\" {",
      "  value = \"${data.rightscale_subnet.infrastructure-aws-us-east-subnet-b.resource_uid}\"",
      "}"
    ]
  },
  "rightscale-data-cm_volume": {
    "description": "Defines cm_volume",
    "prefix": "tf-rightscale-data-cm_volume",
    "body": [
      "data \"rightscale_volume\" \"a_volume\" {",
      "  cloud_href = \"${data.rightscale_cloud.ec2_us_oregon.href}\"",
      "",
      "  filter {",
      "    name = \"my_volume\"",
      "  }",
      "}",
      "",
      "output \"volume name\" {",
      "  value = \"${data.rightscale_volume.a_volume.name}\"",
      "}",
      "",
      "output \"volume href\" {",
      "  value = \"${data.rightscale_volume.a_volume.href}\"",
      "}",
      "",
      "data \"rightscale_cloud\" \"ec2_us_oregon\" {",
      "  filter {",
      "    name = \"EC2 us-west-2\"",
      "    cloud_type = \"amazon\"",
      "  }",
      "}"
    ]
  },
  "rightscale-data-cm_volume_snapshot": {
    "description": "Defines cm_volume_snapshot",
    "prefix": "tf-rightscale-data-cm_volume_snapshot",
    "body": [
      "data \"rightscale_volume_snapshot\" \"mysql_master\" {",
      "   filter {",
      "     name = \"mysql_master\"",
      "   }",
      "   cloud_href = \"${data.rightscale_cloud.ec2_us_oregon.href}\"",
      " }",
      "",
      "output \"snapshot name\" {",
      "  value = \"${data.rightscale_volume_snapshot.mysql_master.name}\"",
      "}",
      "",
      "output \"snapshot href\" {",
      "  value = \"${data.rightscale_volume_snapshot.mysql_master.href}\"",
      "}",
      "",
      "data \"rightscale_cloud\" \"ec2_us_oregon\" {",
      "  filter {",
      "    name = \"EC2 us-west-2\"",
      "    cloud_type = \"amazon\"",
      "  }",
      "}"
    ]
  },
  "rightscale-data-cm_volume_type": {
    "description": "Defines cm_volume_type",
    "prefix": "tf-rightscale-data-cm_volume_type",
    "body": [
      "data \"rightscale_volume_type\" \"aws_us_east_ebs_gp2\" {",
      "  cloud_href = \"/api/clouds/1\"",
      "",
      "  filter {",
      "    name = \"gp2\"",
      "  }",
      "}",
      ""
    ]
  },
  "rightscale-resource-cm_credential": {
    "description": "Defines cm_credential",
    "prefix": "tf-rightscale-resource-cm_credential",
    "body": [
      "resource \"rightscale_credential\" \"database_password\" {",
      "  name = \"DATABASE_PASSWORD\"",
      "  value = \"rightscale11\"",
      "  description = \"Top Secret database password\"",
      "}"
    ]
  },
  "rightscale-resource-cm_deployment": {
    "description": "Defines cm_deployment",
    "prefix": "tf-rightscale-resource-cm_deployment",
    "body": [
      "resource \"rightscale_deployment\" \"production_sydney_deployment\" {",
      "  name = \"production_sydney\"",
      "  description = \"Production Operations in Sydney for Red Team\"",
      "}",
      "",
      "output \"sydney_prod_deployment_href\" {",
      "  value = \"${rightscale_deployment.production_sydney_deployment.href}\"",
      "}"
    ]
  },
  "rightscale-resource-cm_instance": {
    "description": "Defines cm_instance",
    "prefix": "tf-rightscale-resource-cm_instance",
    "body": [
      "resource \"rightscale_instance\" \"an_instance\" {",
      "  cloud_href = \"/api/clouds/6\"",
      "  image_href = \"/api/clouds/6/images/3TRNL47PJB97N\"",
      "  instance_type_href = \"/api/clouds/6/instance_types/8SCHNH0JBHE1R\"",
      "  deployment_href = \"/api/deployments/934588004\"",
      "  name = \"My Instance\"",
      "}"
    ]
  },
  "rightscale-resource-cm_network": {
    "description": "Defines cm_network",
    "prefix": "tf-rightscale-resource-cm_network",
    "body": [
      "resource \"rightscale_network\" \"us-oregon-devops-vpc\" {",
      "  name = \"us-oregon-devops-vpc\"",
      "  description = \"AWS US Oregon vpc for devopery\"",
      "  cloud_href = \"/api/clouds/6\"",
      "  cidr_block = \"192.168.0.0/16\"",
      "}",
      "",
      "output \"us-oregon-devops-vpc-aws-uid\" {",
      "  value = \"${rightscale_network.us-oregon-devops-vpc.resource_uid}\"",
      "}"
    ]
  },
  "rightscale-resource-cm_network_gateway": {
    "description": "Defines cm_network_gateway",
    "prefix": "tf-rightscale-resource-cm_network_gateway",
    "body": [
      "resource \"rightscale_network_gateway\" \"us-oregon-devops-vpc-gateway\" {",
      "  name = \"us-oregon-devops-vpc-gateway\"",
      "  description = \"AWS US Oregon vpc gateway for devopery\"",
      "  cloud_href = \"/api/clouds/6\"",
      "  type = \"internet\"",
      "}",
      "",
      "output \"us-oregon-devops-vpc-gateway-aws-uid\" {",
      "  value = \"${rightscale_network_gateway.us-oregon-devops-vpc-gateway.resource_uid}\"",
      "}"
    ]
  },
  "rightscale-resource-cm_route": {
    "description": "Defines cm_route",
    "prefix": "tf-rightscale-resource-cm_route",
    "body": [
      "resource \"rightscale_route\" \"us-oregon-devops-vpc-route\" {",
      "  description = \"A route to the internet through the internet gateway\"",
      "  destination_cidr_block = \"0.0.0.0/0\"",
      "  next_hop_type = \"network_gateway\"",
      "  next_hop_href = \"${rightscale_network_gateway.my_network_gateway.href}\"",
      "  route_table_href = \"${rightscale_route_table.my_route_table.href}\"",
      "}"
    ]
  },
  "rightscale-resource-cm_route_table": {
    "description": "Defines cm_route_table",
    "prefix": "tf-rightscale-resource-cm_route_table",
    "body": [
      "resource \"rightscale_route_table\" \"us-oregon-devops-vpc-route-table\" {",
      "  name = \"us-oregon-devops-vpc-route-table\"",
      "  description = \"AWS US Oregon vpc route table for devopery\"",
      "  cloud_href = \"${data.rightscale_cloud.us-oregon.href}\"",
      "  network_href = \"${rightscale_network.us-oregon-devops-vpc.href}",
      "}",
      "",
      "output \"us-oregon-devops-vpc-route-table-aws-uid\" {",
      "  value = \"${rightscale_network.us-oregon-devops-vpc-route-table.resource_uid}\"",
      "}"
    ]
  },
  "rightscale-resource-cm_security_group": {
    "description": "Defines cm_security_group",
    "prefix": "tf-rightscale-resource-cm_security_group",
    "body": [
      "resource \"rightscale_security_group\" \"us-oregon-devops-vpc-security-group\" {",
      "  name = \"us-oregon-devops-vpc-sg\"",
      "  description = \"AWS US Oregon vpc security group for devopery\"",
      "  cloud_href = \"/api/clouds/6\"",
      "  network_href = \"${rightscale_network.us-oregon-devops-vpc.href}\"",
      "}",
      "",
      "output \"us-oregon-devops-vpc-sg-href\" {",
      "  value = \"${rightscale_security_group.us-oregon-devops-vpc-security-group.href}\"",
      "}"
    ]
  },
  "rightscale-resource-cm_security_group_rule": {
    "description": "Defines cm_security_group_rule",
    "prefix": "tf-rightscale-resource-cm_security_group_rule",
    "body": [
      "resource \"rightscale_security_group_rule\" \"allow-ssh-from-all\" {",
      "  security_group_href = \"${rightscale_security_group.us-oregon-vpc-devops-security-group.href}\"",
      "  direction = \"ingress\"",
      "  protocol = \"tcp\"",
      "  source_type = \"cidr_ips\"",
      "  cidr_ips = \"0.0.0.0/0\"",
      "  protocol_details {",
      "    start_port = \"22\"",
      "    end_port = \"22\"",
      "  }",
      "}"
    ]
  },
  "rightscale-resource-cm_server": {
    "description": "Defines cm_server",
    "prefix": "tf-rightscale-resource-cm_server",
    "body": [
      "resource \"rightscale_server\" \"web_server\" {",
      "  name = \"web_server\"",
      "  deployment_href = \"/api/deployments/1234\"",
      "  tags = [ \"role:web_server=true\" ]",
      "  instance {",
      "    cloud_href = \"/api/clouds/1234\"",
      "    image_href = \"/api/clouds/1234/images/1234\"",
      "    instance_type_href = \"/api/clouds/1234/instance_types/1234\"",
      "    name = \"web_instance\"",
      "    server_template_href = \"/api/server_templates/1234\"",
      "    inputs {",
      "      FOO = \"text:bar\"",
      "      BAZ = \"cred:Bangarang\"",
      "    }",
      "  }",
      "}"
    ]
  },
  "rightscale-resource-cm_server_array": {
    "description": "Defines cm_server_array",
    "prefix": "tf-rightscale-resource-cm_server_array",
    "body": [
      "resource \"rightscale_server_array\" \"frontend_servers_array\" {",
      "\tarray_type = \"alert\"",
      "",
      "\tdatacenter_policy = [{",
      "\t\tdatacenter_href = \"/api/clouds/1234/datacenters/DEOLL9UREJ7TA\"",
      "\t\tmax             = 4",
      "\t\tweight          = 100",
      "\t}]",
      "",
      "\telasticity_params = {",
      "\t\talert_specific_params = {",
      "\t\tdecision_threshold = 75",
      "\t\t}",
      "",
      "\t\tbounds = {",
      "\t\tmin_count = 1",
      "\t\tmax_count = 4",
      "\t\t}",
      "",
      "\t\tpacing = {",
      "\t\tresize_down_by = 1",
      "\t\tresize_up_by   = 1",
      "\t\t}",
      "\t}",
      "",
      "\tinstance = {",
      "\t\tcloud_href           = \"/api/clouds/1234\"",
      "\t\timage_href           = \"/api/clouds/1234/images/1234\"",
      "\t\tinstance_type_href   = \"/api/clouds/1234/instance_types/1234\"",
      "\t\tserver_template_href = \"/api/server_templates/1234\"",
      "\t\tname                 = \"Frontend\"",
      "\t\tsubnet_hrefs         = [\"/api/clouds/1/subnets/52NUHI2B8LVH1\"]",
      "\t\tinputs {",
      "      FOO = \"text:bar\"",
      "      BAZ = \"cred:Bangarang\"",
      "    }",
      "\t}",
      "",
      "\tname            = \"FrontEnd Servers Array\"",
      "\tstate           = \"enabled\"",
      "\tdeployment_href = \"/api/deployments/1234\"",
      "\t}"
    ]
  },
  "rightscale-resource-cm_ssh_key": {
    "description": "Defines cm_ssh_key",
    "prefix": "tf-rightscale-resource-cm_ssh_key",
    "body": [
      "resource \"rightscale_ssh_key\" \"infra-ssh-key\" {",
      "  name = \"infra\"",
      "  cloud_href = ${data.rightscale_cloud.ec2_us_east_1.href}",
      "}"
    ]
  },
  "rightscale-resource-cm_subnet": {
    "description": "Defines cm_subnet",
    "prefix": "tf-rightscale-resource-cm_subnet",
    "body": [
      "resource \"rightscale_subnet\" \"devops-oregon-subnet-a\" {",
      "  name = \"devops-oregon-vpc-a\"",
      "  description = \"AWS US Oregon Subnet for devopery in az 'a'\"",
      "  cloud_href = \"${data.rightscale_cloud.aws-oregon.href}\"",
      "  datacenter_href = \"${data.rightscale_datacenter.ec2_us_oregon_a.href}\"",
      "  network_href = \"${rightscale_network.aws-oregon-devops-vpc.href}\"",
      "  cidr_block = \"192.168.8.0/24\"",
      "}",
      "",
      "output \"us-oregon-devops-subnet-a-aws-href\" {",
      "  value = \"${rightscale_network.devops-oregon-subnet-a.href}\"",
      "}"
    ]
  },
  "rightscale-resource-cwf_process": {
    "description": "Defines cwf_process",
    "prefix": "tf-rightscale-resource-cwf_process",
    "body": [
      "resource \"rightscale_cwf_process\" \"run_executable_by_prefix\" {",
      "",
      "  parameters = [",
      "     { \"kind\" = \"string\"",
      "       \"value\" = \"db-slave-\" },",
      "     { \"kind\" = \"string\"",
      "       \"value\" = \"/api/right_scripts/1018361003\" }",
      "     ]",
      "",
      "  source = <<EOF",
      "define main($instance_prefix, $rightscript_href) return $instances_affected do",
      "  @instances = rs_cm.instances.get(filter: [\"name==\" + $instance_prefix, \"state==operational\"])",
      "  @instances.run_executable(right_script_href: $rightscript_href)",
      "  $instances_affected = size(@instances)",
      "end",
      "EOF",
      "",
      "}",
      "",
      "output \"cwf_status\" {",
      "  value = \"${rightscale_cwf_process.run_executable_by_prefix.status}\"",
      "}",
      "",
      "output \"cwf_servers_affected\" {",
      "  value = \"${rightscale_cwf_process.run_executable_by_prefix.outputs[\"$instances_affected\"]}\"",
      "}"
    ]
  },
  "rundeck-resource-acl_policy": {
    "description": "Defines acl_policy",
    "prefix": "tf-rundeck-resource-acl_policy",
    "body": [
      "data \"local_file\" \"acl\" {",
      "  filename = \"${path.module}/acl.yaml\"",
      "}",
      "",
      "resource \"rundeck_acl_policy\" \"example\" {",
      "  name = \"ExampleAcl.aclpolicy\"",
      "",
      "  policy = \"${data.local_file.acl.content}\"",
      "}"
    ]
  },
  "rundeck-resource-job": {
    "description": "Defines job",
    "prefix": "tf-rundeck-resource-job",
    "body": [
      "resource \"rundeck_job\" \"bounceweb\" {",
      "    name = \"Bounce Web Servers\"",
      "    project_name = \"anvils\"",
      "    node_filter_query = \"tags: web\"",
      "    description = \"Restart the service daemons on all the web servers\"",
      "",
      "    command {",
      "        shell_command = \"sudo service anvils restart\"",
      "    }",
      "    notification {",
      "        type = \"on_success\"",
      "        email {",
      "            recipients = [\"example@foo.bar\"]",
      "        }",
      "    }",
      "}"
    ]
  },
  "rundeck-resource-private_key": {
    "description": "Defines private_key",
    "prefix": "tf-rundeck-resource-private_key",
    "body": [
      "resource \"rundeck_private_key\" \"anvils\" {",
      "    path = \"anvils/id_rsa\"",
      "    key_material = \"${file(\"/id_rsa\")}\"",
      "}"
    ]
  },
  "rundeck-resource-project": {
    "description": "Defines project",
    "prefix": "tf-rundeck-resource-project",
    "body": [
      "resource \"rundeck_project\" \"anvils\" {",
      "    name = \"anvils\"",
      "    description = \"Application for managing Anvils\"",
      "",
      "    ssh_key_storage_path = \"anvils/id_rsa\"",
      "",
      "    resource_model_source {",
      "        type = \"file\"",
      "        config = {",
      "            format = \"resourcexml\"",
      "            # This path is interpreted on the Rundeck server.",
      "            file = \"/var/rundeck/projects/anvils/resources.xml\"",
      "        }",
      "    }",
      "}"
    ]
  },
  "rundeck-resource-public_key": {
    "description": "Defines public_key",
    "prefix": "tf-rundeck-resource-public_key",
    "body": [
      "resource \"rundeck_public_key\" \"anvils\" {",
      "    path = \"anvils/id_rsa.pub\"",
      "    key_material = \"ssh-rsa yada-yada-yada\"",
      "}"
    ]
  },
  "runscope-data-bucket": {
    "description": "Defines bucket",
    "prefix": "tf-runscope-data-bucket",
    "body": [
      "data \"runscope_bucket\" \"website\" {",
      "  key = \"t2f4bkvnggct\"",
      "}",
      "",
      "resource \"runscope_environment\" \"environment\" {",
      "  bucket_id = \"${runscope_bucket.website.id}\"",
      "  name      = \"test-environment\"",
      "}"
    ]
  },
  "runscope-data-buckets": {
    "description": "Defines buckets",
    "prefix": "tf-runscope-data-buckets",
    "body": [
      "data \"runscope_buckets\" \"buckets\" {",
      "  filter = [",
      "    {",
      "      name   = \"name\"",
      "      values = [\"test-bucket\"]",
      "    }",
      "  ]",
      "}"
    ]
  },
  "runscope-data-integration": {
    "description": "Defines integration",
    "prefix": "tf-runscope-data-integration",
    "body": [
      "data \"runscope_integration\" \"pagerduty\" {",
      "  team_uuid = \"d26553c0-3537-40a8-9d3c-64b0453262a9\"",
      "  type      = \"pagerduty\"",
      "}",
      "",
      "resource \"runscope_environment\" \"environment\" {",
      "  bucket_id = \"${runscope_bucket.bucket.id}\"",
      "  name      = \"test-environment\"",
      "",
      "  integrations = [",
      "    {",
      "      id               = \"${data.runscope_integration.pagerduty.id}\"",
      "      integration_type = \"pagerduty\"",
      "    }",
      "  ]",
      "}"
    ]
  },
  "runscope-data-integrations": {
    "description": "Defines integrations",
    "prefix": "tf-runscope-data-integrations",
    "body": [
      "data \"runscope_integrations\" \"slack\" {",
      "  team_uuid = \"d26553c0-3537-40a8-9d3c-64b0453262a9\"",
      "  filter = {",
      "    name   = \"type\"",
      "    values = [\"slack\"]",
      "  }",
      "}"
    ]
  },
  "runscope-resource-bucket": {
    "description": "Defines bucket",
    "prefix": "tf-runscope-resource-bucket",
    "body": [
      "# Add a bucket to your runscope account",
      "resource \"runscope_bucket\" \"main\" {",
      "  name      = \"a-bucket\"",
      "  team_uuid = \"870ed937-bc6e-4d8b-a9a5-d7f9f2412fa3\"",
      "}"
    ]
  },
  "runscope-resource-environment": {
    "description": "Defines environment",
    "prefix": "tf-runscope-resource-environment",
    "body": [
      "resource \"runscope_environment\" \"environment\" {",
      "  bucket_id = \"${runscope_bucket.bucket.id}\"",
      "  name      = \"shared-environment\"",
      "",
      "  integrations = [",
      "    \"${data.runscope_integration.pagerduty.id}\"",
      "  ]",
      "",
      "  initial_variables = {",
      "    var1 = \"true\"",
      "    var2 = \"value2\"",
      "  }",
      "}",
      "",
      "data \"runscope_integration\" \"pagerduty\" {",
      "  team_uuid = \"%s\"",
      "  type      = \"pagerduty\"",
      "}"
    ]
  },
  "runscope-resource-schedule": {
    "description": "Defines schedule",
    "prefix": "tf-runscope-resource-schedule",
    "body": [
      "resource \"runscope_schedule\" \"daily\" {",
      "  bucket_id      = \"${runscope_bucket.bucket.id}\"",
      "  test_id        = \"${runscope_test.test.id}\"",
      "  interval       = \"1d\"",
      "  note           = \"This is a daily schedule\"",
      "  environment_id = \"${runscope_environment.environment.id}\"",
      "}",
      "",
      "resource \"runscope_test\" \"test\" {",
      "  bucket_id   = \"${runscope_bucket.bucket.id}\"",
      "  name        = \"runscope test\"",
      "  description = \"This is a test test...\"",
      "}",
      "",
      "resource \"runscope_bucket\" \"bucket\" {",
      "  name      = \"terraform-provider-test\"",
      "  team_uuid = \"d038db69-b5a9-45af-80d8-3be47c37e309\"",
      "}",
      "",
      "resource \"runscope_environment\" \"environment\" {",
      "  bucket_id = \"${runscope_bucket.bucket.id}\"",
      "  name      = \"test-environment\"",
      "",
      "  initial_variables = {",
      "    var1 = \"true\"",
      "    var2 = \"value2\"",
      "  }",
      "}"
    ]
  },
  "runscope-resource-step": {
    "description": "Defines step",
    "prefix": "tf-runscope-resource-step",
    "body": [
      "resource \"runscope_step\" \"main_page\" {",
      "  bucket_id = \"${runscope_bucket.bucket.id}\"",
      "  test_id   = \"${runscope_test.test.id}\"",
      "  step_type = \"request\"",
      "  url       = \"http://example.com\"",
      "  note      = \"A comment for the test step\"",
      "  method    = \"GET\"",
      "  variables {",
      "    name   = \"httpStatus\"",
      "    source = \"response_status\"",
      "  }",
      "  variables {",
      "    name     = \"httpContentEncoding\"",
      "    source   = \"response_header\"",
      "    property = \"Content-Encoding\"",
      "  }",
      "",
      "  assertions {",
      "    source     = \"response_status\"",
      "    comparison = \"equal_number\"",
      "    value      = \"200\"",
      "  }",
      "  assertions {",
      "    source     = \"response_json\"",
      "    comparison = \"equal\"",
      "    value      = \"c5baeb4a-2379-478a-9cda-1b671de77cf9\"",
      "    property   = \"data.id\"",
      "  }",
      "",
      "  auth {",
      "    username  = \"myUsername\"",
      "    auth_type = \"basic\"",
      "    password  = \"myPassword\"",
      "  }",
      "  before_scripts = [<<EOF",
      "       var endVar = new Date();",
      "       var startVar = new Date(); ",
      "       alert('this is a multi-line before script')",
      "    EOF",
      "  ]",
      "  scripts = [<<EOF",
      "       var endVar = new Date();",
      "       var startVar = new Date();",
      "       alert('this is a multi-line after script')",
      "    EOF",
      "  ]",
      "  headers {",
      "    header = \"Accept-Encoding\"",
      "    value  = \"application/json\"",
      "  }",
      "  headers {",
      "    header = \"Accept-Encoding\"",
      "    value  = \"application/xml\"",
      "  }",
      "  headers {",
      "    header = \"Authorization\"",
      "    value  = \"Bearer bb74fe7b-b9f2-48bd-9445-bdc60e1edc6a\"",
      "  }",
      "",
      "}",
      "",
      "resource \"runscope_test\" \"test\" {",
      "  bucket_id   = \"${runscope_bucket.bucket.id}\"",
      "  name        = \"runscope test\"",
      "  description = \"This is a test test...\"",
      "}",
      "",
      "resource \"runscope_bucket\" \"bucket\" {",
      "  name      = \"terraform-provider-test\"",
      "  team_uuid = \"dfb75aac-eeb3-4451-8675-3a37ab421e4f\"",
      "}"
    ]
  },
  "runscope-resource-test": {
    "description": "Defines test",
    "prefix": "tf-runscope-resource-test",
    "body": [
      "# Add a test to a bucket",
      "resource \"runscope_test\" \"api\" {",
      "  name        = \"api-test\"",
      "  description = \"checks the api is up and running\"",
      "  bucket_id   = \"${runscope_bucket.main.id}\"",
      "}",
      "",
      "# Create a bucket",
      "resource \"runscope_bucket\" \"main\" {",
      "  name      = \"terraform-ftw\"",
      "  team_uuid = \"870ed937-bc6e-4d8b-a9a5-d7f9f2412fa3\"",
      "}"
    ]
  },
  "scaleway-data-bootscript": {
    "description": "Defines bootscript",
    "prefix": "tf-scaleway-data-bootscript",
    "body": [
      "data \"scaleway_bootscript\" \"debug\" {",
      "  architecture = \"arm\"",
      "  name_filter  = \"Rescue\"",
      "}"
    ]
  },
  "scaleway-data-image": {
    "description": "Defines image",
    "prefix": "tf-scaleway-data-image",
    "body": [
      "data \"scaleway_image\" \"ubuntu\" {",
      "  architecture = \"arm\"",
      "  name         = \"Ubuntu Precise\"",
      "}",
      "",
      "resource \"scaleway_server\" \"base\" {",
      "  name  = \"test\"",
      "  image = \"${data.scaleway_image.ubuntu.id}\"",
      "  type  = \"C1\"",
      "}"
    ]
  },
  "scaleway-data-security_group": {
    "description": "Defines security_group",
    "prefix": "tf-scaleway-data-security_group",
    "body": [
      "data \"scaleway_security_group\" \"test\" {",
      "  name = \"my-security-group\"",
      "}"
    ]
  },
  "scaleway-data-volume": {
    "description": "Defines volume",
    "prefix": "tf-scaleway-data-volume",
    "body": [
      "data \"scaleway_volume\" \"data\" {",
      "  name = \"data\"",
      "}",
      "",
      "resource \"scaleway_server\" \"test\" {",
      "  # ...",
      "}",
      "",
      "resource \"scaleway_volume_attachment\" \"data\" {",
      "  server = \"${scaleway_server.test.id}\"",
      "  volume = \"${scaleway_volume.data.id}\"",
      "}"
    ]
  },
  "scaleway-resource-bucket": {
    "description": "Defines bucket",
    "prefix": "tf-scaleway-resource-bucket",
    "body": [
      "resource \"scaleway_bucket\" \"test\" {",
      "  name = \"sample-bucket\"",
      "}"
    ]
  },
  "scaleway-resource-compute_instance_ip": {
    "description": "Defines compute_instance_ip",
    "prefix": "tf-scaleway-resource-compute_instance_ip",
    "body": [
      "resource \"scaleway_compute_instance_ip\" \"server_ip\" {}"
    ]
  },
  "scaleway-resource-compute_instance_placement_group": {
    "description": "Defines compute_instance_placement_group",
    "prefix": "tf-scaleway-resource-compute_instance_placement_group",
    "body": [
      "resource \"scaleway_compute_instance_placement_group\" \"availability_group\" {}"
    ]
  },
  "scaleway-resource-compute_instance_security_group": {
    "description": "Defines compute_instance_security_group",
    "prefix": "tf-scaleway-resource-compute_instance_security_group",
    "body": [
      "resource \"scaleway_compute_instance_security_group\" \"allow_all\" {",
      "}",
      "",
      "resource \"scaleway_compute_instance_security_group\" \"web\" {",
      "  inbound_default_policy = \"drop\" # By default we drop incomming trafic that do not match any inbound_rule",
      "  ",
      "  inbound_rule {",
      "    action = \"accept\"",
      "    port = 22",
      "    ip = \"212.47.225.64\"",
      "  }",
      "  ",
      "  inbound_rule {",
      "    action = \"accept\"",
      "    port = 80",
      "  }",
      "}"
    ]
  },
  "scaleway-resource-compute_instance_server": {
    "description": "Defines compute_instance_server",
    "prefix": "tf-scaleway-resource-compute_instance_server",
    "body": [
      "resource \"scaleway_compute_instance_ip\" \"public_ip\" {",
      "  server_id = \"${scaleway_compute_instance_server.web.id}\"",
      "}",
      "",
      "resource \"scaleway_compute_instance_server\" \"web\" {",
      "  type = \"DEV1-S\"",
      "  image_id = \"f974feac-abae-4365-b988-8ec7d1cec10d\"",
      "}"
    ]
  },
  "scaleway-resource-compute_instance_volume": {
    "description": "Defines compute_instance_volume",
    "prefix": "tf-scaleway-resource-compute_instance_volume",
    "body": [
      "resource \"scaleway_compute_instance_volume\" \"server_volume\" {",
      "    type       = \"l_ssd\"",
      "    name       = \"some-volume-name\"",
      "    size_in_gb = 20",
      "}"
    ]
  },
  "scaleway-resource-ip": {
    "description": "Defines ip",
    "prefix": "tf-scaleway-resource-ip",
    "body": [
      "resource \"scaleway_ip\" \"test_ip\" {}"
    ]
  },
  "scaleway-resource-ip_reverse_dns": {
    "description": "Defines ip_reverse_dns",
    "prefix": "tf-scaleway-resource-ip_reverse_dns",
    "body": [
      "resource \"scaleway_ip\" \"test_service\" {}",
      "",
      "resource \"scaleway_ip_reverse_dns\" \"google\" {",
      "  ip = \"${scaleway_ip.test_service.id}\"",
      "  reverse = \"test_service.awesome-corp.com\"",
      "}"
    ]
  },
  "scaleway-resource-security_group": {
    "description": "Defines security_group",
    "prefix": "tf-scaleway-resource-security_group",
    "body": [
      "resource \"scaleway_security_group\" \"test\" {",
      "  name                    = \"test\"",
      "  description             = \"test\"",
      "  enable_default_security = true",
      "  stateful                = true",
      "  inbound_default_policy  = \"accept\"",
      "  outbound_default_policy = \"drop\"",
      "}"
    ]
  },
  "scaleway-resource-security_group_rule": {
    "description": "Defines security_group_rule",
    "prefix": "tf-scaleway-resource-security_group_rule",
    "body": [
      "resource \"scaleway_security_group\" \"test\" {",
      "  name        = \"test\"",
      "  description = \"test\"",
      "}",
      "",
      "resource \"scaleway_security_group_rule\" \"smtp_drop_1\" {",
      "  security_group = \"${scaleway_security_group.test.id}\"",
      "",
      "  action    = \"accept\"",
      "  direction = \"inbound\"",
      "  ip_range  = \"0.0.0.0/0\"",
      "  protocol  = \"TCP\"",
      "  port      = 25",
      "}"
    ]
  },
  "scaleway-resource-server": {
    "description": "Defines server",
    "prefix": "tf-scaleway-resource-server",
    "body": [
      "resource \"scaleway_server\" \"test\" {",
      "  name  = \"test\"",
      "  image = \"5faef9cd-ea9b-4a63-9171-9e26bec03dbc\"",
      "  type  = \"VC1M\"",
      "",
      "  volume {",
      "    size_in_gb = 20",
      "    type       = \"l_ssd\"",
      "  }",
      "}"
    ]
  },
  "scaleway-resource-ssh_key": {
    "description": "Defines ssh_key",
    "prefix": "tf-scaleway-resource-ssh_key",
    "body": [
      "resource \"scaleway_ssh_key\" \"test\" {",
      "    key = \"ssh-rsa <some-key>\"",
      "}"
    ]
  },
  "scaleway-resource-storage_object_bucket": {
    "description": "Defines storage_object_bucket",
    "prefix": "tf-scaleway-resource-storage_object_bucket",
    "body": [
      "resource \"scaleway_storage_object_bucket\" \"some_bucket\" {",
      "    name = \"some-unique-name\"",
      "    acl = \"private\"",
      "}"
    ]
  },
  "scaleway-resource-token": {
    "description": "Defines token",
    "prefix": "tf-scaleway-resource-token",
    "body": [
      "resource \"scaleway_token\" \"karls_token\" {",
      "    expires = false",
      "    description = \"karls scaleway access: karl@company.com\"",
      "}"
    ]
  },
  "scaleway-resource-user_data": {
    "description": "Defines user_data",
    "prefix": "tf-scaleway-resource-user_data",
    "body": [
      "resource \"scaleway_server\" \"base\" {",
      "  name = \"test\"",
      "  # ubuntu 14.04",
      "  image = \"5faef9cd-ea9b-4a63-9171-9e26bec03dbc\"",
      "  type = \"C1\"",
      "  state = \"stopped\"",
      "}",
      "",
      "resource \"scaleway_user_data\" \"gcp\" {",
      "\tserver = \"${scaleway_server.base.id}\"",
      "\tkey = \"gcp_username\"",
      "\tvalue = \"supersecret\"",
      "}"
    ]
  },
  "scaleway-resource-volume": {
    "description": "Defines volume",
    "prefix": "tf-scaleway-resource-volume",
    "body": [
      "resource \"scaleway_server\" \"test\" {",
      "  name    = \"test\"",
      "  image   = \"aecaed73-51a5-4439-a127-6d8229847145\"",
      "  type    = \"C2S\"",
      "  volumes = [\"${scaleway_volume.test.id}\"]",
      "}",
      "",
      "resource \"scaleway_volume\" \"test\" {",
      "  name       = \"test\"",
      "  size_in_gb = 20",
      "  type       = \"l_ssd\"",
      "}"
    ]
  },
  "scaleway-resource-volume_attachment": {
    "description": "Defines volume_attachment",
    "prefix": "tf-scaleway-resource-volume_attachment",
    "body": [
      "resource \"scaleway_server\" \"test\" {",
      "  name  = \"test\"",
      "  image = \"aecaed73-51a5-4439-a127-6d8229847145\"",
      "  type  = \"C2S\"",
      "}",
      "",
      "resource \"scaleway_volume\" \"test\" {",
      "  name       = \"test\"",
      "  size_in_gb = 20",
      "  type       = \"l_ssd\"",
      "}",
      "",
      "resource \"scaleway_volume_attachment\" \"test\" {",
      "  server = \"${scaleway_server.test.id}\"",
      "  volume = \"${scaleway_volume.test.id}\"",
      "}"
    ]
  },
  "selectel-resource-vpc_crossregion_subnet_v2": {
    "description": "Defines vpc_crossregion_subnet_v2",
    "prefix": "tf-selectel-resource-vpc_crossregion_subnet_v2",
    "body": [
      "resource \"selectel_vpc_project_v2\" \"project_1\" {",
      "  auto_quotas = true",
      "}",
      "",
      "resource \"selectel_vpc_crossregion_subnet_v2\" \"crossregion_subnet_1\" {",
      "  project_id = \"${selectel_vpc_project_v2.project_1.id}\"",
      "  cidr = \"192.168.200.0/24\"",
      "  regions {",
      "    region = \"ru-1\"",
      "  }",
      "  regions {",
      "    region = \"ru-3\"",
      "  }",
      "}"
    ]
  },
  "selectel-resource-vpc_floatingip_v2": {
    "description": "Defines vpc_floatingip_v2",
    "prefix": "tf-selectel-resource-vpc_floatingip_v2",
    "body": [
      "resource \"selectel_vpc_floatingip_v2\" \"floatingip_1\" {",
      "  project_id = \"887e5e35458d4ee38a6ae0543555dec5\"",
      "  region     = \"ru-1\"",
      "}"
    ]
  },
  "selectel-resource-vpc_keypair_v2": {
    "description": "Defines vpc_keypair_v2",
    "prefix": "tf-selectel-resource-vpc_keypair_v2",
    "body": [
      "resource \"selectel_vpc_user_v2\" \"user_1\" {",
      "  password = \"secret\"",
      "}",
      "",
      "resource \"selectel_vpc_keypair_v2\" \"keypair_tf_acc_test_1\" {",
      "  public_key = \"${file(\"~/.ssh/id_rsa.pub\")}\"",
      "  user_id    = \"${selectel_vpc_user_v2.user_1.id}\"",
      "}"
    ]
  },
  "selectel-resource-vpc_license_v2": {
    "description": "Defines vpc_license_v2",
    "prefix": "tf-selectel-resource-vpc_license_v2",
    "body": [
      "resource \"selectel_vpc_license_v2\" \"license_windows_2016_standard\" {",
      "  project_id = \"887e5e35458d4ee38a6ae0543555dec5\"",
      "  region     = \"ru-2\"",
      "  type       = \"license_windows_2012_standard\"",
      "}"
    ]
  },
  "selectel-resource-vpc_project_v2": {
    "description": "Defines vpc_project_v2",
    "prefix": "tf-selectel-resource-vpc_project_v2",
    "body": [
      "resource \"selectel_vpc_project_v2\" \"kubernetes_cluster\" {",
      "  name       = \"kubernetes_cluster\"",
      "  custom_url = \"kubernetes-cluster-123.selvpc.ru\"",
      "  theme = {",
      "    color = \"2753E9\"",
      "  }",
      "  quotas {",
      "    resource_name = \"compute_cores\"",
      "    resource_quotas {",
      "      region = \"ru-3\"",
      "      zone = \"ru-3a\"",
      "      value = 12",
      "    }",
      "  }",
      "  quotas {",
      "    resource_name = \"compute_ram\"",
      "    resource_quotas {",
      "      region = \"ru-3\"",
      "      zone = \"ru-3a\"",
      "      value = 20480",
      "    }",
      "  }",
      "  quotas {",
      "    resource_name = \"volume_gigabytes_fast\"",
      "    resource_quotas {",
      "      region = \"ru-3\"",
      "      zone = \"ru-3a\"",
      "      value = 100",
      "    }",
      "  }",
      "}"
    ]
  },
  "selectel-resource-vpc_role_v2": {
    "description": "Defines vpc_role_v2",
    "prefix": "tf-selectel-resource-vpc_role_v2",
    "body": [
      "resource \"selectel_vpc_project_v2\" \"project_1\" {",
      "  auto_quotas = true",
      "}",
      "",
      "resource \"selectel_vpc_user_v2\" \"user_1\" {",
      "  password    = \"secret\"",
      "}",
      "",
      "resource \"selectel_vpc_role_v2\" \"role_tf_acc_test_1\" {",
      "  project_id = \"${selectel_vpc_project_v2.project_1.id}\"",
      "  user_id    = \"${selectel_vpc_user_v2.user_1.id}\"",
      "}"
    ]
  },
  "selectel-resource-vpc_subnet_v2": {
    "description": "Defines vpc_subnet_v2",
    "prefix": "tf-selectel-resource-vpc_subnet_v2",
    "body": [
      "resource \"selectel_vpc_project_v2\" \"project_1\" {",
      "  auto_quotas = true",
      "}",
      "",
      "resource \"selectel_vpc_subnet_v2\" \"subnet_1\" {",
      "  project_id    = \"${selectel_vpc_project_v2.project_1.id}\"",
      "  region        = \"ru-3\"",
      "  ip_version    = \"ipv4\"",
      "  prefix_length = 29",
      "}"
    ]
  },
  "selectel-resource-vpc_token_v2": {
    "description": "Defines vpc_token_v2",
    "prefix": "tf-selectel-resource-vpc_token_v2",
    "body": [
      "resource \"selectel_vpc_project_v2\" \"project_1\" {",
      "  auto_quotas = true",
      "}",
      "",
      "resource \"selectel_vpc_token_v2\" \"token_tf_acc_test_1\" {",
      "  project_id = \"${selectel_vpc_project_v2.project_1.id}\"",
      "}"
    ]
  },
  "selectel-resource-vpc_user_v2": {
    "description": "Defines vpc_user_v2",
    "prefix": "tf-selectel-resource-vpc_user_v2",
    "body": [
      "resource \"selectel_vpc_user_v2\" \"user_1\" {",
      "  password = \"verysecret\"",
      "  enabled  = true",
      "}"
    ]
  },
  "selectel-resource-vpc_vrrp_subnet_v2": {
    "description": "Defines vpc_vrrp_subnet_v2",
    "prefix": "tf-selectel-resource-vpc_vrrp_subnet_v2",
    "body": [
      "resource \"selectel_vpc_project_v2\" \"project_1\" {",
      "  auto_quotas = true",
      "}",
      "",
      "resource \"selectel_vpc_vrrp_subnet_v2\" \"vrrp_subnet_1\" {",
      "  project_id    = \"${selectel_vpc_project_v2.project_1.id}\"",
      "  master_region = \"ru-1\"",
      "  slave_region  = \"ru-2\"",
      "  ip_version    = \"ipv4\"",
      "  prefix_length = 29",
      "}"
    ]
  },
  "signalfx-resource-dashboard": {
    "description": "Defines dashboard",
    "prefix": "tf-signalfx-resource-dashboard",
    "body": [
      "resource \"signalfx_dashboard\" \"mydashboard0\" {",
      "    name = \"My Dashboard\"",
      "    dashboard_group = \"${signalfx_dashboard_group.mydashboardgroup0.id}\"",
      "",
      "    time_range = \"-30m\"",
      "",
      "    filter {",
      "        property = \"collector\"",
      "        values = [\"cpu\", \"Diamond\"]",
      "    }",
      "    variable {",
      "        property = \"region\"",
      "        alias = \"region\"",
      "        values = [\"uswest-1-\"]",
      "    }",
      "    chart {",
      "        chart_id = \"${signalfx_time_chart.mychart0.id}\"",
      "        width = 12",
      "        height = 1",
      "    }",
      "    chart {",
      "        chart_id = \"${signalfx_time_chart.mychart1.id}\"",
      "        width = 5",
      "        height = 2",
      "    }",
      "}"
    ]
  },
  "signalfx-resource-dashboard_group": {
    "description": "Defines dashboard_group",
    "prefix": "tf-signalfx-resource-dashboard_group",
    "body": [
      "resource \"signalfx_dashboard_group\" \"mydashboardgroup0\" {",
      "    name = \"My team dashboard group\"",
      "    description = \"Cool dashboard group\"",
      "}"
    ]
  },
  "signalfx-resource-detector": {
    "description": "Defines detector",
    "prefix": "tf-signalfx-resource-detector",
    "body": [
      "resource \"signalfx_detector\" \"application_delay\" {",
      "    count = \"${length(var.clusters)}\"",
      "    name = \" max average delay - ${var.clusters[count.index]}\"",
      "    description = \"your application is slow - ${var.clusters[count.index]}\"",
      "    max_delay = 30",
      "    program_text = <<-EOF",
      "        signal = data('app.delay', filter('cluster','${var.clusters[count.index]}'), extrapolation='last_value', maxExtrapolations=5).max()",
      "        detect(when(signal > 60, '5m')).publish('Processing old messages 5m')",
      "        detect(when(signal > 60, '30m')).publish('Processing old messages 30m')",
      "    EOF",
      "    rule {",
      "        description = \"maximum > 60 for 5m\"",
      "        severity = \"Warning\"",
      "        detect_label = \"Processing old messages 5m\"",
      "        notifications = [\"Email,foo-alerts@bar.com\"]",
      "    }",
      "    rule {",
      "        description = \"maximum > 60 for 30m\"",
      "        severity = \"Critical\"",
      "        detect_label = \"Processing old messages 30m\"",
      "        notifications = [\"Email,foo-alerts@bar.com\"]",
      "    }",
      "}",
      "",
      "provider \"signalfx\" {}",
      "",
      "variable \"clusters\" {",
      "    default = [\"clusterA\", \"clusterB\"]",
      "}"
    ]
  },
  "signalfx-resource-event_feed_chart": {
    "description": "Defines event_feed_chart",
    "prefix": "tf-signalfx-resource-event_feed_chart",
    "body": [
      "resource \"signalfx_event_feed_chart\" \"mynote0\" {",
      "    name = \"Important Dashboard Note\"",
      "    description = \"Lorem ipsum dolor sit amet\"",
      "    program_text = \"A = events(eventType='Fart Testing').publish(label='A')\"",
      "",
      "    viz_options {",
      "        label = \"A\"",
      "        color = \"orange\"",
      "    }",
      "}"
    ]
  },
  "signalfx-resource-heatmap_chart": {
    "description": "Defines heatmap_chart",
    "prefix": "tf-signalfx-resource-heatmap_chart",
    "body": [
      "resource \"signalfx_heatmap_chart\" \"myheatmapchart0\" {",
      "    name = \"CPU Total Idle - Heatmap\"",
      "",
      "    program_text = <<-EOF",
      "        myfilters = filter(\"cluster_name\", \"prod\") and filter(\"role\", \"search\")",
      "        data(\"cpu.total.idle\", filter=myfilters).publish()",
      "        EOF",
      "",
      "    description = \"Very cool Heatmap\"",
      "",
      "    disable_sampling = true",
      "    sort_by = \"+host\"",
      "    group_by = [\"hostname\", \"host\"]",
      "    hide_timestamp = true",
      "}"
    ]
  },
  "signalfx-resource-integration": {
    "description": "Defines integration",
    "prefix": "tf-signalfx-resource-integration",
    "body": [
      "resource \"signalfx_integration\" \"pagerduty_myteam\" {",
      "    name = \"PD - My Team\"",
      "    enabled = true",
      "    type = \"PagerDuty\"",
      "    api_key = \"1234567890\"",
      "}"
    ]
  },
  "signalfx-resource-integration_aws": {
    "description": "Defines integration_aws",
    "prefix": "tf-signalfx-resource-integration_aws",
    "body": [
      "resource \"signalfx_aws_integration\" \"aws_myteam\" {",
      "    name = \"AWSFoo\"",
      "    enabled = true",
      "",
      "\t\tauth_method = \"ExternalId\"",
      "\t\trole_arn = \"arn:aws:iam::XXX:role/SignalFx-Read-Role\"",
      "\t\tregions = [\"us-east-1\"]",
      "\t\tpoll_rate = 300",
      "\t\timport_cloud_watch = true",
      "\t\tenable_aws_usage = true",
      "",
      "\t\tcustom_namespace_sync_rule {",
      "\t\t\tdefault_action = \"Exclude\"",
      "\t\t\tfilter_action = \"Include\"",
      "\t\t\tfilter_source = \"filter('code', '200')\"",
      "\t\t\tnamespace = \"fart\"",
      "\t\t}",
      "",
      "\t\tnamespace_sync_rule {",
      "\t\t\tdefault_action = \"Exclude\"",
      "\t\t\tfilter_action = \"Include\"",
      "\t\t\tfilter_source = \"filter('code', '200')\"",
      "\t\t\tnamespace = \"AWS/EC2\"",
      "\t\t}",
      "}"
    ]
  },
  "signalfx-resource-integration_azure": {
    "description": "Defines integration_azure",
    "prefix": "tf-signalfx-resource-integration_azure",
    "body": [
      "resource \"signalfx_azure_integration\" \"azure_myteam\" {",
      "    name = \"Azure Foo\"",
      "    enabled = true",
      "",
      "    resource \"signalfx_azure_integration\" \"azure_myteamXX\" {",
      "        name = \"AzureFoo\"",
      "        enabled = false",
      "",
      "        environment = \"azure\"",
      "",
      "    \t\tpoll_rate = 300",
      "",
      "        secret_key = \"XXX\"",
      "",
      "        app_id = \"YYY\"",
      "",
      "        tenant_id = \"ZZZ\"",
      "",
      "        services = [ \"microsoft.sql/servers/elasticpools\" ]",
      "",
      "        subscriptions = [ \"microsoft.sql/servers/elasticpools\" ]",
      "    }",
      "}"
    ]
  },
  "signalfx-resource-integration_gcp": {
    "description": "Defines integration_gcp",
    "prefix": "tf-signalfx-resource-integration_gcp",
    "body": [
      "resource \"signalfx_integration_gcp\" \"gcp_myteam\" {",
      "    name = \"GCP - My Team\"",
      "    enabled = true",
      "    poll_rate = 300000",
      "    services = [\"compute\"]",
      "    project_service_keys",
      "        project_id = \"gcp_project_id_1\"",
      "        project_key = \"${file(\"/path/to/gcp_credentials_1.json\")}\"",
      "    }",
      "    project_service_keys {",
      "        project_id = \"gcp_project_id_2\"",
      "        project_key = \"${file(\"/path/to/gcp_credentials_2.json\")}\"",
      "    }",
      "}"
    ]
  },
  "signalfx-resource-integration_pagerduty": {
    "description": "Defines integration_pagerduty",
    "prefix": "tf-signalfx-resource-integration_pagerduty",
    "body": [
      "resource \"signalfx_pagerduty_integration\" \"pagerduty_myteam\" {",
      "    name = \"PD - My Team\"",
      "    enabled = true",
      "    api_key = \"1234567890\"",
      "}"
    ]
  },
  "signalfx-resource-integration_slack": {
    "description": "Defines integration_slack",
    "prefix": "tf-signalfx-resource-integration_slack",
    "body": [
      "resource \"signalfx_slack_integration\" \"slack_myteam\" {",
      "    name = \"Slack - My Team\"",
      "    enabled = true",
      "    webhook_url = \"http://example.com\"",
      "}"
    ]
  },
  "signalfx-resource-list_chart": {
    "description": "Defines list_chart",
    "prefix": "tf-signalfx-resource-list_chart",
    "body": [
      "resource \"signalfx_list_chart\" \"mylistchart0\" {",
      "    name = \"CPU Total Idle - List\"",
      "",
      "    program_text = <<-EOF",
      "    myfilters = filter(\"cluster_name\", \"prod\") and filter(\"role\", \"search\")",
      "    data(\"cpu.total.idle\", filter=myfilters).publish()",
      "    EOF",
      "",
      "    description = \"Very cool List Chart\"",
      "",
      "    color_by = \"Metric\"",
      "    max_delay = 2",
      "    disable_sampling = true",
      "    refresh_interval = 1",
      "",
      "    legend_options_fields {",
      "      property = \"collector\"",
      "      enabled  = false",
      "    }",
      "",
      "    legend_options_fields {",
      "      property = \"cluster_name\"",
      "      enabled = true",
      "    }",
      "    legend_options_fields {",
      "      property = \"role\"",
      "      enabled = true",
      "    }",
      "    legend_options_fields {",
      "      property = \"collector\"",
      "      enabled = false",
      "    }",
      "    legend_options_fields {",
      "      property = \"host\"",
      "      enabled = false",
      "    }",
      "    max_precision = 2",
      "    sort_by = \"-value\"",
      " }"
    ]
  },
  "signalfx-resource-single_value_chart": {
    "description": "Defines single_value_chart",
    "prefix": "tf-signalfx-resource-single_value_chart",
    "body": [
      "resource \"signalfx_single_value_chart\" \"mysvchart0\" {",
      "    name = \"CPU Total Idle - Single Value\"",
      "",
      "    program_text = <<-EOF",
      "        myfilters = filter(\"cluster_name\", \"prod\") and filter(\"role\", \"search\")",
      "        data(\"cpu.total.idle\", filter=myfilters).publish()",
      "        EOF",
      "",
      "    description = \"Very cool Single Value Chart\"",
      "",
      "    color_by = \"Dimension\"",
      "",
      "    max_delay = 2",
      "    refresh_interval = 1",
      "    max_precision = 2",
      "    is_timestamp_hidden = true",
      "}"
    ]
  },
  "signalfx-resource-text_chart": {
    "description": "Defines text_chart",
    "prefix": "tf-signalfx-resource-text_chart",
    "body": [
      "resource \"signalfx_text_chart\" \"mynote0\" {",
      "    name = \"Important Dashboard Note\"",
      "    description = \"Lorem ipsum dolor sit amet, laudem tibique iracundia at mea. Nam posse dolores ex, nec cu adhuc putent honestatis\"",
      "",
      "    markdown = <<-EOF",
      "    1. First ordered list item",
      "    2. Another item",
      "      * Unordered sub-list.",
      "    1. Actual numbers don't matter, just that it's a number",
      "      1. Ordered sub-list",
      "    4. And another item.",
      "",
      "       You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).",
      "",
      "       To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅",
      "       Note that this line is separate, but within the same paragraph.⋅⋅",
      "       (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)",
      "",
      "    * Unordered list can use asterisks",
      "    - Or minuses",
      "    + Or pluses",
      "    EOF",
      "}"
    ]
  },
  "signalfx-resource-time_chart": {
    "description": "Defines time_chart",
    "prefix": "tf-signalfx-resource-time_chart",
    "body": [
      "resource \"signalfx_time_chart\" \"mychart0\" {",
      "    name = \"CPU Total Idle\"",
      "",
      "    program_text = <<-EOF",
      "        myfilters = filter(\"shc_name\", \"prod\") and filter(\"role\", \"splunk_searchhead\")",
      "        data(\"cpu.total.idle\", filter=myfilters).publish(label=\"CPU Idle\")",
      "        EOF",
      "",
      "    time_range = \"-15m\"",
      "",
      "    plot_type = \"LineChart\"",
      "    show_data_markers = true",
      "",
      "    legend_options_fields {",
      "      property = \"shc_name\"",
      "      enabled = true",
      "    }",
      "    legend_options_fields {",
      "      property = \"role\"",
      "      enabled = true",
      "    }",
      "    legend_options_fields {",
      "      property = \"collector\"",
      "      enabled = false",
      "    }",
      "    legend_options_fields {",
      "      property = \"prefix\"",
      "      enabled = false",
      "    }",
      "    legend_options_fields {",
      "      property = \"hostname\"",
      "      enabled = false",
      "    }",
      "    viz_options {",
      "        label = \"CPU Idle\"",
      "        axis = \"left\"",
      "        color = \"orange\"",
      "    }",
      "",
      "    axis_left {",
      "        label = \"CPU Total Idle\"",
      "        low_watermark = 1000",
      "    }",
      "}"
    ]
  },
  "skytap-data-project": {
    "description": "Defines project",
    "prefix": "tf-skytap-data-project",
    "body": [
      "data \"skytap_project\" \"example\" {",
      "  name = \"example\"",
      "}"
    ]
  },
  "skytap-data-template": {
    "description": "Defines template",
    "prefix": "tf-skytap-data-template",
    "body": [
      "data \"skytap_template\" \"example\" {",
      " \tname = \"18.04\"",
      "    most_recent = true",
      "}",
      ""
    ]
  },
  "skytap-resource-environment": {
    "description": "Defines environment",
    "prefix": "tf-skytap-resource-environment",
    "body": [
      "# Create a new environment",
      "resource \"skytap_environment\" \"environment\" {",
      "  template_id = \"123456\"",
      "  name = \"Terraform Example\"",
      "  description = \"Skytap terraform provider example environment.\"",
      "}"
    ]
  },
  "skytap-resource-network": {
    "description": "Defines network",
    "prefix": "tf-skytap-resource-network",
    "body": [
      "# Create a new network",
      "resource \"skytap_network\" \"network\" {",
      "  environment_id = \"123456\"",
      "  name = \"my network\"",
      "  domain = \"domain.com\"",
      "  subnet = \"1.2.3.4/16\"",
      "  gateway = \"1.2.3.254\"",
      "  tunnelable = true",
      "}"
    ]
  },
  "skytap-resource-project": {
    "description": "Defines project",
    "prefix": "tf-skytap-resource-project",
    "body": [
      "# Create a new project",
      "resource \"skytap_project\" \"project\" {",
      "  name = \"Terraform Example\"",
      "  summary = \"Skytap terraform provider example project.\"",
      "  show_project_members = false",
      "  auto_add_role_name = \"participant\"",
      "}"
    ]
  },
  "skytap-resource-vm": {
    "description": "Defines vm",
    "prefix": "tf-skytap-resource-vm",
    "body": [
      "# Create a new vm",
      "resource \"skytap_vm\" \"vm\" {",
      "  template_id = 123",
      "  vm_id = 456",
      "  environment_id = 789",
      "  name = \"my vm\"",
      "  cpu = 4",
      "  ram = 4096",
      "  ",
      "  os_disk_size = 40000",
      "  \t  ",
      "  disk = {",
      "    name = \"my disk\"",
      "    size = 4096",
      "  }",
      "  disk = {",
      "      name = \"my other disk\"",
      "      size = 4096",
      "  }",
      "  ",
      "  network_interface = {",
      "     interface_type = \"vmxnet3\"",
      "     network_id = \"${skytap_network.my_network.id}\"",
      "     ip = \"10.0.0.1\"",
      "     hostname = \"myhost\"",
      "      ",
      "    published_service = {",
      "      name = \"ssh\"",
      "      internal_port = 22",
      "    }",
      "  }",
      "}",
      "",
      "# Will work after VM resource is created",
      "output \"ssh_ip\" {",
      "  value = \"${skytap_vm.vm.service_ips.ssh}\"",
      "}",
      "output \"ssh_port\" {",
      "  value = \"${skytap_vm.vm.service_ports.ssh}\"",
      "}"
    ]
  },
  "softlayer-resource-ssh_key": {
    "description": "Defines ssh_key",
    "prefix": "tf-softlayer-resource-ssh_key",
    "body": [
      "resource \"softlayer_ssh_key\" \"test_ssh_key\" {",
      "  name       = \"test_ssh_key_name\"",
      "  notes      = \"test_ssh_key_notes\"",
      "  public_key = \"ssh-rsa <rsa_public_key>\"",
      "}"
    ]
  },
  "softlayer-resource-virtual_guest": {
    "description": "Defines virtual_guest",
    "prefix": "tf-softlayer-resource-virtual_guest",
    "body": [
      "resource \"softlayer_virtual_guest\" \"twc_terraform_sample\" {",
      "  name                     = \"twc-terraform-sample-name\"",
      "  domain                   = \"bar.example.com\"",
      "  image                    = \"DEBIAN_7_64\"",
      "  region                   = \"ams01\"",
      "  public_network_speed     = 10",
      "  hourly_billing           = true",
      "  private_network_only     = false",
      "  cpu                      = 1",
      "  ram                      = 1024",
      "  disks                    = [25, 10, 20]",
      "  user_data                = \"{\\\"value\\\":\\\"newvalue\\\"}\"",
      "  dedicated_acct_host_only = true",
      "  local_disk               = false",
      "  frontend_vlan_id         = 1085155",
      "  backend_vlan_id          = 1085157",
      "}"
    ]
  },
  "spotinst-resource-elastigroup_aws": {
    "description": "Defines elastigroup_aws",
    "prefix": "tf-spotinst-resource-elastigroup_aws",
    "body": [
      "# Create an Elastigroup",
      "resource \"spotinst_elastigroup_aws\" \"default-elastigroup\" {",
      "",
      "  name        = \"default-elastigroup\"",
      "  description = \"created by Terraform\"",
      "  product     = \"Linux/UNIX\"",
      "",
      "  max_size          = 0",
      "  min_size          = 0",
      "  desired_capacity  = 0",
      "  capacity_unit     = \"weight\"",
      "",
      "  region      = \"us-west-2\"",
      "  subnet_ids  = [\"sb-123456\", \"sb-456789\"]",
      "  ",
      "  image_id              = \"ami-a27d8fda\"",
      "  iam_instance_profile  = \"iam-profile\"",
      "  key_name              = \"my-key.ssh\"",
      "  security_groups       = [\"sg-123456\"]",
      "  user_data             = \"echo hello world\"",
      "  enable_monitoring     = false",
      "  ebs_optimized         = false",
      "  placement_tenancy     = \"default\"",
      "",
      "  instance_types_ondemand       = \"m3.2xlarge\"",
      "  instance_types_spot           = [\"m3.xlarge\", \"m3.2xlarge\"]",
      "  instance_types_preferred_spot = [\"m3.xlarge\"]",
      "",
      "  instance_types_weights = [",
      "  {",
      "    instance_type = \"c3.large\"",
      "    weight        = 10",
      "  },",
      "  {",
      "    instance_type = \"c4.xlarge\"",
      "    weight        = 16",
      "  }]",
      "",
      "  orientation           = \"balanced\"",
      "  fallback_to_ondemand  = false",
      "  cpu_credits           = \"unlimited\"",
      "",
      "  wait_for_capacity         = 5",
      "  wait_for_capacity_timeout = 300",
      "  ",
      "  scaling_strategy = {",
      "    terminate_at_end_of_billing_hour = true",
      "    termination_policy = \"default\"",
      "  }",
      "",
      "  scaling_up_policy = {",
      "    policy_name        = \"Default Scaling Up Policy\"",
      "    metric_name        = \"DefaultQueuesDepth\"",
      "    statistic          = \"average\"",
      "    unit               = \"none\"",
      "    adjustment         = 1",
      "    namespace          = \"custom\"",
      "    threshold          = 100",
      "    period             = 60",
      "    evaluation_periods = 5",
      "    cooldown           = 300",
      "  }",
      "",
      "  scaling_down_policy = {",
      "    policy_name        = \"Default Scaling Down Policy\"",
      "    metric_name        = \"DefaultQueuesDepth\"",
      "    statistic          = \"average\"",
      "    unit               = \"none\"",
      "    adjustment         = 1",
      "    namespace          = \"custom\"",
      "    threshold          = 10",
      "    period             = 60",
      "    evaluation_periods = 10",
      "    cooldown           = 300",
      "  }",
      "",
      "  tags = [",
      "  {",
      "     key   = \"Env\"",
      "     value = \"production\"",
      "  }, ",
      "  {",
      "     key   = \"Name\"",
      "     value = \"default-production\"",
      "  },",
      "  {",
      "     key   = \"Project\"",
      "     value = \"app_v2\"",
      "  }",
      " ]",
      "",
      "  lifecycle {",
      "    ignore_changes = [",
      "      \"desired_capacity\",",
      "    ]",
      "  }",
      "}"
    ]
  },
  "spotinst-resource-elastigroup_aws_beanstalk": {
    "description": "Defines elastigroup_aws_beanstalk",
    "prefix": "tf-spotinst-resource-elastigroup_aws_beanstalk",
    "body": [
      "resource \"spotinst_elastigroup_aws_beanstalk\" \"elastigoup-aws=beanstalk\" {",
      "",
      " name    = \"example-elastigroup-beanstalk\"",
      " region  = \"us-west-2\"",
      " product = \"Linux/UNIX\"",
      "",
      " min_size         = 0",
      " max_size         = 1",
      " desired_capacity = 0",
      "",
      " beanstalk_environment_name = \"example-env\"",
      " beanstalk_environment_id   = \"e-example\"",
      " instance_types_spot        = [\"t2.micro\", \"t2.medium\", \"t2.large\"]",
      "}",
      "",
      "deployment_preferences = {",
      "    automatic_roll        = true",
      "    batch_size_percentage = 100",
      "    grace_period          = 90",
      "    strategy = {",
      "        action                 = \"REPLACE_SERVER\"",
      "        should_drain_instances = true",
      "    }",
      "}",
      "",
      "managed_actions = {",
      "    platform_update = {",
      "        perform_at   = \"timeWindow\"",
      "        time_window  = \"Mon:23:50-Tue:00:20\"",
      "        update_level = \"minorAndPatch\"",
      "    }",
      "}"
    ]
  },
  "spotinst-resource-elastigroup_azure": {
    "description": "Defines elastigroup_azure",
    "prefix": "tf-spotinst-resource-elastigroup_azure",
    "body": [
      "resource \"spotinst_elastigroup_azure\" \"test_azure_group\" {",
      "  name                = \"example_elastigroup_azure\"",
      "  resource_group_name = \"spotinst-azure\"",
      "  region              = \"eastus\"",
      "  product             = \"Linux\"",
      "",
      "  user_data       = \"\"",
      "  shutdown_script = \"\"",
      "  ",
      "  managed_service_identities = {",
      "    resource_group_name = \"spotinst-azure\"",
      "    name = \"example-identity\"",
      "  }",
      "",
      "  // --- CAPACITY ------------------------------------------------------",
      "  min_size         = 0",
      "  max_size         = 1",
      "  desired_capacity = 1",
      "  // -------------------------------------------------------------------",
      "",
      "  // --- INSTANCE TYPES ------------------------------------------------",
      "  od_sizes           = [\"standard_a1_v1\", \"standard_a1_v2\"]",
      "  low_priority_sizes = [\"standard_a1_v1\", \"standard_a1_v2\"]",
      "  // -------------------------------------------------------------------",
      "",
      "  // --- IMAGE ---------------------------------------------------------",
      "  image = {",
      "    marketplace = {",
      "      publisher = \"Canonical\"",
      "      offer     = \"UbuntuServer\"",
      "      sku       = \"16.04-LTS\"",
      "    }",
      "  }",
      "  // -------------------------------------------------------------------",
      "",
      "  // --- STRATEGY ------------------------------------------------------",
      "  strategy = {",
      "    od_count          = 1",
      "    draining_timeout  = 300",
      "  }",
      "  // -------------------------------------------------------------------",
      "",
      "  // --- LOAD BALANCERS ------------------------------------------------",
      "  load_balancers = [{",
      "    type          = \"MULTAI_TARGET_SET\"",
      "    balancer_id   = \"lb-1ee2e3q\"",
      "    target_set_id = \"ts-3eq\"",
      "    auto_weight   = true",
      "  }]",
      "  // -------------------------------------------------------------------",
      "",
      "  // --- HEALTH-CHECKS -------------------------------------------------",
      "  health_check = {",
      "    health_check_type = \"INSTANCE_STATE\"",
      "    grace_period      = 120",
      "    auto_healing      = true",
      "  }",
      "  // -------------------------------------------------------------------",
      "",
      "  // --- NETWORK -------------------------------------------------------",
      "  network = {",
      "    virtual_network_name = \"vname\"",
      "    subnet_name          = \"my-subnet-name\"",
      "    resource_group_name  = \"subnetResourceGroup\"",
      "    assign_public_ip     = true",
      "  }",
      "  // -------------------------------------------------------------------",
      "",
      "  // --- LOGIN ---------------------------------------------------------",
      "  login = {",
      "    user_name      = \"admin\"",
      "    ssh_public_key = \"33a2s1f3g5a1df5g1ad3f2g1adfg56dfg==\"",
      "  }",
      "  // -------------------------------------------------------------------",
      "  ",
      "  // --- SCHEDULED TASK ------------------------------------------------",
      "  scheduled_task = [{",
      "    is_enabled      = true",
      "    cron_expression = \"* * * * *\"",
      "    task_type       = \"scale\"",
      "    ",
      "    scale_min_capacity = 5",
      "    scale_max_capacity = 8",
      "    adjustment         = 2",
      "    ",
      "    adjustment_percentage = 50",
      "    scale_target_capacity = 6",
      "    batch_size_percentage = 33",
      "    grace_period          = 300",
      "  }]",
      " // -------------------------------------------------------------------",
      " ",
      " // --- SCALING POLICIES ----------------------------------------------",
      "   scaling_up_policy = [{",
      "       policy_name = \"policy-name\"",
      "       metric_name = \"CPUUtilization\"",
      "       namespace   = \"Microsoft.Compute\"",
      "       statistic   = \"average\"",
      "       threshold   = 10",
      "       unit        = \"percent\"",
      "       cooldown    = 60",
      "       ",
      "       dimensions = [",
      "         {",
      "           name  = \"resourceName\"",
      "           value = \"resource-name\"",
      "         },",
      "         {",
      "           name  = \"resourceGroupName\"",
      "           value = \"resource-group-name\"",
      "         },",
      "       ]",
      "       ",
      "       operator            = \"gt\"",
      "       evaluation_periods  = \"10\"",
      "       period              = \"60\"",
      "       action_type         = \"setMinTarget\"",
      "       min_target_capacity = 1",
      "     }]",
      " ",
      "     scaling_down_policy = [{",
      "       policy_name = \"policy-name\"",
      "       metric_name = \"CPUUtilization\"",
      "       namespace   = \"Microsoft.Compute\"",
      "       statistic   = \"average\"",
      "       threshold   = 10",
      "       unit        = \"percent\"",
      "       cooldown    = 60",
      "       ",
      "       dimensions = {",
      "           name  = \"name-1\"",
      "           value = \"value-1\"",
      "       }",
      "       ",
      "       operator           = \"gt\"",
      "       evaluation_periods = \"10\"",
      "       period             = \"60\"",
      "       action_type        = \"adjustment\"",
      "       adjustment         = \"MIN(5,10)\"",
      "     }]",
      "}",
      " // -------------------------------------------------------------------",
      " "
    ]
  },
  "spotinst-resource-elastigroup_gcp": {
    "description": "Defines elastigroup_gcp",
    "prefix": "tf-spotinst-resource-elastigroup_gcp",
    "body": [
      "resource \"spotinst_elastigroup_gcp\" \"example\" {",
      "  name            = \"example-gcp\"",
      "  description     = \"spotinst gcp group\"",
      "  service_account = \"example@myProject.iam.gservicecct.com\"",
      "  startup_script  = \"\"",
      "  ",
      "  min_size         = 0",
      "  max_size         = 1",
      "  desired_capacity = 1",
      "",
      "  availability_zones = [\"asia-east1-c\", \"us-central1-a\"]",
      "",
      "  preemptible_percentage = 50",
      "  # on_demand_count        = 2",
      "  fallback_to_ondemand         = true",
      "  draining_timeout       = 180",
      "  ",
      "  labels = [",
      "    {",
      "      key = \"test_key\"",
      "      value = \"test_value\"",
      "    }",
      "  ]",
      "  ",
      "  tags             = [\"http\", \"https\"]",
      "  ",
      "  backend_services_config = [",
      "    {",
      "      service_name = \"spotinst-elb-backend-service\"",
      "      ports = {",
      "        port_name = \"port-name\"",
      "        ports = [8000, 6000]",
      "      }",
      "    },",
      "  ]",
      "",
      "  disks = [",
      "    {",
      "      device_name = \"device\"",
      "      mode        = \"READ_WRITE\"",
      "      type        = \"PERSISTENT\"",
      "      auto_delete = true",
      "      boot        = true",
      "      interface   = \"SCSI\"",
      "",
      "      initialize_params = {",
      "        disk_size_gb = 10",
      "        disk_type    = \"pd-standard\"",
      "        source_image = \"\"",
      "      }",
      "    }",
      "  ]",
      "",
      "  network_interface = [",
      "    {",
      "      network = \"spot-network\"",
      "    }",
      "  ]",
      "",
      "  instance_types_ondemand   = [\"n1-standard-1\"]",
      "  instance_types_preemptible = [\"n1-standard-1\", \"n1-standard-2\"]",
      "",
      "  instance_types_custom = [",
      "    {",
      "      vCPU      = 2",
      "      memoryGiB = 7.5",
      "    }",
      "  ]",
      "",
      "  subnets = [",
      "    {",
      "      region       = \"asia-east1\"",
      "      subnet_names = \"\"",
      "    }",
      "  ]",
      "",
      "  scaling = {",
      "    up = {",
      "      policy_name = \"scale_up_1\"",
      "      source      = \"stackdriver\"",
      "      metric_name = \"instance/disk/read_ops_count\"",
      "      namespace   = \"compute\"",
      "      statistic   = \"average\"",
      "      unit        = \"percent\"",
      "      threshold   = 10000",
      "      period      = 300",
      "      cooldown    = 300",
      "      operator    = \"gte\"",
      "",
      "      evaluation_periods = 1",
      "      ",
      "      action = {",
      "        type       = \"adjustment\"",
      "        adjustment = 1",
      "      }",
      "",
      "      dimensions = [",
      "        {",
      "          name  = \"storage_type\"",
      "          value = \"pd-ssd\"",
      "        }",
      "      ]",
      "    }",
      "  }",
      "}"
    ]
  },
  "spotinst-resource-elastigroup_gke": {
    "description": "Defines elastigroup_gke",
    "prefix": "tf-spotinst-resource-elastigroup_gke",
    "body": [
      "resource \"spotinst_elastigroup_gke\" \"example-gke-elastigroup\" {",
      " name              = \"example-gke\"",
      " // cluster_id        = \"terraform-acc-test-cluster\" // deprecated",
      " cluster_zone_name = \"us-central1-a\"",
      " node_image        = \"COS\"",
      "",
      " // --- CAPACITY ------------",
      " max_size         = 5",
      " min_size         = 1",
      " desired_capacity = 3",
      " // -------------------------",
      "",
      " // --- INSTANCE TYPES --------------------------------",
      " instance_types_ondemand    = \"n1-standard-1\"",
      " instance_types_preemptible = [\"n1-standard-1\", \"n1-standard-2\"]",
      " // ---------------------------------------------------",
      "",
      " // --- STRATEGY --------------------",
      " preemptible_percentage = 100",
      " // ---------------------------------",
      "",
      " integration_gke = {",
      "  location                 = \"us-central1-a\"",
      "  cluster_id               = \"example-cluster-id\"",
      "  autoscale_is_enabled     = true",
      "  autoscale_is_auto_config = false",
      "  autoscale_cooldown       = 300",
      "  ",
      "  autoscale_headroom = {",
      "    cpu_per_unit    = 1024",
      "    memory_per_unit = 512",
      "    num_of_units    = 2",
      "  }",
      "",
      "  autoscale_down = {",
      "    evaluation_periods = 300",
      "  }",
      "",
      "  autoscale_labels = {",
      "    key   = \"label_key\"",
      "    value = \"label_value\"",
      "  }",
      " }",
      "",
      "  backend_services = [{",
      "    service_name  = \"backend-service\"",
      "    location_type = \"global\"",
      "    named_ports = {",
      "      name  = \"http\"",
      "      ports = [80, 8080]",
      "    }",
      "  }]",
      "",
      "}"
    ]
  },
  "spotinst-resource-mrscaler_aws": {
    "description": "Defines mrscaler_aws",
    "prefix": "tf-spotinst-resource-mrscaler_aws",
    "body": [
      "# Create a Mr Scaler with New strategy",
      "",
      "resource \"spotinst_mrscaler_aws\" \"Terraform-MrScaler-01\" {",
      "  name        = \"Terraform-MrScaler-01\"",
      "  description = \"Testing MrScaler creation via Terraform\"",
      "  region      = \"us-west-2\"",
      "  strategy    = \"new\"",
      "  release_label = \"emr-5.17.0\"",
      "  ",
      "  availability_zones = [\"us-west-2a:subnet-123456\"]",
      "  ",
      "  provisioning_timeout = {",
      "    timeout        = 15",
      "    timeout_action = \"terminate\"",
      "  }",
      "  ",
      "// --- CLUSTER ------------",
      "  log_uri         = \"s3://example-logs\"",
      "  additional_info = \"{'test':'more information'}\"",
      "  job_flow_role   = \"EMR_EC2_ExampleRole\"",
      "  security_config = \"example-config\"",
      "  service_role    = \"example-role\"",
      "  ",
      "  termination_protected = false",
      "  keep_job_flow_alive   = true",
      "// -------------------------",
      "",
      "// --- OPTONAL COMPUTE -----",
      "  custom_ami_id        = \"ami-123456\"",
      "  repo_upgrade_on_boot = \"NONE\"",
      "  ec2_key_name         = \"test-key\"",
      "",
      "  managed_primary_security_group = \"sg-123456\"",
      "  managed_replica_security_group = \"sg-987654\"",
      "  service_access_security_group  = \"access-example\"",
      "",
      "  additional_primary_security_groups = [\"sg-456321\"]",
      "  additional_replica_security_groups = [\"sg-123654\"]",
      "",
      "  applications = [",
      "    {",
      "      name = \"Ganglia\"",
      "      version = \"1.0\"",
      "    },",
      "    {",
      "      name = \"Hadoop\"",
      "    },",
      "    {",
      "      name = \"Pig\"",
      "      args = [\"fake\", \"args\"]",
      "    }",
      "  ]",
      "  ",
      "  instance_weights = [",
      "    {",
      "      instance_type     = \"t2.small\"",
      "      weighted_capacity = 10",
      "    },",
      "    {",
      "      instance_type     = \"t2.medium\"",
      "      weighted_capacity = 90",
      "    }",
      "  ]",
      "",
      "  steps_file = {",
      "    bucket = \"example-bucket\"",
      "    key = \"steps.json\"",
      "  }",
      "",
      "  configurations_file = {",
      "    bucket = \"example-bucket\"",
      "    key = \"configurations.json\"",
      "  }",
      "",
      "  bootstrap_actions_file = {",
      "    bucket = \"terraform-emr-test\"",
      "    key = \"bootstrap-actions.json\"",
      "  }",
      "// -------------------------",
      "  ",
      "// --- MASTER GROUP -------------",
      "  master_instance_types = [\"c3.xlarge\"]",
      "  master_lifecycle      = \"SPOT\"",
      "  master_ebs_optimized  = true",
      "  ",
      "  master_ebs_block_device = {",
      "    volumes_per_instance = 1",
      "    volume_type          = \"gp2\"",
      "    size_in_gb           = 30",
      "  }",
      "// ------------------------------",
      "",
      "// --- CORE GROUP -------------",
      "  core_instance_types = [\"c3.xlarge\", \"c4.xlarge\"]",
      "  core_min_size         = 1",
      "  core_max_size         = 1",
      "  core_desired_capacity = 1",
      "  core_lifecycle        = \"ON_DEMAND\"",
      "  core_ebs_optimized    = false",
      "  ",
      "  core_ebs_block_device = {",
      "    volumes_per_instance = 2",
      "    volume_type          = \"gp2\"",
      "    size_in_gb           = 40",
      "  }",
      "// ----------------------------",
      "",
      "// --- TASK GROUP -------------",
      "  task_instance_types = [\"c3.xlarge\", \"c4.xlarge\"]",
      "  task_min_size         = 0",
      "  task_max_size         = 30",
      "  task_desired_capacity = 1",
      "  task_lifecycle        = \"SPOT\"",
      "  task_ebs_optimized    = false",
      "  ",
      "  task_ebs_block_device = {",
      "    volumes_per_instance = 2",
      "    volume_type          = \"gp2\"",
      "    size_in_gb           = 40",
      "  }",
      "// ----------------------------",
      "",
      "// --- TAGS -------------------",
      "  tags = [{",
      "      key   = \"Creator\"",
      "      value = \"Terraform\"",
      "  }]",
      "// ----------------------------"
    ]
  },
  "spotinst-resource-multai_balancer": {
    "description": "Defines multai_balancer",
    "prefix": "tf-spotinst-resource-multai_balancer",
    "body": [
      "resource \"spotinst_multai_balancer\" \"my_balancer\" {",
      "  name   = \"foo\"",
      "  scheme = \"internal\"",
      "",
      "  connection_timeouts = {",
      "    idle     = 10",
      "    draining = 10",
      "  }",
      "",
      "  tags = [{",
      "    key   = \"env\"",
      "    value = \"prod\"",
      "  }]",
      "}"
    ]
  },
  "spotinst-resource-multai_deployment": {
    "description": "Defines multai_deployment",
    "prefix": "tf-spotinst-resource-multai_deployment",
    "body": [
      "resource \"spotinst_multai_deployment\" \"my_deployment\" {",
      "  name = \"foo\"",
      "}"
    ]
  },
  "spotinst-resource-multai_listener": {
    "description": "Defines multai_listener",
    "prefix": "tf-spotinst-resource-multai_listener",
    "body": [
      "resource \"spotinst_multai_listener\" \"my_listener\" {",
      "  name        = \"foo\"",
      "  balancer_id = \"b-12345\"",
      "  protocol    = \"http\"",
      "  port        = 1337",
      "",
      "  tls_config = {",
      "    certificate_ids             = [\"ce-12345\"]",
      "    min_version                 = \"TLS10\"",
      "    max_version                 = \"TLS12\"",
      "    cipher_suites               = [\"\"]",
      "    prefer_server_cipher_suites = true",
      "    session_tickets_disabled    = false",
      "  }",
      "",
      "  tags = [{",
      "    key   = \"env\"",
      "    value = \"prod\"",
      "  }]",
      "}"
    ]
  },
  "spotinst-resource-multai_routing_rule": {
    "description": "Defines multai_routing_rule",
    "prefix": "tf-spotinst-resource-multai_routing_rule",
    "body": [
      "resource \"spotinst_multai_routing_rule\" \"my_routing_rule\" {",
      "  balancer_id = \"b-12345\"",
      "  listener_id = \"l-98765\"",
      "  route       = \"Path(\\x60/bar\\x60)\"",
      "  strategy    = \"LEASTCONN\"",
      "",
      "  tags = [{",
      "    key   = \"env\"",
      "    value = \"prod\"",
      "  }]",
      "}"
    ]
  },
  "spotinst-resource-multai_target": {
    "description": "Defines multai_target",
    "prefix": "tf-spotinst-resource-multai_target",
    "body": [
      "resource \"spotinst_multai_target\" \"my_target\" {",
      "  balancer_id   = \"b-12345\"",
      "  target_set_id = \"l-98765\"",
      "",
      "  name   = \"foo\"",
      "  port   = 1338",
      "  host   = \"host\"",
      "  weight = 1",
      "",
      "  tags = [{",
      "    key   = \"env\"",
      "    value = \"prod\"",
      "  }]",
      "}"
    ]
  },
  "spotinst-resource-multai_target_set": {
    "description": "Defines multai_target_set",
    "prefix": "tf-spotinst-resource-multai_target_set",
    "body": [
      "resource \"spotinst_multai_target_set\" \"my_target_set\" {",
      "  balancer_id   = \"b-12345\"",
      "  deployment_id = \"dp-12345\"",
      "  name          = \"foo\"",
      "  protocol      = \"http\"",
      "  port          = 1338",
      "  weight        = 2",
      "",
      "  health_check = {",
      "    protocol = \"http\"",
      "    path     = \"/\"",
      "    port     = 3001",
      "    interval = 20",
      "    timeout  = 5",
      "",
      "    healthy_threshold   = 3",
      "    unhealthy_threshold = 3",
      "  }",
      "",
      "  tags = [{",
      "   key   = \"env\"",
      "   value = \"prod\"",
      "  }]",
      "}"
    ]
  },
  "spotinst-resource-ocean_aws": {
    "description": "Defines ocean_aws",
    "prefix": "tf-spotinst-resource-ocean_aws",
    "body": [
      "resource \"spotinst_ocean_aws\" \"example\" {",
      "  name = \"demo\"",
      "  controller_id = \"fakeClusterId\"",
      "  region = \"us-west-2\"",
      "",
      "  max_size         = 2",
      "  min_size         = 1",
      "  desired_capacity = 2",
      "",
      "  subnet_ids = [\"subnet-123456789\"]",
      "  whitelist  = [\"t1.micro\", \"m1.small\"]",
      "",
      "  // --- LAUNCH CONFIGURATION --------------",
      "  image_id             = \"ami-123456\"",
      "  security_groups      = [\"sg-987654321\"]",
      "  key_name             = \"fake key\"",
      "  user_data            = \"echo hello world\"",
      "  iam_instance_profile = \"iam-profile\"",
      "  root_volume_size     = 20",
      "  ",
      "  associate_public_ip_address = true",
      "  ",
      "  load_balancers = [",
      "    {",
      "      arn = \"arn:aws:elasticloadbalancing:us-west-2:fake-arn\"",
      "      type = \"TARGET_GROUP\"",
      "    },",
      "    {",
      "      name = \"AntonK\"",
      "      type = \"CLASSIC\"",
      "    }",
      "  ]",
      "  // ---------------------------------------",
      "",
      "  // --- STRATEGY --------------------",
      "  fallback_to_ondemand       = true",
      "  spot_percentage            = 100",
      "  utilize_reserved_instances = false",
      "  // ---------------------------------",
      "",
      "  // --- AUTOSCALER -----------------",
      "  autoscaler = {",
      "    autoscale_is_enabled     = false",
      "    autoscale_is_auto_config = false",
      "    autoscale_cooldown       = 300",
      "",
      "    autoscale_headroom = {",
      "      cpu_per_unit    = 1024",
      "      gpu_per_unit    = 1",
      "      memory_per_unit = 512",
      "      num_of_units    = 2",
      "    }",
      "",
      "    autoscale_down = {",
      "      evaluation_periods = 300",
      "    }",
      "",
      "    resource_limits = {",
      "      max_vcpu       = 1024",
      "      max_memory_gib = 20",
      "    }",
      "  }",
      "  // --------------------------------",
      "}"
    ]
  },
  "spotinst-resource-ocean_aws_launch_spec": {
    "description": "Defines ocean_aws_launch_spec",
    "prefix": "tf-spotinst-resource-ocean_aws_launch_spec",
    "body": [
      "resource \"spotinst_ocean_aws_launch_spec\" \"example\" {",
      "  ocean_id  = \"o-123456\"",
      "  image_id  = \"ami-123456\"",
      "  user_data = \"echo hello world\"",
      "  iam_instance_profile = \"iam-profile\"",
      "  ",
      "  labels = [{",
      "    key   = \"fakeKey\"",
      "    value = \"fakeValue\"",
      "  }]",
      "  ",
      "  taints = [{",
      "    key    = \"taint key updated\"",
      "    value  = \"taint value updated\"",
      "    effect = \"NoExecute\"",
      "  }]",
      "",
      "}"
    ]
  },
  "spotinst-resource-ocean_gke": {
    "description": "Defines ocean_gke",
    "prefix": "tf-spotinst-resource-ocean_gke",
    "body": [
      "resource \"spotinst_ocean_gke\" \"example\" {",
      "  name               = \"example-ocean-cluster-name\"",
      "  controller_id      = \"example-cluster-id\"",
      "  cluster_name       = \"example-cluster-name\"",
      "  master_location    = \"us-central1-a\"",
      "  subnet_name        = \"example-subnet-1\"",
      "  availability_zones = [\"us-central1-a\"]",
      "  whitelist          = [\"n1-standard-1\", \"n1-standard-2\"]",
      "  ",
      "  max_size         = 1000",
      "  min_size         = 0",
      "  desired_capacity = 500",
      " ",
      "  // --- LAUNCH CONFIGURATION --------------",
      "  source_image           = \"https://www.googleapis.com/compute/v1/projects/my-project/global/examples/example-image-1\"",
      "  service_account        = \"example-account@my-account.iam.gserviceaccount.com\"",
      "  root_volume_size_in_gb = 100",
      "  ip_forwarding          = true",
      " ",
      "  labels = [{",
      "    key   = \"spotinst-gke-original-node-pool\",",
      "    value = \"example-cluster-name__default-pool\"",
      "  }]",
      " ",
      "  metadata = [{",
      "    key   = \"cluster-name\"",
      "    value = \"example-cluster\"",
      "  }]",
      " ",
      "  tags = [\"gke-example-vpc-1234567-node\"]",
      " ",
      "  backend_services = [{",
      "    service_name  = \"example-backend-service\"",
      "    location_type = \"global\"",
      "    ",
      "    named_ports = {",
      "      name  = \"http\"",
      "      ports = [80, 8080]",
      "    }",
      "   }]",
      "  // ---------------------------------------",
      " ",
      "  // --- NETWORK INTERFACE ------------------",
      "   network_interface = [{",
      "     network = \"example-vpc-network\"",
      " ",
      "    access_configs = {",
      "      name = \"config1\"",
      "      type = \"ONE_TO_ONE_NAT\"",
      "    }",
      " ",
      "    alias_ip_ranges = {",
      "      subnetwork_range_name = \"range-1\"",
      "      ip_cidr_range         = \"10.8.0.0/20\"",
      "    }",
      "   }]",
      "  // ----------------------------------------",
      "}"
    ]
  },
  "spotinst-resource-subscription": {
    "description": "Defines subscription",
    "prefix": "tf-spotinst-resource-subscription",
    "body": [
      "# Create a Subscription",
      "resource \"spotinst_subscription\" \"default-subscription\" {",
      "",
      "  resource_id = \"${spotinst_elastigroup_aws.my-eg.id}\"",
      "  event_type  = \"AWS_EC2_INSTANCE_LAUNCH\"",
      "  protocol    = \"http\"",
      "  endpoint    = \"http://endpoint.com\"",
      "  ",
      "  format = {",
      "    event         = \"%event%\"",
      "    instance_id   = \"%instance-id%\"",
      "    resource_id   = \"%resource-id%\"",
      "    resource_name = \"%resource-name%\"",
      "    tags          = \"foo,baz,baz\"",
      "  } ",
      "}"
    ]
  },
  "statuscake-resource-test": {
    "description": "Defines test",
    "prefix": "tf-statuscake-resource-test",
    "body": [
      "resource \"statuscake_test\" \"google\" {",
      "  website_name  = \"google.com\"",
      "  website_url   = \"www.google.com\"",
      "  test_type     = \"HTTP\"",
      "  check_rate    = 300",
      "  contact_group = [\"12345\"]",
      "}"
    ]
  },
  "telefonicaopencloud-data-csbs_backup_policy_v1": {
    "description": "Defines csbs_backup_policy_v1",
    "prefix": "tf-telefonicaopencloud-data-csbs_backup_policy_v1",
    "body": [
      "variable \"policy_id\" { }",
      "",
      "data \"telefonicaopencloud_csbs_backup_policy_v1\" \"csbs_policy\" {",
      "  id = \"${var.policy_id}\" ",
      "}",
      ""
    ]
  },
  "telefonicaopencloud-data-csbs_backup_v1": {
    "description": "Defines csbs_backup_v1",
    "prefix": "tf-telefonicaopencloud-data-csbs_backup_v1",
    "body": [
      "variable \"backup_name\" { }",
      "",
      "data \"telefonicaopencloud_csbs_backup_v1\" \"csbs\" {",
      "  backup_name = \"${var.backup_name}\" ",
      "}"
    ]
  },
  "telefonicaopencloud-data-cts_tracker_v1": {
    "description": "Defines cts_tracker_v1",
    "prefix": "tf-telefonicaopencloud-data-cts_tracker_v1",
    "body": [
      "variable \"bucket_name\" { }",
      "",
      "data \"telefonicaopencloud_cts_tracker_v1\" \"tracker_v1\" {",
      "  bucket_name = \"${var.bucket_name}\"",
      "}",
      ""
    ]
  },
  "telefonicaopencloud-data-dcs_az_v1": {
    "description": "Defines dcs_az_v1",
    "prefix": "tf-telefonicaopencloud-data-dcs_az_v1",
    "body": [
      "",
      "data \"telefonicaopencloud_dcs_az_v1\" \"az1\" {",
      "  name = \"AZ1\"",
      "  port = \"8004\"",
      "  code = \"sa-chile-1a\"",
      "}"
    ]
  },
  "telefonicaopencloud-data-dcs_maintainwindow_v1": {
    "description": "Defines dcs_maintainwindow_v1",
    "prefix": "tf-telefonicaopencloud-data-dcs_maintainwindow_v1",
    "body": [
      "",
      "data \"telefonicaopencloud_dcs_maintainwindow_v1\" \"maintainwindow1\" {",
      "seq = 1",
      "}",
      ""
    ]
  },
  "telefonicaopencloud-data-dcs_product_v1": {
    "description": "Defines dcs_product_v1",
    "prefix": "tf-telefonicaopencloud-data-dcs_product_v1",
    "body": [
      "",
      "data \"telefonicaopencloud_dcs_product_v1\" \"product1\" {",
      "  engine = \"kafka\"",
      "  version = \"1.1.0\"",
      "  instance_type = \"cluster\"",
      "  partition_num = 300",
      "  storage = 600",
      "  storage_spec_code = \"dcs.physical.storage.high\"",
      "}"
    ]
  },
  "telefonicaopencloud-data-dns_zone_v2": {
    "description": "Defines dns_zone_v2",
    "prefix": "tf-telefonicaopencloud-data-dns_zone_v2",
    "body": [
      "data \"telefonicaopencloud_dns_zone_v2\" \"zone_1\" {",
      "  name = \"example.com\"",
      "}"
    ]
  },
  "telefonicaopencloud-data-networking_network_v2": {
    "description": "Defines networking_network_v2",
    "prefix": "tf-telefonicaopencloud-data-networking_network_v2",
    "body": [
      "data \"telefonicaopencloud_networking_network_v2\" \"network\" {",
      "  name = \"tf_test_network\"",
      "}"
    ]
  },
  "telefonicaopencloud-data-networking_secgroup_v2": {
    "description": "Defines networking_secgroup_v2",
    "prefix": "tf-telefonicaopencloud-data-networking_secgroup_v2",
    "body": [
      "data \"telefonicaopencloud_networking_secgroup_v2\" \"secgroup\" {",
      "  name = \"tf_test_secgroup\"",
      "}"
    ]
  },
  "telefonicaopencloud-data-networking_subnet_v2": {
    "description": "Defines networking_subnet_v2",
    "prefix": "tf-telefonicaopencloud-data-networking_subnet_v2",
    "body": [
      "data \"telefonicaopencloud_networking_subnet_v2\" \"subnet_1\" {",
      "  name = \"subnet_1\"",
      "}"
    ]
  },
  "telefonicaopencloud-data-rds_flavors_v1": {
    "description": "Defines rds_flavors_v1",
    "prefix": "tf-telefonicaopencloud-data-rds_flavors_v1",
    "body": [
      "data \"telefonicaopencloud_rds_flavors_v1\" \"flavor\" {",
      "    region = \"eu-de\"",
      "    datastore_name = \"PostgreSQL\"",
      "    datastore_version = \"9.5.5\"",
      "    speccode = \"rds.pg.s1.medium\"",
      "}"
    ]
  },
  "telefonicaopencloud-data-rts_software_config": {
    "description": "Defines rts_software_config",
    "prefix": "tf-telefonicaopencloud-data-rts_software_config",
    "body": [
      "variable \"config_id\" {}",
      "",
      "variable \"server_id\" {}",
      "",
      "data \"telefonicaopencloud_rts_software_config_v1\" \"myconfig\" {",
      "  id = \"${var.config_id}\"",
      "}",
      ""
    ]
  },
  "telefonicaopencloud-data-rts_stack_resource_v1": {
    "description": "Defines rts_stack_resource_v1",
    "prefix": "tf-telefonicaopencloud-data-rts_stack_resource_v1",
    "body": [
      "variable \"stack_name\" { }",
      "variable \"resource_name\" { }",
      "",
      "data \"telefonicaopencloud_rts_stack_resource_v1\" \"stackresource\" {",
      "  stack_name = \"${var.stack_name}\"",
      "  resource_name = \"${var.resource_name}\"  ",
      "}"
    ]
  },
  "telefonicaopencloud-data-rts_stack_v1": {
    "description": "Defines rts_stack_v1",
    "prefix": "tf-telefonicaopencloud-data-rts_stack_v1",
    "body": [
      "variable \"stack_name\" { }",
      "",
      "data \"telefonicaopencloud_rts_stack_v1\" \"mystack\" {",
      "  name = \"${var.stack_name}\"  ",
      "}"
    ]
  },
  "telefonicaopencloud-data-s3_bucket_object": {
    "description": "Defines s3_bucket_object",
    "prefix": "tf-telefonicaopencloud-data-s3_bucket_object",
    "body": [
      "#XXX empty snippet",
      ""
    ]
  },
  "telefonicaopencloud-data-sfs_file_system_v2": {
    "description": "Defines sfs_file_system_v2",
    "prefix": "tf-telefonicaopencloud-data-sfs_file_system_v2",
    "body": [
      "    variable \"share_name\" { }",
      "",
      "    variable \"share_id\" { }",
      "",
      "    data \"telefonicaopencloud_sfs_file_system_v2\" \"shared_file\"",
      "    {",
      "        name = \"${var.share_name}\"",
      "        id = \"${var.share_id}\"",
      "    }"
    ]
  },
  "telefonicaopencloud-data-vbs_backup_policy_v2": {
    "description": "Defines vbs_backup_policy_v2",
    "prefix": "tf-telefonicaopencloud-data-vbs_backup_policy_v2",
    "body": [
      "",
      " variable \"policy_name\" { }",
      "",
      " variable \"policy_id\" { }",
      "    ",
      "data \"telefonicaopencloud_vbs_backup_policy_v2\" \"policies\" {",
      "  name = \"${var.policy_name}\"",
      "  id = \"${var.policy_id}\"",
      "}"
    ]
  },
  "telefonicaopencloud-data-vbs_backup_v2": {
    "description": "Defines vbs_backup_v2",
    "prefix": "tf-telefonicaopencloud-data-vbs_backup_v2",
    "body": [
      "variable \"backup_id\" {}",
      "",
      "data \"telefonicaopencloud_vbs_backup_v2\" \"mybackup\" {",
      "  id = \"${var.backup_id}\"",
      "}"
    ]
  },
  "telefonicaopencloud-data-vpc_subnet_ids_v1": {
    "description": "Defines vpc_subnet_ids_v1",
    "prefix": "tf-telefonicaopencloud-data-vpc_subnet_ids_v1",
    "body": [
      "data \"telefonicaopencloud_vpc_subnet_ids_v1\" \"subnet_ids\" {",
      "  vpc_id = \"${var.vpc_id}\" ",
      "}",
      "",
      "data \"telefonicaopencloud_vpc_subnet_v1\" \"subnet\" {",
      "  count = \"${length(data.telefonicaopencloud_vpc_subnet_ids_v1.subnet_ids.ids)}\"",
      "  id    = \"${data.telefonicaopencloud_vpc_subnet_ids_v1.subnet_ids.ids[count.index]}\"",
      " }",
      "",
      "output \"subnet_cidr_blocks\" {",
      "  value = \"${data.telefonicaopencloud_vpc_subnet_v1.subnet.*.cidr}\"",
      "}"
    ]
  },
  "telefonicaopencloud-data-vpc_subnet_v1": {
    "description": "Defines vpc_subnet_v1",
    "prefix": "tf-telefonicaopencloud-data-vpc_subnet_v1",
    "body": [
      "data \"telefonicaopencloud_vpc_subnet_v1\" \"subnet_v1\" {",
      "  id   = \"${var.subnet_id}\"",
      " }",
      "",
      "output \"subnet_vpc_id\" {",
      "  value = \"${data.telefonicaopencloud_vpc_subnet_v1.subnet_v1.vpc_id}\"",
      "}"
    ]
  },
  "telefonicaopencloud-data-vpc_v1": {
    "description": "Defines vpc_v1",
    "prefix": "tf-telefonicaopencloud-data-vpc_v1",
    "body": [
      "",
      "variable \"vpc_name\" {}",
      "",
      "data \"telefonicaopencloud_vpc_v1\" \"vpc\" {",
      "  name = \"${var.vpc_name}\"",
      "}",
      ""
    ]
  },
  "telefonicaopencloud-resource-antiddos_v1": {
    "description": "Defines antiddos_v1",
    "prefix": "tf-telefonicaopencloud-resource-antiddos_v1",
    "body": [
      " variable \"eip_id\" {}",
      "  ",
      " resource \"telefonicaopencloud_antiddos_v1\" \"myantiddos\" {",
      "     floating_ip_id = \"${var.eip_id}\"",
      "     enable_l7 = true",
      "     traffic_pos_id = 1",
      "     http_request_pos_id = 3",
      "     cleaning_access_pos_id = 2",
      "     app_type_id = 0",
      " }",
      ""
    ]
  },
  "telefonicaopencloud-resource-as_configuration_v1": {
    "description": "Defines as_configuration_v1",
    "prefix": "tf-telefonicaopencloud-resource-as_configuration_v1",
    "body": [
      "resource \"telefonicaopencloud_as_configuration_v1\" \"my_as_config\" {",
      "  scaling_configuration_name = \"my_as_config\"",
      "  instance_config = {",
      "    flavor = \"${var.flavor}\"",
      "    image = \"${var.image_id}\"",
      "    disk = [",
      "      {size = 40",
      "      volume_type = \"SATA\"",
      "      disk_type = \"SYS\"}",
      "    ]",
      "    key_name = \"${var.keyname}\"",
      "    user_data = \"${file(\"userdata.txt\")}\"",
      "  }",
      "}"
    ]
  },
  "telefonicaopencloud-resource-as_group_v1": {
    "description": "Defines as_group_v1",
    "prefix": "tf-telefonicaopencloud-resource-as_group_v1",
    "body": [
      "resource \"telefonicaopencloud_as_group_v1\" \"my_as_group\" {",
      "  scaling_group_name = \"my_as_group\"",
      "  scaling_configuration_id = \"37e310f5-db9d-446e-9135-c625f9c2bbfc\"",
      "  desire_instance_number = 2",
      "  min_instance_number = 0",
      "  max_instance_number = 10",
      "  networks = [{id = \"ad091b52-742f-469e-8f3c-fd81cadf0743\"}]",
      "  security_groups = [{id = \"45e4c6de-6bf0-4843-8953-2babde3d4810\"}]",
      "  vpc_id = \"1d8f7e7c-fe04-4cf5-85ac-08b478c290e9\"",
      "  delete_publicip = true",
      "  delete_instances = \"yes\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-as_policy_v1": {
    "description": "Defines as_policy_v1",
    "prefix": "tf-telefonicaopencloud-resource-as_policy_v1",
    "body": [
      "resource \"telefonicaopencloud_as_policy_v1\" \"hth_aspolicy\"{",
      "  scaling_policy_name = \"hth_aspolicy\"",
      "  scaling_group_id = \"4579f2f5-cbe8-425a-8f32-53dcb9d9053a\"",
      "  cool_down_time = 900",
      "  scaling_policy_type = \"RECURRENCE\"",
      "  scaling_policy_action = {",
      "    operation = \"ADD\"",
      "    instance_number = 1",
      "  }",
      "  scheduled_policy = {",
      "    launch_time = \"07:00\"",
      "    recurrence_type = \"Daily\"",
      "    start_time = \"2017-11-30T12:00Z\"",
      "    end_time = \"2017-12-30T12:00Z\"",
      "  }",
      "}",
      ""
    ]
  },
  "telefonicaopencloud-resource-blockstorage_volume_v2": {
    "description": "Defines blockstorage_volume_v2",
    "prefix": "tf-telefonicaopencloud-resource-blockstorage_volume_v2",
    "body": [
      "resource \"telefonicaopencloud_blockstorage_volume_v2\" \"volume_1\" {",
      "  region      = \"RegionOne\"",
      "  name        = \"volume_1\"",
      "  description = \"first test volume\"",
      "  size        = 3",
      "}"
    ]
  },
  "telefonicaopencloud-resource-ces_alarm_rule": {
    "description": "Defines ces_alarm_rule",
    "prefix": "tf-telefonicaopencloud-resource-ces_alarm_rule",
    "body": [
      "resource \"telefonicaopencloud_ces_alarmrule\" \"alarm_rule\" {",
      "  \"alarm_name\" = \"alarm_rule\"",
      "  \"metric\" {",
      "    \"namespace\" = \"SYS.ECS\"",
      "    \"metric_name\" = \"network_outgoing_bytes_rate_inband\"",
      "    \"dimensions\" {",
      "        \"name\" = \"instance_id\"",
      "        \"value\" = \"12232415-6cc9-4c80-83ff-55a6613d14c3\"",
      "    }",
      "  }",
      "  \"condition\"  {",
      "    \"period\" = 300",
      "    \"filter\" = \"average\"",
      "    \"comparison_operator\" = \">\"",
      "    \"value\" = 6",
      "    \"unit\" = \"B/s\"",
      "    \"count\" = 1",
      "  }",
      "  \"alarm_actions\" {",
      "    \"type\" = \"notification\"",
      "    \"notification_list\" = [",
      "      \"urn:smn:southchina:68438a86d98e427e907e0097b7e35d47:sd\"",
      "    ]",
      "  }",
      "}"
    ]
  },
  "telefonicaopencloud-resource-compute_bms_server_v2": {
    "description": "Defines compute_bms_server_v2",
    "prefix": "tf-telefonicaopencloud-resource-compute_bms_server_v2",
    "body": [
      "variable \"image_id\" {}",
      "variable \"flavor_id\" {}",
      "variable \"keypair_name\" {}",
      "variable \"network_id\" {}",
      "variable \"availability_zone\" {}",
      "",
      "resource \"telefonicaopencloud_compute_bms_server_v2\" \"basic\" {",
      "  name            = \"basic\"",
      "  image_id        = \"${var.image_id}\"",
      "  flavor_id       = \"${var.flavor_id}\"",
      "  key_pair        = \"${var.keypair_name}\"",
      "  security_groups = [\"default\"]",
      "  availability_zone = \"${var.availability_zone}\"",
      "",
      "  metadata {",
      "    this = \"that\"",
      "  }",
      "",
      "  network {",
      "    uuid = \"${var.network_id}\"",
      "  }",
      "}"
    ]
  },
  "telefonicaopencloud-resource-compute_floatingip_associate_v2": {
    "description": "Defines compute_floatingip_associate_v2",
    "prefix": "tf-telefonicaopencloud-resource-compute_floatingip_associate_v2",
    "body": [
      "resource \"telefonicaopencloud_compute_instance_v2\" \"instance_1\" {",
      "  name            = \"instance_1\"",
      "  image_id        = \"ad091b52-742f-469e-8f3c-fd81cadf0743\"",
      "  flavor_id       = 3",
      "  key_pair        = \"my_key_pair_name\"",
      "  security_groups = [\"default\"]",
      "}",
      "",
      "resource \"telefonicaopencloud_networking_floatingip_v2\" \"fip_1\" {",
      "  pool = \"my_pool\"",
      "}",
      "",
      "resource \"telefonicaopencloud_compute_floatingip_associate_v2\" \"fip_1\" {",
      "  floating_ip = \"${telefonicaopencloud_networking_floatingip_v2.fip_1.address}\"",
      "  instance_id = \"${telefonicaopencloud_compute_instance_v2.instance_1.id}\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-compute_floatingip_v2": {
    "description": "Defines compute_floatingip_v2",
    "prefix": "tf-telefonicaopencloud-resource-compute_floatingip_v2",
    "body": [
      "resource \"telefonicaopencloud_compute_floatingip_v2\" \"floatip_1\" {",
      "  pool = \"public\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-compute_instance_v2": {
    "description": "Defines compute_instance_v2",
    "prefix": "tf-telefonicaopencloud-resource-compute_instance_v2",
    "body": [
      "resource \"telefonicaopencloud_compute_instance_v2\" \"basic\" {",
      "  name            = \"basic\"",
      "  image_id        = \"ad091b52-742f-469e-8f3c-fd81cadf0743\"",
      "  flavor_id       = \"3\"",
      "  key_pair        = \"my_key_pair_name\"",
      "  security_groups = [\"default\"]",
      "",
      "  metadata {",
      "    this = \"that\"",
      "  }",
      "",
      "  network {",
      "    name = \"my_network\"",
      "  }",
      "}"
    ]
  },
  "telefonicaopencloud-resource-compute_keypair_v2": {
    "description": "Defines compute_keypair_v2",
    "prefix": "tf-telefonicaopencloud-resource-compute_keypair_v2",
    "body": [
      "resource \"telefonicaopencloud_compute_keypair_v2\" \"test-keypair\" {",
      "  name       = \"my-keypair\"",
      "  public_key = \"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDAjpC1hwiOCCmKEWxJ4qzTTsJbKzndLotBCz5PcwtUnflmU+gHJtWMZKpuEGVi29h0A/+ydKek1O18k10Ff+4tyFjiHDQAnOfgWf7+b1yK+qDip3X1C0UPMbwHlTfSGWLGZqd9LvEFx9k3h/M+VtMvwR1lJ9LUyTAImnNjWG7TaIPmui30HvM2UiFEmqkr4ijq45MyX2+fLIePLRIF61p4whjHAQYufqyno3BS48icQb4p6iVEZPo4AE2o9oIyQvj2mx4dk5Y8CgSETOZTYDOR3rU2fZTRDRgPJDH9FWvQjF5tA0p3d9CoWWd2s6GKKbfoUIi8R/Db1BSPJwkqB\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-compute_secgroup_v2": {
    "description": "Defines compute_secgroup_v2",
    "prefix": "tf-telefonicaopencloud-resource-compute_secgroup_v2",
    "body": [
      "resource \"telefonicaopencloud_compute_secgroup_v2\" \"secgroup_1\" {",
      "  name        = \"my_secgroup\"",
      "  description = \"my security group\"",
      "",
      "  rule {",
      "    from_port   = 22",
      "    to_port     = 22",
      "    ip_protocol = \"tcp\"",
      "    cidr        = \"0.0.0.0/0\"",
      "  }",
      "",
      "  rule {",
      "    from_port   = 80",
      "    to_port     = 80",
      "    ip_protocol = \"tcp\"",
      "    cidr        = \"0.0.0.0/0\"",
      "  }",
      "}"
    ]
  },
  "telefonicaopencloud-resource-compute_servergroup_v2": {
    "description": "Defines compute_servergroup_v2",
    "prefix": "tf-telefonicaopencloud-resource-compute_servergroup_v2",
    "body": [
      "resource \"telefonicaopencloud_compute_servergroup_v2\" \"test-sg\" {",
      "  name     = \"my-sg\"",
      "  policies = [\"anti-affinity\"]",
      "}"
    ]
  },
  "telefonicaopencloud-resource-compute_volume_attach_v2": {
    "description": "Defines compute_volume_attach_v2",
    "prefix": "tf-telefonicaopencloud-resource-compute_volume_attach_v2",
    "body": [
      "resource \"telefonicaopencloud_blockstorage_volume_v2\" \"volume_1\" {",
      "  name = \"volume_1\"",
      "  size = 1",
      "}",
      "",
      "resource \"telefonicaopencloud_compute_instance_v2\" \"instance_1\" {",
      "  name            = \"instance_1\"",
      "  security_groups = [\"default\"]",
      "}",
      "",
      "resource \"telefonicaopencloud_compute_volume_attach_v2\" \"va_1\" {",
      "  instance_id = \"${telefonicaopencloud_compute_instance_v2.instance_1.id}\"",
      "  volume_id   = \"${telefonicaopencloud_blockstorage_volume_v2.volume_1.id}\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-csbs_backup_policy_v1": {
    "description": "Defines csbs_backup_policy_v1",
    "prefix": "tf-telefonicaopencloud-resource-csbs_backup_policy_v1",
    "body": [
      " variable \"name\" { }",
      " variable \"id\" { }",
      " variable \"resource_name\" { }",
      " ",
      " resource \"telefonicaopencloud_csbs_backup_policy_v1\" \"backup_policy_v1\" {",
      "   name  = \"${var.name}\"",
      "   resource {",
      "     id = \"${var.id}\"",
      "     type = \"OS::Nova::Server\"",
      "     name = \"${var.resource_name}\"",
      "   }",
      "   scheduled_operation {",
      "     enabled = true",
      "     operation_type = \"backup\"",
      "     trigger_pattern = \"BEGIN:VCALENDAR\\r\\nBEGIN:VEVENT\\r\\nRRULE:FREQ=WEEKLY;BYDAY=TH;BYHOUR=12;BYMINUTE=27\\r\\nEND:VEVENT\\r\\nEND:VCALENDAR\\r\\n\"",
      "   }",
      " }",
      ""
    ]
  },
  "telefonicaopencloud-resource-csbs_backup_v1": {
    "description": "Defines csbs_backup_v1",
    "prefix": "tf-telefonicaopencloud-resource-csbs_backup_v1",
    "body": [
      " variable \"backup_name\" { }",
      " variable \"resource_id\" { }",
      " ",
      " resource \"telefonicaopencloud_csbs_backup_v1\" \"backup_v1\" {",
      "   backup_name = \"${var.backup_name}\"",
      "   resource_id = \"${var.resource_id}\"",
      "   resource_type = \"OS::Nova::Server\"",
      " }",
      ""
    ]
  },
  "telefonicaopencloud-resource-cts_tracker_v1": {
    "description": "Defines cts_tracker_v1",
    "prefix": "tf-telefonicaopencloud-resource-cts_tracker_v1",
    "body": [
      " variable \"bucket_name\" { }",
      " ",
      " resource \"telefonicaopencloud_cts_tracker_v1\" \"tracker_v1\" {",
      "   bucket_name      = \"${var.bucket_name}\"",
      "   file_prefix_name      = \"yO8Q\"",
      " }",
      ""
    ]
  },
  "telefonicaopencloud-resource-dcs_instance_v1": {
    "description": "Defines dcs_instance_v1",
    "prefix": "tf-telefonicaopencloud-resource-dcs_instance_v1",
    "body": [
      "       resource \"telefonicaopencloud_networking_secgroup_v2\" \"secgroup_1\" {",
      "         name = \"secgroup_1\"",
      "         description = \"secgroup_1\"",
      "       }",
      "       data \"telefonicaopencloud_dcs_az_v1\" \"az_1\" {",
      "         name = \"AZ1\"",
      "         port = \"8004\"",
      "         code = \"sa-chile-1a\"",
      "\t\t}",
      "       data \"telefonicaopencloud_dcs_product_v1\" \"product_1\" {",
      "          spec_code = \"dcs.master_standby\"",
      "\t\t}",
      "\t\tresource \"telefonicaopencloud_dcs_instance_v1\" \"instance_1\" {",
      "\t\t  name  = \"test_dcs_instance\"",
      "          engine_version = \"3.0.7\"",
      "          password = \"Huawei_test\"",
      "          engine = \"Redis\"",
      "          capacity = 2",
      "          vpc_id = \"1477393a-29c9-4de5-843f-18ef51257c7e\"",
      "          security_group_id = \"${telefonicaopencloud_networking_secgroup_v2.secgroup_1.id}\"",
      "          subnet_id = \"27d99e17-42f2-4751-818f-5c8c6c03ff15\"",
      "          available_zones = [\"${data.telefonicaopencloud_dcs_az_v1.az_1.id}\"]",
      "          product_id = \"${data.telefonicaopencloud_dcs_product_v1.product_1.id}\"",
      "          save_days = 1",
      "          backup_type = \"manual\"",
      "          begin_at = \"00:00-01:00\"",
      "          period_type = \"weekly\"",
      "          backup_at = [1]",
      "          depends_on = [\"data.telefonicaopencloud_dcs_product_v1.product_1\", \"telefonicaopencloud_networking_secgroup_v2.secgroup_1\"]",
      "\t\t}"
    ]
  },
  "telefonicaopencloud-resource-dms_group_v1": {
    "description": "Defines dms_group_v1",
    "prefix": "tf-telefonicaopencloud-resource-dms_group_v1",
    "body": [
      "resource \"telefonicaopencloud_dms_group_v1\" \"queue_1\" {",
      "  name  = \"queue_1\"",
      "  description  = \"test create dms queue\"",
      "  queue_mode  = \"FIFO\"",
      "  redrive_policy  = \"enable\"",
      "  max_consume_count = 80",
      "}",
      "",
      "resource \"telefonicaopencloud_dms_group_v1\" \"group_1\" {",
      "  name = \"group_1\"",
      "  queue_id = \"${telefonicaopencloud_dms_queue_v1.queue_1.id}\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-dms_queue_v1": {
    "description": "Defines dms_queue_v1",
    "prefix": "tf-telefonicaopencloud-resource-dms_queue_v1",
    "body": [
      "resource \"telefonicaopencloud_dms_queue_v1\" \"queue_1\" {",
      "  name  = \"queue_1\"",
      "  description  = \"test create dms queue\"",
      "  queue_mode  = \"FIFO\"",
      "  redrive_policy  = \"enable\"",
      "  max_consume_count = 80",
      "}"
    ]
  },
  "telefonicaopencloud-resource-dns_recordset_v2": {
    "description": "Defines dns_recordset_v2",
    "prefix": "tf-telefonicaopencloud-resource-dns_recordset_v2",
    "body": [
      "resource \"telefonicaopencloud_dns_zone_v2\" \"example_zone\" {",
      "  name = \"example.com.\"",
      "  email = \"email2@example.com\"",
      "  description = \"a zone\"",
      "  ttl = 6000",
      "  type = \"PRIMARY\"",
      "}",
      "",
      "resource \"telefonicaopencloud_dns_recordset_v2\" \"rs_example_com\" {",
      "  zone_id = \"${telefonicaopencloud_dns_zone_v2.example_zone.id}\"",
      "  name = \"rs.example.com.\"",
      "  description = \"An example record set\"",
      "  ttl = 3000",
      "  type = \"A\"",
      "  records = [\"10.0.0.1\"]",
      "}"
    ]
  },
  "telefonicaopencloud-resource-dns_zone_v2": {
    "description": "Defines dns_zone_v2",
    "prefix": "tf-telefonicaopencloud-resource-dns_zone_v2",
    "body": [
      "resource \"telefonicaopencloud_dns_zone_v2\" \"example.com\" {",
      "  name = \"example.com.\"",
      "  email = \"jdoe@example.com\"",
      "  description = \"An example zone\"",
      "  ttl = 3000",
      "  type = \"PRIMARY\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-elb_backendecs": {
    "description": "Defines elb_backendecs",
    "prefix": "tf-telefonicaopencloud-resource-elb_backendecs",
    "body": [
      "resource \"telefonicaopencloud_elb_loadbalancer\" \"elb\" {",
      "  name = \"elb\"",
      "  type = \"External\"",
      "  description = \"test elb\"",
      "  vpc_id = \"e346dc4a-d9a6-46f4-90df-10153626076e\"",
      "  admin_state_up = 1",
      "  bandwidth = 5",
      "}",
      "",
      "resource \"telefonicaopencloud_elb_listener\" \"listener\" {",
      "  name = \"test-elb-listener\"",
      "  description = \"great listener\"",
      "  protocol = \"TCP\"",
      "  backend_protocol = \"TCP\"",
      "  port = 12345",
      "  backend_port = 8080",
      "  lb_algorithm = \"roundrobin\"",
      "  loadbalancer_id = \"${telefonicaopencloud_elb_loadbalancer.elb.id}\"",
      "  timeouts {",
      "\tcreate = \"5m\"",
      "\tupdate = \"5m\"",
      "\tdelete = \"5m\"",
      "  }",
      "}",
      "",
      "resource \"telefonicaopencloud_elb_backendecs\" \"backend\" {",
      "  private_address = \"192.168.0.211\"",
      "  listener_id = \"${telefonicaopencloud_elb_listener.listener.id}\"",
      "  server_id = \"8f7a32f1-f66c-4d13-9b17-3a13f9f0bb8d\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-elb_healthcheck": {
    "description": "Defines elb_healthcheck",
    "prefix": "tf-telefonicaopencloud-resource-elb_healthcheck",
    "body": [
      "resource \"telefonicaopencloud_elb_loadbalancer\" \"elb\" {",
      "  name = \"elb\"",
      "  type = \"External\"",
      "  description = \"test elb\"",
      "  vpc_id = \"e346dc4a-d9a6-46f4-90df-10153626076e\"",
      "  admin_state_up = 1",
      "  bandwidth = 5",
      "}",
      "",
      "resource \"telefonicaopencloud_elb_listener\" \"listener\" {",
      "  name = \"test-elb-listener\"",
      "  description = \"great listener\"",
      "  protocol = \"TCP\"",
      "  backend_protocol = \"TCP\"",
      "  port = 12345",
      "  backend_port = 8080",
      "  lb_algorithm = \"roundrobin\"",
      "  loadbalancer_id = \"${telefonicaopencloud_elb_loadbalancer.elb.id}\"",
      "  timeouts {",
      "\tcreate = \"5m\"",
      "\tupdate = \"5m\"",
      "\tdelete = \"5m\"",
      "  }",
      "}",
      "",
      "resource \"telefonicaopencloud_elb_healthcheck\" \"healthcheck\" {",
      "  listener_id = \"${telefonicaopencloud_elb_listener.listener.id}\"",
      "  healthcheck_protocol = \"TCP\"",
      "  healthcheck_connect_porta = 22",
      "  healthy_threshold = 5",
      "  healthcheck_timeout = 25",
      "  healthcheck_interval = 3",
      "  timeouts {",
      "    create = \"5m\"",
      "    update = \"5m\"",
      "    delete = \"5m\"",
      "  }",
      "}"
    ]
  },
  "telefonicaopencloud-resource-elb_listener": {
    "description": "Defines elb_listener",
    "prefix": "tf-telefonicaopencloud-resource-elb_listener",
    "body": [
      "resource \"telefonicaopencloud_elb_loadbalancer\" \"elb\" {",
      "  name = \"elb\"",
      "  type = \"External\"",
      "  description = \"test elb\"",
      "  vpc_id = \"e346dc4a-d9a6-46f4-90df-10153626076e\"",
      "  admin_state_up = 1",
      "  bandwidth = 5",
      "}",
      "",
      "resource \"telefonicaopencloud_elb_listener\" \"listener\" {",
      "  name = \"test-elb-listener\"",
      "  description = \"great listener\"",
      "  protocol = \"TCP\"",
      "  backend_protocol = \"TCP\"",
      "  port = 12345",
      "  backend_port = 8080",
      "  lb_algorithm = \"roundrobin\"",
      "  loadbalancer_id = \"${telefonicaopencloud_elb_loadbalancer.elb.id}\"",
      "  timeouts {",
      "\tcreate = \"5m\"",
      "\tupdate = \"5m\"",
      "\tdelete = \"5m\"",
      "  }",
      "}"
    ]
  },
  "telefonicaopencloud-resource-elb_loadbalancer": {
    "description": "Defines elb_loadbalancer",
    "prefix": "tf-telefonicaopencloud-resource-elb_loadbalancer",
    "body": [
      "resource \"telefonicaopencloud_elb_loadbalancer\" \"elb\" {",
      "  name = \"elb\"",
      "  type = \"External\"",
      "  description = \"test elb\"",
      "  vpc_id = \"e346dc4a-d9a6-46f4-90df-10153626076e\"",
      "  admin_state_up = 1",
      "  bandwidth = 5",
      "}"
    ]
  },
  "telefonicaopencloud-resource-fw_firewall_group_v2": {
    "description": "Defines fw_firewall_group_v2",
    "prefix": "tf-telefonicaopencloud-resource-fw_firewall_group_v2",
    "body": [
      "resource \"telefonicaopencloud_fw_rule_v2\" \"rule_1\" {",
      "  name             = \"my-rule-1\"",
      "  description      = \"drop TELNET traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"tcp\"",
      "  destination_port = \"23\"",
      "  enabled          = \"true\"",
      "}",
      "",
      "resource \"telefonicaopencloud_fw_rule_v2\" \"rule_2\" {",
      "  name             = \"my-rule-2\"",
      "  description      = \"drop NTP traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"udp\"",
      "  destination_port = \"123\"",
      "  enabled          = \"false\"",
      "}",
      "",
      "resource \"telefonicaopencloud_fw_policy_v2\" \"policy_1\" {",
      "  name = \"my-policy\"",
      "",
      "  rules = [\"${telefonicaopencloud_fw_rule_v2.rule_1.id}\",",
      "    \"${telefonicaopencloud_fw_rule_v2.rule_2.id}\",",
      "  ]",
      "}",
      "",
      "resource \"telefonicaopencloud_fw_firewall_group_v2\" \"firewall_group_1\" {",
      "  name      = \"my-firewall-group\"",
      "  ingress_policy_id = \"${telefonicaopencloud_fw_policy_v2.policy_1.id}\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-fw_policy_v2": {
    "description": "Defines fw_policy_v2",
    "prefix": "tf-telefonicaopencloud-resource-fw_policy_v2",
    "body": [
      "resource \"telefonicaopencloud_fw_rule_v2\" \"rule_1\" {",
      "  name             = \"my-rule-1\"",
      "  description      = \"drop TELNET traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"tcp\"",
      "  destination_port = \"23\"",
      "  enabled          = \"true\"",
      "}",
      "",
      "resource \"telefonicaopencloud_fw_rule_v2\" \"rule_2\" {",
      "  name             = \"my-rule-2\"",
      "  description      = \"drop NTP traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"udp\"",
      "  destination_port = \"123\"",
      "  enabled          = \"false\"",
      "}",
      "",
      "resource \"telefonicaopencloud_fw_policy_v2\" \"policy_1\" {",
      "  name = \"my-policy\"",
      "",
      "  rules = [\"${telefonicaopencloud_fw_rule_v2.rule_1.id}\",",
      "    \"${telefonicaopencloud_fw_rule_v2.rule_2.id}\",",
      "  ]",
      "}"
    ]
  },
  "telefonicaopencloud-resource-fw_rule_v2": {
    "description": "Defines fw_rule_v2",
    "prefix": "tf-telefonicaopencloud-resource-fw_rule_v2",
    "body": [
      "resource \"telefonicaopencloud_fw_rule_v2\" \"rule_1\" {",
      "  name             = \"my_rule\"",
      "  description      = \"drop TELNET traffic\"",
      "  action           = \"deny\"",
      "  protocol         = \"tcp\"",
      "  destination_port = \"23\"",
      "  enabled          = \"true\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-maas_task_v1": {
    "description": "Defines maas_task_v1",
    "prefix": "tf-telefonicaopencloud-resource-maas_task_v1",
    "body": [
      "resource \"telefonicaopencloud_maas_task_v1\" \"task_1\" {",
      "  description = \"migration task\"",
      "  enable_kms = true",
      "  thread_num = 1",
      "  src_node {",
      "    region = \"ap-northeast-1\"",
      "    ak = \"AK\",",
      "\tsk = \"SK\",",
      "    object_key = \"123.txt\",",
      "    bucket = \"tommy-bucket\",",
      "  }",
      "  dst_node {",
      "    region = \"eu-de\",",
      "    ak = \"AK\",",
      "    sk = \"SK\",",
      "    object_key = \"maas/\",",
      "    bucket = \"test-maas\",",
      "  }",
      "}"
    ]
  },
  "telefonicaopencloud-resource-mrs_cluster_v1": {
    "description": "Defines mrs_cluster_v1",
    "prefix": "tf-telefonicaopencloud-resource-mrs_cluster_v1",
    "body": [
      "resource \"telefonicaopencloud_mrs_cluster_v1\" \"cluster1\" {",
      "  cluster_name = \"mrs-cluster-chenying\"",
      "  region = \"sa-chile-1\"",
      "  billing_type = 12",
      "  master_node_num = 2",
      "  core_node_num = 3",
      "  master_node_size = \"c2.4xlarge.linux.bigdata\"",
      "  core_node_size = \"s1.xlarge.linux.bigdata\"",
      "  available_zone_id = \"sa-chile-1a\"",
      "  vpc_id = \"51edfb75-f9f0-4bbc-b4dc-21466b93f60d\"",
      "  subnet_id = \"1d7a8646-43ee-455a-a3ab-40da87a1304c\"",
      "  cluster_version = \"MRS 1.5.0\"",
      "  volume_type = \"SATA\"",
      "  volume_size = 100",
      "  safe_mode = 0",
      "  cluster_type = 0",
      "  node_public_cert_name = \"KeyPair-ci\"",
      "  cluster_admin_secret = \"\"",
      "  component_list {",
      "      component_name = \"Hadoop\"",
      "  }",
      "  component_list {",
      "      component_name = \"Spark\"",
      "  }",
      "  component_list {",
      "      component_name = \"Hive\"",
      "  }",
      "}"
    ]
  },
  "telefonicaopencloud-resource-mrs_job_v1": {
    "description": "Defines mrs_job_v1",
    "prefix": "tf-telefonicaopencloud-resource-mrs_job_v1",
    "body": [
      "",
      "resource \"telefonicaopencloud_mrs_job_v1\" \"job1\" {",
      "  job_type = 1",
      "  job_name = \"test_mapreduce_job1\"",
      "  cluster_id = \"ef43d2ff-1ecf-4f13-bd0c-0004c429a058\"",
      "  jar_path = \"s3a://wordcount/program/hadoop-mapreduce-examples-2.7.5.jar\"",
      "  input = \"s3a://wordcount/input/\"",
      "  output = \"s3a://wordcount/output/\"",
      "  job_log = \"s3a://wordcount/log/\"",
      "  arguments = \"wordcount\"",
      "}",
      ""
    ]
  },
  "telefonicaopencloud-resource-networking_floatingip_v2": {
    "description": "Defines networking_floatingip_v2",
    "prefix": "tf-telefonicaopencloud-resource-networking_floatingip_v2",
    "body": [
      "resource \"telefonicaopencloud_networking_floatingip_v2\" \"floatip_1\" {",
      "  pool = \"public\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-networking_network_v2": {
    "description": "Defines networking_network_v2",
    "prefix": "tf-telefonicaopencloud-resource-networking_network_v2",
    "body": [
      "resource \"telefonicaopencloud_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"telefonicaopencloud_networking_subnet_v2\" \"subnet_1\" {",
      "  name       = \"subnet_1\"",
      "  network_id = \"${telefonicaopencloud_networking_network_v2.network_1.id}\"",
      "  cidr       = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "}",
      "",
      "resource \"telefonicaopencloud_compute_secgroup_v2\" \"secgroup_1\" {",
      "  name        = \"secgroup_1\"",
      "  description = \"a security group\"",
      "",
      "  rule {",
      "    from_port   = 22",
      "    to_port     = 22",
      "    ip_protocol = \"tcp\"",
      "    cidr        = \"0.0.0.0/0\"",
      "  }",
      "}",
      "",
      "resource \"telefonicaopencloud_networking_port_v2\" \"port_1\" {",
      "  name               = \"port_1\"",
      "  network_id         = \"${telefonicaopencloud_networking_network_v2.network_1.id}\"",
      "  admin_state_up     = \"true\"",
      "  security_group_ids = [\"${telefonicaopencloud_compute_secgroup_v2.secgroup_1.id}\"]",
      "",
      "  fixed_ip {",
      "    \"subnet_id\"  = \"${telefonicaopencloud_networking_subnet_v2.subnet_1.id}\"",
      "    \"ip_address\" = \"192.168.199.10\"",
      "  }",
      "}",
      "",
      "resource \"telefonicaopencloud_compute_instance_v2\" \"instance_1\" {",
      "  name            = \"instance_1\"",
      "  security_groups = [\"${telefonicaopencloud_compute_secgroup_v2.secgroup_1.name}\"]",
      "",
      "  network {",
      "    port = \"${telefonicaopencloud_networking_port_v2.port_1.id}\"",
      "  }",
      "}"
    ]
  },
  "telefonicaopencloud-resource-networking_port_v2": {
    "description": "Defines networking_port_v2",
    "prefix": "tf-telefonicaopencloud-resource-networking_port_v2",
    "body": [
      "resource \"telefonicaopencloud_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"telefonicaopencloud_networking_port_v2\" \"port_1\" {",
      "  name           = \"port_1\"",
      "  network_id     = \"${telefonicaopencloud_networking_network_v2.network_1.id}\"",
      "  admin_state_up = \"true\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-networking_router_interface_v2": {
    "description": "Defines networking_router_interface_v2",
    "prefix": "tf-telefonicaopencloud-resource-networking_router_interface_v2",
    "body": [
      "resource \"telefonicaopencloud_networking_network_v2\" \"network_1\" {",
      "  name           = \"tf_test_network\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"telefonicaopencloud_networking_subnet_v2\" \"subnet_1\" {",
      "  network_id = \"${telefonicaopencloud_networking_network_v2.network_1.id}\"",
      "  cidr       = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "}",
      "",
      "resource \"telefonicaopencloud_networking_router_v2\" \"router_1\" {",
      "  name             = \"my_router\"",
      "  external_gateway = \"f67f0d72-0ddf-11e4-9d95-e1f29f417e2f\"",
      "}",
      "",
      "resource \"telefonicaopencloud_networking_router_interface_v2\" \"router_interface_1\" {",
      "  router_id = \"${telefonicaopencloud_networking_router_v2.router_1.id}\"",
      "  subnet_id = \"${telefonicaopencloud_networking_subnet_v2.subnet_1.id}\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-networking_router_route_v2": {
    "description": "Defines networking_router_route_v2",
    "prefix": "tf-telefonicaopencloud-resource-networking_router_route_v2",
    "body": [
      "resource \"telefonicaopencloud_networking_router_v2\" \"router_1\" {",
      "  name           = \"router_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"telefonicaopencloud_networking_network_v2\" \"network_1\" {",
      "  name           = \"network_1\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"telefonicaopencloud_networking_subnet_v2\" \"subnet_1\" {",
      "  network_id = \"${telefonicaopencloud_networking_network_v2.network_1.id}\"",
      "  cidr       = \"192.168.199.0/24\"",
      "  ip_version = 4",
      "}",
      "",
      "resource \"telefonicaopencloud_networking_router_interface_v2\" \"int_1\" {",
      "  router_id = \"${telefonicaopencloud_networking_router_v2.router_1.id}\"",
      "  subnet_id = \"${telefonicaopencloud_networking_subnet_v2.subnet_1.id}\"",
      "}",
      "",
      "resource \"telefonicaopencloud_networking_router_route_v2\" \"router_route_1\" {",
      "  depends_on       = [\"telefonicaopencloud_networking_router_interface_v2.int_1\"]",
      "  router_id        = \"${telefonicaopencloud_networking_router_v2.router_1.id}\"",
      "  destination_cidr = \"10.0.1.0/24\"",
      "  next_hop         = \"192.168.199.254\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-networking_router_v2": {
    "description": "Defines networking_router_v2",
    "prefix": "tf-telefonicaopencloud-resource-networking_router_v2",
    "body": [
      "resource \"telefonicaopencloud_networking_router_v2\" \"router_1\" {",
      "  name                = \"my_router\"",
      "  admin_state_up      = true",
      "  external_network_id = \"f67f0d72-0ddf-11e4-9d95-e1f29f417e2f\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-networking_secgroup_rule_v2": {
    "description": "Defines networking_secgroup_rule_v2",
    "prefix": "tf-telefonicaopencloud-resource-networking_secgroup_rule_v2",
    "body": [
      "resource \"telefonicaopencloud_networking_secgroup_v2\" \"secgroup_1\" {",
      "  name        = \"secgroup_1\"",
      "  description = \"My neutron security group\"",
      "}",
      "",
      "resource \"telefonicaopencloud_networking_secgroup_rule_v2\" \"secgroup_rule_1\" {",
      "  direction         = \"ingress\"",
      "  ethertype         = \"IPv4\"",
      "  protocol          = \"tcp\"",
      "  port_range_min    = 22",
      "  port_range_max    = 22",
      "  remote_ip_prefix  = \"0.0.0.0/0\"",
      "  security_group_id = \"${telefonicaopencloud_networking_secgroup_v2.secgroup_1.id}\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-networking_secgroup_v2": {
    "description": "Defines networking_secgroup_v2",
    "prefix": "tf-telefonicaopencloud-resource-networking_secgroup_v2",
    "body": [
      "resource \"telefonicaopencloud_networking_secgroup_v2\" \"secgroup_1\" {",
      "  name        = \"secgroup_1\"",
      "  description = \"My neutron security group\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-networking_subnet_v2": {
    "description": "Defines networking_subnet_v2",
    "prefix": "tf-telefonicaopencloud-resource-networking_subnet_v2",
    "body": [
      "resource \"telefonicaopencloud_networking_network_v2\" \"network_1\" {",
      "  name           = \"tf_test_network\"",
      "  admin_state_up = \"true\"",
      "}",
      "",
      "resource \"telefonicaopencloud_networking_subnet_v2\" \"subnet_1\" {",
      "  network_id = \"${telefonicaopencloud_networking_network_v2.network_1.id}\"",
      "  cidr       = \"192.168.199.0/24\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-rds_instance_v1": {
    "description": "Defines rds_instance_v1",
    "prefix": "tf-telefonicaopencloud-resource-rds_instance_v1",
    "body": [
      "data \"telefonicaopencloud_rds_flavors_v1\" \"flavor\" {",
      "    region = \"eu-de\"",
      "    datastore_name = \"PostgreSQL\"",
      "    datastore_version = \"9.5.5\"",
      "    speccode = \"rds.pg.s1.large\"",
      "}",
      "",
      "resource \"telefonicaopencloud_compute_secgroup_v2\" \"secgrp_rds\" {",
      "  name        = \"secgrp-rds-instance\"",
      "  description = \"Rds Security Group\"",
      "}",
      "",
      "resource \"telefonicaopencloud_rds_instance_v1\" \"instance\" {",
      "  name = \"rds-instance\"",
      "  datastore {",
      "    type = \"PostgreSQL\"",
      "    version = \"9.5.5\"",
      "  }",
      "  flavorref = \"${data.telefonicaopencloud_rds_flavors_v1.flavor.id}\"",
      "  volume {",
      "    type = \"COMMON\"",
      "    size = 200",
      "  }",
      "  region = \"eu-de\"",
      "  availabilityzone = \"eu-de-01\"",
      "  vpc = \"c1095fe7-03df-4205-ad2d-6f4c181d436e\"",
      "  nics {",
      "    subnetid = \"b65f8d25-c533-47e2-8601-cfaa265a3e3e\"",
      "  }",
      "  securitygroup {",
      "    id = \"${telefonicaopencloud_compute_secgroup_v2.secgrp_rds.id}\"",
      "  }",
      "  dbport = \"8635\"",
      "  backupstrategy = {",
      "    starttime = \"04:00:00\"",
      "    keepdays = 4",
      "  }",
      "  dbrtpd = \"Huangwei!120521\"",
      "  ha = {",
      "    enable = true",
      "    replicationmode = \"async\"",
      "  }",
      "  depends_on = [\"telefonicaopencloud_compute_secgroup_v2.secgrp_rds\"]",
      "}"
    ]
  },
  "telefonicaopencloud-resource-rts_software_config_v1": {
    "description": "Defines rts_software_config_v1",
    "prefix": "tf-telefonicaopencloud-resource-rts_software_config_v1",
    "body": [
      "variable \"config_name\" {}",
      " ",
      "resource \"telefonicaopencloud_rts_software_config_v1\" \"myconfig\" {",
      "  name = \"${var.config_name}\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-rts_stack_v1": {
    "description": "Defines rts_stack_v1",
    "prefix": "tf-telefonicaopencloud-resource-rts_stack_v1",
    "body": [
      " variable \"name\" { }",
      " variable \"network_id\" { }",
      " variable \"instance_type\" { }",
      " variable \"image_id\" { }",
      " ",
      "resource \"telefonicaopencloud_rts_stack_v1\" \"mystack\" {",
      "  name = \"${var.name}\"",
      "  disable_rollback = true",
      "  timeout_mins=60",
      "  parameters = {",
      "      \"network_id\" = \"${var.network_id}\"",
      "      \"instance_type\" = \"${var.instance_type}\"",
      "      \"image_id\" = \"${var.image_id}\"",
      "    }",
      "  template_body = <<STACK",
      "  {",
      "    \"heat_template_version\": \"2016-04-08\",",
      "    \"description\": \"Simple template to deploy\",",
      "    \"parameters\": {",
      "        \"image_id\": {",
      "            \"type\": \"string\",",
      "            \"description\": \"Image to be used for compute instance\",",
      "            \"label\": \"Image ID\"",
      "        },",
      "        \"network_id\": {",
      "            \"type\": \"string\",",
      "            \"description\": \"The Network to be used\",",
      "            \"label\": \"Network UUID\"",
      "        },",
      "        \"instance_type\": {",
      "            \"type\": \"string\",",
      "            \"description\": \"Type of instance (Flavor) to be used\",",
      "            \"label\": \"Instance Type\"",
      "        }",
      "    },",
      "    \"resources\": {",
      "        \"my_instance\": {",
      "            \"type\": \"OS::Nova::Server\",",
      "            \"properties\": {",
      "                \"image\": {",
      "                    \"get_param\": \"image_id\"",
      "                },",
      "                \"flavor\": {",
      "                    \"get_param\": \"instance_type\"",
      "                },",
      "                \"networks\": [{",
      "                    \"network\": {",
      "                        \"get_param\": \"network_id\"",
      "                    }",
      "                }]",
      "            }",
      "        }",
      "    },",
      "    \"outputs\":  {",
      "      \"InstanceIP\":{",
      "        \"description\": \"Instance IP\",",
      "        \"value\": {  \"get_attr\": [\"my_instance\", \"first_address\"]  }",
      "      }",
      "    }",
      "}",
      "STACK",
      " }"
    ]
  },
  "telefonicaopencloud-resource-s3_bucket": {
    "description": "Defines s3_bucket",
    "prefix": "tf-telefonicaopencloud-resource-s3_bucket",
    "body": [
      "resource \"telefonicaopencloud_s3_bucket\" \"b\" {",
      "  bucket = \"my-tf-test-bucket\"",
      "  acl    = \"private\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-s3_bucket_object": {
    "description": "Defines s3_bucket_object",
    "prefix": "tf-telefonicaopencloud-resource-s3_bucket_object",
    "body": [
      "resource \"telefonicaopencloud_s3_bucket_object\" \"object\" {",
      "  bucket = \"your_bucket_name\"",
      "  key    = \"new_object_key\"",
      "  source = \"path/to/file\"",
      "  etag   = \"${md5(file(\"path/to/file\"))}\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-s3_bucket_policy": {
    "description": "Defines s3_bucket_policy",
    "prefix": "tf-telefonicaopencloud-resource-s3_bucket_policy",
    "body": [
      "resource \"telefonicaopencloud_s3_bucket\" \"b\" {",
      "  bucket = \"my_tf_test_bucket\"",
      "}",
      "",
      "resource \"telefonicaopencloud_s3_bucket_policy\" \"b\" {",
      "  bucket = \"${telefonicaopencloud_s3_bucket.b.id}\"",
      "  policy =<<POLICY",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Id\": \"MYBUCKETPOLICY\",",
      "  \"Statement\": [",
      "    {",
      "      \"Sid\": \"IPAllow\",",
      "      \"Effect\": \"Deny\",",
      "      \"Principal\": \"*\",",
      "      \"Action\": \"s3:*\",",
      "      \"Resource\": \"arn:aws:s3:::my_tf_test_bucket/*\",",
      "      \"Condition\": {",
      "         \"IpAddress\": {\"aws:SourceIp\": \"8.8.8.8/32\"}",
      "      } ",
      "    } ",
      "  ]",
      "}",
      "POLICY",
      "}"
    ]
  },
  "telefonicaopencloud-resource-sfs_file_system_v2": {
    "description": "Defines sfs_file_system_v2",
    "prefix": "tf-telefonicaopencloud-resource-sfs_file_system_v2",
    "body": [
      "    variable \"share_name\" { }",
      "",
      "    variable \"share_description\" { }",
      "",
      "    variable \"vpc_id\" { }",
      "",
      "    resource \"telefonicaopencloud_sfs_file_system_v2\" \"share-file\"",
      "    {",
      "            size = 50",
      "            name = \"${var.share_name}\"",
      "            access_to = \"${var.vpc_id}\"",
      "            access_level = \"rw\"",
      "            description = \"${var.share_description}\"",
      "            metadata = {",
      "                \"type\"=\"nfs\"",
      "            }",
      "",
      "    }"
    ]
  },
  "telefonicaopencloud-resource-smn_subscription_v2": {
    "description": "Defines smn_subscription_v2",
    "prefix": "tf-telefonicaopencloud-resource-smn_subscription_v2",
    "body": [
      "resource \"telefonicaopencloud_smn_topic_v2\" \"topic_1\" {",
      "  name\t\t  = \"topic_1\"",
      "  display_name    = \"The display name of topic_1\"",
      "}",
      "",
      "resource \"telefonicaopencloud_smn_subscription_v2\" \"subscription_1\" {",
      "  topic_urn       = \"${telefonicaopencloud_smn_topic_v2.topic_1.id}\"",
      "  endpoint        = \"mailtest@gmail.com\"",
      "  protocol        = \"email\"",
      "  remark          = \"O&M\"",
      "}",
      "",
      "resource \"telefonicaopencloud_smn_subscription_v2\" \"subscription_2\" {",
      "  topic_urn       = \"${telefonicaopencloud_smn_topic_v2.topic_1.id}\"",
      "  endpoint        = \"13600000000\"",
      "  protocol        = \"sms\"",
      "  remark          = \"O&M\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-smn_topic_v2": {
    "description": "Defines smn_topic_v2",
    "prefix": "tf-telefonicaopencloud-resource-smn_topic_v2",
    "body": [
      "resource \"telefonicaopencloud_smn_topic_v2\" \"topic_1\" {",
      "  name            = \"topic_1\"",
      "  display_name    = \"The display name of topic_1\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-vbs_backup_policy_v2": {
    "description": "Defines vbs_backup_policy_v2",
    "prefix": "tf-telefonicaopencloud-resource-vbs_backup_policy_v2",
    "body": [
      "resource \"telefonicaopencloud_vbs_backup_policy_v2\" \"vbs\" {",
      "  name = \"policy_002\"",
      "  start_time  = \"12:00\"",
      "  status  = \"ON\"",
      "  retain_first_backup = \"N\"",
      "  rentention_num = 2",
      "  frequency = 1",
      "}"
    ]
  },
  "telefonicaopencloud-resource-vbs_backup_v2": {
    "description": "Defines vbs_backup_v2",
    "prefix": "tf-telefonicaopencloud-resource-vbs_backup_v2",
    "body": [
      "variable \"backup_name\" {}",
      "",
      "variable \"volume_id\" {}",
      " ",
      "resource \"telefonicaopencloud_vbs_backup_v2\" \"mybackup\" {",
      "  volume_id = \"${var.volume_id}\"",
      "  name = \"${var.backup_name}\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-vpc_eip_v1": {
    "description": "Defines vpc_eip_v1",
    "prefix": "tf-telefonicaopencloud-resource-vpc_eip_v1",
    "body": [
      "resource \"telefonicaopencloud_vpc_eip_v1\" \"eip_1\" {",
      "  publicip {",
      "    type = \"5_bgp\"",
      "  }",
      "  bandwidth {",
      "    name = \"test\"",
      "    size = 8",
      "    share_type = \"PER\"",
      "    charge_mode = \"traffic\"",
      "  }",
      "}"
    ]
  },
  "telefonicaopencloud-resource-vpc_peering_accepter_v2": {
    "description": "Defines vpc_peering_accepter_v2",
    "prefix": "tf-telefonicaopencloud-resource-vpc_peering_accepter_v2",
    "body": [
      " provider \"telefonicaopencloud\"  {",
      "    alias = \"main\"",
      "    user_name   = \"${var.username}\"",
      "    domain_name = \"${var.domain_name}\"",
      "    password    = \"${var.password}\"",
      "    auth_url    = \"${var.auth_url}\"",
      "    region      = \"${var.region}\"",
      "    tenant_id   = \"${var.tenant_id}\"",
      "}",
      "",
      "provider \"telefonicaopencloud\"  {",
      "    alias = \"peer\"",
      "    user_name = \"${var.peer_username}\"",
      "    domain_name = \"${var.peer_domain_name}\"",
      "    password    = \"${var.peer_password}\"",
      "    auth_url    = \"${var.peer_auth_url}\"",
      "    region      = \"${var.peer_region}\"",
      "    tenant_id   = \"${var.peer_tenant_id}\"",
      "}",
      "",
      "resource \"telefonicaopencloud_vpc_v1\" \"vpc_main\" {",
      "    provider = \"telefonicaopencloud.main\"",
      "    name = \"${var.vpc_name}\"",
      "    cidr = \"${var.vpc_cidr}\"",
      "}",
      "",
      "resource \"telefonicaopencloud_vpc_v1\" \"vpc_peer\" {",
      "    provider = \"telefonicaopencloud.peer\"",
      "    name = \"${var.peer_vpc_name}\"",
      "    cidr = \"${var.peer_vpc_cidr}\"",
      "}",
      "",
      "# Requester's side of the connection.",
      "resource \"telefonicaopencloud_vpc_peering_connection_v2\" \"peering\" {",
      "    provider = \"telefonicaopencloud.main\"",
      "    name = \"${var.peer_name}\"",
      "    vpc_id = \"${telefonicaopencloud_vpc_v1.vpc_main.id}\"",
      "    peer_vpc_id = \"${telefonicaopencloud_vpc_v1.vpc_peer.id}\"",
      "    peer_tenant_id =  \"${var.tenant_id}\"",
      "}",
      "",
      "# Accepter's side of the connection.",
      "resource \"telefonicaopencloud_vpc_peering_connection_accepter_v2\" \"peer\" {",
      "    provider = \"telefonicaopencloud.peer\"",
      "    vpc_peering_connection_id = \"${telefonicaopencloud_vpc_peering_connection_v2.peering.id}\"",
      "    accept = true",
      "  ",
      "}"
    ]
  },
  "telefonicaopencloud-resource-vpc_peering_v2": {
    "description": "Defines vpc_peering_v2",
    "prefix": "tf-telefonicaopencloud-resource-vpc_peering_v2",
    "body": [
      "resource \"telefonicaopencloud_vpc_peering_connection_v2\" \"peering\" {",
      "  name = \"${var.peer_conn_name}\"",
      "  vpc_id = \"${var.vpc_id}\"",
      "  peer_vpc_id = \"${var.accepter_vpc_id}\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-vpc_subnet_v1": {
    "description": "Defines vpc_subnet_v1",
    "prefix": "tf-telefonicaopencloud-resource-vpc_subnet_v1",
    "body": [
      "resource \"telefonicaopencloud_vpc_v1\" \"vpc_v1\" {",
      "  name = \"${var.vpc_name}\"",
      "  cidr = \"${var.vpc_cidr}\"",
      "}",
      "",
      "",
      "resource \"telefonicaopencloud_vpc_subnet_v1\" \"subnet_v1\" {",
      "  name = \"${var.subnet_name}\"",
      "  cidr = \"${var.subnet_cidr}\"",
      "  gateway_ip = \"${var.subnet_gateway_ip}\"",
      "  vpc_id = \"${telefonicaopencloud_vpc_v1.vpc_v1.id}\"",
      "}"
    ]
  },
  "telefonicaopencloud-resource-vpc_v1": {
    "description": "Defines vpc_v1",
    "prefix": "tf-telefonicaopencloud-resource-vpc_v1",
    "body": [
      "",
      "variable \"vpc_name\" {",
      "  default = \"telefonicaopencloud_vpc\"",
      "}",
      "",
      "variable \"vpc_cidr\" {",
      "  default = \"192.168.0.0/16\"",
      "}",
      "",
      "resource \"telefonicaopencloud_vpc_v1\" \"vpc_v1\" {",
      "  name = \"${var.vpc_name}\"",
      "  cidr = \"${var.vpc_cidr}\"",
      "}",
      ""
    ]
  },
  "template-data-cloudinit_config": {
    "description": "Defines cloudinit_config",
    "prefix": "tf-template-data-cloudinit_config",
    "body": [
      "# Render a part using a `template_file`",
      "data \"template_file\" \"script\" {",
      "  template = \"${file(\"${path.module}/init.tpl\")}\"",
      "",
      "  vars = {",
      "    consul_address = \"${aws_instance.consul.private_ip}\"",
      "  }",
      "}",
      "",
      "# Render a multi-part cloud-init config making use of the part",
      "# above, and other source files",
      "data \"template_cloudinit_config\" \"config\" {",
      "  gzip          = true",
      "  base64_encode = true",
      "",
      "  # Main cloud-config configuration file.",
      "  part {",
      "    filename     = \"init.cfg\"",
      "    content_type = \"text/cloud-config\"",
      "    content      = \"${data.template_file.script.rendered}\"",
      "  }",
      "",
      "  part {",
      "    content_type = \"text/x-shellscript\"",
      "    content      = \"baz\"",
      "  }",
      "",
      "  part {",
      "    content_type = \"text/x-shellscript\"",
      "    content      = \"ffbaz\"",
      "  }",
      "}",
      "",
      "# Start an AWS instance with the cloud-init config as user data",
      "resource \"aws_instance\" \"web\" {",
      "  ami              = \"ami-d05e75b8\"",
      "  instance_type    = \"t2.micro\"",
      "  user_data_base64 = \"${data.template_cloudinit_config.config.rendered}\"",
      "}"
    ]
  },
  "template-data-file": {
    "description": "Defines file",
    "prefix": "tf-template-data-file",
    "body": [
      "data \"template_file\" \"init\" {",
      "  template = \"${file(\"${path.module}/init.tpl\")}\"",
      "  vars = {",
      "    consul_address = \"${aws_instance.consul.private_ip}\"",
      "  }",
      "}"
    ]
  },
  "template-resource-dir": {
    "description": "Defines dir",
    "prefix": "tf-template-resource-dir",
    "body": [
      "resource \"template_dir\" \"config\" {",
      "  source_dir      = \"${path.module}/instance_config_templates\"",
      "  destination_dir = \"${path.cwd}/instance_config\"",
      "  ",
      "  vars = {",
      "    consul_addr = \"${var.consul_addr}\"",
      "  }",
      "}",
      "",
      "resource \"aws_instance\" \"server\" {",
      "  ami           = \"${var.server_ami}\"",
      "  instance_type = \"t2.micro\"",
      "",
      "  connection {",
      "    # ...connection configuration...",
      "  }",
      "",
      "  provisioner \"file\" {",
      "    # Referencing the template_dir resource ensures that it will be",
      "    # created or updated before this aws_instance resource is provisioned.",
      "    source      = \"${template_dir.config.destination_dir}\"",
      "    destination = \"/etc/myapp\"",
      "  }",
      "}",
      "",
      "variable \"consul_addr\" {}",
      "",
      "variable \"server_ami\" {}"
    ]
  },
  "tencentcloud-data-as_scaling_configs": {
    "description": "Defines as_scaling_configs",
    "prefix": "tf-tencentcloud-data-as_scaling_configs",
    "body": [
      "data \"tencentcloud_as_scaling_configs\" \"as_configs\" {",
      "  configuration_id   = \"asc-oqio4yyj\"",
      "  result_output_file = \"my_test_path\"",
      "}"
    ]
  },
  "tencentcloud-data-as_scaling_groups": {
    "description": "Defines as_scaling_groups",
    "prefix": "tf-tencentcloud-data-as_scaling_groups",
    "body": [
      "data \"tencentcloud_as_scaling_groups\" \"as_scaling_groups\" {",
      "  scaling_group_name = \"myasgroup\"",
      "  configureation_id  = \"asc-oqio4yyj\"",
      "  result_output_file = \"my_test_path\"",
      "}"
    ]
  },
  "tencentcloud-data-as_scaling_policies": {
    "description": "Defines as_scaling_policies",
    "prefix": "tf-tencentcloud-data-as_scaling_policies",
    "body": [
      "data \"tencentcloud_as_scaling_policies\" \"as_scaling_policies\" {",
      "  scaling_policy_id  = \"asg-mvyghxu7\"",
      "  result_output_file = \"mytestpath\"",
      "}"
    ]
  },
  "tencentcloud-data-availability_zones": {
    "description": "Defines availability_zones",
    "prefix": "tf-tencentcloud-data-availability_zones",
    "body": [
      "data \"tencentcloud_availability_zones\" \"my_favourite_zone\" {",
      "  name = \"ap-guangzhou-3\"",
      "}"
    ]
  },
  "tencentcloud-data-cbs_snapshots": {
    "description": "Defines cbs_snapshots",
    "prefix": "tf-tencentcloud-data-cbs_snapshots",
    "body": [
      "data \"tencentcloud_cbs_snapshots\" \"snapshots\" {",
      "  snapshot_id        = \"snap-f3io7adt\"",
      "  result_output_file = \"mytestpath\"",
      "}"
    ]
  },
  "tencentcloud-data-cbs_storages": {
    "description": "Defines cbs_storages",
    "prefix": "tf-tencentcloud-data-cbs_storages",
    "body": [
      "data \"tencentcloud_cbs_storages\" \"storages\" {",
      "  storage_id         = \"disk-kdt0sq6m\"",
      "  result_output_file = \"mytestpath\"",
      "}"
    ]
  },
  "tencentcloud-data-ccn_bandwidth_limits": {
    "description": "Defines ccn_bandwidth_limits",
    "prefix": "tf-tencentcloud-data-ccn_bandwidth_limits",
    "body": [
      "variable \"other_region1\" {",
      "  default = \"ap-shanghai\"",
      "}",
      "",
      "resource \"tencentcloud_ccn\" \"main\" {",
      "  name        = \"ci-temp-test-ccn\"",
      "  description = \"ci-temp-test-ccn-des\"",
      "  qos         = \"AG\"",
      "}",
      "",
      "data \"tencentcloud_ccn_bandwidth_limits\" \"limit\" {",
      "  ccn_id = \"${tencentcloud_ccn.main.id}\"",
      "}",
      "",
      "resource \"tencentcloud_ccn_bandwidth_limit\" \"limit1\" {",
      "  ccn_id          = \"${tencentcloud_ccn.main.id}\"",
      "  region          = \"${var.other_region1}\"",
      "  bandwidth_limit = 500",
      "}"
    ]
  },
  "tencentcloud-data-ccn_instances": {
    "description": "Defines ccn_instances",
    "prefix": "tf-tencentcloud-data-ccn_instances",
    "body": [
      "resource \"tencentcloud_ccn\" \"main\" {",
      "  name        = \"ci-temp-test-ccn\"",
      "  description = \"ci-temp-test-ccn-des\"",
      "  qos         = \"AG\"",
      "}",
      "",
      "data \"tencentcloud_ccn_instances\" \"id_instances\" {",
      "  ccn_id = \"${tencentcloud_ccn.main.id}\"",
      "}",
      "",
      "data \"tencentcloud_ccn_instances\" \"name_instances\" {",
      "  name = \"${tencentcloud_ccn.main.name}\"",
      "}"
    ]
  },
  "tencentcloud-data-container_cluster_instances": {
    "description": "Defines container_cluster_instances",
    "prefix": "tf-tencentcloud-data-container_cluster_instances",
    "body": [
      "data \"tencentcloud_container_cluster_instances\" \"foo_instance\" {",
      "  cluster_id = \"cls-abcdefg\"",
      "}"
    ]
  },
  "tencentcloud-data-container_clusters": {
    "description": "Defines container_clusters",
    "prefix": "tf-tencentcloud-data-container_clusters",
    "body": [
      "data \"tencentcloud_container_clusters\" \"foo\" {}"
    ]
  },
  "tencentcloud-data-cos_bucket_object": {
    "description": "Defines cos_bucket_object",
    "prefix": "tf-tencentcloud-data-cos_bucket_object",
    "body": [
      "data \"tencentcloud_cos_bucket_object\" \"mycos\" {",
      "  bucket             = \"mycos-test-1258798060\"",
      "  key                = \"hello-world.py\"",
      "  result_output_file = \"TFresults\"",
      "}"
    ]
  },
  "tencentcloud-data-cos_buckets": {
    "description": "Defines cos_buckets",
    "prefix": "tf-tencentcloud-data-cos_buckets",
    "body": [
      "data \"tencentcloud_cos_buckets\" \"cos_buckets\" {",
      "  bucket_prefix      = \"tf-bucket-\"",
      "  result_output_file = \"mytestpath\"",
      "}"
    ]
  },
  "tencentcloud-data-dc_gateway_ccn_routes": {
    "description": "Defines dc_gateway_ccn_routes",
    "prefix": "tf-tencentcloud-data-dc_gateway_ccn_routes",
    "body": [
      "resource \"tencentcloud_ccn\" \"main\" {",
      "  name        = \"ci-temp-test-ccn\"",
      "  description = \"ci-temp-test-ccn-des\"",
      "  qos         = \"AG\"",
      "}",
      "",
      "resource \"tencentcloud_dc_gateway\" \"ccn_main\" {",
      "  name                = \"ci-cdg-ccn-test\"",
      "  network_instance_id = \"${tencentcloud_ccn.main.id}\"",
      "  network_type        = \"CCN\"",
      "  gateway_type        = \"NORMAL\"",
      "}",
      "",
      "resource \"tencentcloud_dc_gateway_ccn_route\" \"route1\" {",
      "  dcg_id     = \"${tencentcloud_dc_gateway.ccn_main.id}\"",
      "  cidr_block = \"10.1.1.0/32\"",
      "}",
      "",
      "resource \"tencentcloud_dc_gateway_ccn_route\" \"route2\" {",
      "  dcg_id     = \"${tencentcloud_dc_gateway.ccn_main.id}\"",
      "  cidr_block = \"192.1.1.0/32\"",
      "}",
      "",
      "#You need to sleep for a few seconds because there is a cache on the server",
      "data \"tencentcloud_dc_gateway_ccn_routes\"  \"test\" {",
      "  dcg_id = \"${tencentcloud_dc_gateway.ccn_main.id}\"",
      "}"
    ]
  },
  "tencentcloud-data-dc_gateway_instances": {
    "description": "Defines dc_gateway_instances",
    "prefix": "tf-tencentcloud-data-dc_gateway_instances",
    "body": [
      "resource \"tencentcloud_ccn\" \"main\" {",
      "  name        = \"ci-temp-test-ccn\"",
      "  description = \"ci-temp-test-ccn-des\"",
      "  qos         = \"AG\"",
      "}",
      "",
      "resource \"tencentcloud_dc_gateway\" \"ccn_main\" {",
      "  name                = \"ci-cdg-ccn-test\"",
      "  network_instance_id = \"${tencentcloud_ccn.main.id}\"",
      "  network_type        = \"CCN\"",
      "  gateway_type        = \"NORMAL\"",
      "}",
      "",
      "#You need to sleep for a few seconds because there is a cache on the server",
      "data \"tencentcloud_dc_gateway_instances\" \"name_select\"{",
      "  name = \"${tencentcloud_dc_gateway.ccn_main.name}\"",
      "}",
      "",
      "data \"tencentcloud_dc_gateway_instances\"  \"id_select\" {",
      "  dcg_id = \"${tencentcloud_dc_gateway.ccn_main.id}\"",
      "}"
    ]
  },
  "tencentcloud-data-dc_instances": {
    "description": "Defines dc_instances",
    "prefix": "tf-tencentcloud-data-dc_instances",
    "body": [
      "data \"tencentcloud_dc_instances\" \"name_select\" {",
      "  name = \"t\"",
      "}",
      "",
      "data \"tencentcloud_dc_instances\" \"id\" {",
      "  dcx_id = \"dc-kax48sg7\"",
      "}"
    ]
  },
  "tencentcloud-data-dcx_instances": {
    "description": "Defines dcx_instances",
    "prefix": "tf-tencentcloud-data-dcx_instances",
    "body": [
      "data \"tencentcloud_dcx_instances\" \"name_select\" {",
      "  name = \"main\"",
      "}",
      "",
      "data \"tencentcloud_dcx_instances\" \"id\" {",
      "  dcx_id = \"dcx-3ikuw30k\"",
      "}"
    ]
  },
  "tencentcloud-data-eip": {
    "description": "Defines eip",
    "prefix": "tf-tencentcloud-data-eip",
    "body": [
      "data \"tencentcloud_eip\" \"my_eip\" {",
      "  filter {",
      "    name   = \"address-status\"",
      "    values = [\"UNBIND\"]",
      "  }",
      "}"
    ]
  },
  "tencentcloud-data-image": {
    "description": "Defines image",
    "prefix": "tf-tencentcloud-data-image",
    "body": [
      "data \"tencentcloud_image\" \"my_favorate_image\" {",
      "  os_name = \"centos\"",
      "",
      "  filter {",
      "    name   = \"image-type\"",
      "    values = [\"PUBLIC_IMAGE\"]",
      "  }",
      "}"
    ]
  },
  "tencentcloud-data-instance_types": {
    "description": "Defines instance_types",
    "prefix": "tf-tencentcloud-data-instance_types",
    "body": [
      "data \"tencentcloud_instance_types\" \"lowest_cost_config\" {",
      "  filter {",
      "    name   = \"instance-family\"",
      "    values = [\"S1\"]",
      "  }",
      "",
      "  cpu_core_count = 1",
      "  memory_size    = 1",
      "}"
    ]
  },
  "tencentcloud-data-mysql_backup_list": {
    "description": "Defines mysql_backup_list",
    "prefix": "tf-tencentcloud-data-mysql_backup_list",
    "body": [
      "data \"tencentcloud_mysql_backup_list\" \"default\" {",
      "  mysql_id           = \"my-test-database\"",
      "  max_number         = 10",
      "  result_output_file = \"mytestpath\"",
      "}"
    ]
  },
  "tencentcloud-data-mysql_instance": {
    "description": "Defines mysql_instance",
    "prefix": "tf-tencentcloud-data-mysql_instance",
    "body": [
      "data \"tencentcloud_mysql_instance\" \"database\" {",
      "  mysql_id           = \"my-test-database\"",
      "  result_output_file = \"mytestpath\"",
      "}"
    ]
  },
  "tencentcloud-data-mysql_parameter_list": {
    "description": "Defines mysql_parameter_list",
    "prefix": "tf-tencentcloud-data-mysql_parameter_list",
    "body": [
      "data \"tencentcloud_mysql_parameter_list\" \"mysql\" {",
      "  mysql_id           = \"my-test-database\"",
      "  engine_version     = \"5.5\"",
      "  result_output_file = \"mytestpath\"",
      "}"
    ]
  },
  "tencentcloud-data-mysql_zone_config": {
    "description": "Defines mysql_zone_config",
    "prefix": "tf-tencentcloud-data-mysql_zone_config",
    "body": [
      "data \"tencentcloud_mysql_zone_config\" \"mysql\" {",
      "  region             = \"ap-guangzhou\"",
      "  result_output_file = \"mytestpath\"",
      "}"
    ]
  },
  "tencentcloud-data-nats": {
    "description": "Defines nats",
    "prefix": "tf-tencentcloud-data-nats",
    "body": [
      "# Query the NAT gateway by ID",
      "data \"tencentcloud_nats\" \"anat\" {",
      "  id = \"nat-k6ualnp2\"",
      "}",
      "",
      "# Query the list of normal NAT gateways",
      "data \"tencentcloud_nats\" \"nat_state\" {",
      "  state = 0",
      "}",
      "",
      "# Multi conditional query NAT gateway list",
      "data \"tencentcloud_nats\" \"multi_nat\" {",
      "  name           = \"terraform test\"",
      "  vpc_id         = \"vpc-ezij4ltv\"",
      "  max_concurrent = 3000000",
      "  bandwidth      = 500",
      "}"
    ]
  },
  "tencentcloud-data-redis_instances": {
    "description": "Defines redis_instances",
    "prefix": "tf-tencentcloud-data-redis_instances",
    "body": [
      "data \"tencentcloud_redis_instances\" \"redislab\" {",
      "  zone               = \"ap-hongkong-1\"",
      "  search_key         = \"myredis\"",
      "  project_id         = 0",
      "  limit              = 20",
      "  result_output_file = \"/tmp/redis_instances\"",
      "}"
    ]
  },
  "tencentcloud-data-redis_zone_config": {
    "description": "Defines redis_zone_config",
    "prefix": "tf-tencentcloud-data-redis_zone_config",
    "body": [
      "data \"tencentcloud_redis_zone_config\" \"redislab\" {",
      "  region             = \"ap-hongkong\"",
      "  result_output_file = \"/temp/mytestpath\"",
      "}"
    ]
  },
  "tencentcloud-data-route_table": {
    "description": "Defines route_table",
    "prefix": "tf-tencentcloud-data-route_table",
    "body": [
      "variable \"route_table_id\" {}",
      "",
      "data \"tencentcloud_route_table\" \"selected\" {",
      "  route_table_id = \"${var.route_table_id}\"",
      "}",
      "",
      "resource \"tencentcloud_route_entry\" \"rtb_entry_instance\" {",
      "  vpc_id         = \"{data.tencentcloud_route_table.selected.vpc_id}\"",
      "  route_table_id = \"${var.route_table_id}\"",
      "  cidr_block     = \"10.4.8.0/24\"",
      "  next_type      = \"instance\"",
      "  next_hub       = \"10.16.1.7\"",
      "}"
    ]
  },
  "tencentcloud-data-security_group": {
    "description": "Defines security_group",
    "prefix": "tf-tencentcloud-data-security_group",
    "body": [
      "resource \"tencentcloud_security_group\" \"sglab\" {",
      "  name        = \"mysg\"",
      "  description = \"favourite sg\"",
      "  project_id  = 0",
      "}",
      "data \"tencentcloud_security_group\" \"sglab\" {",
      "  security_group_id = \"${tencentcloud_security_group.sglab.id}\"",
      "}"
    ]
  },
  "tencentcloud-data-security_groups": {
    "description": "Defines security_groups",
    "prefix": "tf-tencentcloud-data-security_groups",
    "body": [
      "resource \"tencentcloud_security_group\" \"sglab\" {",
      "  name        = \"mysg\"",
      "  description = \"favourite sg\"",
      "  project_id  = 0",
      "}",
      "data \"tencentcloud_security_groups\" \"sglab\" {",
      "  security_group_id = \"${tencentcloud_security_group.sglab.id}\"",
      "}"
    ]
  },
  "tencentcloud-data-subnet": {
    "description": "Defines subnet",
    "prefix": "tf-tencentcloud-data-subnet",
    "body": [
      "variable \"subnet_id\" {}",
      "variable \"vpc_id\" {}",
      "",
      "data \"tencentcloud_subnet\" \"selected\" {",
      "  vpc_id    = \"${var.vpc_id}\"",
      "  subnet_id = \"${var.subnet_id}\"",
      "}",
      "",
      "resource \"tencentcloud_security_group\" \"default\" {",
      "  name        = \"test subnet data\"",
      "  description = \"test subnet data description\"",
      "}",
      "",
      "resource \"tencentcloud_security_group_rule\" \"subnet\" {",
      "  security_group_id = \"${tencentcloud_security_group.default.id}\"",
      "  type              = \"ingress\"",
      "  cidr_ip           = \"${data.tencentcloud_subnet.selected.cidr_block}\"",
      "  ip_protocol       = \"tcp\"",
      "  port_range        = \"80,8080\"",
      "  policy            = \"accept\"",
      "}"
    ]
  },
  "tencentcloud-data-vpc": {
    "description": "Defines vpc",
    "prefix": "tf-tencentcloud-data-vpc",
    "body": [
      "variable \"vpc_id\" {}",
      "",
      "data \"tencentcloud_vpc\" \"selected\" {",
      "  id = \"${var.vpc_id}\"",
      "}",
      "",
      "resource \"tencentcloud_subnet\" \"main\" {",
      "  name              = \"my test subnet\"",
      "  cidr_block        = \"${cidrsubnet(data.tencentcloud_vpc.selected.cidr_block, 4, 1)}\"",
      "  availability_zone = \"eu-frankfurt-1\"",
      "  vpc_id            = \"${data.tencentcloud_vpc.selected.id}\"",
      "}"
    ]
  },
  "tencentcloud-data-vpc_instances": {
    "description": "Defines vpc_instances",
    "prefix": "tf-tencentcloud-data-vpc_instances",
    "body": [
      "resource \"tencentcloud_vpc\" \"foo\" {",
      "  name       = \"guagua_vpc_instance_test\"",
      "  cidr_block = \"10.0.0.0/16\"",
      "}",
      "",
      "data \"tencentcloud_vpc_instances\" \"id_instances\" {",
      "  vpc_id = \"${tencentcloud_vpc.foo.id}\"",
      "}",
      "",
      "data \"tencentcloud_vpc_instances\" \"name_instances\" {",
      "  name = \"${tencentcloud_vpc.foo.name}\"",
      "}"
    ]
  },
  "tencentcloud-data-vpc_route_tables": {
    "description": "Defines vpc_route_tables",
    "prefix": "tf-tencentcloud-data-vpc_route_tables",
    "body": [
      "variable \"availability_zone\" {",
      "  default = \"ap-guangzhou-3\"",
      "}",
      "",
      "resource \"tencentcloud_vpc\" \"foo\" {",
      "  name       = \"guagua-ci-temp-test\"",
      "  cidr_block = \"10.0.0.0/16\"",
      "}",
      "",
      "resource \"tencentcloud_route_table\" \"route_table\" {",
      "  vpc_id = \"${tencentcloud_vpc.foo.id}\"",
      "  name   = \"ci-temp-test-rt\"",
      "}",
      "",
      "data \"tencentcloud_vpc_route_tables\" \"id_instances\" {",
      "  route_table_id = \"${tencentcloud_route_table.route_table.id}\"",
      "}",
      "",
      "data \"tencentcloud_vpc_route_tables\" \"name_instances\" {",
      "  name = \"${tencentcloud_route_table.route_table.name}\"",
      "}"
    ]
  },
  "tencentcloud-data-vpc_subnets": {
    "description": "Defines vpc_subnets",
    "prefix": "tf-tencentcloud-data-vpc_subnets",
    "body": [
      "variable \"availability_zone\" {",
      "  default = \"ap-guangzhou-3\"",
      "}",
      "",
      "resource \"tencentcloud_vpc\" \"foo\" {",
      "  name       = \"guagua_vpc_instance_test\"",
      "  cidr_block = \"10.0.0.0/16\"",
      "}",
      "",
      "resource \"tencentcloud_subnet\" \"subnet\" {",
      "  availability_zone = \"${var.availability_zone}\"",
      "  name              = \"guagua_vpc_subnet_test\"",
      "  vpc_id            = \"${tencentcloud_vpc.foo.id}\"",
      "  cidr_block        = \"10.0.20.0/28\"",
      "  is_multicast      = false",
      "}",
      "",
      "data \"tencentcloud_vpc_subnets\" \"id_instances\" {",
      "  subnet_id = \"${tencentcloud_subnet.subnet.id}\"",
      "}",
      "",
      "data \"tencentcloud_vpc_subnets\" \"name_instances\" {",
      "  name = \"${tencentcloud_subnet.subnet.name}\"",
      "}"
    ]
  },
  "tencentcloud-resource-alb_server_attachment": {
    "description": "Defines alb_server_attachment",
    "prefix": "tf-tencentcloud-resource-alb_server_attachment",
    "body": [
      "resource \"tencentcloud_alb_server_attachment\" \"service1\" {",
      "  loadbalancer_id = \"lb-qk1dqox5\"",
      "  listener_id     = \"lbl-ghoke4tl\"",
      "  location_id     = \"loc-i858qv1l\"",
      "",
      "  backends = [",
      "    {",
      "      instance_id = \"ins-4j30i5pe\"",
      "      port        = 80",
      "      weight      = 50",
      "    },",
      "    {",
      "      instance_id = \"ins-4j30i5pe\"",
      "      port        = 8080",
      "      weight      = 50",
      "    },",
      "  ]",
      "}"
    ]
  },
  "tencentcloud-resource-as_attachment": {
    "description": "Defines as_attachment",
    "prefix": "tf-tencentcloud-resource-as_attachment",
    "body": [
      "resource \"tencentcloud_as_attachment\" \"attachment\" {",
      "  scaling_group_id = \"sg-afasfa\"",
      "  instance_ids     = [\"ins-01\", \"ins-02\"]",
      "}"
    ]
  },
  "tencentcloud-resource-as_lifecycle_hook": {
    "description": "Defines as_lifecycle_hook",
    "prefix": "tf-tencentcloud-resource-as_lifecycle_hook",
    "body": [
      "resource \"tencentcloud_as_lifecycle_hook\" \"lifecycle_hook\" {",
      "  scaling_group_id         = \"sg-12af45\"",
      "  lifecycle_hook_name      = \"tf-as-lifecycle-hook\"",
      "  lifecycle_transition     = \"INSTANCE_LAUNCHING\"",
      "  default_result           = \"CONTINUE\"",
      "  heartbeat_timeout        = 500",
      "  notification_metadata    = \"tf test\"",
      "  notification_target_type = \"CMQ_QUEUE\"",
      "  notification_queue_name  = \"lifcyclehook\"",
      "}"
    ]
  },
  "tencentcloud-resource-as_notification": {
    "description": "Defines as_notification",
    "prefix": "tf-tencentcloud-resource-as_notification",
    "body": [
      "resource \"tencentcloud_as_notification\" \"as_notification\" {",
      "  scaling_group_id            = \"sg-12af45\"",
      "  notification_type           = [\"SCALE_OUT_FAILED\", \"SCALE_IN_SUCCESSFUL\", \"SCALE_IN_FAILED\", \"REPLACE_UNHEALTHY_INSTANCE_FAILED\"]",
      "  notification_user_group_ids = [\"76955\"]",
      "}"
    ]
  },
  "tencentcloud-resource-as_scaling_config": {
    "description": "Defines as_scaling_config",
    "prefix": "tf-tencentcloud-resource-as_scaling_config",
    "body": [
      "resource \"tencentcloud_as_scaling_config\" \"launch_configuration\" {",
      "  configuration_name = \"launch-configuration\"",
      "  image_id           = \"img-9qabwvbn\"",
      "  instance_types     = [\"SA1.SMALL1\"]",
      "  project_id         = 0",
      "  system_disk_type   = \"CLOUD_PREMIUM\"",
      "  system_disk_size   = \"50\"",
      "",
      "  data_disk = {",
      "    disk_type = \"CLOUD_PREMIUM\"",
      "    disk_size = 50",
      "  }",
      "",
      "  internet_charge_type       = \"TRAFFIC_POSTPAID_BY_HOUR\"",
      "  internet_max_bandwidth_out = 10",
      "  public_ip_assigned         = true",
      "  password                   = \"test123#\"",
      "  enhanced_security_service  = false",
      "  enhanced_monitor_service   = false",
      "  user_data                  = \"dGVzdA==\"",
      "",
      "  instance_tags = {",
      "    tag = \"as\"",
      "  }",
      "}"
    ]
  },
  "tencentcloud-resource-as_scaling_group": {
    "description": "Defines as_scaling_group",
    "prefix": "tf-tencentcloud-resource-as_scaling_group",
    "body": [
      "resource \"tencentcloud_as_scaling_group\" \"scaling_group\" {",
      "  scaling_group_name   = \"tf-as-scaling-group\"",
      "  configuration_id     = \"asc-oqio4yyj\"",
      "  max_size             = 1",
      "  min_size             = 0",
      "  vpc_id               = \"vpc-3efmz0z\"",
      "  subnet_ids           = [\"subnet-mc3egos\"]",
      "  project_id           = 0",
      "  default_cooldown     = 400",
      "  desired_capacity     = 1",
      "  termination_policies = [\"NEWEST_INSTANCE\"]",
      "  retry_policy         = \"INCREMENTAL_INTERVALS\"",
      "}"
    ]
  },
  "tencentcloud-resource-as_scaling_policy": {
    "description": "Defines as_scaling_policy",
    "prefix": "tf-tencentcloud-resource-as_scaling_policy",
    "body": [
      "resource \"tencentcloud_as_scaling_policy\" \"scaling_policy\" {",
      "  scaling_group_id    = \"asg-n32ymck2\"",
      "  policy_name         = \"tf-as-scaling-policy\"",
      "  adjustment_type     = \"EXACT_CAPACITY\"",
      "  adjustment_value    = 0",
      "  comparison_operator = \"GREATER_THAN\"",
      "  metric_name         = \"CPU_UTILIZATION\"",
      "  threshold           = 80",
      "  period              = 300",
      "  continuous_time     = 10",
      "  statistic           = \"AVERAGE\"",
      "  cooldown            = 360",
      "}"
    ]
  },
  "tencentcloud-resource-as_schedule": {
    "description": "Defines as_schedule",
    "prefix": "tf-tencentcloud-resource-as_schedule",
    "body": [
      "resource \"tencentcloud_as_schedule\" \"schedule\" {",
      "  scaling_group_id     = \"sg-12af45\"",
      "  schedule_action_name = \"tf-as-schedule\"",
      "  max_size             = 10",
      "  min_size             = 0",
      "  desired_capacity     = 0",
      "  start_time           = \"2019-01-01T00:00:00+08:00\"",
      "  end_time             = \"2019-12-01T00:00:00+08:00\"",
      "  recurrence           = \"0 0 * * *\"",
      "}"
    ]
  },
  "tencentcloud-resource-cbs_snapshot": {
    "description": "Defines cbs_snapshot",
    "prefix": "tf-tencentcloud-resource-cbs_snapshot",
    "body": [
      "resource \"tencentcloud_cbs_snapshot\" \"snapshot\" {",
      "  snapshot_name = \"unnamed\"",
      "  storage_id    = \"disk-kdt0sq6m\"",
      "}"
    ]
  },
  "tencentcloud-resource-cbs_snapshot_policy": {
    "description": "Defines cbs_snapshot_policy",
    "prefix": "tf-tencentcloud-resource-cbs_snapshot_policy",
    "body": [
      "resource \"tencentcloud-cbs_snapshot_policy\" \"snapshot_policy\" {",
      "  snapshot_policy_name = \"mysnapshotpolicyname\"",
      "  repeat_weekdays      = [1, 4]",
      "  repeat_hours         = [1]",
      "  retention_days       = 7",
      "}"
    ]
  },
  "tencentcloud-resource-cbs_storage": {
    "description": "Defines cbs_storage",
    "prefix": "tf-tencentcloud-resource-cbs_storage",
    "body": [
      "resource \"tencentcloud_cbs_storage\" \"storage\" {",
      "  storage_name      = \"mystorage\"",
      "  storage_type      = \"CLOUD_SSD\"",
      "  storage_size      = \"50\"",
      "  availability_zone = \"ap-guangzhou-3\"",
      "  project_id        = 0",
      "  encrypt           = false",
      "",
      "  tags = {",
      "    test = \"tf\"",
      "  }",
      "}"
    ]
  },
  "tencentcloud-resource-cbs_storage_attachment": {
    "description": "Defines cbs_storage_attachment",
    "prefix": "tf-tencentcloud-resource-cbs_storage_attachment",
    "body": [
      "resource \"tencentcloud_cbs_storage_attachment\" \"attachment\" {",
      "  storage_id  = \"disk-kdt0sq6m\"",
      "  instance_id = \"ins-jqlegd42\"",
      "}"
    ]
  },
  "tencentcloud-resource-ccn": {
    "description": "Defines ccn",
    "prefix": "tf-tencentcloud-resource-ccn",
    "body": [
      "resource \"tencentcloud_ccn\" \"main\" {",
      "  name        = \"ci-temp-test-ccn\"",
      "  description = \"ci-temp-test-ccn-des\"",
      "  qos         = \"AG\"",
      "}"
    ]
  },
  "tencentcloud-resource-ccn_attachment": {
    "description": "Defines ccn_attachment",
    "prefix": "tf-tencentcloud-resource-ccn_attachment",
    "body": [
      "variable \"region\" {",
      "  default = \"ap-guangzhou\"",
      "}",
      "",
      "resource \"tencentcloud_vpc\" \"vpc\" {",
      "  name         = \"ci-temp-test-vpc\"",
      "  cidr_block   = \"10.0.0.0/16\"",
      "  dns_servers  = [\"119.29.29.29\", \"8.8.8.8\"]",
      "  is_multicast = false",
      "}",
      "",
      "resource \"tencentcloud_ccn\" \"main\" {",
      "  name        = \"ci-temp-test-ccn\"",
      "  description = \"ci-temp-test-ccn-des\"",
      "  qos         = \"AG\"",
      "}",
      "",
      "resource \"tencentcloud_ccn_attachment\" \"attachment\" {",
      "  ccn_id          = \"${tencentcloud_ccn.main.id}\"",
      "  instance_type   = \"VPC\"",
      "  instance_id     = \"${tencentcloud_vpc.vpc.id}\"",
      "  instance_region = \"${var.region}\"",
      "}"
    ]
  },
  "tencentcloud-resource-ccn_bandwidth_limit": {
    "description": "Defines ccn_bandwidth_limit",
    "prefix": "tf-tencentcloud-resource-ccn_bandwidth_limit",
    "body": [
      "variable \"other_region1\" {",
      "  default = \"ap-shanghai\"",
      "}",
      "",
      "resource \"tencentcloud_ccn\" \"main\" {",
      "  name        = \"ci-temp-test-ccn\"",
      "  description = \"ci-temp-test-ccn-des\"",
      "  qos         = \"AG\"",
      "}",
      "",
      "resource \"tencentcloud_ccn_bandwidth_limit\" \"limit1\" {",
      "  ccn_id          = \"${tencentcloud_ccn.main.id}\"",
      "  region          = \"${var.other_region1}\"",
      "  bandwidth_limit = 500",
      "}"
    ]
  },
  "tencentcloud-resource-container_cluster": {
    "description": "Defines container_cluster",
    "prefix": "tf-tencentcloud-resource-container_cluster",
    "body": [
      "resource \"tencentcloud_container_cluster\" \"foo\" {",
      "  cluster_name                 = \"terraform-acc-test\"",
      "  cpu                          = 1",
      "  mem                          = 1",
      "  os_name                      = \"ubuntu16.04.1 LTSx86_64\"",
      "  bandwidth                    = 1",
      "  bandwidth_type               = \"PayByHour\"",
      "  require_wan_ip               = 1",
      "  subnet_id                    = \"subnet-abcdabc\"",
      "  is_vpc_gateway               = 0",
      "  storage_size                 = 0",
      "  root_size                    = 50",
      "  goods_num                    = 1",
      "  password                     = \"Admin12345678\"",
      "  vpc_id                       = \"vpc-abcdabc\"",
      "  cluster_cidr                 = \"10.0.2.0/24\"",
      "  ignore_cluster_cidr_conflict = 0",
      "  cvm_type                     = \"PayByHour\"",
      "  cluster_desc                 = \"foofoofoo\"",
      "  period                       = 1",
      "  zone_id                      = 100004",
      "  instance_type                = \"S2.SMALL1\"",
      "  mount_target                 = \"\"",
      "  docker_graph_path            = \"\"",
      "  instance_name                = \"bar-vm\"",
      "  cluster_version              = \"1.7.8\"",
      "}"
    ]
  },
  "tencentcloud-resource-container_cluster_instance": {
    "description": "Defines container_cluster_instance",
    "prefix": "tf-tencentcloud-resource-container_cluster_instance",
    "body": [
      "resource \"tencentcloud_container_cluster_instance\" \"bar_instance\" {",
      "  cpu               = 1",
      "  mem               = 1",
      "  bandwidth         = 1",
      "  bandwidth_type    = \"PayByHour\"",
      "  require_wan_ip    = 1",
      "  is_vpc_gateway    = 0",
      "  storage_size      = 10",
      "  root_size         = 50",
      "  password          = \"Admin12345678\"",
      "  cvm_type          = \"PayByMonth\"",
      "  period            = 1",
      "  zone_id           = 100004",
      "  instance_type     = \"CVM.S2\"",
      "  mount_target      = \"/data\"",
      "  docker_graph_path = \"\"",
      "  subnet_id         = \"subnet-abcdedf\"",
      "  cluster_id        = \"cls-abcdef\"",
      "}"
    ]
  },
  "tencentcloud-resource-cos_bucket": {
    "description": "Defines cos_bucket",
    "prefix": "tf-tencentcloud-resource-cos_bucket",
    "body": [
      "resource \"tencentcloud_cos_bucket\" \"mycos\" {",
      "  bucket = \"mycos-1258798060\"",
      "  acl    = \"private\"",
      "}"
    ]
  },
  "tencentcloud-resource-cos_bucket_object": {
    "description": "Defines cos_bucket_object",
    "prefix": "tf-tencentcloud-resource-cos_bucket_object",
    "body": [
      "resource \"tencentcloud_cos_bucket_object\" \"myobject\" {",
      "  bucket = \"mycos-1258798060\"",
      "  key    = \"new_object_key\"",
      "  source = \"path/to/file\"",
      "}"
    ]
  },
  "tencentcloud-resource-dc_gateway": {
    "description": "Defines dc_gateway",
    "prefix": "tf-tencentcloud-resource-dc_gateway",
    "body": [
      "resource \"tencentcloud_vpc\" \"main\" {",
      "    name=\"ci-vpc-instance-test\"",
      "    cidr_block=\"10.0.0.0/16\"",
      "}",
      "",
      "resource \"tencentcloud_dc_gateway\" \"vpc_main\" {",
      "  name                = \"ci-cdg-vpc-test\"",
      "  network_instance_id = \"${tencentcloud_vpc.main.id}\"",
      "  network_type        = \"VPC\"",
      "  gateway_type        = \"NAT\"",
      "}"
    ]
  },
  "tencentcloud-resource-dc_gateway_ccn_route": {
    "description": "Defines dc_gateway_ccn_route",
    "prefix": "tf-tencentcloud-resource-dc_gateway_ccn_route",
    "body": [
      "resource \"tencentcloud_ccn\" \"main\" {",
      "  name        = \"ci-temp-test-ccn\"",
      "  description = \"ci-temp-test-ccn-des\"",
      "  qos         = \"AG\"",
      "}",
      "",
      "resource \"tencentcloud_dc_gateway\" \"ccn_main\" {",
      "  name                = \"ci-cdg-ccn-test\"",
      "  network_instance_id = \"${tencentcloud_ccn.main.id}\"",
      "  network_type        = \"CCN\"",
      "  gateway_type        = \"NORMAL\"",
      "}",
      "",
      "resource \"tencentcloud_dc_gateway_ccn_route\" \"route1\" {",
      "  dcg_id     = \"${tencentcloud_dc_gateway.ccn_main.id}\"",
      "  cidr_block = \"10.1.1.0/32\"",
      "}",
      "",
      "resource \"tencentcloud_dc_gateway_ccn_route\" \"route2\" {",
      "  dcg_id     = \"${tencentcloud_dc_gateway.ccn_main.id}\"",
      "  cidr_block = \"192.1.1.0/32\"",
      "}"
    ]
  },
  "tencentcloud-resource-dcx": {
    "description": "Defines dcx",
    "prefix": "tf-tencentcloud-resource-dcx",
    "body": [
      "variable \"dc_id\" {",
      "  default = \"dc-kax48sg7\"",
      "}",
      "",
      "variable \"dcg_id\" {",
      "  default = \"dcg-dmbhf7jf\"",
      "}",
      "",
      "variable \"vpc_id\" {",
      "  default = \"vpc-4h9v4mo3\"",
      "}",
      "",
      "resource \"tencentcloud_dcx\" \"bgp_main\" {",
      "  bandwidth    = 900",
      "  dc_id        = \"${var.dc_id}\"",
      "  dcg_id       = \"${var.dcg_id}\"",
      "  name         = \"bgp_main\"",
      "  network_type = \"VPC\"",
      "  route_type   = \"BGP\"",
      "  vlan         = 306",
      "  vpc_id       = \"${var.vpc_id}\"",
      "}",
      "",
      "resource \"tencentcloud_dcx\" \"static_main\" {",
      "  bandwidth             = 900",
      "  dc_id                 = \"${var.dc_id}\"",
      "  dcg_id                = \"${var.dcg_id}\"",
      "  name                  = \"static_main\"",
      "  network_type          = \"VPC\"",
      "  route_type            = \"STATIC\"",
      "  vlan                  = 301",
      "  vpc_id                = \"${var.vpc_id}\"",
      "  route_filter_prefixes = [\"10.10.10.101/32\"]",
      "  tencent_address       = \"100.93.46.1/30\"",
      "  customer_address      = \"100.93.46.2/30\"",
      "}"
    ]
  },
  "tencentcloud-resource-dnat": {
    "description": "Defines dnat",
    "prefix": "tf-tencentcloud-resource-dnat",
    "body": [
      "data \"tencentcloud_availability_zones\" \"my_favorate_zones\" {}",
      "",
      "data \"tencentcloud_image\" \"my_favorate_image\" {",
      "  filter {",
      "    name   = \"image-type\"",
      "    values = [\"PUBLIC_IMAGE\"]",
      "  }",
      "}",
      "",
      "# Create VPC and Subnet",
      "resource \"tencentcloud_vpc\" \"main\" {",
      "  name       = \"terraform test\"",
      "  cidr_block = \"10.6.0.0/16\"",
      "}",
      "",
      "resource \"tencentcloud_subnet\" \"main_subnet\" {",
      "  vpc_id            = \"${tencentcloud_vpc.main.id}\"",
      "  name              = \"terraform test subnet\"",
      "  cidr_block        = \"10.6.7.0/24\"",
      "  availability_zone = \"${data.tencentcloud_availability_zones.my_favorate_zones.zones.0.name}\"",
      "}",
      "",
      "# Create EIP",
      "resource \"tencentcloud_eip\" \"eip_dev_dnat\" {",
      "  name = \"terraform_test\"",
      "}",
      "",
      "resource \"tencentcloud_eip\" \"eip_test_dnat\" {",
      "  name = \"terraform_test\"",
      "}",
      "",
      "# Create NAT Gateway",
      "resource \"tencentcloud_nat_gateway\" \"my_nat\" {",
      "  vpc_id         = \"${tencentcloud_vpc.main.id}\"",
      "  name           = \"terraform test\"",
      "  max_concurrent = 3000000",
      "  bandwidth      = 500",
      "",
      "  assigned_eip_set = [",
      "    \"${tencentcloud_eip.eip_dev_dnat.public_ip}\",",
      "    \"${tencentcloud_eip.eip_test_dnat.public_ip}\",",
      "  ]",
      "}",
      "",
      "# Create CVM",
      "resource \"tencentcloud_instance\" \"foo\" {",
      "  availability_zone = \"${data.tencentcloud_availability_zones.my_favorate_zones.zones.0.name}\"",
      "  image_id          = \"${data.tencentcloud_image.my_favorate_image.image_id}\"",
      "  vpc_id            = \"${tencentcloud_vpc.main.id}\"",
      "  subnet_id         = \"${tencentcloud_subnet.main_subnet.id}\"",
      "}",
      "",
      "# Add DNAT Entry",
      "resource \"tencentcloud_dnat\" \"dev_dnat\" {",
      "  vpc_id       = \"${tencentcloud_nat_gateway.my_nat.vpc_id}\"",
      "  nat_id       = \"${tencentcloud_nat_gateway.my_nat.id}\"",
      "  protocol     = \"tcp\"",
      "  elastic_ip   = \"${tencentcloud_eip.eip_dev_dnat.public_ip}\"",
      "  elastic_port = \"80\"",
      "  private_ip   = \"${tencentcloud_instance.foo.private_ip}\"",
      "  private_port = \"9001\"",
      "}",
      "",
      "resource \"tencentcloud_dnat\" \"test_dnat\" {",
      "  vpc_id       = \"${tencentcloud_nat_gateway.my_nat.vpc_id}\"",
      "  nat_id       = \"${tencentcloud_nat_gateway.my_nat.id}\"",
      "  protocol     = \"udp\"",
      "  elastic_ip   = \"${tencentcloud_eip.eip_test_dnat.public_ip}\"",
      "  elastic_port = \"8080\"",
      "  private_ip   = \"${tencentcloud_instance.foo.private_ip}\"",
      "  private_port = \"9002\"",
      "}"
    ]
  },
  "tencentcloud-resource-eip": {
    "description": "Defines eip",
    "prefix": "tf-tencentcloud-resource-eip",
    "body": [
      "resource \"tencentcloud_eip\" \"foo\" {",
      "  name = \"awesome_gateway_ip\"",
      "}"
    ]
  },
  "tencentcloud-resource-eip_association": {
    "description": "Defines eip_association",
    "prefix": "tf-tencentcloud-resource-eip_association",
    "body": [
      "resource \"tencentcloud_eip_association\" \"foo\" {",
      "  eip_id      = \"eip-xxxxxx\"",
      "  instance_id = \"ins-xxxxxx\"",
      "}"
    ]
  },
  "tencentcloud-resource-instance": {
    "description": "Defines instance",
    "prefix": "tf-tencentcloud-resource-instance",
    "body": [
      "data \"tencentcloud_image\" \"my_favorate_image\" {",
      "  os_name = \"ubuntu\"",
      "",
      "  filter {",
      "    name   = \"image-type\"",
      "    values = [\"PUBLIC_IMAGE\"]",
      "  }",
      "}",
      "",
      "data \"tencentcloud_instance_types\" \"my_favorate_instance_types\" {",
      "  filter {",
      "    name   = \"instance-family\"",
      "    values = [\"S4\"]",
      "  }",
      "",
      "  cpu_core_count = 1",
      "  memory_size    = 1",
      "}",
      "",
      "data \"tencentcloud_availability_zones\" \"my_favorate_zones\" {}",
      "",
      "// Create Security Group with 2 rules",
      "resource \"tencentcloud_security_group\" \"app\" {",
      "  name        = \"web accessibility\"",
      "  description = \"make it accessible for both production and stage ports\"",
      "}",
      "",
      "resource \"tencentcloud_security_group_rule\" \"web\" {",
      "  security_group_id = \"${tencentcloud_security_group.app.id}\"",
      "  type              = \"ingress\"",
      "  cidr_ip           = \"0.0.0.0/0\"",
      "  ip_protocol       = \"tcp\"",
      "  port_range        = \"80,3000,8080\"",
      "  policy            = \"accept\"",
      "}",
      "",
      "resource \"tencentcloud_security_group_rule\" \"ssh\" {",
      "  security_group_id = \"${tencentcloud_security_group.app.id}\"",
      "  type              = \"ingress\"",
      "  cidr_ip           = \"202.119.230.10/32\"",
      "  ip_protocol       = \"tcp\"",
      "  port_range        = \"22\"",
      "  policy            = \"accept\"",
      "}",
      "",
      "// Create VPC resource",
      "resource \"tencentcloud_vpc\" \"app\" {",
      "  cidr_block = \"10.0.0.0/16\"",
      "  name       = \"awesome_app_vpc\"",
      "}",
      "",
      "resource \"tencentcloud_subnet\" \"app\" {",
      "  vpc_id            = \"${tencentcloud_vpc.app.id}\"",
      "  availability_zone = \"${data.tencentcloud_availability_zones.my_favorate_zones.zones.0.name}\"",
      "  name              = \"awesome_app_subnet\"",
      "  cidr_block        = \"10.0.1.0/24\"",
      "}",
      "",
      "// Create 10 CVM instances to host awesome_app",
      "resource \"tencentcloud_instance\" \"my_awesome_app\" {",
      "  instance_name     = \"awesome_app\"",
      "  availability_zone = \"${data.tencentcloud_availability_zones.my_favorate_zones.zones.0.name}\"",
      "  image_id          = \"${data.tencentcloud_image.my_favorate_image.image_id}\"",
      "  instance_type     = \"${data.tencentcloud_instance_types.my_favorate_instance_types.instance_types.0.instance_type}\"",
      "  key_name          = \"${tencentcloud_key_pair.random_key.id}\"",
      "  hostname          = \"awesome_app\"",
      "  project_id        = 0",
      "",
      "  tags = {",
      "    tagKey = \"tagValue\"",
      "  }",
      "",
      "  security_groups = [",
      "    \"${tencentcloud_security_group.app.id}\",",
      "  ]",
      "",
      "  vpc_id    = \"${tencentcloud_vpc.app.id}\"",
      "  subnet_id = \"${tencentcloud_subnet.app.id}\"",
      "",
      "  internet_max_bandwidth_out = 20",
      "  count                      = 10",
      "}"
    ]
  },
  "tencentcloud-resource-key_pair": {
    "description": "Defines key_pair",
    "prefix": "tf-tencentcloud-resource-key_pair",
    "body": [
      "resource \"tencentcloud_key_pair\" \"foo\" {",
      "  key_name   = \"from_terraform_public_key\"",
      "  public_key = \"ssh-rsa AAAAB3NzaSuperLongString foo@bar\"",
      "}"
    ]
  },
  "tencentcloud-resource-lb": {
    "description": "Defines lb",
    "prefix": "tf-tencentcloud-resource-lb",
    "body": [
      "resource \"tencentcloud_lb\" \"classic\" {",
      "  type       = \"OPEN\"",
      "  forward    = \"APPLICATION\"",
      "  name       = \"tf-test-classic\"",
      "  project_id = 0",
      "}"
    ]
  },
  "tencentcloud-resource-mysql_account": {
    "description": "Defines mysql_account",
    "prefix": "tf-tencentcloud-resource-mysql_account",
    "body": [
      "resource \"tencentcloud_mysql_account\" \"default\" {",
      "  mysql_id    = \"my-test-database\"",
      "  name        = \"tf_account\"",
      "  password    = \"********\"",
      "  description = \"My test account\"",
      "}"
    ]
  },
  "tencentcloud-resource-mysql_account_privilege": {
    "description": "Defines mysql_account_privilege",
    "prefix": "tf-tencentcloud-resource-mysql_account_privilege",
    "body": [
      "resource \"tencentcloud_mysql_account_privilege\" \"default\" {",
      "  mysql_id       = \"my-test-database\"",
      "  account_name   = \"tf_account\"",
      "  privileges     = [\"SELECT\"]",
      "  database_names = [\"instance.name\"]",
      "}"
    ]
  },
  "tencentcloud-resource-mysql_backup_policy": {
    "description": "Defines mysql_backup_policy",
    "prefix": "tf-tencentcloud-resource-mysql_backup_policy",
    "body": [
      "resource \"tencentcloud_mysql_backup_policy\" \"default\" {",
      "  mysql_id         = \"cdb-dnqksd9f\"",
      "  retention_period = 7",
      "  backup_model     = \"logical\"",
      "  backup_time      = \"02:00–06:00\"",
      "}"
    ]
  },
  "tencentcloud-resource-mysql_instance": {
    "description": "Defines mysql_instance",
    "prefix": "tf-tencentcloud-resource-mysql_instance",
    "body": [
      "resource \"tencentcloud_mysql_instance\" \"default\" {",
      "  internet_service = 1",
      "  engine_version   = \"5.7\"",
      "",
      "  root_password     = \"********\"",
      "  slave_deploy_mode = 0",
      "  first_slave_zone  = \"ap-guangzhou-4\"",
      "  second_slave_zone = \"ap-guangzhou-4\"",
      "  slave_sync_mode   = 1",
      "  availability_zone = \"ap-guangzhou-4\"",
      "  project_id        = 201901010001",
      "  instance_name     = \"myTestMysql\"",
      "  mem_size          = 128000",
      "  volume_size       = 250",
      "  vpc_id            = \"vpc-12mt3l31\"",
      "  subnet_id         = \"subnet-9uivyb1g\"",
      "  intranet_port     = 3306",
      "  security_groups   = [\"sg-ot8eclwz\"]",
      "",
      "  tags = {",
      "    name = \"test\"",
      "  }",
      "",
      "  parameters = {",
      "    max_connections = \"1000\"",
      "  }",
      "}"
    ]
  },
  "tencentcloud-resource-mysql_readonly_instance": {
    "description": "Defines mysql_readonly_instance",
    "prefix": "tf-tencentcloud-resource-mysql_readonly_instance",
    "body": [
      "resource \"tencentcloud_mysql_readonly_instance\" \"default\" {",
      "  master_instance_id = \"cdb-dnqksd9f\"",
      "  instance_name      = \"myTestMysql\"",
      "  mem_size           = 128000",
      "  volume_size        = 255",
      "  vpc_id             = \"vpc-12mt3l31\"",
      "  subnet_id          = \"subnet-9uivyb1g\"",
      "  intranet_port      = 3306",
      "  security_groups    = [\"sg-ot8eclwz\"]",
      "",
      "  tags = {",
      "    name = \"test\"",
      "  }",
      "}"
    ]
  },
  "tencentcloud-resource-nat_gateway": {
    "description": "Defines nat_gateway",
    "prefix": "tf-tencentcloud-resource-nat_gateway",
    "body": [
      "resource \"tencentcloud_vpc\" \"main\" {",
      "  name       = \"terraform test\"",
      "  cidr_block = \"10.6.0.0/16\"",
      "}",
      "",
      "# Create EIP",
      "resource \"tencentcloud_eip\" \"eip_dev_dnat\" {",
      "  name = \"terraform_test\"",
      "}",
      "",
      "resource \"tencentcloud_eip\" \"eip_test_dnat\" {",
      "  name = \"terraform_test\"",
      "}",
      "",
      "# Create NAT Gateway",
      "resource \"tencentcloud_nat_gateway\" \"my_nat\" {",
      "  vpc_id         = \"${tencentcloud_vpc.main.id}\"",
      "  name           = \"terraform test\"",
      "  max_concurrent = 3000000",
      "  bandwidth      = 500",
      "",
      "  assigned_eip_set = [",
      "    \"${tencentcloud_eip.eip_dev_dnat.public_ip}\",",
      "    \"${tencentcloud_eip.eip_test_dnat.public_ip}\",",
      "  ]",
      "}"
    ]
  },
  "tencentcloud-resource-redis_backup_config": {
    "description": "Defines redis_backup_config",
    "prefix": "tf-tencentcloud-resource-redis_backup_config",
    "body": [
      "resource \"tencentcloud_redis_backup_config\" \"redislab\" {",
      "  redis_id      = \"crs-7yl0q0dd\"",
      "  backup_time   = \"04:00-05:00\"",
      "  backup_period = [\"Monday\"]",
      "}"
    ]
  },
  "tencentcloud-resource-redis_instance": {
    "description": "Defines redis_instance",
    "prefix": "tf-tencentcloud-resource-redis_instance",
    "body": [
      "resource \"tencentcloud_redis_instance\" \"redis_instance_test\" {",
      "  availability_zone = \"ap-hongkong-3\"",
      "  type              = \"master_slave_redis\"",
      "  password          = \"test12345789\"",
      "  mem_size          = 8192",
      "  name              = \"terrform_test\"",
      "  port              = 6379",
      "}"
    ]
  },
  "tencentcloud-resource-route_entry": {
    "description": "Defines route_entry",
    "prefix": "tf-tencentcloud-resource-route_entry",
    "body": [
      "resource \"tencentcloud_vpc\" \"main\" {",
      "  name       = \"Used to test the routing entry\"",
      "  cidr_block = \"10.4.0.0/16\"",
      "}",
      "",
      "resource \"tencentcloud_route_table\" \"r\" {",
      "  name   = \"Used to test the routing entry\"",
      "  vpc_id = \"${tencent_vpc.main.id}\"",
      "}",
      "",
      "resource \"tencentcloud_route_entry\" \"rtb_entry_instance\" {",
      "  vpc_id         = \"${tencentcloud_route_table.main.vpc_id}\"",
      "  route_table_id = \"${tencentcloud_route_table.r.id}\"",
      "  cidr_block     = \"10.4.8.0/24\"",
      "  next_type      = \"instance\"",
      "  next_hub       = \"10.16.1.7\"",
      "}",
      "",
      "resource \"tencentcloud_route_entry\" \"rtb_entry_instance\" {",
      "  vpc_id         = \"${tencentcloud_route_table.main.vpc_id}\"",
      "  route_table_id = \"${tencentcloud_route_table.r.id}\"",
      "  cidr_block     = \"10.4.5.0/24\"",
      "  next_type      = \"vpn_gateway\"",
      "  next_hub       = \"vpngw-db52irtl\"",
      "}"
    ]
  },
  "tencentcloud-resource-route_table": {
    "description": "Defines route_table",
    "prefix": "tf-tencentcloud-resource-route_table",
    "body": [
      "resource \"tencentcloud_vpc\" \"foo\" {",
      "  name       = \"ci-temp-test\"",
      "  cidr_block = \"10.0.0.0/16\"",
      "}",
      "",
      "resource \"tencentcloud_route_table\" \"foo\" {",
      "  vpc_id = \"${tencentcloud_vpc.foo.id}\"",
      "  name   = \"ci-temp-test-rt\"",
      "}"
    ]
  },
  "tencentcloud-resource-route_table_entry": {
    "description": "Defines route_table_entry",
    "prefix": "tf-tencentcloud-resource-route_table_entry",
    "body": [
      "variable \"availability_zone\" {",
      "  default = \"na-siliconvalley-1\"",
      "}",
      "",
      "resource \"tencentcloud_vpc\" \"foo\" {",
      "  name       = \"ci-temp-test\"",
      "  cidr_block = \"10.0.0.0/16\"",
      "}",
      "",
      "resource \"tencentcloud_subnet\" \"foo\" {",
      "  vpc_id            = \"${tencentcloud_vpc.foo.id}\"",
      "  name              = \"terraform test subnet\"",
      "  cidr_block        = \"10.0.12.0/24\"",
      "  availability_zone = \"${var.availability_zone}\"",
      "  route_table_id    = \"${tencentcloud_route_table.foo.id}\"",
      "}",
      "",
      "resource \"tencentcloud_route_table\" \"foo\" {",
      "  vpc_id = \"${tencentcloud_vpc.foo.id}\"",
      "  name   = \"ci-temp-test-rt\"",
      "}",
      "",
      "resource \"tencentcloud_route_table_entry\" \"instance\" {",
      "  route_table_id         = \"${tencentcloud_route_table.foo.id}\"",
      "  destination_cidr_block = \"10.4.4.0/24\"",
      "  next_type              = \"EIP\"",
      "  next_hub               = \"0\"",
      "  description            = \"ci-test-route-table-entry\"",
      "}"
    ]
  },
  "tencentcloud-resource-security_group": {
    "description": "Defines security_group",
    "prefix": "tf-tencentcloud-resource-security_group",
    "body": [
      "resource \"tencentcloud_security_group\" \"sglab\" {",
      "  name        = \"mysg\"",
      "  description = \"favourite sg\"",
      "  project_id  = 0",
      "}"
    ]
  },
  "tencentcloud-resource-security_group_rule": {
    "description": "Defines security_group_rule",
    "prefix": "tf-tencentcloud-resource-security_group_rule",
    "body": [
      "resource \"tencentcloud_security_group\" \"sglab_1\" {",
      "  name        = \"mysg_1\"",
      "  description = \"favourite sg_1\"",
      "  project_id  = 0",
      "}",
      "resource \"tencentcloud_security_group_rule\" \"sglab_1\" {",
      "  security_group_id = \"${tencentcloud_security_group.sglab_1.id}\"",
      "  type              = \"ingress\"",
      "  cidr_ip           = \"10.0.0.0/16\"",
      "  ip_protocol       = \"TCP\"",
      "  port_range        = \"80\"",
      "  policy            = \"ACCEPT\"",
      "  description       = \"favourite sg rule_1\"",
      "}"
    ]
  },
  "tencentcloud-resource-subnet": {
    "description": "Defines subnet",
    "prefix": "tf-tencentcloud-resource-subnet",
    "body": [
      "variable \"availability_zone\" {",
      "  default = \"ap-guangzhou-3\"",
      "}",
      "",
      "resource \"tencentcloud_vpc\" \"foo\" {",
      "  name       = \"guagua-ci-temp-test\"",
      "  cidr_block = \"10.0.0.0/16\"",
      "}",
      "",
      "resource \"tencentcloud_subnet\" \"subnet\" {",
      "  availability_zone = \"${var.availability_zone}\"",
      "  name              = \"guagua-ci-temp-test\"",
      "  vpc_id            = \"${tencentcloud_vpc.foo.id}\"",
      "  cidr_block        = \"10.0.20.0/28\"",
      "  is_multicast      = false",
      "}"
    ]
  },
  "tencentcloud-resource-vpc": {
    "description": "Defines vpc",
    "prefix": "tf-tencentcloud-resource-vpc",
    "body": [
      "resource \"tencentcloud_vpc\" \"foo\" {",
      "  name         = \"ci-temp-test-updated\"",
      "  cidr_block   = \"10.0.0.0/16\"",
      "  dns_servers  = [\"119.29.29.29\", \"8.8.8.8\"]",
      "  is_multicast = false",
      "}"
    ]
  },
  "terraform-data-remote_state": {
    "description": "Defines remote_state",
    "prefix": "tf-terraform-data-remote_state",
    "body": [
      "data \"terraform_remote_state\" \"vpc\" {",
      "  backend = \"atlas\"",
      "  config {",
      "    name = \"hashicorp/vpc-prod\"",
      "  }",
      "}",
      "",
      "resource \"aws_instance\" \"foo\" {",
      "  # ...",
      "  subnet_id = \"${data.terraform_remote_state.vpc.subnet_id}\"",
      "}"
    ]
  },
  "tf-aws": {
    "prefix": "tf-aws",
    "body": [
      "/*",
      "# tf_aws_${1:module_name}",
      "",
      "A terraform module to ${2:describe a thing}",
      "*/",
      "",
      "provider \"aws\" {",
      "  version = \">~ ${3:1.6.0}\"",
      "}",
      ""
    ],
    "description": "The beginnings of a main.tf"
  },
  "tf-conditional": {
    "prefix": "tf-conditional",
    "body": [
      "${var.${1:if_this} == \"${2:equals}\" ? ${3:then} : ${4:else}}"
    ],
    "description": "A terraform conditional."
  },
  "tf-locals": {
    "prefix": "tf-locals",
    "body": [
      "locals {",
      "  ${1:key}  = \"${2:value}\"",
      "}",
      ""
    ],
    "description": "An empty definition of locals."
  },
  "tf-out": {
    "prefix": "tf-out",
    "body": [
      "output \"${1:output}\" {",
      "  description = \"${2:description}\"",
      "  value       = \"${${3:value}}\"",
      "}",
      ""
    ],
    "description": "A terraform output with a description."
  },
  "tf-var": {
    "prefix": "tf-var",
    "body": [
      "variable \"${1:variable_name}\" {",
      "  description = \"${2:description}\"",
      "  default     = \"${3:default}\"",
      "}",
      ""
    ],
    "description": "A terraform variable with a default and description."
  },
  "tfe-data-ssh_key": {
    "description": "Defines ssh_key",
    "prefix": "tf-tfe-data-ssh_key",
    "body": [
      "data \"tfe_ssh_key\" \"test\" {",
      "  name         = \"my-ssh-key-name\"",
      "  organization = \"my-org-name\"",
      "}"
    ]
  },
  "tfe-data-team": {
    "description": "Defines team",
    "prefix": "tf-tfe-data-team",
    "body": [
      "data \"tfe_team\" \"test\" {",
      "  name         = \"my-team-name\"",
      "  organization = \"my-org-name\"",
      "}"
    ]
  },
  "tfe-data-team_access": {
    "description": "Defines team_access",
    "prefix": "tf-tfe-data-team_access",
    "body": [
      "data \"tfe_team_access\" \"test\" {",
      "  team_id      = \"my-team-id\"",
      "  workspace_id = \"my-workspace-id\"",
      "}"
    ]
  },
  "tfe-data-workspace": {
    "description": "Defines workspace",
    "prefix": "tf-tfe-data-workspace",
    "body": [
      "data \"tfe_workspace\" \"test\" {",
      "  name         = \"my-workspace-name\"",
      "  organization = \"my-org-name\"",
      "}"
    ]
  },
  "tfe-data-workspace_ids": {
    "description": "Defines workspace_ids",
    "prefix": "tf-tfe-data-workspace_ids",
    "body": [
      "data \"tfe_workspace_ids\" \"app-frontend\" {",
      "  names        = [\"app-frontend-prod\", \"app-frontend-dev1\", \"app-frontend-staging\"]",
      "  organization = \"my-org-name\"",
      "}",
      "",
      "data \"tfe_workspace_ids\" \"all\" {",
      "  names        = [\"*\"]",
      "  organization = \"my-org-name\"",
      "}"
    ]
  },
  "tfe-resource-oauth_client": {
    "description": "Defines oauth_client",
    "prefix": "tf-tfe-resource-oauth_client",
    "body": [
      "resource \"tfe_oauth_client\" \"test\" {",
      "  organization     = \"my-org-name\"",
      "  api_url          = \"https://api.github.com\"",
      "  http_url         = \"https://github.com\"",
      "  oauth_token      = \"my-vcs-provider-token\"",
      "  service_provider = \"github\"",
      "}"
    ]
  },
  "tfe-resource-organization": {
    "description": "Defines organization",
    "prefix": "tf-tfe-resource-organization",
    "body": [
      "resource \"tfe_organization\" \"test\" {",
      "  name  = \"my-org-name\"",
      "  email = \"admin@company.com\"",
      "}"
    ]
  },
  "tfe-resource-organization_token": {
    "description": "Defines organization_token",
    "prefix": "tf-tfe-resource-organization_token",
    "body": [
      "resource \"tfe_organization_token\" \"test\" {",
      "  organization = \"my-org-name\"",
      "}"
    ]
  },
  "tfe-resource-policy_set": {
    "description": "Defines policy_set",
    "prefix": "tf-tfe-resource-policy_set",
    "body": [
      "resource \"tfe_policy_set\" \"test\" {",
      "  name                   = \"my-policy-set\"",
      "  description            = \"A brand new policy set\"",
      "  organization           = \"my-org-name\"",
      "  policies_path          = \"policies/my-policy-set\"",
      "  workspace_external_ids = [\"${tfe_workspace.test.external_id}\"]",
      "",
      "  vcs_repo {",
      "    identifier         = \"my-org-name/my-policy-set-repository\"",
      "    branch             = \"master\"",
      "    ingress_submodules = false",
      "    oauth_token_id     = \"${tfe_oauth_client.test.oauth_token_id}\"",
      "  }",
      "}"
    ]
  },
  "tfe-resource-sentinel_policy": {
    "description": "Defines sentinel_policy",
    "prefix": "tf-tfe-resource-sentinel_policy",
    "body": [
      "resource \"tfe_sentinel_policy\" \"test\" {",
      "  name         = \"my-policy-name\"",
      "  description  = \"This policy always passes\"",
      "  organization = \"my-org-name\"",
      "  policy       = \"main = rule { true }\"",
      "  enforce_mode = \"hard-mandatory\"",
      "}"
    ]
  },
  "tfe-resource-ssh_key": {
    "description": "Defines ssh_key",
    "prefix": "tf-tfe-resource-ssh_key",
    "body": [
      "resource \"tfe_ssh_key\" \"test\" {",
      "  name         = \"my-ssh-key-name\"",
      "  organization = \"my-org-name\"",
      "  key          = \"private-ssh-key\"",
      "}"
    ]
  },
  "tfe-resource-team": {
    "description": "Defines team",
    "prefix": "tf-tfe-resource-team",
    "body": [
      "resource \"tfe_team\" \"test\" {",
      "  name         = \"my-team-name\"",
      "  organization = \"my-org-name\"",
      "}"
    ]
  },
  "tfe-resource-team_access": {
    "description": "Defines team_access",
    "prefix": "tf-tfe-resource-team_access",
    "body": [
      "resource \"tfe_team\" \"test\" {",
      "  name         = \"my-team-name\"",
      "  organization = \"my-org-name\"",
      "}",
      "",
      "resource \"tfe_workspace\" \"test\" {",
      "  name         = \"my-workspace-name\"",
      "  organization = \"my-org-name\"",
      "}",
      "",
      "resource \"tfe_team_access\" \"test\" {",
      "  access       = \"read\"",
      "  team_id      = \"${tfe_team.test.id}\"",
      "  workspace_id = \"${tfe_workspace.test.id}\"",
      "}"
    ]
  },
  "tfe-resource-team_member": {
    "description": "Defines team_member",
    "prefix": "tf-tfe-resource-team_member",
    "body": [
      "resource \"tfe_team\" \"test\" {",
      "  name         = \"my-team-name\"",
      "  organization = \"my-org-name\"",
      "}",
      "",
      "resource \"tfe_team_member\" \"test\" {",
      "  team_id  = \"${tfe_team.test.id}\"",
      "  username = \"sander\"",
      "}"
    ]
  },
  "tfe-resource-team_members": {
    "description": "Defines team_members",
    "prefix": "tf-tfe-resource-team_members",
    "body": [
      "resource \"tfe_team\" \"test\" {",
      "  name         = \"my-team-name\"",
      "  organization = \"my-org-name\"",
      "}",
      "",
      "resource \"tfe_team_members\" \"test\" {",
      "  team_id   = \"${tfe_team.test.id}\"",
      "  usernames = [\"admin\", \"sander\"]",
      "}"
    ]
  },
  "tfe-resource-team_token": {
    "description": "Defines team_token",
    "prefix": "tf-tfe-resource-team_token",
    "body": [
      "resource \"tfe_team\" \"test\" {",
      "  name         = \"my-team-name\"",
      "  organization = \"my-org-name\"",
      "}",
      "",
      "resource \"tfe_team_token\" \"test\" {",
      "  team_id = \"${tfe_team.test.id}\"",
      "}"
    ]
  },
  "tfe-resource-variable": {
    "description": "Defines variable",
    "prefix": "tf-tfe-resource-variable",
    "body": [
      "resource \"tfe_organization\" \"test\" {",
      "  name  = \"my-org-name\"",
      "  email = \"admin@company.com\"",
      "}",
      "",
      "resource \"tfe_workspace\" \"test\" {",
      "  name         = \"my-workspace-name\"",
      "  organization = \"${tfe_organization.test.id}\"",
      "}",
      "",
      "resource \"tfe_variable\" \"test\" {",
      "  key          = \"my_key_name\"",
      "  value        = \"my_value_name\"",
      "  category     = \"terraform\"",
      "  workspace_id = \"${tfe_workspace.test.id}\"",
      "}"
    ]
  },
  "tfe-resource-workspace": {
    "description": "Defines workspace",
    "prefix": "tf-tfe-resource-workspace",
    "body": [
      "resource \"tfe_workspace\" \"test\" {",
      "  name         = \"my-workspace-name\"",
      "  organization = \"my-org-name\"",
      "}"
    ]
  },
  "tls-data-public_key": {
    "description": "Defines public_key",
    "prefix": "tf-tls-data-public_key",
    "body": [
      "data \"tls_public_key\" \"example\" {",
      "  private_key_pem = \"${file(\"~/.ssh/id_rsa\")}\"",
      "}"
    ]
  },
  "tls-resource-cert_request": {
    "description": "Defines cert_request",
    "prefix": "tf-tls-resource-cert_request",
    "body": [
      "resource \"tls_cert_request\" \"example\" {",
      "  key_algorithm   = \"ECDSA\"",
      "  private_key_pem = \"${file(\"private_key.pem\")}\"",
      "",
      "  subject {",
      "    common_name  = \"example.com\"",
      "    organization = \"ACME Examples, Inc\"",
      "  }",
      "}"
    ]
  },
  "tls-resource-locally_signed_cert": {
    "description": "Defines locally_signed_cert",
    "prefix": "tf-tls-resource-locally_signed_cert",
    "body": [
      "resource \"tls_locally_signed_cert\" \"example\" {",
      "  cert_request_pem   = \"${file(\"cert_request.pem\")}\"",
      "  ca_key_algorithm   = \"ECDSA\"",
      "  ca_private_key_pem = \"${file(\"ca_private_key.pem\")}\"",
      "  ca_cert_pem        = \"${file(\"ca_cert.pem\")}\"",
      "",
      "  validity_period_hours = 12",
      "",
      "  allowed_uses = [",
      "    \"key_encipherment\",",
      "    \"digital_signature\",",
      "    \"server_auth\",",
      "  ]",
      "}"
    ]
  },
  "tls-resource-private_key": {
    "description": "Defines private_key",
    "prefix": "tf-tls-resource-private_key",
    "body": [
      "resource \"tls_private_key\" \"example\" {",
      "  algorithm   = \"ECDSA\"",
      "  ecdsa_curve = \"P384\"",
      "}"
    ]
  },
  "tls-resource-self_signed_cert": {
    "description": "Defines self_signed_cert",
    "prefix": "tf-tls-resource-self_signed_cert",
    "body": [
      "resource \"tls_self_signed_cert\" \"example\" {",
      "  key_algorithm   = \"ECDSA\"",
      "  private_key_pem = \"${file(\\\"private_key.pem\\\")}\"",
      "",
      "  subject {",
      "    common_name  = \"example.com\"",
      "    organization = \"ACME Examples, Inc\"",
      "  }",
      "",
      "  validity_period_hours = 12",
      "",
      "  allowed_uses = [",
      "    \"key_encipherment\",",
      "    \"digital_signature\",",
      "    \"server_auth\",",
      "  ]",
      "}"
    ]
  },
  "triton-data-triton_account": {
    "description": "Defines triton_account",
    "prefix": "tf-triton-data-triton_account",
    "body": [
      "# Declare the data source.",
      "data \"triton_account\" \"main\" {}",
      "",
      "# Access unique Account ID using output from the data source.",
      "output \"account_id\" {",
      "  value = \"${data.triton_account.main.id}\"",
      "}"
    ]
  },
  "triton-data-triton_datacenter": {
    "description": "Defines triton_datacenter",
    "prefix": "tf-triton-data-triton_datacenter",
    "body": [
      "# Declare the data source.",
      "data \"triton_datacenter\" \"current\" {}",
      "",
      "# Access current endpoint URL using output from the data source.",
      "output \"endpoint\" {",
      "  value = \"${data.triton_datacenter.current.endpoint}\"",
      "}"
    ]
  },
  "triton-data-triton_fabric_network": {
    "description": "Defines triton_fabric_network",
    "prefix": "tf-triton-data-triton_fabric_network",
    "body": [
      "# Declare the data source to retrieve Fabric VLAN details.",
      "data \"triton_fabric_vlan\" \"private\" {",
      "  name = \"Private-VLAN-Production\"",
      "}",
      "",
      "# Declare the data source to retrieve Fabric Network details.",
      "data \"triton_fabric_network\" \"private\" {",
      "  name     = \"Private-Network-Production\"",
      "  vland_id = \"${data.triton_fabric_vlan.private.vlan_id}\"",
      "}",
      "",
      "# Access subnet CIDR using output from the data source.",
      "output \"private_network_cidr\" {",
      "  value = \"${data.triton_fabric_network.private.subnet}\"",
      "}"
    ]
  },
  "triton-data-triton_fabric_vlan": {
    "description": "Defines triton_fabric_vlan",
    "prefix": "tf-triton-data-triton_fabric_vlan",
    "body": [
      "# Declare the data source.",
      "data \"triton_fabric_vlan\" \"public\" {",
      "  name = \"Public-VLAN-Production\"",
      "}",
      "",
      "# Access unique VLAN ID using output from the data source.",
      "output \"public_vlan_id\" {",
      "  value = \"${data.triton_fabric_vlan.public.vlan_id}\"",
      "}"
    ]
  },
  "triton-data-triton_image": {
    "description": "Defines triton_image",
    "prefix": "tf-triton-data-triton_image",
    "body": [
      "data \"triton_image\" \"base\" {",
      "  name    = \"base-64-lts\"",
      "  version = \"16.4.1\"",
      "}",
      "",
      "output \"image_id\" {",
      "  value = \"${data.triton_image.base.id}\"",
      "}"
    ]
  },
  "triton-data-triton_network": {
    "description": "Defines triton_network",
    "prefix": "tf-triton-data-triton_network",
    "body": [
      "# Declare the data source.",
      "data \"triton_network\" \"private\" {",
      "  name = \"Joyent-SDC-Private\"",
      "}",
      "",
      "# Access unique Network ID using output from the data source. ",
      "output \"private_network_id\" {",
      "  value = \"${data.triton_network.private.id}\"",
      "}"
    ]
  },
  "triton-resource-triton_fabric": {
    "description": "Defines triton_fabric",
    "prefix": "tf-triton-resource-triton_fabric",
    "body": [
      "resource \"triton_fabric\" \"dmz\" {",
      "  vlan_id            = 100",
      "  name               = \"dmz\"",
      "  description        = \"DMZ Network\"",
      "  subnet             = \"10.60.1.0/24\"",
      "  provision_start_ip = \"10.60.1.10\"",
      "  provision_end_ip   = \"10.60.1.240\"",
      "  gateway            = \"10.60.1.1\"",
      "  resolvers          = [\"8.8.8.8\", \"8.8.4.4\"]",
      "",
      "  internet_nat = true",
      "}"
    ]
  },
  "triton-resource-triton_firewall_rule": {
    "description": "Defines triton_firewall_rule",
    "prefix": "tf-triton-resource-triton_firewall_rule",
    "body": [
      "resource \"triton_firewall_rule\" \"www\" {",
      "  description = \"Allow web traffic on ports tcp/80 and tcp/443 to machines with the 'www' tag from any source.\"",
      "  rule        = \"FROM any TO tag \\\"www\\\" ALLOW tcp (PORT 80 AND PORT 443)\"",
      "  enabled     = true",
      "}"
    ]
  },
  "triton-resource-triton_instance_template": {
    "description": "Defines triton_instance_template",
    "prefix": "tf-triton-resource-triton_instance_template",
    "body": [
      "data \"triton_image\" \"base\" {",
      "  name    = \"base-64-lts\"",
      "  version = \"16.4.1\"",
      "}",
      "",
      "data \"triton_network\" \"private\" {",
      "  name = \"Joyent-SDC-Private\"",
      "}",
      "",
      "resource \"triton_instance_template\" \"base\" {",
      "  template_name    = \"Base template\"",
      "  image            = \"${data.triton_image.base.id}\"",
      "  package          = \"g4-highcpu-128M\"",
      "  ",
      "  firewall_enabled = false",
      "  ",
      "  networks         = [\"${data.triton_network.private.id}\"]",
      "  ",
      "  tags {",
      "    hello = \"world\"",
      "    role  = \"database\"",
      "  }",
      "}"
    ]
  },
  "triton-resource-triton_key": {
    "description": "Defines triton_key",
    "prefix": "tf-triton-resource-triton_key",
    "body": [
      "resource \"triton_key\" \"example\" {",
      "  name = \"Example Key\"",
      "  key  = \"${file(\"keys/id_rsa\")}\"",
      "}"
    ]
  },
  "triton-resource-triton_machine": {
    "description": "Defines triton_machine",
    "prefix": "tf-triton-resource-triton_machine",
    "body": [
      "resource \"triton_machine\" \"test-smartos\" {",
      "  name    = \"test-smartos\"",
      "  package = \"g3-standard-0.25-smartos\"",
      "  image   = \"842e6fa6-6e9b-11e5-8402-1b490459e334\"",
      "",
      "  tags {",
      "    hello = \"world\"",
      "    role  = \"database\"",
      "  }",
      "",
      "  cns {",
      "    services = [\"web\", \"frontend\"]",
      "  }",
      "",
      "  metadata {",
      "    hello = \"again\"",
      "  }",
      "}"
    ]
  },
  "triton-resource-triton_service_group": {
    "description": "Defines triton_service_group",
    "prefix": "tf-triton-resource-triton_service_group",
    "body": [
      "resource \"triton_service_group\" \"web\" {",
      "  group_name = \"web_group\"",
      "  template   = \"${triton_instance_template.base.id}\"",
      "  capacity   = 3",
      "}"
    ]
  },
  "triton-resource-triton_snapshot": {
    "description": "Defines triton_snapshot",
    "prefix": "tf-triton-resource-triton_snapshot",
    "body": [
      "data \"triton_image\" \"ubuntu1604\" {",
      "  name    = \"ubuntu-16.04\"",
      "  version = \"20170403\"",
      "}",
      "",
      "resource \"triton_machine\" \"test\" {",
      "  image   = \"${data.triton_image.ubuntu1604.id}\"",
      "  package = \"g4-highcpu-128M\"",
      "}",
      "",
      "resource \"triton_snapshot\" \"test\" {",
      "  name       = \"my-snapshot\"",
      "  machine_id = \"${triton_machine.test.id}\"",
      "}"
    ]
  },
  "triton-resource-triton_vlan": {
    "description": "Defines triton_vlan",
    "prefix": "tf-triton-resource-triton_vlan",
    "body": [
      "resource \"triton_vlan\" \"dmz\" {",
      "  vlan_id     = 100",
      "  name        = \"dmz\"",
      "  description = \"DMZ VLAN\"",
      "}"
    ]
  },
  "ucloud-data-db_instances": {
    "description": "Defines db_instances",
    "prefix": "tf-ucloud-data-db_instances",
    "body": [
      "data \"ucloud_db_instances\" \"example\" {}",
      "",
      "output \"first\" {",
      "  value = data.ucloud_db_instances.example.db_instances[0].id",
      "}"
    ]
  },
  "ucloud-data-disks": {
    "description": "Defines disks",
    "prefix": "tf-ucloud-data-disks",
    "body": [
      "data \"ucloud_disks\" \"example\" {}",
      "",
      "output \"first\" {",
      "  value = data.ucloud_disks.example.disks[0].id",
      "}"
    ]
  },
  "ucloud-data-eips": {
    "description": "Defines eips",
    "prefix": "tf-ucloud-data-eips",
    "body": [
      "data \"ucloud_eips\" \"example\" {}",
      "",
      "output \"first\" {",
      "  value = data.ucloud_eips.example.eips[0].ip_set[0].ip",
      "}"
    ]
  },
  "ucloud-data-images": {
    "description": "Defines images",
    "prefix": "tf-ucloud-data-images",
    "body": [
      "data \"ucloud_images\" \"example\" {",
      "  availability_zone = \"cn-bj2-02\"",
      "  image_type        = \"base\"",
      "  name_regex        = \"^CentOS 7.[1-2] 64\"",
      "}",
      "",
      "output \"first\" {",
      "  value = data.ucloud_images.example.images[0].id",
      "}"
    ]
  },
  "ucloud-data-instances": {
    "description": "Defines instances",
    "prefix": "tf-ucloud-data-instances",
    "body": [
      "data \"ucloud_instances\" \"example\" {",
      "  availability_zone = \"cn-bj2-02\"",
      "}",
      "",
      "output \"first\" {",
      "  value = data.ucloud_instances.example.instances[0].id",
      "}"
    ]
  },
  "ucloud-data-lb_attachments": {
    "description": "Defines lb_attachments",
    "prefix": "tf-ucloud-data-lb_attachments",
    "body": [
      "data \"ucloud_lb_attachments\" \"example\" {",
      "  load_balancer_id = \"ulb-xxx\"",
      "  listener_id      = \"vserver-xxx\"",
      "}",
      "",
      "output \"first\" {",
      "  value = data.ucloud_lb_attachments.example.lb_attachments[0].id",
      "}"
    ]
  },
  "ucloud-data-lb_listeners": {
    "description": "Defines lb_listeners",
    "prefix": "tf-ucloud-data-lb_listeners",
    "body": [
      "data \"ucloud_lb_listeners\" \"example\" {",
      "  load_balancer_id = \"ulb-xxx\"",
      "}",
      "",
      "output \"first\" {",
      "  value = data.ucloud_lb_listeners.example.lb_listeners[0].id",
      "}"
    ]
  },
  "ucloud-data-lb_rules": {
    "description": "Defines lb_rules",
    "prefix": "tf-ucloud-data-lb_rules",
    "body": [
      "data \"ucloud_lb_rules\" \"example\" {",
      "  load_balancer_id = \"ulb-xxx\"",
      "  listener_id      = \"vserver-xxx\"",
      "}",
      "",
      "output \"first\" {",
      "  value = data.ucloud_lb_rules.example.lb_rules[0].id",
      "}"
    ]
  },
  "ucloud-data-lb_ssls": {
    "description": "Defines lb_ssls",
    "prefix": "tf-ucloud-data-lb_ssls",
    "body": [
      "data \"ucloud_lb_ssls\" \"example\" {",
      "}",
      "",
      "output \"first\" {",
      "  value = data.ucloud_lb_ssls.example.lb_ssls[0].id",
      "}"
    ]
  },
  "ucloud-data-lbs": {
    "description": "Defines lbs",
    "prefix": "tf-ucloud-data-lbs",
    "body": [
      "data \"ucloud_lbs\" \"example\" {",
      "}",
      "",
      "output \"first\" {",
      "  value = data.ucloud_lbs.example.lbs[0].id",
      "}"
    ]
  },
  "ucloud-data-projects": {
    "description": "Defines projects",
    "prefix": "tf-ucloud-data-projects",
    "body": [
      "data \"ucloud_projects\" \"example\" {",
      "  is_finance = false",
      "}",
      "",
      "output \"first\" {",
      "  value = data.ucloud_projects.example.projects[0].id",
      "}"
    ]
  },
  "ucloud-data-security_groups": {
    "description": "Defines security_groups",
    "prefix": "tf-ucloud-data-security_groups",
    "body": [
      "data \"ucloud_security_groups\" \"example\" {}",
      "",
      "output \"first\" {",
      "  value = data.ucloud_security_groups.example.security_groups[0].id",
      "}"
    ]
  },
  "ucloud-data-subnets": {
    "description": "Defines subnets",
    "prefix": "tf-ucloud-data-subnets",
    "body": [
      "data \"ucloud_subnets\" \"example\" {",
      "  vpc_id = \"uvnet-xxx\"",
      "}",
      "",
      "output \"first\" {",
      "  value = data.ucloud_subnets.example.subnets[0].id",
      "}"
    ]
  },
  "ucloud-data-vpcs": {
    "description": "Defines vpcs",
    "prefix": "tf-ucloud-data-vpcs",
    "body": [
      "data \"ucloud_vpcs\" \"example\" {",
      "}",
      "",
      "output \"first\" {",
      "  value = data.ucloud_vpcs.example.vpcs[0].id",
      "}"
    ]
  },
  "ucloud-data-zones": {
    "description": "Defines zones",
    "prefix": "tf-ucloud-data-zones",
    "body": [
      "data \"ucloud_zones\" \"example\" {}",
      "",
      "output \"first\" {",
      "  value = data.ucloud_zones.example.zones[0].id",
      "}"
    ]
  },
  "ucloud-resource-db_instance": {
    "description": "Defines db_instance",
    "prefix": "tf-ucloud-resource-db_instance",
    "body": [
      "# Query availability zone",
      "data \"ucloud_zones\" \"default\" {",
      "}",
      "",
      "# Create database instance",
      "resource \"ucloud_db_instance\" \"master\" {",
      "c",
      "  name              = \"tf-example-db\"",
      "  instance_storage  = 20",
      "  instance_type     = \"mysql-ha-1\"",
      "  engine            = \"mysql\"",
      "  engine_version    = \"5.7\"",
      "  password          = \"2018_dbInstance\"",
      "}"
    ]
  },
  "ucloud-resource-disk": {
    "description": "Defines disk",
    "prefix": "tf-ucloud-resource-disk",
    "body": [
      "# Query availability zone",
      "data \"ucloud_zones\" \"default\" {}",
      "",
      "# Create cloud disk",
      "resource \"ucloud_disk\" \"example\" {",
      "  availability_zone = data.ucloud_zones.default.zones[0].id",
      "  name              = \"tf-example-disk\"",
      "  disk_size         = 10",
      "}"
    ]
  },
  "ucloud-resource-disk_attachment": {
    "description": "Defines disk_attachment",
    "prefix": "tf-ucloud-resource-disk_attachment",
    "body": [
      "# Query availability zone",
      "data \"ucloud_zones\" \"default\" {}",
      "",
      "# Query image",
      "data \"ucloud_images\" \"default\" {",
      "  availability_zone = data.ucloud_zones.default.zones[0].id",
      "  name_regex        = \"^CentOS 7.[1-2] 64\"",
      "  image_type        = \"base\"",
      "}",
      "",
      "# Create cloud disk",
      "resource \"ucloud_disk\" \"default\" {",
      "  availability_zone = data.ucloud_zones.default.zones[0].id",
      "  name              = \"tf-example-disk\"",
      "  disk_size         = 10",
      "}",
      "",
      "# Create a web server",
      "resource \"ucloud_instance\" \"web\" {",
      "  availability_zone = data.ucloud_zones.default.zones[0].id",
      "  instance_type     = \"n-basic-2\"",
      "",
      "  image_id      = data.ucloud_images.default.images[0].id",
      "  root_password = \"wA1234567\"",
      "",
      "  name = \"tf-example-disk\"",
      "  tag  = \"tf-example\"",
      "}",
      "",
      "# attach cloud disk to instance",
      "resource \"ucloud_disk_attachment\" \"default\" {",
      "  availability_zone = data.ucloud_zones.default.zones[0].id",
      "  disk_id           = ucloud_disk.default.id",
      "  instance_id       = ucloud_instance.web.id",
      "}"
    ]
  },
  "ucloud-resource-eip": {
    "description": "Defines eip",
    "prefix": "tf-ucloud-resource-eip",
    "body": [
      "resource \"ucloud_eip\" \"example\" {",
      "  bandwidth     = 2",
      "  charge_mode   = \"bandwidth\"",
      "  name          = \"tf-example-eip\"",
      "  tag           = \"tf-example\"",
      "  internet_type = \"bgp\"",
      "}"
    ]
  },
  "ucloud-resource-eip_association": {
    "description": "Defines eip_association",
    "prefix": "tf-ucloud-resource-eip_association",
    "body": [
      "# Query availability zone",
      "data \"ucloud_zones\" \"default\" {}",
      "",
      "# Query image",
      "data \"ucloud_images\" \"default\" {",
      "  availability_zone = data.ucloud_zones.default.zones[0].id",
      "  name_regex        = \"^CentOS 7.[1-2] 64\"",
      "  image_type        = \"base\"",
      "}",
      "",
      "# Create security group",
      "resource \"ucloud_security_group\" \"default\" {",
      "  name = \"tf-example-eip\"",
      "  tag  = \"tf-example\"",
      "",
      "  rules {",
      "    port_range = \"80\"",
      "    protocol   = \"tcp\"",
      "    cidr_block = \"0.0.0.0/0\"",
      "    policy     = \"accept\"",
      "  }",
      "}",
      "",
      "# Create an eip",
      "resource \"ucloud_eip\" \"default\" {",
      "  bandwidth     = 2",
      "  charge_mode   = \"bandwidth\"",
      "  name          = \"tf-example-eip\"",
      "  tag           = \"tf-example\"",
      "  internet_type = \"bgp\"",
      "}",
      "",
      "# Create a web server",
      "resource \"ucloud_instance\" \"web\" {",
      "  instance_type     = \"n-basic-2\"",
      "  availability_zone = data.ucloud_zones.default.zones[0].id",
      "  image_id          = data.ucloud_images.default.images[0].id",
      "",
      "  data_disk_size = 50",
      "  root_password  = \"wA1234567\"",
      "  security_group = ucloud_security_group.default.id",
      "",
      "  name = \"tf-example-eip\"",
      "  tag  = \"tf-example\"",
      "}",
      "",
      "# Bind eip to instance",
      "resource \"ucloud_eip_association\" \"default\" {",
      "  resource_id = ucloud_instance.web.id",
      "  eip_id      = ucloud_eip.default.id",
      "}"
    ]
  },
  "ucloud-resource-instance": {
    "description": "Defines instance",
    "prefix": "tf-ucloud-resource-instance",
    "body": [
      "# Query default security group",
      "data \"ucloud_security_groups\" \"default\" {",
      "  type = \"recommend_web\"",
      "}",
      "",
      "# Query image",
      "data \"ucloud_images\" \"default\" {",
      "  availability_zone = \"cn-bj2-04\"",
      "  name_regex        = \"^CentOS 6.5 64\"",
      "  image_type        = \"base\"",
      "}",
      "",
      "# Create web instance ",
      "resource \"ucloud_instance\" \"web\" {",
      "  availability_zone = \"cn-bj2-04\"",
      "  image_id          = data.ucloud_images.default.images[0].id",
      "  instance_type     = \"n-basic-2\"",
      "  root_password     = \"wA1234567\"",
      "  name              = \"tf-example-instance\"",
      "  tag               = \"tf-example\"",
      "",
      "  # the default Web Security Group that UCloud recommend to users",
      "  security_group = data.ucloud_security_groups.default.security_groups[0].id",
      "}",
      "",
      "# Create cloud disk",
      "resource \"ucloud_disk\" \"example\" {",
      "  availability_zone = \"cn-bj2-04\"",
      "  name              = \"tf-example-instance\"",
      "  disk_size         = 30",
      "}",
      "",
      "# Attach cloud disk to instance",
      "resource \"ucloud_disk_attachment\" \"example\" {",
      "  availability_zone = \"cn-bj2-04\"",
      "  disk_id           = ucloud_disk.example.id",
      "  instance_id       = ucloud_instance.web.id",
      "}"
    ]
  },
  "ucloud-resource-isolation_group": {
    "description": "Defines isolation_group",
    "prefix": "tf-ucloud-resource-isolation_group",
    "body": [
      "resource \"ucloud_isolation_group\" \"foo\" {",
      "  name   = \"tf-acc-isolation-group\"",
      "  remark = \"test\"",
      "}"
    ]
  },
  "ucloud-resource-lb": {
    "description": "Defines lb",
    "prefix": "tf-ucloud-resource-lb",
    "body": [
      "resource \"ucloud_lb\" \"web\" {",
      "  name = \"tf-example-lb\"",
      "  tag  = \"tf-example\"",
      "}"
    ]
  },
  "ucloud-resource-lb_attachment": {
    "description": "Defines lb_attachment",
    "prefix": "tf-ucloud-resource-lb_attachment",
    "body": [
      "# Query image",
      "data \"ucloud_images\" \"default\" {",
      "  availability_zone = \"cn-bj2-04\"",
      "  name_regex        = \"^CentOS 6.5 64\"",
      "  image_type        = \"base\"",
      "}",
      "",
      "# Create Load Balancer",
      "resource \"ucloud_lb\" \"web\" {",
      "  name = \"tf-example-lb\"",
      "  tag  = \"tf-example\"",
      "}",
      "",
      "# Create Load Balancer Listener with http protocol",
      "resource \"ucloud_lb_listener\" \"default\" {",
      "  load_balancer_id = ucloud_lb.web.id",
      "  protocol         = \"http\"",
      "}",
      "",
      "# Create web server",
      "resource \"ucloud_instance\" \"web\" {",
      "  instance_type     = \"n-basic-2\"",
      "  availability_zone = \"cn-bj2-04\"",
      "",
      "  root_password = \"wA1234567\"",
      "  image_id      = data.ucloud_images.default.images[0].id",
      "",
      "  name = \"tf-example-lb\"",
      "  tag  = \"tf-example\"",
      "}",
      "",
      "# Attach instances to Load Balancer",
      "resource \"ucloud_lb_attachment\" \"example\" {",
      "  load_balancer_id = ucloud_lb.web.id",
      "  listener_id      = ucloud_lb_listener.default.id",
      "  resource_id      = ucloud_instance.web.id",
      "  port             = 80",
      "}"
    ]
  },
  "ucloud-resource-lb_listener": {
    "description": "Defines lb_listener",
    "prefix": "tf-ucloud-resource-lb_listener",
    "body": [
      "resource \"ucloud_lb\" \"web\" {",
      "  name = \"tf-example-lb\"",
      "  tag  = \"tf-example\"",
      "}",
      "",
      "resource \"ucloud_lb_listener\" \"example\" {",
      "  load_balancer_id = ucloud_lb.web.id",
      "  protocol         = \"http\"",
      "}"
    ]
  },
  "ucloud-resource-lb_rule": {
    "description": "Defines lb_rule",
    "prefix": "tf-ucloud-resource-lb_rule",
    "body": [
      "data \"ucloud_images\" \"default\" {",
      "  availability_zone = \"cn-bj2-02\"",
      "  name_regex        = \"^CentOS 6.5 64\"",
      "  image_type        = \"base\"",
      "}",
      "",
      "resource \"ucloud_lb\" \"web\" {",
      "  name = \"tf-example-lb\"",
      "  tag  = \"tf-example\"",
      "}",
      "",
      "resource \"ucloud_lb_listener\" \"default\" {",
      "  load_balancer_id = ucloud_lb.web.id",
      "  protocol         = \"http\"",
      "}",
      "",
      "resource \"ucloud_instance\" \"web\" {",
      "  instance_type     = \"n-basic-2\"",
      "  availability_zone = \"cn-bj2-02\"",
      "",
      "  root_password = \"wA1234567\"",
      "  image_id      = data.ucloud_images.default.images[0].id",
      "",
      "  name = \"tf-example-lb\"",
      "  tag  = \"tf-example\"",
      "}",
      "",
      "resource \"ucloud_lb_attachment\" \"default\" {",
      "  load_balancer_id = ucloud_lb.web.id",
      "  listener_id      = ucloud_lb_listener.default.id",
      "  resource_type    = \"instance\"",
      "  resource_id      = ucloud_instance.web.id",
      "  port             = 80",
      "}",
      "",
      "resource \"ucloud_lb_rule\" \"example\" {",
      "  load_balancer_id = ucloud_lb.web.id",
      "  listener_id      = ucloud_lb_listener.default.id",
      "  backend_ids      = ucloud_lb_attachment.default.*.id",
      "  domain           = \"www.ucloud.cn\"",
      "}"
    ]
  },
  "ucloud-resource-lb_ssl": {
    "description": "Defines lb_ssl",
    "prefix": "tf-ucloud-resource-lb_ssl",
    "body": [
      "resource \"ucloud_lb_ssl\" \"default\" {",
      "  name        = \"tf-example-lb-ssl\"",
      "  private_key = file(\"private.key\")",
      "  user_cert   = file(\"user.crt\")",
      "  ca_cert     = file(\"ca.crt\")",
      "}"
    ]
  },
  "ucloud-resource-lb_ssl_attachment": {
    "description": "Defines lb_ssl_attachment",
    "prefix": "tf-ucloud-resource-lb_ssl_attachment",
    "body": [
      "resource \"ucloud_lb\" \"foo\" {",
      "  name = \"tf-example-lb-ssl-attachment\"",
      "  tag  = \"tf-example\"",
      "}",
      "",
      "resource \"ucloud_lb_listener\" \"foo\" {",
      "  name             = \"tf-example-lb-ssl-attachment\"",
      "  load_balancer_id = ucloud_lb.foo.id",
      "  protocol         = \"https\"",
      "}",
      "",
      "resource \"ucloud_lb_ssl\" \"foo\" {",
      "  name        = \"tf-example-lb-ssl-attachment\"",
      "  private_key = file(\"private.key\")",
      "  user_cert   = file(\"user.crt\")",
      "  ca_cert     = file(\"ca.crt\")",
      "}",
      "",
      "",
      "resource \"ucloud_lb_ssl_attachment\" \"foo\" {",
      "  load_balancer_id = ucloud_lb.foo.id",
      "  listener_id      = ucloud_lb_listener.foo.id",
      "  ssl_id           = ucloud_lb_ssl.foo.id",
      "}"
    ]
  },
  "ucloud-resource-memcache_instance": {
    "description": "Defines memcache_instance",
    "prefix": "tf-ucloud-resource-memcache_instance",
    "body": [
      "data \"ucloud_zones\" \"default\" {}",
      "",
      "resource \"ucloud_memcache_instance\" \"master\" {",
      "  availability_zone = data.ucloud_zones.default.zones[0].id",
      "  instance_type     = \"memcache-master-2\"",
      "",
      "  name = \"tf-example-memcache\"",
      "  tag  = \"tf-example\"",
      "}"
    ]
  },
  "ucloud-resource-redis_instance": {
    "description": "Defines redis_instance",
    "prefix": "tf-ucloud-resource-redis_instance",
    "body": [
      "data \"ucloud_zones\" \"default\" {}",
      "",
      "resource \"ucloud_redis_instance\" \"master\" {",
      "  availability_zone = data.ucloud_zones.default.zones[0].id",
      "  instance_type     = \"redis-master-2\"",
      "  password          = \"2018_Tfacc\"",
      "  engine_version    = \"4.0\"",
      "",
      "  name = \"tf-example-redis-master\"",
      "  tag  = \"tf-example\"",
      "}",
      "",
      "resource \"ucloud_redis_instance\" \"distributed\" {",
      "  availability_zone = data.ucloud_zones.default.zones[0].id",
      "  instance_type     = \"redis-distributed-16\"",
      "",
      "  name = \"tf-example-redis-distributed\"",
      "  tag  = \"tf-example\"",
      "}"
    ]
  },
  "ucloud-resource-security_group": {
    "description": "Defines security_group",
    "prefix": "tf-ucloud-resource-security_group",
    "body": [
      "resource \"ucloud_security_group\" \"example\" {",
      "  name = \"tf-example-security-group\"",
      "  tag  = \"tf-example\"",
      "",
      "  # http access from LAN",
      "  rules {",
      "    port_range = \"80\"",
      "    protocol   = \"tcp\"",
      "    cidr_block = \"192.168.0.0/16\"",
      "    policy     = \"accept\"",
      "  }",
      "",
      "  # https access from LAN",
      "  rules {",
      "    port_range = \"443\"",
      "    protocol   = \"tcp\"",
      "    cidr_block = \"192.168.0.0/16\"",
      "    policy     = \"accept\"",
      "  }",
      "}"
    ]
  },
  "ucloud-resource-subnet": {
    "description": "Defines subnet",
    "prefix": "tf-ucloud-resource-subnet",
    "body": [
      "resource \"ucloud_vpc\" \"default\" {",
      "  name = \"tf-example-vpc\"",
      "  tag  = \"tf-example\"",
      "",
      "  # vpc network",
      "  cidr_blocks = [\"192.168.0.0/16\"]",
      "}",
      "",
      "resource \"ucloud_subnet\" \"example\" {",
      "  name = \"tf-example-subnet\"",
      "  tag  = \"tf-example\"",
      "",
      "  # subnet's network must be contained by vpc network",
      "  # and a subnet must have least 8 ip addresses in it (netmask < 30).",
      "  cidr_block = \"192.168.1.0/24\"",
      "  vpc_id     = ucloud_vpc.default.ids",
      "}"
    ]
  },
  "ucloud-resource-udpn_connection": {
    "description": "Defines udpn_connection",
    "prefix": "tf-ucloud-resource-udpn_connection",
    "body": [
      "provider \"ucloud\" {",
      "  region = \"cn-bj2\"",
      "}",
      "",
      "// connect provider's region (cn-bj2) and peer region (cn-sh2)",
      "resource \"ucloud_udpn_connection\" \"example\" {",
      "  bandwidth   = 2",
      "  peer_region = \"cn-sh2\"",
      "}"
    ]
  },
  "ucloud-resource-vpc": {
    "description": "Defines vpc",
    "prefix": "tf-ucloud-resource-vpc",
    "body": [
      "resource \"ucloud_vpc\" \"example\" {",
      "  name = \"tf-example-vpc\"",
      "  tag  = \"tf-example\"",
      "",
      "  # vpc network",
      "  cidr_blocks = [\"192.168.0.0/16\"]",
      "}"
    ]
  },
  "ucloud-resource-vpc_peering_connection": {
    "description": "Defines vpc_peering_connection",
    "prefix": "tf-ucloud-resource-vpc_peering_connection",
    "body": [
      "resource \"ucloud_vpc\" \"foo\" {",
      "  name        = \"tf-example-vpc-01\"",
      "  tag         = \"tf-example\"",
      "  cidr_blocks = [\"192.168.0.0/16\"]",
      "}",
      "",
      "resource \"ucloud_vpc\" \"bar\" {",
      "  name        = \"tf-example-vpc-02\"",
      "  tag         = \"tf-example\"",
      "  cidr_blocks = [\"10.10.0.0/16\"]",
      "}",
      "",
      "resource \"ucloud_vpc_peering_connection\" \"connection\" {",
      "  vpc_id      = ucloud_vpc.foo.id",
      "  peer_vpc_id = ucloud_vpc.bar.id",
      "}"
    ]
  },
  "ultradns-resource-dirpool": {
    "description": "Defines dirpool",
    "prefix": "tf-ultradns-resource-dirpool",
    "body": [
      "# Create a Directional Controller pool",
      "resource \"ultradns_dirpool\" \"pool\" {",
      "  zone        = \"${var.ultradns_domain}\"",
      "  name        = \"terraform-dirpool\"",
      "  ttl         = 300",
      "  description = \"Minimal DirPool\"",
      "",
      "  rdata {",
      "    host = \"192.168.0.10\"",
      "  }",
      "}"
    ]
  },
  "ultradns-resource-probe_http": {
    "description": "Defines probe_http",
    "prefix": "tf-ultradns-resource-probe_http",
    "body": [
      "resource \"ultradns_probe_http\" \"probe\" {",
      "  zone        = \"${ultradns_tcpool.pool.zone}\"",
      "  name        = \"${ultradns_tcpool.pool.name}\"",
      "  pool_record = \"10.2.1.1\"",
      "",
      "  agents = [\"DALLAS\", \"AMSTERDAM\"]",
      "",
      "  interval  = \"ONE_MINUTE\"",
      "  threshold = 1",
      "",
      "  http_probe {",
      "    transaction {",
      "      method           = \"POST\"",
      "      url              = \"http://localhost/index\"",
      "      transmitted_data = \"{}\"",
      "      follow_redirects = true",
      "",
      "      limit {",
      "        name = \"run\"",
      "",
      "        warning  = 1",
      "        critical = 2",
      "        fail     = 3",
      "      }",
      "",
      "      limit {",
      "        name = \"avgConnect\"",
      "",
      "        warning  = 4",
      "        critical = 5",
      "        fail     = 6",
      "      }",
      "",
      "      limit {",
      "        name = \"avgRun\"",
      "",
      "        warning  = 7",
      "        critical = 8",
      "        fail     = 9",
      "      }",
      "",
      "      limit {",
      "        name = \"connect\"",
      "",
      "        warning  = 10",
      "        critical = 11",
      "        fail     = 12",
      "      }",
      "    }",
      "",
      "    total_limits {",
      "      warning  = 13",
      "      critical = 14",
      "      fail     = 15",
      "    }",
      "  }",
      "}"
    ]
  },
  "ultradns-resource-probe_ping": {
    "description": "Defines probe_ping",
    "prefix": "tf-ultradns-resource-probe_ping",
    "body": [
      "resource \"ultradns_probe_ping\" \"probe\" {",
      "  zone        = \"${ultradns_tcpool.pool.zone}\"",
      "  name        = \"${ultradns_tcpool.pool.name}\"",
      "  pool_record = \"10.3.0.1\"",
      "",
      "  agents = [\"DALLAS\", \"AMSTERDAM\"]",
      "",
      "  interval  = \"ONE_MINUTE\"",
      "  threshold = 1",
      "",
      "  ping_probe {",
      "    packets     = 15",
      "    packet_size = 56",
      "",
      "    limit {",
      "      name     = \"lossPercent\"",
      "      warning  = 1",
      "      critical = 2",
      "      fail     = 3",
      "    }",
      "",
      "    limit {",
      "      name     = \"total\"",
      "      warning  = 2",
      "      critical = 3",
      "      fail     = 4",
      "    }",
      "  }",
      "}"
    ]
  },
  "ultradns-resource-rdpool": {
    "description": "Defines rdpool",
    "prefix": "tf-ultradns-resource-rdpool",
    "body": [
      "# Create a Resource Distribution pool",
      "",
      "resource \"ultradns_rdpool\" \"pool\" {",
      "  zone        = \"${var.ultradns_domain}\"",
      "  name        = \"terraform-rdpool\"",
      "  ttl         = 600",
      "  description = \"Example RD Pool\"",
      "  order       = \"ROUND_ROBIN\"",
      "  rdata       = [ \"192.168.0.10\", \"192.168.0.11\" ]",
      "}"
    ]
  },
  "ultradns-resource-record": {
    "description": "Defines record",
    "prefix": "tf-ultradns-resource-record",
    "body": [
      "# Add a record to the domain",
      "resource \"ultradns_record\" \"foobar\" {",
      "  zone  = \"${var.ultradns_domain}\"",
      "  name  = \"terraform\"",
      "  rdata = [\"192.168.0.11\"]",
      "  type  = \"A\"",
      "  ttl   = 3600",
      "}"
    ]
  },
  "ultradns-resource-tcpool": {
    "description": "Defines tcpool",
    "prefix": "tf-ultradns-resource-tcpool",
    "body": [
      "# Create a Traffic Controller pool",
      "resource \"ultradns_tcpool\" \"pool\" {",
      "  zone        = \"${var.ultradns_domain}\"",
      "  name        = \"terraform-tcpool\"",
      "  ttl         = 300",
      "  description = \"Minimal TC Pool\"",
      "",
      "  rdata {",
      "    host = \"192.168.0.10\"",
      "  }",
      "}"
    ]
  },
  "vault-data-approle_auth_backend_role_id": {
    "description": "Defines approle_auth_backend_role_id",
    "prefix": "tf-vault-data-approle_auth_backend_role_id",
    "body": [
      "data \"vault_approle_auth_backend_role_id\" \"role\" {",
      "  backend   = \"my-approle-backend\"",
      "  role_name = \"my-role\"",
      "}",
      "",
      "output \"role-id\" {",
      "  value = \"${data.vault_approle_auth_backend_role_id.role.role_id}\"",
      "}"
    ]
  },
  "vault-data-aws_access_credentials": {
    "description": "Defines aws_access_credentials",
    "prefix": "tf-vault-data-aws_access_credentials",
    "body": [
      "resource \"vault_aws_secret_backend\" \"aws\" {",
      "  access_key = \"AKIA.....\"",
      "  secret_key = \"SECRETKEYFROMAWS\"",
      "}",
      "",
      "resource \"vault_aws_secret_backend_role\" \"role\" {",
      "  backend = \"${vault_aws_secret_backend.aws.path}\"",
      "  name    = \"test\"",
      "",
      "  policy = <<EOT",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Effect\": \"Allow\",",
      "      \"Action\": \"iam:*\",",
      "      \"Resource\": \"*\"",
      "    }",
      "  ]",
      "}",
      "EOT",
      "}",
      "",
      "# generally, these blocks would be in a different module",
      "data \"vault_aws_access_credentials\" \"creds\" {",
      "  backend = \"${vault_aws_secret_backend.aws.path}\"",
      "  role    = \"${vault_aws_secret_backend_role.role.name}\"",
      "}",
      "",
      "provider \"aws\" {",
      "  access_key = \"${data.vault_aws_access_credentials.creds.access_key}\"",
      "  secret_key = \"${data.vault_aws_access_credentials.creds.secret_key}\"",
      "}"
    ]
  },
  "vault-data-generic_secret": {
    "description": "Defines generic_secret",
    "prefix": "tf-vault-data-generic_secret",
    "body": [
      "data \"vault_generic_secret\" \"rundeck_auth\" {",
      "  path = \"secret/rundeck_auth\"",
      "}",
      "",
      "# Rundeck Provider, for example",
      "# For this example, in Vault there is a key named \"auth_token\" and the value is the token we need to keep secret.",
      "# In general usage, replace \"auth_token\" with the key you wish to extract from Vault. ",
      "",
      "provider \"rundeck\" {",
      "  url        = \"http://rundeck.example.com/\"",
      "  auth_token = \"${data.vault_generic_secret.rundeck_auth.data[\"auth_token\"]}\"",
      "}"
    ]
  },
  "vault-data-kubernetes_auth_backend_config": {
    "description": "Defines kubernetes_auth_backend_config",
    "prefix": "tf-vault-data-kubernetes_auth_backend_config",
    "body": [
      "data \"vault_kubernetes_auth_backend_config\" \"config\" {",
      "  backend = \"my-kubernetes-backend\"",
      "}",
      "",
      "output \"token_reviewer_jwt\" {",
      "  value = \"${data.vault_kubernetes_auth_backend_config.config.token_reviewer_jwt}\"",
      "}"
    ]
  },
  "vault-data-kubernetes_auth_backend_role": {
    "description": "Defines kubernetes_auth_backend_role",
    "prefix": "tf-vault-data-kubernetes_auth_backend_role",
    "body": [
      "data \"vault_kubernetes_auth_backend_role\" \"role\" {",
      "  backend   = \"my-kubernetes-backend\"",
      "  role_name = \"my-role\"",
      "}",
      "",
      "output \"policies\" {",
      "  value = \"${data.vault_kubernetes_auth_backend_role.role.policies}\"",
      "}"
    ]
  },
  "vault-data-policy_document": {
    "description": "Defines policy_document",
    "prefix": "tf-vault-data-policy_document",
    "body": [
      "data \"vault_policy_document\" \"example\" {",
      "  rule {",
      "    path         = \"secret/*\"",
      "    capabilities = [\"create\", \"read\", \"update\", \"delete\", \"list\"]",
      "    description  = \"allow all on secrets\"",
      "  }",
      "}",
      "",
      "resource \"vault_policy\" \"example\" {",
      "  name   = \"example_policy\"",
      "  policy = \"${data.vault_policy_document.example.hcl}\"",
      "}"
    ]
  },
  "vault-resource-approle_auth_backend_login": {
    "description": "Defines approle_auth_backend_login",
    "prefix": "tf-vault-resource-approle_auth_backend_login",
    "body": [
      "resource \"vault_auth_backend\" \"approle\" {",
      "  type = \"approle\"",
      "}",
      "",
      "resource \"vault_approle_auth_backend_role\" \"example\" {",
      "  backend   = \"${vault_auth_backend.approle.path}\"",
      "  role_name = \"test-role\"",
      "  policies  = [\"default\", \"dev\", \"prod\"]",
      "}",
      "",
      "resource \"vault_approle_auth_backend_role_secret_id\" \"id\" {",
      "  backend   = \"${vault_auth_backend.approle.path}\"",
      "  role_name = \"${vault_approle_auth_backend_role.example.role_name}\"",
      "}",
      "",
      "resource \"vault_approle_auth_backend_login\" \"login\" {",
      "  backend   = \"${vault_auth_backend.approle.path}\"",
      "  role_id   = \"${vault_approle_auth_backend_role.example.role_id}\"",
      "  secret_id = \"${vault_approle_auth_backend_role_secret_id.id.secret_id}\"",
      "}"
    ]
  },
  "vault-resource-approle_auth_backend_role": {
    "description": "Defines approle_auth_backend_role",
    "prefix": "tf-vault-resource-approle_auth_backend_role",
    "body": [
      "resource \"vault_auth_backend\" \"approle\" {",
      "  type = \"approle\"",
      "}",
      "",
      "resource \"vault_approle_auth_backend_role\" \"example\" {",
      "  backend   = \"${vault_auth_backend.approle.path}\"",
      "  role_name = \"test-role\"",
      "  policies  = [\"default\", \"dev\", \"prod\"]",
      "}"
    ]
  },
  "vault-resource-approle_auth_backend_role_secret_id": {
    "description": "Defines approle_auth_backend_role_secret_id",
    "prefix": "tf-vault-resource-approle_auth_backend_role_secret_id",
    "body": [
      "resource \"vault_auth_backend\" \"approle\" {",
      "  type = \"approle\"",
      "}",
      "",
      "resource \"vault_approle_auth_backend_role\" \"example\" {",
      "  backend   = \"${vault_auth_backend.approle.path}\"",
      "  role_name = \"test-role\"",
      "  policies  = [\"default\", \"dev\", \"prod\"]",
      "}",
      "",
      "resource \"vault_approle_auth_backend_role_secret_id\" \"id\" {",
      "  backend   = \"${vault_auth_backend.approle.path}\"",
      "  role_name = \"${vault_approle_auth_backend_role.example.role_name}\"",
      "",
      "  metadata = <<EOT",
      "{",
      "  \"hello\": \"world\"",
      "}",
      "EOT",
      "}"
    ]
  },
  "vault-resource-audit": {
    "description": "Defines audit",
    "prefix": "tf-vault-resource-audit",
    "body": [
      "resource \"vault_audit\" \"test\" {",
      "  type = \"file\"",
      "",
      "  options = {",
      "    file_path = \"C:/temp/audit.txt\"",
      "  }",
      "}"
    ]
  },
  "vault-resource-auth_backend": {
    "description": "Defines auth_backend",
    "prefix": "tf-vault-resource-auth_backend",
    "body": [
      "resource \"vault_auth_backend\" \"example\" {",
      "  type = \"github\"",
      "}"
    ]
  },
  "vault-resource-aws_auth_backend_cert": {
    "description": "Defines aws_auth_backend_cert",
    "prefix": "tf-vault-resource-aws_auth_backend_cert",
    "body": [
      "resource \"vault_auth_backend\" \"aws\" {",
      "  type = \"aws\"",
      "}",
      "",
      "resource \"vault_aws_auth_backend_cert\" \"cert\" {",
      "  backend         = \"${vault_auth_backend.aws.path}\"",
      "  cert_name       = \"my-cert\"",
      "  aws_public_cert = \"${file(\"${path.module}/aws_public_key.crt})\"",
      "  type            = \"pkcs7\"",
      "}"
    ]
  },
  "vault-resource-aws_auth_backend_client": {
    "description": "Defines aws_auth_backend_client",
    "prefix": "tf-vault-resource-aws_auth_backend_client",
    "body": [
      "resource \"vault_auth_backend\" \"example\" {",
      "  type = \"aws\"",
      "}",
      "",
      "resource \"vault_aws_auth_backend_client\" \"example\" {",
      "  backend    = \"${vault_auth_backend.example.path}\"",
      "  access_key = \"INSERT_AWS_ACCESS_KEY\"",
      "  secret_key = \"INSERT_AWS_SECRET_KEY\"",
      "}"
    ]
  },
  "vault-resource-aws_auth_backend_identity_whitelist": {
    "description": "Defines aws_auth_backend_identity_whitelist",
    "prefix": "tf-vault-resource-aws_auth_backend_identity_whitelist",
    "body": [
      "resource \"vault_auth_backend\" \"example\" {",
      "  type = \"aws\"",
      "}",
      "",
      "resource \"vault_aws_auth_backend_identity_whitelist\" \"example\" {",
      "  backend       = \"${vault_auth_backend.example.path}\"",
      "  safety_buffer = 3600",
      "}"
    ]
  },
  "vault-resource-aws_auth_backend_login": {
    "description": "Defines aws_auth_backend_login",
    "prefix": "tf-vault-resource-aws_auth_backend_login",
    "body": [
      "resource \"vault_auth_backend\" \"aws\" {",
      "  type = \"aws\"",
      "}",
      "",
      "resource \"vault_aws_auth_backend_client\" \"example\" {",
      "  backend    = \"${vault_auth_backend.aws.path}\"",
      "  access_key = \"123456789012\"",
      "  secret_key = \"AWSSECRETKEYGOESHERE\"",
      "}",
      "",
      "resource \"vault_aws_auth_backend_role\" \"example\" {",
      "  backend                        = \"${vault_auth_backend.aws.path}\"",
      "  role                           = \"test-role\"",
      "  auth_type                      = \"ec2\"",
      "  bound_ami_id                   = \"ami-8c1be5f6\"",
      "  bound_account_id               = \"123456789012\"",
      "  bound_vpc_id                   = \"vpc-b61106d4\"",
      "  bound_subnet_id                = \"vpc-133128f1\"",
      "  bound_iam_instance_profile_arn = \"arn:aws:iam::123456789012:instance-profile/MyProfile\"",
      "  ttl                            = 60",
      "  max_ttl                        = 120",
      "  policies                       = [\"default\", \"dev\", \"prod\"]",
      "",
      "  depends_on                     = [\"vault_aws_auth_backend_client.example\"]",
      "}",
      "",
      "resource \"vault_aws_auth_backend_login\" \"example\" {",
      "  backend   = \"${vault_auth_backend.example.path}\"",
      "  role      = \"${vault_aws_auth_backend_role.example.role}\"",
      "  identity  = \"BASE64ENCODEDIDENTITYDOCUMENT\"",
      "  signature = \"BASE64ENCODEDSHA256IDENTITYDOCUMENTSIGNATURE\"",
      "}"
    ]
  },
  "vault-resource-aws_auth_backend_role": {
    "description": "Defines aws_auth_backend_role",
    "prefix": "tf-vault-resource-aws_auth_backend_role",
    "body": [
      "resource \"vault_auth_backend\" \"aws\" {",
      "  type = \"aws\"",
      "}",
      "",
      "resource \"vault_aws_auth_backend_role\" \"example\" {",
      "  backend                         = \"${vault_auth_backend.aws.path}\"",
      "  role                            = \"test-role\"",
      "  auth_type                       = \"iam\"",
      "  bound_ami_ids                   = [\"ami-8c1be5f6\"]",
      "  bound_account_ids               = [\"123456789012\"]",
      "  bound_vpc_ids                   = [\"vpc-b61106d4\"]",
      "  bound_subnet_ids                = [\"vpc-133128f1\"]",
      "  bound_iam_role_arns             = [\"arn:aws:iam::123456789012:role/MyRole\"]",
      "  bound_iam_instance_profile_arns = [\"arn:aws:iam::123456789012:instance-profile/MyProfile\"]",
      "  inferred_entity_type            = \"ec2_instance\"",
      "  inferred_aws_region             = \"us-east-1\"",
      "  ttl                             = 60",
      "  max_ttl                         = 120",
      "  policies                        = [\"default\", \"dev\", \"prod\"]",
      "}"
    ]
  },
  "vault-resource-aws_auth_backend_role_tag": {
    "description": "Defines aws_auth_backend_role_tag",
    "prefix": "tf-vault-resource-aws_auth_backend_role_tag",
    "body": [
      "resource \"vault_auth_backend\" \"aws\" {",
      "  path = \"%s\"",
      "  type = \"aws\"",
      "}",
      "",
      "resource \"vault_aws_auth_backend_role\" \"role\" {",
      "  backend          = \"${vault_auth_backend.aws.path}\"",
      "  role             = \"%s\"",
      "  auth_type        = \"ec2\"",
      "  bound_account_id = \"123456789012\"",
      "  policies         = [\"dev\", \"prod\", \"qa\", \"test\"]",
      "  role_tag         = \"VaultRoleTag\"",
      "}",
      "",
      "resource \"vault_aws_auth_backend_role_tag\" \"test\" {",
      "  backend     = \"${vault_auth_backend.aws.path}\"",
      "  role        = \"${vault_aws_auth_backend_role.role.role}\"",
      "  policies    = [\"prod\", \"dev\", \"test\"]",
      "  max_ttl     = \"1h\"",
      "  instance_id = \"i-1234567\"",
      "}"
    ]
  },
  "vault-resource-aws_auth_backend_roletag_blacklist": {
    "description": "Defines aws_auth_backend_roletag_blacklist",
    "prefix": "tf-vault-resource-aws_auth_backend_roletag_blacklist",
    "body": [
      "resource \"vault_auth_backend\" \"example\" {",
      "  type = \"aws\"",
      "}",
      "",
      "resource \"vault_aws_auth_backend_roletag_blacklist\" \"example\" {",
      "  backend       = \"${vault_auth_backend.example.path}\"",
      "  safety_buffer = 360",
      "}"
    ]
  },
  "vault-resource-aws_auth_backend_sts_role": {
    "description": "Defines aws_auth_backend_sts_role",
    "prefix": "tf-vault-resource-aws_auth_backend_sts_role",
    "body": [
      "resource \"vault_auth_backend\" \"aws\" {",
      "  type = \"aws\"",
      "}",
      "",
      "resource \"vault_aws_auth_backend_sts_role\" \"role\" {",
      "  backend    = \"${vault_auth_backend.aws.path}\"",
      "  account_id = \"1234567890\"",
      "  sts_role   = \"arn:aws:iam::1234567890:role/my-role\"",
      "}"
    ]
  },
  "vault-resource-aws_secret_backend": {
    "description": "Defines aws_secret_backend",
    "prefix": "tf-vault-resource-aws_secret_backend",
    "body": [
      "resource \"vault_aws_secret_backend\" \"aws\" {",
      "  access_key = \"AKIA.....\"",
      "  secret_key = \"AWS secret key\"",
      "}"
    ]
  },
  "vault-resource-aws_secret_backend_role": {
    "description": "Defines aws_secret_backend_role",
    "prefix": "tf-vault-resource-aws_secret_backend_role",
    "body": [
      "resource \"vault_aws_secret_backend\" \"aws\" {",
      "  access_key = \"AKIA.....\"",
      "  secret_key = \"AWS secret key\"",
      "}",
      "",
      "resource \"vault_aws_secret_backend_role\" \"role\" {",
      "  backend = \"${vault_aws_secret_backend.aws.path}\"",
      "  name    = \"deploy\"",
      "  credential_type = \"assumed_role\"",
      "",
      "  policy_document = <<EOT",
      "{",
      "  \"Version\": \"2012-10-17\",",
      "  \"Statement\": [",
      "    {",
      "      \"Effect\": \"Allow\",",
      "      \"Action\": \"iam:*\",",
      "      \"Resource\": \"*\"",
      "    }",
      "  ]",
      "}",
      "EOT",
      "}"
    ]
  },
  "vault-resource-azure_auth_backend_config": {
    "description": "Defines azure_auth_backend_config",
    "prefix": "tf-vault-resource-azure_auth_backend_config",
    "body": [
      "resource \"vault_auth_backend\" \"example\" {",
      "  type = \"azure\"",
      "}",
      "",
      "resource \"vault_azure_auth_backend_config\" \"example\" {",
      "  backend       = \"${vault_auth_backend.example.path}\"",
      "  tenant_id     = \"11111111-2222-3333-4444-555555555555\"",
      "  client_id     = \"11111111-2222-3333-4444-555555555555\"",
      "  client_secret = \"01234567890123456789",
      "  resource      = \"https://vault.hashicorp.com\"",
      "}"
    ]
  },
  "vault-resource-azure_auth_backend_role": {
    "description": "Defines azure_auth_backend_role",
    "prefix": "tf-vault-resource-azure_auth_backend_role",
    "body": [
      "resource \"vault_auth_backend\" \"azure\" {",
      "  type = \"azure\"",
      "}",
      "",
      "resource \"vault_azure_auth_backend_role\" \"example\" {",
      "  backend                         = \"${vault_auth_backend.azure.path}\"",
      "  role                            = \"test-role\"",
      "  bound_subscription_ids          = [\"11111111-2222-3333-4444-555555555555\"]",
      "  bound_resource_groups           = [\"123456789012\"]",
      "  ttl                             = 60",
      "  max_ttl                         = 120",
      "  policies                        = [\"default\", \"dev\", \"prod\"]",
      "}"
    ]
  },
  "vault-resource-cert_auth_backend_role": {
    "description": "Defines cert_auth_backend_role",
    "prefix": "tf-vault-resource-cert_auth_backend_role",
    "body": [
      "resource \"vault_auth_backend\" \"cert\" {",
      "    path = \"cert\"",
      "    type = \"cert\"",
      "}",
      "",
      "resource \"vault_cert_auth_backend_role\" \"cert\" {",
      "    name          = \"foo\"",
      "    certificate   = \"${file(\"/path/to/certs/ca-cert.pem\")}\"",
      "    backend       = \"${vault_auth_backend.cert.path}\"",
      "    allowed_names = [\"foo.example.org\", \"baz.example.org\"]",
      "    ttl           = 300",
      "    max_ttl       = 600",
      "    policies      = [\"foo\"]",
      "}"
    ]
  },
  "vault-resource-consul_secret_backend": {
    "description": "Defines consul_secret_backend",
    "prefix": "tf-vault-resource-consul_secret_backend",
    "body": [
      "resource \"vault_consul_secret_backend\" \"test\" {",
      "  path        = \"consul\"",
      "  description = \"Manages the Consul backend\"",
      "",
      "  address = \"127.0.0.1:8500\"",
      "  token   = \"4240861b-ce3d-8530-115a-521ff070dd29\"",
      "}"
    ]
  },
  "vault-resource-database_secret_backend_connection": {
    "description": "Defines database_secret_backend_connection",
    "prefix": "tf-vault-resource-database_secret_backend_connection",
    "body": [
      "resource \"vault_mount\" \"db\" {",
      "  path = \"postgres\"",
      "  type = \"database\"",
      "}",
      "",
      "resource \"vault_database_secret_backend_connection\" \"postgres\" {",
      "  backend       = \"${vault_mount.db.path}\"",
      "  name          = \"postgres\"",
      "  allowed_roles = [\"dev\", \"prod\"]",
      "",
      "  postgresql {",
      "    connection_url = \"postgres://username:password@host:port/database\"",
      "  }",
      "}"
    ]
  },
  "vault-resource-database_secret_backend_role": {
    "description": "Defines database_secret_backend_role",
    "prefix": "tf-vault-resource-database_secret_backend_role",
    "body": [
      "resource \"vault_mount\" \"db\" {",
      "  path = \"postgres\"",
      "  type = \"database\"",
      "}",
      "",
      "resource \"vault_database_secret_backend_connection\" \"postgres\" {",
      "  backend       = \"${vault_mount.db.path}\"",
      "  name          = \"postgres\"",
      "  allowed_roles = [\"dev\", \"prod\"]",
      "",
      "  postgresql {",
      "    connection_url = \"postgres://username:password@host:port/database\"",
      "  }",
      "}",
      "",
      "resource \"vault_database_secret_backend_role\" \"role\" {",
      "  backend             = \"${vault_mount.db.path}\"",
      "  name                = \"my-role\"",
      "  db_name             = \"${vault_database_secret_backend_connection.postgres.name}\"",
      "  creation_statements = \"CREATE ROLE \\\"{{name}}\\\" WITH LOGIN PASSWORD '{{password}}' VALID UNTIL '{{expiration}}';\"",
      "}"
    ]
  },
  "vault-resource-egp_policy": {
    "description": "Defines egp_policy",
    "prefix": "tf-vault-resource-egp_policy",
    "body": [
      "resource \"vault_egp_policy\" \"allow-all\" {",
      "  name = \"allow-all\"",
      "  paths = [\"*\"]",
      "  enforcement_level = \"soft-mandatory\"",
      "",
      "  policy = <<EOT",
      "main = rule {",
      "  true",
      "}",
      "EOT",
      "}"
    ]
  },
  "vault-resource-gcp_auth_backend": {
    "description": "Defines gcp_auth_backend",
    "prefix": "tf-vault-resource-gcp_auth_backend",
    "body": [
      "resource \"vault_gcp_auth_backend\" \"gcp\" {",
      "    credentials  = \"${file(\"vault-gcp-credentials.json\")}\"",
      "}"
    ]
  },
  "vault-resource-gcp_auth_backend_role": {
    "description": "Defines gcp_auth_backend_role",
    "prefix": "tf-vault-resource-gcp_auth_backend_role",
    "body": [
      "resource \"vault_auth_backend\" \"gcp\" {",
      "    path = \"gcp\"",
      "    type = \"gcp\"",
      "}",
      "",
      "resource \"vault_gcp_auth_backend_role\" \"gcp\" {",
      "    backend                = \"${vault_auth_backend.cert.path}\"",
      "    project_id             = \"foo-bar-baz\"",
      "    bound_service_accounts = [\"database-server@foo-bar-baz.iam.gserviceaccount.com\"]",
      "    policies               = [\"database-server\"]",
      "",
      "}"
    ]
  },
  "vault-resource-gcp_secret_backend": {
    "description": "Defines gcp_secret_backend",
    "prefix": "tf-vault-resource-gcp_secret_backend",
    "body": [
      "resource \"vault_gcp_secret_backend\" \"gcp\" {",
      "  credentials = \"${file(\"credentials.json\")}\"",
      "}"
    ]
  },
  "vault-resource-gcp_secret_roleset": {
    "description": "Defines gcp_secret_roleset",
    "prefix": "tf-vault-resource-gcp_secret_roleset",
    "body": [
      "locals {",
      "  project = \"my-awesome-project\"",
      "}",
      "",
      "resource \"vault_gcp_secret_backend\" \"gcp\" {",
      "  credentials = \"${file(\"credentials.json\")}\"",
      "}",
      "",
      "resource \"vault_gcp_secret_roleset\" \"agent\" {",
      "  backend      = \"${vault_gcp_secret_backend.gcp.path}\"",
      "  roleset      = \"project_viewer\"",
      "  secret_type  = \"access_token\"",
      "  project      = \"${local.project}\"",
      "  token_scopes = [\"https://www.googleapis.com/auth/cloud-platform\"]",
      "",
      "  binding {",
      "    resource = \"//cloudresourcemanager.googleapis.com/projects/${local.project}\"",
      "",
      "    roles = [",
      "      \"roles/viewer\",",
      "    ]",
      "  }",
      "}"
    ]
  },
  "vault-resource-generic_endpoint": {
    "description": "Defines generic_endpoint",
    "prefix": "tf-vault-resource-generic_endpoint",
    "body": [
      "resource \"vault_auth_backend\" \"userpass\" {",
      "  type = \"userpass\"",
      "}",
      "",
      "resource \"vault_generic_endpoint\" \"u1\" {",
      "  depends_on           = [\"vault_auth_backend.userpass\"]",
      "  path                 = \"auth/userpass/users/u1\"",
      "  ignore_absent_fields = true",
      "",
      "  data_json = <<EOT",
      "{",
      "  \"policies\": [\"p1\"],",
      "  \"password\": \"changeme\"",
      "}",
      "EOT",
      "}",
      "",
      "resource \"vault_generic_endpoint\" \"u1_token\" {",
      "  depends_on     = [\"vault_generic_endpoint.u1\"]",
      "  path           = \"auth/userpass/login/u1\"",
      "  disable_read   = true",
      "  disable_delete = true",
      "",
      "  data_json = <<EOT",
      "{",
      "  \"password\": \"changeme\"",
      "}",
      "EOT",
      "}",
      "",
      "resource \"vault_generic_endpoint\" \"u1_entity\" {",
      "  depends_on           = [\"vault_generic_endpoint.u1_token\"]",
      "  disable_read         = true",
      "  disable_delete       = true",
      "  path                 = \"identity/lookup/entity\"",
      "  ignore_absent_fields = true",
      "  write_fields         = [\"id\"]",
      "",
      "  data_json = <<EOT",
      "{",
      "  \"alias_name\": \"u1\",",
      "  \"alias_mount_accessor\": \"${vault_auth_backend.userpass.accessor}\"",
      "}",
      "EOT",
      "}",
      "",
      "output \"u1_id\" {",
      "  value = \"${vault_generic_endpoint.u1_entity.write_data[\"id\"]}\"",
      "}"
    ]
  },
  "vault-resource-generic_secret": {
    "description": "Defines generic_secret",
    "prefix": "tf-vault-resource-generic_secret",
    "body": [
      "resource \"vault_generic_secret\" \"example\" {",
      "  path = \"secret/foo\"",
      "",
      "  data_json = <<EOT",
      "{",
      "  \"foo\":   \"bar\",",
      "  \"pizza\": \"cheese\"",
      "}",
      "EOT",
      "}"
    ]
  },
  "vault-resource-github_auth_backend": {
    "description": "Defines github_auth_backend",
    "prefix": "tf-vault-resource-github_auth_backend",
    "body": [
      "resource \"vault_github_auth_backend\" \"example\" {",
      "  organization = \"myorg\"",
      "}"
    ]
  },
  "vault-resource-github_team": {
    "description": "Defines github_team",
    "prefix": "tf-vault-resource-github_team",
    "body": [
      "resource \"vault_github_auth_backend\" \"example\" {",
      "  organization = \"myorg\"",
      "}",
      "",
      "resource \"vault_github_team\" \"tf_devs\" {",
      "  backend = \"${vault_github_auth_backend.example.id}\"",
      "  team = \"terraform-developers\"",
      "  policies = [\"developer\", \"read-only\"]",
      "}"
    ]
  },
  "vault-resource-github_user": {
    "description": "Defines github_user",
    "prefix": "tf-vault-resource-github_user",
    "body": [
      "resource \"vault_github_auth_backend\" \"example\" {",
      "  organization = \"myorg\"",
      "}",
      "",
      "resource \"vault_github_user\" \"tf_user\" {",
      "  backend = \"${vault_github_auth_backend.example.id}\"",
      "  user = \"john.doe\"",
      "  policies = [\"developer\", \"read-only\"]",
      "}"
    ]
  },
  "vault-resource-identity_entity": {
    "description": "Defines identity_entity",
    "prefix": "tf-vault-resource-identity_entity",
    "body": [
      "resource \"vault_identity_entity\" \"test\" {",
      "  name      = \"tester1\"",
      "  policies  = [\"test\"]",
      "  metadata  = {",
      "    foo = \"bar\"",
      "  }",
      "}"
    ]
  },
  "vault-resource-identity_entity_alias": {
    "description": "Defines identity_entity_alias",
    "prefix": "tf-vault-resource-identity_entity_alias",
    "body": [
      "resource \"vault_identity_entity_alias\" \"test\" {",
      "  name            = \"user_1\"",
      "  mount_accessor  = \"token_1f2bd5\"",
      "  canonical_id    = \"49877D63-07AD-4B85-BDA8-B61626C477E8\"",
      "}"
    ]
  },
  "vault-resource-identity_group": {
    "description": "Defines identity_group",
    "prefix": "tf-vault-resource-identity_group",
    "body": [
      "resource \"vault_identity_group\" \"internal\" {",
      "  name     = \"internal\"",
      "  type     = \"internal\"",
      "  policies = [\"dev\", \"test\"]",
      "",
      "  metadata = {",
      "    version = \"2\"",
      "  }",
      "}"
    ]
  },
  "vault-resource-identity_group_alias": {
    "description": "Defines identity_group_alias",
    "prefix": "tf-vault-resource-identity_group_alias",
    "body": [
      "resource \"vault_identity_group\" \"group\" {",
      "  name     = \"test\"",
      "  type     = \"external\"",
      "  policies = [\"test\"]",
      "}",
      "",
      "resource \"vault_auth_backend\" \"github\" {",
      "  type = \"github\"",
      "  path = \"github\"",
      "}",
      "",
      "resource \"vault_identity_group_alias\" \"group-alias\" {",
      "  name           = \"Github_Team_Slug\"",
      "  mount_accessor = \"${vault_auth_backend.github.accessor}\"",
      "  canonical_id   = \"${vault_identity_group.group.id}\"",
      "}"
    ]
  },
  "vault-resource-jwt_auth_backend": {
    "description": "Defines jwt_auth_backend",
    "prefix": "tf-vault-resource-jwt_auth_backend",
    "body": [
      "resource \"vault_jwt_auth_backend\" \"example\" {",
      "    description  = \"Demonstration of the Terraform JWT auth backend\"",
      "    path = \"jwt\"",
      "    oidc_discovery_url = \"https://myco.auth0.com/\"",
      "    bound_issuer = \"https://myco.auth0.com/\"",
      "}"
    ]
  },
  "vault-resource-jwt_auth_backend_role": {
    "description": "Defines jwt_auth_backend_role",
    "prefix": "tf-vault-resource-jwt_auth_backend_role",
    "body": [
      "resource \"vault_jwt_auth_backend\" \"jwt\" {",
      "  path = \"jwt\"",
      "}",
      "",
      "resource \"vault_jwt_auth_backend_role\" \"example\" {",
      "  backend   = \"${vault_jwt_auth_backend.jwt.path}\"",
      "  role_name = \"test-role\"",
      "  policies  = [\"default\", \"dev\", \"prod\"]",
      "",
      "  bound_audiences = [\"https://myco.test\"]",
      "  user_claim      = \"https://vault/user\"",
      "  role_type = \"jwt\"",
      "}"
    ]
  },
  "vault-resource-kubernetes_auth_backend_config": {
    "description": "Defines kubernetes_auth_backend_config",
    "prefix": "tf-vault-resource-kubernetes_auth_backend_config",
    "body": [
      "resource \"vault_auth_backend\" \"kubernetes\" {",
      "  type = \"kubernetes\"",
      "}",
      "",
      "resource \"vault_kubernetes_auth_backend_config\" \"example\" {",
      "  backend            = \"${vault_auth_backend.kubernetes.path}\"",
      "  kubernetes_host    = \"http://example.com:443\"",
      "  kubernetes_ca_cert = \"-----BEGIN CERTIFICATE-----\\nexample\\n-----END CERTIFICATE-----\"",
      "  token_reviewer_jwt = \"ZXhhbXBsZQo=\"",
      "}"
    ]
  },
  "vault-resource-kubernetes_auth_backend_role": {
    "description": "Defines kubernetes_auth_backend_role",
    "prefix": "tf-vault-resource-kubernetes_auth_backend_role",
    "body": [
      "resource \"vault_auth_backend\" \"kubernetes\" {",
      "  type = \"kubernetes\"",
      "}",
      "",
      "resource \"vault_kubernetes_auth_backend_role\" \"example\" {",
      "  backend                          = \"${vault_auth_backend.kubernetes.path}\"",
      "  role_name                        = \"example-role\"",
      "  bound_service_account_names      = [\"example\"]",
      "  bound_service_account_namespaces = [\"example\"]",
      "  ttl                              = 3600",
      "  policies                         = [\"default\", \"dev\", \"prod\"]",
      "}"
    ]
  },
  "vault-resource-ldap_auth_backend": {
    "description": "Defines ldap_auth_backend",
    "prefix": "tf-vault-resource-ldap_auth_backend",
    "body": [
      "resource \"vault_ldap_auth_backend\" \"ldap\" {",
      "    path        = \"ldap\"",
      "    url         = \"ldaps://dc-01.example.org\"",
      "    userdn      = \"OU=Users,OU=Accounts,DC=example,DC=org\"",
      "    userattr    = \"sAMAccountName\"",
      "    upndomain   = \"EXAMPLE.ORG\"",
      "    discoverdn  = false",
      "    groupdn     = \"OU=Groups,DC=example,DC=org\"",
      "    groupfilter = \"(&(objectClass=group)(member:1.2.840.113556.1.4.1941:={{.UserDN}}))\"",
      "}"
    ]
  },
  "vault-resource-ldap_auth_backend_group": {
    "description": "Defines ldap_auth_backend_group",
    "prefix": "tf-vault-resource-ldap_auth_backend_group",
    "body": [
      "resource \"vault_ldap_auth_backend\" \"ldap\" {",
      "    path        = \"ldap\"",
      "    url         = \"ldaps://dc-01.example.org\"",
      "    userdn      = \"OU=Users,OU=Accounts,DC=example,DC=org\"",
      "    userattr    = \"sAMAccountName\"",
      "    upndomain   = \"EXAMPLE.ORG\"",
      "    discoverdn  = false",
      "    groupdn     = \"OU=Groups,DC=example,DC=org\"",
      "    groupfilter = \"(&(objectClass=group)(member:1.2.840.113556.1.4.1941:={{.UserDN}}))\"",
      "}",
      "",
      "resource \"vault_ldap_auth_backend_group\" \"group\" {",
      "    groupname = \"dba\"",
      "    policies  = [\"dba\"]",
      "    backend   = \"${vault_ldap_auth_backend.ldap.path}\"",
      "}"
    ]
  },
  "vault-resource-ldap_auth_backend_user": {
    "description": "Defines ldap_auth_backend_user",
    "prefix": "tf-vault-resource-ldap_auth_backend_user",
    "body": [
      "resource \"vault_ldap_auth_backend\" \"ldap\" {",
      "    path        = \"ldap\"",
      "    url         = \"ldaps://dc-01.example.org\"",
      "    userdn      = \"OU=Users,OU=Accounts,DC=example,DC=org\"",
      "    userattr    = \"sAMAccountName\"",
      "    upndomain   = \"EXAMPLE.ORG\"",
      "    discoverdn  = false",
      "    groupdn     = \"OU=Groups,DC=example,DC=org\"",
      "    groupfilter = \"(&(objectClass=group)(member:1.2.840.113556.1.4.1941:={{.UserDN}}))\"",
      "}",
      "",
      "resource \"vault_ldap_auth_backend_user\" \"user\" {",
      "    username = \"test-user\"",
      "    policies = [\"dba\", \"sysops\"]",
      "    backend  = \"${vault_ldap_auth_backend.ldap.path}\"",
      "}"
    ]
  },
  "vault-resource-mount": {
    "description": "Defines mount",
    "prefix": "tf-vault-resource-mount",
    "body": [
      "resource \"vault_mount\" \"example\" {",
      "  path        = \"dummy\"",
      "  type        = \"generic\"",
      "  description = \"This is an example mount\"",
      "}"
    ]
  },
  "vault-resource-namespace": {
    "description": "Defines namespace",
    "prefix": "tf-vault-resource-namespace",
    "body": [
      "resource \"vault_namespace\" \"ns1\" {",
      "  path = \"ns1\"",
      "}"
    ]
  },
  "vault-resource-okta_auth_backend": {
    "description": "Defines okta_auth_backend",
    "prefix": "tf-vault-resource-okta_auth_backend",
    "body": [
      "resource \"vault_okta_auth_backend\" \"example\" {",
      "    description  = \"Demonstration of the Terraform Okta auth backend\"",
      "    organization = \"example\"",
      "    token        = \"something that should be kept secret\"",
      "    ",
      "    group {",
      "        group_name = \"foo\"",
      "        policies   = [\"one\", \"two\"]",
      "    }",
      "    ",
      "    user {",
      "        username = \"bar\"",
      "        groups   = [\"foo\"]",
      "    }",
      "}"
    ]
  },
  "vault-resource-okta_auth_backend_group": {
    "description": "Defines okta_auth_backend_group",
    "prefix": "tf-vault-resource-okta_auth_backend_group",
    "body": [
      "resource \"vault_okta_auth_backend\" \"example\" {",
      "    path         = \"group_okta\"",
      "    organization = \"dummy\"",
      "}",
      "",
      "resource \"vault_okta_auth_backend_group\" \"foo\" {",
      "    path       = \"${vault_okta_auth_backend.example.path}\"",
      "    group_name = \"foo\"",
      "    policies   = [\"one\", \"two\"]",
      "}"
    ]
  },
  "vault-resource-okta_auth_backend_user": {
    "description": "Defines okta_auth_backend_user",
    "prefix": "tf-vault-resource-okta_auth_backend_user",
    "body": [
      "resource \"vault_okta_auth_backend\" \"example\" {",
      "    path         = \"user_okta\"",
      "    organization = \"dummy\"",
      "}",
      "",
      "resource \"vault_okta_auth_backend_user\" \"foo\" {",
      "    path     = \"${vault_okta_auth_backend.example.path}\"",
      "    username = \"foo\"",
      "    groups   = [\"one\", \"two\"]",
      "}"
    ]
  },
  "vault-resource-pki_secret_backend": {
    "description": "Defines pki_secret_backend",
    "prefix": "tf-vault-resource-pki_secret_backend",
    "body": [
      "resource \"vault_pki_secret_backend\" \"pki\" {",
      "  path = \"pki\"",
      "  default_lease_ttl_seconds = 3600",
      "  max_lease_ttl_seconds = 86400",
      "}"
    ]
  },
  "vault-resource-pki_secret_backend_cert": {
    "description": "Defines pki_secret_backend_cert",
    "prefix": "tf-vault-resource-pki_secret_backend_cert",
    "body": [
      "resource \"vault_pki_secret_backend_cert\" \"app\" {",
      "  depends_on = [ \"vault_pki_secret_backend_role.admin\" ]",
      "",
      "  backend = \"${vault_pki_secret_backend.intermediate.path}\"",
      "  name = \"${vault_pki_secret_backend_role.test.name}\"",
      "",
      "  common_name = \"app.my.domain\"",
      "}"
    ]
  },
  "vault-resource-pki_secret_backend_config_ca": {
    "description": "Defines pki_secret_backend_config_ca",
    "prefix": "tf-vault-resource-pki_secret_backend_config_ca",
    "body": [
      "resource \"vault_pki_secret_backend_config_ca\" \"intermediate\" {",
      "  depends_on = [ \"vault_pki_secret_backend.intermediate\" ]",
      "",
      "  backend = \"${vault_pki_secret_backend.intermediate.path}\"",
      "  pem_bundle = <<EOT",
      "-----BEGIN RSA PRIVATE KEY-----",
      "MIIEowIBAAKCAQEAwvEHeJCXnFgi88rE1dTX6FHdBPK0wSjedh0ywVnCZxLWbBv/",
      "5PytjTcCPdrfW7g2sfbPwOge/WF3X2KeYSP8SxZA0czmz6QDspeG921JkZWtyp5o",
      "++N0leLTIUAhq339p3O1onAOUO1k4sHfmCwfrDpTn2hcx4URa5Pzzb1fHigusjIH",
      "1mcGdncaA6Z2CzO1w4E8kPOUukIDrcZT4faOZrWUIQZKQw2JzTyKJ+ZMDCZq2TFz",
      "WwpL3eG48wB7J7mibFQ/9nFvxpIflBjDAZ8QiqkwYr5N0DNsTxcfTCSeubfJDCUf",
      "IWwFZhLitzwOxazazUQKXX/SPMQ1l/L9o3nnHwIDAQABAoIBAAQidJQcDPsl62fc",
      "Txxx7TpiMhvewfKu2TkMGX18V+EzxxR364+BxHSQTB3fvIkHeTGBGJrw0WdyX8PI",
      "Ja/NwZYeHLXWcLbKtcFd8WDiEoNh91Oq1HMzOc/MBcpYv94RSAX7MEkHs2YIAvHE",
      "RufFV86hVhC1d/JLYjkz5CHi+Fd9XTYjBK78tHhJd4IJPu5LYvwlmzC1zeS7s1Tg",
      "QW1FQuVDV8tWa4PMTrQHwfaGqn95AKc+tbg+ubpCiWl5bBNI3Ghuh4sAC9dMdAkd",
      "w27i29O9/Y3XJSSGUZlZqDBP4YU388RgHpzLDUxgRcaQt9vdeEz6frULPW67e9D2",
      "mPPDzjECgYEA4aPOwvnSwGoOKsS6vANGy4Ajsq09PR+1ltMJUR5kDlXGuZWI72eX",
      "3/GAnovDuCp0tbYt0r7Fmkfel0Ore7SYM18TH5QGpPddcZLvKUf7AchCIOYY0Te3",
      "pS9+7S1lEGrLXyuox4N26Ov6wHVrmZTcQoZsDWbjYxNNsNACsiQNjGMCgYEA3SvQ",
      "Jets9e9SgNVvao2TijX+/vcNKRfcWB71T9Xc4BuSNEu5+ZLtptlwaSnVCVu1Xilk",
      "sWDh+3EhByl4EteENPvE/7A2s1sfcDOprvg0r52aBZKeTp0AukrT8+Ad4hap7g1x",
      "2Lz11MFDkhRqt2KqQaIL+5Mq5WfptbBJ0YI7ARUCgYAD6iSfK1hlsDFYupsGwgPL",
      "agi0g97pHZC38idaOe3AdeqBs79xb9mpr/XsSj52Bn6J3IRFALxK5e5Nr4XdGo/9",
      "bCvXw2iuGgCMBOGTVMVdDY1gJr3Ne2r7Oay5Dq2PMFsg5pACDhzVA6sRBbh9LKD5",
      "on1jaiKNyHrzk1hIoOl/QwKBgA+Ov2uLbfS2yvTpDpdOMiyss603r6NOXF+Ofe8J",
      "uinBhr1K/mAB59muveuH18Z6vv1KqByaFgtb39jjH+Eja9dWRns95/sh08pOuAbo",
      "yrv3uBfgQmaBQMXZ8aLcBv4aXgWyyGlYkWpP1fL2oLMZq6RGQ9WEeqX8c0ImjmrA",
      "YGopAoGBAJZPFlZi2Rfq4MfFZp/X1/zM09hphZwkxkSI+RnsjDUjTgB8CuQul5ep",
      "KWE98yLw4C25Cqw5fKKQ2addizLnZCAIfJKVNRjYLWlWyGQydDEUzqwXlSLS9LVX",
      "LxLkWDajIyjeFn21Ttb42L9pBo3TAQIxUenom/lP2SQTvCKBiPai",
      "-----END RSA PRIVATE KEY-----",
      "-----BEGIN CERTIFICATE-----",
      "MIIDazCCAlOgAwIBAgIUahce2sCO7Bom/Rznd5HsNAlr1NgwDQYJKoZIhvcNAQEL",
      "BQAwRTELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUxITAfBgNVBAoM",
      "GEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDAeFw0xODEyMDIwMTAxNDRaFw00NjEy",
      "MTUwMTAxNDRaMEUxCzAJBgNVBAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMSEw",
      "HwYDVQQKDBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQwggEiMA0GCSqGSIb3DQEB",
      "AQUAA4IBDwAwggEKAoIBAQDC8Qd4kJecWCLzysTV1NfoUd0E8rTBKN52HTLBWcJn",
      "EtZsG//k/K2NNwI92t9buDax9s/A6B79YXdfYp5hI/xLFkDRzObPpAOyl4b3bUmR",
      "la3Knmj743SV4tMhQCGrff2nc7WicA5Q7WTiwd+YLB+sOlOfaFzHhRFrk/PNvV8e",
      "KC6yMgfWZwZ2dxoDpnYLM7XDgTyQ85S6QgOtxlPh9o5mtZQhBkpDDYnNPIon5kwM",
      "JmrZMXNbCkvd4bjzAHsnuaJsVD/2cW/Gkh+UGMMBnxCKqTBivk3QM2xPFx9MJJ65",
      "t8kMJR8hbAVmEuK3PA7FrNrNRApdf9I8xDWX8v2jeecfAgMBAAGjUzBRMB0GA1Ud",
      "DgQWBBQXGfrns8OqxTGKsXG5pDZS/WyyYDAfBgNVHSMEGDAWgBQXGfrns8OqxTGK",
      "sXG5pDZS/WyyYDAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQCt",
      "8aUX26cl2PgdIEByZSHAX5G+2b0IEtTclPkl4uDyyKRY4dVq6gK3ueVSU5eUmBip",
      "JbV5aRetovGOcV//8vbxkZm/ntQ8Oo+2sfGR5lIzd0UdlOr5pkD6g3bFy/zJ+4DR",
      "DAe8fklUacfz6CFmD+H8GyHm+fKmF+mjr4oOGQW6OegRDJHuiipUk2lJyuXdlPSa",
      "FpNRO2sGbjn000ANinFgnFiVzGDnx0/G1Kii/6GWrI6rrdVmXioQzF+8AloWckeB",
      "+hbmbwkwQa/JrLb5SWcBDOXSgtn1Li3XF5AQQBBjA3pOlyBXqnI94Irw89Lv9uPT",
      "MUR4qFxeUOW/GJGccMUd",
      "-----END CERTIFICATE-----",
      "EOT",
      "}"
    ]
  },
  "vault-resource-pki_secret_backend_config_urls": {
    "description": "Defines pki_secret_backend_config_urls",
    "prefix": "tf-vault-resource-pki_secret_backend_config_urls",
    "body": [
      "resource \"vault_pki_secret_backend\" \"pki\" {",
      "  path = \"%s\"",
      "  default_lease_ttl_seconds = 3600",
      "  max_lease_ttl_seconds = 86400",
      "}",
      "",
      "resource \"vault_pki_secret_backend_config_urls\" \"config_urls\" {",
      "  backend              = \"${vault_pki_secret_backend.pki.path}\"",
      "  issuing_certificates = \"http://127.0.0.1:8200/v1/pki/ca\"",
      "}"
    ]
  },
  "vault-resource-pki_secret_backend_intermediate_cert_request": {
    "description": "Defines pki_secret_backend_intermediate_cert_request",
    "prefix": "tf-vault-resource-pki_secret_backend_intermediate_cert_request",
    "body": [
      "resource \"vault_pki_secret_backend_intermediate_cert_request\" \"test\" {",
      "  depends_on = [ \"vault_pki_secret_backend.pki\" ]",
      "  ",
      "  backend = \"${vault_pki_secret_backend.pki.path}\"",
      "  ",
      "  type = \"internal\"",
      "  common_name = \"app.my.domain\"",
      "}"
    ]
  },
  "vault-resource-pki_secret_backend_intermediate_set_signed": {
    "description": "Defines pki_secret_backend_intermediate_set_signed",
    "prefix": "tf-vault-resource-pki_secret_backend_intermediate_set_signed",
    "body": [
      "resource \"vault_pki_secret_backend_intermediate_set_signed\" \"intermediate\" { ",
      "  backend = \"${vault_pki_secret_backend.intermediate.path}\"",
      "  ",
      "  certificate = \"<...>\"",
      "}"
    ]
  },
  "vault-resource-pki_secret_backend_role": {
    "description": "Defines pki_secret_backend_role",
    "prefix": "tf-vault-resource-pki_secret_backend_role",
    "body": [
      "resource \"vault_pki_secret_backend\" \"pki\" {",
      "  path = \"%s\"",
      "  default_lease_ttl_seconds = 3600",
      "  max_lease_ttl_seconds = 86400",
      "}",
      "",
      "resource \"vault_pki_secret_backend_role\" \"role\" {",
      "  backend = \"${vault_pki_secret_backend.pki.path}\"",
      "  name    = \"my_role\"",
      "}"
    ]
  },
  "vault-resource-pki_secret_backend_root_cert": {
    "description": "Defines pki_secret_backend_root_cert",
    "prefix": "tf-vault-resource-pki_secret_backend_root_cert",
    "body": [
      "resource \"vault_pki_secret_backend_root_cert\" \"test\" {",
      "  depends_on = [ \"vault_pki_secret_backend.pki\" ]",
      "",
      "  backend = \"${vault_pki_secret_backend.pki.path}\"",
      "",
      "  type = \"internal\"",
      "  common_name = \"Root CA\"",
      "  ttl = \"315360000\"",
      "  format = \"pem\"",
      "  private_key_format = \"der\"",
      "  key_type = \"rsa\"",
      "  key_bits = 4096",
      "  exclude_cn_from_sans = true",
      "  ou = \"My OU\"",
      "  organization = \"My organization\"",
      "}"
    ]
  },
  "vault-resource-pki_secret_backend_root_sign_intermediate": {
    "description": "Defines pki_secret_backend_root_sign_intermediate",
    "prefix": "tf-vault-resource-pki_secret_backend_root_sign_intermediate",
    "body": [
      "resource \"vault_pki_secret_backend_root_sign_intermediate\" \"root\" {",
      "  depends_on = [ \"vault_pki_secret_backend_intermediate_cert_request.intermediate\" ]",
      "",
      "  backend = \"${vault_pki_secret_backend.root.path}\"",
      "",
      "  csr = \"${vault_pki_secret_backend_intermediate_cert_request.intermediate.csr}\"",
      "  common_name = \"Intermediate CA\"",
      "  exclude_cn_from_sans = true",
      "  ou = \"My OU\"",
      "  organization = \"My organization\"",
      "}"
    ]
  },
  "vault-resource-pki_secret_backend_sign": {
    "description": "Defines pki_secret_backend_sign",
    "prefix": "tf-vault-resource-pki_secret_backend_sign",
    "body": [
      "resource \"vault_pki_secret_backend_sign\" \"test\" {",
      "  depends_on = [ \"vault_pki_secret_backend_role.admin\" ]",
      "",
      "  backend = \"${vault_pki_secret_backend.pki.path}\"",
      "",
      "  name = \"${vault_pki_secret_backend_role.admin.name}\"",
      "  csr = <<EOT",
      "-----BEGIN CERTIFICATE REQUEST-----",
      "MIIEqDCCApACAQAwYzELMAkGA1UEBhMCQVUxEzARBgNVBAgMClNvbWUtU3RhdGUx",
      "ITAfBgNVBAoMGEludGVybmV0IFdpZGdpdHMgUHR5IEx0ZDEcMBoGA1UEAwwTY2Vy",
      "dC50ZXN0Lm15LmRvbWFpbjCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIB",
      "AJupYCQ8UVCWII1Zof1c6YcSSaM9hEaDU78cfKP5RoSeH10BvrWRfT+mzCONVpNP",
      "CW9Iabtvk6hm0ot6ilnndEyVJbc0g7hdDLBX5BM25D+DGZGJRKUz1V+uBrWmXtIt",
      "Vonj7JTDTe7ViH0GDsB7CvqXFGXO2a2cDYBchLkL6vQiFPshxvUsLtwxuy/qdYgy",
      "X6ya+AUoZcoQGy1XxNjfH6cPtWSWQGEp1oPR6vL9hU3laTZb3C+VV4jZem+he8/0",
      "V+qV6fLG92WTXm2hmf8nrtUqqJ+C7mW/RJod+TviviBadIX0OHXW7k5HVsZood01",
      "te8vMRUNJNiZfa9EMIK5oncbQn0LcM3Wo9VrjpL7jREb/4HCS2gswYGv7hzk9cCS",
      "kVY4rDucchKbApuI3kfzmO7GFOF5eiSkYZpY/czNn7VVM3WCu6dpOX4+3rhgrZQw",
      "kY14L930DaLVRUgve/zKVP2D2GHdEOs+MbV7s96UgigT9pXly/yHPj+1sSYqmnaD",
      "5b7jSeJusmzO/nrwXVGLsnezR87VzHl9Ux9g5s6zh+R+PrZuVxYsLvoUpaasH47O",
      "gIcBzSb/6pSGZKAUizmYsHsR1k88dAvsQ+FsUDaNokdi9VndEB4QPmiFmjyLV+0I",
      "1TFoXop4sW11NPz1YCq+IxnYrEaIN3PyhY0GvBJDFY1/AgMBAAGgADANBgkqhkiG",
      "9w0BAQsFAAOCAgEActuqnqS8Y9UF7e08w7tR3FPzGecWreuvxILrlFEZJxiLPFqL",
      "It7uJvtypCVQvz6UQzKdBYO7tMpRaWViB8DrWzXNZjLMrg+QHcpveg8C0Ett4scG",
      "fnvLk6fTDFYrnGvwHTqiHos5i0y3bFLyS1BGwSpdLAykGtvC+VM8mRyw/Y7CPcKN",
      "77kebY/9xduW1g2uxWLr0x90RuQDv9psPojT+59tRLGSp5Kt0IeD3QtnAZEFE4aN",
      "vt+Pd69eg3BgZ8ZeDgoqAw3yppvOkpAFiE5pw2qPZaM4SRphl4d2Lek2zNIMyZqv",
      "do5zh356HOgXtDaSg0POnRGrN/Ua+LMCRTg6GEPUnx9uQb/zt8Zu0hIexDGyykp1",
      "OGqtWlv/Nc8UYuS38v0BeB6bMPeoqQUjkqs8nHlAEFn0KlgYdtDC+7SdQx6wS4te",
      "dBKRNDfC4lS3jYJgs55jHqonZgkpSi3bamlxpfpW0ukGBcmq91wRe4bOw/4uD/vf",
      "UwqMWOdCYcU3mdYNjTWy22ORW3SGFQxMBwpUEURCSoeqWr6aJeQ7KAYkx1PrB5T8",
      "OTEc13lWf+B0PU9UJuGTsmpIuImPDVd0EVDayr3mT5dDbqTVDbe8ppf2IswABmf0",
      "o3DybUeUmknYjl109rdSf+76nuREICHatxXgN3xCMFuBaN4WLO+ksd6Y1Ys=",
      "-----END CERTIFICATE REQUEST-----",
      "EOT",
      "  common_name = \"test.my.domain\"",
      "}"
    ]
  },
  "vault-resource-policy": {
    "description": "Defines policy",
    "prefix": "tf-vault-resource-policy",
    "body": [
      "resource \"vault_policy\" \"example\" {",
      "  name = \"dev-team\"",
      "",
      "  policy = <<EOT",
      "path \"secret/my_app\" {",
      "  policy = \"write\"",
      "}",
      "EOT",
      "}"
    ]
  },
  "vault-resource-rabbitmq_secret_backend": {
    "description": "Defines rabbitmq_secret_backend",
    "prefix": "tf-vault-resource-rabbitmq_secret_backend",
    "body": [
      "resource \"vault_rabbitmq_secret_backend\" \"rabbitmq\" {",
      "  connection_uri = \"https://.....\"",
      "  username = \"user\"",
      "  password = \"password\"",
      "}"
    ]
  },
  "vault-resource-rabbitmq_secret_backend_role": {
    "description": "Defines rabbitmq_secret_backend_role",
    "prefix": "tf-vault-resource-rabbitmq_secret_backend_role",
    "body": [
      "resource \"vault_rabbitmq_secret_backend\" \"rabbitmq\" {",
      "  connection_uri = \"https://.....\"",
      "  username = \"user\"",
      "  password = \"password\"",
      "}",
      "",
      "resource \"vault_rabbitmq_secret_backend_role\" \"role\" {",
      "  backend = \"${vault_rabbitmq_secret_backend.rabbitmq.path}\"",
      "  name    = \"deploy\"",
      "",
      "  tags = \"tag1,tag2\"",
      "  vhosts = \"{\\\"/\\\": {\\\"configure\\\":\\\".*\\\", \\\"write\\\":\\\".*\\\", \\\"read\\\": \\\".*\\\"}}\"",
      "}"
    ]
  },
  "vault-resource-rgp_policy": {
    "description": "Defines rgp_policy",
    "prefix": "tf-vault-resource-rgp_policy",
    "body": [
      "resource \"vault_rgp_policy\" \"allow-all\" {",
      "  name = \"allow-all\"",
      "  enforcement_level = \"soft-mandatory\"",
      "",
      "  policy = <<EOT",
      "main = rule {",
      "  true",
      "}",
      "EOT",
      "}"
    ]
  },
  "vault-resource-ssh_secret_backend_ca": {
    "description": "Defines ssh_secret_backend_ca",
    "prefix": "tf-vault-resource-ssh_secret_backend_ca",
    "body": [
      "resource \"vault_mount\" \"example\" {",
      "    type = \"ssh\"",
      "}",
      "",
      "resource \"vault_ssh_secret_backend_ca\" \"foo\" {",
      "    backend = \"${vault_mount.example.path}\"",
      "}"
    ]
  },
  "vault-resource-ssh_secret_backend_role": {
    "description": "Defines ssh_secret_backend_role",
    "prefix": "tf-vault-resource-ssh_secret_backend_role",
    "body": [
      "resource \"vault_mount\" \"example\" {",
      "  type = \"ssh\"",
      "}",
      "",
      "resource \"vault_ssh_secret_backend_role\" \"foo\" {",
      "    name                    = \"my-role\"",
      "    backend                 = \"${vault_mount.example.path}\"",
      "    key_type                = \"ca\"",
      "    allow_user_certificates = true",
      "}",
      "",
      "resource \"vault_ssh_secret_backend_role\" \"bar\" {",
      "    name          = \"otp-role\"",
      "    backend       = \"${vault_mount.example.path}\"",
      "    key_type      = \"otp\"",
      "    default_user  = \"default\"",
      "    allowed_users = \"default,baz\"",
      "    cidr_list     = \"0.0.0.0/0\"",
      "}"
    ]
  },
  "vault-resource-token": {
    "description": "Defines token",
    "prefix": "tf-vault-resource-token",
    "body": [
      "resource \"vault_token\" \"example\" {",
      "  role_name = \"app\"",
      "  ",
      "  policies = [\"policy1\", \"policy2\"]",
      "  ",
      "  renewable = true",
      "  ttl = \"24h\"",
      "",
      "  renew_min_lease = 43200",
      "  renew_increment = 86400",
      "}"
    ]
  },
  "vault-resource-token_auth_backend_role": {
    "description": "Defines token_auth_backend_role",
    "prefix": "tf-vault-resource-token_auth_backend_role",
    "body": [
      "resource \"vault_token_auth_backend_role\" \"example\" {",
      "  role_name           = \"my-role\"",
      "  allowed_policies    = [\"dev\", \"test\"]",
      "  disallowed_policies = [\"default\"]",
      "  orphan              = true",
      "  period              = \"86400\"",
      "  renewable           = true",
      "  explicit_max_ttl    = \"115200\"",
      "  path_suffix         = \"path-suffix\"",
      "}"
    ]
  },
  "vcd-data-lb_app_profile": {
    "description": "Defines lb_app_profile",
    "prefix": "tf-vcd-data-lb_app_profile",
    "body": [
      "data \"vcd_lb_app_profile\" \"my-profile\" {",
      "  org                 = \"my-org\"",
      "  vdc                 = \"my-org-vdc\"",
      "  edge_gateway        = \"my-edge-gw\"",
      "",
      "  name = \"not-managed\"",
      "}"
    ]
  },
  "vcd-data-lb_app_rule": {
    "description": "Defines lb_app_rule",
    "prefix": "tf-vcd-data-lb_app_rule",
    "body": [
      "data \"vcd_lb_app_rule\" \"my-rule\" {",
      "  org                 = \"my-org\"",
      "  vdc                 = \"my-org-vdc\"",
      "  edge_gateway        = \"my-edge-gw\"",
      "",
      "  name = \"not-managed\"",
      "}"
    ]
  },
  "vcd-data-lb_server_pool": {
    "description": "Defines lb_server_pool",
    "prefix": "tf-vcd-data-lb_server_pool",
    "body": [
      "data \"vcd_lb_server_pool\" \"sp-ds\" {",
      "  org                 = \"my-org\"",
      "  vdc                 = \"my-org-vdc\"",
      "  edge_gateway        = \"my-edge-gw\"",
      "",
      "  name = \"not-managed\"",
      "}"
    ]
  },
  "vcd-data-lb_service_monitor": {
    "description": "Defines lb_service_monitor",
    "prefix": "tf-vcd-data-lb_service_monitor",
    "body": [
      "data \"vcd_lb_service_monitor\" \"my-monitor\" {",
      "  org                 = \"my-org\"",
      "  vdc                 = \"my-org-vdc\"",
      "  edge_gateway        = \"my-edge-gw\"",
      "",
      "  name = \"not-managed\"",
      "}"
    ]
  },
  "vcd-data-lb_virtual_server": {
    "description": "Defines lb_virtual_server",
    "prefix": "tf-vcd-data-lb_virtual_server",
    "body": [
      "data \"vcd_lb_virtual_server\" \"my-vs\" {",
      "  org                 = \"my-org\"",
      "  vdc                 = \"my-org-vdc\"",
      "  edge_gateway        = \"my-edge-gw\"",
      "",
      "  name = \"not-managed\"",
      "}"
    ]
  },
  "vcd-resource-catalog": {
    "description": "Defines catalog",
    "prefix": "tf-vcd-resource-catalog",
    "body": [
      "resource \"vcd_catalog\" \"myNewCatalog\" {",
      "  org = \"my-org\"",
      "",
      "  name             = \"my-catalog\"",
      "  description      = \"catalog for files\"",
      "  delete_recursive = \"true\"",
      "  delete_force     = \"true\"",
      "}"
    ]
  },
  "vcd-resource-catalog_item": {
    "description": "Defines catalog_item",
    "prefix": "tf-vcd-resource-catalog_item",
    "body": [
      "resource \"vcd_catalog_item\" \"myNewCatalogItem\" {",
      "  org     = \"my-org\"",
      "  catalog = \"my-catalog\"",
      "",
      "  name                 = \"my ova\"",
      "  description          = \"new vapp template\"",
      "  ova_path             = \"/home/user/file.ova\"",
      "  upload_piece_size    = 10",
      "  show_upload_progress = true",
      "}"
    ]
  },
  "vcd-resource-catalog_media": {
    "description": "Defines catalog_media",
    "prefix": "tf-vcd-resource-catalog_media",
    "body": [
      "resource \"vcd_catalog_media\" \"myNewMedia\" {",
      "  org     = \"my-org\"",
      "  catalog = \"my-catalog\"",
      "",
      "  name                 = \"my iso\"",
      "  description          = \"new os versions\"",
      "  media_path           = \"/home/user/file.iso\"",
      "  upload_piece_size    = 10",
      "  show_upload_progress = true",
      "}"
    ]
  },
  "vcd-resource-dnat": {
    "description": "Defines dnat",
    "prefix": "tf-vcd-resource-dnat",
    "body": [
      "resource \"vcd_dnat\" \"web\" {",
      "  org = \"my-org\" # Optional",
      "  vdc = \"my-vdc\" # Optional",
      "",
      "  edge_gateway    = \"Edge Gateway Name\"",
      "  external_ip     = \"78.101.10.20\"",
      "  port            = 80",
      "  internal_ip     = \"10.10.0.5\"",
      "  translated_port = 8080",
      "}",
      "",
      "resource \"vcd_dnat\" \"forIcmp\" {",
      "  org = \"my-org\" # Optional",
      "  vdc = \"my-vdc\" # Optional",
      "  ",
      "  network_name = \"my-external-network\"",
      "  network_type = \"ext\"",
      "",
      "  edge_gateway  = \"Edge Gateway Name\"",
      "  external_ip   = \"78.101.10.20\"",
      "  port          = -1                    # \"-1\" == \"any\"",
      "  internal_ip   = \"10.10.0.5\"",
      "  protocol      = \"icmp\"",
      "  icmp_sub_type = \"router-solicitation\"",
      "}"
    ]
  },
  "vcd-resource-edgegateway": {
    "description": "Defines edgegateway",
    "prefix": "tf-vcd-resource-edgegateway",
    "body": [
      "resource \"vcd_edgegateway\" \"egw\" {",
      "  org = \"my-org\"",
      "  vdc = \"my-vdc\"",
      "",
      "  name                    = \"my-egw\"",
      "  description             = \"new edge gateway\"",
      "  configuration           = \"compact\"",
      "  default_gateway_network = \"my-ext-net1\"",
      "  external_networks       = [ \"my-ext-net1\", \"my-ext-net2\" ]",
      "  advanced                = true",
      "}",
      "",
      "resource \"vcd_network_routed\" \"rnet1\" {",
      "  name         = \"rnet1\"",
      "  org          = \"my-org\"",
      "  vdc          = \"my-vdc\"",
      "  edge_gateway = \"${vcd_edgegateway.egw.name}\"",
      "  gateway      = \"192.168.2.1\"",
      "",
      "  static_ip_pool {",
      "    start_address = \"192.168.2.2\"",
      "    end_address   = \"192.168.2.100\"",
      "  }",
      "}"
    ]
  },
  "vcd-resource-edgegateway_vpn": {
    "description": "Defines edgegateway_vpn",
    "prefix": "tf-vcd-resource-edgegateway_vpn",
    "body": [
      "resource \"vcd_edgegateway_vpn\" \"vpn\" {",
      "  edge_gateway        = \"Internet_01(nti0000bi2_123-456-2)\"",
      "  name                = \"west-to-east\"",
      "  description         = \"Description\"",
      "  encryption_protocol = \"AES256\"",
      "  mtu                 = 1400",
      "  peer_id             = \"64.121.123.11\"",
      "  peer_ip_address     = \"64.121.123.11\"",
      "  local_id            = \"64.121.123.10\"",
      "  local_ip_address    = \"64.121.123.10\"",
      "  shared_secret       = \"***********************\"",
      "",
      "  peer_subnets {",
      "    peer_subnet_name    = \"DMZ_WEST\"",
      "    peer_subnet_gateway = \"10.0.10.1\"",
      "    peer_subnet_mask    = \"255.255.255.0\"",
      "  }",
      "",
      "  peer_subnets {",
      "    peer_subnet_name    = \"WEB_WEST\"",
      "    peer_subnet_gateway = \"10.0.20.1\"",
      "    peer_subnet_mask    = \"255.255.255.0\"",
      "  }",
      "",
      "  local_subnets {",
      "    local_subnet_name    = \"DMZ_EAST\"",
      "    local_subnet_gateway = \"10.0.1.1\"",
      "    local_subnet_mask    = \"255.255.255.0\"",
      "  }",
      "",
      "  local_subnets {",
      "    local_subnet_name    = \"WEB_EAST\"",
      "    local_subnet_gateway = \"10.0.22.1\"",
      "    local_subnet_mask    = \"255.255.255.0\"",
      "  }",
      "}"
    ]
  },
  "vcd-resource-external_network": {
    "description": "Defines external_network",
    "prefix": "tf-vcd-resource-external_network",
    "body": [
      "provider \"vcd\" {",
      "  user     = \"${var.admin_user}\"",
      "  password = \"${var.admin_password}\"",
      "  org      = \"System\"",
      "  url      = \"https://Vcd/api\"",
      "}",
      "",
      "resource \"vcd_external_network\" \"net\" {",
      "  name        = \"my-ext-net\"",
      "  description = \"Reference for vCD external network\"",
      "",
      "  ip_scope {",
      "    gateway    = \"192.168.30.49\"",
      "    netmask    = \"255.255.255.240\"",
      "    dns1       = \"192.168.0.164\"",
      "    dns2       = \"192.168.0.196\"",
      "    dns_suffix = \"mybiz.biz\"",
      "",
      "    static_ip_pool {",
      "      start_address = \"192.168.30.51\"",
      "      end_address   = \"192.168.30.62\"",
      "    }",
      "  }",
      "",
      "  # It's possible to define more than one IP scope",
      "  ip_scope {",
      "    gateway    = \"192.168.31.49\"",
      "    netmask    = \"255.255.255.240\"",
      "    dns1       = \"192.168.1.164\"",
      "    dns2       = \"192.168.1.196\"",
      "    dns_suffix = \"my.biz\"",
      "",
      "    static_ip_pool {",
      "      start_address = \"192.168.31.51\"",
      "      end_address   = \"192.168.31.60\"",
      "    }",
      "",
      "    static_ip_pool {",
      "      start_address = \"192.168.31.31\"",
      "      end_address   = \"192.168.31.40\"",
      "    }",
      "  }",
      "",
      "  vsphere_network {",
      "    name    = \"myNetwork\"",
      "    type    = \"DV_PORTGROUP\"",
      "    vcenter = \"vcenter-name\"",
      "  }",
      "",
      "  # It's possible to define more than one vSphere network",
      "  vsphere_network {",
      "    name    = \"myNetwork2\"",
      "    type    = \"DV_PORTGROUP\"    ",
      "    vcenter = \"vcenter-name2\"",
      "  }",
      "",
      "  retain_net_info_across_deployments = \"false\"",
      "}",
      "",
      "resource \"vcd_network_direct\" \"net\" {",
      "  org              = \"my-org\"",
      "  vdc              = \"my-vdc\"",
      "  name             = \"my-net\"",
      "  external_network = \"${vcd_external_network.net.name}\"",
      "}",
      ""
    ]
  },
  "vcd-resource-firewall_rules": {
    "description": "Defines firewall_rules",
    "prefix": "tf-vcd-resource-firewall_rules",
    "body": [
      "resource \"vcd_firewall_rules\" \"fw\" {",
      "  edge_gateway   = \"Edge Gateway Name\"",
      "  default_action = \"drop\"",
      "",
      "  rule {",
      "    description      = \"drop-ftp-out\"",
      "    policy           = \"drop\"",
      "    protocol         = \"tcp\"",
      "    destination_port = \"21\"",
      "    destination_ip   = \"any\"",
      "    source_port      = \"any\"",
      "    source_ip        = \"10.10.0.0/24\"",
      "  }",
      "",
      "  rule {",
      "    description      = \"allow-outbound\"",
      "    policy           = \"allow\"",
      "    protocol         = \"any\"",
      "    destination_port = \"any\"",
      "    destination_ip   = \"any\"",
      "    source_port      = \"any\"",
      "    source_ip        = \"10.10.0.0/24\"",
      "  }",
      "}",
      "",
      "resource \"vcd_vapp\" \"web\" {",
      "  # ...",
      "}",
      "",
      "resource \"vcd_firewall_rules\" \"fw-web\" {",
      "  edge_gateway   = \"Edge Gateway Name\"",
      "  default_action = \"drop\"",
      "",
      "  rule {",
      "    description      = \"allow-web\"",
      "    policy           = \"allow\"",
      "    protocol         = \"tcp\"",
      "    destination_port = \"80\"",
      "    destination_ip   = \"${vcd_vapp.web.ip}\"",
      "    source_port      = \"any\"",
      "    source_ip        = \"any\"",
      "  }",
      "}"
    ]
  },
  "vcd-resource-independent_disk": {
    "description": "Defines independent_disk",
    "prefix": "tf-vcd-resource-independent_disk",
    "body": [
      "resource \"vcd_independent_disk\" \"myNewIndependentDisk\" {",
      "  org             = \"my-org\"",
      "  vdc             = \"my-vcd\"",
      "  ",
      "  name            = \"logDisk\"",
      "  size            = \"33000\"",
      "  bus_type        = \"SCSI\"",
      "  bus_sub_type    = \"VirtualSCSI\"",
      "  storage_profile = \"external\"",
      "}",
      "",
      "resource \"vcd_vapp_vm\" \"web2\" {",
      "  vapp_name     = \"${vcd_vapp.web.name}\"",
      "",
      "...",
      "  ",
      "  disk {",
      "    name = \"${vcd_independent_disk.myNewIndependentDisk.name}\"",
      "    bus_number = 1",
      "    unit_number = 0",
      "  }",
      "",
      "  depends_on = [\"vcd_independent_disk.myNewIndependentDisk\"]",
      "}"
    ]
  },
  "vcd-resource-inserted_media": {
    "description": "Defines inserted_media",
    "prefix": "tf-vcd-resource-inserted_media",
    "body": [
      "resource \"vcd_inserted_media\" \"myInsertedMedia\" {",
      "  org     = \"my-org\"",
      "  vdc     = \"my-vcd\"",
      "  catalog = \"my-catalog\"",
      "  name    = \"my-iso\"",
      "",
      "  vapp_name = \"my-vApp\"",
      "  vm_name   = \"my-VM\"",
      "",
      "  eject_force = true",
      "}"
    ]
  },
  "vcd-resource-lb_app_profile": {
    "description": "Defines lb_app_profile",
    "prefix": "tf-vcd-resource-lb_app_profile",
    "body": [
      "resource \"vcd_lb_app_profile\" \"tcp\" {",
      "  org          = \"my-org\"",
      "  vdc          = \"my-org-vdc\"",
      "  edge_gateway = \"my-edge-gw\"",
      "",
      "  name = \"tcp-app-profile\"",
      "  type = \"tcp\"",
      "}"
    ]
  },
  "vcd-resource-lb_app_rule": {
    "description": "Defines lb_app_rule",
    "prefix": "tf-vcd-resource-lb_app_rule",
    "body": [
      "resource \"vcd_lb_app_rule\" \"example-one\" {",
      "  edge_gateway = \"my-edge-gw\"",
      "  org          = \"my-org\"",
      "  vdc          = \"my-org-vdc\"",
      "",
      "  name = \"script1\"",
      "  script = \"acl vmware_page url_beg / vmware redirect location https://www.vmware.com/ ifvmware_page\"",
      "}"
    ]
  },
  "vcd-resource-lb_server_pool": {
    "description": "Defines lb_server_pool",
    "prefix": "tf-vcd-resource-lb_server_pool",
    "body": [
      "resource \"vcd_lb_server_pool\" \"web-servers\" {",
      "  org          = \"my-org\"",
      "  vdc          = \"my-org-vdc\"",
      "  edge_gateway = \"my-edge-gw\"",
      "",
      "  name      = \"web-servers\"",
      "  algorithm = \"round-robin\"",
      "",
      "  member {",
      "    condition       = \"enabled\"",
      "    name            = \"member1\"",
      "    ip_address      = \"1.1.1.1\"",
      "    port            = 8443",
      "    monitor_port    = 9000",
      "    weight          = 1",
      "    min_connections = 0",
      "    max_connections = 100",
      "  }",
      "}"
    ]
  },
  "vcd-resource-lb_service_monitor": {
    "description": "Defines lb_service_monitor",
    "prefix": "tf-vcd-resource-lb_service_monitor",
    "body": [
      "resource \"vcd_lb_service_monitor\" \"monitor\" {",
      "  org          = \"my-org\"",
      "  vdc          = \"my-org-vdc\"",
      "  edge_gateway = \"my-edge-gw\"",
      "",
      "  name        = \"http-monitor\"",
      "  interval    = \"5\"",
      "  timeout     = \"20\"",
      "  max_retries = \"3\"",
      "  type        = \"http\"",
      "  method      = \"GET\"",
      "  url         = \"/health\"",
      "  send        = \"{\\\"key\\\": \\\"value\\\"}\"",
      "  extension = {",
      "    content-type = \"application/json\"",
      "    linespan     = \"\"",
      "  }",
      "}"
    ]
  },
  "vcd-resource-lb_virtual_server": {
    "description": "Defines lb_virtual_server",
    "prefix": "tf-vcd-resource-lb_virtual_server",
    "body": [
      "resource \"vcd_lb_virtual_server\" \"http\" {",
      "  org          = \"my-org\"",
      "  vdc          = \"my-org-vdc\"",
      "  edge_gateway = \"my-edge-gw\"",
      "  ",
      "  name       = \"http-virtual-server\"",
      "  ip_address = \"1.1.1.1\" # Edge gateway uplink interface IP",
      "  protocol   = \"http\"    # Must be the same as specified in application profile",
      "  port       = 80",
      "  ",
      "  app_profile_id = \"${vcd_lb_app_profile.http.id}\"",
      "  server_pool_id = \"${vcd_lb_server_pool.web-servers.id}\"",
      "  app_rule_ids   = [\"${vcd_lb_app_rule.redirect.id}\", \"${vcd_lb_app_rule.language.id}\"]",
      "}"
    ]
  },
  "vcd-resource-network": {
    "description": "Defines network",
    "prefix": "tf-vcd-resource-network",
    "body": [
      "resource \"vcd_network\" \"net\" {",
      "  name         = \"my-net\"",
      "  edge_gateway = \"Edge Gateway Name\"",
      "  gateway      = \"10.10.0.1\"",
      "",
      "  dhcp_pool {",
      "    start_address = \"10.10.0.2\"",
      "    end_address   = \"10.10.0.100\"",
      "  }",
      "",
      "  static_ip_pool {",
      "    start_address = \"10.10.0.152\"",
      "    end_address   = \"10.10.0.254\"",
      "  }",
      "}"
    ]
  },
  "vcd-resource-network_direct": {
    "description": "Defines network_direct",
    "prefix": "tf-vcd-resource-network_direct",
    "body": [
      "resource \"vcd_network_direct\" \"net\" {",
      "  org = \"my-org\" # Optional",
      "  vdc = \"my-vdc\" # Optional",
      "",
      "  name             = \"my-net\"",
      "  external_network = \"my-ext-net\"",
      "}"
    ]
  },
  "vcd-resource-network_isolated": {
    "description": "Defines network_isolated",
    "prefix": "tf-vcd-resource-network_isolated",
    "body": [
      "resource \"vcd_network_isolated\" \"net\" {",
      "  org = \"my-org\" # Optional",
      "  vdc = \"my-vdc\" # Optional",
      "",
      "  name    = \"my-net\"",
      "  gateway = \"192.168.2.1\"",
      "  dns1    = \"192.168.2.1\"",
      "",
      "  dhcp_pool {",
      "    start_address = \"192.168.2.2\"",
      "    end_address   = \"192.168.2.50\"",
      "  }",
      "",
      "  static_ip_pool {",
      "    start_address = \"192.168.2.51\"",
      "    end_address   = \"192.168.2.100\"",
      "  }",
      "}"
    ]
  },
  "vcd-resource-network_routed": {
    "description": "Defines network_routed",
    "prefix": "tf-vcd-resource-network_routed",
    "body": [
      "resource \"vcd_network_routed\" \"net\" {",
      "  org = \"my-org\" # Optional",
      "  vdc = \"my-vdc\" # Optional",
      "",
      "  name         = \"my-net\"",
      "  edge_gateway = \"Edge Gateway Name\"",
      "  gateway      = \"10.10.0.1\"",
      "",
      "  dhcp_pool {",
      "    start_address = \"10.10.0.2\"",
      "    end_address   = \"10.10.0.100\"",
      "  }",
      "",
      "  static_ip_pool {",
      "    start_address = \"10.10.0.152\"",
      "    end_address   = \"10.10.0.254\"",
      "  }",
      "}"
    ]
  },
  "vcd-resource-org": {
    "description": "Defines org",
    "prefix": "tf-vcd-resource-org",
    "body": [
      "provider \"vcd\" {",
      "  user     = \"${var.admin_user}\"",
      "  password = \"${var.admin_password}\"",
      "  org      = \"System\"",
      "  url      = \"https://AcmeVcd/api\"",
      "}",
      "",
      "resource \"vcd_org\" \"my-org\" {",
      "  name             = \"my-org\"",
      "  full_name        = \"My organization\"",
      "  description      = \"The pride of my work\"",
      "  is_enabled       = \"true\"",
      "  delete_recursive = \"true\"",
      "  delete_force     = \"true\"",
      "}"
    ]
  },
  "vcd-resource-org_user": {
    "description": "Defines org_user",
    "prefix": "tf-vcd-resource-org_user",
    "body": [
      "# A simple user created with the minimum of properties",
      "# uses the \"password\" field",
      "resource \"vcd_org_user\" \"my-org-admin\" {",
      "  org = \"my-org\"",
      "",
      "  name          = \"my-org-admin\"",
      "  description   = \"a new org admin\"",
      "  role          = \"Organization Administrator\"",
      "  password      = \"change-me\"",
      "}",
      "",
      "# Another user, created by filling all the fields",
      "# Uses the \"password_file\" field.",
      "resource \"vcd_org_user\" \"test_user_vapp_author\" {",
      "  org = \"datacloud\"",
      "  ",
      "  name              = \"test_user_vapp_author\"",
      "  password_file     = \"pwd201907101300.txt\"",
      "  full_name         = \"test user vapp author\"",
      "  description       = \"Org user test_user_vapp_author\"",
      "  role              = \"vApp Author\"",
      "  enabled           = true",
      "  take_ownership    = true",
      "  provider_type     = \"INTEGRATED\"",
      "  stored_vm_quota   = 20",
      "  deployed_vm_quota = 20",
      "  instant_messaging = \"@test_user_vapp_author\"",
      "  email_address     = \"test_user_vapp_author@test.company.org\"",
      "}"
    ]
  },
  "vcd-resource-org_vdc": {
    "description": "Defines org_vdc",
    "prefix": "tf-vcd-resource-org_vdc",
    "body": [
      "provider \"vcd\" {",
      "  user     = \"${var.admin_user}\"",
      "  password = \"${var.admin_password}\"",
      "  org      = \"System\"",
      "  url      = \"https://AcmeVcd/api\"",
      "}",
      "",
      "resource \"vcd_org_vdc\" \"my-vdc\" {",
      "  name        = \"my-vdc\"",
      "  description = \"The pride of my work\"",
      "  org         = \"my-org\"",
      "",
      "  allocation_model = \"ReservationPool\"",
      "  network_pool_name = \"vDC1-VXLAN-NP\"",
      "  provider_vdc_name = \"vDC1\"",
      "",
      "  compute_capacity {",
      "    cpu {",
      "      allocated = 2048",
      "    }",
      "",
      "    memory {",
      "      allocated = 2048",
      "    }",
      "  }",
      "",
      "  storage_profile {",
      "    name     = \"storage-name\"",
      "    limit    = 10240",
      "    default  = true    ",
      "  }",
      "  ",
      "  metadata = {",
      "    role    = \"customerName\"",
      "    env     = \"staging\"",
      "    version = \"v1\"",
      "  }  ",
      "",
      "  enabled                  = true",
      "  enable_thin_provisioning = true",
      "  enable_fast_provisioning = true",
      "  delete_force             = true",
      "  delete_recursive         = true",
      "}"
    ]
  },
  "vcd-resource-snat": {
    "description": "Defines snat",
    "prefix": "tf-vcd-resource-snat",
    "body": [
      "resource \"vcd_snat\" \"outbound\" {",
      "  edge_gateway = \"Edge Gateway Name\"",
      "  network_name = \"my-org-vdc-network\"",
      "  network_type = \"org\"",
      "  external_ip  = \"78.101.10.20\"",
      "  internal_ip  = \"10.10.0.0/24\"",
      "}"
    ]
  },
  "vcd-resource-vapp": {
    "description": "Defines vapp",
    "prefix": "tf-vcd-resource-vapp",
    "body": [
      "resource \"vcd_network_direct\" \"net\" {",
      "  name             = \"net\"",
      "  external_network = \"corp-network\"",
      "}",
      "",
      "resource \"vcd_vapp\" \"web\" {",
      "  name = \"web\"",
      "",
      "  metadata = {",
      "    CostAccount = \"Marketing Department\"",
      "  }",
      "",
      "  depends_on = [\"vcd_network_direct.net\"]",
      "}",
      "",
      "resource \"vcd_vapp_vm\" \"web1\" {",
      "  vapp_name     = \"${vcd_vapp.web.name}\"",
      "  name          = \"web1\"",
      "  catalog_name  = \"Boxes\"",
      "  template_name = \"lampstack-1.10.1-ubuntu-10.04\"",
      "  memory        = 2048",
      "  cpus          = 1",
      "",
      "  network_name = \"net\"",
      "  ip           = \"10.10.104.161\"",
      "",
      "  depends_on = [\"vcd_vapp.web\"]",
      "}",
      "",
      "resource \"vcd_vapp_vm\" \"web2\" {",
      "  vapp_name     = \"${vcd_vapp.web.name}\"",
      "  name          = \"web2\"",
      "  catalog_name  = \"Boxes\"",
      "  template_name = \"lampstack-1.10.1-ubuntu-10.04\"",
      "  memory        = 2048",
      "  cpus          = 1",
      "",
      "  network_name = \"net\"",
      "  ip           = \"10.10.104.162\"",
      "",
      "  depends_on = [\"vcd_vapp.web\"]",
      "}"
    ]
  },
  "vcd-resource-vapp_network": {
    "description": "Defines vapp_network",
    "prefix": "tf-vcd-resource-vapp_network",
    "body": [
      "resource \"vcd_vapp_network\" \"vappNet\" {",
      "  org = \"my-org\" #Optional",
      "  vdc = \"my-vdc\" #Optional",
      "",
      "  name               = \"my-net\"",
      "  vapp_name          = \"my-vapp\"",
      "  gateway            = \"192.168.2.1\"",
      "  netmask            = \"255.255.255.0\"",
      "  dns1               = \"192.168.2.1\"",
      "  dns2               = \"192.168.2.2\"",
      "  dns_suffix         = \"mybiz.biz\"",
      "  guest_vlan_allowed = true",
      "",
      "  static_ip_pool {",
      "    start_address = \"192.168.2.51\"",
      "    end_address   = \"192.168.2.100\"",
      "  }",
      "",
      "  dhcp_pool {",
      "    start_address = \"192.168.2.2\"",
      "    end_address   = \"192.168.2.50\"",
      "  }",
      "}"
    ]
  },
  "vcd-resource-vapp_vm": {
    "description": "Defines vapp_vm",
    "prefix": "tf-vcd-resource-vapp_vm",
    "body": [
      "resource \"vcd_network_direct\" \"net\" {",
      "  name             = \"net\"",
      "  external_network = \"corp-network\"",
      "}",
      "",
      "resource \"vcd_vapp\" \"web\" {",
      "  name = \"web\"",
      "",
      "  depends_on = [\"vcd_network_direct.net\"]",
      "}",
      "",
      "resource \"vcd_vapp_vm\" \"web1\" {",
      "  vapp_name     = \"${vcd_vapp.web.name}\"",
      "  name          = \"web1\"",
      "  catalog_name  = \"Boxes\"",
      "  template_name = \"lampstack-1.10.1-ubuntu-10.04\"",
      "  memory        = 2048",
      "  cpus          = 2",
      "  cpu_cores     = 1",
      "",
      "  metadata = {",
      "    role    = \"web\"",
      "    env     = \"staging\"",
      "    version = \"v1\"",
      "    my_key  = \"my value\"",
      "  }",
      "",
      "  network {",
      "    type               = \"org\"",
      "    name               = \"net\"",
      "    ip                 = \"10.10.104.161\"",
      "    ip_allocation_mode = \"MANUAL\"",
      "    is_primary         = true",
      "  }",
      "",
      "  depends_on = [\"vcd_vapp.web\"]",
      "}",
      "",
      "resource \"vcd_vapp_vm\" \"web2\" {",
      "  vapp_name     = \"${vcd_vapp.web.name}\"",
      "  name          = \"web2\"",
      "  catalog_name  = \"Boxes\"",
      "  template_name = \"lampstack-1.10.1-ubuntu-10.04\"",
      "  memory        = 2048",
      "  cpus          = 1",
      "",
      "  metadata = {",
      "    role    = \"web\"",
      "    env     = \"staging\"",
      "    version = \"v1\"",
      "    my_key  = \"my value\"",
      "  }",
      "",
      "  network {",
      "    type               = \"org\"",
      "    name               = \"net\"",
      "    ip                 = \"10.10.104.162\"",
      "    ip_allocation_mode = \"MANUAL\"",
      "    is_primary         = true",
      "  }",
      "",
      "  network {",
      "    type               = \"vapp\"",
      "    name               = \"vapp-network\"",
      "    ip_allocation_mode = \"POOL\"",
      "  }",
      "",
      "  network {",
      "    type               = \"none\"",
      "    ip_allocation_mode = \"NONE\"",
      "  }",
      "",
      "  disk {",
      "    name        = \"logDisk1\"",
      "    bus_number  = 1",
      "    unit_number = 0",
      "  }",
      "",
      "  disk {",
      "    name        = \"logDisk2\"",
      "    bus_number  = 1",
      "    unit_number = 1",
      "  }",
      "",
      "  depends_on = [\"vcd_vapp.web\"]",
      "}",
      ""
    ]
  },
  "vra7-resource-deployment": {
    "description": "Defines deployment",
    "prefix": "tf-vra7-resource-deployment",
    "body": [
      "resource \"vra7_deployment\" \"my_vra7_deployment\" {",
      "  count = 1",
      "  catalog_item_name = \"Basic Single Machine\"",
      "  description = \"Test deployment\"",
      "  reasons = \"Testing the vRA 7 Terraform plugin\"",
      "",
      "  deployment_configuration = {",
      "    _leaseDays = \"15\"",
      "    _number_of_instances = 2",
      "    deployment_property = \"custom deployment property\"",
      "  }",
      "  resource_configuration = {",
      "    vSphereVM1.cpu = 1",
      "    vSphereVM1.memory = 2048",
      "    vSphereVM1.machine_property = \"machine custom property\"",
      "  }",
      "  wait_timeout = 20",
      "  businessgroup_name = \"Development\"",
      "}"
    ]
  },
  "vsphere-data-compute_cluster": {
    "description": "Defines compute_cluster",
    "prefix": "tf-vsphere-data-compute_cluster",
    "body": [
      "data \"vsphere_datacenter\" \"datacenter\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_compute_cluster\" \"compute_cluster\" {",
      "  name          = \"compute-cluster1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}"
    ]
  },
  "vsphere-data-custom_attribute": {
    "description": "Defines custom_attribute",
    "prefix": "tf-vsphere-data-custom_attribute",
    "body": [
      "data \"vsphere_custom_attribute\" \"attribute\" {",
      "  name = \"terraform-test-attribute\"",
      "}"
    ]
  },
  "vsphere-data-datacenter": {
    "description": "Defines datacenter",
    "prefix": "tf-vsphere-data-datacenter",
    "body": [
      "data \"vsphere_datacenter\" \"datacenter\" {",
      "  name = \"dc1\"",
      "}"
    ]
  },
  "vsphere-data-datastore": {
    "description": "Defines datastore",
    "prefix": "tf-vsphere-data-datastore",
    "body": [
      "data \"vsphere_datacenter\" \"datacenter\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_datastore\" \"datastore\" {",
      "  name          = \"datastore1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.datacenter.id}\"",
      "}"
    ]
  },
  "vsphere-data-datastore_cluster": {
    "description": "Defines datastore_cluster",
    "prefix": "tf-vsphere-data-datastore_cluster",
    "body": [
      "data \"vsphere_datacenter\" \"datacenter\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_datastore_cluster\" \"datastore_cluster\" {",
      "  name          = \"datastore-cluster1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}"
    ]
  },
  "vsphere-data-distributed_virtual_switch": {
    "description": "Defines distributed_virtual_switch",
    "prefix": "tf-vsphere-data-distributed_virtual_switch",
    "body": [
      "data \"vsphere_datacenter\" \"datacenter\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_distributed_virtual_switch\" \"dvs\" {",
      "  name          = \"terraform-test-dvs\"",
      "  datacenter_id = \"${data.vsphere_datacenter.datacenter.id}\"",
      "}",
      "",
      "resource \"vsphere_distributed_port_group\" \"pg\" {",
      "  name                            = \"terraform-test-pg\"",
      "  distributed_virtual_switch_uuid = \"${data.vsphere_distributed_virtual_switch.dvs.id}\"",
      "",
      "  active_uplinks  = [\"${data.vsphere_distributed_virtual_switch.dvs.uplinks[0]}\"]",
      "  standby_uplinks = [\"${data.vsphere_distributed_virtual_switch.dvs.uplinks[1]}\"]",
      "}"
    ]
  },
  "vsphere-data-folder": {
    "description": "Defines folder",
    "prefix": "tf-vsphere-data-folder",
    "body": [
      "data \"vsphere_folder\" \"folder\" {",
      "  path = \"/dc1/datastore/folder1\"",
      "}"
    ]
  },
  "vsphere-data-host": {
    "description": "Defines host",
    "prefix": "tf-vsphere-data-host",
    "body": [
      "data \"vsphere_datacenter\" \"datacenter\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_host\" \"host\" {",
      "  name          = \"esxi1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.datacenter.id}\"",
      "}"
    ]
  },
  "vsphere-data-network": {
    "description": "Defines network",
    "prefix": "tf-vsphere-data-network",
    "body": [
      "data \"vsphere_datacenter\" \"datacenter\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_network\" \"net\" {",
      "  name          = \"terraform-test-net\"",
      "  datacenter_id = \"${data.vsphere_datacenter.datacenter.id}\"",
      "}"
    ]
  },
  "vsphere-data-resource_pool": {
    "description": "Defines resource_pool",
    "prefix": "tf-vsphere-data-resource_pool",
    "body": [
      "data \"vsphere_datacenter\" \"datacenter\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_resource_pool\" \"pool\" {",
      "  name          = \"resource-pool-1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.datacenter.id}\"",
      "}"
    ]
  },
  "vsphere-data-tag": {
    "description": "Defines tag",
    "prefix": "tf-vsphere-data-tag",
    "body": [
      "data \"vsphere_tag_category\" \"category\" {",
      "  name = \"terraform-test-category\"",
      "}",
      "",
      "data \"vsphere_tag\" \"tag\" {",
      "  name        = \"terraform-test-tag\"",
      "  category_id = \"${data.vsphere_tag_category.category.id}\"",
      "}"
    ]
  },
  "vsphere-data-tag_category": {
    "description": "Defines tag_category",
    "prefix": "tf-vsphere-data-tag_category",
    "body": [
      "data \"vsphere_tag_category\" \"category\" {",
      "  name = \"terraform-test-category\"",
      "}"
    ]
  },
  "vsphere-data-vapp_container": {
    "description": "Defines vapp_container",
    "prefix": "tf-vsphere-data-vapp_container",
    "body": [
      "data \"vsphere_datacenter\" \"datacenter\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_vapp_container\" \"pool\" {",
      "  name          = \"vapp-container-1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.datacenter.id}\"",
      "}"
    ]
  },
  "vsphere-data-virtual_machine": {
    "description": "Defines virtual_machine",
    "prefix": "tf-vsphere-data-virtual_machine",
    "body": [
      "data \"vsphere_datacenter\" \"datacenter\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_virtual_machine\" \"template\" {",
      "  name          = \"test-vm-template\"",
      "  datacenter_id = \"${data.vsphere_datacenter.datacenter.id}\"",
      "}"
    ]
  },
  "vsphere-data-vmfs_disks": {
    "description": "Defines vmfs_disks",
    "prefix": "tf-vsphere-data-vmfs_disks",
    "body": [
      "data \"vsphere_datacenter\" \"datacenter\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_host\" \"host\" {",
      "  name          = \"esxi1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.datacenter.id}\"",
      "}",
      "",
      "data \"vsphere_vmfs_disks\" \"available\" {",
      "  host_system_id = \"${data.vsphere_host.host.id}\"",
      "  rescan         = true",
      "  filter         = \"mpx.vmhba1:C0:T[12]:L0\"",
      "}"
    ]
  },
  "vsphere-resource-compute_cluster": {
    "description": "Defines compute_cluster",
    "prefix": "tf-vsphere-resource-compute_cluster",
    "body": [
      "variable \"datacenter\" {",
      "  default = \"dc1\"",
      "}",
      "",
      "variable \"hosts\" {",
      "  default = [",
      "    \"esxi1\",",
      "    \"esxi2\",",
      "    \"esxi3\",",
      "  ]",
      "}",
      "",
      "data \"vsphere_datacenter\" \"dc\" {",
      "  name = \"${var.datacenter}\"",
      "}",
      "",
      "data \"vsphere_host\" \"hosts\" {",
      "  count         = \"${length(var.hosts)}\"",
      "  name          = \"${var.hosts[count.index]}\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "resource \"vsphere_compute_cluster\" \"compute_cluster\" {",
      "  name            = \"terraform-compute-cluster-test\"",
      "  datacenter_id   = \"${data.vsphere_datacenter.dc.id}\"",
      "  host_system_ids = [\"${data.vsphere_host.hosts.*.id}\"]",
      "",
      "  drs_enabled          = true",
      "  drs_automation_level = \"fullyAutomated\"",
      "",
      "  ha_enabled = true",
      "}"
    ]
  },
  "vsphere-resource-compute_cluster_host_group": {
    "description": "Defines compute_cluster_host_group",
    "prefix": "tf-vsphere-resource-compute_cluster_host_group",
    "body": [
      "variable \"datacenter\" {",
      "  default = \"dc1\"",
      "}",
      "",
      "variable \"hosts\" {",
      "  default = [",
      "    \"esxi1\",",
      "    \"esxi2\",",
      "    \"esxi3\",",
      "  ]",
      "}",
      "",
      "data \"vsphere_datacenter\" \"dc\" {",
      "  name = \"${var.datacenter}\"",
      "}",
      "",
      "data \"vsphere_host\" \"hosts\" {",
      "  count         = \"${length(var.hosts)}\"",
      "  name          = \"${var.hosts[count.index]}\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "resource \"vsphere_compute_cluster\" \"compute_cluster\" {",
      "  name            = \"terraform-compute-cluster-test\"",
      "  datacenter_id   = \"${data.vsphere_datacenter.dc.id}\"",
      "  host_system_ids = [\"${data.vsphere_host.hosts.*.id}\"]",
      "",
      "  drs_enabled          = true",
      "  drs_automation_level = \"fullyAutomated\"",
      "",
      "  ha_enabled = true",
      "}",
      "",
      "resource \"vsphere_compute_cluster_host_group\" \"cluster_host_group\" {",
      "  name                = \"terraform-test-cluster-host-group\"",
      "  compute_cluster_id  = \"${vsphere_compute_cluster.compute_cluster.id}\"",
      "  host_system_ids     = [\"${data.vsphere_host.hosts.*.id}\"]",
      "}"
    ]
  },
  "vsphere-resource-compute_cluster_vm_affinity_rule": {
    "description": "Defines compute_cluster_vm_affinity_rule",
    "prefix": "tf-vsphere-resource-compute_cluster_vm_affinity_rule",
    "body": [
      "data \"vsphere_datacenter\" \"dc\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_datastore\" \"datastore\" {",
      "  name          = \"datastore1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_compute_cluster\" \"cluster\" {",
      "  name          = \"cluster1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_network\" \"network\" {",
      "  name          = \"network1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "resource \"vsphere_virtual_machine\" \"vm\" {",
      "  count            = 2",
      "  name             = \"terraform-test-${count.index}\"",
      "  resource_pool_id = \"${data.vsphere_compute_cluster.cluster.resource_pool_id}\"",
      "  datastore_id     = \"${data.vsphere_datastore.datastore.id}\"",
      "",
      "  num_cpus = 2",
      "  memory   = 2048",
      "  guest_id = \"other3xLinux64Guest\"",
      "",
      "  network_interface {",
      "    network_id = \"${data.vsphere_network.network.id}\"",
      "  }",
      "",
      "  disk {",
      "    label = \"disk0\"",
      "    size  = 20",
      "  }",
      "}",
      "",
      "resource \"vsphere_compute_cluster_vm_affinity_rule\" \"cluster_vm_affinity_rule\" {",
      "  name                = \"terraform-test-cluster-vm-affinity-rule\"",
      "  compute_cluster_id  = \"${data.vsphere_compute_cluster.cluster.id}\"",
      "  virtual_machine_ids = [\"${vsphere_virtual_machine.vm.*.id}\"]",
      "}"
    ]
  },
  "vsphere-resource-compute_cluster_vm_anti_affinity_rule": {
    "description": "Defines compute_cluster_vm_anti_affinity_rule",
    "prefix": "tf-vsphere-resource-compute_cluster_vm_anti_affinity_rule",
    "body": [
      "data \"vsphere_datacenter\" \"dc\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_datastore\" \"datastore\" {",
      "  name          = \"datastore1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_compute_cluster\" \"cluster\" {",
      "  name          = \"cluster1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_network\" \"network\" {",
      "  name          = \"network1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "resource \"vsphere_virtual_machine\" \"vm\" {",
      "  count            = 2",
      "  name             = \"terraform-test-${count.index}\"",
      "  resource_pool_id = \"${data.vsphere_compute_cluster.cluster.resource_pool_id}\"",
      "  datastore_id     = \"${data.vsphere_datastore.datastore.id}\"",
      "",
      "  num_cpus = 2",
      "  memory   = 2048",
      "  guest_id = \"other3xLinux64Guest\"",
      "",
      "  network_interface {",
      "    network_id = \"${data.vsphere_network.network.id}\"",
      "  }",
      "",
      "  disk {",
      "    label = \"disk0\"",
      "    size  = 20",
      "  }",
      "}",
      "",
      "resource \"vsphere_compute_cluster_vm_anti_affinity_rule\" \"cluster_vm_anti_affinity_rule\" {",
      "  name                = \"terraform-test-cluster-vm-anti-affinity-rule\"",
      "  compute_cluster_id  = \"${data.vsphere_compute_cluster.cluster.id}\"",
      "  virtual_machine_ids = [\"${vsphere_virtual_machine.vm.*.id}\"]",
      "}"
    ]
  },
  "vsphere-resource-compute_cluster_vm_dependency_rule": {
    "description": "Defines compute_cluster_vm_dependency_rule",
    "prefix": "tf-vsphere-resource-compute_cluster_vm_dependency_rule",
    "body": [
      "data \"vsphere_datacenter\" \"dc\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_datastore\" \"datastore\" {",
      "  name          = \"datastore1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_compute_cluster\" \"cluster\" {",
      "  name          = \"cluster1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_network\" \"network\" {",
      "  name          = \"network1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "resource \"vsphere_virtual_machine\" \"vm1\" {",
      "  name             = \"terraform-test1\"",
      "  resource_pool_id = \"${data.vsphere_compute_cluster.cluster.resource_pool_id}\"",
      "  datastore_id     = \"${data.vsphere_datastore.datastore.id}\"",
      "",
      "  num_cpus = 2",
      "  memory   = 2048",
      "  guest_id = \"other3xLinux64Guest\"",
      "",
      "  network_interface {",
      "    network_id = \"${data.vsphere_network.network.id}\"",
      "  }",
      "",
      "  disk {",
      "    label = \"disk0\"",
      "    size  = 20",
      "  }",
      "}",
      "",
      "resource \"vsphere_virtual_machine\" \"vm2\" {",
      "  name             = \"terraform-test2\"",
      "  resource_pool_id = \"${data.vsphere_compute_cluster.cluster.resource_pool_id}\"",
      "  datastore_id     = \"${data.vsphere_datastore.datastore.id}\"",
      "",
      "  num_cpus = 2",
      "  memory   = 2048",
      "  guest_id = \"other3xLinux64Guest\"",
      "",
      "  network_interface {",
      "    network_id = \"${data.vsphere_network.network.id}\"",
      "  }",
      "",
      "  disk {",
      "    label = \"disk0\"",
      "    size  = 20",
      "  }",
      "}",
      "",
      "resource \"vsphere_compute_cluster_vm_group\" \"cluster_vm_group1\" {",
      "  name                = \"terraform-test-cluster-vm-group1\"",
      "  compute_cluster_id  = \"${data.vsphere_compute_cluster.cluster.id}\"",
      "  virtual_machine_ids = [\"${vsphere_virtual_machine.vm1.id}\"]",
      "}",
      "",
      "resource \"vsphere_compute_cluster_vm_group\" \"cluster_vm_group2\" {",
      "  name                = \"terraform-test-cluster-vm-group2\"",
      "  compute_cluster_id  = \"${data.vsphere_compute_cluster.cluster.id}\"",
      "  virtual_machine_ids = [\"${vsphere_virtual_machine.vm2.id}\"]",
      "}",
      "",
      "resource \"vsphere_compute_cluster_vm_dependency_rule\" \"cluster_vm_dependency_rule\" {",
      "  compute_cluster_id       = \"${data.vsphere_compute_cluster.cluster.id}\"",
      "  name                     = \"terraform-test-cluster-vm-dependency-rule\"",
      "  dependency_vm_group_name = \"${vsphere_compute_cluster_vm_group.cluster_vm_group1.name}\"",
      "  vm_group_name            = \"${vsphere_compute_cluster_vm_group.cluster_vm_group2.name}\"",
      "}"
    ]
  },
  "vsphere-resource-compute_cluster_vm_group": {
    "description": "Defines compute_cluster_vm_group",
    "prefix": "tf-vsphere-resource-compute_cluster_vm_group",
    "body": [
      "data \"vsphere_datacenter\" \"dc\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_datastore\" \"datastore\" {",
      "  name          = \"datastore1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_compute_cluster\" \"cluster\" {",
      "  name          = \"cluster1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_network\" \"network\" {",
      "  name          = \"network1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "resource \"vsphere_virtual_machine\" \"vm\" {",
      "  count            = 2",
      "  name             = \"terraform-test-${count.index}\"",
      "  resource_pool_id = \"${data.vsphere_compute_cluster.cluster.resource_pool_id}\"",
      "  datastore_id     = \"${data.vsphere_datastore.datastore.id}\"",
      "",
      "  num_cpus = 2",
      "  memory   = 2048",
      "  guest_id = \"other3xLinux64Guest\"",
      "",
      "  network_interface {",
      "    network_id = \"${data.vsphere_network.network.id}\"",
      "  }",
      "",
      "  disk {",
      "    label = \"disk0\"",
      "    size  = 20",
      "  }",
      "}",
      "",
      "resource \"vsphere_compute_cluster_vm_group\" \"cluster_vm_group\" {",
      "  name                = \"terraform-test-cluster-vm-group\"",
      "  compute_cluster_id  = \"${data.vsphere_compute_cluster.cluster.id}\"",
      "  virtual_machine_ids = [\"${vsphere_virtual_machine.vm.*.id}\"]",
      "}"
    ]
  },
  "vsphere-resource-compute_cluster_vm_host_rule": {
    "description": "Defines compute_cluster_vm_host_rule",
    "prefix": "tf-vsphere-resource-compute_cluster_vm_host_rule",
    "body": [
      "data \"vsphere_datacenter\" \"dc\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_datastore\" \"datastore\" {",
      "  name          = \"datastore1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_compute_cluster\" \"cluster\" {",
      "  name          = \"cluster1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_host\" \"host\" {",
      "  name          = \"esxi1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_network\" \"network\" {",
      "  name          = \"network1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "resource \"vsphere_virtual_machine\" \"vm\" {",
      "  name             = \"terraform-test\"",
      "  resource_pool_id = \"${data.vsphere_compute_cluster.cluster.resource_pool_id}\"",
      "  datastore_id     = \"${data.vsphere_datastore.datastore.id}\"",
      "",
      "  num_cpus = 2",
      "  memory   = 2048",
      "  guest_id = \"other3xLinux64Guest\"",
      "",
      "  network_interface {",
      "    network_id = \"${data.vsphere_network.network.id}\"",
      "  }",
      "",
      "  disk {",
      "    label = \"disk0\"",
      "    size  = 20",
      "  }",
      "}",
      "",
      "resource \"vsphere_compute_cluster_vm_group\" \"cluster_vm_group\" {",
      "  name                = \"terraform-test-cluster-vm-group\"",
      "  compute_cluster_id  = \"${data.vsphere_compute_cluster.cluster.id}\"",
      "  virtual_machine_ids = [\"${vsphere_virtual_machine.vm.id}\"]",
      "}",
      "",
      "resource \"vsphere_compute_cluster_host_group\" \"cluster_host_group\" {",
      "  name               = \"terraform-test-cluster-vm-group\"",
      "  compute_cluster_id = \"${data.vsphere_compute_cluster.cluster.id}\"",
      "  host_system_ids    = [\"${data.vsphere_host.host.id}\"]",
      "}",
      "",
      "resource \"vsphere_compute_cluster_vm_host_rule\" \"cluster_vm_host_rule\" {",
      "  compute_cluster_id       = \"${data.vsphere_compute_cluster.cluster.id}\"",
      "  name                     = \"terraform-test-cluster-vm-host-rule\"",
      "  vm_group_name            = \"${vsphere_compute_cluster_vm_group.cluster_vm_group.name}\"",
      "  affinity_host_group_name = \"${vsphere_compute_cluster_host_group.cluster_host_group.name}\"",
      "}"
    ]
  },
  "vsphere-resource-custom_attribute": {
    "description": "Defines custom_attribute",
    "prefix": "tf-vsphere-resource-custom_attribute",
    "body": [
      "resource \"vsphere_custom_attribute\" \"attribute\" {",
      "  name                = \"terraform-test-attribute\"",
      "  managed_object_type = \"VirtualMachine\"",
      "}"
    ]
  },
  "vsphere-resource-datacenter": {
    "description": "Defines datacenter",
    "prefix": "tf-vsphere-resource-datacenter",
    "body": [
      "resource \"vsphere_datacenter\" \"prod_datacenter\" {",
      "  name       = \"my_prod_datacenter\"",
      "}"
    ]
  },
  "vsphere-resource-datastore_cluster": {
    "description": "Defines datastore_cluster",
    "prefix": "tf-vsphere-resource-datastore_cluster",
    "body": [
      "variable \"hosts\" {",
      "  default = [",
      "    \"esxi1\",",
      "    \"esxi2\",",
      "    \"esxi3\",",
      "  ]",
      "}",
      "",
      "data \"vsphere_datacenter\" \"datacenter\" {}",
      "",
      "data \"vsphere_host\" \"esxi_hosts\" {",
      "  count         = \"${length(var.hosts)}\"",
      "  name          = \"${var.hosts[count.index]}\"",
      "  datacenter_id = \"${data.vsphere_datacenter.datacenter.id}\"",
      "}",
      "",
      "resource \"vsphere_datastore_cluster\" \"datastore_cluster\" {",
      "  name          = \"terraform-datastore-cluster-test\"",
      "  datacenter_id = \"${data.vsphere_datacenter.datacenter.id}\"",
      "  sdrs_enabled  = true",
      "}",
      "",
      "resource \"vsphere_nas_datastore\" \"datastore1\" {",
      "  name                 = \"terraform-datastore-test1\"",
      "  host_system_ids      = [\"${data.vsphere_host.esxi_hosts.*.id}\"]",
      "  datastore_cluster_id = \"${vsphere_datastore_cluster.datastore_cluster.id}\"",
      "",
      "  type         = \"NFS\"",
      "  remote_hosts = [\"nfs\"]",
      "  remote_path  = \"/export/terraform-test1\"",
      "}",
      "",
      "resource \"vsphere_nas_datastore\" \"datastore2\" {",
      "  name                 = \"terraform-datastore-test2\"",
      "  host_system_ids      = [\"${data.vsphere_host.esxi_hosts.*.id}\"]",
      "  datastore_cluster_id = \"${vsphere_datastore_cluster.datastore_cluster.id}\"",
      "",
      "  type         = \"NFS\"",
      "  remote_hosts = [\"nfs\"]",
      "  remote_path  = \"/export/terraform-test2\"",
      "}"
    ]
  },
  "vsphere-resource-datastore_cluster_vm_anti_affinity_rule": {
    "description": "Defines datastore_cluster_vm_anti_affinity_rule",
    "prefix": "tf-vsphere-resource-datastore_cluster_vm_anti_affinity_rule",
    "body": [
      "data \"vsphere_datacenter\" \"dc\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_datastore_cluster\" \"datastore_cluster\" {",
      "  name          = \"datastore-cluster1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_compute_cluster\" \"cluster\" {",
      "  name          = \"cluster1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_network\" \"network\" {",
      "  name          = \"network1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "resource \"vsphere_virtual_machine\" \"vm\" {",
      "  count                = 2",
      "  name                 = \"terraform-test-${count.index}\"",
      "  resource_pool_id     = \"${data.vsphere_compute_cluster.cluster.resource_pool_id}\"",
      "  datastore_cluster_id = \"${data.vsphere_datastore_cluster.datastore_cluster.id}\"",
      "",
      "  num_cpus = 2",
      "  memory   = 2048",
      "  guest_id = \"other3xLinux64Guest\"",
      "",
      "  network_interface {",
      "    network_id = \"${data.vsphere_network.network.id}\"",
      "  }",
      "",
      "  disk {",
      "    label = \"disk0\"",
      "    size  = 20",
      "  }",
      "}",
      "",
      "resource \"vsphere_datastore_cluster_vm_anti_affinity_rule\" \"cluster_vm_anti_affinity_rule\" {",
      "  name                 = \"terraform-test-datastore-cluster-vm-anti-affinity-rule\"",
      "  datastore_cluster_id = \"${data.vsphere_datastore_cluster.datastore_cluster.id}\"",
      "  virtual_machine_ids  = [\"${vsphere_virtual_machine.vm.*.id}\"]",
      "}"
    ]
  },
  "vsphere-resource-distributed_port_group": {
    "description": "Defines distributed_port_group",
    "prefix": "tf-vsphere-resource-distributed_port_group",
    "body": [
      "variable \"esxi_hosts\" {",
      "  default = [",
      "    \"esxi1\",",
      "    \"esxi2\",",
      "    \"esxi3\",",
      "  ]",
      "}",
      "",
      "variable \"network_interfaces\" {",
      "  default = [",
      "    \"vmnic0\",",
      "    \"vmnic1\",",
      "    \"vmnic2\",",
      "    \"vmnic3\",",
      "  ]",
      "}",
      "",
      "data \"vsphere_datacenter\" \"dc\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_host\" \"host\" {",
      "  count         = \"${length(var.esxi_hosts)}\"",
      "  name          = \"${var.esxi_hosts[count.index]}\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "resource \"vsphere_distributed_virtual_switch\" \"dvs\" {",
      "  name          = \"terraform-test-dvs\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "",
      "  uplinks         = [\"uplink1\", \"uplink2\", \"uplink3\", \"uplink4\"]",
      "  active_uplinks  = [\"uplink1\", \"uplink2\"]",
      "  standby_uplinks = [\"uplink3\", \"uplink4\"]",
      "",
      "  host {",
      "    host_system_id = \"${data.vsphere_host.host.0.id}\"",
      "    devices        = [\"${var.network_interfaces}\"]",
      "  }",
      "",
      "  host {",
      "    host_system_id = \"${data.vsphere_host.host.1.id}\"",
      "    devices        = [\"${var.network_interfaces}\"]",
      "  }",
      "",
      "  host {",
      "    host_system_id = \"${data.vsphere_host.host.2.id}\"",
      "    devices        = [\"${var.network_interfaces}\"]",
      "  }",
      "}",
      "",
      "resource \"vsphere_distributed_port_group\" \"pg\" {",
      "  name                            = \"terraform-test-pg\"",
      "  distributed_virtual_switch_uuid = \"${vsphere_distributed_virtual_switch.dvs.id}\"",
      "",
      "  vlan_id = 1000",
      "}"
    ]
  },
  "vsphere-resource-distributed_virtual_switch": {
    "description": "Defines distributed_virtual_switch",
    "prefix": "tf-vsphere-resource-distributed_virtual_switch",
    "body": [
      "variable \"esxi_hosts\" {",
      "  default = [",
      "    \"esxi1\",",
      "    \"esxi2\",",
      "    \"esxi3\",",
      "  ]",
      "}",
      "",
      "variable \"network_interfaces\" {",
      "  default = [",
      "    \"vmnic0\",",
      "    \"vmnic1\",",
      "    \"vmnic2\",",
      "    \"vmnic3\",",
      "  ]",
      "}",
      "",
      "data \"vsphere_datacenter\" \"dc\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_host\" \"host\" {",
      "  count         = \"${length(var.esxi_hosts)}\"",
      "  name          = \"${var.esxi_hosts[count.index]}\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "resource \"vsphere_distributed_virtual_switch\" \"dvs\" {",
      "  name          = \"terraform-test-dvs\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "",
      "  uplinks         = [\"uplink1\", \"uplink2\", \"uplink3\", \"uplink4\"]",
      "  active_uplinks  = [\"uplink1\", \"uplink2\"]",
      "  standby_uplinks = [\"uplink3\", \"uplink4\"]",
      "",
      "  host {",
      "    host_system_id = \"${data.vsphere_host.host.0.id}\"",
      "    devices        = [\"${var.network_interfaces}\"]",
      "  }",
      "",
      "  host {",
      "    host_system_id = \"${data.vsphere_host.host.1.id}\"",
      "    devices        = [\"${var.network_interfaces}\"]",
      "  }",
      "",
      "  host {",
      "    host_system_id = \"${data.vsphere_host.host.2.id}\"",
      "    devices        = [\"${var.network_interfaces}\"]",
      "  }",
      "}"
    ]
  },
  "vsphere-resource-dpm_host_override": {
    "description": "Defines dpm_host_override",
    "prefix": "tf-vsphere-resource-dpm_host_override",
    "body": [
      "variable \"datacenter\" {",
      "  default = \"dc1\"",
      "}",
      "",
      "variable \"hosts\" {",
      "  default = [",
      "    \"esxi1\",",
      "    \"esxi2\",",
      "    \"esxi3\",",
      "  ]",
      "}",
      "",
      "data \"vsphere_datacenter\" \"dc\" {",
      "  name = \"${var.datacenter}\"",
      "}",
      "",
      "data \"vsphere_host\" \"hosts\" {",
      "  count         = \"${length(var.hosts)}\"",
      "  name          = \"${var.hosts[count.index]}\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "resource \"vsphere_compute_cluster\" \"compute_cluster\" {",
      "  name            = \"terraform-compute-cluster-test\"",
      "  datacenter_id   = \"${data.vsphere_datacenter.dc.id}\"",
      "  host_system_ids = [\"${data.vsphere_host.hosts.*.id}\"]",
      "",
      "  drs_enabled          = true",
      "  drs_automation_level = \"fullyAutomated\"",
      "}",
      "",
      "resource \"vsphere_dpm_host_override\" \"dpm_host_override\" {",
      "  compute_cluster_id   = \"${vsphere_compute_cluster.compute_cluster.id}\"",
      "  host_system_id       = \"${data.vsphere_host.hosts.0.id}\"",
      "  dpm_enabled          = true",
      "  dpm_automation_level = \"automated\"",
      "}"
    ]
  },
  "vsphere-resource-drs_vm_override": {
    "description": "Defines drs_vm_override",
    "prefix": "tf-vsphere-resource-drs_vm_override",
    "body": [
      "data \"vsphere_datacenter\" \"dc\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_datastore\" \"datastore\" {",
      "  name          = \"datastore1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_compute_cluster\" \"cluster\" {",
      "  name          = \"cluster1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_host\" \"host\" {",
      "  name          = \"esxi1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_network\" \"network\" {",
      "  name          = \"network1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "resource \"vsphere_virtual_machine\" \"vm\" {",
      "  name             = \"terraform-test\"",
      "  resource_pool_id = \"${data.vsphere_compute_cluster.cluster.resource_pool_id}\"",
      "  host_system_id   = \"${data.vsphere_host.host.id}\"",
      "  datastore_id     = \"${data.vsphere_datastore.datastore.id}\"",
      "",
      "  num_cpus = 2",
      "  memory   = 2048",
      "  guest_id = \"other3xLinux64Guest\"",
      "",
      "  network_interface {",
      "    network_id = \"${data.vsphere_network.network.id}\"",
      "  }",
      "",
      "  disk {",
      "    label = \"disk0\"",
      "    size  = 20",
      "  }",
      "}",
      "",
      "resource \"vsphere_drs_vm_override\" \"drs_vm_override\" {",
      "  compute_cluster_id = \"${data.vsphere_compute_cluster.cluster.id}\"",
      "  virtual_machine_id = \"${vsphere_virtual_machine.vm.id}\"",
      "  drs_enabled        = false",
      "}"
    ]
  },
  "vsphere-resource-file": {
    "description": "Defines file",
    "prefix": "tf-vsphere-resource-file",
    "body": [
      "resource \"vsphere_file\" \"ubuntu_disk_upload\" {",
      "  datacenter       = \"my_datacenter\"",
      "  datastore        = \"local\"",
      "  source_file      = \"/home/ubuntu/my_disks/custom_ubuntu.vmdk\"",
      "  destination_file = \"/my_path/disks/custom_ubuntu.vmdk\"",
      "}"
    ]
  },
  "vsphere-resource-folder": {
    "description": "Defines folder",
    "prefix": "tf-vsphere-resource-folder",
    "body": [
      "data \"vsphere_datacenter\" \"dc\" {}",
      "",
      "resource \"vsphere_folder\" \"folder\" {",
      "  path          = \"terraform-test-folder\"",
      "  type          = \"vm\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}"
    ]
  },
  "vsphere-resource-ha_vm_override": {
    "description": "Defines ha_vm_override",
    "prefix": "tf-vsphere-resource-ha_vm_override",
    "body": [
      "data \"vsphere_datacenter\" \"dc\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_datastore\" \"datastore\" {",
      "  name          = \"datastore1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_compute_cluster\" \"cluster\" {",
      "  name          = \"cluster1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_network\" \"network\" {",
      "  name          = \"network1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "resource \"vsphere_virtual_machine\" \"vm\" {",
      "  name             = \"terraform-test\"",
      "  resource_pool_id = \"${data.vsphere_compute_cluster.cluster.resource_pool_id}\"",
      "  datastore_id     = \"${data.vsphere_datastore.datastore.id}\"",
      "",
      "  num_cpus = 2",
      "  memory   = 2048",
      "  guest_id = \"other3xLinux64Guest\"",
      "",
      "  network_interface {",
      "    network_id = \"${data.vsphere_network.network.id}\"",
      "  }",
      "",
      "  disk {",
      "    label = \"disk0\"",
      "    size  = 20",
      "  }",
      "}",
      "",
      "resource \"vsphere_ha_vm_override\" \"ha_vm_override\" {",
      "  compute_cluster_id = \"${data.vsphere_compute_cluster.cluster.id}\"",
      "  virtual_machine_id = \"${vsphere_virtual_machine.vm.id}\"",
      "",
      "  ha_vm_restart_priority = \"highest\"",
      "}"
    ]
  },
  "vsphere-resource-host_port_group": {
    "description": "Defines host_port_group",
    "prefix": "tf-vsphere-resource-host_port_group",
    "body": [
      "data \"vsphere_datacenter\" \"datacenter\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_host\" \"esxi_host\" {",
      "  name          = \"esxi1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.datacenter.id}\"",
      "}",
      "",
      "resource \"vsphere_host_virtual_switch\" \"switch\" {",
      "  name           = \"vSwitchTerraformTest\"",
      "  host_system_id = \"${data.vsphere_host.esxi_host.id}\"",
      "",
      "  network_adapters = [\"vmnic0\", \"vmnic1\"]",
      "",
      "  active_nics  = [\"vmnic0\"]",
      "  standby_nics = [\"vmnic1\"]",
      "}",
      "",
      "resource \"vsphere_host_port_group\" \"pg\" {",
      "  name                = \"PGTerraformTest\"",
      "  host_system_id      = \"${data.vsphere_host.esxi_host.id}\"",
      "  virtual_switch_name = \"${vsphere_host_virtual_switch.switch.name}\"",
      "}"
    ]
  },
  "vsphere-resource-host_virtual_switch": {
    "description": "Defines host_virtual_switch",
    "prefix": "tf-vsphere-resource-host_virtual_switch",
    "body": [
      "data \"vsphere_datacenter\" \"datacenter\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_host\" \"host\" {",
      "  name          = \"esxi1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.datacenter.id}\"",
      "}",
      "",
      "resource \"vsphere_host_virtual_switch\" \"switch\" {",
      "  name           = \"vSwitchTerraformTest\"",
      "  host_system_id = \"${data.vsphere_host.host.id}\"",
      "",
      "  network_adapters = [\"vmnic0\", \"vmnic1\"]",
      "",
      "  active_nics  = [\"vmnic0\"]",
      "  standby_nics = [\"vmnic1\"]",
      "}"
    ]
  },
  "vsphere-resource-license": {
    "description": "Defines license",
    "prefix": "tf-vsphere-resource-license",
    "body": [
      "resource \"vsphere_license\" \"licenseKey\" {",
      "  license_key = \"452CQ-2EK54-K8742-00000-00000\"",
      "",
      "  labels {",
      "    VpxClientLicenseLabel = \"Hello World\"",
      "    Workflow = \"Hello World\"",
      "  }",
      "  ",
      "}"
    ]
  },
  "vsphere-resource-nas_datastore": {
    "description": "Defines nas_datastore",
    "prefix": "tf-vsphere-resource-nas_datastore",
    "body": [
      "variable \"hosts\" {",
      "  default = [",
      "    \"esxi1\",",
      "    \"esxi2\",",
      "    \"esxi3\",",
      "  ]",
      "}",
      "",
      "data \"vsphere_datacenter\" \"datacenter\" {}",
      "",
      "data \"vsphere_host\" \"esxi_hosts\" {",
      "  count         = \"${length(var.hosts)}\"",
      "  name          = \"${var.hosts[count.index]}\"",
      "  datacenter_id = \"${data.vsphere_datacenter.datacenter.id}\"",
      "}",
      "",
      "resource \"vsphere_nas_datastore\" \"datastore\" {",
      "  name            = \"terraform-test\"",
      "  host_system_ids = [\"${data.vsphere_host.esxi_hosts.*.id}\"]",
      "",
      "  type         = \"NFS\"",
      "  remote_hosts = [\"nfs\"]",
      "  remote_path  = \"/export/terraform-test\"",
      "}"
    ]
  },
  "vsphere-resource-resource_pool": {
    "description": "Defines resource_pool",
    "prefix": "tf-vsphere-resource-resource_pool",
    "body": [
      "variable \"datacenter\" {",
      "  default = \"dc1\"",
      "}",
      "",
      "variable \"cluster\" {",
      "  default = \"cluster1\"",
      "}",
      "",
      "data \"vsphere_datacenter\" \"dc\" {",
      "  name = \"${var.datacenter}\"",
      "}",
      "",
      "data \"vsphere_compute_cluster\" \"compute_cluster\" {",
      "  name          = \"${var.cluster}\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "resource \"vsphere_resource_pool\" \"resource_pool\" {",
      "  name                    = \"terraform-resource-pool-test\"",
      "  parent_resource_pool_id = \"${data.vsphere_compute_cluster.compute_cluster.resource_pool_id}\"",
      "}"
    ]
  },
  "vsphere-resource-storage_drs_vm_override": {
    "description": "Defines storage_drs_vm_override",
    "prefix": "tf-vsphere-resource-storage_drs_vm_override",
    "body": [
      "data \"vsphere_datacenter\" \"dc\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_datastore_cluster\" \"datastore_cluster\" {",
      "  name          = \"datastore-cluster1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_datastore\" \"member_datastore\" {",
      "  name          = \"datastore-cluster1-member1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_resource_pool\" \"pool\" {",
      "  name          = \"cluster1/Resources\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_network\" \"network\" {",
      "  name          = \"public\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "resource \"vsphere_virtual_machine\" \"vm\" {",
      "  name             = \"terraform-test\"",
      "  resource_pool_id = \"${data.vsphere_resource_pool.pool.id}\"",
      "  datastore_id     = \"${data.vsphere_datastore.member_datastore.id}\"",
      "",
      "  num_cpus = 2",
      "  memory   = 1024",
      "  guest_id = \"other3xLinux64Guest\"",
      "",
      "  network_interface {",
      "    network_id = \"${data.vsphere_network.network.id}\"",
      "  }",
      "",
      "  disk {",
      "    label = \"disk0\"",
      "    size  = 20",
      "  }",
      "}",
      "",
      "resource \"vsphere_storage_drs_vm_override\" \"drs_vm_override\" {",
      "  datastore_cluster_id = \"${data.vsphere_datastore_cluster.datastore_cluster.id}\"",
      "  virtual_machine_id   = \"${vsphere_virtual_machine.vm.id}\"",
      "  sdrs_enabled         = false",
      "}"
    ]
  },
  "vsphere-resource-tag": {
    "description": "Defines tag",
    "prefix": "tf-vsphere-resource-tag",
    "body": [
      "resource \"vsphere_tag_category\" \"category\" {",
      "  name        = \"terraform-test-category\"",
      "  cardinality = \"SINGLE\"",
      "  description = \"Managed by Terraform\"",
      "",
      "  associable_types = [",
      "    \"VirtualMachine\",",
      "    \"Datastore\",",
      "  ]",
      "}",
      "",
      "resource \"vsphere_tag\" \"tag\" {",
      "  name        = \"terraform-test-tag\"",
      "  category_id = \"${vsphere_tag_category.category.id}\"",
      "  description = \"Managed by Terraform\"",
      "}"
    ]
  },
  "vsphere-resource-tag_category": {
    "description": "Defines tag_category",
    "prefix": "tf-vsphere-resource-tag_category",
    "body": [
      "resource \"vsphere_tag_category\" \"category\" {",
      "  name        = \"terraform-test-category\"",
      "  description = \"Managed by Terraform\"",
      "  cardinality = \"SINGLE\"",
      "",
      "  associable_types = [",
      "    \"VirtualMachine\",",
      "    \"Datastore\",",
      "  ]",
      "}"
    ]
  },
  "vsphere-resource-vapp_container": {
    "description": "Defines vapp_container",
    "prefix": "tf-vsphere-resource-vapp_container",
    "body": [
      "variable \"datacenter\" {",
      "  default = \"dc1\"",
      "}",
      "",
      "variable \"cluster\" {",
      "  default = \"cluster1\"",
      "}",
      "",
      "data \"vsphere_datacenter\" \"dc\" {",
      "  name = \"${var.datacenter}\"",
      "}",
      "",
      "data \"vsphere_compute_cluster\" \"compute_cluster\" {",
      "  name          = \"${var.cluster}\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "resource \"vsphere_vapp_container\" \"vapp_container\" {",
      "  name                    = \"terraform-vapp-container-test\"",
      "  parent_resource_pool_id = \"${data.vsphere_compute_cluster.compute_cluster.id}\"",
      "}"
    ]
  },
  "vsphere-resource-vapp_entity": {
    "description": "Defines vapp_entity",
    "prefix": "tf-vsphere-resource-vapp_entity",
    "body": [
      "variable \"datacenter\" {",
      "  default = \"dc1\"",
      "}",
      "",
      "variable \"cluster\" {",
      "  default = \"cluster1\"",
      "}",
      "",
      "data \"vsphere_datacenter\" \"dc\" {",
      "  name = \"${var.datacenter}\"",
      "}",
      "",
      "data \"vsphere_compute_cluster\" \"compute_cluster\" {",
      "  name          = \"${var.cluster}\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_network\" \"network\" {",
      "  name          = \"network1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_datastore\" \"datastore\" {",
      "  name          = \"datastore1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "resource \"vsphere_vapp_container\" \"vapp_container\" {",
      "  name                    = \"terraform-vapp-container-test\"",
      "  parent_resource_pool_id = \"${data.vsphere_compute_cluster.compute_cluster.id}\"",
      "}",
      "",
      "resource \"vsphere_vapp_entity\" \"vapp_entity\" {",
      "  target_id    = \"vsphere_virtual_machine.vm.id\"",
      "  container_id = \"vsphere_vapp_container.vapp_container.id\"",
      "  start_action = \"non\"",
      "}",
      "",
      "resource \"vsphere_virtual_machine\" \"vm\" {",
      "  name             = \"terraform-virutal-machine-test\"",
      "  resource_pool_id = \"${vsphere_vapp_container.vapp_container.id}\"",
      "  datastore_id     = \"${data.vsphere_datastore.datastore.id}\"",
      "  num_cpus         = 2",
      "  memory           = 1024",
      "  guest_id         = \"ubuntu64Guest\"",
      "",
      "  disk {",
      "    label = \"disk0\"",
      "    size  = 1",
      "  }",
      "",
      "  network_interface {",
      "    network_id = \"${data.vsphere_network.network.id}\"",
      "  }",
      "}"
    ]
  },
  "vsphere-resource-virtual_disk": {
    "description": "Defines virtual_disk",
    "prefix": "tf-vsphere-resource-virtual_disk",
    "body": [
      "resource \"vsphere_virtual_disk\" \"myDisk\" {",
      "  size         = 2",
      "  vmdk_path    = \"myDisk.vmdk\"",
      "  datacenter   = \"Datacenter\"",
      "  datastore    = \"local\"",
      "  type         = \"thin\"",
      "}"
    ]
  },
  "vsphere-resource-virtual_machine": {
    "description": "Defines virtual_machine",
    "prefix": "tf-vsphere-resource-virtual_machine",
    "body": [
      "data \"vsphere_datacenter\" \"dc\" {",
      "  name = \"dc1\"",
      "}",
      "",
      "data \"vsphere_datastore\" \"datastore\" {",
      "  name          = \"datastore1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_compute_cluster\" \"cluster\" {",
      "  name          = \"cluster1\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "data \"vsphere_network\" \"network\" {",
      "  name          = \"public\"",
      "  datacenter_id = \"${data.vsphere_datacenter.dc.id}\"",
      "}",
      "",
      "resource \"vsphere_virtual_machine\" \"vm\" {",
      "  name             = \"terraform-test\"",
      "  resource_pool_id = \"${data.vsphere_compute_cluster.cluster.resource_pool_id}\"",
      "  datastore_id     = \"${data.vsphere_datastore.datastore.id}\"",
      "",
      "  num_cpus = 2",
      "  memory   = 1024",
      "  guest_id = \"other3xLinux64Guest\"",
      "",
      "  network_interface {",
      "    network_id = \"${data.vsphere_network.network.id}\"",
      "  }",
      "",
      "  disk {",
      "    label = \"disk0\"",
      "    size  = 20",
      "  }",
      "}"
    ]
  },
  "vsphere-resource-virtual_machine_snapshot": {
    "description": "Defines virtual_machine_snapshot",
    "prefix": "tf-vsphere-resource-virtual_machine_snapshot",
    "body": [
      "resource \"vsphere_virtual_machine_snapshot\" \"demo1\" {",
      "  virtual_machine_uuid = \"9aac5551-a351-4158-8c5c-15a71e8ec5c9\"",
      "  snapshot_name        = \"Snapshot Name\"",
      "  description          = \"This is Demo Snapshot\"",
      "  memory               = \"true\"",
      "  quiesce              = \"true\"",
      "  remove_children      = \"false\"",
      "  consolidate          = \"true\"",
      "}"
    ]
  },
  "vsphere-resource-vmfs_datastore": {
    "description": "Defines vmfs_datastore",
    "prefix": "tf-vsphere-resource-vmfs_datastore",
    "body": [
      "data \"vsphere_datacenter\" \"datacenter\" {}",
      "",
      "data \"vsphere_host\" \"esxi_host\" {",
      "  datacenter_id = \"${data.vsphere_datacenter.datacenter.id}\"",
      "}",
      "",
      "resource \"vsphere_vmfs_datastore\" \"datastore\" {",
      "  name           = \"terraform-test\"",
      "  host_system_id = \"${data.vsphere_host.esxi_host.id}\"",
      "",
      "  disks = [",
      "    \"mpx.vmhba1:C0:T1:L0\",",
      "    \"mpx.vmhba1:C0:T2:L0\",",
      "    \"mpx.vmhba1:C0:T2:L0\",",
      "  ]",
      "}"
    ]
  }
}